format 222
"awt" // jdk1.8::java::awt
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/awt/"
  java_package "java.awt"
  package_ref 146690 // image

  classview 144130 "awt"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 314114 "Rectangle"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Rectangle</code> specifies an area in a coordinate space that is
enclosed by the <code>Rectangle</code> object's upper-left point
{@code (x,y)}
in the coordinate space, its width, and its height.
<p>
A <code>Rectangle</code> object's <code>width</code> and
<code>height</code> are <code>public</code> fields. The constructors
that create a <code>Rectangle</code>, and the methods that can modify
one, do not prevent setting a negative value for width or height.
<p>
<a name=\"Empty\">
A {@code Rectangle} whose width or height is exactly zero has location
along those axes with zero dimension, but is otherwise considered empty.
The {@link #isEmpty} method will return true for such a {@code Rectangle}.
Methods which test if an empty {@code Rectangle} contains or intersects
a point or rectangle will always return false if either dimension is zero.
Methods which combine such a {@code Rectangle} with a point or rectangle
will include the location of the {@code Rectangle} on that axis in the
result as if the {@link #add(Point)} method were being called.
</a>
<p>
<a name=\"NonExistant\">
A {@code Rectangle} whose width or height is negative has neither
location nor dimension along those axes with negative dimensions.
Such a {@code Rectangle} is treated as non-existant along those axes.
Such a {@code Rectangle} is also empty with respect to containment
calculations and methods which test if it contains or intersects a
point or rectangle will always return false.
Methods which combine such a {@code Rectangle} with a point or rectangle
will ignore the {@code Rectangle} entirely in generating the result.
If two {@code Rectangle} objects are combined and each has a negative
dimension, the result will have at least one negative dimension.
</a>
<p>
Methods which affect only the location of a {@code Rectangle} will
operate on its location regardless of whether or not it has a negative
or zero dimension along either axis.
<p>
Note that a {@code Rectangle} constructed with the default no-argument
constructor will have dimensions of {@code 0x0} and therefore be empty.
That {@code Rectangle} will still have a location of {@code (0,0)} and
will contribute that location to the union and add operations.
Code attempting to accumulate the bounds of a set of points should
therefore initially construct the {@code Rectangle} with a specifically
negative width and height or it should use the first point in the set
to construct the {@code Rectangle}.
For example:
<pre>{@code
    Rectangle bounds = new Rectangle(0, 0, -1, -1);
    for (int i = 0; i < points.length; i++) {
        bounds.add(points[i]);
    }
}</pre>
or if we know that the points array contains at least one point:
<pre>{@code
    Rectangle bounds = new Rectangle(points[0]);
    for (int i = 1; i < points.length; i++) {
        bounds.add(points[i]);
    }
}</pre>
<p>
This class uses 32-bit integers to store its location and dimensions.
Frequently operations may produce a result that exceeds the range of
a 32-bit integer.
The methods will calculate their results in a way that avoids any
32-bit overflow for intermediate results and then choose the best
representation to store the final results back into the 32-bit fields
which hold the location and dimensions.
The location of the result will be stored into the {@link #x} and
{@link #y} fields by clipping the true result to the nearest 32-bit value.
The values stored into the {@link #width} and {@link #height} dimension
fields will be chosen as the 32-bit values that encompass the largest
part of the true result as possible.
Generally this means that the dimension will be clipped independently
to the range of 32-bit integers except that if the location had to be
moved to store it into its pair of 32-bit fields then the dimensions
will be adjusted relative to the \"best representation\" of the location.
If the true result had a negative dimension and was therefore
non-existant along one or both axes, the stored dimensions will be
negative numbers in those axes.
If the true result had a location that could be represented within
the range of 32-bit integers, but zero dimension along one or both
axes, then the stored dimensions will be zero in those axes.

@author      Sami Shaio
@since 1.0
"
      classrelation 735874 // <generalisation>
	relation 735874 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 735874 // <generalisation>
	  b parent class_ref 380674 // Rectangle2D
      end

      classrelation 736002 // <realization>
	relation 736002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 736002 // <realization>
	  b parent class_ref 379394 // Shape
      end

      classrelation 736130 // <realization>
	relation 736130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 736130 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 516610 "x"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The X coordinate of the upper-left corner of the <code>Rectangle</code>.

@serial
@see #setLocation(int, int)
@see #getLocation()
@since 1.0

"
      end

      attribute 516738 "y"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Y coordinate of the upper-left corner of the <code>Rectangle</code>.

@serial
@see #setLocation(int, int)
@see #getLocation()
@since 1.0

"
      end

      attribute 516866 "width"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The width of the <code>Rectangle</code>.
@serial
@see #setSize(int, int)
@see #getSize()
@since 1.0

"
      end

      attribute 516994 "height"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The height of the <code>Rectangle</code>.

@serial
@see #setSize(int, int)
@see #getSize()
@since 1.0

"
      end

      attribute 517122 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4345857070255674764L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 2319362 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      extra_member 136834 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 2319490 "Rectangle"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose upper-left corner
is at (0,&nbsp;0) in the coordinate space, and whose width and
height are both zero.
"
      end

      operation 2319618 "Rectangle"
	public explicit_return_type ""
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code>, initialized to match
the values of the specified <code>Rectangle</code>.
@param r  the <code>Rectangle</code> from which to copy initial values
          to a newly constructed <code>Rectangle</code>
@since 1.1
"
      end

      operation 2319746 "Rectangle"
	public explicit_return_type ""
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose upper-left corner is
specified as
{@code (x,y)} and whose width and height
are specified by the arguments of the same name.
@param     x the specified X coordinate
@param     y the specified Y coordinate
@param     width    the width of the <code>Rectangle</code>
@param     height   the height of the <code>Rectangle</code>
@since 1.0
"
      end

      operation 2319874 "Rectangle"
	public explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose upper-left corner
is at (0,&nbsp;0) in the coordinate space, and whose width and
height are specified by the arguments of the same name.
@param width the width of the <code>Rectangle</code>
@param height the height of the <code>Rectangle</code>
"
      end

      operation 2320002 "Rectangle"
	public explicit_return_type ""
	nparams 2
	  param inout name "p" type class_ref 323714 // Point
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose upper-left corner is
specified by the {@link Point} argument, and
whose width and height are specified by the
{@link Dimension} argument.
@param p a <code>Point</code> that is the upper-left corner of
the <code>Rectangle</code>
@param d a <code>Dimension</code>, representing the
width and height of the <code>Rectangle</code>
"
      end

      operation 2320130 "Rectangle"
	public explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose upper-left corner is the
specified <code>Point</code>, and whose width and height are both zero.
@param p a <code>Point</code> that is the top left corner
of the <code>Rectangle</code>
"
      end

      operation 2320258 "Rectangle"
	public explicit_return_type ""
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Rectangle</code> whose top left corner is
(0,&nbsp;0) and whose width and height are specified
by the <code>Dimension</code> argument.
@param d a <code>Dimension</code>, specifying width and height
"
      end

      operation 2320386 "getX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the X coordinate of the bounding <code>Rectangle</code> in
<code>double</code> precision.
@return the X coordinate of the bounding <code>Rectangle</code>.
"
      end

      operation 2320514 "getY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Y coordinate of the bounding <code>Rectangle</code> in
<code>double</code> precision.
@return the Y coordinate of the bounding <code>Rectangle</code>.
"
      end

      operation 2320642 "getWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of the bounding <code>Rectangle</code> in
<code>double</code> precision.
@return the width of the bounding <code>Rectangle</code>.
"
      end

      operation 2320770 "getHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height of the bounding <code>Rectangle</code> in
<code>double</code> precision.
@return the height of the bounding <code>Rectangle</code>.
"
      end

      operation 2320898 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the bounding <code>Rectangle</code> of this <code>Rectangle</code>.
<p>
This method is included for completeness, to parallel the
<code>getBounds</code> method of
{@link Component}.
@return    a new <code>Rectangle</code>, equal to the
bounding <code>Rectangle</code> for this <code>Rectangle</code>.
@see       java.awt.Component#getBounds
@see       #setBounds(Rectangle)
@see       #setBounds(int, int, int, int)
@since     1.1
"
      end

      operation 2321026 "getBounds2D"
	public return_type class_ref 380674 // Rectangle2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 2321154 "setBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounding <code>Rectangle</code> of this <code>Rectangle</code>
to match the specified <code>Rectangle</code>.
<p>
This method is included for completeness, to parallel the
<code>setBounds</code> method of <code>Component</code>.
@param r the specified <code>Rectangle</code>
@see       #getBounds
@see       java.awt.Component#setBounds(java.awt.Rectangle)
@since     1.1
"
      end

      operation 2321282 "setBounds"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounding <code>Rectangle</code> of this
<code>Rectangle</code> to the specified
<code>x</code>, <code>y</code>, <code>width</code>,
and <code>height</code>.
<p>
This method is included for completeness, to parallel the
<code>setBounds</code> method of <code>Component</code>.
@param x the new X coordinate for the upper-left
                   corner of this <code>Rectangle</code>
@param y the new Y coordinate for the upper-left
                   corner of this <code>Rectangle</code>
@param width the new width for this <code>Rectangle</code>
@param height the new height for this <code>Rectangle</code>
@see       #getBounds
@see       java.awt.Component#setBounds(int, int, int, int)
@since     1.1
"
      end

      operation 2321410 "setRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "width" explicit_type "double"
	  param in name "height" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bounds of this {@code Rectangle} to the integer bounds
which encompass the specified {@code x}, {@code y}, {@code width},
and {@code height}.
If the parameters specify a {@code Rectangle} that exceeds the
maximum range of integers, the result will be the best
representation of the specified {@code Rectangle} intersected
with the maximum integer bounds.
@param x the X coordinate of the upper-left corner of
                 the specified rectangle
@param y the Y coordinate of the upper-left corner of
                 the specified rectangle
@param width the width of the specified rectangle
@param height the new height of the specified rectangle
"
      end

      operation 2321538 "clip"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "v" explicit_type "double"
	  param inout name "doceil" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return best integer representation for v, clipped to integer
 range and floor-ed or ceiling-ed, depending on the boolean."
      end

      operation 2321666 "reshape"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the bounding <code>Rectangle</code> of this
<code>Rectangle</code> to the specified
<code>x</code>, <code>y</code>, <code>width</code>,
and <code>height</code>.
<p>
@param x the new X coordinate for the upper-left
                   corner of this <code>Rectangle</code>
@param y the new Y coordinate for the upper-left
                   corner of this <code>Rectangle</code>
@param width the new width for this <code>Rectangle</code>
@param height the new height for this <code>Rectangle</code>
@deprecated As of JDK version 1.1,
replaced by <code>setBounds(int, int, int, int)</code>.
"
      end

      operation 2321794 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location of this <code>Rectangle</code>.
<p>
This method is included for completeness, to parallel the
<code>getLocation</code> method of <code>Component</code>.
@return the <code>Point</code> that is the upper-left corner of
                 this <code>Rectangle</code>.
@see       java.awt.Component#getLocation
@see       #setLocation(Point)
@see       #setLocation(int, int)
@since     1.1
"
      end

      operation 2321922 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves this <code>Rectangle</code> to the specified location.
<p>
This method is included for completeness, to parallel the
<code>setLocation</code> method of <code>Component</code>.
@param p the <code>Point</code> specifying the new location
               for this <code>Rectangle</code>
@see       java.awt.Component#setLocation(java.awt.Point)
@see       #getLocation
@since     1.1
"
      end

      operation 2322050 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves this <code>Rectangle</code> to the specified location.
<p>
This method is included for completeness, to parallel the
<code>setLocation</code> method of <code>Component</code>.
@param x the X coordinate of the new location
@param y the Y coordinate of the new location
@see       #getLocation
@see       java.awt.Component#setLocation(int, int)
@since     1.1
"
      end

      operation 2322178 "move"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Moves this <code>Rectangle</code> to the specified location.
<p>
@param x the X coordinate of the new location
@param y the Y coordinate of the new location
@deprecated As of JDK version 1.1,
replaced by <code>setLocation(int, int)</code>.
"
      end

      operation 2322306 "translate"
	public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates this <code>Rectangle</code> the indicated distance,
to the right along the X coordinate axis, and
downward along the Y coordinate axis.
@param dx the distance to move this <code>Rectangle</code>
                along the X axis
@param dy the distance to move this <code>Rectangle</code>
                along the Y axis
@see       java.awt.Rectangle#setLocation(int, int)
@see       java.awt.Rectangle#setLocation(java.awt.Point)
"
      end

      operation 2322434 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of this <code>Rectangle</code>, represented by
the returned <code>Dimension</code>.
<p>
This method is included for completeness, to parallel the
<code>getSize</code> method of <code>Component</code>.
@return a <code>Dimension</code>, representing the size of
           this <code>Rectangle</code>.
@see       java.awt.Component#getSize
@see       #setSize(Dimension)
@see       #setSize(int, int)
@since     1.1
"
      end

      operation 2322562 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this <code>Rectangle</code> to match the
specified <code>Dimension</code>.
<p>
This method is included for completeness, to parallel the
<code>setSize</code> method of <code>Component</code>.
@param d the new size for the <code>Dimension</code> object
@see       java.awt.Component#setSize(java.awt.Dimension)
@see       #getSize
@since     1.1
"
      end

      operation 2322690 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this <code>Rectangle</code> to the specified
width and height.
<p>
This method is included for completeness, to parallel the
<code>setSize</code> method of <code>Component</code>.
@param width the new width for this <code>Rectangle</code>
@param height the new height for this <code>Rectangle</code>
@see       java.awt.Component#setSize(int, int)
@see       #getSize
@since     1.1
"
      end

      operation 2322818 "resize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the size of this <code>Rectangle</code> to the specified
width and height.
<p>
@param width the new width for this <code>Rectangle</code>
@param height the new height for this <code>Rectangle</code>
@deprecated As of JDK version 1.1,
replaced by <code>setSize(int, int)</code>.
"
      end

      operation 2322946 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this <code>Rectangle</code> contains the
specified <code>Point</code>.
@param p the <code>Point</code> to test
@return    <code>true</code> if the specified <code>Point</code>
           is inside this <code>Rectangle</code>;
           <code>false</code> otherwise.
@since     1.1
"
      end

      operation 2323074 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this <code>Rectangle</code> contains the
point at the specified location {@code (x,y)}.

@param  x the specified X coordinate
@param  y the specified Y coordinate
@return    <code>true</code> if the point
           {@code (x,y)} is inside this
           <code>Rectangle</code>;
           <code>false</code> otherwise.
@since     1.1
"
      end

      operation 2323202 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this <code>Rectangle</code> entirely contains
the specified <code>Rectangle</code>.

@param     r   the specified <code>Rectangle</code>
@return    <code>true</code> if the <code>Rectangle</code>
           is contained entirely inside this <code>Rectangle</code>;
           <code>false</code> otherwise
@since     1.2
"
      end

      operation 2323330 "contains"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	  param in name "W" explicit_type "int"
	  param in name "H" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this <code>Rectangle</code> entirely contains
the <code>Rectangle</code>
at the specified location {@code (X,Y)} with the
specified dimensions {@code (W,H)}.
@param     X the specified X coordinate
@param     Y the specified Y coordinate
@param     W   the width of the <code>Rectangle</code>
@param     H   the height of the <code>Rectangle</code>
@return    <code>true</code> if the <code>Rectangle</code> specified by
           {@code (X, Y, W, H)}
           is entirely enclosed inside this <code>Rectangle</code>;
           <code>false</code> otherwise.
@since     1.1
"
      end

      operation 2323458 "inside"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Checks whether or not this <code>Rectangle</code> contains the
point at the specified location {@code (X,Y)}.

@param  X the specified X coordinate
@param  Y the specified Y coordinate
@return    <code>true</code> if the point
           {@code (X,Y)} is inside this
           <code>Rectangle</code>;
           <code>false</code> otherwise.
@deprecated As of JDK version 1.1,
replaced by <code>contains(int, int)</code>.
"
      end

      operation 2323586 "intersects"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether or not this <code>Rectangle</code> and the specified
<code>Rectangle</code> intersect. Two rectangles intersect if
their intersection is nonempty.

@param r the specified <code>Rectangle</code>
@return    <code>true</code> if the specified <code>Rectangle</code>
           and this <code>Rectangle</code> intersect;
           <code>false</code> otherwise.
"
      end

      operation 2323714 "intersection"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the intersection of this <code>Rectangle</code> with the
specified <code>Rectangle</code>. Returns a new <code>Rectangle</code>
that represents the intersection of the two rectangles.
If the two rectangles do not intersect, the result will be
an empty rectangle.

@param     r   the specified <code>Rectangle</code>
@return    the largest <code>Rectangle</code> contained in both the
           specified <code>Rectangle</code> and in
           this <code>Rectangle</code>; or if the rectangles
           do not intersect, an empty rectangle.
"
      end

      operation 2323842 "union"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the union of this <code>Rectangle</code> with the
specified <code>Rectangle</code>. Returns a new
<code>Rectangle</code> that
represents the union of the two rectangles.
<p>
If either {@code Rectangle} has any dimension less than zero
the rules for <a href=#NonExistant>non-existant</a> rectangles
apply.
If only one has a dimension less than zero, then the result
will be a copy of the other {@code Rectangle}.
If both have dimension less than zero, then the result will
have at least one dimension less than zero.
<p>
If the resulting {@code Rectangle} would have a dimension
too large to be expressed as an {@code int}, the result
will have a dimension of {@code Integer.MAX_VALUE} along
that dimension.
@param r the specified <code>Rectangle</code>
@return    the smallest <code>Rectangle</code> containing both
           the specified <code>Rectangle</code> and this
           <code>Rectangle</code>.
"
      end

      operation 2323970 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "newx" explicit_type "int"
	  param in name "newy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a point, specified by the integer arguments {@code newx,newy}
to the bounds of this {@code Rectangle}.
<p>
If this {@code Rectangle} has any dimension less than zero,
the rules for <a href=#NonExistant>non-existant</a>
rectangles apply.
In that case, the new bounds of this {@code Rectangle} will
have a location equal to the specified coordinates and
width and height equal to zero.
<p>
After adding a point, a call to <code>contains</code> with the
added point as an argument does not necessarily return
<code>true</code>. The <code>contains</code> method does not
return <code>true</code> for points on the right or bottom
edges of a <code>Rectangle</code>. Therefore, if the added point
falls on the right or bottom edge of the enlarged
<code>Rectangle</code>, <code>contains</code> returns
<code>false</code> for that point.
If the specified point must be contained within the new
{@code Rectangle}, a 1x1 rectangle should be added instead:
<pre>
    r.add(newx, newy, 1, 1);
</pre>
@param newx the X coordinate of the new point
@param newy the Y coordinate of the new point
"
      end

      operation 2324098 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pt" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified {@code Point} to the bounds of this
{@code Rectangle}.
<p>
If this {@code Rectangle} has any dimension less than zero,
the rules for <a href=#NonExistant>non-existant</a>
rectangles apply.
In that case, the new bounds of this {@code Rectangle} will
have a location equal to the coordinates of the specified
{@code Point} and width and height equal to zero.
<p>
After adding a <code>Point</code>, a call to <code>contains</code>
with the added <code>Point</code> as an argument does not
necessarily return <code>true</code>. The <code>contains</code>
method does not return <code>true</code> for points on the right
or bottom edges of a <code>Rectangle</code>. Therefore if the added
<code>Point</code> falls on the right or bottom edge of the
enlarged <code>Rectangle</code>, <code>contains</code> returns
<code>false</code> for that <code>Point</code>.
If the specified point must be contained within the new
{@code Rectangle}, a 1x1 rectangle should be added instead:
<pre>
    r.add(pt.x, pt.y, 1, 1);
</pre>
@param pt the new <code>Point</code> to add to this
          <code>Rectangle</code>
"
      end

      operation 2324226 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>Rectangle</code> to this <code>Rectangle</code>.
The resulting <code>Rectangle</code> is the union of the two
rectangles.
<p>
If either {@code Rectangle} has any dimension less than 0, the
result will have the dimensions of the other {@code Rectangle}.
If both {@code Rectangle}s have at least one dimension less
than 0, the result will have at least one dimension less than 0.
<p>
If either {@code Rectangle} has one or both dimensions equal
to 0, the result along those axes with 0 dimensions will be
equivalent to the results obtained by adding the corresponding
origin coordinate to the result rectangle along that axis,
similar to the operation of the {@link #add(Point)} method,
but contribute no further dimension beyond that.
<p>
If the resulting {@code Rectangle} would have a dimension
too large to be expressed as an {@code int}, the result
will have a dimension of {@code Integer.MAX_VALUE} along
that dimension.
@param  r the specified <code>Rectangle</code>
"
      end

      operation 2324354 "grow"
	public explicit_return_type "void"
	nparams 2
	  param in name "h" explicit_type "int"
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes the <code>Rectangle</code> both horizontally and vertically.
<p>
This method modifies the <code>Rectangle</code> so that it is
<code>h</code> units larger on both the left and right side,
and <code>v</code> units larger at both the top and bottom.
<p>
The new <code>Rectangle</code> has {@code (x - h, y - v)}
as its upper-left corner,
width of {@code (width + 2h)},
and a height of {@code (height + 2v)}.
<p>
If negative values are supplied for <code>h</code> and
<code>v</code>, the size of the <code>Rectangle</code>
decreases accordingly.
The {@code grow} method will check for integer overflow
and underflow, but does not check whether the resulting
values of {@code width} and {@code height} grow
from negative to non-negative or shrink from non-negative
to negative.
@param h the horizontal expansion
@param v the vertical expansion
"
      end

      operation 2324482 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 2324610 "outcode"
	public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 2324738 "createIntersection"
	public return_type class_ref 380674 // Rectangle2D
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 2324866 "createUnion"
	public return_type class_ref 380674 // Rectangle2D
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 2324994 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether two rectangles are equal.
<p>
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>Rectangle</code> object that has the
same upper-left corner, width, and height as
this <code>Rectangle</code>.
@param obj the <code>Object</code> to compare with
               this <code>Rectangle</code>
@return    <code>true</code> if the objects are equal;
           <code>false</code> otherwise.
"
      end

      operation 2325122 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> representing this
<code>Rectangle</code> and its values.
@return a <code>String</code> representing this
              <code>Rectangle</code> object's coordinate and size values.
"
      end
    end

    class 316802 "Dimension"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Dimension</code> class encapsulates the width and
height of a component (in integer precision) in a single object.
The class is
associated with certain properties of components. Several methods
defined by the <code>Component</code> class and the
<code>LayoutManager</code> interface return a
<code>Dimension</code> object.
<p>
Normally the values of <code>width</code>
and <code>height</code> are non-negative integers.
The constructors that allow you to create a dimension do
not prevent you from setting a negative value for these properties.
If the value of <code>width</code> or <code>height</code> is
negative, the behavior of some methods defined by other objects is
undefined.

@author      Sami Shaio
@author      Arthur van Hoff
@see         java.awt.Component
@see         java.awt.LayoutManager
@since       1.0
"
      classrelation 2911746 // <generalisation>
	relation 2911746 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2911746 // <generalisation>
	  b parent class_ref 381186 // Dimension2D
      end

      classrelation 2911874 // <realization>
	relation 2911874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2911874 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1352706 "width"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The width dimension; negative values can be used.

@serial
@see #getSize
@see #setSize
@since 1.0

"
      end

      attribute 1352834 "height"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The height dimension; negative values can be used.

@serial
@see #getSize
@see #setSize
@since 1.0

"
      end

      attribute 1352962 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4723952579491349524L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6175490 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      extra_member 149122 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6175618 "Dimension"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>Dimension</code> with a width
of zero and a height of zero.
"
      end

      operation 6175746 "Dimension"
	public explicit_return_type ""
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>Dimension</code> whose width
and height are the same as for the specified dimension.

@param    d   the specified dimension for the
              <code>width</code> and
              <code>height</code> values
"
      end

      operation 6175874 "Dimension"
	public explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>Dimension</code> and initializes
it to the specified width and specified height.

@param width the specified width
@param height the specified height
"
      end

      operation 6176002 "getWidth"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6176130 "getHeight"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6176258 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "double"
	  param in name "height" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this <code>Dimension</code> object to
the specified width and height in double precision.
Note that if <code>width</code> or <code>height</code>
are larger than <code>Integer.MAX_VALUE</code>, they will
be reset to <code>Integer.MAX_VALUE</code>.

@param width  the new width for the <code>Dimension</code> object
@param height the new height for the <code>Dimension</code> object
@since 1.2
"
      end

      operation 6176386 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the size of this <code>Dimension</code> object.
This method is included for completeness, to parallel the
<code>getSize</code> method defined by <code>Component</code>.

@return   the size of this dimension, a new instance of
          <code>Dimension</code> with the same width and height
@see      java.awt.Dimension#setSize
@see      java.awt.Component#getSize
@since    1.1
"
      end

      operation 6176514 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this <code>Dimension</code> object to the specified size.
This method is included for completeness, to parallel the
<code>setSize</code> method defined by <code>Component</code>.
@param    d  the new size for this <code>Dimension</code> object
@see      java.awt.Dimension#getSize
@see      java.awt.Component#setSize
@since    1.1
"
      end

      operation 6176642 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of this <code>Dimension</code> object
to the specified width and height.
This method is included for completeness, to parallel the
<code>setSize</code> method defined by <code>Component</code>.

@param    width   the new width for this <code>Dimension</code> object
@param    height  the new height for this <code>Dimension</code> object
@see      java.awt.Dimension#getSize
@see      java.awt.Component#setSize
@since    1.1
"
      end

      operation 6176770 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether two dimension objects have equal values.
"
      end

      operation 6176898 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code for this <code>Dimension</code>.

@return    a hash code for this <code>Dimension</code>
"
      end

      operation 6177026 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the values of this
<code>Dimension</code> object's <code>height</code> and
<code>width</code> fields. This method is intended to be used only
for debugging purposes, and the content and format of the returned
string may vary between implementations. The returned string may be
empty but may not be <code>null</code>.

@return  a string representation of this <code>Dimension</code>
         object
"
      end
    end

    class 323458 "Color"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Color</code> class is used to encapsulate colors in the default
sRGB color space or colors in arbitrary color spaces identified by a
{@link ColorSpace}.  Every color has an implicit alpha value of 1.0 or
an explicit one provided in the constructor.  The alpha value
defines the transparency of a color and can be represented by
a float value in the range 0.0&nbsp;-&nbsp;1.0 or 0&nbsp;-&nbsp;255.
An alpha value of 1.0 or 255 means that the color is completely
opaque and an alpha value of 0 or 0.0 means that the color is
completely transparent.
When constructing a <code>Color</code> with an explicit alpha or
getting the color/alpha components of a <code>Color</code>, the color
components are never premultiplied by the alpha component.
<p>
The default color space for the Java 2D(tm) API is sRGB, a proposed
standard RGB color space.  For further information on sRGB,
see <A href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">
http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html
</A>.
<p>
@version     10 Feb 1997
@author      Sami Shaio
@author      Arthur van Hoff
@see         ColorSpace
@see         AlphaComposite
"
      classrelation 2900098 // <realization>
	relation 2900098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2900098 // <realization>
	  b parent class_ref 860418 // Paint
      end

      classrelation 2900226 // <realization>
	relation 2900226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2900226 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2900354 // white (<unidirectional association>)
	relation 2900354 --->
	  a role_name "white" init_value " new Color(255, 255, 255)" class_relation const_relation public
	    comment "
The color white.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900354 // white (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2900482 // WHITE (<unidirectional association>)
	relation 2900482 --->
	  a role_name "WHITE" init_value " white" class_relation const_relation public
	    comment "
The color white.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900482 // WHITE (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2900610 // lightGray (<unidirectional association>)
	relation 2900610 --->
	  a role_name "lightGray" init_value " new Color(192, 192, 192)" class_relation const_relation public
	    comment "
The color light gray.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900610 // lightGray (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2900738 // LIGHT_GRAY (<unidirectional association>)
	relation 2900738 --->
	  a role_name "LIGHT_GRAY" init_value " lightGray" class_relation const_relation public
	    comment "
The color light gray.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900738 // LIGHT_GRAY (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2900866 // gray (<unidirectional association>)
	relation 2900866 --->
	  a role_name "gray" init_value " new Color(128, 128, 128)" class_relation const_relation public
	    comment "
The color gray.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900866 // gray (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2900994 // GRAY (<unidirectional association>)
	relation 2900994 --->
	  a role_name "GRAY" init_value " gray" class_relation const_relation public
	    comment "
The color gray.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2900994 // GRAY (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901122 // darkGray (<unidirectional association>)
	relation 2901122 --->
	  a role_name "darkGray" init_value " new Color(64, 64, 64)" class_relation const_relation public
	    comment "
The color dark gray.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901122 // darkGray (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901250 // DARK_GRAY (<unidirectional association>)
	relation 2901250 --->
	  a role_name "DARK_GRAY" init_value " darkGray" class_relation const_relation public
	    comment "
The color dark gray.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901250 // DARK_GRAY (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901378 // black (<unidirectional association>)
	relation 2901378 --->
	  a role_name "black" init_value " new Color(0, 0, 0)" class_relation const_relation public
	    comment "
The color black.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901378 // black (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901506 // BLACK (<unidirectional association>)
	relation 2901506 --->
	  a role_name "BLACK" init_value " black" class_relation const_relation public
	    comment "
The color black.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901506 // BLACK (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901634 // red (<unidirectional association>)
	relation 2901634 --->
	  a role_name "red" init_value " new Color(255, 0, 0)" class_relation const_relation public
	    comment "
The color red.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901634 // red (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901762 // RED (<unidirectional association>)
	relation 2901762 --->
	  a role_name "RED" init_value " red" class_relation const_relation public
	    comment "
The color red.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901762 // RED (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2901890 // pink (<unidirectional association>)
	relation 2901890 --->
	  a role_name "pink" init_value " new Color(255, 175, 175)" class_relation const_relation public
	    comment "
The color pink.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2901890 // pink (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902018 // PINK (<unidirectional association>)
	relation 2902018 --->
	  a role_name "PINK" init_value " pink" class_relation const_relation public
	    comment "
The color pink.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902018 // PINK (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902146 // orange (<unidirectional association>)
	relation 2902146 --->
	  a role_name "orange" init_value " new Color(255, 200, 0)" class_relation const_relation public
	    comment "
The color orange.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902146 // orange (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902274 // ORANGE (<unidirectional association>)
	relation 2902274 --->
	  a role_name "ORANGE" init_value " orange" class_relation const_relation public
	    comment "
The color orange.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902274 // ORANGE (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902402 // yellow (<unidirectional association>)
	relation 2902402 --->
	  a role_name "yellow" init_value " new Color(255, 255, 0)" class_relation const_relation public
	    comment "
The color yellow.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902402 // yellow (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902530 // YELLOW (<unidirectional association>)
	relation 2902530 --->
	  a role_name "YELLOW" init_value " yellow" class_relation const_relation public
	    comment "
The color yellow.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902530 // YELLOW (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902658 // green (<unidirectional association>)
	relation 2902658 --->
	  a role_name "green" init_value " new Color(0, 255, 0)" class_relation const_relation public
	    comment "
The color green.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902658 // green (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902786 // GREEN (<unidirectional association>)
	relation 2902786 --->
	  a role_name "GREEN" init_value " green" class_relation const_relation public
	    comment "
The color green.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902786 // GREEN (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2902914 // magenta (<unidirectional association>)
	relation 2902914 --->
	  a role_name "magenta" init_value " new Color(255, 0, 255)" class_relation const_relation public
	    comment "
The color magenta.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2902914 // magenta (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2903042 // MAGENTA (<unidirectional association>)
	relation 2903042 --->
	  a role_name "MAGENTA" init_value " magenta" class_relation const_relation public
	    comment "
The color magenta.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903042 // MAGENTA (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2903170 // cyan (<unidirectional association>)
	relation 2903170 --->
	  a role_name "cyan" init_value " new Color(0, 255, 255)" class_relation const_relation public
	    comment "
The color cyan.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903170 // cyan (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2903298 // CYAN (<unidirectional association>)
	relation 2903298 --->
	  a role_name "CYAN" init_value " cyan" class_relation const_relation public
	    comment "
The color cyan.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903298 // CYAN (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2903426 // blue (<unidirectional association>)
	relation 2903426 --->
	  a role_name "blue" init_value " new Color(0, 0, 255)" class_relation const_relation public
	    comment "
The color blue.  In the default sRGB space.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903426 // blue (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2903554 // BLUE (<unidirectional association>)
	relation 2903554 --->
	  a role_name "BLUE" init_value " blue" class_relation const_relation public
	    comment "
The color blue.  In the default sRGB space.
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903554 // BLUE (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 1344642 "value"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The color value.
@serial
@see #getRGB

"
      end

      attribute 1344770 "frgbvalue"
	private explicit_type "float"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The color value in the default sRGB <code>ColorSpace</code> as
<code>float</code> components (no alpha).
If <code>null</code> after object construction, this must be an
sRGB color constructed with 8-bit precision, so compute from the
<code>int</code> color value.
@serial
@see #getRGBColorComponents
@see #getRGBComponents

"
      end

      attribute 1344898 "fvalue"
	private explicit_type "float"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The color value in the native <code>ColorSpace</code> as
<code>float</code> components (no alpha).
If <code>null</code> after object construction, this must be an
sRGB color constructed with 8-bit precision, so compute from the
<code>int</code> color value.
@serial
@see #getRGBColorComponents
@see #getRGBComponents

"
      end

      attribute 1345026 "falpha"
	private explicit_type "float"
	init_value " 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The alpha value as a <code>float</code> component.
If <code>frgbvalue</code> is <code>null</code>, this is not valid
data, so compute from the <code>int</code> color value.
@serial
@see #getRGBComponents
@see #getComponents

"
      end

      classrelation 2903682 // cs (<unidirectional association>)
	relation 2903682 --->
	  a role_name "cs" init_value " null" private
	    comment "
The <code>ColorSpace</code>.  If <code>null</code>, then it's
default is sRGB.
@serial
@see #getColor
@see #getColorSpace
@see #getColorComponents

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903682 // cs (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      attribute 1345154 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 118526816881161077L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6137730 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      extra_member 148610 "initialization"
	
	cpp "" ""
	java "  static {
        /** 4112352 - Calling getDefaultToolkit()
         ** here can cause this class to be accessed before it is fully
         ** initialized. DON'T DO IT!!!
         **
         ** Toolkit.getDefaultToolkit();
         **/

        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6137858 "testColorValueRange"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the color integer components supplied for validity.
Throws an {@link IllegalArgumentException} if the value is out of
range.
@param r the Red component
@param g the Green component
@param b the Blue component
"
      end

      operation 6137986 "testColorValueRange"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the color <code>float</code> components supplied for
validity.
Throws an <code>IllegalArgumentException</code> if the value is out
of range.
@param r the Red component
@param g the Green component
@param b the Blue component
"
      end

      operation 6138114 "Color"
	public explicit_return_type ""
	nparams 3
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an opaque sRGB color with the specified red, green,
and blue values in the range (0 - 255).
The actual color used in rendering depends
on finding the best match given the color space
available for a given output device.
Alpha is defaulted to 255.

@throws IllegalArgumentException if <code>r</code>, <code>g</code>
       or <code>b</code> are outside of the range
       0 to 255, inclusive
@param r the red component
@param g the green component
@param b the blue component
@see #getRed
@see #getGreen
@see #getBlue
@see #getRGB
"
      end

      operation 6138242 "Color"
	public explicit_return_type ""
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"red\", \"green\", \"blue\", \"alpha\"})
"
	
	
	
	comment "Creates an sRGB color with the specified red, green, blue, and alpha
values in the range (0 - 255).

@throws IllegalArgumentException if <code>r</code>, <code>g</code>,
       <code>b</code> or <code>a</code> are outside of the range
       0 to 255, inclusive
@param r the red component
@param g the green component
@param b the blue component
@param a the alpha component
@see #getRed
@see #getGreen
@see #getBlue
@see #getAlpha
@see #getRGB
"
      end

      operation 6138370 "Color"
	public explicit_return_type ""
	nparams 1
	  param in name "rgb" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an opaque sRGB color with the specified combined RGB value
consisting of the red component in bits 16-23, the green component
in bits 8-15, and the blue component in bits 0-7.  The actual color
used in rendering depends on finding the best match given the
color space available for a particular output device.  Alpha is
defaulted to 255.

@param rgb the combined RGB components
@see java.awt.image.ColorModel#getRGBdefault
@see #getRed
@see #getGreen
@see #getBlue
@see #getRGB
"
      end

      operation 6138498 "Color"
	public explicit_return_type ""
	nparams 2
	  param in name "rgba" explicit_type "int"
	  param inout name "hasalpha" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an sRGB color with the specified combined RGBA value consisting
of the alpha component in bits 24-31, the red component in bits 16-23,
the green component in bits 8-15, and the blue component in bits 0-7.
If the <code>hasalpha</code> argument is <code>false</code>, alpha
is defaulted to 255.

@param rgba the combined RGBA components
@param hasalpha <code>true</code> if the alpha bits are valid;
       <code>false</code> otherwise
@see java.awt.image.ColorModel#getRGBdefault
@see #getRed
@see #getGreen
@see #getBlue
@see #getAlpha
@see #getRGB
"
      end

      operation 6138626 "Color"
	public explicit_return_type ""
	nparams 3
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an opaque sRGB color with the specified red, green, and blue
values in the range (0.0 - 1.0).  Alpha is defaulted to 1.0.  The
actual color used in rendering depends on finding the best
match given the color space available for a particular output
device.

@throws IllegalArgumentException if <code>r</code>, <code>g</code>
       or <code>b</code> are outside of the range
       0.0 to 1.0, inclusive
@param r the red component
@param g the green component
@param b the blue component
@see #getRed
@see #getGreen
@see #getBlue
@see #getRGB
"
      end

      operation 6138754 "Color"
	public explicit_return_type ""
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an sRGB color with the specified red, green, blue, and
alpha values in the range (0.0 - 1.0).  The actual color
used in rendering depends on finding the best match given the
color space available for a particular output device.
@throws IllegalArgumentException if <code>r</code>, <code>g</code>
       <code>b</code> or <code>a</code> are outside of the range
       0.0 to 1.0, inclusive
@param r the red component
@param g the green component
@param b the blue component
@param a the alpha component
@see #getRed
@see #getGreen
@see #getBlue
@see #getAlpha
@see #getRGB
"
      end

      operation 6138882 "Color"
	public explicit_return_type ""
	nparams 3
	  param inout name "cspace" type class_ref 322178 // ColorSpace
	  param inout name "components" explicit_type "float"
	multiplicity "[]"
	  param in name "alpha" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a color in the specified <code>ColorSpace</code>
with the color components specified in the <code>float</code>
array and the specified alpha.  The number of components is
determined by the type of the <code>ColorSpace</code>.  For
example, RGB requires 3 components, but CMYK requires 4
components.
@param cspace the <code>ColorSpace</code> to be used to
                 interpret the components
@param components an arbitrary number of color components
                     that is compatible with the <code>ColorSpace</code>
@param alpha alpha value
@throws IllegalArgumentException if any of the values in the
        <code>components</code> array or <code>alpha</code> is
        outside of the range 0.0 to 1.0
@see #getComponents
@see #getColorComponents
"
      end

      operation 6139010 "getRed"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the red component in the range 0-255 in the default sRGB
space.
@return the red component.
@see #getRGB
"
      end

      operation 6139138 "getGreen"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the green component in the range 0-255 in the default sRGB
space.
@return the green component.
@see #getRGB
"
      end

      operation 6139266 "getBlue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the blue component in the range 0-255 in the default sRGB
space.
@return the blue component.
@see #getRGB
"
      end

      operation 6139394 "getAlpha"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alpha component in the range 0-255.
@return the alpha component.
@see #getRGB
"
      end

      operation 6139522 "getRGB"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the RGB value representing the color in the default sRGB
{@link ColorModel}.
(Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are
blue).
@return the RGB value of the color in the default sRGB
        <code>ColorModel</code>.
@see java.awt.image.ColorModel#getRGBdefault
@see #getRed
@see #getGreen
@see #getBlue
@since JDK1.0
"
      end

      attribute 1345282 "FACTOR"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0.7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6139650 "brighter"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Color</code> that is a brighter version of this
<code>Color</code>.
<p>
This method applies an arbitrary scale factor to each of the three RGB
components of this <code>Color</code> to create a brighter version
of this <code>Color</code>.
The {@code alpha} value is preserved.
Although <code>brighter</code> and
<code>darker</code> are inverse operations, the results of a
series of invocations of these two methods might be inconsistent
because of rounding errors.
@return     a new <code>Color</code> object that is
                a brighter version of this <code>Color</code>
                with the same {@code alpha} value.
@see        java.awt.Color#darker
@since      JDK1.0
"
      end

      operation 6139778 "darker"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Color</code> that is a darker version of this
<code>Color</code>.
<p>
This method applies an arbitrary scale factor to each of the three RGB
components of this <code>Color</code> to create a darker version of
this <code>Color</code>.
The {@code alpha} value is preserved.
Although <code>brighter</code> and
<code>darker</code> are inverse operations, the results of a series
of invocations of these two methods might be inconsistent because
of rounding errors.
@return  a new <code>Color</code> object that is
                   a darker version of this <code>Color</code>
                   with the same {@code alpha} value.
@see        java.awt.Color#brighter
@since      JDK1.0
"
      end

      operation 6139906 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the hash code for this <code>Color</code>.
@return     a hash code value for this object.
@since      JDK1.0
"
      end

      operation 6140034 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether another object is equal to this
<code>Color</code>.
<p>
The result is <code>true</code> if and only if the argument is not
<code>null</code> and is a <code>Color</code> object that has the same
red, green, blue, and alpha values as this object.
@param       obj   the object to test for equality with this
                         <code>Color</code>
@return      <code>true</code> if the objects are the same;
                            <code>false</code> otherwise.
@since   JDK1.0
"
      end

      operation 6140162 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>Color</code>. This
method is intended to be used only for debugging purposes.  The
content and format of the returned string might vary between
implementations. The returned string might be empty but cannot
be <code>null</code>.

@return  a string representation of this <code>Color</code>.
"
      end

      operation 6140290 "decode"
	class_operation public return_type class_ref 323458 // Color
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a <code>String</code> to an integer and returns the
specified opaque <code>Color</code>. This method handles string
formats that are used to represent octal and hexadecimal numbers.
@param      nm a <code>String</code> that represents
                           an opaque color as a 24-bit integer
@return     the new <code>Color</code> object.
@see        java.lang.Integer#decode
@exception  NumberFormatException  if the specified string cannot
                     be interpreted as a decimal,
                     octal, or hexadecimal integer.
@since      JDK1.1
"
      end

      operation 6140418 "getColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a color in the system properties.
<p>
The argument is treated as the name of a system property to
be obtained. The string value of this property is then interpreted
as an integer which is then converted to a <code>Color</code>
object.
<p>
If the specified property is not found or could not be parsed as
an integer then <code>null</code> is returned.
@param    nm the name of the color property
@return   the <code>Color</code> converted from the system
         property.
@see      java.lang.System#getProperty(java.lang.String)
@see      java.lang.Integer#getInteger(java.lang.String)
@see      java.awt.Color#Color(int)
@since    JDK1.0
"
      end

      operation 6140546 "getColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param inout name "v" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a color in the system properties.
<p>
The first argument is treated as the name of a system property to
be obtained. The string value of this property is then interpreted
as an integer which is then converted to a <code>Color</code>
object.
<p>
If the specified property is not found or cannot be parsed as
an integer then the <code>Color</code> specified by the second
argument is returned instead.
@param    nm the name of the color property
@param    v    the default <code>Color</code>
@return   the <code>Color</code> converted from the system
         property, or the specified <code>Color</code>.
@see      java.lang.System#getProperty(java.lang.String)
@see      java.lang.Integer#getInteger(java.lang.String)
@see      java.awt.Color#Color(int)
@since    JDK1.0
"
      end

      operation 6140674 "getColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a color in the system properties.
<p>
The first argument is treated as the name of a system property to
be obtained. The string value of this property is then interpreted
as an integer which is then converted to a <code>Color</code>
object.
<p>
If the specified property is not found or could not be parsed as
an integer then the integer value <code>v</code> is used instead,
and is converted to a <code>Color</code> object.
@param    nm  the name of the color property
@param    v   the default color value, as an integer
@return   the <code>Color</code> converted from the system
         property or the <code>Color</code> converted from
         the specified integer.
@see      java.lang.System#getProperty(java.lang.String)
@see      java.lang.Integer#getInteger(java.lang.String)
@see      java.awt.Color#Color(int)
@since    JDK1.0
"
      end

      operation 6140802 "HSBtoRGB"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "hue" explicit_type "float"
	  param in name "saturation" explicit_type "float"
	  param in name "brightness" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the components of a color, as specified by the HSB
model, to an equivalent set of values for the default RGB model.
<p>
The <code>saturation</code> and <code>brightness</code> components
should be floating-point values between zero and one
(numbers in the range 0.0-1.0).  The <code>hue</code> component
can be any floating-point number.  The floor of this number is
subtracted from it to create a fraction between 0 and 1.  This
fractional number is then multiplied by 360 to produce the hue
angle in the HSB color model.
<p>
The integer that is returned by <code>HSBtoRGB</code> encodes the
value of a color in bits 0-23 of an integer value that is the same
format used by the method {@link #getRGB() getRGB}.
This integer can be supplied as an argument to the
<code>Color</code> constructor that takes a single integer argument.
@param     hue   the hue component of the color
@param     saturation   the saturation of the color
@param     brightness   the brightness of the color
@return    the RGB value of the color with the indicated hue,
                           saturation, and brightness.
@see       java.awt.Color#getRGB()
@see       java.awt.Color#Color(int)
@see       java.awt.image.ColorModel#getRGBdefault()
@since     JDK1.0
"
      end

      operation 6140930 "RGBtoHSB"
	class_operation public explicit_return_type "float"
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param inout name "hsbvals" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the components of a color, as specified by the default RGB
model, to an equivalent set of values for hue, saturation, and
brightness that are the three components of the HSB model.
<p>
If the <code>hsbvals</code> argument is <code>null</code>, then a
new array is allocated to return the result. Otherwise, the method
returns the array <code>hsbvals</code>, with the values put into
that array.
@param     r   the red component of the color
@param     g   the green component of the color
@param     b   the blue component of the color
@param     hsbvals  the array used to return the
                    three HSB values, or <code>null</code>
@return    an array of three elements containing the hue, saturation,
                    and brightness (in that order), of the color with
                    the indicated red, green, and blue components.
@see       java.awt.Color#getRGB()
@see       java.awt.Color#Color(int)
@see       java.awt.image.ColorModel#getRGBdefault()
@since     JDK1.0
"
      end

      operation 6141058 "getHSBColor"
	class_operation public return_type class_ref 323458 // Color
	nparams 3
	  param in name "h" explicit_type "float"
	  param in name "s" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>Color</code> object based on the specified values
for the HSB color model.
<p>
The <code>s</code> and <code>b</code> components should be
floating-point values between zero and one
(numbers in the range 0.0-1.0).  The <code>h</code> component
can be any floating-point number.  The floor of this number is
subtracted from it to create a fraction between 0 and 1.  This
fractional number is then multiplied by 360 to produce the hue
angle in the HSB color model.
@param  h   the hue component
@param  s   the saturation of the color
@param  b   the brightness of the color
@return  a <code>Color</code> object with the specified hue,
                                saturation, and brightness.
@since   JDK1.0
"
      end

      operation 6141186 "getRGBComponents"
	public explicit_return_type "float"
	nparams 1
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing the color and alpha
components of the <code>Color</code>, as represented in the default
sRGB color space.
If <code>compArray</code> is <code>null</code>, an array of length
4 is created for the return value.  Otherwise,
<code>compArray</code> must have length 4 or greater,
and it is filled in with the components and returned.
@param compArray an array that this method fills with
                 color and alpha components and returns
@return the RGBA components in a <code>float</code> array.
"
      end

      operation 6141314 "getRGBColorComponents"
	public explicit_return_type "float"
	nparams 1
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing only the color
components of the <code>Color</code>, in the default sRGB color
space.  If <code>compArray</code> is <code>null</code>, an array of
length 3 is created for the return value.  Otherwise,
<code>compArray</code> must have length 3 or greater, and it is
filled in with the components and returned.
@param compArray an array that this method fills with color
         components and returns
@return the RGB components in a <code>float</code> array.
"
      end

      operation 6141442 "getComponents"
	public explicit_return_type "float"
	nparams 1
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing the color and alpha
components of the <code>Color</code>, in the
<code>ColorSpace</code> of the <code>Color</code>.
If <code>compArray</code> is <code>null</code>, an array with
length equal to the number of components in the associated
<code>ColorSpace</code> plus one is created for
the return value.  Otherwise, <code>compArray</code> must have at
least this length and it is filled in with the components and
returned.
@param compArray an array that this method fills with the color and
         alpha components of this <code>Color</code> in its
         <code>ColorSpace</code> and returns
@return the color and alpha components in a <code>float</code>
         array.
"
      end

      operation 6141570 "getColorComponents"
	public explicit_return_type "float"
	nparams 1
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing only the color
components of the <code>Color</code>, in the
<code>ColorSpace</code> of the <code>Color</code>.
If <code>compArray</code> is <code>null</code>, an array with
length equal to the number of components in the associated
<code>ColorSpace</code> is created for
the return value.  Otherwise, <code>compArray</code> must have at
least this length and it is filled in with the components and
returned.
@param compArray an array that this method fills with the color
         components of this <code>Color</code> in its
         <code>ColorSpace</code> and returns
@return the color components in a <code>float</code> array.
"
      end

      operation 6141698 "getComponents"
	public explicit_return_type "float"
	nparams 2
	  param inout name "cspace" type class_ref 322178 // ColorSpace
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing the color and alpha
components of the <code>Color</code>, in the
<code>ColorSpace</code> specified by the <code>cspace</code>
parameter.  If <code>compArray</code> is <code>null</code>, an
array with length equal to the number of components in
<code>cspace</code> plus one is created for the return value.
Otherwise, <code>compArray</code> must have at least this
length, and it is filled in with the components and returned.
@param cspace a specified <code>ColorSpace</code>
@param compArray an array that this method fills with the
         color and alpha components of this <code>Color</code> in
         the specified <code>ColorSpace</code> and returns
@return the color and alpha components in a <code>float</code>
         array.
"
      end

      operation 6141826 "getColorComponents"
	public explicit_return_type "float"
	nparams 2
	  param inout name "cspace" type class_ref 322178 // ColorSpace
	  param inout name "compArray" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>float</code> array containing only the color
components of the <code>Color</code> in the
<code>ColorSpace</code> specified by the <code>cspace</code>
parameter. If <code>compArray</code> is <code>null</code>, an array
with length equal to the number of components in
<code>cspace</code> is created for the return value.  Otherwise,
<code>compArray</code> must have at least this length, and it is
filled in with the components and returned.
@param cspace a specified <code>ColorSpace</code>
@param compArray an array that this method fills with the color
         components of this <code>Color</code> in the specified
         <code>ColorSpace</code>
@return the color components in a <code>float</code> array.
"
      end

      operation 6141954 "getColorSpace"
	public return_type class_ref 322178 // ColorSpace
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ColorSpace</code> of this <code>Color</code>.
@return this <code>Color</code> object's <code>ColorSpace</code>.
"
      end

      operation 6142082 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "r" type class_ref 314114 // Rectangle
	  param inout name "r2d" type class_ref 380674 // Rectangle2D
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate a solid color field pattern.
See the {@link Paint#createContext specification} of the
method in the {@link Paint} interface for information
on null parameter handling.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param r the device space bounding box
                    of the graphics primitive being rendered.
@param r2d the user space bounding box
                  of the graphics primitive being rendered.
@param xform the {@link AffineTransform} from user
             space into device space.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
@return the {@code PaintContext} for
        generating color patterns.
@see Paint
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end

      operation 6142210 "getTransparency"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the transparency mode for this <code>Color</code>.  This is
required to implement the <code>Paint</code> interface.
@return this <code>Color</code> object's transparency mode.
@see Paint
@see Transparency
@see #createContext
"
      end
    end

    class 323714 "Point"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A point representing a location in {@code (x,y)} coordinate space,
specified in integer precision.

@author      Sami Shaio
@since       1.0
"
      classrelation 2962178 // <generalisation>
	relation 2962178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2962178 // <generalisation>
	  b parent class_ref 380802 // Point2D
      end

      classrelation 2962306 // <realization>
	relation 2962306 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2962306 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1417090 "x"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The X coordinate of this <code>Point</code>.
If no X coordinate is set it will default to 0.

@serial
@see #getLocation()
@see #move(int, int)
@since 1.0

"
      end

      attribute 1417218 "y"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Y coordinate of this <code>Point</code>.
If no Y coordinate is set it will default to 0.

@serial
@see #getLocation()
@see #move(int, int)
@since 1.0

"
      end

      attribute 1417346 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5276940640259749850L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6299394 "Point"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and initializes a point at the origin
(0,&nbsp;0) of the coordinate space.
@since       1.1
"
      end

      operation 6299522 "Point"
	public explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and initializes a point with the same location as
the specified <code>Point</code> object.
@param       p a point
@since       1.1
"
      end

      operation 6299650 "Point"
	public explicit_return_type ""
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and initializes a point at the specified
{@code (x,y)} location in the coordinate space.
@param x the X coordinate of the newly constructed <code>Point</code>
@param y the Y coordinate of the newly constructed <code>Point</code>
@since 1.0
"
      end

      operation 6299778 "getX"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6299906 "getY"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6300034 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the location of this point.
This method is included for completeness, to parallel the
<code>getLocation</code> method of <code>Component</code>.
@return      a copy of this point, at the same location
@see         java.awt.Component#getLocation
@see         java.awt.Point#setLocation(java.awt.Point)
@see         java.awt.Point#setLocation(int, int)
@since       1.1
"
      end

      operation 6300162 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the point to the specified location.
This method is included for completeness, to parallel the
<code>setLocation</code> method of <code>Component</code>.
@param       p  a point, the new location for this point
@see         java.awt.Component#setLocation(java.awt.Point)
@see         java.awt.Point#getLocation
@since       1.1
"
      end

      operation 6300290 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the point to have the specified location.
<p>
This method is included for completeness, to parallel the
<code>setLocation</code> method of <code>Component</code>.
Its behavior is identical with <code>move(int,&nbsp;int)</code>.
@param       x the X coordinate of the new location
@param       y the Y coordinate of the new location
@see         java.awt.Component#setLocation(int, int)
@see         java.awt.Point#getLocation
@see         java.awt.Point#move(int, int)
@since       1.1
"
      end

      operation 6300418 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of this point to the specified double coordinates.
The double values will be rounded to integer values.
Any number smaller than <code>Integer.MIN_VALUE</code>
will be reset to <code>MIN_VALUE</code>, and any number
larger than <code>Integer.MAX_VALUE</code> will be
reset to <code>MAX_VALUE</code>.

@param x the X coordinate of the new location
@param y the Y coordinate of the new location
@see #getLocation
"
      end

      operation 6300546 "move"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves this point to the specified location in the
{@code (x,y)} coordinate plane. This method
is identical with <code>setLocation(int,&nbsp;int)</code>.
@param       x the X coordinate of the new location
@param       y the Y coordinate of the new location
@see         java.awt.Component#setLocation(int, int)
"
      end

      operation 6300674 "translate"
	public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates this point, at location {@code (x,y)},
by {@code dx} along the {@code x} axis and {@code dy}
along the {@code y} axis so that it now represents the point
{@code (x+dx,y+dy)}.

@param       dx   the distance to move this point
                           along the X axis
@param       dy    the distance to move this point
                           along the Y axis
"
      end

      operation 6300802 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether or not two points are equal. Two instances of
<code>Point2D</code> are equal if the values of their
<code>x</code> and <code>y</code> member fields, representing
their position in the coordinate space, are the same.
@param obj an object to be compared with this <code>Point2D</code>
@return <code>true</code> if the object to be compared is
        an instance of <code>Point2D</code> and has
        the same values; <code>false</code> otherwise.
"
      end

      operation 6300930 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this point and its location
in the {@code (x,y)} coordinate space. This method is
intended to be used only for debugging purposes, and the content
and format of the returned string may vary between implementations.
The returned string may be empty but may not be <code>null</code>.

@return  a string representation of this point
"
      end
    end

    class 338178 "Graphics2D"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This <code>Graphics2D</code> class extends the
{@link Graphics} class to provide more sophisticated
control over geometry, coordinate transformations, color management,
and text layout.  This is the fundamental class for rendering
2-dimensional shapes, text and images on the  Java(tm) platform.
<p>
<h2>Coordinate Spaces</h2>
All coordinates passed to a <code>Graphics2D</code> object are specified
in a device-independent coordinate system called User Space, which is
used by applications.  The <code>Graphics2D</code> object contains
an {@link AffineTransform} object as part of its rendering state
that defines how to convert coordinates from user space to
device-dependent coordinates in Device Space.
<p>
Coordinates in device space usually refer to individual device pixels
and are aligned on the infinitely thin gaps between these pixels.
Some <code>Graphics2D</code> objects can be used to capture rendering
operations for storage into a graphics metafile for playback on a
concrete device of unknown physical resolution at a later time.  Since
the resolution might not be known when the rendering operations are
captured, the <code>Graphics2D</code> <code>Transform</code> is set up
to transform user coordinates to a virtual device space that
approximates the expected resolution of the target device. Further
transformations might need to be applied at playback time if the
estimate is incorrect.
<p>
Some of the operations performed by the rendering attribute objects
occur in the device space, but all <code>Graphics2D</code> methods take
user space coordinates.
<p>
Every <code>Graphics2D</code> object is associated with a target that
defines where rendering takes place. A
{@link GraphicsConfiguration} object defines the characteristics
of the rendering target, such as pixel format and resolution.
The same rendering target is used throughout the life of a
<code>Graphics2D</code> object.
<p>
When creating a <code>Graphics2D</code> object,  the
<code>GraphicsConfiguration</code>
specifies the <a name=\"deftransform\">default transform</a> for
the target of the <code>Graphics2D</code> (a
{@link Component} or {@link Image}).  This default transform maps the
user space coordinate system to screen and printer device coordinates
such that the origin maps to the upper left hand corner of the
target region of the device with increasing X coordinates extending
to the right and increasing Y coordinates extending downward.
The scaling of the default transform is set to identity for those devices
that are close to 72 dpi, such as screen devices.
The scaling of the default transform is set to approximately 72 user
space coordinates per square inch for high resolution devices, such as
printers.  For image buffers, the default transform is the
<code>Identity</code> transform.

<h2>Rendering Process</h2>
The Rendering Process can be broken down into four phases that are
controlled by the <code>Graphics2D</code> rendering attributes.
The renderer can optimize many of these steps, either by caching the
results for future calls, by collapsing multiple virtual steps into
a single operation, or by recognizing various attributes as common
simple cases that can be eliminated by modifying other parts of the
operation.
<p>
The steps in the rendering process are:
<ol>
<li>
Determine what to render.
<li>
Constrain the rendering operation to the current <code>Clip</code>.
The <code>Clip</code> is specified by a {@link Shape} in user
space and is controlled by the program using the various clip
manipulation methods of <code>Graphics</code> and
<code>Graphics2D</code>.  This <i>user clip</i>
is transformed into device space by the current
<code>Transform</code> and combined with the
<i>device clip</i>, which is defined by the visibility of windows and
device extents.  The combination of the user clip and device clip
defines the <i>composite clip</i>, which determines the final clipping
region.  The user clip is not modified by the rendering
system to reflect the resulting composite clip.
<li>
Determine what colors to render.
<li>
Apply the colors to the destination drawing surface using the current
{@link Composite} attribute in the <code>Graphics2D</code> context.
</ol>
<br>
The three types of rendering operations, along with details of each
of their particular rendering processes are:
<ol>
<li>
<b><a name=\"rendershape\"><code>Shape</code> operations</a></b>
<ol>
<li>
If the operation is a <code>draw(Shape)</code> operation, then
the  {@link Stroke#createStrokedShape(Shape) createStrokedShape}
method on the current {@link Stroke} attribute in the
<code>Graphics2D</code> context is used to construct a new
<code>Shape</code> object that contains the outline of the specified
<code>Shape</code>.
<li>
The <code>Shape</code> is transformed from user space to device space
using the current <code>Transform</code>
in the <code>Graphics2D</code> context.
<li>
The outline of the <code>Shape</code> is extracted using the
{@link Shape#getPathIterator(AffineTransform) getPathIterator} method of
<code>Shape</code>, which returns a
{@link java.awt.geom.PathIterator PathIterator}
object that iterates along the boundary of the <code>Shape</code>.
<li>
If the <code>Graphics2D</code> object cannot handle the curved segments
that the <code>PathIterator</code> object returns then it can call the
alternate
{@link Shape#getPathIterator(AffineTransform, double) getPathIterator}
method of <code>Shape</code>, which flattens the <code>Shape</code>.
<li>
The current {@link Paint} in the <code>Graphics2D</code> context
is queried for a {@link PaintContext}, which specifies the
colors to render in device space.
</ol>
<li>
<b><a name=rendertext>Text operations</a></b>
<ol>
<li>
The following steps are used to determine the set of glyphs required
to render the indicated <code>String</code>:
<ol>
<li>
If the argument is a <code>String</code>, then the current
<code>Font</code> in the <code>Graphics2D</code> context is asked to
convert the Unicode characters in the <code>String</code> into a set of
glyphs for presentation with whatever basic layout and shaping
algorithms the font implements.
<li>
If the argument is an
{@link AttributedCharacterIterator},
the iterator is asked to convert itself to a
{@link java.awt.font.TextLayout TextLayout}
using its embedded font attributes. The <code>TextLayout</code>
implements more sophisticated glyph layout algorithms that
perform Unicode bi-directional layout adjustments automatically
for multiple fonts of differing writing directions.
<li>
If the argument is a
{@link GlyphVector}, then the
<code>GlyphVector</code> object already contains the appropriate
font-specific glyph codes with explicit coordinates for the position of
each glyph.
</ol>
<li>
The current <code>Font</code> is queried to obtain outlines for the
indicated glyphs.  These outlines are treated as shapes in user space
relative to the position of each glyph that was determined in step 1.
<li>
The character outlines are filled as indicated above
under <a href=\"#rendershape\"><code>Shape</code> operations</a>.
<li>
The current <code>Paint</code> is queried for a
<code>PaintContext</code>, which specifies
the colors to render in device space.
</ol>
<li>
<b><a name= renderingimage><code>Image</code> Operations</a></b>
<ol>
<li>
The region of interest is defined by the bounding box of the source
<code>Image</code>.
This bounding box is specified in Image Space, which is the
<code>Image</code> object's local coordinate system.
<li>
If an <code>AffineTransform</code> is passed to
{@link #drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) drawImage(Image, AffineTransform, ImageObserver)},
the <code>AffineTransform</code> is used to transform the bounding
box from image space to user space. If no <code>AffineTransform</code>
is supplied, the bounding box is treated as if it is already in user space.
<li>
The bounding box of the source <code>Image</code> is transformed from user
space into device space using the current <code>Transform</code>.
Note that the result of transforming the bounding box does not
necessarily result in a rectangular region in device space.
<li>
The <code>Image</code> object determines what colors to render,
sampled according to the source to destination
coordinate mapping specified by the current <code>Transform</code> and the
optional image transform.
</ol>
</ol>

<h2>Default Rendering Attributes</h2>
The default values for the <code>Graphics2D</code> rendering attributes are:
<dl compact>
<dt><i><code>Paint</code></i>
<dd>The color of the <code>Component</code>.
<dt><i><code>Font</code></i>
<dd>The <code>Font</code> of the <code>Component</code>.
<dt><i><code>Stroke</code></i>
<dd>A square pen with a linewidth of 1, no dashing, miter segment joins
and square end caps.
<dt><i><code>Transform</code></i>
<dd>The
{@link GraphicsConfiguration#getDefaultTransform() getDefaultTransform}
for the <code>GraphicsConfiguration</code> of the <code>Component</code>.
<dt><i><code>Composite</code></i>
<dd>The {@link AlphaComposite#SRC_OVER} rule.
<dt><i><code>Clip</code></i>
<dd>No rendering <code>Clip</code>, the output is clipped to the
<code>Component</code>.
</dl>

<h2>Rendering Compatibility Issues</h2>
The JDK(tm) 1.1 rendering model is based on a pixelization model
that specifies that coordinates
are infinitely thin, lying between the pixels.  Drawing operations are
performed using a one-pixel wide pen that fills the
pixel below and to the right of the anchor point on the path.
The JDK 1.1 rendering model is consistent with the
capabilities of most of the existing class of platform
renderers that need  to resolve integer coordinates to a
discrete pen that must fall completely on a specified number of pixels.
<p>
The Java 2D(tm) (Java(tm) 2 platform) API supports antialiasing renderers.
A pen with a width of one pixel does not need to fall
completely on pixel N as opposed to pixel N+1.  The pen can fall
partially on both pixels. It is not necessary to choose a bias
direction for a wide pen since the blending that occurs along the
pen traversal edges makes the sub-pixel position of the pen
visible to the user.  On the other hand, when antialiasing is
turned off by setting the
{@link RenderingHints#KEY_ANTIALIASING KEY_ANTIALIASING} hint key
to the
{@link RenderingHints#VALUE_ANTIALIAS_OFF VALUE_ANTIALIAS_OFF}
hint value, the renderer might need
to apply a bias to determine which pixel to modify when the pen
is straddling a pixel boundary, such as when it is drawn
along an integer coordinate in device space.  While the capabilities
of an antialiasing renderer make it no longer necessary for the
rendering model to specify a bias for the pen, it is desirable for the
antialiasing and non-antialiasing renderers to perform similarly for
the common cases of drawing one-pixel wide horizontal and vertical
lines on the screen.  To ensure that turning on antialiasing by
setting the
{@link RenderingHints#KEY_ANTIALIASING KEY_ANTIALIASING} hint
key to
{@link RenderingHints#VALUE_ANTIALIAS_ON VALUE_ANTIALIAS_ON}
does not cause such lines to suddenly become twice as wide and half
as opaque, it is desirable to have the model specify a path for such
lines so that they completely cover a particular set of pixels to help
increase their crispness.
<p>
Java 2D API maintains compatibility with JDK 1.1 rendering
behavior, such that legacy operations and existing renderer
behavior is unchanged under Java 2D API.  Legacy
methods that map onto general <code>draw</code> and
<code>fill</code> methods are defined, which clearly indicates
how <code>Graphics2D</code> extends <code>Graphics</code> based
on settings of <code>Stroke</code> and <code>Transform</code>
attributes and rendering hints.  The definition
performs identically under default attribute settings.
For example, the default <code>Stroke</code> is a
<code>BasicStroke</code> with a width of 1 and no dashing and the
default Transform for screen drawing is an Identity transform.
<p>
The following two rules provide predictable rendering behavior whether
aliasing or antialiasing is being used.
<ul>
<li> Device coordinates are defined to be between device pixels which
avoids any inconsistent results between aliased and antialiased
rendering.  If coordinates were defined to be at a pixel's center, some
of the pixels covered by a shape, such as a rectangle, would only be
half covered.
With aliased rendering, the half covered pixels would either be
rendered inside the shape or outside the shape.  With anti-aliased
rendering, the pixels on the entire edge of the shape would be half
covered.  On the other hand, since coordinates are defined to be
between pixels, a shape like a rectangle would have no half covered
pixels, whether or not it is rendered using antialiasing.
<li> Lines and paths stroked using the <code>BasicStroke</code>
object may be \"normalized\" to provide consistent rendering of the
outlines when positioned at various points on the drawable and
whether drawn with aliased or antialiased rendering.  This
normalization process is controlled by the
{@link RenderingHints#KEY_STROKE_CONTROL KEY_STROKE_CONTROL} hint.
The exact normalization algorithm is not specified, but the goals
of this normalization are to ensure that lines are rendered with
consistent visual appearance regardless of how they fall on the
pixel grid and to promote more solid horizontal and vertical
lines in antialiased mode so that they resemble their non-antialiased
counterparts more closely.  A typical normalization step might
promote antialiased line endpoints to pixel centers to reduce the
amount of blending or adjust the subpixel positioning of
non-antialiased lines so that the floating point line widths
round to even or odd pixel counts with equal likelihood.  This
process can move endpoints by up to half a pixel (usually towards
positive infinity along both axes) to promote these consistent
results.
</ul>
<p>
The following definitions of general legacy methods
perform identically to previously specified behavior under default
attribute settings:
<ul>
<li>
For <code>fill</code> operations, including <code>fillRect</code>,
<code>fillRoundRect</code>, <code>fillOval</code>,
<code>fillArc</code>, <code>fillPolygon</code>, and
<code>clearRect</code>, {@link #fill(Shape) fill} can now be called
with the desired <code>Shape</code>.  For example, when filling a
rectangle:
<pre>
fill(new Rectangle(x, y, w, h));
</pre>
is called.
<p>
<li>
Similarly, for draw operations, including <code>drawLine</code>,
<code>drawRect</code>, <code>drawRoundRect</code>,
<code>drawOval</code>, <code>drawArc</code>, <code>drawPolyline</code>,
and <code>drawPolygon</code>, {@link #draw(Shape) draw} can now be
called with the desired <code>Shape</code>.  For example, when drawing a
rectangle:
<pre>
draw(new Rectangle(x, y, w, h));
</pre>
is called.
<p>
<li>
The <code>draw3DRect</code> and <code>fill3DRect</code> methods were
implemented in terms of the <code>drawLine</code> and
<code>fillRect</code> methods in the <code>Graphics</code> class which
would predicate their behavior upon the current <code>Stroke</code>
and <code>Paint</code> objects in a <code>Graphics2D</code> context.
This class overrides those implementations with versions that use
the current <code>Color</code> exclusively, overriding the current
<code>Paint</code> and which uses <code>fillRect</code> to describe
the exact same behavior as the preexisting methods regardless of the
setting of the current <code>Stroke</code>.
</ul>
The <code>Graphics</code> class defines only the <code>setColor</code>
method to control the color to be painted.  Since the Java 2D API extends
the <code>Color</code> object to implement the new <code>Paint</code>
interface, the existing
<code>setColor</code> method is now a convenience method for setting the
current <code>Paint</code> attribute to a <code>Color</code> object.
<code>setColor(c)</code> is equivalent to <code>setPaint(c)</code>.
<p>
The <code>Graphics</code> class defines two methods for controlling
how colors are applied to the destination.
<ol>
<li>
The <code>setPaintMode</code> method is implemented as a convenience
method to set the default <code>Composite</code>, equivalent to
<code>setComposite(new AlphaComposite.SrcOver)</code>.
<li>
The <code>setXORMode(Color xorcolor)</code> method is implemented
as a convenience method to set a special <code>Composite</code> object that
ignores the <code>Alpha</code> components of source colors and sets the
destination color to the value:
<pre>
dstpixel = (PixelOf(srccolor) ^ PixelOf(xorcolor) ^ dstpixel);
</pre>
</ol>

@author Jim Graham
@see java.awt.RenderingHints
"
      classrelation 2920450 // <generalisation>
	relation 2920450 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2920450 // <generalisation>
	  b parent class_ref 343682 // Graphics
      end

      operation 6222338 "Graphics2D"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Graphics2D</code> object.  Since
<code>Graphics2D</code> is an abstract class, and since it must be
customized by subclasses for different output devices,
<code>Graphics2D</code> objects cannot be created directly.
Instead, <code>Graphics2D</code> objects must be obtained from another
<code>Graphics2D</code> object, created by a
<code>Component</code>, or obtained from images such as
{@link BufferedImage} objects.
@see java.awt.Component#getGraphics
@see java.awt.Graphics#create
"
      end

      operation 6222466 "draw3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws a 3-D highlighted outline of the specified rectangle.
The edges of the rectangle are highlighted so that they
appear to be beveled and lit from the upper left corner.
<p>
The colors used for the highlighting effect are determined
based on the current color.
The resulting rectangle covers an area that is
<code>width&nbsp;+&nbsp;1</code> pixels wide
by <code>height&nbsp;+&nbsp;1</code> pixels tall.  This method
uses the current <code>Color</code> exclusively and ignores
the current <code>Paint</code>.
@param x the x coordinate of the rectangle to be drawn.
@param y the y coordinate of the rectangle to be drawn.
@param width the width of the rectangle to be drawn.
@param height the height of the rectangle to be drawn.
@param raised a boolean that determines whether the rectangle
                     appears to be raised above the surface
                     or sunk into the surface.
@see         java.awt.Graphics#fill3DRect
"
      end

      operation 6222594 "fill3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints a 3-D highlighted rectangle filled with the current color.
The edges of the rectangle are highlighted so that it appears
as if the edges were beveled and lit from the upper left corner.
The colors used for the highlighting effect and for filling are
determined from the current <code>Color</code>.  This method uses
the current <code>Color</code> exclusively and ignores the current
<code>Paint</code>.
@param x the x coordinate of the rectangle to be filled.
@param y the y coordinate of the rectangle to be filled.
@param       width the width of the rectangle to be filled.
@param       height the height of the rectangle to be filled.
@param       raised a boolean value that determines whether the
                     rectangle appears to be raised above the surface
                     or etched into the surface.
@see         java.awt.Graphics#draw3DRect
"
      end

      operation 6222722 "draw"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 379394 // Shape
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Strokes the outline of a <code>Shape</code> using the settings of the
current <code>Graphics2D</code> context.  The rendering attributes
applied include the <code>Clip</code>, <code>Transform</code>,
<code>Paint</code>, <code>Composite</code> and
<code>Stroke</code> attributes.
@param s the <code>Shape</code> to be rendered
@see #setStroke
@see #setPaint
@see java.awt.Graphics#setColor
@see #transform
@see #setTransform
@see #clip
@see #setClip
@see #setComposite
"
      end

      operation 6222850 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "img" type class_ref 340098 // Image
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "obs" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders an image, applying a transform from image space into user space
before drawing.
The transformation from user space into device space is done with
the current <code>Transform</code> in the <code>Graphics2D</code>.
The specified transformation is applied to the image before the
transform attribute in the <code>Graphics2D</code> context is applied.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, and <code>Composite</code> attributes.
Note that no rendering is done if the specified transform is
noninvertible.
@param img the specified image to be rendered.
           This method does nothing if <code>img</code> is null.
@param xform the transformation from image space into user space
@param obs the {@link ImageObserver}
to be notified as more of the <code>Image</code>
is converted
@return <code>true</code> if the <code>Image</code> is
fully loaded and completely rendered, or if it's null;
<code>false</code> if the <code>Image</code> is still being loaded.
@see #transform
@see #setTransform
@see #setComposite
@see #clip
@see #setClip
"
      end

      operation 6222978 "drawImage"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "img" type class_ref 311554 // BufferedImage
	  param inout name "op" type class_ref 867202 // BufferedImageOp
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders a <code>BufferedImage</code> that is
filtered with a
{@link BufferedImageOp}.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>
and <code>Composite</code> attributes.  This is equivalent to:
<pre>
img1 = op.filter(img, null);
drawImage(img1, new AffineTransform(1f,0f,0f,1f,x,y), null);
</pre>
@param op the filter to be applied to the image before rendering
@param img the specified <code>BufferedImage</code> to be rendered.
           This method does nothing if <code>img</code> is null.
@param x the x coordinate of the location in user space where
the upper left corner of the image is rendered
@param y the y coordinate of the location in user space where
the upper left corner of the image is rendered

@see #transform
@see #setTransform
@see #setComposite
@see #clip
@see #setClip
"
      end

      operation 6223106 "drawRenderedImage"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "img" type class_ref 313986 // RenderedImage
	  param inout name "xform" type class_ref 381058 // AffineTransform
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders a {@link RenderedImage},
applying a transform from image
space into user space before drawing.
The transformation from user space into device space is done with
the current <code>Transform</code> in the <code>Graphics2D</code>.
The specified transformation is applied to the image before the
transform attribute in the <code>Graphics2D</code> context is applied.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, and <code>Composite</code> attributes. Note
that no rendering is done if the specified transform is
noninvertible.
@param img the image to be rendered. This method does
           nothing if <code>img</code> is null.
@param xform the transformation from image space into user space
@see #transform
@see #setTransform
@see #setComposite
@see #clip
@see #setClip
"
      end

      operation 6223234 "drawRenderableImage"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "img" type class_ref 867330 // RenderableImage
	  param inout name "xform" type class_ref 381058 // AffineTransform
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders a
{@link RenderableImage},
applying a transform from image space into user space before drawing.
The transformation from user space into device space is done with
the current <code>Transform</code> in the <code>Graphics2D</code>.
The specified transformation is applied to the image before the
transform attribute in the <code>Graphics2D</code> context is applied.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, and <code>Composite</code> attributes. Note
that no rendering is done if the specified transform is
noninvertible.
<p>
Rendering hints set on the <code>Graphics2D</code> object might
be used in rendering the <code>RenderableImage</code>.
If explicit control is required over specific hints recognized by a
specific <code>RenderableImage</code>, or if knowledge of which hints
are used is required, then a <code>RenderedImage</code> should be
obtained directly from the <code>RenderableImage</code>
and rendered using
{@link #drawRenderedImage(RenderedImage, AffineTransform) drawRenderedImage}.
@param img the image to be rendered. This method does
           nothing if <code>img</code> is null.
@param xform the transformation from image space into user space
@see #transform
@see #setTransform
@see #setComposite
@see #clip
@see #setClip
@see #drawRenderedImage
"
      end

      operation 6223362 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text of the specified <code>String</code>, using the
current text attribute state in the <code>Graphics2D</code> context.
The baseline of the
first character is at position (<i>x</i>,&nbsp;<i>y</i>) in
the User Space.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, <code>Paint</code>, <code>Font</code> and
<code>Composite</code> attributes.  For characters in script
systems such as Hebrew and Arabic, the glyphs can be rendered from
right to left, in which case the coordinate supplied is the
location of the leftmost character on the baseline.
@param str the string to be rendered
@param x the x coordinate of the location where the
<code>String</code> should be rendered
@param y the y coordinate of the location where the
<code>String</code> should be rendered
@throws NullPointerException if <code>str</code> is
        <code>null</code>
@see         java.awt.Graphics#drawBytes
@see         java.awt.Graphics#drawChars
@since       JDK1.0
"
      end

      operation 6223490 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text specified by the specified <code>String</code>,
using the current text attribute state in the <code>Graphics2D</code> context.
The baseline of the first character is at position
(<i>x</i>,&nbsp;<i>y</i>) in the User Space.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, <code>Paint</code>, <code>Font</code> and
<code>Composite</code> attributes. For characters in script systems
such as Hebrew and Arabic, the glyphs can be rendered from right to
left, in which case the coordinate supplied is the location of the
leftmost character on the baseline.
@param str the <code>String</code> to be rendered
@param x the x coordinate of the location where the
<code>String</code> should be rendered
@param y the y coordinate of the location where the
<code>String</code> should be rendered
@throws NullPointerException if <code>str</code> is
        <code>null</code>
@see #setPaint
@see java.awt.Graphics#setColor
@see java.awt.Graphics#setFont
@see #setTransform
@see #setComposite
@see #setClip
"
      end

      operation 6223618 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "iterator" type class_ref 472962 // AttributedCharacterIterator
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text of the specified iterator applying its attributes
in accordance with the specification of the {@link TextAttribute} class.
<p>
The baseline of the first character is at position
(<i>x</i>,&nbsp;<i>y</i>) in User Space.
For characters in script systems such as Hebrew and Arabic,
the glyphs can be rendered from right to left, in which case the
coordinate supplied is the location of the leftmost character
on the baseline.
@param iterator the iterator whose text is to be rendered
@param x the x coordinate where the iterator's text is to be
rendered
@param y the y coordinate where the iterator's text is to be
rendered
@throws NullPointerException if <code>iterator</code> is
        <code>null</code>
@see #setPaint
@see java.awt.Graphics#setColor
@see #setTransform
@see #setComposite
@see #setClip
"
      end

      operation 6223746 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "iterator" type class_ref 472962 // AttributedCharacterIterator
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text of the specified iterator applying its attributes
in accordance with the specification of the {@link TextAttribute} class.
<p>
The baseline of the first character is at position
(<i>x</i>,&nbsp;<i>y</i>) in User Space.
For characters in script systems such as Hebrew and Arabic,
the glyphs can be rendered from right to left, in which case the
coordinate supplied is the location of the leftmost character
on the baseline.
@param iterator the iterator whose text is to be rendered
@param x the x coordinate where the iterator's text is to be
rendered
@param y the y coordinate where the iterator's text is to be
rendered
@throws NullPointerException if <code>iterator</code> is
        <code>null</code>
@see #setPaint
@see java.awt.Graphics#setColor
@see #setTransform
@see #setComposite
@see #setClip
"
      end

      operation 6223874 "drawGlyphVector"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "g" type class_ref 866434 // GlyphVector
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text of the specified
{@link GlyphVector} using
the <code>Graphics2D</code> context's rendering attributes.
The rendering attributes applied include the <code>Clip</code>,
<code>Transform</code>, <code>Paint</code>, and
<code>Composite</code> attributes.  The <code>GlyphVector</code>
specifies individual glyphs from a {@link Font}.
The <code>GlyphVector</code> can also contain the glyph positions.
This is the fastest way to render a set of characters to the
screen.
@param g the <code>GlyphVector</code> to be rendered
@param x the x position in User Space where the glyphs should
be rendered
@param y the y position in User Space where the glyphs should
be rendered
@throws NullPointerException if <code>g</code> is <code>null</code>.

@see java.awt.Font#createGlyphVector
@see java.awt.font.GlyphVector
@see #setPaint
@see java.awt.Graphics#setColor
@see #setTransform
@see #setComposite
@see #setClip
"
      end

      operation 6224002 "fill"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 379394 // Shape
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the interior of a <code>Shape</code> using the settings of the
<code>Graphics2D</code> context. The rendering attributes applied
include the <code>Clip</code>, <code>Transform</code>,
<code>Paint</code>, and <code>Composite</code>.
@param s the <code>Shape</code> to be filled
@see #setPaint
@see java.awt.Graphics#setColor
@see #transform
@see #setTransform
@see #setComposite
@see #clip
@see #setClip
"
      end

      operation 6224130 "hit"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "rect" type class_ref 314114 // Rectangle
	  param inout name "s" type class_ref 379394 // Shape
	  param inout name "onStroke" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not the specified <code>Shape</code> intersects
the specified {@link Rectangle}, which is in device
space. If <code>onStroke</code> is false, this method checks
whether or not the interior of the specified <code>Shape</code>
intersects the specified <code>Rectangle</code>.  If
<code>onStroke</code> is <code>true</code>, this method checks
whether or not the <code>Stroke</code> of the specified
<code>Shape</code> outline intersects the specified
<code>Rectangle</code>.
The rendering attributes taken into account include the
<code>Clip</code>, <code>Transform</code>, and <code>Stroke</code>
attributes.
@param rect the area in device space to check for a hit
@param s the <code>Shape</code> to check for a hit
@param onStroke flag used to choose between testing the
stroked or the filled shape.  If the flag is <code>true</code>, the
<code>Stroke</code> outline is tested.  If the flag is
<code>false</code>, the filled <code>Shape</code> is tested.
@return <code>true</code> if there is a hit; <code>false</code>
otherwise.
@see #setStroke
@see #fill
@see #draw
@see #transform
@see #setTransform
@see #clip
@see #setClip
"
      end

      operation 6224258 "getDeviceConfiguration"
	abstract public return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the device configuration associated with this
<code>Graphics2D</code>.
@return the device configuration of this <code>Graphics2D</code>.
"
      end

      operation 6224386 "setComposite"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 856322 // Composite
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Composite</code> for the <code>Graphics2D</code> context.
The <code>Composite</code> is used in all drawing methods such as
<code>drawImage</code>, <code>drawString</code>, <code>draw</code>,
and <code>fill</code>.  It specifies how new pixels are to be combined
with the existing pixels on the graphics device during the rendering
process.
<p>If this <code>Graphics2D</code> context is drawing to a
<code>Component</code> on the display screen and the
<code>Composite</code> is a custom object rather than an
instance of the <code>AlphaComposite</code> class, and if
there is a security manager, its <code>checkPermission</code>
method is called with an <code>AWTPermission(\"readDisplayPixels\")</code>
permission.
@throws SecurityException
        if a custom <code>Composite</code> object is being
        used to render to the screen and a security manager
        is set and its <code>checkPermission</code> method
        does not allow the operation.
@param comp the <code>Composite</code> object to be used for rendering
@see java.awt.Graphics#setXORMode
@see java.awt.Graphics#setPaintMode
@see #getComposite
@see AlphaComposite
@see SecurityManager#checkPermission
@see java.awt.AWTPermission
"
      end

      operation 6224514 "setPaint"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "paint" type class_ref 860418 // Paint
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Paint</code> attribute for the
<code>Graphics2D</code> context.  Calling this method
with a <code>null</code> <code>Paint</code> object does
not have any effect on the current <code>Paint</code> attribute
of this <code>Graphics2D</code>.
@param paint the <code>Paint</code> object to be used to generate
color during the rendering process, or <code>null</code>
@see java.awt.Graphics#setColor
@see #getPaint
@see GradientPaint
@see TexturePaint
"
      end

      operation 6224642 "setStroke"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 857858 // Stroke
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Stroke</code> for the <code>Graphics2D</code> context.
@param s the <code>Stroke</code> object to be used to stroke a
<code>Shape</code> during the rendering process
@see BasicStroke
@see #getStroke
"
      end

      operation 6224770 "setRenderingHint"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "hintKey" type class_ref 867458 // Key
	  param inout name "hintValue" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of a single preference for the rendering algorithms.
Hint categories include controls for rendering quality and overall
time/quality trade-off in the rendering process.  Refer to the
<code>RenderingHints</code> class for definitions of some common
keys and values.
@param hintKey the key of the hint to be set.
@param hintValue the value indicating preferences for the specified
hint category.
@see #getRenderingHint(RenderingHints.Key)
@see RenderingHints
"
      end

      operation 6224898 "getRenderingHint"
	abstract public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "hintKey" type class_ref 867458 // Key
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a single preference for the rendering algorithms.
Hint categories include controls for rendering quality and overall
time/quality trade-off in the rendering process.  Refer to the
<code>RenderingHints</code> class for definitions of some common
keys and values.
@param hintKey the key corresponding to the hint to get.
@return an object representing the value for the specified hint key.
Some of the keys and their associated values are defined in the
<code>RenderingHints</code> class.
@see RenderingHints
@see #setRenderingHint(RenderingHints.Key, Object)
"
      end

      operation 6225026 "setRenderingHints"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "hints" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the values of all preferences for the rendering
algorithms with the specified <code>hints</code>.
The existing values for all rendering hints are discarded and
the new set of known hints and values are initialized from the
specified {@link Map} object.
Hint categories include controls for rendering quality and
overall time/quality trade-off in the rendering process.
Refer to the <code>RenderingHints</code> class for definitions of
some common keys and values.
@param hints the rendering hints to be set
@see #getRenderingHints
@see RenderingHints
"
      end

      operation 6225154 "addRenderingHints"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "hints" type class_ref 130178 // Map
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values of an arbitrary number of preferences for the
rendering algorithms.
Only values for the rendering hints that are present in the
specified <code>Map</code> object are modified.
All other preferences not present in the specified
object are left unmodified.
Hint categories include controls for rendering quality and
overall time/quality trade-off in the rendering process.
Refer to the <code>RenderingHints</code> class for definitions of
some common keys and values.
@param hints the rendering hints to be set
@see RenderingHints
"
      end

      operation 6225282 "getRenderingHints"
	abstract public return_type class_ref 856578 // RenderingHints
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferences for the rendering algorithms.  Hint categories
include controls for rendering quality and overall time/quality
trade-off in the rendering process.
Returns all of the hint key/value pairs that were ever specified in
one operation.  Refer to the
<code>RenderingHints</code> class for definitions of some common
keys and values.
@return a reference to an instance of <code>RenderingHints</code>
that contains the current preferences.
@see RenderingHints
@see #setRenderingHints(Map)
"
      end

      operation 6225410 "translate"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the origin of the <code>Graphics2D</code> context to the
point (<i>x</i>,&nbsp;<i>y</i>) in the current coordinate system.
Modifies the <code>Graphics2D</code> context so that its new origin
corresponds to the point (<i>x</i>,&nbsp;<i>y</i>) in the
<code>Graphics2D</code> context's former coordinate system.  All
coordinates used in subsequent rendering operations on this graphics
context are relative to this new origin.
@param  x the specified x coordinate
@param  y the specified y coordinate
@since   JDK1.0
"
      end

      operation 6225538 "translate"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "tx" explicit_type "double"
	  param in name "ty" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the current
<code>Graphics2D</code> <code>Transform</code>
with a translation transform.
Subsequent rendering is translated by the specified
distance relative to the previous position.
This is equivalent to calling transform(T), where T is an
<code>AffineTransform</code> represented by the following matrix:
<pre>
         [   1    0    tx  ]
         [   0    1    ty  ]
         [   0    0    1   ]
</pre>
@param tx the distance to translate along the x-axis
@param ty the distance to translate along the y-axis
"
      end

      operation 6225666 "rotate"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "theta" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the current <code>Graphics2D</code>
<code>Transform</code> with a rotation transform.
Subsequent rendering is rotated by the specified radians relative
to the previous origin.
This is equivalent to calling <code>transform(R)</code>, where R is an
<code>AffineTransform</code> represented by the following matrix:
<pre>
         [   cos(theta)    -sin(theta)    0   ]
         [   sin(theta)     cos(theta)    0   ]
         [       0              0         1   ]
</pre>
Rotating with a positive angle theta rotates points on the positive
x axis toward the positive y axis.
@param theta the angle of rotation in radians
"
      end

      operation 6225794 "rotate"
	abstract public explicit_return_type "void"
	nparams 3
	  param in name "theta" explicit_type "double"
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the current <code>Graphics2D</code>
<code>Transform</code> with a translated rotation
transform.  Subsequent rendering is transformed by a transform
which is constructed by translating to the specified location,
rotating by the specified radians, and translating back by the same
amount as the original translation.  This is equivalent to the
following sequence of calls:
<pre>
         translate(x, y);
         rotate(theta);
         translate(-x, -y);
</pre>
Rotating with a positive angle theta rotates points on the positive
x axis toward the positive y axis.
@param theta the angle of rotation in radians
@param x the x coordinate of the origin of the rotation
@param y the y coordinate of the origin of the rotation
"
      end

      operation 6225922 "scale"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "sx" explicit_type "double"
	  param in name "sy" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the current <code>Graphics2D</code>
<code>Transform</code> with a scaling transformation
Subsequent rendering is resized according to the specified scaling
factors relative to the previous scaling.
This is equivalent to calling <code>transform(S)</code>, where S is an
<code>AffineTransform</code> represented by the following matrix:
<pre>
         [   sx   0    0   ]
         [   0    sy   0   ]
         [   0    0    1   ]
</pre>
@param sx the amount by which X coordinates in subsequent
rendering operations are multiplied relative to previous
rendering operations.
@param sy the amount by which Y coordinates in subsequent
rendering operations are multiplied relative to previous
rendering operations.
"
      end

      operation 6226050 "shear"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "shx" explicit_type "double"
	  param in name "shy" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the current <code>Graphics2D</code>
<code>Transform</code> with a shearing transform.
Subsequent renderings are sheared by the specified
multiplier relative to the previous position.
This is equivalent to calling <code>transform(SH)</code>, where SH
is an <code>AffineTransform</code> represented by the following
matrix:
<pre>
         [   1   shx   0   ]
         [  shy   1    0   ]
         [   0    0    1   ]
</pre>
@param shx the multiplier by which coordinates are shifted in
the positive X axis direction as a function of their Y coordinate
@param shy the multiplier by which coordinates are shifted in
the positive Y axis direction as a function of their X coordinate
"
      end

      operation 6226178 "transform"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "Tx" type class_ref 381058 // AffineTransform
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Composes an <code>AffineTransform</code> object with the
<code>Transform</code> in this <code>Graphics2D</code> according
to the rule last-specified-first-applied.  If the current
<code>Transform</code> is Cx, the result of composition
with Tx is a new <code>Transform</code> Cx'.  Cx' becomes the
current <code>Transform</code> for this <code>Graphics2D</code>.
Transforming a point p by the updated <code>Transform</code> Cx' is
equivalent to first transforming p by Tx and then transforming
the result by the original <code>Transform</code> Cx.  In other
words, Cx'(p) = Cx(Tx(p)).  A copy of the Tx is made, if necessary,
so further modifications to Tx do not affect rendering.
@param Tx the <code>AffineTransform</code> object to be composed with
the current <code>Transform</code>
@see #setTransform
@see AffineTransform
"
      end

      operation 6226306 "setTransform"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "Tx" type class_ref 381058 // AffineTransform
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overwrites the Transform in the <code>Graphics2D</code> context.
WARNING: This method should <b>never</b> be used to apply a new
coordinate transform on top of an existing transform because the
<code>Graphics2D</code> might already have a transform that is
needed for other purposes, such as rendering Swing
components or applying a scaling transformation to adjust for the
resolution of a printer.
<p>To add a coordinate transform, use the
<code>transform</code>, <code>rotate</code>, <code>scale</code>,
or <code>shear</code> methods.  The <code>setTransform</code>
method is intended only for restoring the original
<code>Graphics2D</code> transform after rendering, as shown in this
example:
<pre>
// Get the current transform
AffineTransform saveAT = g2.getTransform();
// Perform transformation
g2d.transform(...);
// Render
g2d.draw(...);
// Restore original transform
g2d.setTransform(saveAT);
</pre>

@param Tx the <code>AffineTransform</code> that was retrieved
          from the <code>getTransform</code> method
@see #transform
@see #getTransform
@see AffineTransform
"
      end

      operation 6226434 "getTransform"
	abstract public return_type class_ref 381058 // AffineTransform
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the current <code>Transform</code> in the
<code>Graphics2D</code> context.
@return the current <code>AffineTransform</code> in the
            <code>Graphics2D</code> context.
@see #transform
@see #setTransform
"
      end

      operation 6226562 "getPaint"
	abstract public return_type class_ref 860418 // Paint
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>Paint</code> of the
<code>Graphics2D</code> context.
@return the current <code>Graphics2D</code> <code>Paint</code>,
which defines a color or pattern.
@see #setPaint
@see java.awt.Graphics#setColor
"
      end

      operation 6226690 "getComposite"
	abstract public return_type class_ref 856322 // Composite
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>Composite</code> in the
<code>Graphics2D</code> context.
@return the current <code>Graphics2D</code> <code>Composite</code>,
             which defines a compositing style.
@see #setComposite
"
      end

      operation 6226818 "setBackground"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "color" type class_ref 323458 // Color
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color for the <code>Graphics2D</code> context.
The background color is used for clearing a region.
When a <code>Graphics2D</code> is constructed for a
<code>Component</code>, the background color is
inherited from the <code>Component</code>. Setting the background color
in the <code>Graphics2D</code> context only affects the subsequent
<code>clearRect</code> calls and not the background color of the
<code>Component</code>.  To change the background
of the <code>Component</code>, use appropriate methods of
the <code>Component</code>.
@param color the background color that is used in
subsequent calls to <code>clearRect</code>
@see #getBackground
@see java.awt.Graphics#clearRect
"
      end

      operation 6226946 "getBackground"
	abstract public return_type class_ref 323458 // Color
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the background color used for clearing a region.
@return the current <code>Graphics2D</code> <code>Color</code>,
which defines the background color.
@see #setBackground
"
      end

      operation 6227074 "getStroke"
	abstract public return_type class_ref 857858 // Stroke
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current <code>Stroke</code> in the
<code>Graphics2D</code> context.
@return the current <code>Graphics2D</code> <code>Stroke</code>,
                which defines the line style.
@see #setStroke
"
      end

      operation 6227202 "clip"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 379394 // Shape
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Intersects the current <code>Clip</code> with the interior of the
specified <code>Shape</code> and sets the <code>Clip</code> to the
resulting intersection.  The specified <code>Shape</code> is
transformed with the current <code>Graphics2D</code>
<code>Transform</code> before being intersected with the current
<code>Clip</code>.  This method is used to make the current
<code>Clip</code> smaller.
To make the <code>Clip</code> larger, use <code>setClip</code>.
The <i>user clip</i> modified by this method is independent of the
clipping associated with device bounds and visibility.  If no clip has
previously been set, or if the clip has been cleared using
{@link Graphics#setClip(Shape) setClip} with a <code>null</code>
argument, the specified <code>Shape</code> becomes the new
user clip.
@param s the <code>Shape</code> to be intersected with the current
         <code>Clip</code>.  If <code>s</code> is <code>null</code>,
         this method clears the current <code>Clip</code>.
"
      end

      operation 6227330 "getFontRenderContext"
	abstract public return_type class_ref 866178 // FontRenderContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the rendering context of the <code>Font</code> within this
<code>Graphics2D</code> context.
The {@link FontRenderContext}
encapsulates application hints such as anti-aliasing and
fractional metrics, as well as target device specific information
such as dots-per-inch.  This information should be provided by the
application when using objects that perform typographical
formatting, such as <code>Font</code> and
<code>TextLayout</code>.  This information should also be provided
by applications that perform their own layout and need accurate
measurements of various characteristics of glyphs such as advance
and line height when various rendering hints have been applied to
the text rendering.

@return a reference to an instance of FontRenderContext.
@see java.awt.font.FontRenderContext
@see java.awt.Font#createGlyphVector
@see java.awt.font.TextLayout
@since     1.2
"
      end
    end

    class 338690 "Container"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A generic Abstract Window Toolkit(AWT) container object is a component
that can contain other AWT components.
<p>
Components added to a container are tracked in a list.  The order
of the list will define the components' front-to-back stacking order
within the container.  If no index is specified when adding a
component to a container, it will be added to the end of the list
(and hence to the bottom of the stacking order).
<p>
<b>Note</b>: For details on the focus subsystem, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author      Arthur van Hoff
@author      Sami Shaio
@see       #add(java.awt.Component, int)
@see       #getComponent(int)
@see       LayoutManager
@since     JDK1.0
"
      classrelation 605698 // <generalisation>
	relation 605698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 605698 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      attribute 450818 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.Container\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 450946 "eventLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.event.Container\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 605826 // EMPTY_ARRAY (<unidirectional association>)
	relation 605826 --->
	  a role_name "EMPTY_ARRAY" multiplicity "[]" init_value " new Component[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 605826 // EMPTY_ARRAY (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 605954 // component (<unidirectional association>)
	relation 605954 --->
	  a role_name "component" init_value " new ArrayList<>()" private
	    comment "
The components in this container.
@see #add
@see #getComponents

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 605954 // component (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 606082 // layoutMgr (<unidirectional association>)
	relation 606082 --->
	  a role_name "layoutMgr" package
	    comment "
Layout manager for this container.
@see #doLayout
@see #setLayout
@see #getLayout

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606082 // layoutMgr (<unidirectional association>)
	  b parent class_ref 349698 // LayoutManager
      end

      classrelation 606210 // dispatcher (<unidirectional association>)
	relation 606210 --->
	  a role_name "dispatcher" private
	    comment "
Event router for lightweight components.  If this container
is native, this dispatcher takes care of forwarding and
retargeting the events to lightweight components contained
(if any).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606210 // dispatcher (<unidirectional association>)
	  b parent class_ref 349826 // LightweightDispatcher
      end

      classrelation 606338 // focusTraversalPolicy (<unidirectional association>)
	relation 606338 --->
	  a role_name "focusTraversalPolicy" private
	    comment "
The focus traversal policy that will manage keyboard traversal of this
Container's children, if this Container is a focus cycle root. If the
value is null, this Container inherits its policy from its focus-cycle-
root ancestor. If all such ancestors of this Container have null
policies, then the current KeyboardFocusManager's default policy is
used. If the value is non-null, this policy will be inherited by all
focus-cycle-root children that have no keyboard-traversal policy of
their own (as will, recursively, their focus-cycle-root children).
<p>
If this Container is not a focus cycle root, the value will be
remembered, but will not be used or inherited by this or any other
Containers until this Container is made a focus cycle root.

@see #setFocusTraversalPolicy
@see #getFocusTraversalPolicy
@since 1.4

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606338 // focusTraversalPolicy (<unidirectional association>)
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      attribute 451074 "focusCycleRoot"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether this Component is the root of a focus traversal cycle.
Once focus enters a traversal cycle, typically it cannot leave it via
focus traversal unless one of the up- or down-cycle keys is pressed.
Normal traversal is limited to this Container, and all of this
Container's descendants that are not descendants of inferior focus cycle
roots.

@see #setFocusCycleRoot
@see #isFocusCycleRoot
@since 1.4

"
      end

      attribute 451202 "focusTraversalPolicyProvider"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Stores the value of focusTraversalPolicyProvider property.
@since 1.5
@see #setFocusTraversalPolicyProvider

"
      end

      classrelation 606466 // printingThreads (<unidirectional association>)
	relation 606466 --->
	  a role_name "printingThreads" private
	    comment " keeps track of the threads that are printing this component
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Thread> ${name}${value};
"
	    classrelation_ref 606466 // printingThreads (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 451330 "printing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if there is at least one thread that's printing this component
"
      end

      classrelation 606594 // containerListener (<unidirectional association>)
	relation 606594 --->
	  a role_name "containerListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606594 // containerListener (<unidirectional association>)
	  b parent class_ref 350082 // ContainerListener
      end

      attribute 451458 "listeningChildren"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " HierarchyListener and HierarchyBoundsListener support 
"
      end

      attribute 451586 "listeningBoundsChildren"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 451714 "descendantsCount"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 606722 // preserveBackgroundColor (<unidirectional association>)
	relation 606722 --->
	  a role_name "preserveBackgroundColor" init_value " null" package
	    comment " Non-opaque window support -- see Window.setLayersOpaque 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606722 // preserveBackgroundColor (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 451842 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4613797578919906343L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      attribute 451970 "INCLUDE_SELF"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant which toggles one of the controllable behaviors
of <code>getMouseEventTarget</code>. It is used to specify whether
the method can return the Container on which it is originally called
in case if none of its children are the current mouse event targets.

@see #getMouseEventTarget(int, int, boolean)

"
      end

      attribute 452098 "SEARCH_HEAVYWEIGHTS"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant which toggles one of the controllable behaviors
of <code>getMouseEventTarget</code>. It is used to specify whether
the method should search only lightweight components.

@see #getMouseEventTarget(int, int, boolean)

"
      end

      attribute 452226 "numOfHWComponents"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of HW or LW components in this container (including
all descendant containers).

"
      end

      attribute 452354 "numOfLWComponents"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 452482 "mixingLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.mixing.Container\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 606850 // serialPersistentFields (<unidirectional association>)
	relation 606850 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"ncomponents\", Integer.TYPE),
        new ObjectStreamField(\"component\", Component[].class),
        new ObjectStreamField(\"layoutMgr\", LayoutManager.class),
        new ObjectStreamField(\"dispatcher\", LightweightDispatcher.class),
        new ObjectStreamField(\"maxSize\", Dimension.class),
        new ObjectStreamField(\"focusCycleRoot\", Boolean.TYPE),
        new ObjectStreamField(\"containerSerializedDataVersion\", Integer.TYPE),
        new ObjectStreamField(\"focusTraversalPolicyProvider\", Boolean.TYPE),
    }" class_relation const_relation private
	    comment "
@serialField ncomponents                     int
      The number of components in this container.
      This value can be null.
@serialField component                       Component[]
      The components in this container.
@serialField layoutMgr                       LayoutManager
      Layout manager for this container.
@serialField dispatcher                      LightweightDispatcher
      Event router for lightweight components.  If this container
      is native, this dispatcher takes care of forwarding and
      retargeting the events to lightweight components contained
      (if any).
@serialField maxSize                         Dimension
      Maximum size of this Container.
@serialField focusCycleRoot                  boolean
      Indicates whether this Component is the root of a focus traversal cycle.
      Once focus enters a traversal cycle, typically it cannot leave it via
      focus traversal unless one of the up- or down-cycle keys is pressed.
      Normal traversal is limited to this Container, and all of this
      Container's descendants that are not descendants of inferior focus cycle
      roots.
@serialField containerSerializedDataVersion  int
      Container Serial Data Version.
@serialField focusTraversalPolicyProvider    boolean
      Stores the value of focusTraversalPolicyProvider property.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 606850 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      extra_member 135426 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setContainerAccessor(new AWTAccessor.ContainerAccessor() {
            @Override
            public void validateUnconditionally(Container cont) {
                cont.validateUnconditionally();
            }

            @Override
            public Component findComponentAt(Container cont, int x, int y,
                    boolean ignoreEnabled) {
                return cont.findComponentAt(x, y, ignoreEnabled);
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 1944834 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
called from C.
"
      end

      operation 1944962 "Container"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Container. Containers can be extended directly,
but are lightweight in this case and must be contained by a parent
somewhere higher up in the component tree that is native.
(such as Frame for example).
"
      end

      operation 1945090 "initializeFocusTraversalKeys"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"unchecked\",\"rawtypes\"})
"
	
	
	
      end

      operation 1945218 "getComponentCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of components in this panel.
<p>
Note: This method should be called under AWT tree lock.

@return    the number of components in this panel.
@see       #getComponent
@since     JDK1.1
@see Component#getTreeLock()
"
      end

      operation 1945346 "countComponents"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by getComponentCount().
"
      end

      operation 1945474 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the nth component in this container.
<p>
Note: This method should be called under AWT tree lock.

@param      n   the index of the component to get.
@return     the n<sup>th</sup> component in this container.
@exception  ArrayIndexOutOfBoundsException
                if the n<sup>th</sup> value does not exist.
@see Component#getTreeLock()
"
      end

      operation 1945602 "getComponents"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the components in this container.
<p>
Note: This method should be called under AWT tree lock.

@return    an array of all the components in this container.
@see Component#getTreeLock()
"
      end

      operation 1945730 "getComponents_NoClientCode"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       This functionality is implemented in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 1945858 "getComponentsSync"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wrapper for getComponents() method with a proper synchronization.
"
      end

      operation 1945986 "getInsets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the insets of this container, which indicate the size
of the container's border.
<p>
A <code>Frame</code> object, for example, has a top inset that
corresponds to the height of the frame's title bar.
@return    the insets of this container.
@see       Insets
@see       LayoutManager
@since     JDK1.1
"
      end

      operation 1946114 "insets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getInsets()</code>.
"
      end

      operation 1946242 "add"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified component to the end of this container.
This is a convenience method for {@link #addImpl}.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.

@param     comp   the component to be added
@exception NullPointerException if {@code comp} is {@code null}
@see #addImpl
@see #invalidate
@see #validate
@see javax.swing.JComponent#revalidate()
@return    the component argument
"
      end

      operation 1946370 "add"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container.
This is a convenience method for {@link #addImpl}.
<p>
This method is obsolete as of 1.1.  Please use the
method <code>add(Component, Object)</code> instead.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.

@exception NullPointerException if {@code comp} is {@code null}
@see #add(Component, Object)
@see #invalidate
"
      end

      operation 1946498 "add"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container at the given
position.
This is a convenience method for {@link #addImpl}.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.


@param     comp   the component to be added
@param     index    the position at which to insert the component,
                  or <code>-1</code> to append the component to the end
@exception NullPointerException if {@code comp} is {@code null}
@exception IllegalArgumentException if {@code index} is invalid (see
           {@link #addImpl} for details)
@return    the component <code>comp</code>
@see #addImpl
@see #remove
@see #invalidate
@see #validate
@see javax.swing.JComponent#revalidate()
"
      end

      operation 1946626 "checkAddToSelf"
	private explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the component
isn't supposed to be added into itself.
"
      end

      operation 1946754 "checkNotAWindow"
	private explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the component is not a Window instance.
"
      end

      operation 1946882 "checkAdding"
	private explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the component comp can be added to this container
Checks :  index in bounds of container's size,
comp is not one of this container's parents,
and comp is not a window.
Comp and container must be on the same GraphicsDevice.
if comp is container, all sub-components must be on
same GraphicsDevice.

@since 1.5
"
      end

      operation 1947010 "removeDelicately"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "newParent" type class_ref 338690 // Container
	  param in name "newIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes component comp from this container without making unneccessary changes
and generating unneccessary events. This function intended to perform optimized
remove, for example, if newParent and current parent are the same it just changes
index without calling removeNotify.
Note: Should be called while holding treeLock
Returns whether removeNotify was invoked
@since: 1.5
"
      end

      operation 1947138 "canContainFocusOwner"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "focusOwnerCandidate" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this container can contain component which is focus owner.
Verifies that container is enable and showing, and if it is focus cycle root
its FTP allows component to be focus owner
@since 1.5
"
      end

      operation 1947266 "hasHeavyweightDescendants"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this container has heavyweight children.
Note: Should be called while holding tree lock
@return true if there is at least one heavyweight children in a container, false otherwise
@since 1.5
"
      end

      operation 1947394 "hasLightweightDescendants"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this container has lightweight children.
Note: Should be called while holding tree lock
@return true if there is at least one lightweight children in a container, false otherwise
@since 1.7
"
      end

      operation 1947522 "getHeavyweightContainer"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns closest heavyweight component to this container. If this container is heavyweight
returns this.
@since 1.5
"
      end

      operation 1947650 "isRemoveNotifyNeeded"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "oldContainer" type class_ref 338690 // Container
	  param inout name "newContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detects whether or not remove from current parent and adding to new parent requires call of
removeNotify on the component. Since removeNotify destroys native window this might (not)
be required. For example, if new container and old containers are the same we don't need to
destroy native window.
@since: 1.5
"
      end

      operation 1947778 "setComponentZOrder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the specified component to the specified z-order index in
the container. The z-order determines the order that components
are painted; the component with the highest z-order paints first
and the component with the lowest z-order paints last.
Where components overlap, the component with the lower
z-order paints over the component with the higher z-order.
<p>
If the component is a child of some other container, it is
removed from that container before being added to this container.
The important difference between this method and
<code>java.awt.Container.add(Component, int)</code> is that this method
doesn't call <code>removeNotify</code> on the component while
removing it from its previous container unless necessary and when
allowed by the underlying native windowing system. This way, if the
component has the keyboard focus, it maintains the focus when
moved to the new position.
<p>
This property is guaranteed to apply only to lightweight
non-<code>Container</code> components.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.
<p>
<b>Note</b>: Not all platforms support changing the z-order of
heavyweight components from one container into another without
the call to <code>removeNotify</code>. There is no way to detect
whether a platform supports this, so developers shouldn't make
any assumptions.

@param     comp the component to be moved
@param     index the position in the container's list to
           insert the component, where <code>getComponentCount()</code>
           appends to the end
@exception NullPointerException if <code>comp</code> is
           <code>null</code>
@exception IllegalArgumentException if <code>comp</code> is one of the
           container's parents
@exception IllegalArgumentException if <code>index</code> is not in
           the range <code>[0, getComponentCount()]</code> for moving
           between containers, or not in the range
           <code>[0, getComponentCount()-1]</code> for moving inside
           a container
@exception IllegalArgumentException if adding a container to itself
@exception IllegalArgumentException if adding a <code>Window</code>
           to a container
@see #getComponentZOrder(java.awt.Component)
@see #invalidate
@since 1.5
"
      end

      operation 1947906 "reparentTraverse"
	private explicit_return_type "void"
	nparams 2
	  param inout name "parentPeer" type class_ref 350210 // ContainerPeer
	  param inout name "child" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverses the tree of components and reparents children heavyweight component
to new heavyweight parent.
@since 1.5
"
      end

      operation 1948034 "reparentChild"
	private explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reparents child component peer to this container peer.
Container must be heavyweight.
@since 1.5
"
      end

      operation 1948162 "addDelicately"
	private explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "curParent" type class_ref 338690 // Container
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds component to this container. Tries to minimize side effects of this adding -
doesn't call remove notify if it is not required.
@since 1.5
"
      end

      operation 1948290 "getComponentZOrder"
	public explicit_return_type "int"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the z-order index of the component inside the container.
The higher a component is in the z-order hierarchy, the lower
its index.  The component with the lowest z-order index is
painted last, above all other child components.

@param comp the component being queried
@return  the z-order index of the component; otherwise
         returns -1 if the component is <code>null</code>
         or doesn't belong to the container
@see #setComponentZOrder(java.awt.Component, int)
@since 1.5
"
      end

      operation 1948418 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the end of this container.
Also notifies the layout manager to add the component to
this container's layout using the specified constraints object.
This is a convenience method for {@link #addImpl}.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.


@param     comp the component to be added
@param     constraints an object expressing
                 layout constraints for this component
@exception NullPointerException if {@code comp} is {@code null}
@see #addImpl
@see #invalidate
@see #validate
@see javax.swing.JComponent#revalidate()
@see       LayoutManager
@since     JDK1.1
"
      end

      operation 1948546 "add"
	public explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container with the specified
constraints at the specified index.  Also notifies the layout
manager to add the component to the this container's layout using
the specified constraints object.
This is a convenience method for {@link #addImpl}.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.


@param comp the component to be added
@param constraints an object expressing layout constraints for this
@param index the position in the container's list at which to insert
the component; <code>-1</code> means insert at the end
component
@exception NullPointerException if {@code comp} is {@code null}
@exception IllegalArgumentException if {@code index} is invalid (see
           {@link #addImpl} for details)
@see #addImpl
@see #invalidate
@see #validate
@see javax.swing.JComponent#revalidate()
@see #remove
@see LayoutManager
"
      end

      operation 1948674 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this container at the specified
index. This method also notifies the layout manager to add
the component to this container's layout using the specified
constraints object via the <code>addLayoutComponent</code>
method.
<p>
The constraints are
defined by the particular layout manager being used.  For
example, the <code>BorderLayout</code> class defines five
constraints: <code>BorderLayout.NORTH</code>,
<code>BorderLayout.SOUTH</code>, <code>BorderLayout.EAST</code>,
<code>BorderLayout.WEST</code>, and <code>BorderLayout.CENTER</code>.
<p>
The <code>GridBagLayout</code> class requires a
<code>GridBagConstraints</code> object.  Failure to pass
the correct type of constraints object results in an
<code>IllegalArgumentException</code>.
<p>
If the current layout manager implements {@code LayoutManager2}, then
{@link LayoutManager2#addLayoutComponent(Component,Object)} is invoked on
it. If the current layout manager does not implement
{@code LayoutManager2}, and constraints is a {@code String}, then
{@link LayoutManager#addLayoutComponent(String,Component)} is invoked on it.
<p>
If the component is not an ancestor of this container and has a non-null
parent, it is removed from its current parent before it is added to this
container.
<p>
This is the method to override if a program needs to track
every add request to a container as all other add methods defer
to this one. An overriding method should
usually include a call to the superclass's version of the method:

<blockquote>
<code>super.addImpl(comp, constraints, index)</code>
</blockquote>
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
display the added component.

@param     comp       the component to be added
@param     constraints an object expressing layout constraints
                for this component
@param     index the position in the container's list at which to
                insert the component, where <code>-1</code>
                means append to the end
@exception IllegalArgumentException if {@code index} is invalid;
           if {@code comp} is a child of this container, the valid
           range is {@code [-1, getComponentCount()-1]}; if component is
           not a child of this container, the valid range is
           {@code [-1, getComponentCount()]}

@exception IllegalArgumentException if {@code comp} is an ancestor of
                                    this container
@exception IllegalArgumentException if adding a window to a container
@exception NullPointerException if {@code comp} is {@code null}
@see       #add(Component)
@see       #add(Component, int)
@see       #add(Component, java.lang.Object)
@see #invalidate
@see       LayoutManager
@see       LayoutManager2
@since     JDK1.1
"
      end

      operation 1948802 "updateGraphicsData"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1948930 "checkGD"
	package explicit_return_type "void"
	nparams 1
	  param inout name "stringID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that all Components that this Container contains are on
the same GraphicsDevice as this Container.  If not, throws an
IllegalArgumentException.
"
      end

      operation 1949058 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the component, specified by <code>index</code>,
from this container.
This method also notifies the layout manager to remove the
component from this container's layout via the
<code>removeLayoutComponent</code> method.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
reflect the changes.


@param     index   the index of the component to be removed
@throws ArrayIndexOutOfBoundsException if {@code index} is not in
        range {@code [0, getComponentCount()-1]}
@see #add
@see #invalidate
@see #validate
@see #getComponentCount
@since JDK1.1
"
      end

      operation 1949186 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from this container.
This method also notifies the layout manager to remove the
component from this container's layout via the
<code>removeLayoutComponent</code> method.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
reflect the changes.

@param comp the component to be removed
@throws NullPointerException if {@code comp} is {@code null}
@see #add
@see #invalidate
@see #validate
@see #remove(int)
"
      end

      operation 1949314 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the components from this container.
This method also notifies the layout manager to remove the
components from this container's layout via the
<code>removeLayoutComponent</code> method.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy. If the container has already been
displayed, the hierarchy must be validated thereafter in order to
reflect the changes.

@see #add
@see #remove
@see #invalidate
"
      end

      operation 1949442 "numListening"
	package explicit_return_type "int"
	nparams 1
	  param in name "mask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1949570 "adjustListeningChildren"
	package explicit_return_type "void"
	nparams 2
	  param in name "mask" explicit_type "long"
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1949698 "adjustDescendants"
	package explicit_return_type "void"
	nparams 1
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1949826 "adjustDecendantsOnParent"
	package explicit_return_type "void"
	nparams 1
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1949954 "countHierarchyMembers"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1950082 "getListenersCount"
	private explicit_return_type "int"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "enabledOnToolkit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1950210 "createHierarchyEvents"
	package explicit_return_type "int"
	nparams 5
	  param in name "id" explicit_type "int"
	  param inout name "changed" type class_ref 338818 // Component
	  param inout name "changedParent" type class_ref 338690 // Container
	  param in name "changeFlags" explicit_type "long"
	  param inout name "enabledOnToolkit" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1950338 "createChildHierarchyEvents"
	package explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param in name "changeFlags" explicit_type "long"
	  param inout name "enabledOnToolkit" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1950466 "getLayout"
	public return_type class_ref 349698 // LayoutManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the layout manager for this container.
@see #doLayout
@see #setLayout
"
      end

      operation 1950594 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layout manager for this container.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param mgr the specified layout manager
@see #doLayout
@see #getLayout
@see #invalidate
"
      end

      operation 1950722 "doLayout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes this container to lay out its components.  Most programs
should not call this method directly, but should invoke
the <code>validate</code> method instead.
@see LayoutManager#layoutContainer
@see #setLayout
@see #validate
@since JDK1.1
"
      end

      operation 1950850 "layout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>doLayout()</code>.
"
      end

      operation 1950978 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if this container is a <i>validate root</i>.
<p>
Layout-related changes, such as bounds of the validate root descendants,
do not affect the layout of the validate root parent. This peculiarity
enables the {@code invalidate()} method to stop invalidating the
component hierarchy when the method encounters a validate root. However,
to preserve backward compatibility this new optimized behavior is
enabled only when the {@code java.awt.smartInvalidate} system property
value is set to {@code true}.
<p>
If a component hierarchy contains validate roots and the new optimized
{@code invalidate()} behavior is enabled, the {@code validate()} method
must be invoked on the validate root of a previously invalidated
component to restore the validity of the hierarchy later. Otherwise,
calling the {@code validate()} method on the top-level container (such
as a {@code Frame} object) should be used to restore the validity of the
component hierarchy.
<p>
The {@code Window} class and the {@code Applet} class are the validate
roots in AWT.  Swing introduces more validate roots.

@return whether this container is a validate root
@see #invalidate
@see java.awt.Component#invalidate
@see javax.swing.JComponent#isValidateRoot
@see javax.swing.JComponent#revalidate
@since 1.7
"
      end

      attribute 452610 "isJavaAwtSmartInvalidate"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 135554 "initialization"
	
	cpp "" ""
	java "  static {
        // Don't lazy-read because every app uses invalidate()
        isJavaAwtSmartInvalidate = AccessController.doPrivileged(
                new GetBooleanAction(\"java.awt.smartInvalidate\"));
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 1951106 "invalidateParent"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Invalidates the parent of the container unless the container
is a validate root.
"
      end

      operation 1951234 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Invalidates the container.
<p>
If the {@code LayoutManager} installed on this container is an instance
of the {@code LayoutManager2} interface, then
the {@link LayoutManager2#invalidateLayout(Container)} method is invoked
on it supplying this {@code Container} as the argument.
<p>
Afterwards this method marks this container invalid, and invalidates its
ancestors. See the {@link Component#invalidate} method for more details.

@see #validate
@see #layout
@see LayoutManager2
"
      end

      operation 1951362 "validate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates this container and all of its subcomponents.
<p>
Validating a container means laying out its subcomponents.
Layout-related changes, such as setting the bounds of a component, or
adding a component to the container, invalidate the container
automatically.  Note that the ancestors of the container may be
invalidated also (see {@link Component#invalidate} for details.)
Therefore, to restore the validity of the hierarchy, the {@code
validate()} method should be invoked on the top-most invalid
container of the hierarchy.
<p>
Validating the container may be a quite time-consuming operation. For
performance reasons a developer may postpone the validation of the
hierarchy till a set of layout-related operations completes, e.g. after
adding all the children to the container.
<p>
If this {@code Container} is not valid, this method invokes
the {@code validateTree} method and marks this {@code Container}
as valid. Otherwise, no action is performed.

@see #add(java.awt.Component)
@see #invalidate
@see Container#isValidateRoot
@see javax.swing.JComponent#revalidate()
@see #validateTree
"
      end

      attribute 452738 "descendUnconditionallyWhenValidating"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether valid containers should also traverse their
children and call the validateTree() method on them.

Synchronization: TreeLock.

The field is allowed to be static as long as the TreeLock itself is
static.

@see #validateUnconditionally()

"
      end

      operation 1951490 "validateUnconditionally"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unconditionally validate the component hierarchy.
"
      end

      operation 1951618 "validateTree"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursively descends the container tree and recomputes the
layout for any subtrees marked as needing it (those marked as
invalid).  Synchronization should be provided by the method
that calls this one:  <code>validate</code>.

@see #doLayout
@see #validate
"
      end

      operation 1951746 "invalidateTree"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursively descends the container tree and invalidates all
contained components.
"
      end

      operation 1951874 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the font of this container.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param f The font to become this container's font.
@see Component#getFont
@see #invalidate
@since JDK1.0
"
      end

      operation 1952002 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred size of this container.  If the preferred size has
not been set explicitly by {@link Component#setPreferredSize(Dimension)}
and this {@code Container} has a {@code non-null} {@link LayoutManager},
then {@link LayoutManager#preferredLayoutSize(Container)}
is used to calculate the preferred size.

<p>Note: some implementations may cache the value returned from the
{@code LayoutManager}.  Implementations that cache need not invoke
{@code preferredLayoutSize} on the {@code LayoutManager} every time
this method is invoked, rather the {@code LayoutManager} will only
be queried after the {@code Container} becomes invalid.

@return    an instance of <code>Dimension</code> that represents
               the preferred size of this container.
@see       #getMinimumSize
@see       #getMaximumSize
@see       #getLayout
@see       LayoutManager#preferredLayoutSize(Container)
@see       Component#getPreferredSize
"
      end

      operation 1952130 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize()</code>.
"
      end

      operation 1952258 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum size of this container.  If the minimum size has
not been set explicitly by {@link Component#setMinimumSize(Dimension)}
and this {@code Container} has a {@code non-null} {@link LayoutManager},
then {@link LayoutManager#minimumLayoutSize(Container)}
is used to calculate the minimum size.

<p>Note: some implementations may cache the value returned from the
{@code LayoutManager}.  Implementations that cache need not invoke
{@code minimumLayoutSize} on the {@code LayoutManager} every time
this method is invoked, rather the {@code LayoutManager} will only
be queried after the {@code Container} becomes invalid.

@return    an instance of <code>Dimension</code> that represents
               the minimum size of this container.
@see       #getPreferredSize
@see       #getMaximumSize
@see       #getLayout
@see       LayoutManager#minimumLayoutSize(Container)
@see       Component#getMinimumSize
@since     JDK1.1
"
      end

      operation 1952386 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize()</code>.
"
      end

      operation 1952514 "getMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum size of this container.  If the maximum size has
not been set explicitly by {@link Component#setMaximumSize(Dimension)}
and the {@link LayoutManager} installed on this {@code Container}
is an instance of {@link LayoutManager2}, then
{@link LayoutManager2#maximumLayoutSize(Container)}
is used to calculate the maximum size.

<p>Note: some implementations may cache the value returned from the
{@code LayoutManager2}.  Implementations that cache need not invoke
{@code maximumLayoutSize} on the {@code LayoutManager2} every time
this method is invoked, rather the {@code LayoutManager2} will only
be queried after the {@code Container} becomes invalid.

@return    an instance of <code>Dimension</code> that represents
               the maximum size of this container.
@see       #getPreferredSize
@see       #getMinimumSize
@see       #getLayout
@see       LayoutManager2#maximumLayoutSize(Container)
@see       Component#getMaximumSize
"
      end

      operation 1952642 "getAlignmentX"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 1952770 "getAlignmentY"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 1952898 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints the container. This forwards the paint to any lightweight
components that are children of this container. If this method is
reimplemented, super.paint(g) should be called so that lightweight
components are properly rendered. If a child component is entirely
clipped by the current clipping setting in g, paint() will not be
forwarded to that child.

@param g the specified Graphics window
@see   Component#update(Graphics)
"
      end

      operation 1953026 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the container.  This forwards the update to any lightweight
components that are children of this container.  If this method is
reimplemented, super.update(g) should be called so that lightweight
components are properly rendered.  If a child component is entirely
clipped by the current clipping setting in g, update() will not be
forwarded to that child.

@param g the specified Graphics window
@see   Component#update(Graphics)
"
      end

      operation 1953154 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the container. This forwards the print to any lightweight
components that are children of this container. If this method is
reimplemented, super.print(g) should be called so that lightweight
components are properly rendered. If a child component is entirely
clipped by the current clipping setting in g, print() will not be
forwarded to that child.

@param g the specified Graphics window
@see   Component#update(Graphics)
"
      end

      operation 1953282 "paintComponents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints each of the components in this container.
@param     g   the graphics context.
@see       Component#paint
@see       Component#paintAll
"
      end

      operation 1953410 "lightweightPaint"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the peer callbacks into java.awt for printing of
lightweight Containers.
@param     g   the graphics context to use for printing.
@see       Component#printAll
@see       #printComponents
"
      end

      operation 1953538 "paintHeavyweightComponents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints all the heavyweight subcomponents.
"
      end

      operation 1953666 "printComponents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints each of the components in this container.
@param     g   the graphics context.
@see       Component#print
@see       Component#printAll
"
      end

      operation 1953794 "lightweightPrint"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the peer callbacks into java.awt for printing of
lightweight Containers.
@param     g   the graphics context to use for printing.
@see       Component#printAll
@see       #printComponents
"
      end

      operation 1953922 "printHeavyweightComponents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints all the heavyweight subcomponents.
"
      end

      operation 1954050 "addContainerListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 350082 // ContainerListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified container listener to receive container events
from this container.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l the container listener

@see #removeContainerListener
@see #getContainerListeners
"
      end

      operation 1954178 "removeContainerListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 350082 // ContainerListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified container listener so it no longer receives
container events from this container.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the container listener

@see #addContainerListener
@see #getContainerListeners
"
      end

      operation 1954306 "getContainerListeners"
	public return_type class_ref 350082 // ContainerListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the container listeners
registered on this container.

@return all of this container's <code>ContainerListener</code>s
        or an empty array if no container
        listeners are currently registered

@see #addContainerListener
@see #removeContainerListener
@since 1.4
"
      end

      operation 1954434 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Container</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Container</code> <code>c</code>
for its container listeners with the following code:

<pre>ContainerListener[] cls = (ContainerListener[])(c.getListeners(ContainerListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this container,
         or an empty array if no such listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>
@exception NullPointerException if {@code listenerType} is {@code null}

@see #getContainerListeners

@since 1.3
"
      end

      operation 1954562 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 1954690 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this container. If the event is a
<code>ContainerEvent</code>, it invokes the
<code>processContainerEvent</code> method, else it invokes
its superclass's <code>processEvent</code>.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e the event
"
      end

      operation 1954818 "processContainerEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 350338 // ContainerEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes container events occurring on this container by
dispatching them to any registered ContainerListener objects.
NOTE: This method will not be called unless container events
are enabled for this component; this happens when one of the
following occurs:
<ul>
<li>A ContainerListener object is registered via
    <code>addContainerListener</code>
<li>Container events are enabled via <code>enableEvents</code>
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e the container event
@see Component#enableEvents
"
      end

      operation 1954946 "dispatchEventImpl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event to this component or one of its sub components.
Create ANCESTOR_RESIZED and ANCESTOR_MOVED events in response to
COMPONENT_RESIZED and COMPONENT_MOVED events. We have to do this
here instead of in processComponentEvent because ComponentEvents
may not be enabled for this Container.
@param e the event
"
      end

      operation 1955074 "dispatchEventToSelf"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event to this component, without trying to forward
it to any subcomponents
@param e the event
"
      end

      operation 1955202 "getMouseEventTarget"
	package return_type class_ref 338818 // Component
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "includeSelf" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetchs the top-most (deepest) lightweight component that is interested
in receiving mouse events.
"
      end

      operation 1955330 "getDropTargetEventTarget"
	package return_type class_ref 338818 // Component
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "includeSelf" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the top-most (deepest) component to receive SunDropTargetEvents.
"
      end

      operation 1955458 "getMouseEventTarget"
	private return_type class_ref 338818 // Component
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "includeSelf" explicit_type "boolean"
	  param inout name "filter" type class_ref 350466 // EventTargetFilter
	  param inout name "searchHeavyweights" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A private version of getMouseEventTarget which has two additional
controllable behaviors. This method searches for the top-most
descendant of this container that contains the given coordinates
and is accepted by the given filter. The search will be constrained to
lightweight descendants if the last argument is <code>false</code>.

@param filter EventTargetFilter instance to determine whether the
       given component is a valid target for this event.
@param searchHeavyweights if <code>false</code>, the method
       will bypass heavyweight components during the search.
"
      end

      class 350466 "EventTargetFilter"
	visibility package stereotype "interface"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 1955714 "accept"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "comp" type class_ref 338818 // Component
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1955586 "getMouseEventTargetImpl"
	private return_type class_ref 338818 // Component
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "includeSelf" explicit_type "boolean"
	  param inout name "filter" type class_ref 350466 // EventTargetFilter
	  param inout name "searchHeavyweightChildren" explicit_type "boolean"
	  param inout name "searchHeavyweightDescendants" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A private version of getMouseEventTarget which has three additional
controllable behaviors. This method searches for the top-most
descendant of this container that contains the given coordinates
and is accepted by the given filter. The search will be constrained to
descendants of only lightweight children or only heavyweight children
of this container depending on searchHeavyweightChildren. The search will
be constrained to only lightweight descendants of the searched children
of this container if searchHeavyweightDescendants is <code>false</code>.

@param filter EventTargetFilter instance to determine whether the
       selected component is a valid target for this event.
@param searchHeavyweightChildren if <code>true</code>, the method
       will bypass immediate lightweight children during the search.
       If <code>false</code>, the methods will bypass immediate
       heavyweight children during the search.
@param searchHeavyweightDescendants if <code>false</code>, the method
       will bypass heavyweight descendants which are not immediate
       children during the search. If <code>true</code>, the method
       will traverse both lightweight and heavyweight descendants during
       the search.
"
      end

      class 350594 "MouseEventTargetFilter"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 606978 // <realization>
	  relation 606978 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 606978 // <realization>
	    b parent class_ref 350466 // EventTargetFilter
	end

	classrelation 607106 // FILTER (<unidirectional association>)
	  relation 607106 --->
	    a role_name "FILTER" init_value " new MouseEventTargetFilter()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 607106 // FILTER (<unidirectional association>)
	    b parent class_ref 350466 // EventTargetFilter
	end

	operation 1955842 "MouseEventTargetFilter"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1955970 "accept"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 350722 "DropTargetEventTargetFilter"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 607234 // <realization>
	  relation 607234 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 607234 // <realization>
	    b parent class_ref 350466 // EventTargetFilter
	end

	classrelation 607362 // FILTER (<unidirectional association>)
	  relation 607362 --->
	    a role_name "FILTER" init_value " new DropTargetEventTargetFilter()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 607362 // FILTER (<unidirectional association>)
	    b parent class_ref 350466 // EventTargetFilter
	end

	operation 1956098 "DropTargetEventTargetFilter"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1956226 "accept"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "comp" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1956354 "proxyEnableEvents"
	package explicit_return_type "void"
	nparams 1
	  param in name "events" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by lightweight components that want the containing
windowed parent to enable some kind of events on their behalf.
This is needed for events that are normally only dispatched to
windows to be accepted so that they can be forwarded downward to
the lightweight component that has enabled them.
"
      end

      operation 1956482 "deliverEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>dispatchEvent(AWTEvent e)</code>
"
      end

      operation 1956610 "getComponentAt"
	public return_type class_ref 338818 // Component
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the component that contains the x,y position.  The
top-most child component is returned in the case where there
is overlap in the components.  This is determined by finding
the component closest to the index 0 that claims to contain
the given point via Component.contains(), except that Components
which have native peers take precedence over those which do not
(i.e., lightweight Components).

@param x the <i>x</i> coordinate
@param y the <i>y</i> coordinate
@return null if the component does not contain the position.
If there is no child component at the requested point and the
point is within the bounds of the container the container itself
is returned; otherwise the top-most child is returned.
@see Component#contains
@since JDK1.1
"
      end

      operation 1956738 "locate"
	public return_type class_ref 338818 // Component
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getComponentAt(int, int)</code>.
"
      end

      operation 1956866 "getComponentAt"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the component that contains the specified point.
@param      p   the point.
@return     returns the component that contains the point,
                or <code>null</code> if the component does
                not contain the point.
@see        Component#contains
@since      JDK1.1
"
      end

      operation 1956994 "getMousePosition"
	public return_type class_ref 323714 // Point
	nparams 1
	  param inout name "allowChildren" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position of the mouse pointer in this <code>Container</code>'s
coordinate space if the <code>Container</code> is under the mouse pointer,
otherwise returns <code>null</code>.
This method is similar to {@link Component#getMousePosition()} with the exception
that it can take the <code>Container</code>'s children into account.
If <code>allowChildren</code> is <code>false</code>, this method will return
a non-null value only if the mouse pointer is above the <code>Container</code>
directly, not above the part obscured by children.
If <code>allowChildren</code> is <code>true</code>, this method returns
a non-null value if the mouse pointer is above <code>Container</code> or any
of its descendants.

@exception HeadlessException if GraphicsEnvironment.isHeadless() returns true
@param     allowChildren true if children should be taken into account
@see       Component#getMousePosition
@return    mouse coordinates relative to this <code>Component</code>, or null
@since     1.5
"
      end

      operation 1957122 "isSameOrAncestorOf"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "allowChildren" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1957250 "findComponentAt"
	public return_type class_ref 338818 // Component
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the visible child component that contains the specified
position.  The top-most child component is returned in the case
where there is overlap in the components.  If the containing child
component is a Container, this method will continue searching for
the deepest nested child component.  Components which are not
visible are ignored during the search.<p>

The findComponentAt method is different from getComponentAt in
that getComponentAt only searches the Container's immediate
children; if the containing component is a Container,
findComponentAt will search that child to find a nested component.

@param x the <i>x</i> coordinate
@param y the <i>y</i> coordinate
@return null if the component does not contain the position.
If there is no child component at the requested point and the
point is within the bounds of the container the container itself
is returned.
@see Component#contains
@see #getComponentAt
@since 1.2
"
      end

      operation 1957378 "findComponentAt"
	package return_type class_ref 338818 // Component
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "ignoreEnabled" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private version of findComponentAt which has a controllable
behavior. Setting 'ignoreEnabled' to 'false' bypasses disabled
Components during the search. This behavior is used by the
lightweight cursor support in sun.awt.GlobalCursorManager.

The addition of this feature is temporary, pending the
adoption of new, public API which exports this feature.
"
      end

      operation 1957506 "findComponentAtImpl"
	package return_type class_ref 338818 // Component
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "ignoreEnabled" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1957634 "getChildAt"
	class_operation private return_type class_ref 338818 // Component
	nparams 4
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "ignoreEnabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for findComponentAtImpl. Finds a child component using
findComponentAtImpl for Container and getComponentAt for Component.
"
      end

      operation 1957762 "findComponentAt"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locates the visible child component that contains the specified
point.  The top-most child component is returned in the case
where there is overlap in the components.  If the containing child
component is a Container, this method will continue searching for
the deepest nested child component.  Components which are not
visible are ignored during the search.<p>

The findComponentAt method is different from getComponentAt in
that getComponentAt only searches the Container's immediate
children; if the containing component is a Container,
findComponentAt will search that child to find a nested component.

@param      p   the point.
@return null if the component does not contain the position.
If there is no child component at the requested point and the
point is within the bounds of the container the container itself
is returned.
@throws NullPointerException if {@code p} is {@code null}
@see Component#contains
@see #getComponentAt
@since 1.2
"
      end

      operation 1957890 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Container displayable by connecting it to
a native screen resource.  Making a container displayable will
cause all of its children to be made displayable.
This method is called internally by the toolkit and should
not be called directly by programs.
@see Component#isDisplayable
@see #removeNotify
"
      end

      operation 1958018 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Container undisplayable by removing its connection
to its native screen resource.  Making a container undisplayable
will cause all of its children to be made undisplayable.
This method is called by the toolkit internally and should
not be called directly by programs.
@see Component#isDisplayable
@see #addNotify
"
      end

      operation 1958146 "isAncestorOf"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the component is contained in the component hierarchy of
this container.
@param c the component
@return     <code>true</code> if it is an ancestor;
            <code>false</code> otherwise.
@since      JDK1.1
"
      end

      classrelation 607490 // modalComp (<unidirectional association>)
	relation 607490 --->
	  a role_name "modalComp" package
	    comment "
The following code was added to support modal JInternalFrames
Unfortunately this code has to be added here so that we can get access to
some private AWT classes like SequencedEvent.

The native container of the LW component has this field set
to tell it that it should block Mouse events for all LW
children except for the modal component.

In the case of nested Modal components, we store the previous
modal component in the new modal components value of modalComp;

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607490 // modalComp (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 452866 "modalAppContext"
	package explicit_type "AppContext"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1958274 "startLWModal"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1958402 "stopLWModal"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 350850 "WakingRunnable"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 607618 // <realization>
	  relation 607618 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 607618 // <realization>
	    b parent class_ref 128770 // Runnable
	end

	operation 1958530 "run"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1958658 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " End of JOptionPane support code 

Returns a string representing the state of this <code>Container</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return    the parameter string of this container
"
      end

      operation 1958786 "list"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 128258 // PrintStream
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a listing of this container to the specified output
stream. The listing starts at the specified indentation.
<p>
The immediate children of the container are printed with
an indentation of <code>indent+1</code>.  The children
of those children are printed at <code>indent+2</code>
and so on.

@param    out      a print stream
@param    indent   the number of spaces to indent
@throws   NullPointerException if {@code out} is {@code null}
@see      Component#list(java.io.PrintStream, int)
@since    JDK1.0
"
      end

      operation 1958914 "list"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 195330 // PrintWriter
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints out a list, starting at the specified indentation,
to the specified print writer.
<p>
The immediate children of the container are printed with
an indentation of <code>indent+1</code>.  The children
of those children are printed at <code>indent+2</code>
and so on.

@param    out      a print writer
@param    indent   the number of spaces to indent
@throws   NullPointerException if {@code out} is {@code null}
@see      Component#list(java.io.PrintWriter, int)
@since    JDK1.1
"
      end

      operation 1959042 "setFocusTraversalKeys"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "keystrokes" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focus traversal keys for a given traversal operation for this
Container.
<p>
The default values for a Container's focus traversal keys are
implementation-dependent. Sun recommends that all implementations for a
particular native platform use the same default values. The
recommendations for Windows and Unix are listed below. These
recommendations are used in the Sun AWT implementations.

<table border=1 summary=\"Recommended default values for a Container's focus traversal keys\">
<tr>
   <th>Identifier</th>
   <th>Meaning</th>
   <th>Default</th>
</tr>
<tr>
   <td>KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS</td>
   <td>Normal forward keyboard traversal</td>
   <td>TAB on KEY_PRESSED, CTRL-TAB on KEY_PRESSED</td>
</tr>
<tr>
   <td>KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS</td>
   <td>Normal reverse keyboard traversal</td>
   <td>SHIFT-TAB on KEY_PRESSED, CTRL-SHIFT-TAB on KEY_PRESSED</td>
</tr>
<tr>
   <td>KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS</td>
   <td>Go up one focus traversal cycle</td>
   <td>none</td>
</tr>
<tr>
   <td>KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS<td>
   <td>Go down one focus traversal cycle</td>
   <td>none</td>
</tr>
</table>

To disable a traversal key, use an empty Set; Collections.EMPTY_SET is
recommended.
<p>
Using the AWTKeyStroke API, client code can specify on which of two
specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal
operation will occur. Regardless of which KeyEvent is specified,
however, all KeyEvents related to the focus traversal key, including the
associated KEY_TYPED event, will be consumed, and will not be dispatched
to any Container. It is a runtime error to specify a KEY_TYPED event as
mapping to a focus traversal operation, or to map the same event to
multiple default focus traversal operations.
<p>
If a value of null is specified for the Set, this Container inherits the
Set from its parent. If all ancestors of this Container have null
specified for the Set, then the current KeyboardFocusManager's default
Set is used.
<p>
This method may throw a {@code ClassCastException} if any {@code Object}
in {@code keystrokes} is not an {@code AWTKeyStroke}.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
       KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@param keystrokes the Set of AWTKeyStroke for the specified operation
@see #getFocusTraversalKeys
@see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS
@see KeyboardFocusManager#DOWN_CYCLE_TRAVERSAL_KEYS
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
        KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS, or if keystrokes
        contains null, or if any keystroke represents a KEY_TYPED event,
        or if any keystroke already maps to another focus traversal
        operation for this Container
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1959170 "getFocusTraversalKeys"
	public return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Set of focus traversal keys for a given traversal operation
for this Container. (See
<code>setFocusTraversalKeys</code> for a full description of each key.)
<p>
If a Set of traversal keys has not been explicitly defined for this
Container, then this Container's parent's Set is returned. If no Set
has been explicitly defined for any of this Container's ancestors, then
the current KeyboardFocusManager's default Set is returned.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
       KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@return the Set of AWTKeyStrokes for the specified operation. The Set
        will be unmodifiable, and may be empty. null will never be
        returned.
@see #setFocusTraversalKeys
@see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS
@see KeyboardFocusManager#DOWN_CYCLE_TRAVERSAL_KEYS
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
        KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@since 1.4
"
      end

      operation 1959298 "areFocusTraversalKeysSet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the Set of focus traversal keys for the given focus
traversal operation has been explicitly defined for this Container. If
this method returns <code>false</code>, this Container is inheriting the
Set from an ancestor, or from the current KeyboardFocusManager.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
       KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@return <code>true</code> if the the Set of focus traversal keys for the
        given focus traversal operation has been explicitly defined for
        this Component; <code>false</code> otherwise.
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
       KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@since 1.4
"
      end

      operation 1959426 "isFocusCycleRoot"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "container" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified Container is the focus cycle root of this
Container's focus traversal cycle. Each focus traversal cycle has only
a single focus cycle root and each Container which is not a focus cycle
root belongs to only a single focus traversal cycle. Containers which
are focus cycle roots belong to two cycles: one rooted at the Container
itself, and one rooted at the Container's nearest focus-cycle-root
ancestor. This method will return <code>true</code> for both such
Containers in this case.

@param container the Container to be tested
@return <code>true</code> if the specified Container is a focus-cycle-
        root of this Container; <code>false</code> otherwise
@see #isFocusCycleRoot()
@since 1.4
"
      end

      operation 1959554 "findTraversalRoot"
	private return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1959682 "containsFocus"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1959810 "isParentOf"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if this component is the child of this container or its children.
Note: this function acquires treeLock
Note: this function traverses children tree only in one Window.
@param comp a component in test, must not be null
"
      end

      operation 1959938 "clearMostRecentFocusOwnerOnHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1960066 "clearCurrentFocusCycleRootOnHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1960194 "getTraversalRoot"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1960322 "setFocusTraversalPolicy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "policy" type class_ref 349954 // FocusTraversalPolicy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focus traversal policy that will manage keyboard traversal of
this Container's children, if this Container is a focus cycle root. If
the argument is null, this Container inherits its policy from its focus-
cycle-root ancestor. If the argument is non-null, this policy will be
inherited by all focus-cycle-root children that have no keyboard-
traversal policy of their own (as will, recursively, their focus-cycle-
root children).
<p>
If this Container is not a focus cycle root, the policy will be
remembered, but will not be used or inherited by this or any other
Containers until this Container is made a focus cycle root.

@param policy the new focus traversal policy for this Container
@see #getFocusTraversalPolicy
@see #setFocusCycleRoot
@see #isFocusCycleRoot
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1960450 "getFocusTraversalPolicy"
	public return_type class_ref 349954 // FocusTraversalPolicy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the focus traversal policy that will manage keyboard traversal
of this Container's children, or null if this Container is not a focus
cycle root. If no traversal policy has been explicitly set for this
Container, then this Container's focus-cycle-root ancestor's policy is
returned.

@return this Container's focus traversal policy, or null if this
        Container is not a focus cycle root.
@see #setFocusTraversalPolicy
@see #setFocusCycleRoot
@see #isFocusCycleRoot
@since 1.4
"
      end

      operation 1960578 "isFocusTraversalPolicySet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the focus traversal policy has been explicitly set for
this Container. If this method returns <code>false</code>, this
Container will inherit its focus traversal policy from an ancestor.

@return <code>true</code> if the focus traversal policy has been
        explicitly set for this Container; <code>false</code> otherwise.
@since 1.4
"
      end

      operation 1960706 "setFocusCycleRoot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusCycleRoot" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this Container is the root of a focus traversal cycle. Once
focus enters a traversal cycle, typically it cannot leave it via focus
traversal unless one of the up- or down-cycle keys is pressed. Normal
traversal is limited to this Container, and all of this Container's
descendants that are not descendants of inferior focus cycle roots. Note
that a FocusTraversalPolicy may bend these restrictions, however. For
example, ContainerOrderFocusTraversalPolicy supports implicit down-cycle
traversal.
<p>
The alternative way to specify the traversal order of this Container's
children is to make this Container a
<a href=\"doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus traversal policy provider</a>.

@param focusCycleRoot indicates whether this Container is the root of a
       focus traversal cycle
@see #isFocusCycleRoot()
@see #setFocusTraversalPolicy
@see #getFocusTraversalPolicy
@see ContainerOrderFocusTraversalPolicy
@see #setFocusTraversalPolicyProvider
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1960834 "isFocusCycleRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Container is the root of a focus traversal cycle.
Once focus enters a traversal cycle, typically it cannot leave it via
focus traversal unless one of the up- or down-cycle keys is pressed.
Normal traversal is limited to this Container, and all of this
Container's descendants that are not descendants of inferior focus
cycle roots. Note that a FocusTraversalPolicy may bend these
restrictions, however. For example, ContainerOrderFocusTraversalPolicy
supports implicit down-cycle traversal.

@return whether this Container is the root of a focus traversal cycle
@see #setFocusCycleRoot
@see #setFocusTraversalPolicy
@see #getFocusTraversalPolicy
@see ContainerOrderFocusTraversalPolicy
@since 1.4
"
      end

      operation 1960962 "setFocusTraversalPolicyProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "provider" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this container will be used to provide focus
traversal policy. Container with this property as
<code>true</code> will be used to acquire focus traversal policy
instead of closest focus cycle root ancestor.
@param provider indicates whether this container will be used to
               provide focus traversal policy
@see #setFocusTraversalPolicy
@see #getFocusTraversalPolicy
@see #isFocusTraversalPolicyProvider
@since 1.5
@beaninfo
       bound: true
"
      end

      operation 1961090 "isFocusTraversalPolicyProvider"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this container provides focus traversal
policy. If this property is set to <code>true</code> then when
keyboard focus manager searches container hierarchy for focus
traversal policy and encounters this container before any other
container with this property as true or focus cycle roots then
its focus traversal policy will be used instead of focus cycle
root's policy.
@see #setFocusTraversalPolicy
@see #getFocusTraversalPolicy
@see #setFocusCycleRoot
@see #setFocusTraversalPolicyProvider
@return <code>true</code> if this container provides focus traversal
        policy, <code>false</code> otherwise
@since 1.5
@beaninfo
       bound: true
"
      end

      operation 1961218 "transferFocusDownCycle"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transfers the focus down one focus traversal cycle. If this Container is
a focus cycle root, then the focus owner is set to this Container's
default Component to focus, and the current focus cycle root is set to
this Container. If this Container is not a focus cycle root, then no
focus traversal operation occurs.

@see       Component#requestFocus()
@see       #isFocusCycleRoot
@see       #setFocusCycleRoot
@since     1.4
"
      end

      operation 1961346 "preProcessKeyEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1961474 "postProcessKeyEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1961602 "postsOldMouseEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1961730 "applyComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ComponentOrientation</code> property of this container
and all components contained within it.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param o the new component orientation of this container and
       the components contained within it.
@exception NullPointerException if <code>orientation</code> is null.
@see Component#setComponentOrientation
@see Component#getComponentOrientation
@see #invalidate
@since 1.4
"
      end

      operation 1961858 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list. The listener is
registered for all bound properties of this class, including the
following:
<ul>
   <li>this Container's font (\"font\")</li>
   <li>this Container's background color (\"background\")</li>
   <li>this Container's foreground color (\"foreground\")</li>
   <li>this Container's focusability (\"focusable\")</li>
   <li>this Container's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Container's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Container's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Container's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
   <li>this Container's Set of DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleFocusTraversalKeys\")</li>
   <li>this Container's focus traversal policy (\"focusTraversalPolicy\")
       </li>
   <li>this Container's focus-cycle-root state (\"focusCycleRoot\")</li>
</ul>
Note that if this Container is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param    listener  the PropertyChangeListener to be added

@see Component#removePropertyChangeListener
@see #addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
"
      end

      operation 1961986 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list for a specific
property. The specified property may be user-defined, or one of the
following defaults:
<ul>
   <li>this Container's font (\"font\")</li>
   <li>this Container's background color (\"background\")</li>
   <li>this Container's foreground color (\"foreground\")</li>
   <li>this Container's focusability (\"focusable\")</li>
   <li>this Container's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Container's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Container's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Container's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
   <li>this Container's Set of DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleFocusTraversalKeys\")</li>
   <li>this Container's focus traversal policy (\"focusTraversalPolicy\")
       </li>
   <li>this Container's focus-cycle-root state (\"focusCycleRoot\")</li>
   <li>this Container's focus-traversal-policy-provider state(\"focusTraversalPolicyProvider\")</li>
   <li>this Container's focus-traversal-policy-provider state(\"focusTraversalPolicyProvider\")</li>
</ul>
Note that if this Container is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param propertyName one of the property names listed above
@param listener the PropertyChangeListener to be added

@see #addPropertyChangeListener(java.beans.PropertyChangeListener)
@see Component#removePropertyChangeListener
"
      end

      attribute 452994 "containerSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support. A Container is responsible for restoring the
 parent fields of its component children.

Container Serial Data Version.

"
      end

      operation 1962114 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>Container</code> to the specified
<code>ObjectOutputStream</code>.
<ul>
   <li>Writes default serializable fields to the stream.</li>
   <li>Writes a list of serializable ContainerListener(s) as optional
       data. The non-serializable ContainerListner(s) are detected and
       no attempt is made to serialize them.</li>
   <li>Write this Container's FocusTraversalPolicy if and only if it
       is Serializable; otherwise, <code>null</code> is written.</li>
</ul>

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of 0 or more pairs;
  the pair consists of a <code>String</code> and <code>Object</code>;
  the <code>String</code> indicates the type of object and
  is one of the following:
  <code>containerListenerK</code> indicating an
    <code>ContainerListener</code> object;
  the <code>Container</code>'s <code>FocusTraversalPolicy</code>,
    or <code>null</code>

@see AWTEventMulticaster#save(java.io.ObjectOutputStream, java.lang.String, java.util.EventListener)
@see Container#containerListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 1962242 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>Container</code> from the specified
<code>ObjectInputStream</code>.
<ul>
   <li>Reads default serializable fields from the stream.</li>
   <li>Reads a list of serializable ContainerListener(s) as optional
       data. If the list is null, no Listeners are installed.</li>
   <li>Reads this Container's FocusTraversalPolicy, which may be null,
       as optional data.</li>
</ul>

@param s the <code>ObjectInputStream</code> to read
@serial
@see #addContainerListener
@see #writeObject(ObjectOutputStream)
"
      end

      class 350978 "AccessibleAWTContainer"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 607746 // <generalisation>
	  relation 607746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 607746 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	attribute 453122 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 5081320404842566097L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK1.3 serialVersionUID

"
	end

	operation 1962370 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement <code>Accessible</code>,
then this method should return the number of children of this object.

@return the number of accessible children in the object
"
	end

	operation 1962498 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth <code>Accessible</code> child of the object.

@param i zero-based index of child
@return the nth <code>Accessible</code> child of the object
"
	end

	operation 1962626 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>Accessible</code> child, if one exists,
contained at the local coordinate <code>Point</code>.

@param p the point defining the top-left corner of the
   <code>Accessible</code>, given in the coordinate space
   of the object's parent
@return the <code>Accessible</code>, if it exists,
   at the specified location; else <code>null</code>
"
	end

	attribute 453250 "propertyListenersCount"
	  volatile private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Number of PropertyChangeListener objects registered. It's used
to add/remove ContainerListener to track target Container's state.

"
	end

	classrelation 607874 // accessibleContainerHandler (<unidirectional association>)
	  relation 607874 --->
	    a role_name "accessibleContainerHandler" init_value " null" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 607874 // accessibleContainerHandler (<unidirectional association>)
	    b parent class_ref 350082 // ContainerListener
	end

	class 351106 "AccessibleContainerHandler"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 608130 // <realization>
	    relation 608130 -_-|>
	      a public
		java "${type}"
		classrelation_ref 608130 // <realization>
	      b parent class_ref 350082 // ContainerListener
	  end

	  operation 1963010 "componentAdded"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 350338 // ContainerEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1963138 "componentRemoved"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 350338 // ContainerEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 1963266 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a PropertyChangeListener to the listener list.

@param listener  the PropertyChangeListener to be added
"
	end

	operation 1963394 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.

@param listener the PropertyChangeListener to be removed
"
	end
      end

      operation 1963522 "getAccessibleAt"
	package return_type class_ref 347778 // Accessible
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " inner class AccessibleAWTContainer

Returns the <code>Accessible</code> child contained at the local
coordinate <code>Point</code>, if one exists.  Otherwise
returns <code>null</code>.

@param p the point defining the top-left corner of the
   <code>Accessible</code>, given in the coordinate space
   of the object's parent
@return the <code>Accessible</code> at the specified location,
   if it exists; otherwise <code>null</code>
"
      end

      operation 1963650 "getAccessibleChildrenCount"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of accessible children in the object.  If all
of the children of this object implement <code>Accessible</code>,
then this method should return the number of children of this object.

@return the number of accessible children in the object
"
      end

      operation 1963778 "getAccessibleChild"
	package return_type class_ref 347778 // Accessible
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the nth <code>Accessible</code> child of the object.

@param i zero-based index of child
@return the nth <code>Accessible</code> child of the object
"
      end

      operation 1963906 "increaseComponentCount"
	package explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************************** MIXING CODE *******************************"
      end

      operation 1964034 "decreaseComponentCount"
	package explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964162 "getTopmostComponentIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964290 "getBottommostComponentIndex"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964418 "getOpaqueShape"
	package explicit_return_type "Region"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is overriden to handle opaque children in non-opaque
containers.
"
      end

      operation 1964546 "recursiveSubtractAndApplyShape"
	package explicit_return_type "void"
	nparams 1
	  param inout name "shape" explicit_type "Region"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964674 "recursiveSubtractAndApplyShape"
	package explicit_return_type "void"
	nparams 2
	  param inout name "shape" explicit_type "Region"
	  param in name "fromZorder" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964802 "recursiveSubtractAndApplyShape"
	package explicit_return_type "void"
	nparams 3
	  param inout name "shape" explicit_type "Region"
	  param in name "fromZorder" explicit_type "int"
	  param in name "toZorder" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1964930 "recursiveApplyCurrentShape"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965058 "recursiveApplyCurrentShape"
	package explicit_return_type "void"
	nparams 1
	  param in name "fromZorder" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965186 "recursiveApplyCurrentShape"
	package explicit_return_type "void"
	nparams 2
	  param in name "fromZorder" explicit_type "int"
	  param in name "toZorder" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965314 "recursiveShowHeavyweightChildren"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965442 "recursiveHideHeavyweightChildren"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965570 "recursiveRelocateHeavyweightChildren"
	private explicit_return_type "void"
	nparams 1
	  param inout name "origin" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1965698 "isRecursivelyVisibleUpToHeavyweightContainer"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the container and its direct lightweight containers are
visible.

Consider the heavyweight container hides or shows the HW descendants
automatically. Therefore we care of LW containers' visibility only.

This method MUST be invoked under the TreeLock.
"
      end

      operation 1965826 "mixOnShowing"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1965954 "mixOnHiding"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isLightweight" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1966082 "mixOnReshaping"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1966210 "mixOnZOrderChanging"
	package explicit_return_type "void"
	nparams 2
	  param in name "oldZorder" explicit_type "int"
	  param in name "newZorder" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1966338 "mixOnValidating"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 338818 "Component"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <em>component</em> is an object having a graphical representation
that can be displayed on the screen and that can interact with the
user. Examples of components are the buttons, checkboxes, and scrollbars
of a typical graphical user interface. <p>
The <code>Component</code> class is the abstract superclass of
the nonmenu-related Abstract Window Toolkit components. Class
<code>Component</code> can also be extended directly to create a
lightweight component. A lightweight component is a component that is
not associated with a native window. On the contrary, a heavyweight
component is associated with a native window. The {@link #isLightweight()}
method may be used to distinguish between the two kinds of the components.
<p>
Lightweight and heavyweight components may be mixed in a single component
hierarchy. However, for correct operating of such a mixed hierarchy of
components, the whole hierarchy must be valid. When the hierarchy gets
invalidated, like after changing the bounds of components, or
adding/removing components to/from containers, the whole hierarchy must be
validated afterwards by means of the {@link Container#validate()} method
invoked on the top-most invalid container of the hierarchy.

<h3>Serialization</h3>
It is important to note that only AWT listeners which conform
to the <code>Serializable</code> protocol will be saved when
the object is stored.  If an AWT object has listeners that
aren't marked serializable, they will be dropped at
<code>writeObject</code> time.  Developers will need, as always,
to consider the implications of making an object serializable.
One situation to watch out for is this:
<pre>
   import java.awt.*;
   import java.awt.event.*;
   import java.io.Serializable;

   class MyApp implements ActionListener, Serializable
   {
       BigObjectThatShouldNotBeSerializedWithAButton bigOne;
       Button aButton = new Button();

       MyApp()
       {
           // Oops, now aButton has a listener with a reference
           // to bigOne!
           aButton.addActionListener(this);
       }

       public void actionPerformed(ActionEvent e)
       {
           System.out.println(\"Hello There\");
       }
   }
</pre>
In this example, serializing <code>aButton</code> by itself
will cause <code>MyApp</code> and everything it refers to
to be serialized as well.  The problem is that the listener
is serializable by coincidence, not by design.  To separate
the decisions about <code>MyApp</code> and the
<code>ActionListener</code> being serializable one can use a
nested class, as in the following example:
<pre>
   import java.awt.*;
   import java.awt.event.*;
   import java.io.Serializable;

   class MyApp implements java.io.Serializable
   {
        BigObjectThatShouldNotBeSerializedWithAButton bigOne;
        Button aButton = new Button();

        static class MyActionListener implements ActionListener
        {
            public void actionPerformed(ActionEvent e)
            {
                System.out.println(\"Hello There\");
            }
        }

        MyApp()
        {
            aButton.addActionListener(new MyActionListener());
        }
   }
</pre>
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.
<p>
For details on the focus subsystem, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author      Arthur van Hoff
@author      Sami Shaio
"
      classrelation 591490 // <realization>
	relation 591490 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 591490 // <realization>
	  b parent class_ref 339970 // ImageObserver
      end

      classrelation 591618 // <realization>
	relation 591618 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 591618 // <realization>
	  b parent class_ref 340226 // MenuContainer
      end

      classrelation 591746 // <realization>
	relation 591746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 591746 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 443394 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.Component\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 443522 "eventLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.event.Component\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 443650 "focusLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.focus.Component\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 443778 "mixingLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.mixing.Component\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 591874 // peer (<unidirectional association>)
	relation 591874 --->
	  a role_name "peer" package
	    comment "
The peer of the component. The peer implements the component's
behavior. The peer is set when the <code>Component</code> is
added to a container that also is a peer.
@see #addNotify
@see #removeNotify

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 591874 // peer (<unidirectional association>)
	  b parent class_ref 340738 // ComponentPeer
      end

      classrelation 592002 // parent (<unidirectional association>)
	relation 592002 --->
	  a role_name "parent" package
	    comment "
The parent of the object. It may be <code>null</code>
for top-level components.
@see #getParent

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592002 // parent (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      attribute 443906 "appContext"
	package explicit_type "AppContext"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>AppContext</code> of the component. Applets/Plugin may
change the AppContext.

"
      end

      attribute 444034 "x"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The x position of the component in the parent's coordinate system.

@serial
@see #getLocation

"
      end

      attribute 444162 "y"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The y position of the component in the parent's coordinate system.

@serial
@see #getLocation

"
      end

      attribute 444290 "width"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The width of the component.

@serial
@see #getSize

"
      end

      attribute 444418 "height"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The height of the component.

@serial
@see #getSize

"
      end

      classrelation 592130 // foreground (<unidirectional association>)
	relation 592130 --->
	  a role_name "foreground" package
	    comment "
The foreground color for this component.
<code>foreground</code> can be <code>null</code>.

@serial
@see #getForeground
@see #setForeground

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592130 // foreground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 592258 // background (<unidirectional association>)
	relation 592258 --->
	  a role_name "background" package
	    comment "
The background color for this component.
<code>background</code> can be <code>null</code>.

@serial
@see #getBackground
@see #setBackground

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592258 // background (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 592386 // font (<unidirectional association>)
	relation 592386 --->
	  a role_name "font" volatile package
	    comment "
The font used by this component.
The <code>font</code> can be <code>null</code>.

@serial
@see #getFont
@see #setFont

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592386 // font (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      classrelation 592514 // peerFont (<unidirectional association>)
	relation 592514 --->
	  a role_name "peerFont" package
	    comment "
The font which the peer is currently using.
(<code>null</code> if no peer exists.)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592514 // peerFont (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      classrelation 592642 // cursor (<unidirectional association>)
	relation 592642 --->
	  a role_name "cursor" package
	    comment "
The cursor displayed when pointer is over this component.
This value can be <code>null</code>.

@serial
@see #getCursor
@see #setCursor

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592642 // cursor (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 592770 // locale (<unidirectional association>)
	relation 592770 --->
	  a role_name "locale" package
	    comment "
The locale for the component.

@serial
@see #getLocale
@see #setLocale

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592770 // locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 592898 // graphicsConfig (<unidirectional association>)
	relation 592898 --->
	  a role_name "graphicsConfig" volatile private
	    comment "
A reference to a <code>GraphicsConfiguration</code> object
used to describe the characteristics of a graphics
destination.
This value can be <code>null</code>.

@since 1.3
@serial
@see GraphicsConfiguration
@see #getGraphicsConfiguration

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 592898 // graphicsConfig (<unidirectional association>)
	  b parent class_ref 340994 // GraphicsConfiguration
      end

      classrelation 593026 // bufferStrategy (<unidirectional association>)
	relation 593026 --->
	  a role_name "bufferStrategy" init_value " null" package
	    comment "
A reference to a <code>BufferStrategy</code> object
used to manipulate the buffers on this component.

@since 1.4
@see java.awt.image.BufferStrategy
@see #getBufferStrategy()

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 593026 // bufferStrategy (<unidirectional association>)
	  b parent class_ref 341122 // BufferStrategy
      end

      attribute 444546 "ignoreRepaint"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when the object should ignore all repaint events.

@since 1.4
@serial
@see #setIgnoreRepaint
@see #getIgnoreRepaint

"
      end

      attribute 444674 "visible"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when the object is visible. An object that is not
visible is not drawn on the screen.

@serial
@see #isVisible
@see #setVisible

"
      end

      attribute 444802 "enabled"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when the object is enabled. An object that is not
enabled does not interact with the user.

@serial
@see #isEnabled
@see #setEnabled

"
      end

      attribute 444930 "valid"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True when the object is valid. An invalid object needs to
be layed out. This flag is set to false when the object
size is changed.

@serial
@see #isValid
@see #validate
@see #invalidate

"
      end

      classrelation 593154 // dropTarget (<unidirectional association>)
	relation 593154 --->
	  a role_name "dropTarget" package
	    comment "
The <code>DropTarget</code> associated with this component.

@since 1.2
@serial
@see #setDropTarget
@see #getDropTarget

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 593154 // dropTarget (<unidirectional association>)
	  b parent class_ref 341250 // DropTarget
      end

      classrelation 593282 // popups (<unidirectional association>)
	relation 593282 --->
	  a role_name "popups" package
	    comment "
@serial
@see #add

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PopupMenu> ${name}${value};
"
	    classrelation_ref 593282 // popups (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 593410 // name (<unidirectional association>)
	relation 593410 --->
	  a role_name "name" private
	    comment "
A component's name.
This field can be <code>null</code>.

@serial
@see #getName
@see #setName(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 593410 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 445058 "nameExplicitlySet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A bool to determine whether the name has
been set explicitly. <code>nameExplicitlySet</code> will
be false if the name has not been set and
true if it has.

@serial
@see #getName
@see #setName(String)

"
      end

      attribute 445186 "focusable"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether this Component can be focused.

@serial
@see #setFocusable
@see #isFocusable
@since 1.4

"
      end

      attribute 445314 "FOCUS_TRAVERSABLE_UNKNOWN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 445442 "FOCUS_TRAVERSABLE_DEFAULT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 445570 "FOCUS_TRAVERSABLE_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 445698 "isFocusTraversableOverridden"
	private explicit_type "int"
	init_value " FOCUS_TRAVERSABLE_UNKNOWN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Tracks whether this Component is relying on default focus travesability.

@serial
@since 1.4

"
      end

      classrelation 593538 // focusTraversalKeys (<unidirectional association>)
	relation 593538 --->
	  a role_name "focusTraversalKeys" multiplicity "[]" package
	    comment "
The focus traversal keys. These keys will generate focus traversal
behavior for Components for which focus traversal keys are enabled. If a
value of null is specified for a traversal key, this Component inherits
that traversal key from its parent. If all ancestors of this Component
have null specified for that traversal key, then the current
KeyboardFocusManager's default traversal key is used.

@serial
@see #setFocusTraversalKeys
@see #getFocusTraversalKeys
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTKeyStroke>${multiplicity} ${name}${value};
"
	    classrelation_ref 593538 // focusTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 593666 // focusTraversalKeyPropertyNames (<unidirectional association>)
	relation 593666 --->
	  a role_name "focusTraversalKeyPropertyNames" multiplicity "[]" init_value " {
        \"forwardFocusTraversalKeys\",
        \"backwardFocusTraversalKeys\",
        \"upCycleFocusTraversalKeys\",
        \"downCycleFocusTraversalKeys\"
    }" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 593666 // focusTraversalKeyPropertyNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 445826 "focusTraversalKeysEnabled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether focus traversal keys are enabled for this Component.
Components for which focus traversal keys are disabled receive key
events for focus traversal keys. Components for which focus traversal
keys are enabled do not see these events; instead, the events are
automatically converted to traversal operations.

@serial
@see #setFocusTraversalKeysEnabled
@see #getFocusTraversalKeysEnabled
@since 1.4

"
      end

      classrelation 593794 // LOCK (<unidirectional association>)
	relation 593794 --->
	  a role_name "LOCK" init_value " new AWTTreeLock()" class_relation const_relation package
	    comment "
The locking object for AWT component-tree and layout operations.

@see #getTreeLock

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 593794 // LOCK (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 341634 "AWTTreeLock"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 593922 // acc (<unidirectional association>)
	relation 593922 --->
	  a role_name "acc" init_value "
        AccessController.getContext()" volatile private
	    comment "
The component's AccessControlContext.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 593922 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      classrelation 594050 // minSize (<unidirectional association>)
	relation 594050 --->
	  a role_name "minSize" package
	    comment "
Minimum size.
(This field perhaps should have been transient).

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594050 // minSize (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      attribute 445954 "minSizeSet"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not setMinimumSize has been invoked with a non-null value.

"
      end

      classrelation 594178 // prefSize (<unidirectional association>)
	relation 594178 --->
	  a role_name "prefSize" package
	    comment "
Preferred size.
(This field perhaps should have been transient).

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594178 // prefSize (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      attribute 446082 "prefSizeSet"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not setPreferredSize has been invoked with a non-null value.

"
      end

      classrelation 594306 // maxSize (<unidirectional association>)
	relation 594306 --->
	  a role_name "maxSize" package
	    comment "
Maximum size

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594306 // maxSize (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      attribute 446210 "maxSizeSet"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not setMaximumSize has been invoked with a non-null value.

"
      end

      classrelation 594434 // componentOrientation (<unidirectional association>)
	relation 594434 --->
	  a role_name "componentOrientation" init_value " ComponentOrientation.UNKNOWN" package
	    comment "
The orientation for this component.
@see #getComponentOrientation
@see #setComponentOrientation

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594434 // componentOrientation (<unidirectional association>)
	  b parent class_ref 341762 // ComponentOrientation
      end

      attribute 446338 "newEventsOnly"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>newEventsOnly</code> will be true if the event is
one of the event types enabled for the component.
It will then allow for normal processing to
continue.  If it is false the event is passed
to the component's parent and up the ancestor
tree until the event has been consumed.

@serial
@see #dispatchEvent

"
      end

      classrelation 594562 // componentListener (<unidirectional association>)
	relation 594562 --->
	  a role_name "componentListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594562 // componentListener (<unidirectional association>)
	  b parent class_ref 341890 // ComponentListener
      end

      classrelation 594690 // focusListener (<unidirectional association>)
	relation 594690 --->
	  a role_name "focusListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594690 // focusListener (<unidirectional association>)
	  b parent class_ref 342018 // FocusListener
      end

      classrelation 594818 // hierarchyListener (<unidirectional association>)
	relation 594818 --->
	  a role_name "hierarchyListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594818 // hierarchyListener (<unidirectional association>)
	  b parent class_ref 342146 // HierarchyListener
      end

      classrelation 594946 // hierarchyBoundsListener (<unidirectional association>)
	relation 594946 --->
	  a role_name "hierarchyBoundsListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 594946 // hierarchyBoundsListener (<unidirectional association>)
	  b parent class_ref 342274 // HierarchyBoundsListener
      end

      classrelation 595074 // keyListener (<unidirectional association>)
	relation 595074 --->
	  a role_name "keyListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595074 // keyListener (<unidirectional association>)
	  b parent class_ref 342402 // KeyListener
      end

      classrelation 595202 // mouseListener (<unidirectional association>)
	relation 595202 --->
	  a role_name "mouseListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595202 // mouseListener (<unidirectional association>)
	  b parent class_ref 342530 // MouseListener
      end

      classrelation 595330 // mouseMotionListener (<unidirectional association>)
	relation 595330 --->
	  a role_name "mouseMotionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595330 // mouseMotionListener (<unidirectional association>)
	  b parent class_ref 342658 // MouseMotionListener
      end

      classrelation 595458 // mouseWheelListener (<unidirectional association>)
	relation 595458 --->
	  a role_name "mouseWheelListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595458 // mouseWheelListener (<unidirectional association>)
	  b parent class_ref 342786 // MouseWheelListener
      end

      classrelation 595586 // inputMethodListener (<unidirectional association>)
	relation 595586 --->
	  a role_name "inputMethodListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595586 // inputMethodListener (<unidirectional association>)
	  b parent class_ref 342914 // InputMethodListener
      end

      classrelation 595714 // windowClosingException (<unidirectional association>)
	relation 595714 --->
	  a role_name "windowClosingException" init_value " null" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595714 // windowClosingException (<unidirectional association>)
	  b parent class_ref 214786 // RuntimeException
      end

      classrelation 595842 // actionListenerK (<unidirectional association>)
	relation 595842 --->
	  a role_name "actionListenerK" init_value " \"actionL\"" class_relation const_relation package
	    comment " Internal, constants for serialization 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595842 // actionListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 595970 // adjustmentListenerK (<unidirectional association>)
	relation 595970 --->
	  a role_name "adjustmentListenerK" init_value " \"adjustmentL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 595970 // adjustmentListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596098 // componentListenerK (<unidirectional association>)
	relation 596098 --->
	  a role_name "componentListenerK" init_value " \"componentL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596098 // componentListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596226 // containerListenerK (<unidirectional association>)
	relation 596226 --->
	  a role_name "containerListenerK" init_value " \"containerL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596226 // containerListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596354 // focusListenerK (<unidirectional association>)
	relation 596354 --->
	  a role_name "focusListenerK" init_value " \"focusL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596354 // focusListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596482 // itemListenerK (<unidirectional association>)
	relation 596482 --->
	  a role_name "itemListenerK" init_value " \"itemL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596482 // itemListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596610 // keyListenerK (<unidirectional association>)
	relation 596610 --->
	  a role_name "keyListenerK" init_value " \"keyL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596610 // keyListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596738 // mouseListenerK (<unidirectional association>)
	relation 596738 --->
	  a role_name "mouseListenerK" init_value " \"mouseL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596738 // mouseListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596866 // mouseMotionListenerK (<unidirectional association>)
	relation 596866 --->
	  a role_name "mouseMotionListenerK" init_value " \"mouseMotionL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596866 // mouseMotionListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 596994 // mouseWheelListenerK (<unidirectional association>)
	relation 596994 --->
	  a role_name "mouseWheelListenerK" init_value " \"mouseWheelL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 596994 // mouseWheelListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597122 // textListenerK (<unidirectional association>)
	relation 597122 --->
	  a role_name "textListenerK" init_value " \"textL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597122 // textListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597250 // ownedWindowK (<unidirectional association>)
	relation 597250 --->
	  a role_name "ownedWindowK" init_value " \"ownedL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597250 // ownedWindowK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597378 // windowListenerK (<unidirectional association>)
	relation 597378 --->
	  a role_name "windowListenerK" init_value " \"windowL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597378 // windowListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597506 // inputMethodListenerK (<unidirectional association>)
	relation 597506 --->
	  a role_name "inputMethodListenerK" init_value " \"inputMethodL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597506 // inputMethodListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597634 // hierarchyListenerK (<unidirectional association>)
	relation 597634 --->
	  a role_name "hierarchyListenerK" init_value " \"hierarchyL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597634 // hierarchyListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597762 // hierarchyBoundsListenerK (<unidirectional association>)
	relation 597762 --->
	  a role_name "hierarchyBoundsListenerK" init_value " \"hierarchyBoundsL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597762 // hierarchyBoundsListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 597890 // windowStateListenerK (<unidirectional association>)
	relation 597890 --->
	  a role_name "windowStateListenerK" init_value " \"windowStateL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 597890 // windowStateListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 598018 // windowFocusListenerK (<unidirectional association>)
	relation 598018 --->
	  a role_name "windowFocusListenerK" init_value " \"windowFocusL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 598018 // windowFocusListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 446466 "eventMask"
	package explicit_type "long"
	init_value " AWTEvent.INPUT_METHODS_ENABLED_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>eventMask</code> is ONLY set by subclasses via
<code>enableEvents</code>.
The mask should NOT be set when listeners are registered
so that we can distinguish the difference between when
listeners request events and subclasses request them.
One bit is used to indicate whether input methods are
enabled; this bit is set by <code>enableInputMethods</code> and is
on by default.

@serial
@see #enableInputMethods
@see AWTEvent

"
      end

      attribute 446594 "isInc"
	class_attribute package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Static properties for incremental drawing.
@see #imageUpdate

"
      end

      attribute 446722 "incRate"
	class_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 135042 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        /* initialize JNI field and method ids */
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        String s = java.security.AccessController.doPrivileged(
                                                               new GetPropertyAction(\"awt.image.incrementaldraw\"));
        isInc = (s == null || s.equals(\"true\"));

        s = java.security.AccessController.doPrivileged(
                                                        new GetPropertyAction(\"awt.image.redrawrate\"));
        incRate = (s != null) ? Integer.parseInt(s) : 100;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 446850 "TOP_ALIGNMENT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ease-of-use constant for <code>getAlignmentY()</code>.
Specifies an alignment to the top of the component.
@see     #getAlignmentY

"
      end

      attribute 446978 "CENTER_ALIGNMENT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.5f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ease-of-use constant for <code>getAlignmentY</code> and
<code>getAlignmentX</code>. Specifies an alignment to
the center of the component
@see     #getAlignmentX
@see     #getAlignmentY

"
      end

      attribute 447106 "BOTTOM_ALIGNMENT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ease-of-use constant for <code>getAlignmentY</code>.
Specifies an alignment to the bottom of the component.
@see     #getAlignmentY

"
      end

      attribute 447234 "LEFT_ALIGNMENT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ease-of-use constant for <code>getAlignmentX</code>.
Specifies an alignment to the left side of the component.
@see     #getAlignmentX

"
      end

      attribute 447362 "RIGHT_ALIGNMENT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ease-of-use constant for <code>getAlignmentX</code>.
Specifies an alignment to the right side of the component.
@see     #getAlignmentX

"
      end

      attribute 447490 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7644114512714619750L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      classrelation 598146 // changeSupport (<unidirectional association>)
	relation 598146 --->
	  a role_name "changeSupport" private
	    comment "
If any <code>PropertyChangeListeners</code> have been registered,
the <code>changeSupport</code> field describes them.

@serial
@since 1.2
@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #firePropertyChange

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 598146 // changeSupport (<unidirectional association>)
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      classrelation 598274 // objectLock (<unidirectional association>)
	relation 598274 --->
	  a role_name "objectLock" init_value " new Object()" private
	    comment "
In some cases using \"this\" as an object to synchronize by
can lead to a deadlock if client code also uses synchronization
by a component object. For every such situation revealed we should
consider possibility of replacing \"this\" with the package private
objectLock object introduced below. So far there're 3 issues known:
- CR 6708322 (the getName/setName methods);
- CR 6608764 (the PropertyChangeListener machinery);
- CR 7108598 (the Container.paint/KeyboardFocusManager.clearMostRecentFocusOwner methods).

Note: this field is considered final, though readObject() prohibits
initializing final fields.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 598274 // objectLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 1882754 "getObjectLock"
	package return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1882882 "getAccessControlContext"
	package return_type class_ref 129154 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the acc this component was constructed with.
"
      end

      attribute 447618 "isPacked"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 447746 "boundsOp"
	private explicit_type "int"
	init_value " ComponentPeer.DEFAULT_OPERATION"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Pseudoparameter for direct Geometry API (setLocation, setBounds setSize
to signal setBounds what's changing. Should be used under TreeLock.
This is only needed due to the inability to change the cross-calling
order of public and deprecated methods.

"
      end

      class 343170 "BaselineResizeBehavior"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 447874 "CONSTANT_ASCENT"
	  public type class_ref 343170 // BaselineResizeBehavior
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the baseline remains fixed relative to the
y-origin.  That is, <code>getBaseline</code> returns
the same value regardless of the height or width.  For example, a
<code>JLabel</code> containing non-empty text with a
vertical alignment of <code>TOP</code> should have a
baseline type of <code>CONSTANT_ASCENT</code>.

"
	end

	attribute 448002 "CONSTANT_DESCENT"
	  public type class_ref 343170 // BaselineResizeBehavior
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the baseline remains fixed relative to the height
and does not change as the width is varied.  That is, for
any height H the difference between H and
<code>getBaseline(w, H)</code> is the same.  For example, a
<code>JLabel</code> containing non-empty text with a
vertical alignment of <code>BOTTOM</code> should have a
baseline type of <code>CONSTANT_DESCENT</code>.

"
	end

	attribute 448130 "CENTER_OFFSET"
	  public type class_ref 343170 // BaselineResizeBehavior
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the baseline remains a fixed distance from
the center of the component.  That is, for any height H the
difference between <code>getBaseline(w, H)</code> and
<code>H / 2</code> is the same (plus or minus one depending upon
rounding error).
<p>
Because of possible rounding errors it is recommended
you ask for the baseline with two consecutive heights and use
the return value to determine if you need to pad calculations
by 1.  The following shows how to calculate the baseline for
any height:
<pre>
  Dimension preferredSize = component.getPreferredSize();
  int baseline = getBaseline(preferredSize.width,
                             preferredSize.height);
  int nextBaseline = getBaseline(preferredSize.width,
                                 preferredSize.height + 1);
  // Amount to add to height when calculating where baseline
  // lands for a particular height:
  int padding = 0;
  // Where the baseline is relative to the mid point
  int baselineOffset = baseline - height / 2;
  if (preferredSize.height % 2 == 0 &amp;&amp;
      baseline != nextBaseline) {
      padding = 1;
  }
  else if (preferredSize.height % 2 == 1 &amp;&amp;
           baseline == nextBaseline) {
      baselineOffset--;
      padding = 1;
  }
  // The following calculates where the baseline lands for
  // the height z:
  int calculatedBaseline = (z + padding) / 2 + baselineOffset;
</pre>

"
	end

	attribute 448258 "OTHER"
	  public type class_ref 343170 // BaselineResizeBehavior
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates the baseline resize behavior can not be expressed using
any of the other constants.  This may also indicate the baseline
varies with the width of the component.  This is also returned
by components that do not have a baseline.
"
	end
      end

      attribute 448386 "compoundShape"
	private explicit_type "Region"
	init_value " null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The shape set with the applyCompoundShape() method. It uncludes the result
of the HW/LW mixing related shape computation. It may also include
the user-specified shape of the component.
The 'null' value means the component has normal shape (or has no shape at all)
and applyCompoundShape() will skip the following shape identical to normal.

"
      end

      attribute 448514 "mixingCutoutRegion"
	private explicit_type "Region"
	init_value " null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents the shape of this lightweight component to be cut out from
heavyweight components should they intersect. Possible values:
   1. null - consider the shape rectangular
   2. EMPTY_REGION - nothing gets cut out (children still get cut out)
   3. non-empty - this shape gets cut out.

"
      end

      attribute 448642 "isAddNotifyComplete"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether addNotify() is complete
(i.e. the peer is created).

"
      end

      operation 1883010 "getBoundsOp"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Should only be used in subclass getBounds to check that part of bounds
is actualy changing
"
      end

      operation 1883138 "setBoundsOp"
	package explicit_return_type "void"
	nparams 1
	  param in name "op" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 448770 "backgroundEraseDisabled"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether this Component has had the background erase flag
 specified via SunToolkit.disableBackgroundErase(). This is
 needed in order to make this function work on X11 platforms,
 where currently there is no chance to interpose on the creation
 of the peer and therefore the call to XSetBackground.
"
      end

      extra_member 135170 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setComponentAccessor(new AWTAccessor.ComponentAccessor() {
            public void setBackgroundEraseDisabled(Component comp, boolean disabled) {
                comp.backgroundEraseDisabled = disabled;
            }
            public boolean getBackgroundEraseDisabled(Component comp) {
                return comp.backgroundEraseDisabled;
            }
            public Rectangle getBounds(Component comp) {
                return new Rectangle(comp.x, comp.y, comp.width, comp.height);
            }
            public void setMixingCutoutShape(Component comp, Shape shape) {
                Region region = shape == null ?  null :
                    Region.getInstance(shape, null);

                synchronized (comp.getTreeLock()) {
                    boolean needShowing = false;
                    boolean needHiding = false;

                    if (!comp.isNonOpaqueForMixing()) {
                        needHiding = true;
                    }

                    comp.mixingCutoutRegion = region;

                    if (!comp.isNonOpaqueForMixing()) {
                        needShowing = true;
                    }

                    if (comp.isMixingNeeded()) {
                        if (needHiding) {
                            comp.mixOnHiding(comp.isLightweight());
                        }
                        if (needShowing) {
                            comp.mixOnShowing();
                        }
                    }
                }
            }

            public void setGraphicsConfiguration(Component comp,
                    GraphicsConfiguration gc)
            {
                comp.setGraphicsConfiguration(gc);
            }
            public boolean requestFocus(Component comp, CausedFocusEvent.Cause cause) {
                return comp.requestFocus(cause);
            }
            public boolean canBeFocusOwner(Component comp) {
                return comp.canBeFocusOwner();
            }

            public boolean isVisible(Component comp) {
                return comp.isVisible_NoClientCode();
            }
            public void setRequestFocusController
                (RequestFocusController requestController)
            {
                 Component.setRequestFocusController(requestController);
            }
            public AppContext getAppContext(Component comp) {
                 return comp.appContext;
            }
            public void setAppContext(Component comp, AppContext appContext) {
                 comp.appContext = appContext;
            }
            public Container getParent(Component comp) {
                return comp.getParent_NoClientCode();
            }
            public void setParent(Component comp, Container parent) {
                comp.parent = parent;
            }
            public void setSize(Component comp, int width, int height) {
                comp.width = width;
                comp.height = height;
            }
            public Point getLocation(Component comp) {
                return comp.location_NoClientCode();
            }
            public void setLocation(Component comp, int x, int y) {
                comp.x = x;
                comp.y = y;
            }
            public boolean isEnabled(Component comp) {
                return comp.isEnabledImpl();
            }
            public boolean isDisplayable(Component comp) {
                return comp.peer != null;
            }
            public Cursor getCursor(Component comp) {
                return comp.getCursor_NoClientCode();
            }
            public ComponentPeer getPeer(Component comp) {
                return comp.peer;
            }
            public void setPeer(Component comp, ComponentPeer peer) {
                comp.peer = peer;
            }
            public boolean isLightweight(Component comp) {
                return (comp.peer instanceof LightweightPeer);
            }
            public boolean getIgnoreRepaint(Component comp) {
                return comp.ignoreRepaint;
            }
            public int getWidth(Component comp) {
                return comp.width;
            }
            public int getHeight(Component comp) {
                return comp.height;
            }
            public int getX(Component comp) {
                return comp.x;
            }
            public int getY(Component comp) {
                return comp.y;
            }
            public Color getForeground(Component comp) {
                return comp.foreground;
            }
            public Color getBackground(Component comp) {
                return comp.background;
            }
            public void setBackground(Component comp, Color background) {
                comp.background = background;
            }
            public Font getFont(Component comp) {
                return comp.getFont_NoClientCode();
            }
            public void processEvent(Component comp, AWTEvent e) {
                comp.processEvent(e);
            }

            public AccessControlContext getAccessControlContext(Component comp) {
                return comp.getAccessControlContext();
            }

            public void revalidateSynchronously(Component comp) {
                comp.revalidateSynchronously();
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 1883266 "Component"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new component. Class <code>Component</code> can be
extended directly to create a lightweight component that does not
utilize an opaque native window. A lightweight component must be
hosted by a native container somewhere higher up in the component
tree (for example, by a <code>Frame</code> object).
"
      end

      operation 1883394 "initializeFocusTraversalKeys"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
      end

      operation 1883522 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this component.  Called by <code>getName</code>
when the name is <code>null</code>.
"
      end

      operation 1883650 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the component.
@return this component's name
@see    #setName
@since JDK1.1
"
      end

      operation 1883778 "setName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the component to the specified string.
@param name  the string that is to be this
          component's name
@see #getName
@since JDK1.1
"
      end

      operation 1883906 "getParent"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the parent of this component.
@return the parent container of this component
@since JDK1.0
"
      end

      operation 1884034 "getParent_NoClientCode"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       This functionality is implemented in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 1884162 "getContainer"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is overridden in the Window class to return null,
    because the parent field of the Window object contains
    the owner of the window, not its parent."
      end

      operation 1884290 "getPeer"
	public return_type class_ref 340738 // ComponentPeer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
programs should not directly manipulate peers;
replaced by <code>boolean isDisplayable()</code>.
"
      end

      operation 1884418 "setDropTarget"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dt" type class_ref 341250 // DropTarget
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate a <code>DropTarget</code> with this component.
The <code>Component</code> will receive drops only if it
is enabled.

@see #isEnabled
@param dt The DropTarget
"
      end

      operation 1884546 "getDropTarget"
	public return_type class_ref 341250 // DropTarget
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>DropTarget</code> associated with this
<code>Component</code>.
"
      end

      operation 1884674 "getGraphicsConfiguration"
	public return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>GraphicsConfiguration</code> associated with this
<code>Component</code>.
If the <code>Component</code> has not been assigned a specific
<code>GraphicsConfiguration</code>,
the <code>GraphicsConfiguration</code> of the
<code>Component</code> object's top-level container is
returned.
If the <code>Component</code> has been created, but not yet added
to a <code>Container</code>, this method returns <code>null</code>.

@return the <code>GraphicsConfiguration</code> used by this
         <code>Component</code> or <code>null</code>
@since 1.3
"
      end

      operation 1884802 "getGraphicsConfiguration_NoClientCode"
	package return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1884930 "setGraphicsConfiguration"
	package explicit_return_type "void"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1885058 "updateGraphicsData"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1885186 "checkGD"
	package explicit_return_type "void"
	nparams 1
	  param inout name "stringID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that this component's <code>GraphicsDevice</code>
<code>idString</code> matches the string argument.
"
      end

      operation 1885314 "getTreeLock"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets this component's locking object (the object that owns the thread
synchronization monitor) for AWT component-tree and layout
operations.
@return this component's locking object
"
      end

      operation 1885442 "checkTreeLock"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1885570 "getToolkit"
	public return_type class_ref 343298 // Toolkit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the toolkit of this component. Note that
the frame that contains a component controls which
toolkit is used by that component. Therefore if the component
is moved from one frame to another, the toolkit it uses may change.
@return  the toolkit of this component
@since JDK1.0
"
      end

      operation 1885698 "getToolkitImpl"
	package return_type class_ref 343298 // Toolkit
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 1885826 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component is valid. A component is valid
when it is correctly sized and positioned within its parent
container and all its children are also valid.
In order to account for peers' size requirements, components are invalidated
before they are first shown on the screen. By the time the parent container
is fully realized, all its components will be valid.
@return <code>true</code> if the component is valid, <code>false</code>
otherwise
@see #validate
@see #invalidate
@since JDK1.0
"
      end

      operation 1885954 "isDisplayable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component is displayable. A component is
displayable when it is connected to a native screen resource.
<p>
A component is made displayable either when it is added to
a displayable containment hierarchy or when its containment
hierarchy is made displayable.
A containment hierarchy is made displayable when its ancestor
window is either packed or made visible.
<p>
A component is made undisplayable either when it is removed from
a displayable containment hierarchy or when its containment hierarchy
is made undisplayable.  A containment hierarchy is made
undisplayable when its ancestor window is disposed.

@return <code>true</code> if the component is displayable,
<code>false</code> otherwise
@see Container#add(Component)
@see Window#pack
@see Window#show
@see Container#remove(Component)
@see Window#dispose
@since 1.2
"
      end

      operation 1886082 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Determines whether this component should be visible when its
parent is visible. Components are
initially visible, with the exception of top level components such
as <code>Frame</code> objects.
@return <code>true</code> if the component is visible,
<code>false</code> otherwise
@see #setVisible
@since JDK1.0
"
      end

      operation 1886210 "isVisible_NoClientCode"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1886338 "isRecursivelyVisible"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component will be displayed on the screen.
@return <code>true</code> if the component and all of its ancestors
         until a toplevel window or null parent are visible,
         <code>false</code> otherwise
"
      end

      operation 1886466 "getRecursivelyVisibleBounds"
	private return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the bounds of a visible part of the component relative to its
parent.

@return the visible part of bounds
"
      end

      operation 1886594 "pointRelativeToComponent"
	package return_type class_ref 323714 // Point
	nparams 1
	  param inout name "absolute" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates absolute coordinates into coordinates in the coordinate
space of this component.
"
      end

      operation 1886722 "findUnderMouseInWindow"
	package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "pi" type class_ref 343426 // PointerInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assuming that mouse location is stored in PointerInfo passed
to this method, it finds a Component that is in the same
Window as this Component and is located under the mouse pointer.
If no such Component exists, null is returned.
NOTE: this method should be called under the protection of
tree lock, as it is done in Component.getMousePosition() and
Container.getMousePosition(boolean).
"
      end

      operation 1886850 "getMousePosition"
	public return_type class_ref 323714 // Point
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position of the mouse pointer in this <code>Component</code>'s
coordinate space if the <code>Component</code> is directly under the mouse
pointer, otherwise returns <code>null</code>.
If the <code>Component</code> is not showing on the screen, this method
returns <code>null</code> even if the mouse pointer is above the area
where the <code>Component</code> would be displayed.
If the <code>Component</code> is partially or fully obscured by other
<code>Component</code>s or native windows, this method returns a non-null
value only if the mouse pointer is located above the unobscured part of the
<code>Component</code>.
<p>
For <code>Container</code>s it returns a non-null value if the mouse is
above the <code>Container</code> itself or above any of its descendants.
Use {@link Container#getMousePosition(boolean)} if you need to exclude children.
<p>
Sometimes the exact mouse coordinates are not important, and the only thing
that matters is whether a specific <code>Component</code> is under the mouse
pointer. If the return value of this method is <code>null</code>, mouse
pointer is not directly above the <code>Component</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless() returns true
@see       #isShowing
@see       Container#getMousePosition
@return    mouse coordinates relative to this <code>Component</code>, or null
@since     1.5
"
      end

      operation 1886978 "isSameOrAncestorOf"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "allowChildren" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden in Container. Must be called under TreeLock.
"
      end

      operation 1887106 "isShowing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component is showing on screen. This means
that the component must be visible, and it must be in a container
that is visible and showing.
<p>
<strong>Note:</strong> sometimes there is no way to detect whether the
{@code Component} is actually visible to the user.  This can happen when:
<ul>
<li>the component has been added to a visible {@code ScrollPane} but
the {@code Component} is not currently in the scroll pane's view port.
<li>the {@code Component} is obscured by another {@code Component} or
{@code Container}.
</ul>
@return <code>true</code> if the component is showing,
         <code>false</code> otherwise
@see #setVisible
@since JDK1.0
"
      end

      operation 1887234 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component is enabled. An enabled component
can respond to user input and generate events. Components are
enabled initially by default. A component may be enabled or disabled by
calling its <code>setEnabled</code> method.
@return <code>true</code> if the component is enabled,
         <code>false</code> otherwise
@see #setEnabled
@since JDK1.0
"
      end

      operation 1887362 "isEnabledImpl"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 1887490 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables this component, depending on the value of the
parameter <code>b</code>. An enabled component can respond to user
input and generate events. Components are enabled initially by default.

<p>Note: Disabling a lightweight component does not prevent it from
receiving MouseEvents.
<p>Note: Disabling a heavyweight container prevents all components
in this container from receiving any input events.  But disabling a
lightweight container affects only this container.

@param     b   If <code>true</code>, this component is
           enabled; otherwise this component is disabled
@see #isEnabled
@see #isLightweight
@since JDK1.1
"
      end

      operation 1887618 "enable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 1887746 "enable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 1887874 "disable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 1888002 "isDoubleBuffered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this component is painted to an offscreen image
(\"buffer\") that's copied to the screen later.  Component
subclasses that support double buffering should override this
method to return true if double buffering is enabled.

@return false by default
"
      end

      operation 1888130 "enableInputMethods"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables input method support for this component. If input
method support is enabled and the component also processes key events,
incoming events are offered to
the current input method and will only be processed by the component or
dispatched to its listeners if the input method does not consume them.
By default, input method support is enabled.

@param enable true to enable, false to disable
@see #processKeyEvent
@since 1.2
"
      end

      operation 1888258 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows or hides this component depending on the value of parameter
<code>b</code>.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param b  if <code>true</code>, shows this component;
otherwise, hides this component
@see #isVisible
@see #invalidate
@since JDK1.1
"
      end

      operation 1888386 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setVisible(boolean)</code>.
"
      end

      operation 1888514 "show"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setVisible(boolean)</code>.
"
      end

      operation 1888642 "containsFocus"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1888770 "clearMostRecentFocusOwnerOnHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1888898 "clearCurrentFocusCycleRootOnHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1889026 "hide"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setVisible(boolean)</code>.
"
      end

      operation 1889154 "getForeground"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the foreground color of this component.
@return this component's foreground color; if this component does
not have a foreground color, the foreground color of its parent
is returned
@see #setForeground
@since JDK1.0
@beaninfo
      bound: true
"
      end

      operation 1889282 "setForeground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the foreground color of this component.
@param c the color to become this component's
         foreground color; if this parameter is <code>null</code>
         then this component will inherit
         the foreground color of its parent
@see #getForeground
@since JDK1.0
"
      end

      operation 1889410 "isForegroundSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the foreground color has been explicitly set for this
Component. If this method returns <code>false</code>, this Component is
inheriting its foreground color from an ancestor.

@return <code>true</code> if the foreground color has been explicitly
        set for this Component; <code>false</code> otherwise.
@since 1.4
"
      end

      operation 1889538 "getBackground"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the background color of this component.
@return this component's background color; if this component does
         not have a background color,
         the background color of its parent is returned
@see #setBackground
@since JDK1.0
"
      end

      operation 1889666 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color of this component.
<p>
The background color affects each component differently and the
parts of the component that are affected by the background color
may differ between operating systems.

@param c the color to become this component's color;
         if this parameter is <code>null</code>, then this
         component will inherit the background color of its parent
@see #getBackground
@since JDK1.0
@beaninfo
      bound: true
"
      end

      operation 1889794 "isBackgroundSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the background color has been explicitly set for this
Component. If this method returns <code>false</code>, this Component is
inheriting its background color from an ancestor.

@return <code>true</code> if the background color has been explicitly
        set for this Component; <code>false</code> otherwise.
@since 1.4
"
      end

      operation 1889922 "getFont"
	public return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Gets the font of this component.
@return this component's font; if a font has not been set
for this component, the font of its parent is returned
@see #setFont
@since JDK1.0
"
      end

      operation 1890050 "getFont_NoClientCode"
	package return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       This functionality is implemented in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 1890178 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the font of this component.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param f the font to become this component's font;
         if this parameter is <code>null</code> then this
         component will inherit the font of its parent
@see #getFont
@see #invalidate
@since JDK1.0
@beaninfo
      bound: true
"
      end

      operation 1890306 "isFontSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the font has been explicitly set for this Component. If
this method returns <code>false</code>, this Component is inheriting its
font from an ancestor.

@return <code>true</code> if the font has been explicitly set for this
        Component; <code>false</code> otherwise.
@since 1.4
"
      end

      operation 1890434 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locale of this component.
@return this component's locale; if this component does not
         have a locale, the locale of its parent is returned
@see #setLocale
@exception IllegalComponentStateException if the <code>Component</code>
         does not have its own locale and has not yet been added to
         a containment hierarchy such that the locale can be determined
         from the containing parent
@since  JDK1.1
"
      end

      operation 1890562 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the locale of this component.  This is a bound property.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param l the locale to become this component's locale
@see #getLocale
@see #invalidate
@since JDK1.1
"
      end

      operation 1890690 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the instance of <code>ColorModel</code> used to display
the component on the output device.
@return the color model used by this component
@see java.awt.image.ColorModel
@see java.awt.peer.ComponentPeer#getColorModel()
@see Toolkit#getColorModel()
@since JDK1.0
"
      end

      operation 1890818 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the location of this component in the form of a
point specifying the component's top-left corner.
The location will be relative to the parent's coordinate space.
<p>
Due to the asynchronous nature of native event handling, this
method can return outdated values (for instance, after several calls
of <code>setLocation()</code> in rapid succession).  For this
reason, the recommended method of obtaining a component's position is
within <code>java.awt.event.ComponentListener.componentMoved()</code>,
which is called after the operating system has finished moving the
component.
</p>
@return an instance of <code>Point</code> representing
         the top-left corner of the component's bounds in
         the coordinate space of the component's parent
@see #setLocation
@see #getLocationOnScreen
@since JDK1.1
"
      end

      operation 1890946 "getLocationOnScreen"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the location of this component in the form of a point
specifying the component's top-left corner in the screen's
coordinate space.
@return an instance of <code>Point</code> representing
         the top-left corner of the component's bounds in the
         coordinate space of the screen
@throws IllegalComponentStateException if the
         component is not showing on the screen
@see #setLocation
@see #getLocation
"
      end

      operation 1891074 "getLocationOnScreen_NoTreeLock"
	package return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "a package private version of getLocationOnScreen
used by GlobalCursormanager to update cursor
"
      end

      operation 1891202 "location"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getLocation()</code>.
"
      end

      operation 1891330 "location_NoClientCode"
	private return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1891458 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves this component to a new location. The top-left corner of
the new location is specified by the <code>x</code> and <code>y</code>
parameters in the coordinate space of this component's parent.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param x the <i>x</i>-coordinate of the new location's
         top-left corner in the parent's coordinate space
@param y the <i>y</i>-coordinate of the new location's
         top-left corner in the parent's coordinate space
@see #getLocation
@see #setBounds
@see #invalidate
@since JDK1.1
"
      end

      operation 1891586 "move"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setLocation(int, int)</code>.
"
      end

      operation 1891714 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves this component to a new location. The top-left corner of
the new location is specified by point <code>p</code>. Point
<code>p</code> is given in the parent's coordinate space.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param p the point defining the top-left corner
         of the new location, given in the coordinate space of this
         component's parent
@see #getLocation
@see #setBounds
@see #invalidate
@since JDK1.1
"
      end

      operation 1891842 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of this component in the form of a
<code>Dimension</code> object. The <code>height</code>
field of the <code>Dimension</code> object contains
this component's height, and the <code>width</code>
field of the <code>Dimension</code> object contains
this component's width.
@return a <code>Dimension</code> object that indicates the
         size of this component
@see #setSize
@since JDK1.1
"
      end

      operation 1891970 "size"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getSize()</code>.
"
      end

      operation 1892098 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes this component so that it has width <code>width</code>
and height <code>height</code>.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param width the new width of this component in pixels
@param height the new height of this component in pixels
@see #getSize
@see #setBounds
@see #invalidate
@since JDK1.1
"
      end

      operation 1892226 "resize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setSize(int, int)</code>.
"
      end

      operation 1892354 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes this component so that it has width <code>d.width</code>
and height <code>d.height</code>.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param d the dimension specifying the new size
         of this component
@throws NullPointerException if {@code d} is {@code null}
@see #setSize
@see #setBounds
@see #invalidate
@since JDK1.1
"
      end

      operation 1892482 "resize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setSize(Dimension)</code>.
"
      end

      operation 1892610 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bounds of this component in the form of a
<code>Rectangle</code> object. The bounds specify this
component's width, height, and location relative to
its parent.
@return a rectangle indicating this component's bounds
@see #setBounds
@see #getLocation
@see #getSize
"
      end

      operation 1892738 "bounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getBounds()</code>.
"
      end

      operation 1892866 "setBounds"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves and resizes this component. The new location of the top-left
corner is specified by <code>x</code> and <code>y</code>, and the
new size is specified by <code>width</code> and <code>height</code>.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param x the new <i>x</i>-coordinate of this component
@param y the new <i>y</i>-coordinate of this component
@param width the new <code>width</code> of this component
@param height the new <code>height</code> of this
         component
@see #getBounds
@see #setLocation(int, int)
@see #setLocation(Point)
@see #setSize(int, int)
@see #setSize(Dimension)
@see #invalidate
@since JDK1.1
"
      end

      operation 1892994 "reshape"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setBounds(int, int, int, int)</code>.
"
      end

      operation 1893122 "repaintParentIfNeeded"
	private explicit_return_type "void"
	nparams 4
	  param in name "oldX" explicit_type "int"
	  param in name "oldY" explicit_type "int"
	  param in name "oldWidth" explicit_type "int"
	  param in name "oldHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1893250 "reshapeNativePeer"
	private explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "op" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1893378 "notifyNewBounds"
	private explicit_return_type "void"
	nparams 2
	  param inout name "resized" explicit_type "boolean"
	  param inout name "moved" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 1893506 "setBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves and resizes this component to conform to the new
bounding rectangle <code>r</code>. This component's new
position is specified by <code>r.x</code> and <code>r.y</code>,
and its new size is specified by <code>r.width</code> and
<code>r.height</code>
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@param r the new bounding rectangle for this component
@throws NullPointerException if {@code r} is {@code null}
@see       #getBounds
@see       #setLocation(int, int)
@see       #setLocation(Point)
@see       #setSize(int, int)
@see       #setSize(Dimension)
@see #invalidate
@since     JDK1.1
"
      end

      operation 1893634 "getX"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current x coordinate of the components origin.
This method is preferable to writing
<code>component.getBounds().x</code>,
or <code>component.getLocation().x</code> because it doesn't
cause any heap allocations.

@return the current x coordinate of the components origin
@since 1.2
"
      end

      operation 1893762 "getY"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current y coordinate of the components origin.
This method is preferable to writing
<code>component.getBounds().y</code>,
or <code>component.getLocation().y</code> because it
doesn't cause any heap allocations.

@return the current y coordinate of the components origin
@since 1.2
"
      end

      operation 1893890 "getWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current width of this component.
This method is preferable to writing
<code>component.getBounds().width</code>,
or <code>component.getSize().width</code> because it
doesn't cause any heap allocations.

@return the current width of this component
@since 1.2
"
      end

      operation 1894018 "getHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current height of this component.
This method is preferable to writing
<code>component.getBounds().height</code>,
or <code>component.getSize().height</code> because it
doesn't cause any heap allocations.

@return the current height of this component
@since 1.2
"
      end

      operation 1894146 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "rv" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the bounds of this component into \"return value\" <b>rv</b> and
return <b>rv</b>.  If rv is <code>null</code> a new
<code>Rectangle</code> is allocated.
This version of <code>getBounds</code> is useful if the caller
wants to avoid allocating a new <code>Rectangle</code> object
on the heap.

@param rv the return value, modified to the components bounds
@return rv
"
      end

      operation 1894274 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "rv" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the width/height of this component into \"return value\" <b>rv</b>
and return <b>rv</b>.   If rv is <code>null</code> a new
<code>Dimension</code> object is allocated.  This version of
<code>getSize</code> is useful if the caller wants to avoid
allocating a new <code>Dimension</code> object on the heap.

@param rv the return value, modified to the components size
@return rv
"
      end

      operation 1894402 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 1
	  param inout name "rv" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the x,y origin of this component into \"return value\" <b>rv</b>
and return <b>rv</b>.   If rv is <code>null</code> a new
<code>Point</code> is allocated.
This version of <code>getLocation</code> is useful if the
caller wants to avoid allocating a new <code>Point</code>
object on the heap.

@param rv the return value, modified to the components location
@return rv
"
      end

      operation 1894530 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this component is completely opaque, returns
false by default.
<p>
An opaque component paints every pixel within its
rectangular region. A non-opaque component paints only some of
its pixels, allowing the pixels underneath it to \"show through\".
A component that does not fully paint its pixels therefore
provides a degree of transparency.
<p>
Subclasses that guarantee to always completely paint their
contents should override this method and return true.

@return true if this component is completely opaque
@see #isLightweight
@since 1.2
"
      end

      operation 1894658 "isLightweight"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A lightweight component doesn't have a native toolkit peer.
Subclasses of <code>Component</code> and <code>Container</code>,
other than the ones defined in this package like <code>Button</code>
or <code>Scrollbar</code>, are lightweight.
All of the Swing components are lightweights.
<p>
This method will always return <code>false</code> if this component
is not displayable because it is impossible to determine the
weight of an undisplayable component.

@return true if this component has a lightweight peer; false if
        it has a native peer or no peer
@see #isDisplayable
@since 1.2
"
      end

      operation 1894786 "setPreferredSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "preferredSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the preferred size of this component to a constant
value.  Subsequent calls to <code>getPreferredSize</code> will always
return this value.  Setting the preferred size to <code>null</code>
restores the default behavior.

@param preferredSize The new preferred size, or null
@see #getPreferredSize
@see #isPreferredSizeSet
@since 1.5
"
      end

      operation 1894914 "isPreferredSizeSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the preferred size has been set to a
non-<code>null</code> value otherwise returns false.

@return true if <code>setPreferredSize</code> has been invoked
        with a non-null value.
@since 1.5
"
      end

      operation 1895042 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred size of this component.
@return a dimension object indicating this component's preferred size
@see #getMinimumSize
@see LayoutManager
"
      end

      operation 1895170 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize()</code>.
"
      end

      operation 1895298 "setMinimumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "minimumSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum size of this component to a constant
value.  Subsequent calls to <code>getMinimumSize</code> will always
return this value.  Setting the minimum size to <code>null</code>
restores the default behavior.

@param minimumSize the new minimum size of this component
@see #getMinimumSize
@see #isMinimumSizeSet
@since 1.5
"
      end

      operation 1895426 "isMinimumSizeSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not <code>setMinimumSize</code> has been
invoked with a non-null value.

@return true if <code>setMinimumSize</code> has been invoked with a
             non-null value.
@since 1.5
"
      end

      operation 1895554 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum size of this component.
@return a dimension object indicating this component's minimum size
@see #getPreferredSize
@see LayoutManager
"
      end

      operation 1895682 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize()</code>.
"
      end

      operation 1895810 "setMaximumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maximumSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum size of this component to a constant
value.  Subsequent calls to <code>getMaximumSize</code> will always
return this value.  Setting the maximum size to <code>null</code>
restores the default behavior.

@param maximumSize a <code>Dimension</code> containing the
         desired maximum allowable size
@see #getMaximumSize
@see #isMaximumSizeSet
@since 1.5
"
      end

      operation 1895938 "isMaximumSizeSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the maximum size has been set to a non-<code>null</code>
value otherwise returns false.

@return true if <code>maximumSize</code> is non-<code>null</code>,
         false otherwise
@since 1.5
"
      end

      operation 1896066 "getMaximumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum size of this component.
@return a dimension object indicating this component's maximum size
@see #getMinimumSize
@see #getPreferredSize
@see LayoutManager
"
      end

      operation 1896194 "getAlignmentX"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 1896322 "getAlignmentY"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 1896450 "getBaseline"
	public explicit_return_type "int"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the baseline.  The baseline is measured from the top of
the component.  This method is primarily meant for
<code>LayoutManager</code>s to align components along their
baseline.  A return value less than 0 indicates this component
does not have a reasonable baseline and that
<code>LayoutManager</code>s should not align this component on
its baseline.
<p>
The default implementation returns -1.  Subclasses that support
baseline should override appropriately.  If a value &gt;= 0 is
returned, then the component has a valid baseline for any
size &gt;= the minimum size and <code>getBaselineResizeBehavior</code>
can be used to determine how the baseline changes with size.

@param width the width to get the baseline for
@param height the height to get the baseline for
@return the baseline or &lt; 0 indicating there is no reasonable
        baseline
@throws IllegalArgumentException if width or height is &lt; 0
@see #getBaselineResizeBehavior
@see java.awt.FontMetrics
@since 1.6
"
      end

      operation 1896578 "getBaselineResizeBehavior"
	public return_type class_ref 343170 // BaselineResizeBehavior
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enum indicating how the baseline of the component
changes as the size changes.  This method is primarily meant for
layout managers and GUI builders.
<p>
The default implementation returns
<code>BaselineResizeBehavior.OTHER</code>.  Subclasses that have a
baseline should override appropriately.  Subclasses should
never return <code>null</code>; if the baseline can not be
calculated return <code>BaselineResizeBehavior.OTHER</code>.  Callers
should first ask for the baseline using
<code>getBaseline</code> and if a value &gt;= 0 is returned use
this method.  It is acceptable for this method to return a
value other than <code>BaselineResizeBehavior.OTHER</code> even if
<code>getBaseline</code> returns a value less than 0.

@return an enum indicating how the baseline changes as the component
        size changes
@see #getBaseline(int, int)
@since 1.6
"
      end

      operation 1896706 "doLayout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prompts the layout manager to lay out this component. This is
usually called when the component (more specifically, container)
is validated.
@see #validate
@see LayoutManager
"
      end

      operation 1896834 "layout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>doLayout()</code>.
"
      end

      operation 1896962 "validate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates this component.
<p>
The meaning of the term <i>validating</i> is defined by the ancestors of
this class. See {@link Container#validate} for more details.

@see       #invalidate
@see       #doLayout()
@see       LayoutManager
@see       Container#validate
@since     JDK1.0
"
      end

      operation 1897090 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates this component and its ancestors.
<p>
By default, all the ancestors of the component up to the top-most
container of the hierarchy are marked invalid. If the {@code
java.awt.smartInvalidate} system property is set to {@code true},
invalidation stops on the nearest validate root of this component.
Marking a container <i>invalid</i> indicates that the container needs to
be laid out.
<p>
This method is called automatically when any layout-related information
changes (e.g. setting the bounds of the component, or adding the
component to a container).
<p>
This method might be called often, so it should work fast.

@see       #validate
@see       #doLayout
@see       LayoutManager
@see       java.awt.Container#isValidateRoot
@since     JDK1.0
"
      end

      operation 1897218 "invalidateParent"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the parent of this component if any.

This method MUST BE invoked under the TreeLock.
"
      end

      operation 1897346 "invalidateIfValid"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invalidates the component unless it is already invalid.
"
      end

      operation 1897474 "revalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Revalidates the component hierarchy up to the nearest validate root.
<p>
This method first invalidates the component hierarchy starting from this
component up to the nearest validate root. Afterwards, the component
hierarchy is validated starting from the nearest validate root.
<p>
This is a convenience method supposed to help application developers
avoid looking for validate roots manually. Basically, it's equivalent to
first calling the {@link #invalidate()} method on this component, and
then calling the {@link #validate()} method on the nearest validate
root.

@see Container#isValidateRoot
@since 1.7
"
      end

      operation 1897602 "revalidateSynchronously"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Revalidates the component synchronously.
"
      end

      operation 1897730 "getGraphics"
	public return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a graphics context for this component. This method will
return <code>null</code> if this component is currently not
displayable.
@return a graphics context for this component, or <code>null</code>
            if it has none
@see       #paint
@since     JDK1.0
"
      end

      operation 1897858 "getGraphics_NoClientCode"
	package return_type class_ref 343682 // Graphics
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1897986 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the font metrics for the specified font.
Warning: Since Font metrics are affected by the
{@link java.awt.font.FontRenderContext FontRenderContext} and
this method does not provide one, it can return only metrics for
the default render context which may not match that used when
rendering on the Component if {@link Graphics2D} functionality is being
used. Instead metrics can be obtained at rendering time by calling
{@link Graphics#getFontMetrics()} or text measurement APIs on the
{@link Font Font} class.
@param font the font for which font metrics is to be
         obtained
@return the font metrics for <code>font</code>
@see       #getFont
@see       #getPeer
@see       java.awt.peer.ComponentPeer#getFontMetrics(Font)
@see       Toolkit#getFontMetrics(Font)
@since     JDK1.0
"
      end

      operation 1898114 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 340866 // Cursor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the cursor image to the specified cursor.  This cursor
image is displayed when the <code>contains</code> method for
this component returns true for the current cursor location, and
this Component is visible, displayable, and enabled. Setting the
cursor of a <code>Container</code> causes that cursor to be displayed
within all of the container's subcomponents, except for those
that have a non-<code>null</code> cursor.
<p>
The method may have no visual effect if the Java platform
implementation and/or the native system do not support
changing the mouse cursor shape.
@param cursor One of the constants defined
         by the <code>Cursor</code> class;
         if this parameter is <code>null</code>
         then this component will inherit
         the cursor of its parent
@see       #isEnabled
@see       #isShowing
@see       #getCursor
@see       #contains
@see       Toolkit#createCustomCursor
@see       Cursor
@since     JDK1.1
"
      end

      operation 1898242 "updateCursorImmediately"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the cursor.  May not be invoked from the native
message pump.
"
      end

      operation 1898370 "getCursor"
	public return_type class_ref 340866 // Cursor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the cursor set in the component. If the component does
not have a cursor set, the cursor of its parent is returned.
If no cursor is set in the entire hierarchy,
<code>Cursor.DEFAULT_CURSOR</code> is returned.
@see #setCursor
@since      JDK1.1
"
      end

      operation 1898498 "getCursor_NoClientCode"
	package return_type class_ref 340866 // Cursor
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1898626 "isCursorSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the cursor has been explicitly set for this Component.
If this method returns <code>false</code>, this Component is inheriting
its cursor from an ancestor.

@return <code>true</code> if the cursor has been explicitly set for this
        Component; <code>false</code> otherwise.
@since 1.4
"
      end

      operation 1898754 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this component.
<p>
This method is called when the contents of the component should
be painted; such as when the component is first being shown or
is damaged and in need of repair.  The clip rectangle in the
<code>Graphics</code> parameter is set to the area
which needs to be painted.
Subclasses of <code>Component</code> that override this
method need not call <code>super.paint(g)</code>.
<p>
For performance reasons, <code>Component</code>s with zero width
or height aren't considered to need painting when they are first shown,
and also aren't considered to need repair.
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.

@param g the graphics context to use for painting
@see       #update
@since     JDK1.0
"
      end

      operation 1898882 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this component.
<p>
If this component is not a lightweight component, the
AWT calls the <code>update</code> method in response to
a call to <code>repaint</code>.  You can assume that
the background is not cleared.
<p>
The <code>update</code> method of <code>Component</code>
calls this component's <code>paint</code> method to redraw
this component.  This method is commonly overridden by subclasses
which need to do additional work in response to a call to
<code>repaint</code>.
Subclasses of Component that override this method should either
call <code>super.update(g)</code>, or call <code>paint(g)</code>
directly from their <code>update</code> method.
<p>
The origin of the graphics context, its
(<code>0</code>,&nbsp;<code>0</code>) coordinate point, is the
top-left corner of this component. The clipping region of the
graphics context is the bounding rectangle of this component.

<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.

@param g the specified context to use for updating
@see       #paint
@see       #repaint()
@since     JDK1.0
"
      end

      operation 1899010 "paintAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this component and all of its subcomponents.
<p>
The origin of the graphics context, its
(<code>0</code>,&nbsp;<code>0</code>) coordinate point, is the
top-left corner of this component. The clipping region of the
graphics context is the bounding rectangle of this component.

@param     g   the graphics context to use for painting
@see       #paint
@since     JDK1.0
"
      end

      operation 1899138 "lightweightPaint"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the peer callbacks into java.awt for painting of
lightweight Components.
@param     g   the graphics context to use for painting
@see       #paintAll
"
      end

      operation 1899266 "paintHeavyweightComponents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints all the heavyweight subcomponents.
"
      end

      operation 1899394 "repaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints this component.
<p>
If this component is a lightweight component, this method
causes a call to this component's <code>paint</code>
method as soon as possible.  Otherwise, this method causes
a call to this component's <code>update</code> method as soon
as possible.
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.


@see       #update(Graphics)
@since     JDK1.0
"
      end

      operation 1899522 "repaint"
	public explicit_return_type "void"
	nparams 1
	  param in name "tm" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the component.  If this component is a lightweight
component, this results in a call to <code>paint</code>
within <code>tm</code> milliseconds.
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.

@param tm maximum time in milliseconds before update
@see #paint
@see #update(Graphics)
@since JDK1.0
"
      end

      operation 1899650 "repaint"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component.
<p>
If this component is a lightweight component, this method
causes a call to this component's <code>paint</code> method
as soon as possible.  Otherwise, this method causes a call to
this component's <code>update</code> method as soon as possible.
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.

@param     x   the <i>x</i> coordinate
@param     y   the <i>y</i> coordinate
@param     width   the width
@param     height  the height
@see       #update(Graphics)
@since     JDK1.0
"
      end

      operation 1899778 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "tm" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the specified rectangle of this component within
<code>tm</code> milliseconds.
<p>
If this component is a lightweight component, this method causes
a call to this component's <code>paint</code> method.
Otherwise, this method causes a call to this component's
<code>update</code> method.
<p>
<b>Note</b>: For more information on the paint mechanisms utilitized
by AWT and Swing, including information on how to write the most
efficient painting code, see
<a href=\"http://www.oracle.com/technetwork/java/painting-140037.html\">Painting in AWT and Swing</a>.

@param     tm   maximum time in milliseconds before update
@param     x    the <i>x</i> coordinate
@param     y    the <i>y</i> coordinate
@param     width    the width
@param     height   the height
@see       #update(Graphics)
@since     JDK1.0
"
      end

      operation 1899906 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this component. Applications should override this method
for components that must do special processing before being
printed or should be printed differently than they are painted.
<p>
The default implementation of this method calls the
<code>paint</code> method.
<p>
The origin of the graphics context, its
(<code>0</code>,&nbsp;<code>0</code>) coordinate point, is the
top-left corner of this component. The clipping region of the
graphics context is the bounding rectangle of this component.
@param     g   the graphics context to use for printing
@see       #paint(Graphics)
@since     JDK1.0
"
      end

      operation 1900034 "printAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this component and all of its subcomponents.
<p>
The origin of the graphics context, its
(<code>0</code>,&nbsp;<code>0</code>) coordinate point, is the
top-left corner of this component. The clipping region of the
graphics context is the bounding rectangle of this component.
@param     g   the graphics context to use for printing
@see       #print(Graphics)
@since     JDK1.0
"
      end

      operation 1900162 "lightweightPrint"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the peer callbacks into java.awt for printing of
lightweight Components.
@param     g   the graphics context to use for printing
@see       #printAll
"
      end

      operation 1900290 "printHeavyweightComponents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints all the heavyweight subcomponents.
"
      end

      operation 1900418 "getInsets_NoClientCode"
	private return_type class_ref 343938 // Insets
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1900546 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Repaints the component when the image has changed.
This <code>imageUpdate</code> method of an <code>ImageObserver</code>
is called when more information about an
image which had been previously requested using an asynchronous
routine such as the <code>drawImage</code> method of
<code>Graphics</code> becomes available.
See the definition of <code>imageUpdate</code> for
more information on this method and its arguments.
<p>
The <code>imageUpdate</code> method of <code>Component</code>
incrementally draws an image on the component as more of the bits
of the image are available.
<p>
If the system property <code>awt.image.incrementaldraw</code>
is missing or has the value <code>true</code>, the image is
incrementally drawn. If the system property has any other value,
then the image is not drawn until it has been completely loaded.
<p>
Also, if incremental drawing is in effect, the value of the
system property <code>awt.image.redrawrate</code> is interpreted
as an integer to give the maximum redraw rate, in milliseconds. If
the system property is missing or cannot be interpreted as an
integer, the redraw rate is once every 100ms.
<p>
The interpretation of the <code>x</code>, <code>y</code>,
<code>width</code>, and <code>height</code> arguments depends on
the value of the <code>infoflags</code> argument.

@param     img   the image being observed
@param     infoflags   see <code>imageUpdate</code> for more information
@param     x   the <i>x</i> coordinate
@param     y   the <i>y</i> coordinate
@param     w   the width
@param     h   the height
@return    <code>false</code> if the infoflags indicate that the
           image is completely loaded; <code>true</code> otherwise.

@see     java.awt.image.ImageObserver
@see     Graphics#drawImage(Image, int, int, Color, java.awt.image.ImageObserver)
@see     Graphics#drawImage(Image, int, int, java.awt.image.ImageObserver)
@see     Graphics#drawImage(Image, int, int, int, int, Color, java.awt.image.ImageObserver)
@see     Graphics#drawImage(Image, int, int, int, int, java.awt.image.ImageObserver)
@see     java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
@since   JDK1.0
"
      end

      operation 1900674 "createImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "producer" type class_ref 344066 // ImageProducer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image from the specified image producer.
@param     producer  the image producer
@return    the image produced
@since     JDK1.0
"
      end

      operation 1900802 "createImage"
	public return_type class_ref 340098 // Image
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an off-screen drawable image
    to be used for double buffering.
@param     width the specified width
@param     height the specified height
@return    an off-screen drawable image, which can be used for double
   buffering.  The return value may be <code>null</code> if the
   component is not displayable.  This will always happen if
   <code>GraphicsEnvironment.isHeadless()</code> returns
   <code>true</code>.
@see #isDisplayable
@see GraphicsEnvironment#isHeadless
@since     JDK1.0
"
      end

      operation 1900930 "createVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a volatile off-screen drawable image
    to be used for double buffering.
@param     width the specified width.
@param     height the specified height.
@return    an off-screen drawable image, which can be used for double
   buffering.  The return value may be <code>null</code> if the
   component is not displayable.  This will always happen if
   <code>GraphicsEnvironment.isHeadless()</code> returns
   <code>true</code>.
@see java.awt.image.VolatileImage
@see #isDisplayable
@see GraphicsEnvironment#isHeadless
@since     1.4
"
      end

      operation 1901058 "createVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "caps" type class_ref 344322 // ImageCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a volatile off-screen drawable image, with the given capabilities.
The contents of this image may be lost at any time due
to operating system issues, so the image must be managed
via the <code>VolatileImage</code> interface.
@param width the specified width.
@param height the specified height.
@param caps the image capabilities
@exception AWTException if an image with the specified capabilities cannot
be created
@return a VolatileImage object, which can be used
to manage surface contents loss and capabilities.
@see java.awt.image.VolatileImage
@since 1.4
"
      end

      operation 1901186 "prepareImage"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepares an image for rendering on this component.  The image
data is downloaded asynchronously in another thread and the
appropriate screen representation of the image is generated.
@param     image   the <code>Image</code> for which to
                   prepare a screen representation
@param     observer   the <code>ImageObserver</code> object
                      to be notified as the image is being prepared
@return    <code>true</code> if the image has already been fully
          prepared; <code>false</code> otherwise
@since     JDK1.0
"
      end

      operation 1901314 "prepareImage"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepares an image for rendering on this component at the
specified width and height.
<p>
The image data is downloaded asynchronously in another thread,
and an appropriately scaled screen representation of the image is
generated.
@param     image    the instance of <code>Image</code>
           for which to prepare a screen representation
@param     width    the width of the desired screen representation
@param     height   the height of the desired screen representation
@param     observer   the <code>ImageObserver</code> object
           to be notified as the image is being prepared
@return    <code>true</code> if the image has already been fully
         prepared; <code>false</code> otherwise
@see       java.awt.image.ImageObserver
@since     JDK1.0
"
      end

      operation 1901442 "checkImage"
	public explicit_return_type "int"
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status of the construction of a screen representation
of the specified image.
<p>
This method does not cause the image to begin loading. An
application must use the <code>prepareImage</code> method
to force the loading of an image.
<p>
Information on the flags returned by this method can be found
with the discussion of the <code>ImageObserver</code> interface.
@param     image   the <code>Image</code> object whose status
           is being checked
@param     observer   the <code>ImageObserver</code>
           object to be notified as the image is being prepared
@return  the bitwise inclusive <b>OR</b> of
           <code>ImageObserver</code> flags indicating what
           information about the image is currently available
@see      #prepareImage(Image, int, int, java.awt.image.ImageObserver)
@see      Toolkit#checkImage(Image, int, int, java.awt.image.ImageObserver)
@see      java.awt.image.ImageObserver
@since    JDK1.0
"
      end

      operation 1901570 "checkImage"
	public explicit_return_type "int"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status of the construction of a screen representation
of the specified image.
<p>
This method does not cause the image to begin loading. An
application must use the <code>prepareImage</code> method
to force the loading of an image.
<p>
The <code>checkImage</code> method of <code>Component</code>
calls its peer's <code>checkImage</code> method to calculate
the flags. If this component does not yet have a peer, the
component's toolkit's <code>checkImage</code> method is called
instead.
<p>
Information on the flags returned by this method can be found
with the discussion of the <code>ImageObserver</code> interface.
@param     image   the <code>Image</code> object whose status
                   is being checked
@param     width   the width of the scaled version
                   whose status is to be checked
@param     height  the height of the scaled version
                   whose status is to be checked
@param     observer   the <code>ImageObserver</code> object
                   to be notified as the image is being prepared
@return    the bitwise inclusive <b>OR</b> of
           <code>ImageObserver</code> flags indicating what
           information about the image is currently available
@see      #prepareImage(Image, int, int, java.awt.image.ImageObserver)
@see      Toolkit#checkImage(Image, int, int, java.awt.image.ImageObserver)
@see      java.awt.image.ImageObserver
@since    JDK1.0
"
      end

      operation 1901698 "createBufferStrategy"
	package explicit_return_type "void"
	nparams 1
	  param in name "numBuffers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component.
Multi-buffering is useful for rendering performance.  This method
attempts to create the best strategy available with the number of
buffers supplied.  It will always create a <code>BufferStrategy</code>
with that number of buffers.
A page-flipping strategy is attempted first, then a blitting strategy
using accelerated buffers.  Finally, an unaccelerated blitting
strategy is used.
<p>
Each time this method is called,
the existing buffer strategy for this component is discarded.
@param numBuffers number of buffers to create, including the front buffer
@exception IllegalArgumentException if numBuffers is less than 1.
@exception IllegalStateException if the component is not displayable
@see #isDisplayable
@see Window#getBufferStrategy()
@see Canvas#getBufferStrategy()
@since 1.4
"
      end

      operation 1901826 "createBufferStrategy"
	package explicit_return_type "void"
	nparams 2
	  param in name "numBuffers" explicit_type "int"
	  param inout name "caps" type class_ref 344578 // BufferCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component with the
required buffer capabilities.  This is useful, for example, if only
accelerated memory or page flipping is desired (as specified by the
buffer capabilities).
<p>
Each time this method
is called, <code>dispose</code> will be invoked on the existing
<code>BufferStrategy</code>.
@param numBuffers number of buffers to create
@param caps the required capabilities for creating the buffer strategy;
cannot be <code>null</code>
@exception AWTException if the capabilities supplied could not be
supported or met; this may happen, for example, if there is not enough
accelerated memory currently available, or if page flipping is specified
but not possible.
@exception IllegalArgumentException if numBuffers is less than 1, or if
caps is <code>null</code>
@see Window#getBufferStrategy()
@see Canvas#getBufferStrategy()
@since 1.4
"
      end

      class 344706 "ProxyCapabilities"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 598530 // orig (<unidirectional association>)
	  relation 598530 --->
	    a role_name "orig" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 598530 // orig (<unidirectional association>)
	    b parent class_ref 344578 // BufferCapabilities
	end

	operation 1901954 "ProxyCapabilities"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "orig" type class_ref 344578 // BufferCapabilities
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1902082 "getBufferStrategy"
	package return_type class_ref 341122 // BufferStrategy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the buffer strategy used by this component
@see Window#createBufferStrategy
@see Canvas#createBufferStrategy
@since 1.4
"
      end

      operation 1902210 "getBackBuffer"
	package return_type class_ref 340098 // Image
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the back buffer currently used by this component's
BufferStrategy.  If there is no BufferStrategy or no
back buffer, this method returns null.
"
      end

      class 344962 "FlipBufferStrategy"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 598658 // <generalisation>
	  relation 598658 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 598658 // <generalisation>
	    b parent class_ref 341122 // BufferStrategy
	end

	attribute 448898 "numBuffers"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The number of buffers

 = 0"
	end

	classrelation 598786 // caps (<unidirectional association>)
	  relation 598786 --->
	    a role_name "caps" protected
	      comment "
The buffering capabilities

 = null"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 598786 // caps (<unidirectional association>)
	    b parent class_ref 344578 // BufferCapabilities
	end

	classrelation 598914 // drawBuffer (<unidirectional association>)
	  relation 598914 --->
	    a role_name "drawBuffer" protected
	      comment "
The drawing buffer

 = null"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 598914 // drawBuffer (<unidirectional association>)
	    b parent class_ref 340098 // Image
	end

	classrelation 599042 // drawVBuffer (<unidirectional association>)
	  relation 599042 --->
	    a role_name "drawVBuffer" protected
	      comment "
The drawing buffer as a volatile image

 = null"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 599042 // drawVBuffer (<unidirectional association>)
	    b parent class_ref 344194 // VolatileImage
	end

	attribute 449026 "validatedContents"
	  protected explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether or not the drawing buffer has been recently restored from
a lost state.

 = false"
	end

	attribute 449154 "width"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Size of the back buffers.  (Note: these fields were added in 6.0
but kept package-private to avoid exposing them in the spec.
None of these fields/methods really should have been marked
protected when they were introduced in 1.4, but now we just have
to live with that decision.)

"
	end

	attribute 449282 "height"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 1903106 "FlipBufferStrategy"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "numBuffers" explicit_type "int"
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  nexceptions 1
	    exception class_ref 344450 // AWTException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new flipping buffer strategy for this component.
The component must be a <code>Canvas</code> or <code>Window</code>.
@see Canvas
@see Window
@param numBuffers the number of buffers
@param caps the capabilities of the buffers
@exception AWTException if the capabilities supplied could not be
supported or met
@exception ClassCastException if the component is not a canvas or
window.
@exception IllegalStateException if the component has no peer
@exception IllegalArgumentException if {@code numBuffers} is less than two,
or if {@code BufferCapabilities.isPageFlipping} is not
{@code true}.
@see #createBuffers(int, BufferCapabilities)
"
	end

	operation 1903234 "createBuffers"
	  protected explicit_return_type "void"
	  nparams 2
	    param in name "numBuffers" explicit_type "int"
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  nexceptions 1
	    exception class_ref 344450 // AWTException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates one or more complex, flipping buffers with the given
capabilities.
@param numBuffers number of buffers to create; must be greater than
one
@param caps the capabilities of the buffers.
<code>BufferCapabilities.isPageFlipping</code> must be
<code>true</code>.
@exception AWTException if the capabilities supplied could not be
supported or met
@exception IllegalStateException if the component has no peer
@exception IllegalArgumentException if numBuffers is less than two,
or if <code>BufferCapabilities.isPageFlipping</code> is not
<code>true</code>.
@see java.awt.BufferCapabilities#isPageFlipping()
"
	end

	operation 1903362 "updateInternalBuffers"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Updates internal buffers (both volatile and non-volatile)
by requesting the back-buffer from the peer.
"
	end

	operation 1903490 "getBackBuffer"
	  protected return_type class_ref 340098 // Image
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return direct access to the back buffer, as an image.
@exception IllegalStateException if the buffers have not yet
been created
"
	end

	operation 1903618 "flip"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "flipAction" type class_ref 345090 // FlipContents
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Flipping moves the contents of the back buffer to the front buffer,
either by copying or by moving the video pointer.
@param flipAction an integer value describing the flipping action
for the contents of the back buffer.  This should be one of the
values of the <code>BufferCapabilities.FlipContents</code>
property.
@exception IllegalStateException if the buffers have not yet
been created
@see java.awt.BufferCapabilities#getFlipContents()
"
	end

	operation 1903746 "flipSubRegion"
	  package explicit_return_type "void"
	  nparams 5
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	    param inout name "flipAction" type class_ref 345090 // FlipContents
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1903874 "destroyBuffers"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Destroys the buffers created through this object
"
	end

	operation 1904002 "getCapabilities"
	  public return_type class_ref 344578 // BufferCapabilities
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the buffering capabilities of this strategy
"
	end

	operation 1904130 "getDrawGraphics"
	  public return_type class_ref 343682 // Graphics
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the graphics on the drawing buffer.  This method may not
be synchronized for performance reasons; use of this method by multiple
threads should be handled at the application level.  Disposal of the
graphics object must be handled by the application.
"
	end

	operation 1904258 "revalidate"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Restore the drawing buffer if it has been lost
"
	end

	operation 1904386 "revalidate"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "checkSize" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1904514 "contentsLost"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return whether the drawing buffer was lost since the last call to
<code>getDrawGraphics</code>
"
	end

	operation 1904642 "contentsRestored"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return whether the drawing buffer was recently restored from a lost
state and reinitialized to the default background color (white)
"
	end

	operation 1904770 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Makes the next available buffer visible by either blitting or
flipping.
"
	end

	operation 1904898 "showSubRegion"
	  package explicit_return_type "void"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Makes specified region of the the next available buffer visible
by either blitting or flipping.
"
	end

	operation 1905026 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
@since 1.6
"
	end
      end

      class 345218 "BltBufferStrategy"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 599170 // <generalisation>
	  relation 599170 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 599170 // <generalisation>
	    b parent class_ref 341122 // BufferStrategy
	end

	classrelation 599298 // caps (<unidirectional association>)
	  relation 599298 --->
	    a role_name "caps" protected
	      comment "
The buffering capabilities

 = null"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 599298 // caps (<unidirectional association>)
	    b parent class_ref 344578 // BufferCapabilities
	end

	classrelation 599426 // backBuffers (<unidirectional association>)
	  relation 599426 --->
	    a role_name "backBuffers" multiplicity "[]" protected
	      comment "
The back buffers

 = null"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 599426 // backBuffers (<unidirectional association>)
	    b parent class_ref 344194 // VolatileImage
	end

	attribute 449410 "validatedContents"
	  protected explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Whether or not the drawing buffer has been recently restored from
a lost state.

 = false"
	end

	attribute 449538 "width"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Size of the back buffers

"
	end

	attribute 449666 "height"
	  protected explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 599554 // insets (<unidirectional association>)
	  relation 599554 --->
	    a role_name "insets" private
	      comment "
Insets for the hosting Component.  The size of the back buffer
is constrained by these.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 599554 // insets (<unidirectional association>)
	    b parent class_ref 343938 // Insets
	end

	operation 1905154 "BltBufferStrategy"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "numBuffers" explicit_type "int"
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new blt buffer strategy around a component
@param numBuffers number of buffers to create, including the
front buffer
@param caps the capabilities of the buffers
"
	end

	operation 1905282 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@inheritDoc}
@since 1.6
"
	end

	operation 1905410 "createBackBuffers"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "numBuffers" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates the back buffers
"
	end

	operation 1905538 "getCapabilities"
	  public return_type class_ref 344578 // BufferCapabilities
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the buffering capabilities of this strategy
"
	end

	operation 1905666 "getDrawGraphics"
	  public return_type class_ref 343682 // Graphics
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the draw graphics
"
	end

	operation 1905794 "getBackBuffer"
	  package return_type class_ref 340098 // Image
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return direct access to the back buffer, as an image.
If there is no back buffer, returns null.
"
	end

	operation 1905922 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Makes the next available buffer visible.
"
	end

	operation 1906050 "showSubRegion"
	  package explicit_return_type "void"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Package-private method to present a specific rectangular area
of this buffer.  This class currently shows only the entire
buffer, by calling showSubRegion() with the full dimensions of
the buffer.  Subclasses (e.g., BltSubRegionBufferStrategy
and FlipSubRegionBufferStrategy) may have region-specific show
methods that call this method with actual sub regions of the
buffer.
"
	end

	operation 1906178 "revalidate"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Restore the drawing buffer if it has been lost
"
	end

	operation 1906306 "revalidate"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "checkSize" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1906434 "contentsLost"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return whether the drawing buffer was lost since the last call to
<code>getDrawGraphics</code>
"
	end

	operation 1906562 "contentsRestored"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return whether the drawing buffer was recently restored from a lost
state and reinitialized to the default background color (white)
"
	end
      end

      class 345346 "FlipSubRegionBufferStrategy"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 599682 // <generalisation>
	  relation 599682 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 599682 // <generalisation>
	    b parent class_ref 344962 // FlipBufferStrategy
	end

	operation 1906690 "FlipSubRegionBufferStrategy"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "numBuffers" explicit_type "int"
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  nexceptions 1
	    exception class_ref 344450 // AWTException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1906818 "show"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1906946 "showIfNotLost"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This is invoked by Swing on the toolkit thread."
	end
      end

      class 345602 "BltSubRegionBufferStrategy"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 599938 // <generalisation>
	  relation 599938 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 599938 // <generalisation>
	    b parent class_ref 345218 // BltBufferStrategy
	end

	operation 1907074 "BltSubRegionBufferStrategy"
	  protected explicit_return_type ""
	  nparams 2
	    param in name "numBuffers" explicit_type "int"
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907202 "show"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907330 "showIfNotLost"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "x1" explicit_type "int"
	    param in name "y1" explicit_type "int"
	    param in name "x2" explicit_type "int"
	    param in name "y2" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " This method is called by Swing on the toolkit thread."
	end
      end

      class 345730 "SingleBufferStrategy"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 600194 // <generalisation>
	  relation 600194 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 600194 // <generalisation>
	    b parent class_ref 341122 // BufferStrategy
	end

	classrelation 600322 // caps (<unidirectional association>)
	  relation 600322 --->
	    a role_name "caps" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 600322 // caps (<unidirectional association>)
	    b parent class_ref 344578 // BufferCapabilities
	end

	operation 1907458 "SingleBufferStrategy"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "caps" type class_ref 344578 // BufferCapabilities
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907586 "getCapabilities"
	  public return_type class_ref 344578 // BufferCapabilities
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907714 "getDrawGraphics"
	  public return_type class_ref 343682 // Graphics
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907842 "contentsLost"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1907970 "contentsRestored"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1908098 "show"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1908226 "setIgnoreRepaint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignoreRepaint" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inner class SingleBufferStrategy

Sets whether or not paint messages received from the operating system
should be ignored.  This does not affect paint events generated in
software by the AWT, unless they are an immediate response to an
OS-level paint message.
<p>
This is useful, for example, if running under full-screen mode and
better performance is desired, or if page-flipping is used as the
buffer strategy.

@since 1.4
@see #getIgnoreRepaint
@see Canvas#createBufferStrategy
@see Window#createBufferStrategy
@see java.awt.image.BufferStrategy
@see GraphicsDevice#setFullScreenWindow
"
      end

      operation 1908354 "getIgnoreRepaint"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return whether or not paint messages received from the operating system
should be ignored.

@since 1.4
@see #setIgnoreRepaint
"
      end

      operation 1908482 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this component \"contains\" the specified point,
where <code>x</code> and <code>y</code> are defined to be
relative to the coordinate system of this component.
@param     x   the <i>x</i> coordinate of the point
@param     y   the <i>y</i> coordinate of the point
@see       #getComponentAt(int, int)
@since     JDK1.1
"
      end

      operation 1908610 "inside"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by contains(int, int).
"
      end

      operation 1908738 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this component \"contains\" the specified point,
where the point's <i>x</i> and <i>y</i> coordinates are defined
to be relative to the coordinate system of this component.
@param     p     the point
@throws    NullPointerException if {@code p} is {@code null}
@see       #getComponentAt(Point)
@since     JDK1.1
"
      end

      operation 1908866 "getComponentAt"
	public return_type class_ref 338818 // Component
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this component or one of its immediate
subcomponents contains the (<i>x</i>,&nbsp;<i>y</i>) location,
and if so, returns the containing component. This method only
looks one level deep. If the point (<i>x</i>,&nbsp;<i>y</i>) is
inside a subcomponent that itself has subcomponents, it does not
go looking down the subcomponent tree.
<p>
The <code>locate</code> method of <code>Component</code> simply
returns the component itself if the (<i>x</i>,&nbsp;<i>y</i>)
coordinate location is inside its bounding box, and <code>null</code>
otherwise.
@param     x   the <i>x</i> coordinate
@param     y   the <i>y</i> coordinate
@return    the component or subcomponent that contains the
               (<i>x</i>,&nbsp;<i>y</i>) location;
               <code>null</code> if the location
               is outside this component
@see       #contains(int, int)
@since     JDK1.0
"
      end

      operation 1908994 "locate"
	public return_type class_ref 338818 // Component
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by getComponentAt(int, int).
"
      end

      operation 1909122 "getComponentAt"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component or subcomponent that contains the
specified point.
@param     p   the point
@see       java.awt.Component#contains
@since     JDK1.1
"
      end

      operation 1909250 "deliverEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>dispatchEvent(AWTEvent e)</code>.
"
      end

      operation 1909378 "dispatchEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event to this component or one of its sub components.
Calls <code>processEvent</code> before returning for 1.1-style
events which have been enabled for the <code>Component</code>.
@param e the event
"
      end

      operation 1909506 "dispatchEventImpl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 1909634 "autoProcessMouseWheel"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " dispatchEventImpl()

If newEventsOnly is false, method is called so that ScrollPane can
override it and handle common-case mouse wheel scrolling.  NOP
for Component.
"
      end

      operation 1909762 "dispatchMouseWheelToAncestor"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch given MouseWheelEvent to the first ancestor for which
MouseWheelEvents are enabled.

Returns whether or not event was dispatched to an ancestor
"
      end

      operation 1909890 "checkWindowClosingException"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1910018 "areInputMethodsEnabled"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1910146 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is handled at lower level"
      end

      operation 1910274 "eventTypeEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1910402 "postEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by dispatchEvent(AWTEvent).
"
      end

      operation 1910530 "addComponentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 341890 // ComponentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Event source interfaces

Adds the specified component listener to receive component events from
this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the component listener
@see      java.awt.event.ComponentEvent
@see      java.awt.event.ComponentListener
@see      #removeComponentListener
@see      #getComponentListeners
@since    JDK1.1
"
      end

      operation 1910658 "removeComponentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 341890 // ComponentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component listener so that it no longer
receives component events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.
@param    l   the component listener
@see      java.awt.event.ComponentEvent
@see      java.awt.event.ComponentListener
@see      #addComponentListener
@see      #getComponentListeners
@since    JDK1.1
"
      end

      operation 1910786 "getComponentListeners"
	public return_type class_ref 341890 // ComponentListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the component listeners
registered on this component.

@return all <code>ComponentListener</code>s of this component
        or an empty array if no component
        listeners are currently registered

@see #addComponentListener
@see #removeComponentListener
@since 1.4
"
      end

      operation 1910914 "addFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342018 // FocusListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified focus listener to receive focus events from
this component when this component gains input focus.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the focus listener
@see      java.awt.event.FocusEvent
@see      java.awt.event.FocusListener
@see      #removeFocusListener
@see      #getFocusListeners
@since    JDK1.1
"
      end

      operation 1911042 "removeFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342018 // FocusListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified focus listener so that it no longer
receives focus events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the focus listener
@see      java.awt.event.FocusEvent
@see      java.awt.event.FocusListener
@see      #addFocusListener
@see      #getFocusListeners
@since    JDK1.1
"
      end

      operation 1911170 "getFocusListeners"
	public return_type class_ref 342018 // FocusListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the focus listeners
registered on this component.

@return all of this component's <code>FocusListener</code>s
        or an empty array if no component
        listeners are currently registered

@see #addFocusListener
@see #removeFocusListener
@since 1.4
"
      end

      operation 1911298 "addHierarchyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342146 // HierarchyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified hierarchy listener to receive hierarchy changed
events from this component when the hierarchy to which this container
belongs changes.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the hierarchy listener
@see      java.awt.event.HierarchyEvent
@see      java.awt.event.HierarchyListener
@see      #removeHierarchyListener
@see      #getHierarchyListeners
@since    1.3
"
      end

      operation 1911426 "removeHierarchyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342146 // HierarchyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified hierarchy listener so that it no longer
receives hierarchy changed events from this component. This method
performs no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the hierarchy listener
@see      java.awt.event.HierarchyEvent
@see      java.awt.event.HierarchyListener
@see      #addHierarchyListener
@see      #getHierarchyListeners
@since    1.3
"
      end

      operation 1911554 "getHierarchyListeners"
	public return_type class_ref 342146 // HierarchyListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the hierarchy listeners
registered on this component.

@return all of this component's <code>HierarchyListener</code>s
        or an empty array if no hierarchy
        listeners are currently registered

@see      #addHierarchyListener
@see      #removeHierarchyListener
@since    1.4
"
      end

      operation 1911682 "addHierarchyBoundsListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342274 // HierarchyBoundsListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified hierarchy bounds listener to receive hierarchy
bounds events from this component when the hierarchy to which this
container belongs changes.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the hierarchy bounds listener
@see      java.awt.event.HierarchyEvent
@see      java.awt.event.HierarchyBoundsListener
@see      #removeHierarchyBoundsListener
@see      #getHierarchyBoundsListeners
@since    1.3
"
      end

      operation 1911810 "removeHierarchyBoundsListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342274 // HierarchyBoundsListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified hierarchy bounds listener so that it no longer
receives hierarchy bounds events from this component. This method
performs no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the hierarchy bounds listener
@see      java.awt.event.HierarchyEvent
@see      java.awt.event.HierarchyBoundsListener
@see      #addHierarchyBoundsListener
@see      #getHierarchyBoundsListeners
@since    1.3
"
      end

      operation 1911938 "numListening"
	package explicit_return_type "int"
	nparams 1
	  param in name "mask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding the tree lock"
      end

      operation 1912066 "countHierarchyMembers"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 1912194 "createHierarchyEvents"
	package explicit_return_type "int"
	nparams 5
	  param in name "id" explicit_type "int"
	  param inout name "changed" type class_ref 338818 // Component
	  param inout name "changedParent" type class_ref 338690 // Container
	  param in name "changeFlags" explicit_type "long"
	  param inout name "enabledOnToolkit" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding the tree lock"
      end

      operation 1912322 "getHierarchyBoundsListeners"
	public return_type class_ref 342274 // HierarchyBoundsListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the hierarchy bounds listeners
registered on this component.

@return all of this component's <code>HierarchyBoundsListener</code>s
        or an empty array if no hierarchy bounds
        listeners are currently registered

@see      #addHierarchyBoundsListener
@see      #removeHierarchyBoundsListener
@since    1.4
"
      end

      operation 1912450 "adjustListeningChildrenOnParent"
	package explicit_return_type "void"
	nparams 2
	  param in name "mask" explicit_type "long"
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Should only be called while holding the tree lock.
It's added only for overriding in java.awt.Window
because parent in Window is owner.
"
      end

      operation 1912578 "addKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342402 // KeyListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified key listener to receive key events from
this component.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the key listener.
@see      java.awt.event.KeyEvent
@see      java.awt.event.KeyListener
@see      #removeKeyListener
@see      #getKeyListeners
@since    JDK1.1
"
      end

      operation 1912706 "removeKeyListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342402 // KeyListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified key listener so that it no longer
receives key events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the key listener
@see      java.awt.event.KeyEvent
@see      java.awt.event.KeyListener
@see      #addKeyListener
@see      #getKeyListeners
@since    JDK1.1
"
      end

      operation 1912834 "getKeyListeners"
	public return_type class_ref 342402 // KeyListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the key listeners
registered on this component.

@return all of this component's <code>KeyListener</code>s
        or an empty array if no key
        listeners are currently registered

@see      #addKeyListener
@see      #removeKeyListener
@since    1.4
"
      end

      operation 1912962 "addMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified mouse listener to receive mouse events from
this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseListener
@see      #removeMouseListener
@see      #getMouseListeners
@since    JDK1.1
"
      end

      operation 1913090 "removeMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified mouse listener so that it no longer
receives mouse events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseListener
@see      #addMouseListener
@see      #getMouseListeners
@since    JDK1.1
"
      end

      operation 1913218 "getMouseListeners"
	public return_type class_ref 342530 // MouseListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the mouse listeners
registered on this component.

@return all of this component's <code>MouseListener</code>s
        or an empty array if no mouse
        listeners are currently registered

@see      #addMouseListener
@see      #removeMouseListener
@since    1.4
"
      end

      operation 1913346 "addMouseMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified mouse motion listener to receive mouse motion
events from this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse motion listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseMotionListener
@see      #removeMouseMotionListener
@see      #getMouseMotionListeners
@since    JDK1.1
"
      end

      operation 1913474 "removeMouseMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified mouse motion listener so that it no longer
receives mouse motion events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse motion listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseMotionListener
@see      #addMouseMotionListener
@see      #getMouseMotionListeners
@since    JDK1.1
"
      end

      operation 1913602 "getMouseMotionListeners"
	public return_type class_ref 342658 // MouseMotionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the mouse motion listeners
registered on this component.

@return all of this component's <code>MouseMotionListener</code>s
        or an empty array if no mouse motion
        listeners are currently registered

@see      #addMouseMotionListener
@see      #removeMouseMotionListener
@since    1.4
"
      end

      operation 1913730 "addMouseWheelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342786 // MouseWheelListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified mouse wheel listener to receive mouse wheel events
from this component.  Containers also receive mouse wheel events from
sub-components.
<p>
For information on how mouse wheel events are dispatched, see
the class description for {@link MouseWheelEvent}.
<p>
If l is <code>null</code>, no exception is thrown and no
action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse wheel listener
@see      java.awt.event.MouseWheelEvent
@see      java.awt.event.MouseWheelListener
@see      #removeMouseWheelListener
@see      #getMouseWheelListeners
@since    1.4
"
      end

      operation 1913858 "removeMouseWheelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342786 // MouseWheelListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified mouse wheel listener so that it no longer
receives mouse wheel events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the mouse wheel listener.
@see      java.awt.event.MouseWheelEvent
@see      java.awt.event.MouseWheelListener
@see      #addMouseWheelListener
@see      #getMouseWheelListeners
@since    1.4
"
      end

      operation 1913986 "getMouseWheelListeners"
	public return_type class_ref 342786 // MouseWheelListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the mouse wheel listeners
registered on this component.

@return all of this component's <code>MouseWheelListener</code>s
        or an empty array if no mouse wheel
        listeners are currently registered

@see      #addMouseWheelListener
@see      #removeMouseWheelListener
@since    1.4
"
      end

      operation 1914114 "addInputMethodListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342914 // InputMethodListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified input method listener to receive
input method events from this component. A component will
only receive input method events from input methods
if it also overrides <code>getInputMethodRequests</code> to return an
<code>InputMethodRequests</code> instance.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"{@docRoot}/java/awt/doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the input method listener
@see      java.awt.event.InputMethodEvent
@see      java.awt.event.InputMethodListener
@see      #removeInputMethodListener
@see      #getInputMethodListeners
@see      #getInputMethodRequests
@since    1.2
"
      end

      operation 1914242 "removeInputMethodListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 342914 // InputMethodListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified input method listener so that it no longer
receives input method events from this component. This method performs
no function, nor does it throw an exception, if the listener
specified by the argument was not previously added to this component.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the input method listener
@see      java.awt.event.InputMethodEvent
@see      java.awt.event.InputMethodListener
@see      #addInputMethodListener
@see      #getInputMethodListeners
@since    1.2
"
      end

      operation 1914370 "getInputMethodListeners"
	public return_type class_ref 342914 // InputMethodListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the input method listeners
registered on this component.

@return all of this component's <code>InputMethodListener</code>s
        or an empty array if no input method
        listeners are currently registered

@see      #addInputMethodListener
@see      #removeInputMethodListener
@since    1.4
"
      end

      operation 1914498 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Component</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Component</code> <code>c</code>
for its mouse listeners with the following code:

<pre>MouseListener[] mls = (MouseListener[])(c.getListeners(MouseListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this component,
         or an empty array if no such listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>
@throws NullPointerException if {@code listenerType} is {@code null}
@see #getComponentListeners
@see #getFocusListeners
@see #getHierarchyListeners
@see #getHierarchyBoundsListeners
@see #getKeyListeners
@see #getMouseListeners
@see #getMouseMotionListeners
@see #getMouseWheelListeners
@see #getInputMethodListeners
@see #getPropertyChangeListeners

@since 1.3
"
      end

      operation 1914626 "getInputMethodRequests"
	public return_type class_ref 345986 // InputMethodRequests
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input method request handler which supports
requests from input methods for this component. A component
that supports on-the-spot text input must override this
method to return an <code>InputMethodRequests</code> instance.
At the same time, it also has to handle input method events.

@return the input method request handler for this component,
         <code>null</code> by default
@see #addInputMethodListener
@since 1.2
"
      end

      operation 1914754 "getInputContext"
	public return_type class_ref 346114 // InputContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input context used by this component for handling
the communication with input methods when text is entered
in this component. By default, the input context used for
the parent component is returned. Components may
override this to return a private input context.

@return the input context used by this component;
         <code>null</code> if no context can be determined
@since 1.2
"
      end

      operation 1914882 "enableEvents"
	protected explicit_return_type "void"
	nparams 1
	  param in name "eventsToEnable" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the events defined by the specified event mask parameter
to be delivered to this component.
<p>
Event types are automatically enabled when a listener for
that event type is added to the component.
<p>
This method only needs to be invoked by subclasses of
<code>Component</code> which desire to have the specified event
types delivered to <code>processEvent</code> regardless of whether
or not a listener is registered.
@param      eventsToEnable   the event mask defining the event types
@see        #processEvent
@see        #disableEvents
@see        AWTEvent
@since      JDK1.1
"
      end

      operation 1915010 "disableEvents"
	protected explicit_return_type "void"
	nparams 1
	  param in name "eventsToDisable" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the events defined by the specified event mask parameter
from being delivered to this component.
@param      eventsToDisable   the event mask defining the event types
@see        #enableEvents
@since      JDK1.1
"
      end

      attribute 449794 "eventCache"
	package explicit_type "sun.awt.EventQueueItem"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 449922 "coalescingEnabled"
	private explicit_type "boolean"
	init_value " checkCoalescing()"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@see #isCoalescingEnabled
@see #checkCoalescing

"
      end

      classrelation 600450 // coalesceMap (<unidirectional association>)
	relation 600450 --->
	  a role_name "coalesceMap" init_value "
        new java.util.WeakHashMap<Class<?>, Boolean>()" class_relation const_relation private
	    comment "
Weak map of known coalesceEvent overriders.
Value indicates whether overriden.
Bootstrap classes are not included.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>, Boolean> ${name}${value};
"
	    classrelation_ref 600450 // coalesceMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 1915138 "checkCoalescing"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this class overrides coalesceEvents.
It is assumed that all classes that are loaded from the bootstrap
  do not.
The boostrap class loader is assumed to be represented by null.
We do not check that the method really overrides
  (it might be static, private or package private).
"
      end

      classrelation 600578 // coalesceEventsParams (<unidirectional association>)
	relation 600578 --->
	  a role_name "coalesceEventsParams" multiplicity "[]" init_value " {
        AWTEvent.class, AWTEvent.class
    }" class_relation const_relation private
	    comment "
Parameter types of coalesceEvents(AWTEvent,AWTEVent).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 600578 // coalesceEventsParams (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 1915266 "isCoalesceEventsOverriden"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a class or its superclasses override coalesceEvents.
Must be called with lock on coalesceMap and privileged.
@see checkCoalescing
"
      end

      operation 1915394 "isCoalescingEnabled"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether coalesceEvents may do something.
"
      end

      operation 1915522 "coalesceEvents"
	protected return_type class_ref 339202 // AWTEvent
	nparams 2
	  param inout name "existingEvent" type class_ref 339202 // AWTEvent
	  param inout name "newEvent" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Potentially coalesce an event being posted with an existing
event.  This method is called by <code>EventQueue.postEvent</code>
if an event with the same ID as the event to be posted is found in
the queue (both events must have this component as their source).
This method either returns a coalesced event which replaces
the existing event (and the new event is then discarded), or
<code>null</code> to indicate that no combining should be done
(add the second event to the end of the queue).  Either event
parameter may be modified and returned, as the other one is discarded
unless <code>null</code> is returned.
<p>
This implementation of <code>coalesceEvents</code> coalesces
two event types: mouse move (and drag) events,
and paint (and update) events.
For mouse move events the last event is always returned, causing
intermediate moves to be discarded.  For paint events, the new
event is coalesced into a complex <code>RepaintArea</code> in the peer.
The new <code>AWTEvent</code> is always returned.

@param  existingEvent  the event already on the <code>EventQueue</code>
@param  newEvent       the event being posted to the
         <code>EventQueue</code>
@return a coalesced event, or <code>null</code> indicating that no
         coalescing was done
"
      end

      operation 1915650 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events occurring on this component. By default this
method calls the appropriate
<code>process&lt;event&nbsp;type&gt;Event</code>
method for the given class of event.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param     e the event
@see       #processComponentEvent
@see       #processFocusEvent
@see       #processKeyEvent
@see       #processMouseEvent
@see       #processMouseMotionEvent
@see       #processInputMethodEvent
@see       #processHierarchyEvent
@see       #processMouseWheelEvent
@since     JDK1.1
"
      end

      operation 1915778 "processComponentEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes component events occurring on this component by
dispatching them to any registered
<code>ComponentListener</code> objects.
<p>
This method is not called unless component events are
enabled for this component. Component events are enabled
when one of the following occurs:
<ul>
<li>A <code>ComponentListener</code> object is registered
via <code>addComponentListener</code>.
<li>Component events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the component event
@see         java.awt.event.ComponentEvent
@see         java.awt.event.ComponentListener
@see         #addComponentListener
@see         #enableEvents
@since       JDK1.1
"
      end

      operation 1915906 "processFocusEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes focus events occurring on this component by
dispatching them to any registered
<code>FocusListener</code> objects.
<p>
This method is not called unless focus events are
enabled for this component. Focus events are enabled
when one of the following occurs:
<ul>
<li>A <code>FocusListener</code> object is registered
via <code>addFocusListener</code>.
<li>Focus events are enabled via <code>enableEvents</code>.
</ul>
<p>
If focus events are enabled for a <code>Component</code>,
the current <code>KeyboardFocusManager</code> determines
whether or not a focus event should be dispatched to
registered <code>FocusListener</code> objects.  If the
events are to be dispatched, the <code>KeyboardFocusManager</code>
calls the <code>Component</code>'s <code>dispatchEvent</code>
method, which results in a call to the <code>Component</code>'s
<code>processFocusEvent</code> method.
<p>
If focus events are enabled for a <code>Component</code>, calling
the <code>Component</code>'s <code>dispatchEvent</code> method
with a <code>FocusEvent</code> as the argument will result in a
call to the <code>Component</code>'s <code>processFocusEvent</code>
method regardless of the current <code>KeyboardFocusManager</code>.

<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the focus event
@see         java.awt.event.FocusEvent
@see         java.awt.event.FocusListener
@see         java.awt.KeyboardFocusManager
@see         #addFocusListener
@see         #enableEvents
@see         #dispatchEvent
@since       JDK1.1
"
      end

      operation 1916034 "processKeyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes key events occurring on this component by
dispatching them to any registered
<code>KeyListener</code> objects.
<p>
This method is not called unless key events are
enabled for this component. Key events are enabled
when one of the following occurs:
<ul>
<li>A <code>KeyListener</code> object is registered
via <code>addKeyListener</code>.
<li>Key events are enabled via <code>enableEvents</code>.
</ul>

<p>
If key events are enabled for a <code>Component</code>,
the current <code>KeyboardFocusManager</code> determines
whether or not a key event should be dispatched to
registered <code>KeyListener</code> objects.  The
<code>DefaultKeyboardFocusManager</code> will not dispatch
key events to a <code>Component</code> that is not the focus
owner or is not showing.
<p>
As of J2SE 1.4, <code>KeyEvent</code>s are redirected to
the focus owner. Please see the
<a href=\"doc-files/FocusSpec.html\">Focus Specification</a>
for further information.
<p>
Calling a <code>Component</code>'s <code>dispatchEvent</code>
method with a <code>KeyEvent</code> as the argument will
result in a call to the <code>Component</code>'s
<code>processKeyEvent</code> method regardless of the
current <code>KeyboardFocusManager</code> as long as the
component is showing, focused, and enabled, and key events
are enabled on it.
<p>If the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the key event
@see         java.awt.event.KeyEvent
@see         java.awt.event.KeyListener
@see         java.awt.KeyboardFocusManager
@see         java.awt.DefaultKeyboardFocusManager
@see         #processEvent
@see         #dispatchEvent
@see         #addKeyListener
@see         #enableEvents
@see         #isShowing
@since       JDK1.1
"
      end

      operation 1916162 "processMouseEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse events occurring on this component by
dispatching them to any registered
<code>MouseListener</code> objects.
<p>
This method is not called unless mouse events are
enabled for this component. Mouse events are enabled
when one of the following occurs:
<ul>
<li>A <code>MouseListener</code> object is registered
via <code>addMouseListener</code>.
<li>Mouse events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the mouse event
@see         java.awt.event.MouseEvent
@see         java.awt.event.MouseListener
@see         #addMouseListener
@see         #enableEvents
@since       JDK1.1
"
      end

      operation 1916290 "processMouseMotionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse motion events occurring on this component by
dispatching them to any registered
<code>MouseMotionListener</code> objects.
<p>
This method is not called unless mouse motion events are
enabled for this component. Mouse motion events are enabled
when one of the following occurs:
<ul>
<li>A <code>MouseMotionListener</code> object is registered
via <code>addMouseMotionListener</code>.
<li>Mouse motion events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the mouse motion event
@see         java.awt.event.MouseEvent
@see         java.awt.event.MouseMotionListener
@see         #addMouseMotionListener
@see         #enableEvents
@since       JDK1.1
"
      end

      operation 1916418 "processMouseWheelEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes mouse wheel events occurring on this component by
dispatching them to any registered
<code>MouseWheelListener</code> objects.
<p>
This method is not called unless mouse wheel events are
enabled for this component. Mouse wheel events are enabled
when one of the following occurs:
<ul>
<li>A <code>MouseWheelListener</code> object is registered
via <code>addMouseWheelListener</code>.
<li>Mouse wheel events are enabled via <code>enableEvents</code>.
</ul>
<p>
For information on how mouse wheel events are dispatched, see
the class description for {@link MouseWheelEvent}.
<p>
Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the mouse wheel event
@see         java.awt.event.MouseWheelEvent
@see         java.awt.event.MouseWheelListener
@see         #addMouseWheelListener
@see         #enableEvents
@since       1.4
"
      end

      operation 1916546 "postsOldMouseEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1916674 "processInputMethodEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346754 // InputMethodEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes input method events occurring on this component by
dispatching them to any registered
<code>InputMethodListener</code> objects.
<p>
This method is not called unless input method events
are enabled for this component. Input method events are enabled
when one of the following occurs:
<ul>
<li>An <code>InputMethodListener</code> object is registered
via <code>addInputMethodListener</code>.
<li>Input method events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the input method event
@see         java.awt.event.InputMethodEvent
@see         java.awt.event.InputMethodListener
@see         #addInputMethodListener
@see         #enableEvents
@since       1.2
"
      end

      operation 1916802 "processHierarchyEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes hierarchy events occurring on this component by
dispatching them to any registered
<code>HierarchyListener</code> objects.
<p>
This method is not called unless hierarchy events
are enabled for this component. Hierarchy events are enabled
when one of the following occurs:
<ul>
<li>An <code>HierarchyListener</code> object is registered
via <code>addHierarchyListener</code>.
<li>Hierarchy events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the hierarchy event
@see         java.awt.event.HierarchyEvent
@see         java.awt.event.HierarchyListener
@see         #addHierarchyListener
@see         #enableEvents
@since       1.3
"
      end

      operation 1916930 "processHierarchyBoundsEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes hierarchy bounds events occurring on this component by
dispatching them to any registered
<code>HierarchyBoundsListener</code> objects.
<p>
This method is not called unless hierarchy bounds events
are enabled for this component. Hierarchy bounds events are enabled
when one of the following occurs:
<ul>
<li>An <code>HierarchyBoundsListener</code> object is registered
via <code>addHierarchyBoundsListener</code>.
<li>Hierarchy bounds events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the hierarchy event
@see         java.awt.event.HierarchyEvent
@see         java.awt.event.HierarchyBoundsListener
@see         #addHierarchyBoundsListener
@see         #enableEvents
@since       1.3
"
      end

      operation 1917058 "handleEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "evt" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1
replaced by processEvent(AWTEvent).
"
      end

      operation 1917186 "mouseDown"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseEvent(MouseEvent).
"
      end

      operation 1917314 "mouseDrag"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseMotionEvent(MouseEvent).
"
      end

      operation 1917442 "mouseUp"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseEvent(MouseEvent).
"
      end

      operation 1917570 "mouseMove"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseMotionEvent(MouseEvent).
"
      end

      operation 1917698 "mouseEnter"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseEvent(MouseEvent).
"
      end

      operation 1917826 "mouseExit"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processMouseEvent(MouseEvent).
"
      end

      operation 1917954 "keyDown"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processKeyEvent(KeyEvent).
"
      end

      operation 1918082 "keyUp"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "evt" type class_ref 340610 // Event
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processKeyEvent(KeyEvent).
"
      end

      operation 1918210 "action"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "evt" type class_ref 340610 // Event
	  param inout name "what" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
should register this component as ActionListener on component
which fires action events.
"
      end

      operation 1918338 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this <code>Component</code> displayable by connecting it to a
native screen resource.
This method is called internally by the toolkit and should
not be called directly by programs.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.

@see       #isDisplayable
@see       #removeNotify
@see #invalidate
@since JDK1.0
"
      end

      operation 1918466 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this <code>Component</code> undisplayable by destroying it native
screen resource.
<p>
This method is called by the toolkit internally and should
not be called directly by programs. Code overriding
this method should call <code>super.removeNotify</code> as
the first line of the overriding method.

@see       #isDisplayable
@see       #addNotify
@since JDK1.0
"
      end

      operation 1918594 "gotFocus"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "evt" type class_ref 340610 // Event
	  param inout name "what" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processFocusEvent(FocusEvent).
"
      end

      operation 1918722 "lostFocus"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "evt" type class_ref 340610 // Event
	  param inout name "what" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by processFocusEvent(FocusEvent).
"
      end

      operation 1918850 "isFocusTraversable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns whether this <code>Component</code> can become the focus
owner.

@return <code>true</code> if this <code>Component</code> is
focusable; <code>false</code> otherwise
@see #setFocusable
@since JDK1.1
@deprecated As of 1.4, replaced by <code>isFocusable()</code>.
"
      end

      operation 1918978 "isFocusable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Component can be focused.

@return <code>true</code> if this Component is focusable;
        <code>false</code> otherwise.
@see #setFocusable
@since 1.4
"
      end

      operation 1919106 "setFocusable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focusable state of this Component to the specified value. This
value overrides the Component's default focusability.

@param focusable indicates whether this Component is focusable
@see #isFocusable
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1919234 "isFocusTraversableOverridden"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1919362 "setFocusTraversalKeys"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "keystrokes" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focus traversal keys for a given traversal operation for this
Component.
<p>
The default values for a Component's focus traversal keys are
implementation-dependent. Sun recommends that all implementations for a
particular native platform use the same default values. The
recommendations for Windows and Unix are listed below. These
recommendations are used in the Sun AWT implementations.

<table border=1 summary=\"Recommended default values for a Component's focus traversal keys\">
<tr>
   <th>Identifier</th>
   <th>Meaning</th>
   <th>Default</th>
</tr>
<tr>
   <td>KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS</td>
   <td>Normal forward keyboard traversal</td>
   <td>TAB on KEY_PRESSED, CTRL-TAB on KEY_PRESSED</td>
</tr>
<tr>
   <td>KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS</td>
   <td>Normal reverse keyboard traversal</td>
   <td>SHIFT-TAB on KEY_PRESSED, CTRL-SHIFT-TAB on KEY_PRESSED</td>
</tr>
<tr>
   <td>KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS</td>
   <td>Go up one focus traversal cycle</td>
   <td>none</td>
</tr>
</table>

To disable a traversal key, use an empty Set; Collections.EMPTY_SET is
recommended.
<p>
Using the AWTKeyStroke API, client code can specify on which of two
specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal
operation will occur. Regardless of which KeyEvent is specified,
however, all KeyEvents related to the focus traversal key, including the
associated KEY_TYPED event, will be consumed, and will not be dispatched
to any Component. It is a runtime error to specify a KEY_TYPED event as
mapping to a focus traversal operation, or to map the same event to
multiple default focus traversal operations.
<p>
If a value of null is specified for the Set, this Component inherits the
Set from its parent. If all ancestors of this Component have null
specified for the Set, then the current KeyboardFocusManager's default
Set is used.
<p>
This method may throw a {@code ClassCastException} if any {@code Object}
in {@code keystrokes} is not an {@code AWTKeyStroke}.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS
@param keystrokes the Set of AWTKeyStroke for the specified operation
@see #getFocusTraversalKeys
@see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or if keystrokes
        contains null, or if any keystroke represents a KEY_TYPED event,
        or if any keystroke already maps to another focus traversal
        operation for this Component
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1919490 "getFocusTraversalKeys"
	public return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Set of focus traversal keys for a given traversal operation
for this Component. (See
<code>setFocusTraversalKeys</code> for a full description of each key.)
<p>
If a Set of traversal keys has not been explicitly defined for this
Component, then this Component's parent's Set is returned. If no Set
has been explicitly defined for any of this Component's ancestors, then
the current KeyboardFocusManager's default Set is returned.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS
@return the Set of AWTKeyStrokes for the specified operation. The Set
        will be unmodifiable, and may be empty. null will never be
        returned.
@see #setFocusTraversalKeys
@see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS
@since 1.4
"
      end

      operation 1919618 "setFocusTraversalKeys_NoIDCheck"
	package explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "keystrokes" type class_ref 192258 // Set
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We define these methods so that Container does not need to repeat this
 code. Container cannot call super.<method> because Container allows
 DOWN_CYCLE_TRAVERSAL_KEY while Component does not. The Component method
 would erroneously generate an IllegalArgumentException for
 DOWN_CYCLE_TRAVERSAL_KEY."
      end

      operation 1919746 "getFocusTraversalKeys_NoIDCheck"
	package return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1919874 "areFocusTraversalKeysSet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the Set of focus traversal keys for the given focus
traversal operation has been explicitly defined for this Component. If
this method returns <code>false</code>, this Component is inheriting the
Set from an ancestor, or from the current KeyboardFocusManager.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS
@return <code>true</code> if the the Set of focus traversal keys for the
        given focus traversal operation has been explicitly defined for
        this Component; <code>false</code> otherwise.
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, or
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS
@since 1.4
"
      end

      operation 1920002 "setFocusTraversalKeysEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusTraversalKeysEnabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether focus traversal keys are enabled for this Component.
Components for which focus traversal keys are disabled receive key
events for focus traversal keys. Components for which focus traversal
keys are enabled do not see these events; instead, the events are
automatically converted to traversal operations.

@param focusTraversalKeysEnabled whether focus traversal keys are
       enabled for this Component
@see #getFocusTraversalKeysEnabled
@see #setFocusTraversalKeys
@see #getFocusTraversalKeys
@since 1.4
@beaninfo
      bound: true
"
      end

      operation 1920130 "getFocusTraversalKeysEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether focus traversal keys are enabled for this Component.
Components for which focus traversal keys are disabled receive key
events for focus traversal keys. Components for which focus traversal
keys are enabled do not see these events; instead, the events are
automatically converted to traversal operations.

@return whether focus traversal keys are enabled for this Component
@see #setFocusTraversalKeysEnabled
@see #setFocusTraversalKeys
@see #getFocusTraversalKeys
@since 1.4
"
      end

      operation 1920258 "requestFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this Component get the input focus, and that this
Component's top-level ancestor become the focused Window. This
component must be displayable, focusable, visible and all of
its ancestors (with the exception of the top-level Window) must
be visible for the request to be granted. Every effort will be
made to honor the request; however, in some cases it may be
impossible to do so. Developers must never assume that this
Component is the focus owner until this Component receives a
FOCUS_GAINED event. If this request is denied because this
Component's top-level Window cannot become the focused Window,
the request will be remembered and will be granted when the
Window is later focused by the user.
<p>
This method cannot be used to set the focus owner to no Component at
all. Use <code>KeyboardFocusManager.clearGlobalFocusOwner()</code>
instead.
<p>
Because the focus behavior of this method is platform-dependent,
developers are strongly encouraged to use
<code>requestFocusInWindow</code> when possible.

<p>Note: Not all focus transfers result from invoking this method. As
such, a component may receive focus without this or any of the other
{@code requestFocus} methods of {@code Component} being invoked.

@see #requestFocusInWindow
@see java.awt.event.FocusEvent
@see #addFocusListener
@see #isFocusable
@see #isDisplayable
@see KeyboardFocusManager#clearGlobalFocusOwner
@since JDK1.0
"
      end

      operation 1920386 "requestFocus"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1920514 "requestFocus"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "temporary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> get the input focus,
and that this <code>Component</code>'s top-level ancestor
become the focused <code>Window</code>. This component must be
displayable, focusable, visible and all of its ancestors (with
the exception of the top-level Window) must be visible for the
request to be granted. Every effort will be made to honor the
request; however, in some cases it may be impossible to do
so. Developers must never assume that this component is the
focus owner until this component receives a FOCUS_GAINED
event. If this request is denied because this component's
top-level window cannot become the focused window, the request
will be remembered and will be granted when the window is later
focused by the user.
<p>
This method returns a boolean value. If <code>false</code> is returned,
the request is <b>guaranteed to fail</b>. If <code>true</code> is
returned, the request will succeed <b>unless</b> it is vetoed, or an
extraordinary event, such as disposal of the component's peer, occurs
before the request can be granted by the native windowing system. Again,
while a return value of <code>true</code> indicates that the request is
likely to succeed, developers must never assume that this component is
the focus owner until this component receives a FOCUS_GAINED event.
<p>
This method cannot be used to set the focus owner to no component at
all. Use <code>KeyboardFocusManager.clearGlobalFocusOwner</code>
instead.
<p>
Because the focus behavior of this method is platform-dependent,
developers are strongly encouraged to use
<code>requestFocusInWindow</code> when possible.
<p>
Every effort will be made to ensure that <code>FocusEvent</code>s
generated as a
result of this request will have the specified temporary value. However,
because specifying an arbitrary temporary state may not be implementable
on all native windowing systems, correct behavior for this method can be
guaranteed only for lightweight <code>Component</code>s.
This method is not intended
for general use, but exists instead as a hook for lightweight component
libraries, such as Swing.

<p>Note: Not all focus transfers result from invoking this method. As
such, a component may receive focus without this or any of the other
{@code requestFocus} methods of {@code Component} being invoked.

@param temporary true if the focus change is temporary,
       such as when the window loses the focus; for
       more information on temporary focus changes see the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see java.awt.event.FocusEvent
@see #addFocusListener
@see #isFocusable
@see #isDisplayable
@see KeyboardFocusManager#clearGlobalFocusOwner
@since 1.4
"
      end

      operation 1920642 "requestFocus"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1920770 "requestFocusInWindow"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this Component get the input focus, if this
Component's top-level ancestor is already the focused
Window. This component must be displayable, focusable, visible
and all of its ancestors (with the exception of the top-level
Window) must be visible for the request to be granted. Every
effort will be made to honor the request; however, in some
cases it may be impossible to do so. Developers must never
assume that this Component is the focus owner until this
Component receives a FOCUS_GAINED event.
<p>
This method returns a boolean value. If <code>false</code> is returned,
the request is <b>guaranteed to fail</b>. If <code>true</code> is
returned, the request will succeed <b>unless</b> it is vetoed, or an
extraordinary event, such as disposal of the Component's peer, occurs
before the request can be granted by the native windowing system. Again,
while a return value of <code>true</code> indicates that the request is
likely to succeed, developers must never assume that this Component is
the focus owner until this Component receives a FOCUS_GAINED event.
<p>
This method cannot be used to set the focus owner to no Component at
all. Use <code>KeyboardFocusManager.clearGlobalFocusOwner()</code>
instead.
<p>
The focus behavior of this method can be implemented uniformly across
platforms, and thus developers are strongly encouraged to use this
method over <code>requestFocus</code> when possible. Code which relies
on <code>requestFocus</code> may exhibit different focus behavior on
different platforms.

<p>Note: Not all focus transfers result from invoking this method. As
such, a component may receive focus without this or any of the other
{@code requestFocus} methods of {@code Component} being invoked.

@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see #requestFocus
@see java.awt.event.FocusEvent
@see #addFocusListener
@see #isFocusable
@see #isDisplayable
@see KeyboardFocusManager#clearGlobalFocusOwner
@since 1.4
"
      end

      operation 1920898 "requestFocusInWindow"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1921026 "requestFocusInWindow"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "temporary" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that this <code>Component</code> get the input focus,
if this <code>Component</code>'s top-level ancestor is already
the focused <code>Window</code>.  This component must be
displayable, focusable, visible and all of its ancestors (with
the exception of the top-level Window) must be visible for the
request to be granted. Every effort will be made to honor the
request; however, in some cases it may be impossible to do
so. Developers must never assume that this component is the
focus owner until this component receives a FOCUS_GAINED event.
<p>
This method returns a boolean value. If <code>false</code> is returned,
the request is <b>guaranteed to fail</b>. If <code>true</code> is
returned, the request will succeed <b>unless</b> it is vetoed, or an
extraordinary event, such as disposal of the component's peer, occurs
before the request can be granted by the native windowing system. Again,
while a return value of <code>true</code> indicates that the request is
likely to succeed, developers must never assume that this component is
the focus owner until this component receives a FOCUS_GAINED event.
<p>
This method cannot be used to set the focus owner to no component at
all. Use <code>KeyboardFocusManager.clearGlobalFocusOwner</code>
instead.
<p>
The focus behavior of this method can be implemented uniformly across
platforms, and thus developers are strongly encouraged to use this
method over <code>requestFocus</code> when possible. Code which relies
on <code>requestFocus</code> may exhibit different focus behavior on
different platforms.
<p>
Every effort will be made to ensure that <code>FocusEvent</code>s
generated as a
result of this request will have the specified temporary value. However,
because specifying an arbitrary temporary state may not be implementable
on all native windowing systems, correct behavior for this method can be
guaranteed only for lightweight components. This method is not intended
for general use, but exists instead as a hook for lightweight component
libraries, such as Swing.

<p>Note: Not all focus transfers result from invoking this method. As
such, a component may receive focus without this or any of the other
{@code requestFocus} methods of {@code Component} being invoked.

@param temporary true if the focus change is temporary,
       such as when the window loses the focus; for
       more information on temporary focus changes see the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
@return <code>false</code> if the focus change request is guaranteed to
        fail; <code>true</code> if it is likely to succeed
@see #requestFocus
@see java.awt.event.FocusEvent
@see #addFocusListener
@see #isFocusable
@see #isDisplayable
@see KeyboardFocusManager#clearGlobalFocusOwner
@since 1.4
"
      end

      operation 1921154 "requestFocusInWindow"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1921282 "requestFocusHelper"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1921410 "requestFocusHelper"
	package explicit_return_type "boolean"
	nparams 3
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1921538 "isRequestFocusAccepted"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 450050 "requestFocusController"
	class_attribute private explicit_type "RequestFocusController"
	init_value " new DummyRequestFocusController()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 347010 "DummyRequestFocusController"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 1921666 "acceptRequestFocus"
	  public explicit_return_type "boolean"
	  nparams 5
	    param inout name "from" type class_ref 338818 // Component
	    param inout name "to" type class_ref 338818 // Component
	    param inout name "temporary" explicit_type "boolean"
	    param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	    param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1921794 "setRequestFocusController"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "requestController" explicit_type "RequestFocusController"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1921922 "getFocusCycleRootAncestor"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Container which is the focus cycle root of this Component's
focus traversal cycle. Each focus traversal cycle has only a single
focus cycle root and each Component which is not a Container belongs to
only a single focus traversal cycle. Containers which are focus cycle
roots belong to two cycles: one rooted at the Container itself, and one
rooted at the Container's nearest focus-cycle-root ancestor. For such
Containers, this method will return the Container's nearest focus-cycle-
root ancestor.

@return this Component's nearest focus-cycle-root ancestor
@see Container#isFocusCycleRoot()
@since 1.4
"
      end

      operation 1922050 "isFocusCycleRoot"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "container" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified Container is the focus cycle root of this
Component's focus traversal cycle. Each focus traversal cycle has only
a single focus cycle root and each Component which is not a Container
belongs to only a single focus traversal cycle.

@param container the Container to be tested
@return <code>true</code> if the specified Container is a focus-cycle-
        root of this Component; <code>false</code> otherwise
@see Container#isFocusCycleRoot()
@since 1.4
"
      end

      operation 1922178 "getTraversalRoot"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1922306 "transferFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transfers the focus to the next component, as though this Component were
the focus owner.
@see       #requestFocus()
@since     JDK1.1
"
      end

      operation 1922434 "nextFocus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by transferFocus().
"
      end

      operation 1922562 "transferFocus"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "clearOnFailure" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1922690 "getNextFocusCandidate"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1922818 "transferFocusBackward"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transfers the focus to the previous component, as though this Component
were the focus owner.
@see       #requestFocus()
@since     1.4
"
      end

      operation 1922946 "transferFocusBackward"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "clearOnFailure" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1923074 "transferFocusUpCycle"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transfers the focus up one focus traversal cycle. Typically, the focus
owner is set to this Component's focus cycle root, and the current focus
cycle root is set to the new focus owner's focus cycle root. If,
however, this Component's focus cycle root is a Window, then the focus
owner is set to the focus cycle root's default Component to focus, and
the current focus cycle root is unchanged.

@see       #requestFocus()
@see       Container#isFocusCycleRoot()
@see       Container#setFocusCycleRoot(boolean)
@since     1.4
"
      end

      operation 1923202 "hasFocus"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this <code>Component</code> is the
focus owner.  This method is obsolete, and has been replaced by
<code>isFocusOwner()</code>.

@return <code>true</code> if this <code>Component</code> is the
        focus owner; <code>false</code> otherwise
@since 1.2
"
      end

      operation 1923330 "isFocusOwner"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this <code>Component</code> is the
   focus owner.

@return <code>true</code> if this <code>Component</code> is the
    focus owner; <code>false</code> otherwise
@since 1.4
"
      end

      attribute 450178 "autoFocusTransferOnDisposal"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to disallow auto-focus-transfer on disposal of the focus owner
in the process of disposing its parent container.

"
      end

      operation 1923458 "setAutoFocusTransferOnDisposal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1923586 "isAutoFocusTransferOnDisposal"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1923714 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "popup" type class_ref 341378 // PopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified popup menu to the component.
@param     popup the popup menu to be added to the component.
@see       #remove(MenuComponent)
@exception NullPointerException if {@code popup} is {@code null}
@since     JDK1.1
"
      end

      operation 1923842 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "popup" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Removes the specified popup menu from the component.
@param     popup the popup menu to be removed
@see       #add(PopupMenu)
@since     JDK1.1
"
      end

      operation 1923970 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this component. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return  a string representation of this component's state
@since     JDK1.0
"
      end

      operation 1924098 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this component and its values.
@return    a string representation of this component
@since     JDK1.0
"
      end

      operation 1924226 "list"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a listing of this component to the standard system output
stream <code>System.out</code>.
@see       java.lang.System#out
@since     JDK1.0
"
      end

      operation 1924354 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a listing of this component to the specified output
stream.
@param    out   a print stream
@throws   NullPointerException if {@code out} is {@code null}
@since    JDK1.0
"
      end

      operation 1924482 "list"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 128258 // PrintStream
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints out a list, starting at the specified indentation, to the
specified print stream.
@param     out      a print stream
@param     indent   number of spaces to indent
@see       java.io.PrintStream#println(java.lang.Object)
@throws    NullPointerException if {@code out} is {@code null}
@since     JDK1.0
"
      end

      operation 1924610 "list"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a listing to the specified print writer.
@param  out  the print writer to print to
@throws NullPointerException if {@code out} is {@code null}
@since JDK1.1
"
      end

      operation 1924738 "list"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 195330 // PrintWriter
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints out a list, starting at the specified indentation, to
the specified print writer.
@param out the print writer to print to
@param indent the number of spaces to indent
@throws NullPointerException if {@code out} is {@code null}
@see       java.io.PrintStream#println(java.lang.Object)
@since JDK1.1
"
      end

      operation 1924866 "getNativeContainer"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the native container somewhere higher up in the component
tree that contains this component.
"
      end

      operation 1924994 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list. The listener is
registered for all bound properties of this class, including the
following:
<ul>
   <li>this Component's font (\"font\")</li>
   <li>this Component's background color (\"background\")</li>
   <li>this Component's foreground color (\"foreground\")</li>
   <li>this Component's focusability (\"focusable\")</li>
   <li>this Component's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Component's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Component's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Component's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
   <li>this Component's preferred size (\"preferredSize\")</li>
   <li>this Component's minimum size (\"minimumSize\")</li>
   <li>this Component's maximum size (\"maximumSize\")</li>
   <li>this Component's name (\"name\")</li>
</ul>
Note that if this <code>Component</code> is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If <code>listener</code> is <code>null</code>,
no exception is thrown and no action is performed.

@param    listener  the property change listener to be added

@see #removePropertyChangeListener
@see #getPropertyChangeListeners
@see #addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
"
      end

      operation 1925122 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a PropertyChangeListener from the listener list. This method
should be used to remove PropertyChangeListeners that were registered
for all bound properties of this class.
<p>
If listener is null, no exception is thrown and no action is performed.

@param listener the PropertyChangeListener to be removed

@see #addPropertyChangeListener
@see #getPropertyChangeListeners
@see #removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
"
      end

      operation 1925250 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the property change listeners
registered on this component.

@return all of this component's <code>PropertyChangeListener</code>s
        or an empty array if no property change
        listeners are currently registered

@see      #addPropertyChangeListener
@see      #removePropertyChangeListener
@see      #getPropertyChangeListeners(java.lang.String)
@see      java.beans.PropertyChangeSupport#getPropertyChangeListeners
@since    1.4
"
      end

      operation 1925378 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list for a specific
property. The specified property may be user-defined, or one of the
following:
<ul>
   <li>this Component's font (\"font\")</li>
   <li>this Component's background color (\"background\")</li>
   <li>this Component's foreground color (\"foreground\")</li>
   <li>this Component's focusability (\"focusable\")</li>
   <li>this Component's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Component's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Component's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Component's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
</ul>
Note that if this <code>Component</code> is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If <code>propertyName</code> or <code>listener</code> is <code>null</code>,
no exception is thrown and no action is taken.

@param propertyName one of the property names listed above
@param listener the property change listener to be added

@see #removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
@see #getPropertyChangeListeners(java.lang.String)
@see #addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
"
      end

      operation 1925506 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from the listener
list for a specific property. This method should be used to remove
<code>PropertyChangeListener</code>s
that were registered for a specific bound property.
<p>
If <code>propertyName</code> or <code>listener</code> is <code>null</code>,
no exception is thrown and no action is taken.

@param propertyName a valid property name
@param listener the PropertyChangeListener to be removed

@see #addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
@see #getPropertyChangeListeners(java.lang.String)
@see #removePropertyChangeListener(java.beans.PropertyChangeListener)
"
      end

      operation 1925634 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners which have been associated
with the named property.

@return all of the <code>PropertyChangeListener</code>s associated with
        the named property; if no such listeners have been added or
        if <code>propertyName</code> is <code>null</code>, an empty
        array is returned

@see #addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
@see #removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
@see #getPropertyChangeListeners
@since 1.4
"
      end

      operation 1925762 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes for Object properties.
This method can be called when a bound property has changed and it will
send the appropriate PropertyChangeEvent to any registered
PropertyChangeListeners.

@param propertyName the property whose value has changed
@param oldValue the property's previous value
@param newValue the property's new value
"
      end

      operation 1925890 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes for boolean properties.
This method can be called when a bound property has changed and it will
send the appropriate PropertyChangeEvent to any registered
PropertyChangeListeners.

@param propertyName the property whose value has changed
@param oldValue the property's previous value
@param newValue the property's new value
@since 1.4
"
      end

      operation 1926018 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for reporting bound property changes for integer properties.
This method can be called when a bound property has changed and it will
send the appropriate PropertyChangeEvent to any registered
PropertyChangeListeners.

@param propertyName the property whose value has changed
@param oldValue the property's previous value
@param newValue the property's new value
@since 1.4
"
      end

      operation 1926146 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "byte"
	  param in name "newValue" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a byte)
@param newValue the new value of the property (as a byte)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      operation 1926274 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "char"
	  param in name "newValue" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a char)
@param newValue the new value of the property (as a char)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      operation 1926402 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "short"
	  param in name "newValue" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a short)
@param newValue the old value of the property (as a short)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      operation 1926530 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "long"
	  param in name "newValue" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a long)
@param newValue the new value of the property (as a long)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      operation 1926658 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "float"
	  param in name "newValue" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a float)
@param newValue the new value of the property (as a float)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      operation 1926786 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "double"
	  param in name "newValue" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a bound property change.

@param propertyName the programmatic name of the property
         that was changed
@param oldValue the old value of the property (as a double)
@param newValue the new value of the property (as a double)
@see #firePropertyChange(java.lang.String, java.lang.Object,
         java.lang.Object)
@since 1.5
"
      end

      attribute 450306 "componentSerializedDataVersion"
	private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.

Component Serialized Data Version.

@serial

"
      end

      operation 1926914 "doSwingSerialization"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This hack is for Swing serialization. It will invoke
the Swing package private method <code>compWriteObjectNotify</code>.
"
      end

      operation 1927042 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a variety of serializable listeners as optional data.
The non-serializable listeners are detected and
no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of
  0 or more pairs; the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code> indicates
  the type of object and is one of the following (as of 1.4):
  <code>componentListenerK</code> indicating an
    <code>ComponentListener</code> object;
  <code>focusListenerK</code> indicating an
    <code>FocusListener</code> object;
  <code>keyListenerK</code> indicating an
    <code>KeyListener</code> object;
  <code>mouseListenerK</code> indicating an
    <code>MouseListener</code> object;
  <code>mouseMotionListenerK</code> indicating an
    <code>MouseMotionListener</code> object;
  <code>inputMethodListenerK</code> indicating an
    <code>InputMethodListener</code> object;
  <code>hierarchyListenerK</code> indicating an
    <code>HierarchyListener</code> object;
  <code>hierarchyBoundsListenerK</code> indicating an
    <code>HierarchyBoundsListener</code> object;
  <code>mouseWheelListenerK</code> indicating an
    <code>MouseWheelListener</code> object
@serialData an optional <code>ComponentOrientation</code>
   (after <code>inputMethodListener</code>, as of 1.2)

@see AWTEventMulticaster#save(java.io.ObjectOutputStream, java.lang.String, java.util.EventListener)
@see #componentListenerK
@see #focusListenerK
@see #keyListenerK
@see #mouseListenerK
@see #mouseMotionListenerK
@see #inputMethodListenerK
@see #hierarchyListenerK
@see #hierarchyBoundsListenerK
@see #mouseWheelListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 1927170 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it isn't
<code>null</code> adds a listener to receive a variety
of events fired by the component.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@see #writeObject(ObjectOutputStream)
"
      end

      operation 1927298 "setComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the language-sensitive orientation that is to be used to order
the elements or text within this component.  Language-sensitive
<code>LayoutManager</code> and <code>Component</code>
subclasses will use this property to
determine how to lay out and draw components.
<p>
At construction time, a component's orientation is set to
<code>ComponentOrientation.UNKNOWN</code>,
indicating that it has not been specified
explicitly.  The UNKNOWN orientation behaves the same as
<code>ComponentOrientation.LEFT_TO_RIGHT</code>.
<p>
To set the orientation of a single component, use this method.
To set the orientation of an entire component
hierarchy, use
{@link #applyComponentOrientation applyComponentOrientation}.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.


@see ComponentOrientation
@see #invalidate

@author Laura Werner, IBM
@beaninfo
      bound: true
"
      end

      operation 1927426 "getComponentOrientation"
	public return_type class_ref 341762 // ComponentOrientation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the language-sensitive orientation that is to be used to order
the elements or text within this component.  <code>LayoutManager</code>
and <code>Component</code>
subclasses that wish to respect orientation should call this method to
get the component's orientation before performing layout or drawing.

@see ComponentOrientation

@author Laura Werner, IBM
"
      end

      operation 1927554 "applyComponentOrientation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "orientation" type class_ref 341762 // ComponentOrientation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>ComponentOrientation</code> property of this component
and all components contained within it.
<p>
This method changes layout-related information, and therefore,
invalidates the component hierarchy.


@param orientation the new component orientation of this component and
       the components contained within it.
@exception NullPointerException if <code>orientation</code> is null.
@see #setComponentOrientation
@see #getComponentOrientation
@see #invalidate
@since 1.4
"
      end

      operation 1927682 "canBeFocusOwner"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1927810 "canBeFocusOwnerRecursively"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that this component meets the prerequesites to be focus owner:
- it is enabled, visible, focusable
- it's parents are all enabled and showing
- top-level window is focusable
- if focus cycle root has DefaultFocusTraversalPolicy then it also checks that this policy accepts
this component as focus owner
@since 1.5
"
      end

      operation 1927938 "relocateComponent"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fix the location of the HW component in a LW container hierarchy.
"
      end

      operation 1928066 "getContainingWindow"
	package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Window</code> ancestor of the component.
@return Window ancestor of the component or component by itself if it is Window;
        null, if component is not a part of window hierarchy
"
      end

      operation 1928194 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      classrelation 600834 // accessibleContext (<unidirectional association>)
	relation 600834 --->
	  a role_name "accessibleContext" init_value " null" protected
	    comment "
--- Accessibility Support ---

 Component will contain all of the methods in interface Accessible,
 though it won't actually implement the interface - that will be up
 to the individual objects which extend Component.


The {@code AccessibleContext} associated with this {@code Component}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 600834 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 1928322 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>AccessibleContext</code> associated
with this <code>Component</code>.
The method implemented by this base
class returns null.  Classes that extend <code>Component</code>
should implement this method to return the
<code>AccessibleContext</code> associated with the subclass.


@return the <code>AccessibleContext</code> of this
   <code>Component</code>
@since 1.3
"
      end

      class 347650 "AccessibleAWTComponent"
	abstract visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 604546 // <generalisation>
	  relation 604546 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 604546 // <generalisation>
	    b parent class_ref 347522 // AccessibleContext
	end

	classrelation 604674 // <realization>
	  relation 604674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 604674 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 604802 // <realization>
	  relation 604802 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 604802 // <realization>
	    b parent class_ref 348546 // AccessibleComponent
	end

	attribute 450562 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 642321655757800191L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 1934978 "AccessibleAWTComponent"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Though the class is abstract, this should be called by
all sub-classes.
"
	end

	attribute 450690 "propertyListenersCount"
	  volatile private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Number of PropertyChangeListener objects registered. It's used
to add/remove ComponentListener and FocusListener to track
target Component's state.

"
	end

	classrelation 604930 // accessibleAWTComponentHandler (<unidirectional association>)
	  relation 604930 --->
	    a role_name "accessibleAWTComponentHandler" init_value " null" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 604930 // accessibleAWTComponentHandler (<unidirectional association>)
	    b parent class_ref 341890 // ComponentListener
	end

	classrelation 605058 // accessibleAWTFocusHandler (<unidirectional association>)
	  relation 605058 --->
	    a role_name "accessibleAWTFocusHandler" init_value " null" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 605058 // accessibleAWTFocusHandler (<unidirectional association>)
	    b parent class_ref 342018 // FocusListener
	end

	class 349442 "AccessibleAWTComponentHandler"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 605314 // <realization>
	    relation 605314 -_-|>
	      a public
		java "${type}"
		classrelation_ref 605314 // <realization>
	      b parent class_ref 341890 // ComponentListener
	  end

	  operation 1935618 "componentHidden"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 346242 // ComponentEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1935746 "componentShown"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 346242 // ComponentEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1935874 "componentMoved"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 346242 // ComponentEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1936002 "componentResized"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "e" type class_ref 346242 // ComponentEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 349570 "AccessibleAWTFocusHandler"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 605570 // <realization>
	    relation 605570 -_-|>
	      a public
		java "${type}"
		classrelation_ref 605570 // <realization>
	      b parent class_ref 342018 // FocusListener
	  end

	  operation 1936386 "focusGained"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "event" type class_ref 346370 // FocusEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 1936514 "focusLost"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "event" type class_ref 346370 // FocusEvent
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 1936642 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " inner class AccessibleAWTFocusHandler

Adds a <code>PropertyChangeListener</code> to the listener list.

@param listener  the property change listener to be added
"
	end

	operation 1936770 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove a PropertyChangeListener from the listener list.
This removes a PropertyChangeListener that was registered
for all properties.

@param listener  The PropertyChangeListener to be removed
"
	end

	operation 1936898 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods


Gets the accessible name of this object.  This should almost never
return <code>java.awt.Component.getName()</code>,
as that generally isn't a localized name,
and doesn't have meaning for the user.  If the
object is fundamentally a text object (e.g. a menu item), the
accessible name should be the text of the object (e.g. \"save\").
If the object has a tooltip, the tooltip text may also be an
appropriate String to return.

@return the localized name of the object -- can be
        <code>null</code> if this
        object does not have a name
@see javax.accessibility.AccessibleContext#setAccessibleName
"
	end

	operation 1937026 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessible description of this object.  This should be
a concise, localized description of what this object is - what
is its meaning to the user.  If the object has a tooltip, the
tooltip text may be an appropriate string to return, assuming
it contains a concise description of the object (instead of just
the name of the object - e.g. a \"Save\" icon on a toolbar that
had \"save\" as the tooltip text shouldn't return the tooltip
text as the description, but something like \"Saves the current
text document\" instead).

@return the localized description of the object -- can be
       <code>null</code> if this object does not have a description
@see javax.accessibility.AccessibleContext#setAccessibleDescription
"
	end

	operation 1937154 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of <code>AccessibleRole</code>
     describing the role of the object
@see javax.accessibility.AccessibleRole
"
	end

	operation 1937282 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state of this object.

@return an instance of <code>AccessibleStateSet</code>
      containing the current state set of the object
@see javax.accessibility.AccessibleState
"
	end

	operation 1937410 "getAccessibleParent"
	  public return_type class_ref 347778 // Accessible
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Accessible</code> parent of this object.
If the parent of this object implements <code>Accessible</code>,
this method should simply return <code>getParent</code>.

@return the <code>Accessible</code> parent of this
     object -- can be <code>null</code> if this
     object does not have an <code>Accessible</code> parent
"
	end

	operation 1937538 "getAccessibleIndexInParent"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the index of this object in its accessible parent.

@return the index of this object in its parent; or -1 if this
   object does not have an accessible parent
@see #getAccessibleParent
"
	end

	operation 1937666 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement <code>Accessible</code>,
then this method should return the number of children of this object.

@return the number of accessible children in the object
"
	end

	operation 1937794 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth <code>Accessible</code> child of the object.

@param i zero-based index of child
@return the nth <code>Accessible</code> child of the object
"
	end

	operation 1937922 "getLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the locale of this object.

@return the locale of this object
"
	end

	operation 1938050 "getAccessibleComponent"
	  public return_type class_ref 348546 // AccessibleComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>AccessibleComponent</code> associated
with this object if one exists.
Otherwise return <code>null</code>.

@return the component
"
	end

	operation 1938178 "getBackground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleComponent methods


Gets the background color of this object.

@return the background color, if supported, of the object;
     otherwise, <code>null</code>
"
	end

	operation 1938306 "setBackground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the background color of this object.
(For transparency, see <code>isOpaque</code>.)

@param c the new <code>Color</code> for the background
@see Component#isOpaque
"
	end

	operation 1938434 "getForeground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the foreground color of this object.

@return the foreground color, if supported, of the object;
    otherwise, <code>null</code>
"
	end

	operation 1938562 "setForeground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the foreground color of this object.

@param c the new <code>Color</code> for the foreground
"
	end

	operation 1938690 "getCursor"
	  public return_type class_ref 340866 // Cursor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Cursor</code> of this object.

@return the <code>Cursor</code>, if supported,
    of the object; otherwise, <code>null</code>
"
	end

	operation 1938818 "setCursor"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "cursor" type class_ref 340866 // Cursor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>Cursor</code> of this object.
<p>
The method may have no visual effect if the Java platform
implementation and/or the native system do not support
changing the mouse cursor shape.
@param cursor the new <code>Cursor</code> for the object
"
	end

	operation 1938946 "getFont"
	  public return_type class_ref 340354 // Font
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Font</code> of this object.

@return the <code>Font</code>, if supported,
   for the object; otherwise, <code>null</code>
"
	end

	operation 1939074 "setFont"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>Font</code> of this object.

@param f the new <code>Font</code> for the object
"
	end

	operation 1939202 "getFontMetrics"
	  public return_type class_ref 343810 // FontMetrics
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>FontMetrics</code> of this object.

@param f the <code>Font</code>
@return the <code>FontMetrics</code>, if supported,
    the object; otherwise, <code>null</code>
@see #getFont
"
	end

	operation 1939330 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is enabled.

@return true if object is enabled; otherwise, false
"
	end

	operation 1939458 "setEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the enabled state of the object.

@param b if true, enables this object; otherwise, disables it
"
	end

	operation 1939586 "isVisible"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is visible.  Note: this means that the
object intends to be visible; however, it may not in fact be
showing on the screen because one of the objects that this object
is contained by is not visible.  To determine if an object is
showing on the screen, use <code>isShowing</code>.

@return true if object is visible; otherwise, false
"
	end

	operation 1939714 "setVisible"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the visible state of the object.

@param b if true, shows this object; otherwise, hides it
"
	end

	operation 1939842 "isShowing"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is showing.  This is determined by checking
the visibility of the object and ancestors of the object.  Note:
this will return true even if the object is obscured by another
(for example, it happens to be underneath a menu that was pulled
down).

@return true if object is showing; otherwise, false
"
	end

	operation 1939970 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks whether the specified point is within this object's bounds,
where the point's x and y coordinates are defined to be relative to
the coordinate system of the object.

@param p the <code>Point</code> relative to the
    coordinate system of the object
@return true if object contains <code>Point</code>; otherwise false
"
	end

	operation 1940098 "getLocationOnScreen"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the location of the object on the screen.

@return location of object on screen -- can be
   <code>null</code> if this object is not on the screen
"
	end

	operation 1940226 "getLocation"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the location of the object relative to the parent in the form
of a point specifying the object's top-left corner in the screen's
coordinate space.

@return an instance of Point representing the top-left corner of
the object's bounds in the coordinate space of the screen;
<code>null</code> if this object or its parent are not on the screen
"
	end

	operation 1940354 "setLocation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the location of the object relative to the parent.
@param p  the coordinates of the object
"
	end

	operation 1940482 "getBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the bounds of this object in the form of a Rectangle object.
The bounds specify this object's width, height, and location
relative to its parent.

@return a rectangle indicating this component's bounds;
  <code>null</code> if this object is not on the screen
"
	end

	operation 1940610 "setBounds"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "r" type class_ref 314114 // Rectangle
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the bounds of this object in the form of a
<code>Rectangle</code> object.
The bounds specify this object's width, height, and location
relative to its parent.

@param r a rectangle indicating this component's bounds
"
	end

	operation 1940738 "getSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the size of this object in the form of a
<code>Dimension</code> object. The height field of the
<code>Dimension</code> object contains this objects's
height, and the width field of the <code>Dimension</code>
object contains this object's width.

@return a <code>Dimension</code> object that indicates
    the size of this component; <code>null</code> if
    this object is not on the screen
"
	end

	operation 1940866 "setSize"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "d" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resizes this object so that it has width and height.

@param d - the dimension specifying the new size of the object
"
	end

	operation 1940994 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>Accessible</code> child,
if one exists, contained at the local
coordinate <code>Point</code>.  Otherwise returns
<code>null</code>.

@param p the point defining the top-left corner of
     the <code>Accessible</code>, given in the
     coordinate space of the object's parent
@return the <code>Accessible</code>, if it exists,
     at the specified location; else <code>null</code>
"
	end

	operation 1941122 "isFocusTraversable"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether this object can accept focus or not.

@return true if object can accept focus; otherwise false
"
	end

	operation 1941250 "requestFocus"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Requests focus for this object.
"
	end

	operation 1941378 "addFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified focus listener to receive focus events from this
component.

@param l the focus listener
"
	end

	operation 1941506 "removeFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified focus listener so it no longer receives focus
events from this component.

@param l the focus listener
"
	end
      end

      operation 1941634 "getAccessibleIndexInParent"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " inner class AccessibleAWTComponent

Gets the index of this object in its accessible parent.
If this object does not have an accessible parent, returns
-1.

@return the index of this object in its accessible parent
"
      end

      operation 1941762 "getAccessibleStateSet"
	package return_type class_ref 348162 // AccessibleStateSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current state set of this object.

@return an instance of <code>AccessibleStateSet</code>
   containing the current state set of the object
@see AccessibleState
"
      end

      operation 1941890 "isInstanceOf"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "obj" type class_ref 129538 // Object
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the given object is instance of the given class.
@param obj Object to be checked
@param className The name of the class. Must be fully-qualified class name.
@return true, if this object is instanceof given class,
        false, otherwise, or if obj or className is null
"
      end

      operation 1942018 "areBoundsValid"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ************************** MIXING CODE *******************************

Check whether we can trust the current bounds of the component.
The return value of false indicates that the container of the
component is invalid, and therefore needs to be layed out, which would
probably mean changing the bounds of its children.
Null-layout of the container or absence of the container mean
the bounds of the component are final and can be trusted.
"
      end

      operation 1942146 "applyCompoundShape"
	package explicit_return_type "void"
	nparams 1
	  param inout name "shape" explicit_type "Region"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies the shape to the component
@param shape Shape to be applied to the component
"
      end

      operation 1942274 "getAppliedShape"
	private explicit_return_type "Region"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the shape previously set with applyCompoundShape().
If the component is LW or no shape was applied yet,
the method returns the normal shape.
"
      end

      operation 1942402 "getLocationOnWindow"
	package return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942530 "getNormalShape"
	package explicit_return_type "Region"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the full shape of the component located in window coordinates
"
      end

      operation 1942658 "getOpaqueShape"
	package explicit_return_type "Region"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"opaque shape\" of the component.

The opaque shape of a lightweight components is the actual shape that
needs to be cut off of the heavyweight components in order to mix this
lightweight component correctly with them.

The method is overriden in the java.awt.Container to handle non-opaque
containers containing opaque children.

See 6637655 for details.
"
      end

      operation 1942786 "getSiblingIndexAbove"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1942914 "getHWPeerAboveMe"
	package return_type class_ref 340738 // ComponentPeer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943042 "getSiblingIndexBelow"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943170 "isNonOpaqueForMixing"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943298 "calculateCurrentShape"
	private explicit_return_type "Region"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943426 "applyCurrentShape"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943554 "subtractAndApplyShape"
	package explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "Region"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943682 "applyCurrentShapeBelowMe"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943810 "subtractAndApplyShapeBelowMe"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1943938 "mixOnShowing"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944066 "mixOnHiding"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isLightweight" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944194 "mixOnReshaping"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944322 "mixOnZOrderChanging"
	package explicit_return_type "void"
	nparams 2
	  param in name "oldZorder" explicit_type "int"
	  param in name "newZorder" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944450 "mixOnValidating"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944578 "isMixingNeeded"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1944706 "updateZOrder"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ****************** END OF MIXING CODE ********************************
 Note that the method is overriden in the Window class,
 a window doesn't need to be updated in the Z-order."
      end
    end

    class 339202 "AWTEvent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The root event class for all AWT events.
This class and its subclasses supercede the original
java.awt.Event class.
Subclasses of this root AWTEvent class defined outside of the
java.awt.event package should define event ID values greater than
the value defined by RESERVED_ID_MAX.
<p>
The event masks defined in this class are needed by Component subclasses
which are using Component.enableEvents() to select for event types not
selected by registered listeners. If a listener is registered on a
component, the appropriate event mask is already set internally by the
component.
<p>
The masks are also used to specify to which types of events an
AWTEventListener should listen. The masks are bitwise-ORed together
and passed to Toolkit.addAWTEventListener.

@see Component#enableEvents
@see Toolkit#addAWTEventListener

@see java.awt.event.ActionEvent
@see java.awt.event.AdjustmentEvent
@see java.awt.event.ComponentEvent
@see java.awt.event.ContainerEvent
@see java.awt.event.FocusEvent
@see java.awt.event.InputMethodEvent
@see java.awt.event.InvocationEvent
@see java.awt.event.ItemEvent
@see java.awt.event.HierarchyEvent
@see java.awt.event.KeyEvent
@see java.awt.event.MouseEvent
@see java.awt.event.MouseWheelEvent
@see java.awt.event.PaintEvent
@see java.awt.event.TextEvent
@see java.awt.event.WindowEvent

@author Carl Quinn
@author Amy Fowler
@since 1.1
"
      classrelation 2881794 // <generalisation>
	relation 2881794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2881794 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 1332226 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.AWTEvent\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1332354 "bdata"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1332482 "id"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event's id.
@serial
@see #getID()
@see #AWTEvent

"
      end

      attribute 1332610 "consumed"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Controls whether or not the event is sent back down to the peer once the
source has processed it - false means it's sent to the peer; true means
it's not. Semantic events always have a 'true' value since they were
generated by the peer in response to a low-level event.
@serial
@see #consume
@see #isConsumed

"
      end

      classrelation 2881922 // acc (<unidirectional association>)
	relation 2881922 --->
	  a role_name "acc" init_value "
        AccessController.getContext()" volatile private
	    comment "
The event's AccessControlContext.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2881922 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 6075138 "getAccessControlContext"
	package return_type class_ref 129154 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the acc this event was constructed with.
"
      end

      attribute 1332738 "focusManagerIsDispatching"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1332866 "isPosted"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1332994 "isSystemGenerated"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether this AWTEvent was generated by the system as
opposed to by user code.

"
      end

      attribute 1333122 "COMPONENT_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting component events.

"
      end

      attribute 1333250 "CONTAINER_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting container events.

"
      end

      attribute 1333378 "FOCUS_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting focus events.

"
      end

      attribute 1333506 "KEY_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting key events.

"
      end

      attribute 1333634 "MOUSE_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting mouse events.

"
      end

      attribute 1333762 "MOUSE_MOTION_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting mouse motion events.

"
      end

      attribute 1333890 "WINDOW_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting window events.

"
      end

      attribute 1334018 "ACTION_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting action events.

"
      end

      attribute 1334146 "ADJUSTMENT_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting adjustment events.

"
      end

      attribute 1334274 "ITEM_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting item events.

"
      end

      attribute 1334402 "TEXT_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting text events.

"
      end

      attribute 1334530 "INPUT_METHOD_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting input method events.

"
      end

      attribute 1334658 "INPUT_METHODS_ENABLED_MASK"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The pseudo event mask for enabling input methods.
We're using one bit in the eventMask so we don't need
a separate field inputMethodsEnabled.

"
      end

      attribute 1334786 "PAINT_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x2000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting paint events.

"
      end

      attribute 1334914 "INVOCATION_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x4000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting invocation events.

"
      end

      attribute 1335042 "HIERARCHY_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x8000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting hierarchy events.

"
      end

      attribute 1335170 "HIERARCHY_BOUNDS_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting hierarchy bounds events.

"
      end

      attribute 1335298 "MOUSE_WHEEL_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x20000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting mouse wheel events.
@since 1.4

"
      end

      attribute 1335426 "WINDOW_STATE_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x40000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting window state events.
@since 1.4

"
      end

      attribute 1335554 "WINDOW_FOCUS_EVENT_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x80000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for selecting window focus events.
@since 1.4

"
      end

      attribute 1335682 "RESERVED_ID_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1999"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "WARNING: there are more mask defined privately.  See
SunToolkit.GRAB_EVENT_MASK.


The maximum value for reserved AWT event IDs. Programs defining
their own event IDs should use IDs greater than this value.

"
      end

      classrelation 2882050 // inputEvent_CanAccessSystemClipboard_Field (<unidirectional association>)
	relation 2882050 --->
	  a role_name "inputEvent_CanAccessSystemClipboard_Field" init_value " null" class_relation private
	    comment " security stuff
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2882050 // inputEvent_CanAccessSystemClipboard_Field (<unidirectional association>)
	  b parent class_ref 189698 // Field
      end

      attribute 1335810 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1825314779160409405L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 147458 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
        AWTAccessor.setAWTEventAccessor(
            new AWTAccessor.AWTEventAccessor() {
                public void setPosted(AWTEvent ev) {
                    ev.isPosted = true;
                }

                public void setSystemGenerated(AWTEvent ev) {
                    ev.isSystemGenerated = true;
                }

                public boolean isSystemGenerated(AWTEvent ev) {
                    return ev.isSystemGenerated;
                }

                public AccessControlContext getAccessControlContext(AWTEvent ev) {
                    return ev.getAccessControlContext();
                }

                public byte[] getBData(AWTEvent ev) {
                    return ev.bdata;
                }

                public void setBData(AWTEvent ev, byte[] bdata) {
                    ev.bdata = bdata;
                }

            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6075266 "get_InputEvent_CanAccessSystemClipboard"
	class_operation private return_type class_ref 189698 // Field
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6075394 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      operation 6075522 "AWTEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "event" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AWTEvent object from the parameters of a 1.0-style event.
@param event the old-style event
"
      end

      operation 6075650 "AWTEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AWTEvent object with the specified source object and type.

@param source the object where the event originated
@param id the event type
"
      end

      operation 6075778 "setSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newSource" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retargets an event to a new source. This method is typically used to
retarget an event to a lightweight child Component of the original
heavyweight source.
<p>
This method is intended to be used only by event targeting subsystems,
such as client-defined KeyboardFocusManagers. It is not for general
client use.

@param newSource the new Object to which the event should be dispatched
@since 1.4
"
      end

      operation 6075906 "nativeSetSource"
	private explicit_return_type "void"
	nparams 1
	  param inout name "peer" type class_ref 340738 // ComponentPeer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6076034 "getID"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the event type.
"
      end

      operation 6076162 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String representation of this object.
"
      end

      operation 6076290 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Event</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return  a string representation of this event
"
      end

      operation 6076418 "consume"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consumes this event, if this event can be consumed. Only low-level,
system events can be consumed
"
      end

      operation 6076546 "isConsumed"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this event has been consumed.
"
      end

      operation 6076674 "convertToOld"
	package return_type class_ref 340610 // Event
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a new event to an old one (used for compatibility).
If the new event cannot be converted (because no old equivalent
exists) then this returns null.

Note: this method is here instead of in each individual new
event class in java.awt.event because we don't want to make
it public and it needs to be called from java.awt.
"
      end

      operation 6076802 "copyPrivateDataInto"
	package explicit_return_type "void"
	nparams 1
	  param inout name "that" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all private data from this event into that.
Space is allocated for the copied data that will be
freed when the that is finalized. Upon completion,
this event is not changed.
"
      end

      operation 6076930 "dispatched"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 339458 "EventQueue"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>EventQueue</code> is a platform-independent class
that queues events, both from the underlying peer classes
and from trusted application classes.
<p>
It encapsulates asynchronous event dispatch machinery which
extracts events from the queue and dispatches them by calling
{@link #dispatchEvent(AWTEvent) dispatchEvent(AWTEvent)} method
on this <code>EventQueue</code> with the event to be dispatched
as an argument.  The particular behavior of this machinery is
implementation-dependent.  The only requirements are that events
which were actually enqueued to this queue (note that events
being posted to the <code>EventQueue</code> can be coalesced)
are dispatched:
<dl>
  <dt> Sequentially.
  <dd> That is, it is not permitted that several events from
       this queue are dispatched simultaneously.
  <dt> In the same order as they are enqueued.
  <dd> That is, if <code>AWTEvent</code>&nbsp;A is enqueued
       to the <code>EventQueue</code> before
       <code>AWTEvent</code>&nbsp;B then event B will not be
       dispatched before event A.
</dl>
<p>
Some browsers partition applets in different code bases into
separate contexts, and establish walls between these contexts.
In such a scenario, there will be one <code>EventQueue</code>
per context. Other browsers place all applets into the same
context, implying that there will be only a single, global
<code>EventQueue</code> for all applets. This behavior is
implementation-dependent.  Consult your browser's documentation
for more information.
<p>
For information on the threading issues of the event dispatch
machinery, see <a href=\"doc-files/AWTThreadIssues.html#Autoshutdown\"
>AWT Threading Issues</a>.

@author Thomas Ball
@author Fred Ecks
@author David Mendenhall

@since       1.1
"
      classrelation 2913282 // threadInitNumber (<unidirectional association>)
	relation 2913282 --->
	  a role_name "threadInitNumber" init_value " new AtomicInteger(0)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2913282 // threadInitNumber (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      attribute 1364738 "LOW_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1364866 "NORM_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1364994 "HIGH_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1365122 "ULTIMATE_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1365250 "NUM_PRIORITIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " ULTIMATE_PRIORITY + 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2913410 // queues (<unidirectional association>)
	relation 2913410 --->
	  a role_name "queues" multiplicity "[]" init_value " new Queue[NUM_PRIORITIES]" private
	    comment "
We maintain one Queue for each priority that the EventQueue supports.
That is, the EventQueue object is actually implemented as
NUM_PRIORITIES queues and all Events on a particular internal Queue
have identical priority. Events are pulled off the EventQueue starting
with the Queue of highest priority. We progress in decreasing order
across all Queues.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2913410 // queues (<unidirectional association>)
	  b parent class_ref 864514 // Queue
      end

      classrelation 2913538 // nextQueue (<unidirectional association>)
	relation 2913538 --->
	  a role_name "nextQueue" private
	    comment "
The next EventQueue on the stack, or null if this EventQueue is
on the top of the stack.  If nextQueue is non-null, requests to post
an event are forwarded to nextQueue.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2913538 // nextQueue (<unidirectional association>)
	  b parent class_ref 339458 // EventQueue
      end

      classrelation 2913666 // previousQueue (<unidirectional association>)
	relation 2913666 --->
	  a role_name "previousQueue" private
	    comment "
The previous EventQueue on the stack, or null if this is the
\"base\" EventQueue.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2913666 // previousQueue (<unidirectional association>)
	  b parent class_ref 339458 // EventQueue
      end

      classrelation 2913794 // pushPopLock (<unidirectional association>)
	relation 2913794 --->
	  a role_name "pushPopLock" const_relation private
	    comment "
A single lock to synchronize the push()/pop() and related operations with
all the EventQueues from the AppContext. Synchronization on any particular
event queue(s) is not enough: we should lock the whole stack.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2913794 // pushPopLock (<unidirectional association>)
	  b parent class_ref 864642 // Lock
      end

      classrelation 2913922 // pushPopCond (<unidirectional association>)
	relation 2913922 --->
	  a role_name "pushPopCond" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2913922 // pushPopCond (<unidirectional association>)
	  b parent class_ref 864770 // Condition
      end

      classrelation 2914050 // dummyRunnable (<unidirectional association>)
	relation 2914050 --->
	  a role_name "dummyRunnable" init_value " new Runnable() {
        public void run() {
        }
    }" class_relation const_relation private
	    comment "
Dummy runnable to wake up EDT from getNextEvent() after
push/pop is performed

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914050 // dummyRunnable (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      classrelation 2914178 // dispatchThread (<unidirectional association>)
	relation 2914178 --->
	  a role_name "dispatchThread" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914178 // dispatchThread (<unidirectional association>)
	  b parent class_ref 864002 // EventDispatchThread
      end

      classrelation 2914306 // threadGroup (<unidirectional association>)
	relation 2914306 --->
	  a role_name "threadGroup" init_value "
        Thread.currentThread().getThreadGroup()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914306 // threadGroup (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 2914434 // classLoader (<unidirectional association>)
	relation 2914434 --->
	  a role_name "classLoader" init_value "
        Thread.currentThread().getContextClassLoader()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914434 // classLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      attribute 1365378 "mostRecentEventTime"
	private explicit_type "long"
	init_value " System.currentTimeMillis()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The time stamp of the last dispatched InputEvent or ActionEvent.

"
      end

      attribute 1365506 "mostRecentKeyEventTime"
	private explicit_type "long"
	init_value " System.currentTimeMillis()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The time stamp of the last KeyEvent .

"
      end

      classrelation 2914562 // currentEvent (<unidirectional association>)
	relation 2914562 --->
	  a role_name "currentEvent" private
	    comment "
The modifiers field of the current event, if the current event is an
InputEvent or ActionEvent.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTEvent> ${name}${value};
"
	    classrelation_ref 2914562 // currentEvent (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      attribute 1365634 "waitForID"
	volatile private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Non-zero if a thread is waiting in getNextEvent(int) for an event of
a particular ID to be posted to the queue.

"
      end

      attribute 1365762 "appContext"
	const_attribute private explicit_type "AppContext"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "AppContext corresponding to the queue.

"
      end

      classrelation 2914690 // name (<unidirectional association>)
	relation 2914690 --->
	  a role_name "name" init_value " \"AWT-EventQueue-\" + threadInitNumber.getAndIncrement()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914690 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1365890 "fwDispatcher"
	private explicit_type "FwDispatcher"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366018 "eventLog"
	class_attribute volatile private explicit_type "PlatformLogger"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6182274 "getEventLog"
	class_operation private explicit_return_type "PlatformLogger"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 149378 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setEventQueueAccessor(
            new AWTAccessor.EventQueueAccessor() {
                public Thread getDispatchThread(EventQueue eventQueue) {
                    return eventQueue.getDispatchThread();
                }
                public boolean isDispatchThreadImpl(EventQueue eventQueue) {
                    return eventQueue.isDispatchThreadImpl();
                }
                public void removeSourceEvents(EventQueue eventQueue,
                                               Object source,
                                               boolean removeAllEvents)
                {
                    eventQueue.removeSourceEvents(source, removeAllEvents);
                }
                public boolean noEvents(EventQueue eventQueue) {
                    return eventQueue.noEvents();
                }
                public void wakeup(EventQueue eventQueue, boolean isShutdown) {
                    eventQueue.wakeup(isShutdown);
                }
                public void invokeAndWait(Object source, Runnable r)
                    throws InterruptedException, InvocationTargetException
                {
                    EventQueue.invokeAndWait(source, r);
                }
                public void setFwDispatcher(EventQueue eventQueue,
                                            FwDispatcher dispatcher) {
                    eventQueue.setFwDispatcher(dispatcher);
                }

                @Override
                public long getMostRecentEventTime(EventQueue eventQueue) {
                    return eventQueue.getMostRecentEventTimeImpl();
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6182402 "EventQueue"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6182530 "postEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "theEvent" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts a 1.1-style event to the <code>EventQueue</code>.
If there is an existing event on the queue with the same ID
and event source, the source <code>Component</code>'s
<code>coalesceEvents</code> method will be called.

@param theEvent an instance of <code>java.awt.AWTEvent</code>,
         or a subclass of it
@throws NullPointerException if <code>theEvent</code> is <code>null</code>
"
      end

      operation 6182658 "postEventPrivate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "theEvent" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts a 1.1-style event to the <code>EventQueue</code>.
If there is an existing event on the queue with the same ID
and event source, the source <code>Component</code>'s
<code>coalesceEvents</code> method will be called.

@param theEvent an instance of <code>java.awt.AWTEvent</code>,
         or a subclass of it
"
      end

      operation 6182786 "getPriority"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "theEvent" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6182914 "postEvent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "theEvent" type class_ref 339202 // AWTEvent
	  param in name "priority" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts the event to the internal Queue of specified priority,
coalescing as appropriate.

@param theEvent an instance of <code>java.awt.AWTEvent</code>,
         or a subclass of it
@param priority  the desired priority of the event
"
      end

      operation 6183042 "coalescePaintEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 864898 // PaintEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183170 "mergePaintEvents"
	private return_type class_ref 864898 // PaintEvent
	nparams 2
	  param inout name "a" type class_ref 864898 // PaintEvent
	  param inout name "b" type class_ref 864898 // PaintEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183298 "coalesceMouseEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183426 "coalescePeerEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "PeerEvent"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183554 "coalesceOtherEvent"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "e" type class_ref 339202 // AWTEvent
	  param in name "priority" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Should avoid of calling this method by any means
as it's working time is dependant on EQ length.
In the wors case this method alone can slow down the entire application
10 times by stalling the Event processing.
Only here by backward compatibility reasons.
"
      end

      operation 6183682 "coalesceEvent"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "e" type class_ref 339202 // AWTEvent
	  param in name "priority" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183810 "cacheEQItem"
	private explicit_return_type "void"
	nparams 1
	  param inout name "entry" explicit_type "EventQueueItem"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6183938 "uncacheEQItem"
	private explicit_return_type "void"
	nparams 1
	  param inout name "entry" explicit_type "EventQueueItem"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1366146 "PAINT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366274 "UPDATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366402 "MOVE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366530 "DRAG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366658 "PEER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1366786 "CACHE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6184066 "eventToCacheIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6184194 "noEvents"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether an event is pending on any of the separate
Queues.
@return whether an event is pending on any of the separate Queues
"
      end

      operation 6184322 "getNextEvent"
	public return_type class_ref 339202 // AWTEvent
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an event from the <code>EventQueue</code> and
returns it.  This method will block until an event has
been posted by another thread.
@return the next <code>AWTEvent</code>
@exception InterruptedException
           if any thread has interrupted this thread
"
      end

      operation 6184450 "getNextEventPrivate"
	package return_type class_ref 339202 // AWTEvent
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must be called under the lock. Doesn't call flushPendingEvents()
"
      end

      operation 6184578 "getNextEvent"
	package return_type class_ref 339202 // AWTEvent
	nparams 1
	  param in name "id" explicit_type "int"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6184706 "peekEvent"
	public return_type class_ref 339202 // AWTEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first event on the <code>EventQueue</code>
without removing it.
@return the first event
"
      end

      operation 6184834 "peekEvent"
	public return_type class_ref 339202 // AWTEvent
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first event with the specified id, if any.
@param id the id of the type of event desired
@return the first event of the specified id or <code>null</code>
   if there is no such event
"
      end

      attribute 1366914 "javaSecurityAccess"
	class_attribute const_attribute private explicit_type "JavaSecurityAccess"
	init_value "
        SharedSecrets.getJavaSecurityAccess()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6184962 "dispatchEvent"
	protected explicit_return_type "void"
	nparams 1
	  param in name "event" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event. The manner in which the event is
dispatched depends upon the type of the event and the
type of the event's source object:

<table border=1 summary=\"Event types, source types, and dispatch methods\">
<tr>
    <th>Event Type</th>
    <th>Source Type</th>
    <th>Dispatched To</th>
</tr>
<tr>
    <td>ActiveEvent</td>
    <td>Any</td>
    <td>event.dispatch()</td>
</tr>
<tr>
    <td>Other</td>
    <td>Component</td>
    <td>source.dispatchEvent(AWTEvent)</td>
</tr>
<tr>
    <td>Other</td>
    <td>MenuComponent</td>
    <td>source.dispatchEvent(AWTEvent)</td>
</tr>
<tr>
    <td>Other</td>
    <td>Other</td>
    <td>No action (ignored)</td>
</tr>
</table>
<p>
@param event an instance of <code>java.awt.AWTEvent</code>,
         or a subclass of it
@throws NullPointerException if <code>event</code> is <code>null</code>
@since           1.2
"
      end

      operation 6185090 "getAccessControlContextFrom"
	class_operation private return_type class_ref 129154 // AccessControlContext
	nparams 1
	  param inout name "src" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6185218 "dispatchEventImpl"
	private explicit_return_type "void"
	nparams 2
	  param in name "event" type class_ref 339202 // AWTEvent
	  param in name "src" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from dispatchEvent() under a correct AccessControlContext
"
      end

      operation 6185346 "getMostRecentEventTime"
	class_operation public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timestamp of the most recent event that had a timestamp, and
that was dispatched from the <code>EventQueue</code> associated with the
calling thread. If an event with a timestamp is currently being
dispatched, its timestamp will be returned. If no events have yet
been dispatched, the EventQueue's initialization time will be
returned instead.In the current version of
the JDK, only <code>InputEvent</code>s,
<code>ActionEvent</code>s, and <code>InvocationEvent</code>s have
timestamps; however, future versions of the JDK may add timestamps to
additional event types. Note that this method should only be invoked
from an application's {@link #isDispatchThread event dispatching thread}.
If this method is
invoked from another thread, the current system time (as reported by
<code>System.currentTimeMillis()</code>) will be returned instead.

@return the timestamp of the last <code>InputEvent</code>,
        <code>ActionEvent</code>, or <code>InvocationEvent</code> to be
        dispatched, or <code>System.currentTimeMillis()</code> if this
        method is invoked on a thread other than an event dispatching
        thread
@see java.awt.event.InputEvent#getWhen
@see java.awt.event.ActionEvent#getWhen
@see java.awt.event.InvocationEvent#getWhen
@see #isDispatchThread

@since 1.4
"
      end

      operation 6185474 "getMostRecentEventTimeImpl"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6185602 "getMostRecentEventTimeEx"
	package explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return most recent event time on all threads.
"
      end

      operation 6185730 "getCurrentEvent"
	class_operation public return_type class_ref 339202 // AWTEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the event currently being dispatched by the
<code>EventQueue</code> associated with the calling thread. This is
useful if a method needs access to the event, but was not designed to
receive a reference to it as an argument. Note that this method should
only be invoked from an application's event dispatching thread. If this
method is invoked from another thread, null will be returned.

@return the event currently being dispatched, or null if this method is
        invoked on a thread other than an event dispatching thread
@since 1.4
"
      end

      operation 6185858 "getCurrentEventImpl"
	private return_type class_ref 339202 // AWTEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6185986 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newEventQueue" type class_ref 339458 // EventQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the existing <code>EventQueue</code> with the specified one.
Any pending events are transferred to the new <code>EventQueue</code>
for processing by it.

@param newEventQueue an <code>EventQueue</code>
         (or subclass thereof) instance to be use
@see      java.awt.EventQueue#pop
@throws NullPointerException if <code>newEventQueue</code> is <code>null</code>
@since           1.2
"
      end

      operation 6186114 "pop"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 865026 // EmptyStackException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops dispatching events using this <code>EventQueue</code>.
Any pending events are transferred to the previous
<code>EventQueue</code> for processing.
<p>
Warning: To avoid deadlock, do not declare this method
synchronized in a subclass.

@exception EmptyStackException if no previous push was made
 on this <code>EventQueue</code>
@see      java.awt.EventQueue#push
@since           1.2
"
      end

      operation 6186242 "createSecondaryLoop"
	public return_type class_ref 863618 // SecondaryLoop
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code secondary loop} associated with this
event queue. Use the {@link SecondaryLoop#enter} and
{@link SecondaryLoop#exit} methods to start and stop the
event loop and dispatch the events from this queue.

@return secondaryLoop A new secondary loop object, which can
                      be used to launch a new nested event
                      loop and dispatch events from this queue

@see SecondaryLoop#enter
@see SecondaryLoop#exit

@since 1.7
"
      end

      operation 6186370 "createSecondaryLoop"
	package return_type class_ref 863618 // SecondaryLoop
	nparams 3
	  param inout name "cond" type class_ref 860930 // Conditional
	  param inout name "filter" type class_ref 864130 // EventFilter
	  param in name "interval" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6186498 "isDispatchThread"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the calling thread is
{@link Toolkit#getSystemEventQueue the current AWT EventQueue}'s
dispatch thread. Use this method to ensure that a particular
task is being executed (or not being) there.
<p>
Note: use the {@link #invokeLater} or {@link #invokeAndWait}
methods to execute a task in
{@link Toolkit#getSystemEventQueue the current AWT EventQueue}'s
dispatch thread.
<p>

@return true if running in
{@link Toolkit#getSystemEventQueue the current AWT EventQueue}'s
dispatch thread
@see             #invokeLater
@see             #invokeAndWait
@see             Toolkit#getSystemEventQueue
@since           1.2
"
      end

      operation 6186626 "isDispatchThreadImpl"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6186754 "initDispatchThread"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6186882 "detachDispatchThread"
	package explicit_return_type "void"
	nparams 1
	  param inout name "edt" type class_ref 864002 // EventDispatchThread
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6187010 "getDispatchThread"
	package return_type class_ref 864002 // EventDispatchThread
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>EventDispatchThread</code> for this
<code>EventQueue</code>.
@return the event dispatch thread associated with this event queue
        or <code>null</code> if this event queue doesn't have a
        working thread associated with it
@see    java.awt.EventQueue#initDispatchThread
@see    java.awt.EventQueue#detachDispatchThread
"
      end

      operation 6187138 "removeSourceEvents"
	package explicit_return_type "void"
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "removeAllEvents" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any pending events for the specified source object.
If removeAllEvents parameter is <code>true</code> then all
events for the specified source object are removed, if it
is <code>false</code> then <code>SequencedEvent</code>, <code>SentEvent</code>,
<code>FocusEvent</code>, <code>WindowEvent</code>, <code>KeyEvent</code>,
and <code>InputMethodEvent</code> are kept in the queue, but all other
events are removed.

This method is normally called by the source's
<code>removeNotify</code> method.
"
      end

      operation 6187266 "getMostRecentKeyEventTime"
	package explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6187394 "setCurrentEventAndMostRecentTime"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6187522 "setCurrentEventAndMostRecentTimeImpl"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6187650 "invokeLater"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "runnable" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes <code>runnable</code> to have its <code>run</code>
method called in the {@link #isDispatchThread dispatch thread} of
{@link Toolkit#getSystemEventQueue the system EventQueue}.
This will happen after all pending events are processed.

@param runnable  the <code>Runnable</code> whose <code>run</code>
                 method should be executed
                 asynchronously in the
                 {@link #isDispatchThread event dispatch thread}
                 of {@link Toolkit#getSystemEventQueue the system EventQueue}
@see             #invokeAndWait
@see             Toolkit#getSystemEventQueue
@see             #isDispatchThread
@since           1.2
"
      end

      operation 6187778 "invokeAndWait"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "runnable" type class_ref 128770 // Runnable
	nexceptions 2
	  exception class_ref 129666 // InterruptedException
	  exception class_ref 193410 // InvocationTargetException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes <code>runnable</code> to have its <code>run</code>
method called in the {@link #isDispatchThread dispatch thread} of
{@link Toolkit#getSystemEventQueue the system EventQueue}.
This will happen after all pending events are processed.
The call blocks until this has happened.  This method
will throw an Error if called from the
{@link #isDispatchThread event dispatcher thread}.

@param runnable  the <code>Runnable</code> whose <code>run</code>
                 method should be executed
                 synchronously in the
                 {@link #isDispatchThread event dispatch thread}
                 of {@link Toolkit#getSystemEventQueue the system EventQueue}
@exception       InterruptedException  if any thread has
                 interrupted this thread
@exception       InvocationTargetException  if an throwable is thrown
                 when running <code>runnable</code>
@see             #invokeLater
@see             Toolkit#getSystemEventQueue
@see             #isDispatchThread
@since           1.2
"
      end

      operation 6187906 "invokeAndWait"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "source" type class_ref 129538 // Object
	  param inout name "runnable" type class_ref 128770 // Runnable
	nexceptions 2
	  exception class_ref 129666 // InterruptedException
	  exception class_ref 193410 // InvocationTargetException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6188034 "wakeup"
	private explicit_return_type "void"
	nparams 1
	  param inout name "isShutdown" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from PostEventQueue.postEvent to notify that a new event
appeared. First it proceeds to the EventQueue on the top of the
stack, then notifies the associated dispatch thread if it exists
or starts a new one otherwise.
"
      end

      operation 6188162 "setFwDispatcher"
	private explicit_return_type "void"
	nparams 1
	  param inout name "dispatcher" explicit_type "FwDispatcher"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The method is used by AWTAccessor for javafx/AWT single threaded mode."
      end
    end

    class 340098 "Image"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The abstract class <code>Image</code> is the superclass of all
classes that represent graphical images. The image must be
obtained in a platform-specific manner.

@author      Sami Shaio
@author      Arthur van Hoff
@since       JDK1.0
"
      classrelation 2926210 // defaultImageCaps (<unidirectional association>)
	relation 2926210 --->
	  a role_name "defaultImageCaps" init_value "
        new ImageCapabilities(false)" class_relation private
	    comment "
convenience object; we can use this single static object for
all images that do not create their own image caps; it holds the
default (unaccelerated) properties.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2926210 // defaultImageCaps (<unidirectional association>)
	  b parent class_ref 344322 // ImageCapabilities
      end

      attribute 1390466 "accelerationPriority"
	protected explicit_type "float"
	init_value " .5f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Priority for accelerating this image.  Subclasses are free to
set different default priorities and applications are free to
set the priority for specific images via the
<code>setAccelerationPriority(float)</code> method.
@since 1.5

"
      end

      operation 6247042 "getWidth"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the width of the image. If the width is not yet known,
this method returns <code>-1</code> and the specified
<code>ImageObserver</code> object is notified later.
@param     observer   an object waiting for the image to be loaded.
@return    the width of this image, or <code>-1</code>
                  if the width is not yet known.
@see       java.awt.Image#getHeight
@see       java.awt.image.ImageObserver
"
      end

      operation 6247170 "getHeight"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the height of the image. If the height is not yet known,
this method returns <code>-1</code> and the specified
<code>ImageObserver</code> object is notified later.
@param     observer   an object waiting for the image to be loaded.
@return    the height of this image, or <code>-1</code>
                  if the height is not yet known.
@see       java.awt.Image#getWidth
@see       java.awt.image.ImageObserver
"
      end

      operation 6247298 "getSource"
	abstract public return_type class_ref 344066 // ImageProducer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the object that produces the pixels for the image.
This method is called by the image filtering classes and by
methods that perform image conversion and scaling.
@return     the image producer that produces the pixels
                                 for this image.
@see        java.awt.image.ImageProducer
"
      end

      operation 6247426 "getGraphics"
	abstract public return_type class_ref 343682 // Graphics
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a graphics context for drawing to an off-screen image.
This method can only be called for off-screen images.
@return  a graphics context to draw to the off-screen image.
@exception UnsupportedOperationException if called for a
           non-off-screen image.
@see     java.awt.Graphics
@see     java.awt.Component#createImage(int, int)
"
      end

      operation 6247554 "getProperty"
	abstract public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a property of this image by name.
<p>
Individual property names are defined by the various image
formats. If a property is not defined for a particular image, this
method returns the <code>UndefinedProperty</code> object.
<p>
If the properties for this image are not yet known, this method
returns <code>null</code>, and the <code>ImageObserver</code>
object is notified later.
<p>
The property name <code>\"comment\"</code> should be used to store
an optional comment which can be presented to the application as a
description of the image, its source, or its author.
@param       name   a property name.
@param       observer   an object waiting for this image to be loaded.
@return      the value of the named property.
@throws      NullPointerException if the property name is null.
@see         java.awt.image.ImageObserver
@see         java.awt.Image#UndefinedProperty
"
      end

      classrelation 2926338 // UndefinedProperty (<unidirectional association>)
	relation 2926338 --->
	  a role_name "UndefinedProperty" init_value " new Object()" class_relation const_relation public
	    comment "
The <code>UndefinedProperty</code> object should be returned whenever a
property which was not defined for a particular image is fetched.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2926338 // UndefinedProperty (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 6247682 "getScaledInstance"
	public return_type class_ref 340098 // Image
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "hints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a scaled version of this image.
A new <code>Image</code> object is returned which will render
the image at the specified <code>width</code> and
<code>height</code> by default.  The new <code>Image</code> object
may be loaded asynchronously even if the original source image
has already been loaded completely.

<p>

If either <code>width</code>
or <code>height</code> is a negative number then a value is
substituted to maintain the aspect ratio of the original image
dimensions. If both <code>width</code> and <code>height</code>
are negative, then the original image dimensions are used.

@param width the width to which to scale the image.
@param height the height to which to scale the image.
@param hints flags to indicate the type of algorithm to use
for image resampling.
@return     a scaled version of the image.
@exception IllegalArgumentException if <code>width</code>
            or <code>height</code> is zero.
@see        java.awt.Image#SCALE_DEFAULT
@see        java.awt.Image#SCALE_FAST
@see        java.awt.Image#SCALE_SMOOTH
@see        java.awt.Image#SCALE_REPLICATE
@see        java.awt.Image#SCALE_AREA_AVERAGING
@since      JDK1.1
"
      end

      attribute 1390594 "SCALE_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use the default image-scaling algorithm.
@since JDK1.1

"
      end

      attribute 1390722 "SCALE_FAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Choose an image-scaling algorithm that gives higher priority
to scaling speed than smoothness of the scaled image.
@since JDK1.1

"
      end

      attribute 1390850 "SCALE_SMOOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Choose an image-scaling algorithm that gives higher priority
to image smoothness than scaling speed.
@since JDK1.1

"
      end

      attribute 1390978 "SCALE_REPLICATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use the image scaling algorithm embodied in the
<code>ReplicateScaleFilter</code> class.
The <code>Image</code> object is free to substitute a different filter
that performs the same algorithm yet integrates more efficiently
into the imaging infrastructure supplied by the toolkit.
@see        java.awt.image.ReplicateScaleFilter
@since      JDK1.1

"
      end

      attribute 1391106 "SCALE_AREA_AVERAGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use the Area Averaging image scaling algorithm.  The
image object is free to substitute a different filter that
performs the same algorithm yet integrates more efficiently
into the image infrastructure supplied by the toolkit.
@see java.awt.image.AreaAveragingScaleFilter
@since JDK1.1

"
      end

      operation 6247810 "flush"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes all reconstructable resources being used by this Image object.
This includes any pixel data that is being cached for rendering to
the screen as well as any system resources that are being used
to store data or pixels for the image if they can be recreated.
The image is reset to a state similar to when it was first created
so that if it is again rendered, the image data will have to be
recreated or fetched again from its source.
<p>
Examples of how this method affects specific types of Image object:
<ul>
<li>
BufferedImage objects leave the primary Raster which stores their
pixels untouched, but flush any information cached about those
pixels such as copies uploaded to the display hardware for
accelerated blits.
<li>
Image objects created by the Component methods which take a
width and height leave their primary buffer of pixels untouched,
but have all cached information released much like is done for
BufferedImage objects.
<li>
VolatileImage objects release all of their pixel resources
including their primary copy which is typically stored on
the display hardware where resources are scarce.
These objects can later be restored using their
{@link java.awt.image.VolatileImage#validate validate}
method.
<li>
Image objects created by the Toolkit and Component classes which are
loaded from files, URLs or produced by an {@link ImageProducer}
are unloaded and all local resources are released.
These objects can later be reloaded from their original source
as needed when they are rendered, just as when they were first
created.
</ul>
"
      end

      operation 6247938 "getCapabilities"
	public return_type class_ref 344322 // ImageCapabilities
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an ImageCapabilities object which can be
inquired as to the capabilities of this
Image on the specified GraphicsConfiguration.
This allows programmers to find
out more runtime information on the specific Image
object that they have created.  For example, the user
might create a BufferedImage but the system may have
no video memory left for creating an image of that
size on the given GraphicsConfiguration, so although the object
may be acceleratable in general, it
does not have that capability on this GraphicsConfiguration.
@param gc a <code>GraphicsConfiguration</code> object.  A value of null
for this parameter will result in getting the image capabilities
for the default <code>GraphicsConfiguration</code>.
@return an <code>ImageCapabilities</code> object that contains
the capabilities of this <code>Image</code> on the specified
GraphicsConfiguration.
@see java.awt.image.VolatileImage#getCapabilities()
VolatileImage.getCapabilities()
@since 1.5
"
      end

      operation 6248066 "setAccelerationPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "priority" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a hint for this image about how important acceleration is.
This priority hint is used to compare to the priorities of other
Image objects when determining how to use scarce acceleration
resources such as video memory.  When and if it is possible to
accelerate this Image, if there are not enough resources available
to provide that acceleration but enough can be freed up by
de-accelerating some other image of lower priority, then that other
Image may be de-accelerated in deference to this one.  Images
that have the same priority take up resources on a first-come,
first-served basis.
@param priority a value between 0 and 1, inclusive, where higher
values indicate more importance for acceleration.  A value of 0
means that this Image should never be accelerated.  Other values
are used simply to determine acceleration priority relative to other
Images.
@throws IllegalArgumentException if <code>priority</code> is less
than zero or greater than 1.
@since 1.5
"
      end

      operation 6248194 "getAccelerationPriority"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current value of the acceleration priority hint.
@see #setAccelerationPriority(float priority) setAccelerationPriority
@return value between 0 and 1, inclusive, which represents the current
priority value
@since 1.5
"
      end

      attribute 1391234 "surfaceManager"
	package explicit_type "SurfaceManager"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 150274 "initialization"
	
	cpp "" ""
	java "  static {
        SurfaceManager.setImageAccessor(new SurfaceManager.ImageAccessor() {
            public SurfaceManager getSurfaceManager(Image img) {
                return img.surfaceManager;
            }
            public void setSurfaceManager(Image img, SurfaceManager mgr) {
                img.surfaceManager = mgr;
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 340226 "MenuContainer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The super class of all menu related containers.

@author      Arthur van Hoff
"
      operation 1882370 "getFont"
	public return_type class_ref 340354 // Font
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1882498 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 340482 // MenuComponent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1882626 "postEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "evt" type class_ref 340610 // Event
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1
replaced by dispatchEvent(AWTEvent).
"
      end
    end

    class 340354 "Font"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Font</code> class represents fonts, which are used to
render text in a visible way.
A font provides the information needed to map sequences of
<em>characters</em> to sequences of <em>glyphs</em>
and to render sequences of glyphs on <code>Graphics</code> and
<code>Component</code> objects.

<h3>Characters and Glyphs</h3>

A <em>character</em> is a symbol that represents an item such as a letter,
a digit, or punctuation in an abstract way. For example, <code>'g'</code>,
LATIN SMALL LETTER G, is a character.
<p>
A <em>glyph</em> is a shape used to render a character or a sequence of
characters. In simple writing systems, such as Latin, typically one glyph
represents one character. In general, however, characters and glyphs do not
have one-to-one correspondence. For example, the character '&aacute;'
LATIN SMALL LETTER A WITH ACUTE, can be represented by
two glyphs: one for 'a' and one for '&acute;'. On the other hand, the
two-character string \"fi\" can be represented by a single glyph, an
\"fi\" ligature. In complex writing systems, such as Arabic or the South
and South-East Asian writing systems, the relationship between characters
and glyphs can be more complicated and involve context-dependent selection
of glyphs as well as glyph reordering.

A font encapsulates the collection of glyphs needed to render a selected set
of characters as well as the tables needed to map sequences of characters to
corresponding sequences of glyphs.

<h3>Physical and Logical Fonts</h3>

The Java Platform distinguishes between two kinds of fonts:
<em>physical</em> fonts and <em>logical</em> fonts.
<p>
<em>Physical</em> fonts are the actual font libraries containing glyph data
and tables to map from character sequences to glyph sequences, using a font
technology such as TrueType or PostScript Type 1.
All implementations of the Java Platform must support TrueType fonts;
support for other font technologies is implementation dependent.
Physical fonts may use names such as Helvetica, Palatino, HonMincho, or
any number of other font names.
Typically, each physical font supports only a limited set of writing
systems, for example, only Latin characters or only Japanese and Basic
Latin.
The set of available physical fonts varies between configurations.
Applications that require specific fonts can bundle them and instantiate
them using the {@link #createFont createFont} method.
<p>
<em>Logical</em> fonts are the five font families defined by the Java
platform which must be supported by any Java runtime environment:
Serif, SansSerif, Monospaced, Dialog, and DialogInput.
These logical fonts are not actual font libraries. Instead, the logical
font names are mapped to physical fonts by the Java runtime environment.
The mapping is implementation and usually locale dependent, so the look
and the metrics provided by them vary.
Typically, each logical font name maps to several physical fonts in order to
cover a large range of characters.
<p>
Peered AWT components, such as {@link Label Label} and
{@link TextField TextField}, can only use logical fonts.
<p>
For a discussion of the relative advantages and disadvantages of using
physical or logical fonts, see the
<a href=\"http://www.oracle.com/technetwork/java/javase/tech/faq-jsp-138165.html\">Internationalization FAQ</a>
document.

<h3>Font Faces and Names</h3>

A <code>Font</code>
can have many faces, such as heavy, medium, oblique, gothic and
regular. All of these faces have similar typographic design.
<p>
There are three different names that you can get from a
<code>Font</code> object.  The <em>logical font name</em> is simply the
name that was used to construct the font.
The <em>font face name</em>, or just <em>font name</em> for
short, is the name of a particular font face, like Helvetica Bold. The
<em>family name</em> is the name of the font family that determines the
typographic design across several faces, like Helvetica.
<p>
The <code>Font</code> class represents an instance of a font face from
a collection of  font faces that are present in the system resources
of the host system.  As examples, Arial Bold and Courier Bold Italic
are font faces.  There can be several <code>Font</code> objects
associated with a font face, each differing in size, style, transform
and font features.
<p>
The {@link GraphicsEnvironment#getAllFonts() getAllFonts} method
of the <code>GraphicsEnvironment</code> class returns an
array of all font faces available in the system. These font faces are
returned as <code>Font</code> objects with a size of 1, identity
transform and default font features. These
base fonts can then be used to derive new <code>Font</code> objects
with varying sizes, styles, transforms and font features via the
<code>deriveFont</code> methods in this class.

<h3>Font and TextAttribute</h3>

<p><code>Font</code> supports most
<code>TextAttribute</code>s.  This makes some operations, such as
rendering underlined text, convenient since it is not
necessary to explicitly construct a <code>TextLayout</code> object.
Attributes can be set on a Font by constructing or deriving it
using a <code>Map</code> of <code>TextAttribute</code> values.

<p>The values of some <code>TextAttributes</code> are not
serializable, and therefore attempting to serialize an instance of
<code>Font</code> that has such values will not serialize them.
This means a Font deserialized from such a stream will not compare
equal to the original Font that contained the non-serializable
attributes.  This should very rarely pose a problem
since these attributes are typically used only in special
circumstances and are unlikely to be serialized.

<ul>
<li><code>FOREGROUND</code> and <code>BACKGROUND</code> use
<code>Paint</code> values. The subclass <code>Color</code> is
serializable, while <code>GradientPaint</code> and
<code>TexturePaint</code> are not.</li>
<li><code>CHAR_REPLACEMENT</code> uses
<code>GraphicAttribute</code> values.  The subclasses
<code>ShapeGraphicAttribute</code> and
<code>ImageGraphicAttribute</code> are not serializable.</li>
<li><code>INPUT_METHOD_HIGHLIGHT</code> uses
<code>InputMethodHighlight</code> values, which are
not serializable.  See {@link java.awt.im.InputMethodHighlight}.</li>
</ul>

<p>Clients who create custom subclasses of <code>Paint</code> and
<code>GraphicAttribute</code> can make them serializable and
avoid this problem.  Clients who use input method highlights can
convert these to the platform-specific attributes for that
highlight on the current platform and set them on the Font as
a workaround.

<p>The <code>Map</code>-based constructor and
<code>deriveFont</code> APIs ignore the FONT attribute, and it is
not retained by the Font; the static {@link #getFont} method should
be used if the FONT attribute might be present.  See {@link
java.awt.font.TextAttribute#FONT} for more information.</p>

<p>Several attributes will cause additional rendering overhead
and potentially invoke layout.  If a <code>Font</code> has such
attributes, the <code>{@link #hasLayoutAttributes()}</code> method
will return true.</p>

<p>Note: Font rotations can cause text baselines to be rotated.  In
order to account for this (rare) possibility, font APIs are
specified to return metrics and take parameters 'in
baseline-relative coordinates'.  This maps the 'x' coordinate to
the advance along the baseline, (positive x is forward along the
baseline), and the 'y' coordinate to a distance along the
perpendicular to the baseline at 'x' (positive y is 90 degrees
clockwise from the baseline vector).  APIs for which this is
especially important are called out as having 'baseline-relative
coordinates.'
"
      classrelation 2915842 // <realization>
	relation 2915842 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2915842 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      class 865410 "FontAccessImpl"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6193794 "getFont2D"
	  public explicit_return_type "Font2D"
	  nparams 1
	    param inout name "font" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6193922 "setFont2D"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "font" type class_ref 340354 // Font
	    param inout name "handle" explicit_type "Font2DHandle"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6194050 "setCreatedFont"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "font" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6194178 "isCreatedFont"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "font" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      extra_member 149762 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        initIDs();
        FontAccess.setFontAccess(new FontAccessImpl());
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2916098 // fRequestedAttributes (<unidirectional association>)
	relation 2916098 --->
	  a role_name "fRequestedAttributes" private
	    comment "
This is now only used during serialization.  Typically
it is null.

@serial
@see #getAttributes()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object, Object> ${name}${value};
"
	    classrelation_ref 2916098 // fRequestedAttributes (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 2916226 // DIALOG (<unidirectional association>)
	relation 2916226 --->
	  a role_name "DIALOG" init_value " \"Dialog\"" class_relation const_relation public
	    comment "
Constants to be used for logical font family names.


A String constant for the canonical family name of the
logical font \"Dialog\". It is useful in Font construction
to provide compile-time verification of the name.
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916226 // DIALOG (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2916354 // DIALOG_INPUT (<unidirectional association>)
	relation 2916354 --->
	  a role_name "DIALOG_INPUT" init_value " \"DialogInput\"" class_relation const_relation public
	    comment "
A String constant for the canonical family name of the
logical font \"DialogInput\". It is useful in Font construction
to provide compile-time verification of the name.
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916354 // DIALOG_INPUT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2916482 // SANS_SERIF (<unidirectional association>)
	relation 2916482 --->
	  a role_name "SANS_SERIF" init_value " \"SansSerif\"" class_relation const_relation public
	    comment "
A String constant for the canonical family name of the
logical font \"SansSerif\". It is useful in Font construction
to provide compile-time verification of the name.
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916482 // SANS_SERIF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2916610 // SERIF (<unidirectional association>)
	relation 2916610 --->
	  a role_name "SERIF" init_value " \"Serif\"" class_relation const_relation public
	    comment "
A String constant for the canonical family name of the
logical font \"Serif\". It is useful in Font construction
to provide compile-time verification of the name.
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916610 // SERIF (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2916738 // MONOSPACED (<unidirectional association>)
	relation 2916738 --->
	  a role_name "MONOSPACED" init_value " \"Monospaced\"" class_relation const_relation public
	    comment "
A String constant for the canonical family name of the
logical font \"Monospaced\". It is useful in Font construction
to provide compile-time verification of the name.
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916738 // MONOSPACED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1369730 "PLAIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constants to be used for styles. Can be combined to mix
styles.


The plain style constant.

"
      end

      attribute 1369858 "BOLD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The bold style constant.  This can be combined with the other style
constants (except PLAIN) for mixed styles.

"
      end

      attribute 1369986 "ITALIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The italicized style constant.  This can be combined with the other
style constants (except PLAIN) for mixed styles.

"
      end

      attribute 1370114 "ROMAN_BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The baseline used in most Roman scripts when laying out text.

"
      end

      attribute 1370242 "CENTER_BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The baseline used in ideographic scripts like Chinese, Japanese,
and Korean when laying out text.

"
      end

      attribute 1370370 "HANGING_BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The baseline used in Devanigiri and similar scripts when laying
out text.

"
      end

      attribute 1370498 "TRUETYPE_FONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identify a font resource of type TRUETYPE.
Used to specify a TrueType font resource to the
{@link #createFont} method.
The TrueType format was extended to become the OpenType
format, which adds support for fonts with Postscript outlines,
this tag therefore references these fonts, as well as those
with TrueType outlines.
@since 1.3

"
      end

      attribute 1370626 "TYPE1_FONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Identify a font resource of type TYPE1.
Used to specify a Type1 font resource to the
{@link #createFont} method.
@since 1.5

"
      end

      classrelation 2916866 // name (<unidirectional association>)
	relation 2916866 --->
	  a role_name "name" protected
	    comment "
The logical name of this <code>Font</code>, as passed to the
constructor.
@since JDK1.0

@serial
@see #getName

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916866 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1370754 "style"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The style of this <code>Font</code>, as passed to the constructor.
This style can be PLAIN, BOLD, ITALIC, or BOLD+ITALIC.
@since JDK1.0

@serial
@see #getStyle()

"
      end

      attribute 1370882 "size"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The point size of this <code>Font</code>, rounded to integer.
@since JDK1.0

@serial
@see #getSize()

"
      end

      attribute 1371010 "pointSize"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The point size of this <code>Font</code> in <code>float</code>.

@serial
@see #getSize()
@see #getSize2D()

"
      end

      classrelation 2916994 // peer (<unidirectional association>)
	relation 2916994 --->
	  a role_name "peer" private
	    comment "
The platform specific font information.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2916994 // peer (<unidirectional association>)
	  b parent class_ref 865666 // FontPeer
      end

      attribute 1371138 "pData"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " native JDK1.1 font pointer"
      end

      attribute 1371266 "font2DHandle"
	private explicit_type "Font2DHandle"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1371394 "values"
	private explicit_type "AttributeValues"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1371522 "hasLayoutAttributes"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1371650 "createdFont"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the origin of a Font is a created font then this attribute
must be set on all derived fonts too.

"
      end

      attribute 1371778 "nonIdentityTx"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is true if the font transform is not identity.  It
is used to avoid unnecessary instantiation of an AffineTransform.

"
      end

      classrelation 2917122 // identityTx (<unidirectional association>)
	relation 2917122 --->
	  a role_name "identityTx" init_value " new AffineTransform()" class_relation const_relation private
	    comment "
A cached value used when a transform is required for internal
use.  This must not be exposed to callers since AffineTransform
is mutable.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2917122 // identityTx (<unidirectional association>)
	  b parent class_ref 381058 // AffineTransform
      end

      attribute 1371906 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4206021311591459213L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6194306 "getPeer"
	public return_type class_ref 865666 // FontPeer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the peer of this <code>Font</code>.
@return  the peer of the <code>Font</code>.
@since JDK1.1
@deprecated Font rendering is now platform independent.
"
      end

      operation 6194434 "getPeer_NoClientCode"
	package return_type class_ref 865666 // FontPeer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment " NOTE: This method is called by privileged threads.
       We implement this functionality in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 6194562 "getAttributeValues"
	private explicit_return_type "AttributeValues"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the AttributeValues object associated with this
font.  Most of the time, the internal object is null.
If required, it will be created from the 'standard'
state on the font.  Only non-default values will be
set in the AttributeValues object.

<p>Since the AttributeValues object is mutable, and it
is cached in the font, care must be taken to ensure that
it is not mutated.
"
      end

      operation 6194690 "getFont2D"
	private explicit_return_type "Font2D"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6194818 "Font"
	public explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> from the specified name, style and
point size.
<p>
The font name can be a font face name or a font family name.
It is used together with the style to find an appropriate font face.
When a font family name is specified, the style argument is used to
select the most appropriate face from the family. When a font face
name is specified, the face's style and the style argument are
merged to locate the best matching font from the same family.
For example if face name \"Arial Bold\" is specified with style
<code>Font.ITALIC</code>, the font system looks for a face in the
\"Arial\" family that is bold and italic, and may associate the font
instance with the physical font face \"Arial Bold Italic\".
The style argument is merged with the specified face's style, not
added or subtracted.
This means, specifying a bold face and a bold style does not
double-embolden the font, and specifying a bold face and a plain
style does not lighten the font.
<p>
If no face for the requested style can be found, the font system
may apply algorithmic styling to achieve the desired style.
For example, if <code>ITALIC</code> is requested, but no italic
face is available, glyphs from the plain face may be algorithmically
obliqued (slanted).
<p>
Font name lookup is case insensitive, using the case folding
rules of the US locale.
<p>
If the <code>name</code> parameter represents something other than a
logical font, i.e. is interpreted as a physical font face or family, and
this cannot be mapped by the implementation to a physical font or a
compatible alternative, then the font system will map the Font
instance to \"Dialog\", such that for example, the family as reported
by {@link #getFamily() getFamily} will be \"Dialog\".
<p>

@param name the font name.  This can be a font face name or a font
family name, and may represent either a logical font or a physical
font found in this {@code GraphicsEnvironment}.
The family names for logical fonts are: Dialog, DialogInput,
Monospaced, Serif, or SansSerif. Pre-defined String constants exist
for all of these names, for example, {@code DIALOG}. If {@code name} is
{@code null}, the <em>logical font name</em> of the new
{@code Font} as returned by {@code getName()} is set to
the name \"Default\".
@param style the style constant for the {@code Font}
The style argument is an integer bitmask that may
be {@code PLAIN}, or a bitwise union of {@code BOLD} and/or
{@code ITALIC} (for example, {@code ITALIC} or {@code BOLD|ITALIC}).
If the style argument does not conform to one of the expected
integer bitmasks then the style is set to {@code PLAIN}.
@param size the point size of the {@code Font}
@see GraphicsEnvironment#getAllFonts
@see GraphicsEnvironment#getAvailableFontFamilyNames
@since JDK1.0
"
      end

      operation 6194946 "Font"
	private explicit_return_type ""
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	  param in name "sizePts" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6195074 "Font"
	private explicit_return_type ""
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	  param in name "sizePts" explicit_type "float"
	  param inout name "created" explicit_type "boolean"
	  param inout name "handle" explicit_type "Font2DHandle"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This constructor is used by deriveFont when attributes is null "
      end

      operation 6195202 "Font"
	private explicit_return_type ""
	nparams 4
	  param inout name "fontFile" type class_ref 131970 // File
	  param in name "fontFormat" explicit_type "int"
	  param inout name "isCopy" explicit_type "boolean"
	  param inout name "tracker" explicit_type "CreatedFontTracker"
	nexceptions 1
	  exception class_ref 865794 // FontFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " used to implement Font.createFont "
      end

      operation 6195330 "Font"
	private explicit_return_type ""
	nparams 5
	  param inout name "values" explicit_type "AttributeValues"
	  param inout name "oldName" type class_ref 128130 // String
	  param in name "oldStyle" explicit_type "int"
	  param inout name "created" explicit_type "boolean"
	  param inout name "handle" explicit_type "Font2DHandle"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This constructor is used when one font is derived from another.
Fonts created from a stream will use the same font2D instance as the
parent. They can be distinguished because the \"created\" argument
will be \"true\". Since there is no way to recreate these fonts they
need to have the handle to the underlying font2D passed in.
\"created\" is also true when a special composite is referenced by the
handle for essentially the same reasons.
But when deriving a font in these cases two particular attributes
need special attention: family/face and style.
The \"composites\" in these cases need to be recreated with optimal
fonts for the new values of family and style.
For fonts created with createFont() these are treated differently.
JDK can often synthesise a different style (bold from plain
for example). For fonts created with \"createFont\" this is a reasonable
solution but its also possible (although rare) to derive a font with a
different family attribute. In this case JDK needs
to break the tie with the original Font2D and find a new Font.
The oldName and oldStyle are supplied so they can be compared with
what the Font2D and the values. To speed things along :
oldName == null will be interpreted as the name is unchanged.
oldStyle = -1 will be interpreted as the style is unchanged.
In these cases there is no need to interrogate \"values\".
"
      end

      operation 6195458 "Font"
	public explicit_return_type ""
	nparams 1
	  param inout name "attributes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends Attribute, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> with the specified attributes.
Only keys defined in {@link java.awt.font.TextAttribute TextAttribute}
are recognized.  In addition the FONT attribute is
 not recognized by this constructor
(see {@link #getAvailableAttributes}). Only attributes that have
values of valid types will affect the new <code>Font</code>.
<p>
If <code>attributes</code> is <code>null</code>, a new
<code>Font</code> is initialized with default values.
@see java.awt.font.TextAttribute
@param attributes the attributes to assign to the new
         <code>Font</code>, or <code>null</code>
"
      end

      operation 6195586 "Font"
	protected explicit_return_type ""
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> from the specified <code>font</code>.
This constructor is intended for use by subclasses.
@param font from which to create this <code>Font</code>.
@throws NullPointerException if <code>font</code> is null
@since 1.6
"
      end

      attribute 1372034 "RECOGNIZED_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " AttributeValues.MASK_ALL
        & ~AttributeValues.getMask(EFONT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Font recognizes all attributes except FONT.

"
      end

      attribute 1372162 "PRIMARY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        AttributeValues.getMask(EFAMILY, EWEIGHT, EWIDTH, EPOSTURE, ESIZE,
                                ETRANSFORM, ESUPERSCRIPT, ETRACKING)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "These attributes are considered primary by the FONT attribute.

"
      end

      attribute 1372290 "SECONDARY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        RECOGNIZED_MASK & ~PRIMARY_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "These attributes are considered secondary by the FONT attribute.

"
      end

      attribute 1372418 "LAYOUT_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        AttributeValues.getMask(ECHAR_REPLACEMENT, EFOREGROUND, EBACKGROUND,
                                EUNDERLINE, ESTRIKETHROUGH, ERUN_DIRECTION,
                                EBIDI_EMBEDDING, EJUSTIFICATION,
                                EINPUT_METHOD_HIGHLIGHT, EINPUT_METHOD_UNDERLINE,
                                ESWAP_COLORS, ENUMERIC_SHAPING, EKERNING,
                                ELIGATURES, ETRACKING, ESUPERSCRIPT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "These attributes are handled by layout.

"
      end

      attribute 1372546 "EXTRA_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "
            AttributeValues.getMask(ETRANSFORM, ESUPERSCRIPT, EWIDTH)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6195714 "initFromValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "values" explicit_type "AttributeValues"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the standard Font fields from the values object.
"
      end

      operation 6195842 "getFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "attributes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Attribute, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Font</code> appropriate to the attributes.
If <code>attributes</code>contains a <code>FONT</code> attribute
with a valid <code>Font</code> as its value, it will be
merged with any remaining attributes.  See
{@link java.awt.font.TextAttribute#FONT} for more
information.

@param attributes the attributes to assign to the new
         <code>Font</code>
@return a new <code>Font</code> created with the specified
         attributes
@throws NullPointerException if <code>attributes</code> is null.
@since 1.2
@see java.awt.font.TextAttribute
"
      end

      operation 6195970 "hasTempPermission"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used with the byte count tracker for fonts created from streams.
If a thread can create temp files anyway, no point in counting
font bytes.
"
      end

      operation 6196098 "createFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 2
	  param in name "fontFormat" explicit_type "int"
	  param inout name "fontStream" type class_ref 146434 // InputStream
	nexceptions 2
	  exception class_ref 865794 // FontFormatException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>Font</code> using the specified font type
and input data.  The new <code>Font</code> is
created with a point size of 1 and style {@link #PLAIN PLAIN}.
This base font can then be used with the <code>deriveFont</code>
methods in this class to derive new <code>Font</code> objects with
varying sizes, styles, transforms and font features.  This
method does not close the {@link InputStream}.
<p>
To make the <code>Font</code> available to Font constructors the
returned <code>Font</code> must be registered in the
<code>GraphicsEnviroment</code> by calling
{@link GraphicsEnvironment#registerFont(Font) registerFont(Font)}.
@param fontFormat the type of the <code>Font</code>, which is
{@link #TRUETYPE_FONT TRUETYPE_FONT} if a TrueType resource is specified.
or {@link #TYPE1_FONT TYPE1_FONT} if a Type 1 resource is specified.
@param fontStream an <code>InputStream</code> object representing the
input data for the font.
@return a new <code>Font</code> created with the specified font type.
@throws IllegalArgumentException if <code>fontFormat</code> is not
    <code>TRUETYPE_FONT</code>or<code>TYPE1_FONT</code>.
@throws FontFormatException if the <code>fontStream</code> data does
    not contain the required font tables for the specified format.
@throws IOException if the <code>fontStream</code>
    cannot be completely read.
@see GraphicsEnvironment#registerFont(Font)
@since 1.3
"
      end

      operation 6196226 "createFont0"
	class_operation private return_type class_ref 340354 // Font
	nparams 3
	  param in name "fontFormat" explicit_type "int"
	  param inout name "fontStream" type class_ref 146434 // InputStream
	  param inout name "tracker" explicit_type "CreatedFontTracker"
	nexceptions 2
	  exception class_ref 865794 // FontFormatException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6196354 "createFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 2
	  param in name "fontFormat" explicit_type "int"
	  param inout name "fontFile" type class_ref 131970 // File
	nexceptions 2
	  exception class_ref 865794 // FontFormatException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>Font</code> using the specified font type
and the specified font file.  The new <code>Font</code> is
created with a point size of 1 and style {@link #PLAIN PLAIN}.
This base font can then be used with the <code>deriveFont</code>
methods in this class to derive new <code>Font</code> objects with
varying sizes, styles, transforms and font features.
@param fontFormat the type of the <code>Font</code>, which is
{@link #TRUETYPE_FONT TRUETYPE_FONT} if a TrueType resource is
specified or {@link #TYPE1_FONT TYPE1_FONT} if a Type 1 resource is
specified.
So long as the returned font, or its derived fonts are referenced
the implementation may continue to access <code>fontFile</code>
to retrieve font data. Thus the results are undefined if the file
is changed, or becomes inaccessible.
<p>
To make the <code>Font</code> available to Font constructors the
returned <code>Font</code> must be registered in the
<code>GraphicsEnviroment</code> by calling
{@link GraphicsEnvironment#registerFont(Font) registerFont(Font)}.
@param fontFile a <code>File</code> object representing the
input data for the font.
@return a new <code>Font</code> created with the specified font type.
@throws IllegalArgumentException if <code>fontFormat</code> is not
    <code>TRUETYPE_FONT</code>or<code>TYPE1_FONT</code>.
@throws NullPointerException if <code>fontFile</code> is null.
@throws IOException if the <code>fontFile</code> cannot be read.
@throws FontFormatException if <code>fontFile</code> does
    not contain the required font tables for the specified format.
@throws SecurityException if the executing code does not have
permission to read from the file.
@see GraphicsEnvironment#registerFont(Font)
@since 1.5
"
      end

      operation 6196482 "getTransform"
	public return_type class_ref 381058 // AffineTransform
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the transform associated with this
<code>Font</code>.  This transform is not necessarily the one
used to construct the font.  If the font has algorithmic
superscripting or width adjustment, this will be incorporated
into the returned <code>AffineTransform</code>.
<p>
Typically, fonts will not be transformed.  Clients generally
should call {@link #isTransformed} first, and only call this
method if <code>isTransformed</code> returns true.

@return an {@link AffineTransform} object representing the
         transform attribute of this <code>Font</code> object.
"
      end

      attribute 1372674 "ssinfo"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " {
        0.0f,
        0.375f,
        0.625f,
        0.7916667f,
        0.9027778f,
        0.9768519f,
        1.0262346f,
        1.0591564f,
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " x = r^0 + r^1 + r^2... r^n
 rx = r^1 + r^2 + r^3... r^(n+1)
 x - rx = r^0 - r^(n+1)
 x (1 - r) = r^0 - r^(n+1)
 x = (r^0 - r^(n+1)) / (1 - r)
 x = (1 - r^(n+1)) / (1 - r)
 scale ratio is 2/3
 trans = 1/2 of ascent * x
 assume ascent is 3/4 of point size
"
      end

      operation 6196610 "getFamily"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the family name of this <code>Font</code>.

<p>The family name of a font is font specific. Two fonts such as
Helvetica Italic and Helvetica Bold have the same family name,
<i>Helvetica</i>, whereas their font face names are
<i>Helvetica Bold</i> and <i>Helvetica Italic</i>. The list of
available family names may be obtained by using the
{@link GraphicsEnvironment#getAvailableFontFamilyNames()} method.

<p>Use <code>getName</code> to get the logical name of the font.
Use <code>getFontName</code> to get the font face name of the font.
@return a <code>String</code> that is the family name of this
         <code>Font</code>.

@see #getName
@see #getFontName
@since JDK1.1
"
      end

      operation 6196738 "getFamily_NoClientCode"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method is called by privileged threads.
       We implement this functionality in a package-private
       method to insure that it cannot be overridden by client
       subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 6196866 "getFamily"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the family name of this <code>Font</code>, localized for
the specified locale.

<p>The family name of a font is font specific. Two fonts such as
Helvetica Italic and Helvetica Bold have the same family name,
<i>Helvetica</i>, whereas their font face names are
<i>Helvetica Bold</i> and <i>Helvetica Italic</i>. The list of
available family names may be obtained by using the
{@link GraphicsEnvironment#getAvailableFontFamilyNames()} method.

<p>Use <code>getFontName</code> to get the font face name of the font.
@param l locale for which to get the family name
@return a <code>String</code> representing the family name of the
         font, localized for the specified locale.
@see #getFontName
@see java.util.Locale
@since 1.2
"
      end

      operation 6196994 "getPSName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the postscript name of this <code>Font</code>.
Use <code>getFamily</code> to get the family name of the font.
Use <code>getFontName</code> to get the font face name of the font.
@return a <code>String</code> representing the postscript name of
         this <code>Font</code>.
@since 1.2
"
      end

      operation 6197122 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the logical name of this <code>Font</code>.
Use <code>getFamily</code> to get the family name of the font.
Use <code>getFontName</code> to get the font face name of the font.
@return a <code>String</code> representing the logical name of
         this <code>Font</code>.
@see #getFamily
@see #getFontName
@since JDK1.0
"
      end

      operation 6197250 "getFontName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the font face name of this <code>Font</code>.  For example,
Helvetica Bold could be returned as a font face name.
Use <code>getFamily</code> to get the family name of the font.
Use <code>getName</code> to get the logical name of the font.
@return a <code>String</code> representing the font face name of
         this <code>Font</code>.
@see #getFamily
@see #getName
@since 1.2
"
      end

      operation 6197378 "getFontName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the font face name of the <code>Font</code>, localized
for the specified locale. For example, Helvetica Fett could be
returned as the font face name.
Use <code>getFamily</code> to get the family name of the font.
@param l a locale for which to get the font face name
@return a <code>String</code> representing the font face name,
         localized for the specified locale.
@see #getFamily
@see java.util.Locale
"
      end

      operation 6197506 "getStyle"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the style of this <code>Font</code>.  The style can be
PLAIN, BOLD, ITALIC, or BOLD+ITALIC.
@return the style of this <code>Font</code>
@see #isPlain
@see #isBold
@see #isItalic
@since JDK1.0
"
      end

      operation 6197634 "getSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the point size of this <code>Font</code>, rounded to
an integer.
Most users are familiar with the idea of using <i>point size</i> to
specify the size of glyphs in a font. This point size defines a
measurement between the baseline of one line to the baseline of the
following line in a single spaced text document. The point size is
based on <i>typographic points</i>, approximately 1/72 of an inch.
<p>
The Java(tm)2D API adopts the convention that one point is
equivalent to one unit in user coordinates.  When using a
normalized transform for converting user space coordinates to
device space coordinates 72 user
space units equal 1 inch in device space.  In this case one point
is 1/72 of an inch.
@return the point size of this <code>Font</code> in 1/72 of an
         inch units.
@see #getSize2D
@see GraphicsConfiguration#getDefaultTransform
@see GraphicsConfiguration#getNormalizingTransform
@since JDK1.0
"
      end

      operation 6197762 "getSize2D"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the point size of this <code>Font</code> in
<code>float</code> value.
@return the point size of this <code>Font</code> as a
<code>float</code> value.
@see #getSize
@since 1.2
"
      end

      operation 6197890 "isPlain"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> object's style is
PLAIN.
@return    <code>true</code> if this <code>Font</code> has a
           PLAIN style;
           <code>false</code> otherwise.
@see       java.awt.Font#getStyle
@since     JDK1.0
"
      end

      operation 6198018 "isBold"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> object's style is
BOLD.
@return    <code>true</code> if this <code>Font</code> object's
           style is BOLD;
           <code>false</code> otherwise.
@see       java.awt.Font#getStyle
@since     JDK1.0
"
      end

      operation 6198146 "isItalic"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> object's style is
ITALIC.
@return    <code>true</code> if this <code>Font</code> object's
           style is ITALIC;
           <code>false</code> otherwise.
@see       java.awt.Font#getStyle
@since     JDK1.0
"
      end

      operation 6198274 "isTransformed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> object has a
transform that affects its size in addition to the Size
attribute.
@return  <code>true</code> if this <code>Font</code> object
         has a non-identity AffineTransform attribute.
         <code>false</code> otherwise.
@see     java.awt.Font#getTransform
@since   1.4
"
      end

      operation 6198402 "hasLayoutAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this Font contains attributes that require extra
layout processing.
@return true if the font has layout attributes
@since 1.6
"
      end

      operation 6198530 "getFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Font</code> object from the system properties list.
<code>nm</code> is treated as the name of a system property to be
obtained.  The <code>String</code> value of this property is then
interpreted as a <code>Font</code> object according to the
specification of <code>Font.decode(String)</code>
If the specified property is not found, or the executing code does
not have permission to read the property, null is returned instead.

@param nm the property name
@return a <code>Font</code> object that the property name
         describes, or null if no such property exists.
@throws NullPointerException if nm is null.
@since 1.2
@see #decode(String)
"
      end

      operation 6198658 "decode"
	class_operation public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Font</code> that the <code>str</code>
argument describes.
To ensure that this method returns the desired Font,
format the <code>str</code> parameter in
one of these ways

<ul>
<li><em>fontname-style-pointsize</em>
<li><em>fontname-pointsize</em>
<li><em>fontname-style</em>
<li><em>fontname</em>
<li><em>fontname style pointsize</em>
<li><em>fontname pointsize</em>
<li><em>fontname style</em>
<li><em>fontname</em>
</ul>
in which <i>style</i> is one of the four
case-insensitive strings:
<code>\"PLAIN\"</code>, <code>\"BOLD\"</code>, <code>\"BOLDITALIC\"</code>, or
<code>\"ITALIC\"</code>, and pointsize is a positive decimal integer
representation of the point size.
For example, if you want a font that is Arial, bold, with
a point size of 18, you would call this method with:
\"Arial-BOLD-18\".
This is equivalent to calling the Font constructor :
<code>new Font(\"Arial\", Font.BOLD, 18);</code>
and the values are interpreted as specified by that constructor.
<p>
A valid trailing decimal field is always interpreted as the pointsize.
Therefore a fontname containing a trailing decimal value should not
be used in the fontname only form.
<p>
If a style name field is not one of the valid style strings, it is
interpreted as part of the font name, and the default style is used.
<p>
Only one of ' ' or '-' may be used to separate fields in the input.
The identified separator is the one closest to the end of the string
which separates a valid pointsize, or a valid style name from
the rest of the string.
Null (empty) pointsize and style fields are treated
as valid fields with the default value for that field.
<p>
Some font names may include the separator characters ' ' or '-'.
If <code>str</code> is not formed with 3 components, e.g. such that
<code>style</code> or <code>pointsize</code> fields are not present in
<code>str</code>, and <code>fontname</code> also contains a
character determined to be the separator character
then these characters where they appear as intended to be part of
<code>fontname</code> may instead be interpreted as separators
so the font name may not be properly recognised.

<p>
The default size is 12 and the default style is PLAIN.
If <code>str</code> does not specify a valid size, the returned
<code>Font</code> has a size of 12.  If <code>str</code> does not
specify a valid style, the returned Font has a style of PLAIN.
If you do not specify a valid font name in
the <code>str</code> argument, this method will return
a font with the family name \"Dialog\".
To determine what font family names are available on
your system, use the
{@link GraphicsEnvironment#getAvailableFontFamilyNames()} method.
If <code>str</code> is <code>null</code>, a new <code>Font</code>
is returned with the family name \"Dialog\", a size of 12 and a
PLAIN style.
@param str the name of the font, or <code>null</code>
@return the <code>Font</code> object that <code>str</code>
         describes, or a new default <code>Font</code> if
         <code>str</code> is <code>null</code>.
@see #getFamily
@since JDK1.1
"
      end

      operation 6198786 "getFont"
	class_operation public return_type class_ref 340354 // Font
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the specified <code>Font</code> from the system properties
list.  As in the <code>getProperty</code> method of
<code>System</code>, the first
argument is treated as the name of a system property to be
obtained.  The <code>String</code> value of this property is then
interpreted as a <code>Font</code> object.
<p>
The property value should be one of the forms accepted by
<code>Font.decode(String)</code>
If the specified property is not found, or the executing code does not
have permission to read the property, the <code>font</code>
argument is returned instead.
@param nm the case-insensitive property name
@param font a default <code>Font</code> to return if property
         <code>nm</code> is not defined
@return    the <code>Font</code> value of the property.
@throws NullPointerException if nm is null.
@see #decode(String)
"
      end

      attribute 1372802 "hash"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6198914 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this <code>Font</code>.
@return     a hashcode value for this <code>Font</code>.
@since      JDK1.0
"
      end

      operation 6199042 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>Font</code> object to the specified
<code>Object</code>.
@param obj the <code>Object</code> to compare
@return <code>true</code> if the objects are the same
         or if the argument is a <code>Font</code> object
         describing the same font as this object;
         <code>false</code> otherwise.
@since JDK1.0
"
      end

      operation 6199170 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this <code>Font</code> object to a <code>String</code>
representation.
@return     a <code>String</code> representation of this
         <code>Font</code> object.
@since      JDK1.0

 NOTE: This method may be called by privileged threads.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      attribute 1372930 "fontSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " toString()
 Serialization support.  A <code>readObject</code>
 method is neccessary because the constructor creates
 the font's peer, and we can't serialize the peer.
 Similarly the computed font \"family\" may be different
 at <code>readObject</code> time than at
 <code>writeObject</code> time.  An integer version is
 written so that future versions of this class will be
 able to recognize serialized output from this one.


The <code>Font</code> Serializable Data Form.

@serial

"
      end

      operation 6199298 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to a stream.

@param s the <code>ObjectOutputStream</code> to write
@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see #readObject(java.io.ObjectInputStream)
"
      end

      operation 6199426 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@serial
@see #writeObject(java.io.ObjectOutputStream)
"
      end

      operation 6199554 "getNumGlyphs"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of glyphs in this <code>Font</code>. Glyph codes
for this <code>Font</code> range from 0 to
<code>getNumGlyphs()</code> - 1.
@return the number of glyphs in this <code>Font</code>.
@since 1.2
"
      end

      operation 6199682 "getMissingGlyphCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the glyphCode which is used when this <code>Font</code>
does not have a glyph for a specified unicode code point.
@return the glyphCode of this <code>Font</code>.
@since 1.2
"
      end

      operation 6199810 "getBaselineFor"
	public explicit_return_type "byte"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the baseline appropriate for displaying this character.
<p>
Large fonts can support different writing systems, and each system can
use a different baseline.
The character argument determines the writing system to use. Clients
should not assume all characters use the same baseline.

@param c a character used to identify the writing system
@return the baseline appropriate for the specified character.
@see LineMetrics#getBaselineOffsets
@see #ROMAN_BASELINE
@see #CENTER_BASELINE
@see #HANGING_BASELINE
@since 1.2
"
      end

      operation 6199938 "getAttributes"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<TextAttribute,?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of font attributes available in this
<code>Font</code>.  Attributes include things like ligatures and
glyph substitution.
@return the attributes map of this <code>Font</code>.
"
      end

      operation 6200066 "getAvailableAttributes"
	public return_type class_ref 866050 // Attribute
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the keys of all the attributes supported by this
<code>Font</code>.  These attributes can be used to derive other
fonts.
@return an array containing the keys of all the attributes
         supported by this <code>Font</code>.
@since 1.2
"
      end

      operation 6200194 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 2
	  param in name "style" explicit_type "int"
	  param in name "size" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating this
<code>Font</code> object and applying a new style and size.
@param style the style for the new <code>Font</code>
@param size the size for the new <code>Font</code>
@return a new <code>Font</code> object.
@since 1.2
"
      end

      operation 6200322 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "trans" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating this
<code>Font</code> object and applying a new style and transform.
@param style the style for the new <code>Font</code>
@param trans the <code>AffineTransform</code> associated with the
new <code>Font</code>
@return a new <code>Font</code> object.
@throws IllegalArgumentException if <code>trans</code> is
        <code>null</code>
@since 1.2
"
      end

      operation 6200450 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 1
	  param in name "size" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating the current
<code>Font</code> object and applying a new size to it.
@param size the size for the new <code>Font</code>.
@return a new <code>Font</code> object.
@since 1.2
"
      end

      operation 6200578 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "trans" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating the current
<code>Font</code> object and applying a new transform to it.
@param trans the <code>AffineTransform</code> associated with the
new <code>Font</code>
@return a new <code>Font</code> object.
@throws IllegalArgumentException if <code>trans</code> is
        <code>null</code>
@since 1.2
"
      end

      operation 6200706 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 1
	  param in name "style" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating the current
<code>Font</code> object and applying a new style to it.
@param style the style for the new <code>Font</code>
@return a new <code>Font</code> object.
@since 1.2
"
      end

      operation 6200834 "deriveFont"
	public return_type class_ref 340354 // Font
	nparams 1
	  param inout name "attributes" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Attribute, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Font</code> object by replicating the current
<code>Font</code> object and applying a new set of font attributes
to it.

@param attributes a map of attributes enabled for the new
<code>Font</code>
@return a new <code>Font</code> object.
@since 1.2
"
      end

      operation 6200962 "canDisplay"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this <code>Font</code> has a glyph for the specified
character.

<p> <b>Note:</b> This method cannot handle <a
href=\"../../java/lang/Character.html#supplementary\"> supplementary
characters</a>. To support all Unicode characters, including
supplementary characters, use the {@link #canDisplay(int)}
method or <code>canDisplayUpTo</code> methods.

@param c the character for which a glyph is needed
@return <code>true</code> if this <code>Font</code> has a glyph for this
         character; <code>false</code> otherwise.
@since 1.2
"
      end

      operation 6201090 "canDisplay"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this <code>Font</code> has a glyph for the specified
character.

@param codePoint the character (Unicode code point) for which a glyph
       is needed.
@return <code>true</code> if this <code>Font</code> has a glyph for the
         character; <code>false</code> otherwise.
@throws IllegalArgumentException if the code point is not a valid Unicode
         code point.
@see Character#isValidCodePoint(int)
@since 1.5
"
      end

      operation 6201218 "canDisplayUpTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> can display a
specified <code>String</code>.  For strings with Unicode encoding,
it is important to know if a particular font can display the
string. This method returns an offset into the <code>String</code>
<code>str</code> which is the first character this
<code>Font</code> cannot display without using the missing glyph
code. If the <code>Font</code> can display all characters, -1 is
returned.
@param str a <code>String</code> object
@return an offset into <code>str</code> that points
         to the first character in <code>str</code> that this
         <code>Font</code> cannot display; or <code>-1</code> if
         this <code>Font</code> can display all characters in
         <code>str</code>.
@since 1.2
"
      end

      operation 6201346 "canDisplayUpTo"
	public explicit_return_type "int"
	nparams 3
	  param inout name "text" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> can display
the characters in the specified <code>text</code>
starting at <code>start</code> and ending at
<code>limit</code>.  This method is a convenience overload.
@param text the specified array of <code>char</code> values
@param start the specified starting offset (in
             <code>char</code>s) into the specified array of
             <code>char</code> values
@param limit the specified ending offset (in
             <code>char</code>s) into the specified array of
             <code>char</code> values
@return an offset into <code>text</code> that points
         to the first character in <code>text</code> that this
         <code>Font</code> cannot display; or <code>-1</code> if
         this <code>Font</code> can display all characters in
         <code>text</code>.
@since 1.2
"
      end

      operation 6201474 "canDisplayUpTo"
	public explicit_return_type "int"
	nparams 3
	  param inout name "iter" type class_ref 429314 // CharacterIterator
	  param in name "start" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this <code>Font</code> can display the
text specified by the <code>iter</code> starting at
<code>start</code> and ending at <code>limit</code>.

@param iter  a {@link CharacterIterator} object
@param start the specified starting offset into the specified
             <code>CharacterIterator</code>.
@param limit the specified ending offset into the specified
             <code>CharacterIterator</code>.
@return an offset into <code>iter</code> that points
         to the first character in <code>iter</code> that this
         <code>Font</code> cannot display; or <code>-1</code> if
         this <code>Font</code> can display all characters in
         <code>iter</code>.
@since 1.2
"
      end

      operation 6201602 "getItalicAngle"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the italic angle of this <code>Font</code>.  The italic angle
is the inverse slope of the caret which best matches the posture of this
<code>Font</code>.
@see TextAttribute#POSTURE
@return the angle of the ITALIC style of this <code>Font</code>.
"
      end

      operation 6201730 "getItalicAngle"
	private explicit_return_type "float"
	nparams 1
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The FRC hints don't affect the value of the italic angle but
we need to pass them in to look up a strike.
If we can pass in ones already being used it can prevent an extra
strike from being allocated. Note that since italic angle is
a property of the font, the font transform is needed not the
device transform. Finally, this is private but the only caller of this
in the JDK - and the only likely caller - is in this same class.
"
      end

      operation 6201858 "hasUniformLineMetrics"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether or not this <code>Font</code> has uniform
line metrics.  A logical <code>Font</code> might be a
composite font, which means that it is composed of different
physical fonts to cover different code ranges.  Each of these
fonts might have different <code>LineMetrics</code>.  If the
logical <code>Font</code> is a single
font then the metrics would be uniform.
@return <code>true</code> if this <code>Font</code> has
uniform line metrics; <code>false</code> otherwise.
"
      end

      classrelation 2917250 // flmref (<unidirectional association>)
	relation 2917250 --->
	  a role_name "flmref" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<FontLineMetrics> ${name}${value};
"
	    classrelation_ref 2917250 // flmref (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      operation 6201986 "defaultLineMetrics"
	private explicit_return_type "FontLineMetrics"
	nparams 1
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6202114 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link LineMetrics} object created with the specified
<code>String</code> and {@link FontRenderContext}.
@param str the specified <code>String</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>LineMetrics</code> object created with the
specified <code>String</code> and {@link FontRenderContext}.
"
      end

      operation 6202242 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "str" type class_ref 128130 // String
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>LineMetrics</code> object created with the
specified arguments.
@param str the specified <code>String</code>
@param beginIndex the initial offset of <code>str</code>
@param limit the end offset of <code>str</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>LineMetrics</code> object created with the
specified arguments.
"
      end

      operation 6202370 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>LineMetrics</code> object created with the
specified arguments.
@param chars an array of characters
@param beginIndex the initial offset of <code>chars</code>
@param limit the end offset of <code>chars</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>LineMetrics</code> object created with the
specified arguments.
"
      end

      operation 6202498 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "ci" type class_ref 429314 // CharacterIterator
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>LineMetrics</code> object created with the
specified arguments.
@param ci the specified <code>CharacterIterator</code>
@param beginIndex the initial offset in <code>ci</code>
@param limit the end offset of <code>ci</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>LineMetrics</code> object created with the
specified arguments.
"
      end

      operation 6202626 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the logical bounds of the specified <code>String</code> in
the specified <code>FontRenderContext</code>.  The logical bounds
contains the origin, ascent, advance, and height, which includes
the leading.  The logical bounds does not always enclose all the
text.  For example, in some languages and in some fonts, accent
marks can be positioned above the ascent or below the descent.
To obtain a visual bounding box, which encloses all the text,
use the {@link TextLayout#getBounds() getBounds} method of
<code>TextLayout</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.Font class notes}).
@param str the specified <code>String</code>
@param frc the specified <code>FontRenderContext</code>
@return a {@link Rectangle2D} that is the bounding box of the
specified <code>String</code> in the specified
<code>FontRenderContext</code>.
@see FontRenderContext
@see Font#createGlyphVector
@since 1.2
"
      end

      operation 6202754 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "str" type class_ref 128130 // String
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the logical bounds of the specified <code>String</code> in
the specified <code>FontRenderContext</code>.  The logical bounds
contains the origin, ascent, advance, and height, which includes
the leading.  The logical bounds does not always enclose all the
text.  For example, in some languages and in some fonts, accent
marks can be positioned above the ascent or below the descent.
To obtain a visual bounding box, which encloses all the text,
use the {@link TextLayout#getBounds() getBounds} method of
<code>TextLayout</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.Font class notes}).
@param str the specified <code>String</code>
@param beginIndex the initial offset of <code>str</code>
@param limit the end offset of <code>str</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>Rectangle2D</code> that is the bounding box of the
specified <code>String</code> in the specified
<code>FontRenderContext</code>.
@throws IndexOutOfBoundsException if <code>beginIndex</code> is
        less than zero, or <code>limit</code> is greater than the
        length of <code>str</code>, or <code>beginIndex</code>
        is greater than <code>limit</code>.
@see FontRenderContext
@see Font#createGlyphVector
@since 1.2
"
      end

      operation 6202882 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the logical bounds of the specified array of characters
in the specified <code>FontRenderContext</code>.  The logical
bounds contains the origin, ascent, advance, and height, which
includes the leading.  The logical bounds does not always enclose
all the text.  For example, in some languages and in some fonts,
accent marks can be positioned above the ascent or below the
descent.  To obtain a visual bounding box, which encloses all the
text, use the {@link TextLayout#getBounds() getBounds} method of
<code>TextLayout</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.Font class notes}).
@param chars an array of characters
@param beginIndex the initial offset in the array of
characters
@param limit the end offset in the array of characters
@param frc the specified <code>FontRenderContext</code>
@return a <code>Rectangle2D</code> that is the bounding box of the
specified array of characters in the specified
<code>FontRenderContext</code>.
@throws IndexOutOfBoundsException if <code>beginIndex</code> is
        less than zero, or <code>limit</code> is greater than the
        length of <code>chars</code>, or <code>beginIndex</code>
        is greater than <code>limit</code>.
@see FontRenderContext
@see Font#createGlyphVector
@since 1.2
"
      end

      operation 6203010 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "ci" type class_ref 429314 // CharacterIterator
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the logical bounds of the characters indexed in the
specified {@link CharacterIterator} in the
specified <code>FontRenderContext</code>.  The logical bounds
contains the origin, ascent, advance, and height, which includes
the leading.  The logical bounds does not always enclose all the
text.  For example, in some languages and in some fonts, accent
marks can be positioned above the ascent or below the descent.
To obtain a visual bounding box, which encloses all the text,
use the {@link TextLayout#getBounds() getBounds} method of
<code>TextLayout</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.Font class notes}).
@param ci the specified <code>CharacterIterator</code>
@param beginIndex the initial offset in <code>ci</code>
@param limit the end offset in <code>ci</code>
@param frc the specified <code>FontRenderContext</code>
@return a <code>Rectangle2D</code> that is the bounding box of the
characters indexed in the specified <code>CharacterIterator</code>
in the specified <code>FontRenderContext</code>.
@see FontRenderContext
@see Font#createGlyphVector
@since 1.2
@throws IndexOutOfBoundsException if <code>beginIndex</code> is
        less than the start index of <code>ci</code>, or
        <code>limit</code> is greater than the end index of
        <code>ci</code>, or <code>beginIndex</code> is greater
        than <code>limit</code>
"
      end

      operation 6203138 "getMaxCharBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 1
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds for the character with the maximum
bounds as defined in the specified <code>FontRenderContext</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.Font class notes}).
@param frc the specified <code>FontRenderContext</code>
@return a <code>Rectangle2D</code> that is the bounding box
for the character with the maximum bounds.
"
      end

      operation 6203266 "createGlyphVector"
	public return_type class_ref 866434 // GlyphVector
	nparams 2
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link java.awt.font.GlyphVector GlyphVector} by
mapping characters to glyphs one-to-one based on the
Unicode cmap in this <code>Font</code>.  This method does no other
processing besides the mapping of glyphs to characters.  This
means that this method is not useful for some scripts, such
as Arabic, Hebrew, Thai, and Indic, that require reordering,
shaping, or ligature substitution.
@param frc the specified <code>FontRenderContext</code>
@param str the specified <code>String</code>
@return a new <code>GlyphVector</code> created with the
specified <code>String</code> and the specified
<code>FontRenderContext</code>.
"
      end

      operation 6203394 "createGlyphVector"
	public return_type class_ref 866434 // GlyphVector
	nparams 2
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link java.awt.font.GlyphVector GlyphVector} by
mapping characters to glyphs one-to-one based on the
Unicode cmap in this <code>Font</code>.  This method does no other
processing besides the mapping of glyphs to characters.  This
means that this method is not useful for some scripts, such
as Arabic, Hebrew, Thai, and Indic, that require reordering,
shaping, or ligature substitution.
@param frc the specified <code>FontRenderContext</code>
@param chars the specified array of characters
@return a new <code>GlyphVector</code> created with the
specified array of characters and the specified
<code>FontRenderContext</code>.
"
      end

      operation 6203522 "createGlyphVector"
	public return_type class_ref 866434 // GlyphVector
	nparams 2
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	  param inout name "ci" type class_ref 429314 // CharacterIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link java.awt.font.GlyphVector GlyphVector} by
mapping the specified characters to glyphs one-to-one based on the
Unicode cmap in this <code>Font</code>.  This method does no other
processing besides the mapping of glyphs to characters.  This
means that this method is not useful for some scripts, such
as Arabic, Hebrew, Thai, and Indic, that require reordering,
shaping, or ligature substitution.
@param frc the specified <code>FontRenderContext</code>
@param ci the specified <code>CharacterIterator</code>
@return a new <code>GlyphVector</code> created with the
specified <code>CharacterIterator</code> and the specified
<code>FontRenderContext</code>.
"
      end

      operation 6203650 "createGlyphVector"
	public return_type class_ref 866434 // GlyphVector
	nparams 2
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	  param inout name "glyphCodes" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link java.awt.font.GlyphVector GlyphVector} by
mapping characters to glyphs one-to-one based on the
Unicode cmap in this <code>Font</code>.  This method does no other
processing besides the mapping of glyphs to characters.  This
means that this method is not useful for some scripts, such
as Arabic, Hebrew, Thai, and Indic, that require reordering,
shaping, or ligature substitution.
@param frc the specified <code>FontRenderContext</code>
@param glyphCodes the specified integer array
@return a new <code>GlyphVector</code> created with the
specified integer array and the specified
<code>FontRenderContext</code>.
"
      end

      operation 6203778 "layoutGlyphVector"
	public return_type class_ref 866434 // GlyphVector
	nparams 5
	  param inout name "frc" type class_ref 866178 // FontRenderContext
	  param inout name "text" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param in name "flags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>GlyphVector</code> object, performing full
layout of the text if possible.  Full layout is required for
complex text, such as Arabic or Hindi.  Support for different
scripts depends on the font and implementation.
<p>
Layout requires bidi analysis, as performed by
<code>Bidi</code>, and should only be performed on text that
has a uniform direction.  The direction is indicated in the
flags parameter,by using LAYOUT_RIGHT_TO_LEFT to indicate a
right-to-left (Arabic and Hebrew) run direction, or
LAYOUT_LEFT_TO_RIGHT to indicate a left-to-right (English)
run direction.
<p>
In addition, some operations, such as Arabic shaping, require
context, so that the characters at the start and limit can have
the proper shapes.  Sometimes the data in the buffer outside
the provided range does not have valid data.  The values
LAYOUT_NO_START_CONTEXT and LAYOUT_NO_LIMIT_CONTEXT can be
added to the flags parameter to indicate that the text before
start, or after limit, respectively, should not be examined
for context.
<p>
All other values for the flags parameter are reserved.

@param frc the specified <code>FontRenderContext</code>
@param text the text to layout
@param start the start of the text to use for the <code>GlyphVector</code>
@param limit the limit of the text to use for the <code>GlyphVector</code>
@param flags control flags as described above
@return a new <code>GlyphVector</code> representing the text between
start and limit, with glyphs chosen and positioned so as to best represent
the text
@throws ArrayIndexOutOfBoundsException if start or limit is
out of bounds
@see java.text.Bidi
@see #LAYOUT_LEFT_TO_RIGHT
@see #LAYOUT_RIGHT_TO_LEFT
@see #LAYOUT_NO_START_CONTEXT
@see #LAYOUT_NO_LIMIT_CONTEXT
@since 1.4
"
      end

      attribute 1373058 "LAYOUT_LEFT_TO_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag to layoutGlyphVector indicating that text is left-to-right as
determined by Bidi analysis.

"
      end

      attribute 1373186 "LAYOUT_RIGHT_TO_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag to layoutGlyphVector indicating that text is right-to-left as
determined by Bidi analysis.

"
      end

      attribute 1373314 "LAYOUT_NO_START_CONTEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag to layoutGlyphVector indicating that text in the char array
before the indicated start should not be examined.

"
      end

      attribute 1373442 "LAYOUT_NO_LIMIT_CONTEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A flag to layoutGlyphVector indicating that text in the char array
after the indicated limit should not be examined.

"
      end

      operation 6203906 "applyTransform"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "trans" type class_ref 381058 // AffineTransform
	  param inout name "values" explicit_type "AttributeValues"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6204034 "applyStyle"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "style" explicit_type "int"
	  param inout name "values" explicit_type "AttributeValues"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6204162 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end
    end

    class 340482 "MenuComponent"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The abstract class <code>MenuComponent</code> is the superclass
of all menu-related components. In this respect, the class
<code>MenuComponent</code> is analogous to the abstract superclass
<code>Component</code> for AWT components.
<p>
Menu components receive and process AWT events, just as components do,
through the method <code>processEvent</code>.

@author      Arthur van Hoff
@since       JDK1.0
"
      classrelation 2894978 // <realization>
	relation 2894978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2894978 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      extra_member 147970 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2895106 // peer (<unidirectional association>)
	relation 2895106 --->
	  a role_name "peer" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895106 // peer (<unidirectional association>)
	  b parent class_ref 859522 // MenuComponentPeer
      end

      classrelation 2895234 // parent (<unidirectional association>)
	relation 2895234 --->
	  a role_name "parent" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895234 // parent (<unidirectional association>)
	  b parent class_ref 340226 // MenuContainer
      end

      attribute 1341570 "appContext"
	package explicit_type "AppContext"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>AppContext</code> of the <code>MenuComponent</code>.
This is set in the constructor and never changes.

"
      end

      classrelation 2895362 // font (<unidirectional association>)
	relation 2895362 --->
	  a role_name "font" volatile package
	    comment "
The menu component's font. This value can be
<code>null</code> at which point a default will be used.
This defaults to <code>null</code>.

@serial
@see #setFont(Font)
@see #getFont()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895362 // font (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      classrelation 2895490 // name (<unidirectional association>)
	relation 2895490 --->
	  a role_name "name" private
	    comment "
The menu component's name, which defaults to <code>null</code>.
@serial
@see #getName()
@see #setName(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895490 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1341698 "nameExplicitlySet"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A variable to indicate whether a name is explicitly set.
If <code>true</code> the name will be set explicitly.
This defaults to <code>false</code>.
@serial
@see #setName(String)

"
      end

      attribute 1341826 "newEventsOnly"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Defaults to <code>false</code>.
@serial
@see #dispatchEvent(AWTEvent)

"
      end

      classrelation 2895618 // acc (<unidirectional association>)
	relation 2895618 --->
	  a role_name "acc" init_value "
            AccessController.getContext()" volatile private
	    comment "
The menu's AccessControlContext.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895618 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 6113282 "getAccessControlContext"
	package return_type class_ref 129154 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the acc this menu component was constructed with.
"
      end

      classrelation 2895746 // actionListenerK (<unidirectional association>)
	relation 2895746 --->
	  a role_name "actionListenerK" init_value " Component.actionListenerK" class_relation const_relation package
	    comment "
Internal constants for serialization.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895746 // actionListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2895874 // itemListenerK (<unidirectional association>)
	relation 2895874 --->
	  a role_name "itemListenerK" init_value " Component.itemListenerK" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2895874 // itemListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1341954 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4536902356223894379L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 148098 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setMenuComponentAccessor(
            new AWTAccessor.MenuComponentAccessor() {
                public AppContext getAppContext(MenuComponent menuComp) {
                    return menuComp.appContext;
                }
                public void setAppContext(MenuComponent menuComp,
                                          AppContext appContext) {
                    menuComp.appContext = appContext;
                }
                public MenuContainer getParent(MenuComponent menuComp) {
                    return menuComp.parent;
                }
                public Font getFont_NoClientCode(MenuComponent menuComp) {
                    return menuComp.getFont_NoClientCode();
                }
                @SuppressWarnings(\"unchecked\")
                public <T extends MenuComponentPeer> T getPeer(MenuComponent menuComp) {
                    return (T) menuComp.peer;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6113410 "MenuComponent"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>MenuComponent</code>.
@exception HeadlessException if
   <code>GraphicsEnvironment.isHeadless</code>
   returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6113538 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this <code>MenuComponent</code>.
Called by <code>getName</code> when the name is <code>null</code>.
@return a name for this <code>MenuComponent</code>
"
      end

      operation 6113666 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the menu component.
@return        the name of the menu component
@see           java.awt.MenuComponent#setName(java.lang.String)
@since         JDK1.1
"
      end

      operation 6113794 "setName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the component to the specified string.
@param         name    the name of the menu component
@see           java.awt.MenuComponent#getName
@since         JDK1.1
"
      end

      operation 6113922 "getParent"
	public return_type class_ref 340226 // MenuContainer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent container for this menu component.
@return    the menu component containing this menu component,
                or <code>null</code> if this menu component
                is the outermost component, the menu bar itself
"
      end

      operation 6114050 "getParent_NoClientCode"
	package return_type class_ref 340226 // MenuContainer
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       This functionality is implemented in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 6114178 "getPeer"
	public return_type class_ref 859522 // MenuComponentPeer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
programs should not directly manipulate peers.
"
      end

      operation 6114306 "getFont"
	public return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the font used for this menu component.
@return   the font used in this menu component, if there is one;
                 <code>null</code> otherwise
@see     java.awt.MenuComponent#setFont
"
      end

      operation 6114434 "getFont_NoClientCode"
	package return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       This functionality is implemented in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 6114562 "setFont"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFont_NoClientCode()

Sets the font to be used for this menu component to the specified
font. This font is also used by all subcomponents of this menu
component, unless those subcomponents specify a different font.
<p>
Some platforms may not support setting of all font attributes
of a menu component; in such cases, calling <code>setFont</code>
will have no effect on the unsupported font attributes of this
menu component.  Unless subcomponents of this menu component
specify a different font, this font will be used by those
subcomponents if supported by the underlying platform.

@param     f   the font to be set
@see       #getFont
@see       Font#getAttributes
@see       java.awt.font.TextAttribute
"
      end

      operation 6114690 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu component's peer.  The peer allows us to modify the
appearance of the menu component without changing the functionality of
the menu component.
"
      end

      operation 6114818 "postEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "evt" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Posts the specified event to the menu.
This method is part of the Java&nbsp;1.0 event system
and it is maintained only for backwards compatibility.
Its use is discouraged, and it may not be supported
in the future.
@param evt the event which is to take place
@deprecated As of JDK version 1.1, replaced by {@link
#dispatchEvent(AWTEvent) dispatchEvent}.
"
      end

      operation 6114946 "dispatchEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delivers an event to this component or one of its sub components.
@param e the event
"
      end

      operation 6115074 "dispatchEventImpl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6115202 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6115330 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events occurring on this menu component.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e the event
@since JDK1.1
"
      end

      operation 6115458 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this
<code>MenuComponent</code>. This method is intended to be used
only for debugging purposes, and the content and format of the
returned string may vary between implementations. The returned
string may be empty but may not be <code>null</code>.

@return     the parameter string of this menu component
"
      end

      operation 6115586 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a representation of this menu component as a string.
@return  a string representation of this menu component
"
      end

      operation 6115714 "getTreeLock"
	protected return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets this component's locking object (the object that owns the thread
synchronization monitor) for AWT component-tree and layout
operations.
@return this component's locking object
"
      end

      operation 6115842 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the menu component from an object input stream.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@serial
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6115970 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs.
"
      end

      classrelation 2896002 // accessibleContext (<unidirectional association>)
	relation 2896002 --->
	  a role_name "accessibleContext" init_value " null" package
	    comment "
--- Accessibility Support ---

 MenuComponent will contain all of the methods in interface Accessible,
 though it won't actually implement the interface - that will be up
 to the individual objects which extend MenuComponent.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2896002 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 6116098 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>AccessibleContext</code> associated with
this <code>MenuComponent</code>.

The method implemented by this base class returns <code>null</code>.
Classes that extend <code>MenuComponent</code>
should implement this method to return the
<code>AccessibleContext</code> associated with the subclass.

@return the <code>AccessibleContext</code> of this
    <code>MenuComponent</code>
@since 1.3
"
      end

      class 859650 "AccessibleAWTMenuComponent"
	abstract visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2896130 // <generalisation>
	  relation 2896130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2896130 // <generalisation>
	    b parent class_ref 347522 // AccessibleContext
	end

	classrelation 2896258 // <realization>
	  relation 2896258 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2896258 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	classrelation 2896386 // <realization>
	  relation 2896386 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2896386 // <realization>
	    b parent class_ref 348546 // AccessibleComponent
	end

	classrelation 2896514 // <realization>
	  relation 2896514 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2896514 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	attribute 1342082 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4269533416223798698L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6116226 "AccessibleAWTMenuComponent"
	  protected explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Although the class is abstract, this should be called by
all sub-classes.
"
	end

	operation 6116354 "getAccessibleSelection"
	  public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleContext methods


Gets the <code>AccessibleSelection</code> associated with this
object which allows its <code>Accessible</code> children to be selected.

@return <code>AccessibleSelection</code> if supported by object;
     else return <code>null</code>
@see AccessibleSelection
"
	end

	operation 6116482 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessible name of this object.  This should almost never
return <code>java.awt.MenuComponent.getName</code>, as that
generally isn't a localized name, and doesn't have meaning for the
user.  If the object is fundamentally a text object (e.g. a menu item), the
accessible name should be the text of the object (e.g. \"save\").
If the object has a tooltip, the tooltip text may also be an
appropriate String to return.

@return the localized name of the object -- can be <code>null</code>
        if this object does not have a name
@see AccessibleContext#setAccessibleName
"
	end

	operation 6116610 "getAccessibleDescription"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the accessible description of this object.  This should be
a concise, localized description of what this object is - what
is its meaning to the user.  If the object has a tooltip, the
tooltip text may be an appropriate string to return, assuming
it contains a concise description of the object (instead of just
the name of the object - e.g. a \"Save\" icon on a toolbar that
had \"save\" as the tooltip text shouldn't return the tooltip
text as the description, but something like \"Saves the current
text document\" instead).

@return the localized description of the object -- can be
    <code>null</code> if this object does not have a description
@see AccessibleContext#setAccessibleDescription
"
	end

	operation 6116738 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of <code>AccessibleRole</code>
    describing the role of the object
@see AccessibleRole
"
	end

	operation 6116866 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state of this object.

@return an instance of <code>AccessibleStateSet</code>
    containing the current state set of the object
@see AccessibleState
"
	end

	operation 6116994 "getAccessibleParent"
	  public return_type class_ref 347778 // Accessible
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Accessible</code> parent of this object.
If the parent of this object implements <code>Accessible</code>,
this method should simply return <code>getParent</code>.

@return the <code>Accessible</code> parent of this object -- can
   be <code>null</code> if this object does not have an
   <code>Accessible</code> parent
"
	end

	operation 6117122 "getAccessibleIndexInParent"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the index of this object in its accessible parent.

@return the index of this object in its parent; -1 if this
    object does not have an accessible parent
@see #getAccessibleParent
"
	end

	operation 6117250 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement <code>Accessible</code>,
then this method should return the number of children of this object.

@return the number of accessible children in the object
"
	end

	operation 6117378 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the nth <code>Accessible</code> child of the object.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	operation 6117506 "getLocale"
	  public return_type class_ref 312962 // Locale
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the locale of this object.

@return the locale of this object
"
	end

	operation 6117634 "getAccessibleComponent"
	  public return_type class_ref 348546 // AccessibleComponent
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>AccessibleComponent</code> associated with
this object if one exists.  Otherwise return <code>null</code>.

@return the component
"
	end

	operation 6117762 "getBackground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleComponent methods


Gets the background color of this object.

@return the background color, if supported, of the object;
    otherwise, <code>null</code>
"
	end

	operation 6117890 "setBackground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the background color of this object.
(For transparency, see <code>isOpaque</code>.)

@param c the new <code>Color</code> for the background
@see Component#isOpaque
"
	end

	operation 6118018 "getForeground"
	  public return_type class_ref 323458 // Color
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the foreground color of this object.

@return the foreground color, if supported, of the object;
    otherwise, <code>null</code>
"
	end

	operation 6118146 "setForeground"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "c" type class_ref 323458 // Color
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the foreground color of this object.

@param c the new <code>Color</code> for the foreground
"
	end

	operation 6118274 "getCursor"
	  public return_type class_ref 340866 // Cursor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Cursor</code> of this object.

@return the <code>Cursor</code>, if supported, of the object;
    otherwise, <code>null</code>
"
	end

	operation 6118402 "setCursor"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "cursor" type class_ref 340866 // Cursor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>Cursor</code> of this object.
<p>
The method may have no visual effect if the Java platform
implementation and/or the native system do not support
changing the mouse cursor shape.
@param cursor the new <code>Cursor</code> for the object
"
	end

	operation 6118530 "getFont"
	  public return_type class_ref 340354 // Font
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>Font</code> of this object.

@return the <code>Font</code>,if supported, for the object;
    otherwise, <code>null</code>
"
	end

	operation 6118658 "setFont"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the <code>Font</code> of this object.

@param f the new <code>Font</code> for the object
"
	end

	operation 6118786 "getFontMetrics"
	  public return_type class_ref 343810 // FontMetrics
	  nparams 1
	    param inout name "f" type class_ref 340354 // Font
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the <code>FontMetrics</code> of this object.

@param f the <code>Font</code>
@return the FontMetrics, if supported, the object;
             otherwise, <code>null</code>
@see #getFont
"
	end

	operation 6118914 "isEnabled"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is enabled.

@return true if object is enabled; otherwise, false
"
	end

	operation 6119042 "setEnabled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the enabled state of the object.

@param b if true, enables this object; otherwise, disables it
"
	end

	operation 6119170 "isVisible"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is visible.  Note: this means that the
object intends to be visible; however, it may not in fact be
showing on the screen because one of the objects that this object
is contained by is not visible.  To determine if an object is
showing on the screen, use <code>isShowing</code>.

@return true if object is visible; otherwise, false
"
	end

	operation 6119298 "setVisible"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the visible state of the object.

@param b if true, shows this object; otherwise, hides it
"
	end

	operation 6119426 "isShowing"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the object is showing.  This is determined by checking
the visibility of the object and ancestors of the object.  Note:
this will return true even if the object is obscured by another
(for example, it happens to be underneath a menu that was pulled
down).

@return true if object is showing; otherwise, false
"
	end

	operation 6119554 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks whether the specified point is within this object's bounds,
where the point's x and y coordinates are defined to be relative to
the coordinate system of the object.

@param p the <code>Point</code> relative to the coordinate
    system of the object
@return true if object contains <code>Point</code>; otherwise false
"
	end

	operation 6119682 "getLocationOnScreen"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the location of the object on the screen.

@return location of object on screen -- can be <code>null</code>
    if this object is not on the screen
"
	end

	operation 6119810 "getLocation"
	  public return_type class_ref 323714 // Point
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the location of the object relative to the parent in the form
of a point specifying the object's top-left corner in the screen's
coordinate space.

@return an instance of <code>Point</code> representing the
   top-left corner of the object's bounds in the coordinate
   space of the screen; <code>null</code> if
   this object or its parent are not on the screen
"
	end

	operation 6119938 "setLocation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the location of the object relative to the parent.
"
	end

	operation 6120066 "getBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the bounds of this object in the form of a
<code>Rectangle</code> object.
The bounds specify this object's width, height, and location
relative to its parent.

@return a rectangle indicating this component's bounds;
    <code>null</code> if this object is not on the screen
"
	end

	operation 6120194 "setBounds"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "r" type class_ref 314114 // Rectangle
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the bounds of this object in the form of a
<code>Rectangle</code> object.
The bounds specify this object's width, height, and location
relative to its parent.

@param r a rectangle indicating this component's bounds
"
	end

	operation 6120322 "getSize"
	  public return_type class_ref 316802 // Dimension
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the size of this object in the form of a
<code>Dimension</code> object. The height field of
the <code>Dimension</code> object contains this object's
height, and the width field of the <code>Dimension</code>
object contains this object's width.

@return a <code>Dimension</code> object that indicates the
        size of this component; <code>null</code>
        if this object is not on the screen
"
	end

	operation 6120450 "setSize"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "d" type class_ref 316802 // Dimension
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resizes this object.

@param d - the <code>Dimension</code> specifying the
   new size of the object
"
	end

	operation 6120578 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the <code>Accessible</code> child, if one exists,
contained at the local coordinate <code>Point</code>.
If there is no <code>Accessible</code> child, <code>null</code>
is returned.

@param p the point defining the top-left corner of the
   <code>Accessible</code>, given in the coordinate space
   of the object's parent
@return the <code>Accessible</code>, if it exists,
   at the specified location; else <code>null</code>
"
	end

	operation 6120706 "isFocusTraversable"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether this object can accept focus or not.

@return true if object can accept focus; otherwise false
"
	end

	operation 6120834 "requestFocus"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Requests focus for this object.
"
	end

	operation 6120962 "addFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified focus listener to receive focus events from this
component.

@param l the focus listener
"
	end

	operation 6121090 "removeFocusListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "l" type class_ref 342018 // FocusListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified focus listener so it no longer receives focus
events from this component.

@param l the focus listener
"
	end

	operation 6121218 "getAccessibleSelectionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleSelection methods


Returns the number of <code>Accessible</code> children currently selected.
If no children are selected, the return value will be 0.

@return the number of items currently selected
"
	end

	operation 6121346 "getAccessibleSelection"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an <code>Accessible</code> representing the specified
selected child in the object.  If there isn't a selection, or there are
fewer children selected than the integer passed in, the return
value will be <code>null</code>.
<p>Note that the index represents the i-th selected child, which
is different from the i-th child.

@param i the zero-based index of selected children
@return the i-th selected child
@see #getAccessibleSelectionCount
"
	end

	operation 6121474 "isAccessibleChildSelected"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines if the current child of this object is selected.

@return true if the current child of this object is selected;
   else false
@param i the zero-based index of the child in this
     <code>Accessible</code> object
@see AccessibleContext#getAccessibleChild
"
	end

	operation 6121602 "addAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified <code>Accessible</code> child of the object
to the object's selection.  If the object supports multiple selections,
the specified child is added to any existing selection, otherwise
it replaces any existing selection in the object.  If the
specified child is already selected, this method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild
"
	end

	operation 6121730 "removeAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified child of the object from the object's
selection.  If the specified item isn't currently selected, this
method has no effect.

@param i the zero-based index of the child
@see AccessibleContext#getAccessibleChild
"
	end

	operation 6121858 "clearAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the selection in the object, so that no children in the
object are selected.
"
	end

	operation 6121986 "selectAllAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Causes every child of the object to be selected
if the object supports multiple selections.
"
	end
      end

      operation 6122114 "getAccessibleIndexInParent"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " inner class AccessibleAWTComponent

Gets the index of this object in its accessible parent.

@return -1 if this object does not have an accessible parent;
     otherwise, the index of the child in its accessible parent.
"
      end

      operation 6122242 "getAccessibleChildIndex"
	package explicit_return_type "int"
	nparams 1
	  param inout name "child" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the child within this MenuComponent.

@param child MenuComponent whose index we are interested in.
@return -1 if this object doesn't contain the child,
     otherwise, index of the child.
"
      end

      operation 6122370 "getAccessibleStateSet"
	package return_type class_ref 348162 // AccessibleStateSet
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this object.

@return an instance of <code>AccessibleStateSet</code>
    containing the current state set of the object
@see AccessibleState
"
      end
    end

    class 340610 "Event"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
<code>Event</code> is a platform-independent class that
encapsulates events from the platform's Graphical User
Interface in the Java&nbsp;1.0 event model. In Java&nbsp;1.1
and later versions, the <code>Event</code> class is maintained
only for backwards compatibility. The information in this
class description is provided to assist programmers in
converting Java&nbsp;1.0 programs to the new event model.
<p>
In the Java&nbsp;1.0 event model, an event contains an
{@link Event#id} field
that indicates what type of event it is and which other
<code>Event</code> variables are relevant for the event.
<p>
For keyboard events, {@link Event#key}
contains a value indicating which key was activated, and
{@link Event#modifiers} contains the
modifiers for that event.  For the KEY_PRESS and KEY_RELEASE
event ids, the value of <code>key</code> is the unicode
character code for the key. For KEY_ACTION and
KEY_ACTION_RELEASE, the value of <code>key</code> is
one of the defined action-key identifiers in the
<code>Event</code> class (<code>PGUP</code>,
<code>PGDN</code>, <code>F1</code>, <code>F2</code>, etc).

@author     Sami Shaio
@since      JDK1.0
"
      classrelation 2912130 // <realization>
	relation 2912130 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2912130 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1353602 "data"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1353730 "SHIFT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Modifier constants 

This flag indicates that the Shift key was down when the event
occurred.

"
      end

      attribute 1353858 "CTRL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag indicates that the Control key was down when the event
occurred.

"
      end

      attribute 1353986 "META_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag indicates that the Meta key was down when the event
occurred. For mouse events, this flag indicates that the right
button was pressed or released.

"
      end

      attribute 1354114 "ALT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This flag indicates that the Alt key was down when
the event occurred. For mouse events, this flag indicates that the
middle mouse button was pressed or released.

"
      end

      attribute 1354242 "HOME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Action keys 

The Home key, a non-ASCII action key.

"
      end

      attribute 1354370 "END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The End key, a non-ASCII action key.

"
      end

      attribute 1354498 "PGUP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1002"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Page Up key, a non-ASCII action key.

"
      end

      attribute 1354626 "PGDN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1003"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Page Down key, a non-ASCII action key.

"
      end

      attribute 1354754 "UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1004"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Up Arrow key, a non-ASCII action key.

"
      end

      attribute 1354882 "DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1005"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Down Arrow key, a non-ASCII action key.

"
      end

      attribute 1355010 "LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1006"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Left Arrow key, a non-ASCII action key.

"
      end

      attribute 1355138 "RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1007"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Right Arrow key, a non-ASCII action key.

"
      end

      attribute 1355266 "F1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1008"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F1 function key, a non-ASCII action key.

"
      end

      attribute 1355394 "F2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1009"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F2 function key, a non-ASCII action key.

"
      end

      attribute 1355522 "F3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1010"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F3 function key, a non-ASCII action key.

"
      end

      attribute 1355650 "F4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1011"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F4 function key, a non-ASCII action key.

"
      end

      attribute 1355778 "F5"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1012"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F5 function key, a non-ASCII action key.

"
      end

      attribute 1355906 "F6"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1013"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F6 function key, a non-ASCII action key.

"
      end

      attribute 1356034 "F7"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1014"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F7 function key, a non-ASCII action key.

"
      end

      attribute 1356162 "F8"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1015"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F8 function key, a non-ASCII action key.

"
      end

      attribute 1356290 "F9"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1016"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F9 function key, a non-ASCII action key.

"
      end

      attribute 1356418 "F10"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1017"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F10 function key, a non-ASCII action key.

"
      end

      attribute 1356546 "F11"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1018"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F11 function key, a non-ASCII action key.

"
      end

      attribute 1356674 "F12"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1019"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The F12 function key, a non-ASCII action key.

"
      end

      attribute 1356802 "PRINT_SCREEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1020"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Print Screen key, a non-ASCII action key.

"
      end

      attribute 1356930 "SCROLL_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1021"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Scroll Lock key, a non-ASCII action key.

"
      end

      attribute 1357058 "CAPS_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1022"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Caps Lock key, a non-ASCII action key.

"
      end

      attribute 1357186 "NUM_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1023"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Num Lock key, a non-ASCII action key.

"
      end

      attribute 1357314 "PAUSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Pause key, a non-ASCII action key.

"
      end

      attribute 1357442 "INSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1025"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Insert key, a non-ASCII action key.

"
      end

      attribute 1357570 "ENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " '\\n'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Non-action keys 

The Enter key.

"
      end

      attribute 1357698 "BACK_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " '\\b'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The BackSpace key.

"
      end

      attribute 1357826 "TAB"
	class_attribute const_attribute public explicit_type "int"
	init_value " '\\t'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Tab key.

"
      end

      attribute 1357954 "ESCAPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Escape key.

"
      end

      attribute 1358082 "DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 127"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Delete key.

"
      end

      attribute 1358210 "WINDOW_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Base for all window events. 
"
      end

      attribute 1358338 "WINDOW_DESTROY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + WINDOW_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has asked the window manager to kill the window.

"
      end

      attribute 1358466 "WINDOW_EXPOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + WINDOW_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has asked the window manager to expose the window.

"
      end

      attribute 1358594 "WINDOW_ICONIFY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + WINDOW_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has asked the window manager to iconify the window.

"
      end

      attribute 1358722 "WINDOW_DEICONIFY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + WINDOW_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has asked the window manager to de-iconify the window.

"
      end

      attribute 1358850 "WINDOW_MOVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 + WINDOW_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has asked the window manager to move the window.

"
      end

      attribute 1358978 "KEY_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Base for all keyboard events. 
"
      end

      attribute 1359106 "KEY_PRESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + KEY_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has pressed a normal key.

"
      end

      attribute 1359234 "KEY_RELEASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + KEY_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has released a normal key.

"
      end

      attribute 1359362 "KEY_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + KEY_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has pressed a non-ASCII <em>action</em> key.
The <code>key</code> field contains a value that indicates
that the event occurred on one of the action keys, which
comprise the 12 function keys, the arrow (cursor) keys,
Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
Caps Lock, Num Lock, Pause, and Insert.

"
      end

      attribute 1359490 "KEY_ACTION_RELEASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + KEY_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has released a non-ASCII <em>action</em> key.
The <code>key</code> field contains a value that indicates
that the event occurred on one of the action keys, which
comprise the 12 function keys, the arrow (cursor) keys,
Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
Caps Lock, Num Lock, Pause, and Insert.

"
      end

      attribute 1359618 "MOUSE_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Base for all mouse events. 
"
      end

      attribute 1359746 "MOUSE_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has pressed the mouse button. The <code>ALT_MASK</code>
flag indicates that the middle button has been pressed.
The <code>META_MASK</code>flag indicates that the
right button has been pressed.
@see     java.awt.Event#ALT_MASK
@see     java.awt.Event#META_MASK

"
      end

      attribute 1359874 "MOUSE_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has released the mouse button. The <code>ALT_MASK</code>
flag indicates that the middle button has been released.
The <code>META_MASK</code>flag indicates that the
right button has been released.
@see     java.awt.Event#ALT_MASK
@see     java.awt.Event#META_MASK

"
      end

      attribute 1360002 "MOUSE_MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The mouse has moved with no button pressed.

"
      end

      attribute 1360130 "MOUSE_ENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The mouse has entered a component.

"
      end

      attribute 1360258 "MOUSE_EXIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The mouse has exited a component.

"
      end

      attribute 1360386 "MOUSE_DRAG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6 + MOUSE_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has moved the mouse with a button pressed. The
<code>ALT_MASK</code> flag indicates that the middle
button is being pressed. The <code>META_MASK</code> flag indicates
that the right button is being pressed.
@see     java.awt.Event#ALT_MASK
@see     java.awt.Event#META_MASK

"
      end

      attribute 1360514 "SCROLL_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 600"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Scrolling events 
"
      end

      attribute 1360642 "SCROLL_LINE_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has activated the <em>line up</em>
area of a scroll bar.

"
      end

      attribute 1360770 "SCROLL_LINE_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has activated the <em>line down</em>
area of a scroll bar.

"
      end

      attribute 1360898 "SCROLL_PAGE_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has activated the <em>page up</em>
area of a scroll bar.

"
      end

      attribute 1361026 "SCROLL_PAGE_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has activated the <em>page down</em>
area of a scroll bar.

"
      end

      attribute 1361154 "SCROLL_ABSOLUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user has moved the bubble (thumb) in a scroll bar,
moving to an \"absolute\" position, rather than to
an offset from the last position.

"
      end

      attribute 1361282 "SCROLL_BEGIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The scroll begin event.

"
      end

      attribute 1361410 "SCROLL_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7 + SCROLL_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The scroll end event.

"
      end

      attribute 1361538 "LIST_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 700"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " List Events 
"
      end

      attribute 1361666 "LIST_SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + LIST_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An item in a list has been selected.

"
      end

      attribute 1361794 "LIST_DESELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + LIST_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An item in a list has been deselected.

"
      end

      attribute 1361922 "MISC_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Misc Event 
"
      end

      attribute 1362050 "ACTION_EVENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 + MISC_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This event indicates that the user wants some action to occur.

"
      end

      attribute 1362178 "LOAD_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2 + MISC_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A file loading event.

"
      end

      attribute 1362306 "SAVE_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3 + MISC_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A file saving event.

"
      end

      attribute 1362434 "GOT_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4 + MISC_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A component gained the focus.

"
      end

      attribute 1362562 "LOST_FOCUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5 + MISC_EVENT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A component lost the focus.

"
      end

      classrelation 2912258 // target (<unidirectional association>)
	relation 2912258 --->
	  a role_name "target" public
	    comment "
The target component. This indicates the component over which the
event occurred or with which the event is associated.
This object has been replaced by AWTEvent.getSource()

@serial
@see java.awt.AWTEvent#getSource()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2912258 // target (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1362690 "when"
	public explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The time stamp.
Replaced by InputEvent.getWhen().

@serial
@see java.awt.event.InputEvent#getWhen()

"
      end

      attribute 1362818 "id"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates which type of event the event is, and which
other <code>Event</code> variables are relevant for the event.
This has been replaced by AWTEvent.getID()

@serial
@see java.awt.AWTEvent#getID()

"
      end

      attribute 1362946 "x"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <i>x</i> coordinate of the event.
Replaced by MouseEvent.getX()

@serial
@see java.awt.event.MouseEvent#getX()

"
      end

      attribute 1363074 "y"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <i>y</i> coordinate of the event.
Replaced by MouseEvent.getY()

@serial
@see java.awt.event.MouseEvent#getY()

"
      end

      attribute 1363202 "key"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The key code of the key that was pressed in a keyboard event.
This has been replaced by KeyEvent.getKeyCode()

@serial
@see java.awt.event.KeyEvent#getKeyCode()

"
      end

      attribute 1363330 "modifiers"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The key character that was pressed in a keyboard event.

    public char keyChar;

The state of the modifier keys.
This is replaced with InputEvent.getModifiers()
In java 1.1 MouseEvent and KeyEvent are subclasses
of InputEvent.

@serial
@see java.awt.event.InputEvent#getModifiers()

"
      end

      attribute 1363458 "clickCount"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "For <code>MOUSE_DOWN</code> events, this field indicates the
number of consecutive clicks. For other events, its value is
<code>0</code>.
This field has been replaced by MouseEvent.getClickCount().

@serial
@see java.awt.event.MouseEvent#getClickCount()

"
      end

      classrelation 2912386 // arg (<unidirectional association>)
	relation 2912386 --->
	  a role_name "arg" public
	    comment "
An arbitrary argument of the event. The value of this field
depends on the type of event.
<code>arg</code> has been replaced by event specific property.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2912386 // arg (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2912514 // evt (<unidirectional association>)
	relation 2912514 --->
	  a role_name "evt" public
	    comment "
The next event. This field is set when putting events into a
linked list.
This has been replaced by EventQueue.

@serial
@see java.awt.EventQueue

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2912514 // evt (<unidirectional association>)
	  b parent class_ref 340610 // Event
      end

      attribute 1363586 "actionKeyCodes"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[][]"
	init_value " {
    /*    virtual key              action key   */
        { KeyEvent.VK_HOME,        Event.HOME         },
        { KeyEvent.VK_END,         Event.END          },
        { KeyEvent.VK_PAGE_UP,     Event.PGUP         },
        { KeyEvent.VK_PAGE_DOWN,   Event.PGDN         },
        { KeyEvent.VK_UP,          Event.UP           },
        { KeyEvent.VK_DOWN,        Event.DOWN         },
        { KeyEvent.VK_LEFT,        Event.LEFT         },
        { KeyEvent.VK_RIGHT,       Event.RIGHT        },
        { KeyEvent.VK_F1,          Event.F1           },
        { KeyEvent.VK_F2,          Event.F2           },
        { KeyEvent.VK_F3,          Event.F3           },
        { KeyEvent.VK_F4,          Event.F4           },
        { KeyEvent.VK_F5,          Event.F5           },
        { KeyEvent.VK_F6,          Event.F6           },
        { KeyEvent.VK_F7,          Event.F7           },
        { KeyEvent.VK_F8,          Event.F8           },
        { KeyEvent.VK_F9,          Event.F9           },
        { KeyEvent.VK_F10,         Event.F10          },
        { KeyEvent.VK_F11,         Event.F11          },
        { KeyEvent.VK_F12,         Event.F12          },
        { KeyEvent.VK_PRINTSCREEN, Event.PRINT_SCREEN },
        { KeyEvent.VK_SCROLL_LOCK, Event.SCROLL_LOCK  },
        { KeyEvent.VK_CAPS_LOCK,   Event.CAPS_LOCK    },
        { KeyEvent.VK_NUM_LOCK,    Event.NUM_LOCK     },
        { KeyEvent.VK_PAUSE,       Event.PAUSE        },
        { KeyEvent.VK_INSERT,      Event.INSERT       }
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " table for mapping old Event action keys to KeyEvent virtual keys. 
"
      end

      attribute 1363714 "consumed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field controls whether or not the event is sent back
down to the peer once the target has processed it -
false means it's sent to the peer, true means it's not.

@serial
@see #isConsumed()

"
      end

      attribute 1363842 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5488922509400504703L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 149250 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6178178 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      operation 6178306 "Event"
	public explicit_return_type ""
	nparams 8
	  param inout name "target" type class_ref 129538 // Object
	  param in name "when" explicit_type "long"
	  param in name "id" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "key" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "arg" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Creates an instance of <code>Event</code> with the specified target
component, time stamp, event type, <i>x</i> and <i>y</i>
coordinates, keyboard key, state of the modifier keys, and
argument.
@param     target     the target component.
@param     when       the time stamp.
@param     id         the event type.
@param     x          the <i>x</i> coordinate.
@param     y          the <i>y</i> coordinate.
@param     key        the key pressed in a keyboard event.
@param     modifiers  the state of the modifier keys.
@param     arg        the specified argument.
"
      end

      operation 6178434 "Event"
	public explicit_return_type ""
	nparams 7
	  param inout name "target" type class_ref 129538 // Object
	  param in name "when" explicit_type "long"
	  param in name "id" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "key" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Creates an instance of <code>Event</code>, with the specified target
component, time stamp, event type, <i>x</i> and <i>y</i>
coordinates, keyboard key, state of the modifier keys, and an
argument set to <code>null</code>.
@param     target     the target component.
@param     when       the time stamp.
@param     id         the event type.
@param     x          the <i>x</i> coordinate.
@param     y          the <i>y</i> coordinate.
@param     key        the key pressed in a keyboard event.
@param     modifiers  the state of the modifier keys.
"
      end

      operation 6178562 "Event"
	public explicit_return_type ""
	nparams 3
	  param inout name "target" type class_ref 129538 // Object
	  param in name "id" explicit_type "int"
	  param inout name "arg" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Creates an instance of <code>Event</code> with the specified
target component, event type, and argument.
@param     target     the target component.
@param     id         the event type.
@param     arg        the specified argument.
"
      end

      operation 6178690 "translate"
	public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Translates this event so that its <i>x</i> and <i>y</i>
coordinates are increased by <i>dx</i> and <i>dy</i>,
respectively.
<p>
This method translates an event relative to the given component.
This involves, at a minimum, translating the coordinates into the
local coordinate system of the given component. It may also involve
translating a region in the case of an expose event.
@param     dx     the distance to translate the <i>x</i> coordinate.
@param     dy     the distance to translate the <i>y</i> coordinate.
"
      end

      operation 6178818 "shiftDown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Checks if the Shift key is down.
@return    <code>true</code> if the key is down;
           <code>false</code> otherwise.
@see       java.awt.Event#modifiers
@see       java.awt.Event#controlDown
@see       java.awt.Event#metaDown
"
      end

      operation 6178946 "controlDown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Checks if the Control key is down.
@return    <code>true</code> if the key is down;
           <code>false</code> otherwise.
@see       java.awt.Event#modifiers
@see       java.awt.Event#shiftDown
@see       java.awt.Event#metaDown
"
      end

      operation 6179074 "metaDown"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Checks if the Meta key is down.

@return    <code>true</code> if the key is down;
           <code>false</code> otherwise.
@see       java.awt.Event#modifiers
@see       java.awt.Event#shiftDown
@see       java.awt.Event#controlDown
"
      end

      operation 6179202 "consume"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
"
      end

      operation 6179330 "isConsumed"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
"
      end

      operation 6179458 "getOldEventKey"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Returns the integer key-code associated with the key in this event,
as described in java.awt.Event.
"
      end

      operation 6179586 "getKeyEventChar"
	package explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Returns a new KeyEvent char which corresponds to the int key
of this old event.
"
      end

      operation 6179714 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Returns a string representing the state of this <code>Event</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return    the parameter string of this event
"
      end

      operation 6179842 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>NOTE:</b> The <code>Event</code> class is obsolete and is
available only for backwards compatibility.  It has been replaced
by the <code>AWTEvent</code> class and its subclasses.
<p>
Returns a representation of this event's values as a string.
@return    a string that represents the event and the values
                of its member fields.
@see       java.awt.Event#paramString
@since     JDK1.1
"
      end
    end

    class 340866 "Cursor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class to encapsulate the bitmap representation of the mouse cursor.

@see Component#setCursor
@author      Amy Fowler
"
      classrelation 742530 // <realization>
	relation 742530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 742530 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 520194 "DEFAULT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default cursor type (gets set if no cursor is defined).

"
      end

      attribute 520322 "CROSSHAIR_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The crosshair cursor type.

"
      end

      attribute 520450 "TEXT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The text cursor type.

"
      end

      attribute 520578 "WAIT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The wait cursor type.

"
      end

      attribute 520706 "SW_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The south-west-resize cursor type.

"
      end

      attribute 520834 "SE_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The south-east-resize cursor type.

"
      end

      attribute 520962 "NW_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The north-west-resize cursor type.

"
      end

      attribute 521090 "NE_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The north-east-resize cursor type.

"
      end

      attribute 521218 "N_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The north-resize cursor type.

"
      end

      attribute 521346 "S_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The south-resize cursor type.

"
      end

      attribute 521474 "W_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The west-resize cursor type.

"
      end

      attribute 521602 "E_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The east-resize cursor type.

"
      end

      attribute 521730 "HAND_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The hand cursor type.

"
      end

      attribute 521858 "MOVE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The move cursor type.

"
      end

      classrelation 742658 // predefined (<unidirectional association>)
	relation 742658 --->
	  a role_name "predefined" multiplicity "[]" init_value " new Cursor[14]" class_relation protected
	    comment "
@deprecated As of JDK version 1.7, the {@link #getPredefinedCursor(int)}
method should be used instead.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 742658 // predefined (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 742786 // predefinedPrivate (<unidirectional association>)
	relation 742786 --->
	  a role_name "predefinedPrivate" multiplicity "[]" init_value " new Cursor[14]" class_relation const_relation private
	    comment "
This field is a private replacement for 'predefined' array.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 742786 // predefinedPrivate (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 742914 // cursorProperties (<unidirectional association>)
	relation 742914 --->
	  a role_name "cursorProperties" multiplicity "[][]" init_value " {
        { \"AWT.DefaultCursor\", \"Default Cursor\" },
        { \"AWT.CrosshairCursor\", \"Crosshair Cursor\" },
        { \"AWT.TextCursor\", \"Text Cursor\" },
        { \"AWT.WaitCursor\", \"Wait Cursor\" },
        { \"AWT.SWResizeCursor\", \"Southwest Resize Cursor\" },
        { \"AWT.SEResizeCursor\", \"Southeast Resize Cursor\" },
        { \"AWT.NWResizeCursor\", \"Northwest Resize Cursor\" },
        { \"AWT.NEResizeCursor\", \"Northeast Resize Cursor\" },
        { \"AWT.NResizeCursor\", \"North Resize Cursor\" },
        { \"AWT.SResizeCursor\", \"South Resize Cursor\" },
        { \"AWT.WResizeCursor\", \"West Resize Cursor\" },
        { \"AWT.EResizeCursor\", \"East Resize Cursor\" },
        { \"AWT.HandCursor\", \"Hand Cursor\" },
        { \"AWT.MoveCursor\", \"Move Cursor\" },
    }" class_relation const_relation package
	    comment " Localization names and default values 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 742914 // cursorProperties (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 521986 "type"
	package explicit_type "int"
	init_value " DEFAULT_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The chosen cursor type initially set to
the <code>DEFAULT_CURSOR</code>.

@serial
@see #getType()

"
      end

      attribute 522114 "CUSTOM_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type associated with all custom cursors.

"
      end

      classrelation 743042 // systemCustomCursors (<unidirectional association>)
	relation 743042 --->
	  a role_name "systemCustomCursors" init_value " new Hashtable<>(1)" class_relation const_relation private
	    comment "
hashtable, filesystem dir prefix, filename, and properties for custom cursors support

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Cursor> ${name}${value};
"
	    classrelation_ref 743042 // systemCustomCursors (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 743170 // systemCustomCursorDirPrefix (<unidirectional association>)
	relation 743170 --->
	  a role_name "systemCustomCursorDirPrefix" init_value " initCursorDir()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743170 // systemCustomCursorDirPrefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2343682 "initCursorDir"
	class_operation private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 743298 // systemCustomCursorPropertiesFile (<unidirectional association>)
	relation 743298 --->
	  a role_name "systemCustomCursorPropertiesFile" init_value " systemCustomCursorDirPrefix + \"cursors.properties\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743298 // systemCustomCursorPropertiesFile (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 743426 // systemCustomCursorProperties (<unidirectional association>)
	relation 743426 --->
	  a role_name "systemCustomCursorProperties" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743426 // systemCustomCursorProperties (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 743554 // CursorDotPrefix (<unidirectional association>)
	relation 743554 --->
	  a role_name "CursorDotPrefix" init_value " \"Cursor.\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743554 // CursorDotPrefix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 743682 // DotFileSuffix (<unidirectional association>)
	relation 743682 --->
	  a role_name "DotFileSuffix" init_value " \".File\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743682 // DotFileSuffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 743810 // DotHotspotSuffix (<unidirectional association>)
	relation 743810 --->
	  a role_name "DotHotspotSuffix" init_value " \".HotSpot\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743810 // DotHotspotSuffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 743938 // DotNameSuffix (<unidirectional association>)
	relation 743938 --->
	  a role_name "DotNameSuffix" init_value " \".Name\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 743938 // DotNameSuffix (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 522242 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8028237497568985504L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      attribute 522370 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.Cursor\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 136962 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setCursorAccessor(
            new AWTAccessor.CursorAccessor() {
                public long getPData(Cursor cursor) {
                    return cursor.pData;
                }

                public void setPData(Cursor cursor, long pData) {
                    cursor.pData = pData;
                }

                public int getType(Cursor cursor) {
                    return cursor.type;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 2343810 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      attribute 522498 "pData"
	private explicit_type "long"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Hook into native data.

"
      end

      classrelation 744066 // anchor (<unidirectional association>)
	relation 744066 --->
	  a role_name "anchor" init_value " new Object()" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 744066 // anchor (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 405634 "CursorDisposer"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 522626 "pData"
	  volatile package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 2343938 "CursorDisposer"
	  public explicit_return_type ""
	  nparams 1
	    param in name "pData" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2344066 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 744322 // disposer (<unidirectional association>)
	relation 744322 --->
	  a role_name "disposer" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 744322 // disposer (<unidirectional association>)
	  b parent class_ref 405634 // CursorDisposer
      end

      operation 2344194 "setPData"
	private explicit_return_type "void"
	nparams 1
	  param in name "pData" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 744450 // name (<unidirectional association>)
	relation 744450 --->
	  a role_name "name" protected
	    comment "
The user-visible name of the cursor.

@serial
@see #getName()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 744450 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 2344322 "getPredefinedCursor"
	class_operation public return_type class_ref 340866 // Cursor
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cursor object with the specified predefined type.

@param type the type of predefined cursor
@return the specified predefined cursor
@throws IllegalArgumentException if the specified cursor type is
        invalid
"
      end

      operation 2344450 "getSystemCustomCursor"
	class_operation public return_type class_ref 340866 // Cursor
	nparams 1
	  param in name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 344450 // AWTException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a system-specific custom cursor object matching the
specified name.  Cursor names are, for example: \"Invalid.16x16\"

@param name a string describing the desired system-specific custom cursor
@return the system specific custom cursor named
@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless</code> returns true
"
      end

      operation 2344578 "getDefaultCursor"
	class_operation public return_type class_ref 340866 // Cursor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the system default cursor.
"
      end

      operation 2344706 "Cursor"
	public explicit_return_type ""
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"type\"})
"
	
	
	
	comment "Creates a new cursor object with the specified type.
@param type the type of cursor
@throws IllegalArgumentException if the specified cursor type
is invalid
"
      end

      operation 2344834 "Cursor"
	protected explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new custom cursor object with the specified name.<p>
Note:  this constructor should only be used by AWT implementations
as part of their support for custom cursors.  Applications should
use Toolkit.createCustomCursor().
@param name the user-visible name of the cursor.
@see java.awt.Toolkit#createCustomCursor
"
      end

      operation 2344962 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type for this cursor.
"
      end

      operation 2345090 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this cursor.
@return    a localized description of this cursor.
@since     1.2
"
      end

      operation 2345218 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this cursor.
@return    a string representation of this cursor.
@since     1.2
"
      end

      operation 2345346 "loadSystemCustomCursorProperties"
	class_operation private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "load the cursor.properties file
"
      end

      operation 2345474 "finalizeImpl"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "pData" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 340994 "GraphicsConfiguration"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GraphicsConfiguration</code> class describes the
characteristics of a graphics destination such as a printer or monitor.
There can be many <code>GraphicsConfiguration</code> objects associated
with a single graphics device, representing different drawing modes or
capabilities.  The corresponding native structure will vary from platform
to platform.  For example, on X11 windowing systems,
each visual is a different <code>GraphicsConfiguration</code>.
On Microsoft Windows, <code>GraphicsConfiguration</code>s represent
PixelFormats available in the current resolution and color depth.
<p>
In a virtual device multi-screen environment in which the desktop
area could span multiple physical screen devices, the bounds of the
<code>GraphicsConfiguration</code> objects are relative to the
virtual coordinate system.  When setting the location of a
component, use {@link #getBounds() getBounds} to get the bounds of
the desired <code>GraphicsConfiguration</code> and offset the location
with the coordinates of the <code>GraphicsConfiguration</code>,
as the following code sample illustrates:
</p>

<pre>
     Frame f = new Frame(gc);  // where gc is a GraphicsConfiguration
     Rectangle bounds = gc.getBounds();
     f.setLocation(10 + bounds.x, 10 + bounds.y); </pre>

<p>
To determine if your environment is a virtual device
environment, call <code>getBounds</code> on all of the
<code>GraphicsConfiguration</code> objects in your system.  If
any of the origins of the returned bounds is not (0,&nbsp;0),
your environment is a virtual device environment.

<p>
You can also use <code>getBounds</code> to determine the bounds
of the virtual device.  To do this, first call <code>getBounds</code> on all
of the <code>GraphicsConfiguration</code> objects in your
system.  Then calculate the union of all of the bounds returned
from the calls to <code>getBounds</code>.  The union is the
bounds of the virtual device.  The following code sample
calculates the bounds of the virtual device.

<pre>{@code
     Rectangle virtualBounds = new Rectangle();
     GraphicsEnvironment ge = GraphicsEnvironment.
             getLocalGraphicsEnvironment();
     GraphicsDevice[] gs =
             ge.getScreenDevices();
     for (int j = 0; j < gs.length; j++) {
         GraphicsDevice gd = gs[j];
         GraphicsConfiguration[] gc =
             gd.getConfigurations();
         for (int i=0; i < gc.length; i++) {
             virtualBounds =
                 virtualBounds.union(gc[i].getBounds());
         }
     } }</pre>

@see Window
@see Frame
@see GraphicsEnvironment
@see GraphicsDevice


REMIND:  What to do about capabilities?
The
capabilities of the device can be determined by enumerating the possible
capabilities and checking if the GraphicsConfiguration
implements the interface for that capability.

"
      classrelation 2922882 // defaultBufferCaps (<unidirectional association>)
	relation 2922882 --->
	  a role_name "defaultBufferCaps" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2922882 // defaultBufferCaps (<unidirectional association>)
	  b parent class_ref 344578 // BufferCapabilities
      end

      classrelation 2923010 // defaultImageCaps (<unidirectional association>)
	relation 2923010 --->
	  a role_name "defaultImageCaps" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923010 // defaultImageCaps (<unidirectional association>)
	  b parent class_ref 344322 // ImageCapabilities
      end

      operation 6230914 "GraphicsConfiguration"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is an abstract class that cannot be instantiated directly.
Instances must be obtained from a suitable factory or query method.

@see GraphicsDevice#getConfigurations
@see GraphicsDevice#getDefaultConfiguration
@see GraphicsDevice#getBestConfiguration
@see Graphics2D#getDeviceConfiguration
"
      end

      operation 6231042 "getDevice"
	abstract public return_type class_ref 868994 // GraphicsDevice
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link GraphicsDevice} associated with this
<code>GraphicsConfiguration</code>.
@return a <code>GraphicsDevice</code> object that is
associated with this <code>GraphicsConfiguration</code>.
"
      end

      operation 6231170 "createCompatibleImage"
	public return_type class_ref 311554 // BufferedImage
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link BufferedImage} with a data layout and color model
compatible with this <code>GraphicsConfiguration</code>.  This
method has nothing to do with memory-mapping
a device.  The returned <code>BufferedImage</code> has
a layout and color model that is closest to this native device
configuration and can therefore be optimally blitted to this
device.
@param width the width of the returned <code>BufferedImage</code>
@param height the height of the returned <code>BufferedImage</code>
@return a <code>BufferedImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>.
"
      end

      operation 6231298 "createCompatibleImage"
	public return_type class_ref 311554 // BufferedImage
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "transparency" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>BufferedImage</code> that supports the specified
transparency and has a data layout and color model
compatible with this <code>GraphicsConfiguration</code>.  This
method has nothing to do with memory-mapping
a device. The returned <code>BufferedImage</code> has a layout and
color model that can be optimally blitted to a device
with this <code>GraphicsConfiguration</code>.
@param width the width of the returned <code>BufferedImage</code>
@param height the height of the returned <code>BufferedImage</code>
@param transparency the specified transparency mode
@return a <code>BufferedImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>
and also supports the specified transparency.
@throws IllegalArgumentException if the transparency is not a valid value
@see Transparency#OPAQUE
@see Transparency#BITMASK
@see Transparency#TRANSLUCENT
"
      end

      operation 6231426 "createCompatibleVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link VolatileImage} with a data layout and color model
compatible with this <code>GraphicsConfiguration</code>.
The returned <code>VolatileImage</code>
may have data that is stored optimally for the underlying graphics
device and may therefore benefit from platform-specific rendering
acceleration.
@param width the width of the returned <code>VolatileImage</code>
@param height the height of the returned <code>VolatileImage</code>
@return a <code>VolatileImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>.
@see Component#createVolatileImage(int, int)
@since 1.4
"
      end

      operation 6231554 "createCompatibleVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "transparency" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link VolatileImage} with a data layout and color model
compatible with this <code>GraphicsConfiguration</code>.
The returned <code>VolatileImage</code>
may have data that is stored optimally for the underlying graphics
device and may therefore benefit from platform-specific rendering
acceleration.
@param width the width of the returned <code>VolatileImage</code>
@param height the height of the returned <code>VolatileImage</code>
@param transparency the specified transparency mode
@return a <code>VolatileImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>.
@throws IllegalArgumentException if the transparency is not a valid value
@see Transparency#OPAQUE
@see Transparency#BITMASK
@see Transparency#TRANSLUCENT
@see Component#createVolatileImage(int, int)
@since 1.5
"
      end

      operation 6231682 "createCompatibleVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "caps" type class_ref 344322 // ImageCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link VolatileImage} with a data layout and color model
compatible with this <code>GraphicsConfiguration</code>, using
the specified image capabilities.
If the <code>caps</code> parameter is null, it is effectively ignored
and this method will create a VolatileImage without regard to
<code>ImageCapabilities</code> constraints.

The returned <code>VolatileImage</code> has
a layout and color model that is closest to this native device
configuration and can therefore be optimally blitted to this
device.
@return a <code>VolatileImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>.
@param width the width of the returned <code>VolatileImage</code>
@param height the height of the returned <code>VolatileImage</code>
@param caps the image capabilities
@exception AWTException if the supplied image capabilities could not
be met by this graphics configuration
@since 1.4
"
      end

      operation 6231810 "createCompatibleVolatileImage"
	public return_type class_ref 344194 // VolatileImage
	nparams 4
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "caps" type class_ref 344322 // ImageCapabilities
	  param in name "transparency" explicit_type "int"
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link VolatileImage} with a data layout and color model
compatible with this <code>GraphicsConfiguration</code>, using
the specified image capabilities and transparency value.
If the <code>caps</code> parameter is null, it is effectively ignored
and this method will create a VolatileImage without regard to
<code>ImageCapabilities</code> constraints.

The returned <code>VolatileImage</code> has
a layout and color model that is closest to this native device
configuration and can therefore be optimally blitted to this
device.
@param width the width of the returned <code>VolatileImage</code>
@param height the height of the returned <code>VolatileImage</code>
@param caps the image capabilities
@param transparency the specified transparency mode
@return a <code>VolatileImage</code> whose data layout and color
model is compatible with this <code>GraphicsConfiguration</code>.
@see Transparency#OPAQUE
@see Transparency#BITMASK
@see Transparency#TRANSLUCENT
@throws IllegalArgumentException if the transparency is not a valid value
@exception AWTException if the supplied image capabilities could not
be met by this graphics configuration
@see Component#createVolatileImage(int, int)
@since 1.5
"
      end

      operation 6231938 "getColorModel"
	abstract public return_type class_ref 312066 // ColorModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link ColorModel} associated with this
<code>GraphicsConfiguration</code>.
@return a <code>ColorModel</code> object that is associated with
this <code>GraphicsConfiguration</code>.
"
      end

      operation 6232066 "getColorModel"
	abstract public return_type class_ref 312066 // ColorModel
	nparams 1
	  param in name "transparency" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ColorModel</code> associated with this
<code>GraphicsConfiguration</code> that supports the specified
transparency.
@param transparency the specified transparency mode
@return a <code>ColorModel</code> object that is associated with
this <code>GraphicsConfiguration</code> and supports the
specified transparency or null if the transparency is not a valid
value.
@see Transparency#OPAQUE
@see Transparency#BITMASK
@see Transparency#TRANSLUCENT
"
      end

      operation 6232194 "getDefaultTransform"
	abstract public return_type class_ref 381058 // AffineTransform
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@link AffineTransform} for this
<code>GraphicsConfiguration</code>. This
<code>AffineTransform</code> is typically the Identity transform
for most normal screens.  The default <code>AffineTransform</code>
maps coordinates onto the device such that 72 user space
coordinate units measure approximately 1 inch in device
space.  The normalizing transform can be used to make
this mapping more exact.  Coordinates in the coordinate space
defined by the default <code>AffineTransform</code> for screen and
printer devices have the origin in the upper left-hand corner of
the target region of the device, with X coordinates
increasing to the right and Y coordinates increasing downwards.
For image buffers not associated with a device, such as those not
created by <code>createCompatibleImage</code>,
this <code>AffineTransform</code> is the Identity transform.
@return the default <code>AffineTransform</code> for this
<code>GraphicsConfiguration</code>.
"
      end

      operation 6232322 "getNormalizingTransform"
	abstract public return_type class_ref 381058 // AffineTransform
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns a <code>AffineTransform</code> that can be concatenated
with the default <code>AffineTransform</code>
of a <code>GraphicsConfiguration</code> so that 72 units in user
space equals 1 inch in device space.
<p>
For a particular {@link Graphics2D}, g, one
can reset the transformation to create
such a mapping by using the following pseudocode:
<pre>
     GraphicsConfiguration gc = g.getDeviceConfiguration();

     g.setTransform(gc.getDefaultTransform());
     g.transform(gc.getNormalizingTransform());
</pre>
Note that sometimes this <code>AffineTransform</code> is identity,
such as for printers or metafile output, and that this
<code>AffineTransform</code> is only as accurate as the information
supplied by the underlying system.  For image buffers not
associated with a device, such as those not created by
<code>createCompatibleImage</code>, this
<code>AffineTransform</code> is the Identity transform
since there is no valid distance measurement.
@return an <code>AffineTransform</code> to concatenate to the
default <code>AffineTransform</code> so that 72 units in user
space is mapped to 1 inch in device space.
"
      end

      operation 6232450 "getBounds"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the <code>GraphicsConfiguration</code>
in the device coordinates. In a multi-screen environment
with a virtual device, the bounds can have negative X
or Y origins.
@return the bounds of the area covered by this
<code>GraphicsConfiguration</code>.
@since 1.3
"
      end

      class 869122 "DefaultBufferCapabilities"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2923138 // <generalisation>
	  relation 2923138 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2923138 // <generalisation>
	    b parent class_ref 344578 // BufferCapabilities
	end

	operation 6232578 "DefaultBufferCapabilities"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "imageCaps" type class_ref 344322 // ImageCapabilities
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6232706 "getBufferCapabilities"
	public return_type class_ref 344578 // BufferCapabilities
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the buffering capabilities of this
<code>GraphicsConfiguration</code>.
@return the buffering capabilities of this graphics
configuration object
@since 1.4
"
      end

      operation 6232834 "getImageCapabilities"
	public return_type class_ref 344322 // ImageCapabilities
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the image capabilities of this
<code>GraphicsConfiguration</code>.
@return the image capabilities of this graphics
configuration object
@since 1.4
"
      end

      operation 6232962 "isTranslucencyCapable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code GraphicsConfiguration} supports
the {@link GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSLUCENT
PERPIXEL_TRANSLUCENT} kind of translucency.

@return whether the given GraphicsConfiguration supports
        the translucency effects.

@see Window#setBackground(Color)

@since 1.7
"
      end
    end

    class 341378 "PopupMenu"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that implements a menu which can be dynamically popped up
at a specified position within a component.
<p>
As the inheritance hierarchy implies, a <code>PopupMenu</code>
 can be used anywhere a <code>Menu</code> can be used.
However, if you use a <code>PopupMenu</code> like a <code>Menu</code>
(e.g., you add it to a <code>MenuBar</code>), then you <b>cannot</b>
call <code>show</code> on that <code>PopupMenu</code>.

@author      Amy Fowler
"
      classrelation 2963458 // <generalisation>
	relation 2963458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2963458 // <generalisation>
	  b parent class_ref 872194 // Menu
      end

      classrelation 2963586 // base (<unidirectional association>)
	relation 2963586 --->
	  a role_name "base" init_value " \"popup\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2963586 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1418242 "nameCounter"
	class_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1418370 "isTrayIconPopup"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 151042 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setPopupMenuAccessor(
            new AWTAccessor.PopupMenuAccessor() {
                public boolean isTrayIconPopup(PopupMenu popupMenu) {
                    return popupMenu.isTrayIconPopup;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1418498 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4620452533522760060L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6305154 "PopupMenu"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new popup menu with an empty name.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6305282 "PopupMenu"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new popup menu with the specified name.

@param label a non-<code>null</code> string specifying
               the popup menu's label
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6305410 "getParent"
	public return_type class_ref 340226 // MenuContainer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6305538 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this <code>MenuComponent</code>.
Called by <code>getName</code> when the name is <code>null</code>.
"
      end

      operation 6305666 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the popup menu's peer.
The peer allows us to change the appearance of the popup menu without
changing any of the popup menu's functionality.
"
      end

      operation 6305794 "show"
	public explicit_return_type "void"
	nparams 3
	  param inout name "origin" type class_ref 338818 // Component
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows the popup menu at the x, y position relative to an origin
component.
The origin component must be contained within the component
hierarchy of the popup menu's parent.  Both the origin and the parent
must be showing on the screen for this method to be valid.
<p>
If this <code>PopupMenu</code> is being used as a <code>Menu</code>
(i.e., it has a non-<code>Component</code> parent),
then you cannot call this method on the <code>PopupMenu</code>.

@param origin the component which defines the coordinate space
@param x the x coordinate position to popup the menu
@param y the y coordinate position to popup the menu
@exception NullPointerException  if the parent is <code>null</code>
@exception IllegalArgumentException  if this <code>PopupMenu</code>
               has a non-<code>Component</code> parent
@exception IllegalArgumentException if the origin is not in the
               parent's hierarchy
@exception RuntimeException if the parent is not showing on screen
"
      end

      operation 6305922 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>PopupMenu</code>.

@return the <code>AccessibleContext</code> of this
               <code>PopupMenu</code>
@since 1.3
"
      end

      class 874114 "AccessibleAWTPopupMenu"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2963714 // <generalisation>
	  relation 2963714 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2963714 // <generalisation>
	    b parent class_ref 872322 // AccessibleAWTMenu
	end

	attribute 1418626 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -4282044795947239955L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6306050 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 341506 "AWTKeyStroke"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>AWTKeyStroke</code> represents a key action on the
keyboard, or equivalent input device. <code>AWTKeyStroke</code>s
can correspond to only a press or release of a
particular key, just as <code>KEY_PRESSED</code> and
<code>KEY_RELEASED</code> <code>KeyEvent</code>s do;
alternately, they can correspond to typing a specific Java character, just
as <code>KEY_TYPED</code> <code>KeyEvent</code>s do.
In all cases, <code>AWTKeyStroke</code>s can specify modifiers
(alt, shift, control, meta, altGraph, or a combination thereof) which must be present
during the action for an exact match.
<p>
<code>AWTKeyStrokes</code> are immutable, and are intended
to be unique. Client code should never create an
<code>AWTKeyStroke</code> on its own, but should instead use
a variant of <code>getAWTKeyStroke</code>. Client use of these factory
methods allows the <code>AWTKeyStroke</code> implementation
to cache and share instances efficiently.

@see #getAWTKeyStroke

@author Arnaud Weber
@author David Mendenhall
@since 1.4
"
      classrelation 2885250 // <realization>
	relation 2885250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2885250 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1336066 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6430539691155161871L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2885378 // modifierKeywords (<unidirectional association>)
	relation 2885378 --->
	  a role_name "modifierKeywords" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2885378 // modifierKeywords (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2885506 // vks (<unidirectional association>)
	relation 2885506 --->
	  a role_name "vks" class_relation private
	    comment "
Associates VK_XXX (as a String) with code (as Integer). This is
done to avoid the overhead of the reflective call to find the
constant.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2885506 // vks (<unidirectional association>)
	  b parent class_ref 857474 // VKCollection
      end

      classrelation 2885634 // APP_CONTEXT_CACHE_KEY (<unidirectional association>)
	relation 2885634 --->
	  a role_name "APP_CONTEXT_CACHE_KEY" init_value " new Object()" class_relation private
	    comment "A key for the collection of AWTKeyStrokes within AppContext.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2885634 // APP_CONTEXT_CACHE_KEY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2885762 // APP_CONTEXT_KEYSTROKE_KEY (<unidirectional association>)
	relation 2885762 --->
	  a role_name "APP_CONTEXT_KEYSTROKE_KEY" init_value " new AWTKeyStroke()" class_relation private
	    comment "A key withing the cache
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2885762 // APP_CONTEXT_KEYSTROKE_KEY (<unidirectional association>)
	  b parent class_ref 341506 // AWTKeyStroke
      end

      operation 6088322 "getAWTKeyStrokeClass"
	class_operation private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads keystroke class from AppContext and if null, puts there the
AWTKeyStroke class.
Must be called under locked AWTKeyStro
"
      end

      attribute 1336194 "keyChar"
	private explicit_type "char"
	init_value " KeyEvent.CHAR_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1336322 "keyCode"
	private explicit_type "int"
	init_value " KeyEvent.VK_UNDEFINED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1336450 "modifiers"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1336578 "onKeyRelease"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 147586 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6088450 "AWTKeyStroke"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AWTKeyStroke</code> with default values.
The default values used are:
<table border=\"1\" summary=\"AWTKeyStroke default values\">
<tr><th>Property</th><th>Default Value</th></tr>
<tr>
   <td>Key Char</td>
   <td><code>KeyEvent.CHAR_UNDEFINED</code></td>
</tr>
<tr>
   <td>Key Code</td>
   <td><code>KeyEvent.VK_UNDEFINED</code></td>
</tr>
<tr>
   <td>Modifiers</td>
   <td>none</td>
</tr>
<tr>
   <td>On key release?</td>
   <td><code>false</code></td>
</tr>
</table>

<code>AWTKeyStroke</code>s should not be constructed
by client code. Use a variant of <code>getAWTKeyStroke</code>
instead.

@see #getAWTKeyStroke
"
      end

      operation 6088578 "AWTKeyStroke"
	protected explicit_return_type ""
	nparams 4
	  param in name "keyChar" explicit_type "char"
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AWTKeyStroke</code> with the specified
values. <code>AWTKeyStroke</code>s should not be constructed
by client code. Use a variant of <code>getAWTKeyStroke</code>
instead.

@param keyChar the character value for a keyboard key
@param keyCode the key code for this <code>AWTKeyStroke</code>
@param modifiers a bitwise-ored combination of any modifiers
@param onKeyRelease <code>true</code> if this
       <code>AWTKeyStroke</code> corresponds
       to a key release; <code>false</code> otherwise
@see #getAWTKeyStroke
"
      end

      operation 6088706 "registerSubclass"
	class_operation protected explicit_return_type "void"
	nparams 1
	  param inout name "subclass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a new class which the factory methods in
<code>AWTKeyStroke</code> will use when generating new
instances of <code>AWTKeyStroke</code>s. After invoking this
method, the factory methods will return instances of the specified
Class. The specified Class must be either <code>AWTKeyStroke</code>
or derived from <code>AWTKeyStroke</code>, and it must have a
no-arg constructor. The constructor can be of any accessibility,
including <code>private</code>. This operation
flushes the current <code>AWTKeyStroke</code> cache.

@param subclass the new Class of which the factory methods should create
       instances
@throws IllegalArgumentException if subclass is <code>null</code>,
        or if subclass does not have a no-arg constructor
@throws ClassCastException if subclass is not
        <code>AWTKeyStroke</code>, or a class derived from
        <code>AWTKeyStroke</code>
"
      end

      operation 6088834 "getCtor"
	class_operation private return_type class_ref 189186 // Constructor
	nparams 1
	  param in name "clazz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns noarg Constructor for class with accessible flag. No security
threat as accessible flag is set only for this Constructor object,
not for Class constructor.
"
      end

      operation 6088962 "getCachedStroke"
	class_operation private return_type class_ref 341506 // AWTKeyStroke
	nparams 4
	  param in name "keyChar" explicit_type "char"
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6089090 "getAWTKeyStroke"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 1
	  param in name "keyChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of an <code>AWTKeyStroke</code>
that represents a <code>KEY_TYPED</code> event for the
specified character.

@param keyChar the character value for a keyboard key
@return an <code>AWTKeyStroke</code> object for that key
"
      end

      operation 6089218 "getAWTKeyStroke"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 2
	  param inout name "keyChar" type class_ref 577026 // Character
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of an {@code AWTKeyStroke}
that represents a {@code KEY_TYPED} event for the
specified Character object and a set of modifiers. Note
that the first parameter is of type Character rather than
char. This is to avoid inadvertent clashes with
calls to <code>getAWTKeyStroke(int keyCode, int modifiers)</code>.

The modifiers consist of any combination of following:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers listed below also can be used, but they are
mapped to _DOWN_ modifiers. <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyChar the Character object for a keyboard character
@param modifiers a bitwise-ored combination of any modifiers
@return an <code>AWTKeyStroke</code> object for that key
@throws IllegalArgumentException if <code>keyChar</code> is
      <code>null</code>

@see java.awt.event.InputEvent
"
      end

      operation 6089346 "getAWTKeyStroke"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 3
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param inout name "onKeyRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of an <code>AWTKeyStroke</code>,
given a numeric key code and a set of modifiers, specifying
whether the key is activated when it is pressed or released.
<p>
The \"virtual key\" constants defined in
<code>java.awt.event.KeyEvent</code> can be
used to specify the key code. For example:<ul>
<li><code>java.awt.event.KeyEvent.VK_ENTER</code>
<li><code>java.awt.event.KeyEvent.VK_TAB</code>
<li><code>java.awt.event.KeyEvent.VK_SPACE</code>
</ul>
Alternatively, the key code may be obtained by calling
<code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code>.

The modifiers consist of any combination of:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyCode an int specifying the numeric code for a keyboard key
@param modifiers a bitwise-ored combination of any modifiers
@param onKeyRelease <code>true</code> if the <code>AWTKeyStroke</code>
       should represent a key release; <code>false</code> otherwise
@return an AWTKeyStroke object for that key

@see java.awt.event.KeyEvent
@see java.awt.event.InputEvent
"
      end

      operation 6089474 "getAWTKeyStroke"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 2
	  param in name "keyCode" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a shared instance of an <code>AWTKeyStroke</code>,
given a numeric key code and a set of modifiers. The returned
<code>AWTKeyStroke</code> will correspond to a key press.
<p>
The \"virtual key\" constants defined in
<code>java.awt.event.KeyEvent</code> can be
used to specify the key code. For example:<ul>
<li><code>java.awt.event.KeyEvent.VK_ENTER</code>
<li><code>java.awt.event.KeyEvent.VK_TAB</code>
<li><code>java.awt.event.KeyEvent.VK_SPACE</code>
</ul>
The modifiers consist of any combination of:<ul>
<li>java.awt.event.InputEvent.SHIFT_DOWN_MASK
<li>java.awt.event.InputEvent.CTRL_DOWN_MASK
<li>java.awt.event.InputEvent.META_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_DOWN_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK
</ul>
The old modifiers <ul>
<li>java.awt.event.InputEvent.SHIFT_MASK
<li>java.awt.event.InputEvent.CTRL_MASK
<li>java.awt.event.InputEvent.META_MASK
<li>java.awt.event.InputEvent.ALT_MASK
<li>java.awt.event.InputEvent.ALT_GRAPH_MASK
</ul>
also can be used, but they are mapped to _DOWN_ modifiers.

Since these numbers are all different powers of two, any combination of
them is an integer in which each bit represents a different modifier
key. Use 0 to specify no modifiers.

@param keyCode an int specifying the numeric code for a keyboard key
@param modifiers a bitwise-ored combination of any modifiers
@return an <code>AWTKeyStroke</code> object for that key

@see java.awt.event.KeyEvent
@see java.awt.event.InputEvent
"
      end

      operation 6089602 "getAWTKeyStrokeForEvent"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 1
	  param inout name "anEvent" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>AWTKeyStroke</code> which represents the
stroke which generated a given <code>KeyEvent</code>.
<p>
This method obtains the keyChar from a <code>KeyTyped</code>
event, and the keyCode from a <code>KeyPressed</code> or
<code>KeyReleased</code> event. The <code>KeyEvent</code> modifiers are
obtained for all three types of <code>KeyEvent</code>.

@param anEvent the <code>KeyEvent</code> from which to
     obtain the <code>AWTKeyStroke</code>
@throws NullPointerException if <code>anEvent</code> is null
@return the <code>AWTKeyStroke</code> that precipitated the event
"
      end

      operation 6089730 "getAWTKeyStroke"
	class_operation public return_type class_ref 341506 // AWTKeyStroke
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a string and returns an <code>AWTKeyStroke</code>.
The string must have the following syntax:
<pre>
   &lt;modifiers&gt;* (&lt;typedID&gt; | &lt;pressedReleasedID&gt;)

   modifiers := shift | control | ctrl | meta | alt | altGraph
   typedID := typed &lt;typedKey&gt;
   typedKey := string of length 1 giving Unicode character.
   pressedReleasedID := (pressed | released) key
   key := KeyEvent key code name, i.e. the name following \"VK_\".
</pre>
If typed, pressed or released is not specified, pressed is assumed. Here
are some examples:
<pre>
    \"INSERT\" =&gt; getAWTKeyStroke(KeyEvent.VK_INSERT, 0);
    \"control DELETE\" =&gt; getAWTKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK);
    \"alt shift X\" =&gt; getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK);
    \"alt shift released X\" =&gt; getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true);
    \"typed a\" =&gt; getAWTKeyStroke('a');
</pre>

@param s a String formatted as described above
@return an <code>AWTKeyStroke</code> object for that String
@throws IllegalArgumentException if <code>s</code> is <code>null</code>,
       or is formatted incorrectly
"
      end

      operation 6089858 "getVKCollection"
	class_operation private return_type class_ref 857474 // VKCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6089986 "getVKValue"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the integer constant for the KeyEvent.VK field named
<code>key</code>. This will throw an
<code>IllegalArgumentException</code> if <code>key</code> is
not a valid constant.
"
      end

      operation 6090114 "getKeyChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character for this <code>AWTKeyStroke</code>.

@return a char value
@see #getAWTKeyStroke(char)
@see KeyEvent#getKeyChar
"
      end

      operation 6090242 "getKeyCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric key code for this <code>AWTKeyStroke</code>.

@return an int containing the key code value
@see #getAWTKeyStroke(int,int)
@see KeyEvent#getKeyCode
"
      end

      operation 6090370 "getModifiers"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modifier keys for this <code>AWTKeyStroke</code>.

@return an int containing the modifiers
@see #getAWTKeyStroke(int,int)
"
      end

      operation 6090498 "isOnKeyRelease"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this <code>AWTKeyStroke</code> represents a key release.

@return <code>true</code> if this <code>AWTKeyStroke</code>
         represents a key release; <code>false</code> otherwise
@see #getAWTKeyStroke(int,int,boolean)
"
      end

      operation 6090626 "getKeyEventType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of <code>KeyEvent</code> which corresponds to
this <code>AWTKeyStroke</code>.

@return <code>KeyEvent.KEY_PRESSED</code>,
        <code>KeyEvent.KEY_TYPED</code>,
        or <code>KeyEvent.KEY_RELEASED</code>
@see java.awt.event.KeyEvent
"
      end

      operation 6090754 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a numeric value for this object that is likely to be unique,
making it a good choice as the index value in a hash table.

@return an int that represents this object
"
      end

      operation 6090882 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this object is identical to the specified object.

@param anObject the Object to compare this object to
@return true if the objects are identical
"
      end

      operation 6091010 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this object's properties.
The <code>String</code> returned by this method can be passed
as a parameter to <code>getAWTKeyStroke(String)</code> to produce
a key stroke equal to this key stroke.

@return a String representation of this object
@see #getAWTKeyStroke(String)
"
      end

      operation 6091138 "getModifiersText"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6091266 "getVKText"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param in name "keyCode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6091394 "readResolve"
	protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 261506 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a cached instance of <code>AWTKeyStroke</code> (or a subclass of
<code>AWTKeyStroke</code>) which is equal to this instance.

@return a cached instance which is equal to this instance
"
      end

      operation 6091522 "mapOldModifiers"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6091650 "mapNewModifiers"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 341762 "ComponentOrientation"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The ComponentOrientation class encapsulates the language-sensitive
orientation that is to be used to order the elements of a component
or of text. It is used to reflect the differences in this ordering
between Western alphabets, Middle Eastern (such as Hebrew), and Far
Eastern (such as Japanese).
<p>
Fundamentally, this governs items (such as characters) which are laid out
in lines, with the lines then laid out in a block. This also applies
to items in a widget: for example, in a check box where the box is
positioned relative to the text.
<p>
There are four different orientations used in modern languages
as in the following table.<br>
<pre>
LT          RT          TL          TR
A B C       C B A       A D G       G D A
D E F       F E D       B E H       H E B
G H I       I H G       C F I       I F C
</pre><br>
(In the header, the two-letter abbreviation represents the item direction
in the first letter, and the line direction in the second. For example,
LT means \"items left-to-right, lines top-to-bottom\",
TL means \"items top-to-bottom, lines left-to-right\", and so on.)
<p>
The orientations are:
<ul>
<li>LT - Western Europe (optional for Japanese, Chinese, Korean)
<li>RT - Middle East (Arabic, Hebrew)
<li>TR - Japanese, Chinese, Korean
<li>TL - Mongolian
</ul>
Components whose view and controller code depends on orientation
should use the <code>isLeftToRight()</code> and
<code>isHorizontal()</code> methods to
determine their behavior. They should not include switch-like
code that keys off of the constants, such as:
<pre>
if (orientation == LEFT_TO_RIGHT) {
  ...
} else if (orientation == RIGHT_TO_LEFT) {
  ...
} else {
  // Oops
}
</pre>
This is unsafe, since more constants may be added in the future and
since it is not guaranteed that orientation objects will be unique.
"
      classrelation 2904066 // <realization>
	relation 2904066 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2904066 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1345538 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4113291392143563828L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      attribute 1345666 "UNK_BIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Internal constants used in the implementation
"
      end

      attribute 1345794 "HORIZ_BIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1345922 "LTR_BIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2904194 // LEFT_TO_RIGHT (<unidirectional association>)
	relation 2904194 --->
	  a role_name "LEFT_TO_RIGHT" init_value "
                    new ComponentOrientation(HORIZ_BIT|LTR_BIT)" class_relation const_relation public
	    comment "
Items run left to right and lines flow top to bottom
Examples: English, French.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2904194 // LEFT_TO_RIGHT (<unidirectional association>)
	  b parent class_ref 341762 // ComponentOrientation
      end

      classrelation 2904322 // RIGHT_TO_LEFT (<unidirectional association>)
	relation 2904322 --->
	  a role_name "RIGHT_TO_LEFT" init_value "
                    new ComponentOrientation(HORIZ_BIT)" class_relation const_relation public
	    comment "
Items run right to left and lines flow top to bottom
Examples: Arabic, Hebrew.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2904322 // RIGHT_TO_LEFT (<unidirectional association>)
	  b parent class_ref 341762 // ComponentOrientation
      end

      classrelation 2904450 // UNKNOWN (<unidirectional association>)
	relation 2904450 --->
	  a role_name "UNKNOWN" init_value "
                    new ComponentOrientation(HORIZ_BIT|LTR_BIT|UNK_BIT)" class_relation const_relation public
	    comment "
Indicates that a component's orientation has not been set.
To preserve the behavior of existing applications,
isLeftToRight will return true for this value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2904450 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 341762 // ComponentOrientation
      end

      operation 6143362 "isHorizontal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Are lines horizontal?
This will return true for horizontal, left-to-right writing
systems such as Roman.
"
      end

      operation 6143490 "isLeftToRight"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "HorizontalLines: Do items run left-to-right?<br>
Vertical Lines:  Do lines run left-to-right?<br>
This will return true for horizontal, left-to-right writing
systems such as Roman.
"
      end

      operation 6143618 "getOrientation"
	class_operation public return_type class_ref 341762 // ComponentOrientation
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation that is appropriate for the given locale.
@param locale the specified locale
"
      end

      operation 6143746 "getOrientation"
	class_operation public return_type class_ref 341762 // ComponentOrientation
	nparams 1
	  param inout name "bdl" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the orientation appropriate for the given ResourceBundle's
localization.  Three approaches are tried, in the following order:
<ol>
<li>Retrieve a ComponentOrientation object from the ResourceBundle
     using the string \"Orientation\" as the key.
<li>Use the ResourceBundle.getLocale to determine the bundle's
     locale, then return the orientation for that locale.
<li>Return the default locale's orientation.
</ol>

@deprecated As of J2SE 1.4, use {@link #getOrientation(java.util.Locale)}.
"
      end

      attribute 1346050 "orientation"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6143874 "ComponentOrientation"
	private explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 343298 "Toolkit"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is the abstract superclass of all actual
implementations of the Abstract Window Toolkit. Subclasses of
the <code>Toolkit</code> class are used to bind the various components
to particular native toolkit implementations.
<p>
Many GUI events may be delivered to user
asynchronously, if the opposite is not specified explicitly.
As well as
many GUI operations may be performed asynchronously.
This fact means that if the state of a component is set, and then
the state immediately queried, the returned value may not yet
reflect the requested change.  This behavior includes, but is not
limited to:
<ul>
<li>Scrolling to a specified position.
<br>For example, calling <code>ScrollPane.setScrollPosition</code>
    and then <code>getScrollPosition</code> may return an incorrect
    value if the original request has not yet been processed.

<li>Moving the focus from one component to another.
<br>For more information, see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming\">Timing
Focus Transfers</a>, a section in
<a href=\"http://java.sun.com/docs/books/tutorial/uiswing/\">The Swing
Tutorial</a>.

<li>Making a top-level container visible.
<br>Calling <code>setVisible(true)</code> on a <code>Window</code>,
    <code>Frame</code> or <code>Dialog</code> may occur
    asynchronously.

<li>Setting the size or location of a top-level container.
<br>Calls to <code>setSize</code>, <code>setBounds</code> or
    <code>setLocation</code> on a <code>Window</code>,
    <code>Frame</code> or <code>Dialog</code> are forwarded
    to the underlying window management system and may be
    ignored or modified.  See {@link java.awt.Window} for
    more information.
</ul>
<p>
Most applications should not call any of the methods in this
class directly. The methods defined by <code>Toolkit</code> are
the \"glue\" that joins the platform-independent classes in the
<code>java.awt</code> package with their counterparts in
<code>java.awt.peer</code>. Some methods defined by
<code>Toolkit</code> query the native operating system directly.

@author      Sami Shaio
@author      Arthur van Hoff
@author      Fred Ecks
@since       JDK1.0
"
      operation 6355970 "createDesktopPeer"
	abstract protected return_type class_ref 863234 // DesktopPeer
	nparams 1
	  param inout name "target" type class_ref 862978 // Desktop
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of the <code>Desktop</code>
using the specified peer interface.
@param     target the desktop to be implemented
@return    this toolkit's implementation of the <code>Desktop</code>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Desktop
@see       java.awt.peer.DesktopPeer
@since 1.6
"
      end

      operation 6356098 "createButton"
	abstract protected return_type class_ref 878338 // ButtonPeer
	nparams 1
	  param inout name "target" type class_ref 858114 // Button
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Button</code> using
the specified peer interface.
@param     target the button to be implemented.
@return    this toolkit's implementation of <code>Button</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Button
@see       java.awt.peer.ButtonPeer
"
      end

      operation 6356226 "createTextField"
	abstract protected return_type class_ref 878466 // TextFieldPeer
	nparams 1
	  param inout name "target" type class_ref 877314 // TextField
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>TextField</code> using
the specified peer interface.
@param     target the text field to be implemented.
@return    this toolkit's implementation of <code>TextField</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.TextField
@see       java.awt.peer.TextFieldPeer
"
      end

      operation 6356354 "createLabel"
	abstract protected return_type class_ref 878594 // LabelPeer
	nparams 1
	  param inout name "target" type class_ref 870658 // Label
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Label</code> using
the specified peer interface.
@param     target the label to be implemented.
@return    this toolkit's implementation of <code>Label</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Label
@see       java.awt.peer.LabelPeer
"
      end

      operation 6356482 "createList"
	abstract protected return_type class_ref 878722 // ListPeer
	nparams 1
	  param inout name "target" type class_ref 861186 // List
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>List</code> using
the specified peer interface.
@param     target the list to be implemented.
@return    this toolkit's implementation of <code>List</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.List
@see       java.awt.peer.ListPeer
"
      end

      operation 6356610 "createCheckbox"
	abstract protected return_type class_ref 878850 // CheckboxPeer
	nparams 1
	  param inout name "target" type class_ref 858882 // Checkbox
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Checkbox</code> using
the specified peer interface.
@param     target the check box to be implemented.
@return    this toolkit's implementation of <code>Checkbox</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Checkbox
@see       java.awt.peer.CheckboxPeer
"
      end

      operation 6356738 "createScrollbar"
	abstract protected return_type class_ref 878978 // ScrollbarPeer
	nparams 1
	  param inout name "target" type class_ref 875138 // Scrollbar
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Scrollbar</code> using
the specified peer interface.
@param     target the scroll bar to be implemented.
@return    this toolkit's implementation of <code>Scrollbar</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Scrollbar
@see       java.awt.peer.ScrollbarPeer
"
      end

      operation 6356866 "createScrollPane"
	abstract protected return_type class_ref 879106 // ScrollPanePeer
	nparams 1
	  param inout name "target" type class_ref 875394 // ScrollPane
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>ScrollPane</code> using
the specified peer interface.
@param     target the scroll pane to be implemented.
@return    this toolkit's implementation of <code>ScrollPane</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.ScrollPane
@see       java.awt.peer.ScrollPanePeer
@since     JDK1.1
"
      end

      operation 6356994 "createTextArea"
	abstract protected return_type class_ref 879234 // TextAreaPeer
	nparams 1
	  param inout name "target" type class_ref 876674 // TextArea
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>TextArea</code> using
the specified peer interface.
@param     target the text area to be implemented.
@return    this toolkit's implementation of <code>TextArea</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.TextArea
@see       java.awt.peer.TextAreaPeer
"
      end

      operation 6357122 "createChoice"
	abstract protected return_type class_ref 879362 // ChoicePeer
	nparams 1
	  param inout name "target" type class_ref 860162 // Choice
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Choice</code> using
the specified peer interface.
@param     target the choice to be implemented.
@return    this toolkit's implementation of <code>Choice</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Choice
@see       java.awt.peer.ChoicePeer
"
      end

      operation 6357250 "createFrame"
	abstract protected return_type class_ref 879490 // FramePeer
	nparams 1
	  param inout name "target" type class_ref 393346 // Frame
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Frame</code> using
the specified peer interface.
@param     target the frame to be implemented.
@return    this toolkit's implementation of <code>Frame</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Frame
@see       java.awt.peer.FramePeer
"
      end

      operation 6357378 "createCanvas"
	abstract protected return_type class_ref 879618 // CanvasPeer
	nparams 1
	  param inout name "target" type class_ref 858370 // Canvas
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Canvas</code> using
the specified peer interface.
@param     target the canvas to be implemented.
@return    this toolkit's implementation of <code>Canvas</code>.
@see       java.awt.Canvas
@see       java.awt.peer.CanvasPeer
"
      end

      operation 6357506 "createPanel"
	abstract protected return_type class_ref 879746 // PanelPeer
	nparams 1
	  param inout name "target" type class_ref 855042 // Panel
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Panel</code> using
the specified peer interface.
@param     target the panel to be implemented.
@return    this toolkit's implementation of <code>Panel</code>.
@see       java.awt.Panel
@see       java.awt.peer.PanelPeer
"
      end

      operation 6357634 "createWindow"
	abstract protected return_type class_ref 879874 // WindowPeer
	nparams 1
	  param inout name "target" type class_ref 347394 // Window
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Window</code> using
the specified peer interface.
@param     target the window to be implemented.
@return    this toolkit's implementation of <code>Window</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Window
@see       java.awt.peer.WindowPeer
"
      end

      operation 6357762 "createDialog"
	abstract protected return_type class_ref 880002 // DialogPeer
	nparams 1
	  param inout name "target" type class_ref 469122 // Dialog
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Dialog</code> using
the specified peer interface.
@param     target the dialog to be implemented.
@return    this toolkit's implementation of <code>Dialog</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Dialog
@see       java.awt.peer.DialogPeer
"
      end

      operation 6357890 "createMenuBar"
	abstract protected return_type class_ref 880130 // MenuBarPeer
	nparams 1
	  param inout name "target" type class_ref 866562 // MenuBar
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>MenuBar</code> using
the specified peer interface.
@param     target the menu bar to be implemented.
@return    this toolkit's implementation of <code>MenuBar</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.MenuBar
@see       java.awt.peer.MenuBarPeer
"
      end

      operation 6358018 "createMenu"
	abstract protected return_type class_ref 880258 // MenuPeer
	nparams 1
	  param inout name "target" type class_ref 872194 // Menu
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Menu</code> using
the specified peer interface.
@param     target the menu to be implemented.
@return    this toolkit's implementation of <code>Menu</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.Menu
@see       java.awt.peer.MenuPeer
"
      end

      operation 6358146 "createPopupMenu"
	abstract protected return_type class_ref 880386 // PopupMenuPeer
	nparams 1
	  param inout name "target" type class_ref 341378 // PopupMenu
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>PopupMenu</code> using
the specified peer interface.
@param     target the popup menu to be implemented.
@return    this toolkit's implementation of <code>PopupMenu</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.PopupMenu
@see       java.awt.peer.PopupMenuPeer
@since     JDK1.1
"
      end

      operation 6358274 "createMenuItem"
	abstract protected return_type class_ref 880514 // MenuItemPeer
	nparams 1
	  param inout name "target" type class_ref 859394 // MenuItem
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>MenuItem</code> using
the specified peer interface.
@param     target the menu item to be implemented.
@return    this toolkit's implementation of <code>MenuItem</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.MenuItem
@see       java.awt.peer.MenuItemPeer
"
      end

      operation 6358402 "createFileDialog"
	abstract protected return_type class_ref 880642 // FileDialogPeer
	nparams 1
	  param inout name "target" type class_ref 865154 // FileDialog
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>FileDialog</code> using
the specified peer interface.
@param     target the file dialog to be implemented.
@return    this toolkit's implementation of <code>FileDialog</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.FileDialog
@see       java.awt.peer.FileDialogPeer
"
      end

      operation 6358530 "createCheckboxMenuItem"
	abstract protected return_type class_ref 880770 // CheckboxMenuItemPeer
	nparams 1
	  param inout name "target" type class_ref 859266 // CheckboxMenuItem
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates this toolkit's implementation of <code>CheckboxMenuItem</code> using
the specified peer interface.
@param     target the checkbox menu item to be implemented.
@return    this toolkit's implementation of <code>CheckboxMenuItem</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.CheckboxMenuItem
@see       java.awt.peer.CheckboxMenuItemPeer
"
      end

      operation 6358658 "getMouseInfoPeer"
	protected return_type class_ref 880898 // MouseInfoPeer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains this toolkit's implementation of helper class for
<code>MouseInfo</code> operations.
@return    this toolkit's implementation of  helper for <code>MouseInfo</code>
@throws    UnsupportedOperationException if this operation is not implemented
@see       java.awt.peer.MouseInfoPeer
@see       java.awt.MouseInfo
@since 1.5
"
      end

      classrelation 2983042 // lightweightMarker (<unidirectional association>)
	relation 2983042 --->
	  a role_name "lightweightMarker" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983042 // lightweightMarker (<unidirectional association>)
	  b parent class_ref 881026 // LightweightPeer
      end

      operation 6358786 "createComponent"
	protected return_type class_ref 881026 // LightweightPeer
	nparams 1
	  param inout name "target" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a peer for a component or container.  This peer is windowless
and allows the Component and Container classes to be extended directly
to create windowless components that are defined entirely in java.

@param target The Component to be created.
"
      end

      operation 6358914 "getFontPeer"
	abstract protected return_type class_ref 865666 // FontPeer
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "style" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates this toolkit's implementation of <code>Font</code> using
the specified peer interface.
@param     name the font to be implemented
@param     style the style of the font, such as <code>PLAIN</code>,
           <code>BOLD</code>, <code>ITALIC</code>, or a combination
@return    this toolkit's implementation of <code>Font</code>
@see       java.awt.Font
@see       java.awt.peer.FontPeer
@see       java.awt.GraphicsEnvironment#getAllFonts
@deprecated  see java.awt.GraphicsEnvironment#getAllFonts
"
      end

      operation 6359042 "loadSystemColors"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "systemColors" explicit_type "int"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The following method is called by the private method
 <code>updateSystemColors</code> in <code>SystemColor</code>.

Fills in the integer array that is supplied as an argument
with the current system color values.

@param     systemColors an integer array.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since     JDK1.1
"
      end

      operation 6359170 "setDynamicLayout"
	public explicit_return_type "void"
	nparams 1
	  param in name "dynamic" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls whether the layout of Containers is validated dynamically
during resizing, or statically, after resizing is complete.
Use {@code isDynamicLayoutActive()} to detect if this feature enabled
in this program and is supported by this operating system
and/or window manager.
Note that this feature is supported not on all platforms, and
conversely, that this feature cannot be turned off on some platforms.
On these platforms where dynamic layout during resizing is not supported
(or is always supported), setting this property has no effect.
Note that this feature can be set or unset as a property of the
operating system or window manager on some platforms.  On such
platforms, the dynamic resize property must be set at the operating
system or window manager level before this method can take effect.
This method does not change support or settings of the underlying
operating system or
window manager.  The OS/WM support can be
queried using getDesktopProperty(\"awt.dynamicLayoutSupported\") method.

@param     dynamic  If true, Containers should re-layout their
           components as the Container is being resized.  If false,
           the layout will be validated after resizing is completed.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see       #isDynamicLayoutSet()
@see       #isDynamicLayoutActive()
@see       #getDesktopProperty(String propertyName)
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.4
"
      end

      operation 6359298 "isDynamicLayoutSet"
	protected explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the layout of Containers is validated dynamically
during resizing, or statically, after resizing is complete.
Note: this method returns the value that was set programmatically;
it does not reflect support at the level of the operating system
or window manager for dynamic layout on resizing, or the current
operating system or window manager settings.  The OS/WM support can
be queried using getDesktopProperty(\"awt.dynamicLayoutSupported\").

@return    true if validation of Containers is done dynamically,
           false if validation is done after resizing is finished.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see       #setDynamicLayout(boolean dynamic)
@see       #isDynamicLayoutActive()
@see       #getDesktopProperty(String propertyName)
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.4
"
      end

      operation 6359426 "isDynamicLayoutActive"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether dynamic layout of Containers on resize is
currently active (both set in program
( {@code isDynamicLayoutSet()} )
, and supported
by the underlying operating system and/or window manager).
If dynamic layout is currently inactive then Containers
re-layout their components when resizing is completed. As a result
the {@code Component.validate()} method will be invoked only
once per resize.
If dynamic layout is currently active then Containers
re-layout their components on every native resize event and
the {@code validate()} method will be invoked each time.
The OS/WM support can be queried using
the getDesktopProperty(\"awt.dynamicLayoutSupported\") method.

@return    true if dynamic layout of Containers on resize is
           currently active, false otherwise.
@exception HeadlessException if the GraphicsEnvironment.isHeadless()
           method returns true
@see       #setDynamicLayout(boolean dynamic)
@see       #isDynamicLayoutSet()
@see       #getDesktopProperty(String propertyName)
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.4
"
      end

      operation 6359554 "getScreenSize"
	abstract public return_type class_ref 316802 // Dimension
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of the screen.  On systems with multiple displays, the
primary display is used.  Multi-screen aware display dimensions are
available from <code>GraphicsConfiguration</code> and
<code>GraphicsDevice</code>.
@return    the size of this toolkit's screen, in pixels.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsConfiguration#getBounds
@see       java.awt.GraphicsDevice#getDisplayMode
@see       java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6359682 "getScreenResolution"
	abstract public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the screen resolution in dots-per-inch.
@return    this toolkit's screen resolution, in dots-per-inch.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6359810 "getScreenInsets"
	public return_type class_ref 343938 // Insets
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the insets of the screen.
@param     gc a <code>GraphicsConfiguration</code>
@return    the insets of this toolkit's screen, in pixels.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.4
"
      end

      operation 6359938 "getColorModel"
	abstract public return_type class_ref 312066 // ColorModel
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the color model of this toolkit's screen.
<p>
<code>ColorModel</code> is an abstract class that
encapsulates the ability to translate between the
pixel values of an image and its red, green, blue,
and alpha components.
<p>
This toolkit method is called by the
<code>getColorModel</code> method
of the <code>Component</code> class.
@return    the color model of this toolkit's screen.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.image.ColorModel
@see       java.awt.Component#getColorModel
"
      end

      operation 6360066 "getFontList"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the names of the available fonts in this toolkit.<p>
For 1.1, the following font names are deprecated (the replacement
name follows):
<ul>
<li>TimesRoman (use Serif)
<li>Helvetica (use SansSerif)
<li>Courier (use Monospaced)
</ul><p>
The ZapfDingbats fontname is also deprecated in 1.1 but the characters
are defined in Unicode starting at 0x2700, and as of 1.1 Java supports
those characters.
@return    the names of the available fonts in this toolkit.
@deprecated see {@link java.awt.GraphicsEnvironment#getAvailableFontFamilyNames()}
@see java.awt.GraphicsEnvironment#getAvailableFontFamilyNames()
"
      end

      operation 6360194 "getFontMetrics"
	abstract public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets the screen device metrics for rendering of the font.
@param     font   a font
@return    the screen metrics of the specified font in this toolkit
@deprecated  As of JDK version 1.2, replaced by the <code>Font</code>
         method <code>getLineMetrics</code>.
@see java.awt.font.LineMetrics
@see java.awt.Font#getLineMetrics
@see java.awt.GraphicsEnvironment#getScreenDevices
"
      end

      operation 6360322 "sync"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Synchronizes this toolkit's graphics state. Some window systems
may do buffering of graphics events.
<p>
This method ensures that the display is up-to-date. It is useful
for animation.
"
      end

      classrelation 2983170 // toolkit (<unidirectional association>)
	relation 2983170 --->
	  a role_name "toolkit" class_relation private
	    comment "
The default toolkit.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983170 // toolkit (<unidirectional association>)
	  b parent class_ref 343298 // Toolkit
      end

      classrelation 2983298 // atNames (<unidirectional association>)
	relation 2983298 --->
	  a role_name "atNames" class_relation private
	    comment "
Used internally by the assistive technologies functions; set at
init time and used at load time

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983298 // atNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6360450 "initAssistiveTechnologies"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes properties related to assistive technologies.
These properties are used both in the loadAssistiveProperties()
function below, as well as other classes in the jdk that depend
on the properties (such as the use of the screen_magnifier_present
property in Java2D hardware acceleration initialization).  The
initialization of the properties must be done before the platform-
specific Toolkit class is instantiated so that all necessary
properties are set up properly before any classes dependent upon them
are initialized.
"
      end

      operation 6360578 "loadAssistiveTechnologies"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads additional classes into the VM, using the property
'assistive_technologies' specified in the Sun reference
implementation by a line in the 'accessibility.properties'
file.  The form is \"assistive_technologies=...\" where
the \"...\" is a comma-separated list of assistive technology
classes to load.  Each class is loaded in the order given
and a single instance of each is created using
Class.forName(class).newInstance().  All errors are handled
via an AWTError exception.

<p>The assumption is made that assistive technology classes are supplied
as part of INSTALLED (as opposed to: BUNDLED) extensions or specified
on the class path
(and therefore can be loaded using the class loader returned by
a call to <code>ClassLoader.getSystemClassLoader</code>, whose
delegation parent is the extension class loader for installed
extensions).
"
      end

      operation 6360706 "getDefaultToolkit"
	class_operation public return_type class_ref 343298 // Toolkit
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default toolkit.
<p>
If a system property named <code>\"java.awt.headless\"</code> is set
to <code>true</code> then the headless implementation
of <code>Toolkit</code> is used.
<p>
If there is no <code>\"java.awt.headless\"</code> or it is set to
<code>false</code> and there is a system property named
<code>\"awt.toolkit\"</code>,
that property is treated as the name of a class that is a subclass
of <code>Toolkit</code>;
otherwise the default platform-specific implementation of
<code>Toolkit</code> is used.
<p>
Also loads additional classes into the VM, using the property
'assistive_technologies' specified in the Sun reference
implementation by a line in the 'accessibility.properties'
file.  The form is \"assistive_technologies=...\" where
the \"...\" is a comma-separated list of assistive technology
classes to load.  Each class is loaded in the order given
and a single instance of each is created using
Class.forName(class).newInstance().  This is done just after
the AWT toolkit is created.  All errors are handled via an
AWTError exception.
@return    the default toolkit.
@exception  AWTError  if a toolkit could not be found, or
                if one could not be accessed or instantiated.
"
      end

      operation 6360834 "getImage"
	abstract public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an image which gets pixel data from the specified file,
whose format can be either GIF, JPEG or PNG.
The underlying toolkit attempts to resolve multiple requests
with the same filename to the same returned Image.
<p>
Since the mechanism required to facilitate this sharing of
<code>Image</code> objects may continue to hold onto images
that are no longer in use for an indefinite period of time,
developers are encouraged to implement their own caching of
images by using the {@link #createImage(java.lang.String) createImage}
variant wherever available.
If the image data contained in the specified file changes,
the <code>Image</code> object returned from this method may
still contain stale information which was loaded from the
file after a prior call.
Previously loaded image data can be manually discarded by
calling the {@link Image#flush flush} method on the
returned <code>Image</code>.
<p>
This method first checks if there is a security manager installed.
If so, the method calls the security manager's
<code>checkRead</code> method with the file specified to ensure
that the access to the image is allowed.
@param     filename   the name of a file containing pixel data
                        in a recognized file format.
@return    an image which gets its pixel data from
                        the specified file.
@throws SecurityException  if a security manager exists and its
                           checkRead method doesn't allow the operation.
@see #createImage(java.lang.String)
"
      end

      operation 6360962 "getImage"
	abstract public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an image which gets pixel data from the specified URL.
The pixel data referenced by the specified URL must be in one
of the following formats: GIF, JPEG or PNG.
The underlying toolkit attempts to resolve multiple requests
with the same URL to the same returned Image.
<p>
Since the mechanism required to facilitate this sharing of
<code>Image</code> objects may continue to hold onto images
that are no longer in use for an indefinite period of time,
developers are encouraged to implement their own caching of
images by using the {@link #createImage(java.net.URL) createImage}
variant wherever available.
If the image data stored at the specified URL changes,
the <code>Image</code> object returned from this method may
still contain stale information which was fetched from the
URL after a prior call.
Previously loaded image data can be manually discarded by
calling the {@link Image#flush flush} method on the
returned <code>Image</code>.
<p>
This method first checks if there is a security manager installed.
If so, the method calls the security manager's
<code>checkPermission</code> method with the
url.openConnection().getPermission() permission to ensure
that the access to the image is allowed. For compatibility
with pre-1.2 security managers, if the access is denied with
<code>FilePermission</code> or <code>SocketPermission</code>,
the method throws the <code>SecurityException</code>
if the corresponding 1.1-style SecurityManager.checkXXX method
also denies permission.
@param     url   the URL to use in fetching the pixel data.
@return    an image which gets its pixel data from
                        the specified URL.
@throws SecurityException  if a security manager exists and its
                           checkPermission method doesn't allow
                           the operation.
@see #createImage(java.net.URL)
"
      end

      operation 6361090 "createImage"
	abstract public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an image which gets pixel data from the specified file.
The returned Image is a new object which will not be shared
with any other caller of this method or its getImage variant.
<p>
This method first checks if there is a security manager installed.
If so, the method calls the security manager's
<code>checkRead</code> method with the specified file to ensure
that the image creation is allowed.
@param     filename   the name of a file containing pixel data
                        in a recognized file format.
@return    an image which gets its pixel data from
                        the specified file.
@throws SecurityException  if a security manager exists and its
                           checkRead method doesn't allow the operation.
@see #getImage(java.lang.String)
"
      end

      operation 6361218 "createImage"
	abstract public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an image which gets pixel data from the specified URL.
The returned Image is a new object which will not be shared
with any other caller of this method or its getImage variant.
<p>
This method first checks if there is a security manager installed.
If so, the method calls the security manager's
<code>checkPermission</code> method with the
url.openConnection().getPermission() permission to ensure
that the image creation is allowed. For compatibility
with pre-1.2 security managers, if the access is denied with
<code>FilePermission</code> or <code>SocketPermission</code>,
the method throws <code>SecurityException</code>
if the corresponding 1.1-style SecurityManager.checkXXX method
also denies permission.
@param     url   the URL to use in fetching the pixel data.
@return    an image which gets its pixel data from
                        the specified URL.
@throws SecurityException  if a security manager exists and its
                           checkPermission method doesn't allow
                           the operation.
@see #getImage(java.net.URL)
"
      end

      operation 6361346 "prepareImage"
	abstract public explicit_return_type "boolean"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepares an image for rendering.
<p>
If the values of the width and height arguments are both
<code>-1</code>, this method prepares the image for rendering
on the default screen; otherwise, this method prepares an image
for rendering on the default screen at the specified width and height.
<p>
The image data is downloaded asynchronously in another thread,
and an appropriately scaled screen representation of the image is
generated.
<p>
This method is called by components <code>prepareImage</code>
methods.
<p>
Information on the flags returned by this method can be found
with the definition of the <code>ImageObserver</code> interface.

@param     image      the image for which to prepare a
                          screen representation.
@param     width      the width of the desired screen
                          representation, or <code>-1</code>.
@param     height     the height of the desired screen
                          representation, or <code>-1</code>.
@param     observer   the <code>ImageObserver</code>
                          object to be notified as the
                          image is being prepared.
@return    <code>true</code> if the image has already been
                fully prepared; <code>false</code> otherwise.
@see       java.awt.Component#prepareImage(java.awt.Image,
                java.awt.image.ImageObserver)
@see       java.awt.Component#prepareImage(java.awt.Image,
                int, int, java.awt.image.ImageObserver)
@see       java.awt.image.ImageObserver
"
      end

      operation 6361474 "checkImage"
	abstract public explicit_return_type "int"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates the construction status of a specified image that is
being prepared for display.
<p>
If the values of the width and height arguments are both
<code>-1</code>, this method returns the construction status of
a screen representation of the specified image in this toolkit.
Otherwise, this method returns the construction status of a
scaled representation of the image at the specified width
and height.
<p>
This method does not cause the image to begin loading.
An application must call <code>prepareImage</code> to force
the loading of an image.
<p>
This method is called by the component's <code>checkImage</code>
methods.
<p>
Information on the flags returned by this method can be found
with the definition of the <code>ImageObserver</code> interface.
@param     image   the image whose status is being checked.
@param     width   the width of the scaled version whose status is
                being checked, or <code>-1</code>.
@param     height  the height of the scaled version whose status
                is being checked, or <code>-1</code>.
@param     observer   the <code>ImageObserver</code> object to be
                notified as the image is being prepared.
@return    the bitwise inclusive <strong>OR</strong> of the
                <code>ImageObserver</code> flags for the
                image data that is currently available.
@see       java.awt.Toolkit#prepareImage(java.awt.Image,
                int, int, java.awt.image.ImageObserver)
@see       java.awt.Component#checkImage(java.awt.Image,
                java.awt.image.ImageObserver)
@see       java.awt.Component#checkImage(java.awt.Image,
                int, int, java.awt.image.ImageObserver)
@see       java.awt.image.ImageObserver
"
      end

      operation 6361602 "createImage"
	abstract public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "producer" type class_ref 344066 // ImageProducer
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image with the specified image producer.
@param     producer the image producer to be used.
@return    an image with the specified image producer.
@see       java.awt.Image
@see       java.awt.image.ImageProducer
@see       java.awt.Component#createImage(java.awt.image.ImageProducer)
"
      end

      operation 6361730 "createImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "imagedata" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image which decodes the image stored in the specified
byte array.
<p>
The data must be in some image format, such as GIF or JPEG,
that is supported by this toolkit.
@param     imagedata   an array of bytes, representing
                        image data in a supported image format.
@return    an image.
@since     JDK1.1
"
      end

      operation 6361858 "createImage"
	abstract public return_type class_ref 340098 // Image
	nparams 3
	  param inout name "imagedata" explicit_type "byte"
	multiplicity "[]"
	  param in name "imageoffset" explicit_type "int"
	  param in name "imagelength" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image which decodes the image stored in the specified
byte array, and at the specified offset and length.
The data must be in some image format, such as GIF or JPEG,
that is supported by this toolkit.
@param     imagedata   an array of bytes, representing
                        image data in a supported image format.
@param     imageoffset  the offset of the beginning
                        of the data in the array.
@param     imagelength  the length of the data in the array.
@return    an image.
@since     JDK1.1
"
      end

      operation 6361986 "getPrintJob"
	abstract public return_type class_ref 874370 // PrintJob
	nparams 3
	  param inout name "frame" type class_ref 393346 // Frame
	  param inout name "jobtitle" type class_ref 128130 // String
	  param inout name "props" type class_ref 240130 // Properties
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a <code>PrintJob</code> object which is the result of initiating
a print operation on the toolkit's platform.
<p>
Each actual implementation of this method should first check if there
is a security manager installed. If there is, the method should call
the security manager's <code>checkPrintJobAccess</code> method to
ensure initiation of a print operation is allowed. If the default
implementation of <code>checkPrintJobAccess</code> is used (that is,
that method is not overriden), then this results in a call to the
security manager's <code>checkPermission</code> method with a <code>
RuntimePermission(\"queuePrintJob\")</code> permission.

@param   frame the parent of the print dialog. May not be null.
@param   jobtitle the title of the PrintJob. A null title is equivalent
         to \"\".
@param   props a Properties object containing zero or more properties.
         Properties are not standardized and are not consistent across
         implementations. Because of this, PrintJobs which require job
         and page control should use the version of this function which
         takes JobAttributes and PageAttributes objects. This object
         may be updated to reflect the user's job choices on exit. May
         be null.
@return  a <code>PrintJob</code> object, or <code>null</code> if the
         user cancelled the print job.
@throws  NullPointerException if frame is null
@throws  SecurityException if this thread is not allowed to initiate a
         print job request
@see     java.awt.GraphicsEnvironment#isHeadless
@see     java.awt.PrintJob
@see     java.lang.RuntimePermission
@since   JDK1.1
"
      end

      operation 6362114 "getPrintJob"
	public return_type class_ref 874370 // PrintJob
	nparams 4
	  param inout name "frame" type class_ref 393346 // Frame
	  param inout name "jobtitle" type class_ref 128130 // String
	  param inout name "jobAttributes" type class_ref 869890 // JobAttributes
	  param inout name "pageAttributes" type class_ref 873090 // PageAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a <code>PrintJob</code> object which is the result of initiating
a print operation on the toolkit's platform.
<p>
Each actual implementation of this method should first check if there
is a security manager installed. If there is, the method should call
the security manager's <code>checkPrintJobAccess</code> method to
ensure initiation of a print operation is allowed. If the default
implementation of <code>checkPrintJobAccess</code> is used (that is,
that method is not overriden), then this results in a call to the
security manager's <code>checkPermission</code> method with a <code>
RuntimePermission(\"queuePrintJob\")</code> permission.

@param   frame the parent of the print dialog. May not be null.
@param   jobtitle the title of the PrintJob. A null title is equivalent
         to \"\".
@param   jobAttributes a set of job attributes which will control the
         PrintJob. The attributes will be updated to reflect the user's
         choices as outlined in the JobAttributes documentation. May be
         null.
@param   pageAttributes a set of page attributes which will control the
         PrintJob. The attributes will be applied to every page in the
         job. The attributes will be updated to reflect the user's
         choices as outlined in the PageAttributes documentation. May be
         null.
@return  a <code>PrintJob</code> object, or <code>null</code> if the
         user cancelled the print job.
@throws  NullPointerException if frame is null
@throws  IllegalArgumentException if pageAttributes specifies differing
         cross feed and feed resolutions. Also if this thread has
         access to the file system and jobAttributes specifies
         print to file, and the specified destination file exists but
         is a directory rather than a regular file, does not exist but
         cannot be created, or cannot be opened for any other reason.
         However in the case of print to file, if a dialog is also
         requested to be displayed then the user will be given an
         opportunity to select a file and proceed with printing.
         The dialog will ensure that the selected output file
         is valid before returning from this method.
@throws  SecurityException if this thread is not allowed to initiate a
         print job request, or if jobAttributes specifies print to file,
         and this thread is not allowed to access the file system
@see     java.awt.PrintJob
@see     java.awt.GraphicsEnvironment#isHeadless
@see     java.lang.RuntimePermission
@see     java.awt.JobAttributes
@see     java.awt.PageAttributes
@since   1.3
"
      end

      operation 6362242 "beep"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Emits an audio beep depending on native system settings and hardware
capabilities.
@since     JDK1.1
"
      end

      operation 6362370 "getSystemClipboard"
	abstract public return_type class_ref 352514 // Clipboard
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the singleton instance of the system Clipboard which interfaces
with clipboard facilities provided by the native platform. This
clipboard enables data transfer between Java programs and native
applications which use native clipboard facilities.
<p>
In addition to any and all formats specified in the flavormap.properties
file, or other file specified by the <code>AWT.DnD.flavorMapFileURL
</code> Toolkit property, text returned by the system Clipboard's <code>
getTransferData()</code> method is available in the following flavors:
<ul>
<li>DataFlavor.stringFlavor</li>
<li>DataFlavor.plainTextFlavor (<b>deprecated</b>)</li>
</ul>
As with <code>java.awt.datatransfer.StringSelection</code>, if the
requested flavor is <code>DataFlavor.plainTextFlavor</code>, or an
equivalent flavor, a Reader is returned. <b>Note:</b> The behavior of
the system Clipboard's <code>getTransferData()</code> method for <code>
DataFlavor.plainTextFlavor</code>, and equivalent DataFlavors, is
inconsistent with the definition of <code>DataFlavor.plainTextFlavor
</code>. Because of this, support for <code>
DataFlavor.plainTextFlavor</code>, and equivalent flavors, is
<b>deprecated</b>.
<p>
Each actual implementation of this method should first check if there
is a security manager installed. If there is, the method should call
the security manager's {@link SecurityManager#checkPermission
checkPermission} method to check {@code AWTPermission(\"accessClipboard\")}.

@return    the system Clipboard
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.datatransfer.Clipboard
@see       java.awt.datatransfer.StringSelection
@see       java.awt.datatransfer.DataFlavor#stringFlavor
@see       java.awt.datatransfer.DataFlavor#plainTextFlavor
@see       java.io.Reader
@see       java.awt.AWTPermission
@since     JDK1.1
"
      end

      operation 6362498 "getSystemSelection"
	public return_type class_ref 352514 // Clipboard
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the singleton instance of the system selection as a
<code>Clipboard</code> object. This allows an application to read and
modify the current, system-wide selection.
<p>
An application is responsible for updating the system selection whenever
the user selects text, using either the mouse or the keyboard.
Typically, this is implemented by installing a
<code>FocusListener</code> on all <code>Component</code>s which support
text selection, and, between <code>FOCUS_GAINED</code> and
<code>FOCUS_LOST</code> events delivered to that <code>Component</code>,
updating the system selection <code>Clipboard</code> when the selection
changes inside the <code>Component</code>. Properly updating the system
selection ensures that a Java application will interact correctly with
native applications and other Java applications running simultaneously
on the system. Note that <code>java.awt.TextComponent</code> and
<code>javax.swing.text.JTextComponent</code> already adhere to this
policy. When using these classes, and their subclasses, developers need
not write any additional code.
<p>
Some platforms do not support a system selection <code>Clipboard</code>.
On those platforms, this method will return <code>null</code>. In such a
case, an application is absolved from its responsibility to update the
system selection <code>Clipboard</code> as described above.
<p>
Each actual implementation of this method should first check if there
is a security manager installed. If there is, the method should call
the security manager's {@link SecurityManager#checkPermission
checkPermission} method to check {@code AWTPermission(\"accessClipboard\")}.

@return the system selection as a <code>Clipboard</code>, or
        <code>null</code> if the native platform does not support a
        system selection <code>Clipboard</code>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true

@see java.awt.datatransfer.Clipboard
@see java.awt.event.FocusListener
@see java.awt.event.FocusEvent#FOCUS_GAINED
@see java.awt.event.FocusEvent#FOCUS_LOST
@see TextComponent
@see javax.swing.text.JTextComponent
@see AWTPermission
@see GraphicsEnvironment#isHeadless
@since 1.4
"
      end

      operation 6362626 "getMenuShortcutKeyMask"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines which modifier key is the appropriate accelerator
key for menu shortcuts.
<p>
Menu shortcuts, which are embodied in the
<code>MenuShortcut</code> class, are handled by the
<code>MenuBar</code> class.
<p>
By default, this method returns <code>Event.CTRL_MASK</code>.
Toolkit implementations should override this method if the
<b>Control</b> key isn't the correct key for accelerators.
@return    the modifier mask on the <code>Event</code> class
                that is used for menu shortcuts on this toolkit.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.MenuBar
@see       java.awt.MenuShortcut
@since     JDK1.1
"
      end

      operation 6362754 "getLockingKeyState"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "keyCode" explicit_type "int"
	nexceptions 1
	  exception class_ref 193538 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given locking key on the keyboard is currently in
its \"on\" state.
Valid key codes are
{@link java.awt.event.KeyEvent#VK_CAPS_LOCK VK_CAPS_LOCK},
{@link java.awt.event.KeyEvent#VK_NUM_LOCK VK_NUM_LOCK},
{@link java.awt.event.KeyEvent#VK_SCROLL_LOCK VK_SCROLL_LOCK}, and
{@link java.awt.event.KeyEvent#VK_KANA_LOCK VK_KANA_LOCK}.

@exception java.lang.IllegalArgumentException if <code>keyCode</code>
is not one of the valid key codes
@exception java.lang.UnsupportedOperationException if the host system doesn't
allow getting the state of this key programmatically, or if the keyboard
doesn't have this key
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since 1.3
"
      end

      operation 6362882 "setLockingKeyState"
	public explicit_return_type "void"
	nparams 2
	  param in name "keyCode" explicit_type "int"
	  param inout name "on" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 193538 // UnsupportedOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of the given locking key on the keyboard.
Valid key codes are
{@link java.awt.event.KeyEvent#VK_CAPS_LOCK VK_CAPS_LOCK},
{@link java.awt.event.KeyEvent#VK_NUM_LOCK VK_NUM_LOCK},
{@link java.awt.event.KeyEvent#VK_SCROLL_LOCK VK_SCROLL_LOCK}, and
{@link java.awt.event.KeyEvent#VK_KANA_LOCK VK_KANA_LOCK}.
<p>
Depending on the platform, setting the state of a locking key may
involve event processing and therefore may not be immediately
observable through getLockingKeyState.

@exception java.lang.IllegalArgumentException if <code>keyCode</code>
is not one of the valid key codes
@exception java.lang.UnsupportedOperationException if the host system doesn't
allow setting the state of this key programmatically, or if the keyboard
doesn't have this key
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since 1.3
"
      end

      operation 6363010 "getNativeContainer"
	class_operation protected return_type class_ref 338690 // Container
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Give native peers the ability to query the native container
given a native component (eg the direct parent may be lightweight).
"
      end

      operation 6363138 "createCustomCursor"
	public return_type class_ref 340866 // Cursor
	nparams 3
	  param inout name "cursor" type class_ref 340098 // Image
	  param inout name "hotSpot" type class_ref 323714 // Point
	  param inout name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 881154 // IndexOutOfBoundsException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new custom cursor object.
If the image to display is invalid, the cursor will be hidden (made
completely transparent), and the hotspot will be set to (0, 0).

<p>Note that multi-frame images are invalid and may cause this
method to hang.

@param cursor the image to display when the cursor is activated
@param hotSpot the X and Y of the large cursor's hot spot; the
  hotSpot values must be less than the Dimension returned by
  <code>getBestCursorSize</code>
@param     name a localized description of the cursor, for Java Accessibility use
@exception IndexOutOfBoundsException if the hotSpot values are outside
  the bounds of the cursor
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.2
"
      end

      operation 6363266 "getBestCursorSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "preferredWidth" explicit_type "int"
	  param in name "preferredHeight" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the supported cursor dimension which is closest to the desired
sizes.  Systems which only support a single cursor size will return that
size regardless of the desired sizes.  Systems which don't support custom
cursors will return a dimension of 0, 0. <p>
Note:  if an image is used whose dimensions don't match a supported size
(as returned by this method), the Toolkit implementation will attempt to
resize the image to a supported size.
Since converting low-resolution images is difficult,
no guarantees are made as to the quality of a cursor image which isn't a
supported size.  It is therefore recommended that this method
be called and an appropriate image used so no image conversion is made.

@param     preferredWidth the preferred cursor width the component would like
to use.
@param     preferredHeight the preferred cursor height the component would like
to use.
@return    the closest matching supported cursor size, or a dimension of 0,0 if
the Toolkit implementation doesn't support custom cursors.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.2
"
      end

      operation 6363394 "getMaximumCursorColors"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of colors the Toolkit supports in a custom cursor
palette.<p>
Note: if an image is used which has more colors in its palette than
the supported maximum, the Toolkit implementation will attempt to flatten the
palette to the maximum.  Since converting low-resolution images is difficult,
no guarantees are made as to the quality of a cursor image which has more
colors than the system supports.  It is therefore recommended that this method
be called and an appropriate image used so no image conversion is made.

@return    the maximum number of colors, or zero if custom cursors are not
supported by this Toolkit implementation.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since     1.2
"
      end

      operation 6363522 "isFrameStateSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "state" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether Toolkit supports this state for
<code>Frame</code>s.  This method tells whether the <em>UI
concept</em> of, say, maximization or iconification is
supported.  It will always return false for \"compound\" states
like <code>Frame.ICONIFIED|Frame.MAXIMIZED_VERT</code>.
In other words, the rule of thumb is that only queries with a
single frame state constant as an argument are meaningful.
<p>Note that supporting a given concept is a platform-
dependent feature. Due to native limitations the Toolkit
object may report a particular state as supported, however at
the same time the Toolkit object will be unable to apply the
state to a given frame.  This circumstance has two following
consequences:
<ul>
<li>Only the return value of {@code false} for the present
method actually indicates that the given state is not
supported. If the method returns {@code true} the given state
may still be unsupported and/or unavailable for a particular
frame.
<li>The developer should consider examining the value of the
{@link java.awt.event.WindowEvent#getNewState} method of the
{@code WindowEvent} received through the {@link
java.awt.event.WindowStateListener}, rather than assuming
that the state given to the {@code setExtendedState()} method
will be definitely applied. For more information see the
documentation for the {@link Frame#setExtendedState} method.
</ul>

@param state one of named frame state constants.
@return <code>true</code> is this frame state is supported by
    this Toolkit implementation, <code>false</code> otherwise.
@exception HeadlessException
    if <code>GraphicsEnvironment.isHeadless()</code>
    returns <code>true</code>.
@see java.awt.Window#addWindowStateListener
@since   1.4
"
      end

      classrelation 2983426 // resources (<unidirectional association>)
	relation 2983426 --->
	  a role_name "resources" class_relation private
	    comment "
Support for I18N: any visible strings should be stored in
sun.awt.resources.awt.properties.  The ResourceBundle is stored
here, so that only one copy is maintained.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983426 // resources (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 2983554 // platformResources (<unidirectional association>)
	relation 2983554 --->
	  a role_name "platformResources" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983554 // platformResources (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      operation 6363650 "setPlatformResources"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "bundle" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " called by platform toolkit"
      end

      operation 6363778 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method ids
"
      end

      attribute 1439874 "loaded"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "WARNING: This is a temporary workaround for a problem in the
way the AWT loads native libraries. A number of classes in the
AWT package have a native method, initIDs(), which initializes
the JNI field and method ids used in the native portion of
their implementation.

Since the use and storage of these ids is done by the
implementation libraries, the implementation of these method is
provided by the particular AWT implementations (for example,
\"Toolkit\"s/Peer), such as Motif, Microsoft Windows, or Tiny. The
problem is that this means that the native libraries must be
loaded by the java.* classes, which do not necessarily know the
names of the libraries to load. A better way of doing this
would be to provide a separate library which defines java.awt.*
initIDs, and exports the relevant symbols out to the
implementation libraries.

For now, we know it's done by the implementation, and we assume
that the name of the library is \"awt\".  -br.

If you change loadLibraries(), please add the change to
java.awt.image.ColorModel.loadLibraries(). Unfortunately,
classes can be loaded in java.awt.image that depend on
libawt and there is no way to call Toolkit.loadLibraries()
directly.  -hung

"
      end

      operation 6363906 "loadLibraries"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 152322 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setToolkitAccessor(
                new AWTAccessor.ToolkitAccessor() {
                    @Override
                    public void setPlatformResources(ResourceBundle bundle) {
                        Toolkit.setPlatformResources(bundle);
                    }
                });

        java.security.AccessController.doPrivileged(
                                 new java.security.PrivilegedAction<Void>() {
            public Void run() {
                try {
                    resources =
                        ResourceBundle.getBundle(\"sun.awt.resources.awt\",
                                                 CoreResourceBundleControl.getRBControlInstance());
                } catch (MissingResourceException e) {
                    // No resource file; defaults will be used.
                }
                return null;
            }
        });

        // ensure that the proper libraries are loaded
        loadLibraries();
        initAssistiveTechnologies();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6364034 "getProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "defaultValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a property with the specified key and default.
This method returns defaultValue if the property is not found.
"
      end

      operation 6364162 "getSystemEventQueue"
	public return_type class_ref 339458 // EventQueue
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the application's or applet's EventQueue instance.
Depending on the Toolkit implementation, different EventQueues
may be returned for different applets.  Applets should
therefore not assume that the EventQueue instance returned
by this method will be shared by other applets or the system.

<p> If there is a security manager then its
{@link SecurityManager#checkPermission checkPermission} method
is called to check {@code AWTPermission(\"accessEventQueue\")}.

@return    the <code>EventQueue</code> object
@throws  SecurityException
         if a security manager is set and it denies access to
         the {@code EventQueue}
@see     java.awt.AWTPermission
"
      end

      operation 6364290 "getSystemEventQueueImpl"
	abstract protected return_type class_ref 339458 // EventQueue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the application's or applet's <code>EventQueue</code>
instance, without checking access.  For security reasons,
this can only be called from a <code>Toolkit</code> subclass.
@return the <code>EventQueue</code> object
"
      end

      operation 6364418 "getEventQueue"
	class_operation package return_type class_ref 339458 // EventQueue
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Accessor method for use by AWT package routines. "
      end

      operation 6364546 "createDragSourceContextPeer"
	abstract public return_type class_ref 881282 // DragSourceContextPeer
	nparams 1
	  param inout name "dge" type class_ref 355458 // DragGestureEvent
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer for a DragSourceContext.
Always throws InvalidDndOperationException if
GraphicsEnvironment.isHeadless() returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6364674 "createDragGestureRecognizer"
	public explicit_return_type "T"
	nparams 5
	  param inout name "abstractRecognizerClass" type class_ref 130818 // Class
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	  param in name "srcActions" explicit_type "int"
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends DragGestureRecognizer> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a concrete, platform dependent, subclass of the abstract
DragGestureRecognizer class requested, and associates it with the
DragSource, Component and DragGestureListener specified.

subclasses should override this to provide their own implementation

@param abstractRecognizerClass The abstract class of the required recognizer
@param ds                      The DragSource
@param c                       The Component target for the DragGestureRecognizer
@param srcActions              The actions permitted for the gesture
@param dgl                     The DragGestureListener

@return the new object or null.  Always returns null if
GraphicsEnvironment.isHeadless() returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6364802 "getDesktopProperty"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains a value for the specified desktop property.

A desktop property is a uniquely named value for a resource that
is Toolkit global in nature. Usually it also is an abstract
representation for an underlying platform dependent desktop setting.
For more information on desktop properties supported by the AWT see
<a href=\"doc-files/DesktopProperties.html\">AWT Desktop Properties</a>.
"
      end

      operation 6364930 "setDesktopProperty"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the named desktop property to the specified value and fires a
property change event to notify any listeners that the value has changed.
"
      end

      operation 6365058 "lazilyLoadDesktopProperty"
	protected return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "an opportunity to lazily evaluate desktop property values.
"
      end

      operation 6365186 "initializeDesktopProperties"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "initializeDesktopProperties
"
      end

      operation 6365314 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "pcl" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified property change listener for the named desktop
property. When a {@link java.beans.PropertyChangeListenerProxy} object is added,
its property name is ignored, and the wrapped listener is added.
If {@code name} is {@code null} or {@code pcl} is {@code null},
no exception is thrown and no action is performed.

@param   name The name of the property to listen for
@param   pcl The property change listener
@see PropertyChangeSupport#addPropertyChangeListener(String,
PropertyChangeListener)
@since   1.2
"
      end

      operation 6365442 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "pcl" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified property change listener for the named
desktop property. When a {@link java.beans.PropertyChangeListenerProxy} object
is removed, its property name is ignored, and
the wrapped listener is removed.
If {@code name} is {@code null} or {@code pcl} is {@code null},
no exception is thrown and no action is performed.

@param   name The name of the property to remove
@param   pcl The property change listener
@see PropertyChangeSupport#removePropertyChangeListener(String,
PropertyChangeListener)
@since   1.2
"
      end

      operation 6365570 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the property change listeners
registered on this toolkit. The returned array
contains {@link java.beans.PropertyChangeListenerProxy} objects
that associate listeners with the names of desktop properties.

@return all of this toolkit's {@link PropertyChangeListener}
        objects wrapped in {@code java.beans.PropertyChangeListenerProxy} objects
        or an empty array  if no listeners are added

@see PropertyChangeSupport#getPropertyChangeListeners()
@since 1.4
"
      end

      operation 6365698 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all property change listeners
associated with the specified name of a desktop property.

@param  propertyName the named property
@return all of the {@code PropertyChangeListener} objects
        associated with the specified name of a desktop property
        or an empty array if no such listeners are added

@see PropertyChangeSupport#getPropertyChangeListeners(String)
@since 1.4
"
      end

      classrelation 2983682 // desktopProperties (<unidirectional association>)
	relation 2983682 --->
	  a role_name "desktopProperties" init_value "
            new HashMap<String,Object>()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,Object> ${name}${value};
"
	    classrelation_ref 2983682 // desktopProperties (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2983810 // desktopPropsSupport (<unidirectional association>)
	relation 2983810 --->
	  a role_name "desktopPropsSupport" init_value "
            Toolkit.createPropertyChangeSupport(this)" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983810 // desktopPropsSupport (<unidirectional association>)
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      operation 6365826 "isAlwaysOnTopSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the always-on-top mode is supported by this toolkit.
To detect whether the always-on-top mode is supported for a
particular Window, use {@link Window#isAlwaysOnTopSupported}.
@return <code>true</code>, if current toolkit supports the always-on-top mode,
    otherwise returns <code>false</code>
@see Window#isAlwaysOnTopSupported
@see Window#setAlwaysOnTop(boolean)
@since 1.6
"
      end

      operation 6365954 "isModalityTypeSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given modality type is supported by this toolkit. If
a dialog with unsupported modality type is created, then
<code>Dialog.ModalityType.MODELESS</code> is used instead.

@param modalityType modality type to be checked for support by this toolkit

@return <code>true</code>, if current toolkit supports given modality
    type, <code>false</code> otherwise

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#getModalityType
@see java.awt.Dialog#setModalityType

@since 1.6
"
      end

      operation 6366082 "isModalExclusionTypeSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "modalExclusionType" type class_ref 469250 // ModalExclusionType
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given modal exclusion type is supported by this
toolkit. If an unsupported modal exclusion type property is set on a window,
then <code>Dialog.ModalExclusionType.NO_EXCLUDE</code> is used instead.

@param modalExclusionType modal exclusion type to be checked for support by this toolkit

@return <code>true</code>, if current toolkit supports given modal exclusion
    type, <code>false</code> otherwise

@see java.awt.Dialog.ModalExclusionType
@see java.awt.Window#getModalExclusionType
@see java.awt.Window#setModalExclusionType

@since 1.6
"
      end

      attribute 1440002 "LONG_BITS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 8014718: logging has been removed from SunToolkit
"
      end

      attribute 1440130 "calls"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[LONG_BITS]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1440258 "enabledOnToolkitMask"
	class_attribute volatile private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2983938 // eventListener (<unidirectional association>)
	relation 2983938 --->
	  a role_name "eventListener" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2983938 // eventListener (<unidirectional association>)
	  b parent class_ref 351234 // AWTEventListener
      end

      classrelation 2984066 // listener2SelectiveListener (<unidirectional association>)
	relation 2984066 --->
	  a role_name "listener2SelectiveListener" init_value " new WeakHashMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTEventListener, SelectiveAWTEventListener> ${name}${value};
"
	    classrelation_ref 2984066 // listener2SelectiveListener (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      operation 6366210 "deProxyAWTEventListener"
	class_operation private return_type class_ref 351234 // AWTEventListener
	nparams 1
	  param inout name "l" type class_ref 351234 // AWTEventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts a \"pure\" AWTEventListener from a AWTEventListenerProxy,
if the listener is proxied.
"
      end

      operation 6366338 "addAWTEventListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 351234 // AWTEventListener
	  param in name "eventMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an AWTEventListener to receive all AWTEvents dispatched
system-wide that conform to the given <code>eventMask</code>.
<p>
First, if there is a security manager, its <code>checkPermission</code>
method is called with an
<code>AWTPermission(\"listenToAllAWTEvents\")</code> permission.
This may result in a SecurityException.
<p>
<code>eventMask</code> is a bitmask of event types to receive.
It is constructed by bitwise OR-ing together the event masks
defined in <code>AWTEvent</code>.
<p>
Note:  event listener use is not recommended for normal
application use, but are intended solely to support special
purpose facilities including support for accessibility,
event record/playback, and diagnostic tracing.

If listener is null, no exception is thrown and no action is performed.

@param    listener   the event listener.
@param    eventMask  the bitmask of event types to receive
@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow the operation.
@see      #removeAWTEventListener
@see      #getAWTEventListeners
@see      SecurityManager#checkPermission
@see      java.awt.AWTEvent
@see      java.awt.AWTPermission
@see      java.awt.event.AWTEventListener
@see      java.awt.event.AWTEventListenerProxy
@since    1.2
"
      end

      operation 6366466 "removeAWTEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 351234 // AWTEventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an AWTEventListener from receiving dispatched AWTEvents.
<p>
First, if there is a security manager, its <code>checkPermission</code>
method is called with an
<code>AWTPermission(\"listenToAllAWTEvents\")</code> permission.
This may result in a SecurityException.
<p>
Note:  event listener use is not recommended for normal
application use, but are intended solely to support special
purpose facilities including support for accessibility,
event record/playback, and diagnostic tracing.

If listener is null, no exception is thrown and no action is performed.

@param    listener   the event listener.
@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow the operation.
@see      #addAWTEventListener
@see      #getAWTEventListeners
@see      SecurityManager#checkPermission
@see      java.awt.AWTEvent
@see      java.awt.AWTPermission
@see      java.awt.event.AWTEventListener
@see      java.awt.event.AWTEventListenerProxy
@since    1.2
"
      end

      operation 6366594 "enabledOnToolkit"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param in name "eventMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6366722 "countAWTEventListeners"
	package explicit_return_type "int"
	nparams 1
	  param in name "eventMask" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6366850 "getAWTEventListeners"
	public return_type class_ref 351234 // AWTEventListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>AWTEventListener</code>s
registered on this toolkit.
If there is a security manager, its {@code checkPermission}
method is called with an
{@code AWTPermission(\"listenToAllAWTEvents\")} permission.
This may result in a SecurityException.
Listeners can be returned
within <code>AWTEventListenerProxy</code> objects, which also contain
the event mask for the given listener.
Note that listener objects
added multiple times appear only once in the returned array.

@return all of the <code>AWTEventListener</code>s or an empty
        array if no listeners are currently registered
@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow the operation.
@see      #addAWTEventListener
@see      #removeAWTEventListener
@see      SecurityManager#checkPermission
@see      java.awt.AWTEvent
@see      java.awt.AWTPermission
@see      java.awt.event.AWTEventListener
@see      java.awt.event.AWTEventListenerProxy
@since 1.4
"
      end

      operation 6366978 "getAWTEventListeners"
	public return_type class_ref 351234 // AWTEventListener
	nparams 1
	  param in name "eventMask" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>AWTEventListener</code>s
registered on this toolkit which listen to all of the event
types specified in the {@code eventMask} argument.
If there is a security manager, its {@code checkPermission}
method is called with an
{@code AWTPermission(\"listenToAllAWTEvents\")} permission.
This may result in a SecurityException.
Listeners can be returned
within <code>AWTEventListenerProxy</code> objects, which also contain
the event mask for the given listener.
Note that listener objects
added multiple times appear only once in the returned array.

@param  eventMask the bitmask of event types to listen for
@return all of the <code>AWTEventListener</code>s registered
        on this toolkit for the specified
        event types, or an empty array if no such listeners
        are currently registered
@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow the operation.
@see      #addAWTEventListener
@see      #removeAWTEventListener
@see      SecurityManager#checkPermission
@see      java.awt.AWTEvent
@see      java.awt.AWTPermission
@see      java.awt.event.AWTEventListener
@see      java.awt.event.AWTEventListenerProxy
@since 1.4
"
      end

      operation 6367106 "notifyAWTEventListeners"
	package explicit_return_type "void"
	nparams 1
	  param inout name "theEvent" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies any AWTEventListeners that an event
is about to be dispatched.

@param theEvent the event which will be dispatched.
"
      end

      class 881538 "ToolkitEventMulticaster"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2984194 // <generalisation>
	  relation 2984194 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2984194 // <generalisation>
	    b parent class_ref 856962 // AWTEventMulticaster
	end

	classrelation 2984322 // <realization>
	  relation 2984322 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2984322 // <realization>
	    b parent class_ref 351234 // AWTEventListener
	end

	operation 6367234 "ToolkitEventMulticaster"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "a" type class_ref 351234 // AWTEventListener
	    param inout name "b" type class_ref 351234 // AWTEventListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Implementation cloned from AWTEventMulticaster."
	end

	operation 6367362 "add"
	  class_operation package return_type class_ref 351234 // AWTEventListener
	  nparams 2
	    param inout name "a" type class_ref 351234 // AWTEventListener
	    param inout name "b" type class_ref 351234 // AWTEventListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6367490 "remove"
	  class_operation package return_type class_ref 351234 // AWTEventListener
	  nparams 2
	    param inout name "l" type class_ref 351234 // AWTEventListener
	    param inout name "oldl" type class_ref 351234 // AWTEventListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6367618 "remove"
	  protected return_type class_ref 314882 // EventListener
	  nparams 1
	    param inout name "oldl" type class_ref 314882 // EventListener
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " #4178589: must overload remove(EventListener) to call our add()
 instead of the static addInternal() so we allocate a
 ToolkitEventMulticaster instead of an AWTEventMulticaster.
 Note: this method is called by AWTEventListener.removeInternal(),
 so its method signature must match AWTEventListener.remove()."
	end

	operation 6367746 "eventDispatched"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 339202 // AWTEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 881666 "SelectiveAWTEventListener"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2984450 // <realization>
	  relation 2984450 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2984450 // <realization>
	    b parent class_ref 351234 // AWTEventListener
	end

	classrelation 2984578 // listener (<unidirectional association>)
	  relation 2984578 --->
	    a role_name "listener" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2984578 // listener (<unidirectional association>)
	    b parent class_ref 351234 // AWTEventListener
	end

	attribute 1440386 "eventMask"
	  private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1440514 "calls"
	  package explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[Toolkit.LONG_BITS]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " This array contains the number of times to call the eventlistener
 for each event type.
"
	end

	operation 6367874 "getListener"
	  public return_type class_ref 351234 // AWTEventListener
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6368002 "getEventMask"
	  public explicit_return_type "long"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6368130 "getCalls"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6368258 "orEventMasks"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "mask" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6368386 "SelectiveAWTEventListener"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "l" type class_ref 351234 // AWTEventListener
	    param in name "mask" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6368514 "eventDispatched"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 339202 // AWTEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6368642 "mapInputMethodHighlight"
	abstract public return_type class_ref 130178 // Map
	nparams 1
	  param inout name "highlight" type class_ref 881794 // InputMethodHighlight
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<java.awt.font.TextAttribute,?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of visual attributes for the abstract level description
of the given input method highlight, or null if no mapping is found.
The style field of the input method highlight is ignored. The map
returned is unmodifiable.
@param highlight input method highlight
@return style attribute map, or <code>null</code>
@exception HeadlessException if
    <code>GraphicsEnvironment.isHeadless</code> returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@since 1.3
"
      end

      operation 6368770 "createPropertyChangeSupport"
	class_operation private return_type class_ref 343042 // PropertyChangeSupport
	nparams 1
	  param inout name "toolkit" type class_ref 343298 // Toolkit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 881922 "DesktopPropertyChangeSupport"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings(\"serial\")
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2985602 // <generalisation>
	  relation 2985602 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2985602 // <generalisation>
	    b parent class_ref 343042 // PropertyChangeSupport
	end

	classrelation 2985730 // PROP_CHANGE_SUPPORT_KEY (<unidirectional association>)
	  relation 2985730 --->
	    a role_name "PROP_CHANGE_SUPPORT_KEY" init_value "
                new StringBuilder(\"desktop property change support key\")" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2985730 // PROP_CHANGE_SUPPORT_KEY (<unidirectional association>)
	    b parent class_ref 173058 // StringBuilder
	end

	classrelation 2985858 // source (<unidirectional association>)
	  relation 2985858 --->
	    a role_name "source" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2985858 // source (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 6372994 "DesktopPropertyChangeSupport"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "sourceBean" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6373122 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "propertyName" type class_ref 128130 // String
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373250 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "propertyName" type class_ref 128130 // String
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373378 "getPropertyChangeListeners"
	  public return_type class_ref 347266 // PropertyChangeListener
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373506 "getPropertyChangeListeners"
	  public return_type class_ref 347266 // PropertyChangeListener
	  nparams 1
	    param inout name "propertyName" type class_ref 128130 // String
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373634 "addPropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373762 "removePropertyChangeListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 347266 // PropertyChangeListener
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 6373890 "firePropertyChange"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "evt" type class_ref 360450 // PropertyChangeEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "we do expect that all other fireXXX() methods of java.beans.PropertyChangeSupport
use this method.  If this will be changed we will need to change this class.
"
	end
      end

      operation 6374018 "areExtraMouseButtonsEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether events from extra mouse buttons are allowed to be processed and posted into
{@code EventQueue}.
<br>
To change the returned value it is necessary to set the {@code sun.awt.enableExtraMouseButtons}
property before the {@code Toolkit} class initialization. This setting could be done on the application
startup by the following command:
<pre>
java -Dsun.awt.enableExtraMouseButtons=false Application
</pre>
Alternatively, the property could be set in the application by using the following code:
<pre>
System.setProperty(\"sun.awt.enableExtraMouseButtons\", \"true\");
</pre>
before the {@code Toolkit} class initialization.
If not set by the time of the {@code Toolkit} class initialization, this property will be
initialized with {@code true}.
Changing this value after the {@code Toolkit} class initialization will have no effect.
<p>
@exception HeadlessException if GraphicsEnvironment.isHeadless() returns true
@return {@code true} if events from extra mouse buttons are allowed to be processed and posted;
        {@code false} otherwise
@see System#getProperty(String propertyName)
@see System#setProperty(String propertyName, String value)
@see java.awt.EventQueue
@since 1.7
"
      end
    end

    class 343426 "PointerInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that describes the pointer position.
It provides the {@code GraphicsDevice} where the pointer is and
the {@code Point} that represents the coordinates of the pointer.
<p>
Instances of this class should be obtained via
{@link MouseInfo#getPointerInfo}.
The {@code PointerInfo} instance is not updated dynamically as the mouse
moves. To get the updated location, you must call
{@link MouseInfo#getPointerInfo} again.

@see MouseInfo#getPointerInfo
@author Roman Poborchiy
@since 1.5
"
      classrelation 2962434 // device (<unidirectional association>)
	relation 2962434 --->
	  a role_name "device" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2962434 // device (<unidirectional association>)
	  b parent class_ref 868994 // GraphicsDevice
      end

      classrelation 2962562 // location (<unidirectional association>)
	relation 2962562 --->
	  a role_name "location" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2962562 // location (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      operation 6301058 "PointerInfo"
	package explicit_return_type ""
	nparams 2
	  param in name "device" type class_ref 868994 // GraphicsDevice
	  param in name "location" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor to prevent instantiation.
"
      end

      operation 6301186 "getDevice"
	public return_type class_ref 868994 // GraphicsDevice
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code GraphicsDevice} where the mouse pointer was at the
moment this {@code PointerInfo} was created.

@return {@code GraphicsDevice} corresponding to the pointer
@since 1.5
"
      end

      operation 6301314 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Point} that represents the coordinates of the pointer
on the screen. See {@link MouseInfo#getPointerInfo} for more information
about coordinate calculation for multiscreen systems.

@return coordinates of mouse pointer
@see MouseInfo
@see MouseInfo#getPointerInfo
@since 1.5
"
      end
    end

    class 343554 "HeadlessException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when code that is dependent on a keyboard, display, or mouse
is called in an environment that does not support a keyboard, display,
or mouse.

@since 1.4
@author  Michael Martak
"
      classrelation 2925826 // <generalisation>
	relation 2925826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2925826 // <generalisation>
	  b parent class_ref 193538 // UnsupportedOperationException
      end

      attribute 1390082 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 167183644944358563L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.4 serialVersionUID

"
      end

      operation 6245890 "HeadlessException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6246018 "HeadlessException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6246146 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 343682 "Graphics"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Graphics</code> class is the abstract base class for
all graphics contexts that allow an application to draw onto
components that are realized on various devices, as well as
onto off-screen images.
<p>
A <code>Graphics</code> object encapsulates state information needed
for the basic rendering operations that Java supports.  This
state information includes the following properties:

<ul>
<li>The <code>Component</code> object on which to draw.
<li>A translation origin for rendering and clipping coordinates.
<li>The current clip.
<li>The current color.
<li>The current font.
<li>The current logical pixel operation function (XOR or Paint).
<li>The current XOR alternation color
    (see {@link Graphics#setXORMode}).
</ul>
<p>
Coordinates are infinitely thin and lie between the pixels of the
output device.
Operations that draw the outline of a figure operate by traversing
an infinitely thin path between pixels with a pixel-sized pen that hangs
down and to the right of the anchor point on the path.
Operations that fill a figure operate by filling the interior
of that infinitely thin path.
Operations that render horizontal text render the ascending
portion of character glyphs entirely above the baseline coordinate.
<p>
The graphics pen hangs down and to the right from the path it traverses.
This has the following implications:
<ul>
<li>If you draw a figure that covers a given rectangle, that
figure occupies one extra row of pixels on the right and bottom edges
as compared to filling a figure that is bounded by that same rectangle.
<li>If you draw a horizontal line along the same <i>y</i> coordinate as
the baseline of a line of text, that line is drawn entirely below
the text, except for any descenders.
</ul><p>
All coordinates that appear as arguments to the methods of this
<code>Graphics</code> object are considered relative to the
translation origin of this <code>Graphics</code> object prior to
the invocation of the method.
<p>
All rendering operations modify only pixels which lie within the
area bounded by the current clip, which is specified by a {@link Shape}
in user space and is controlled by the program using the
<code>Graphics</code> object.  This <i>user clip</i>
is transformed into device space and combined with the
<i>device clip</i>, which is defined by the visibility of windows and
device extents.  The combination of the user clip and device clip
defines the <i>composite clip</i>, which determines the final clipping
region.  The user clip cannot be modified by the rendering
system to reflect the resulting composite clip. The user clip can only
be changed through the <code>setClip</code> or <code>clipRect</code>
methods.
All drawing or writing is done in the current color,
using the current paint mode, and in the current font.

@author      Sami Shaio
@author      Arthur van Hoff
@see     java.awt.Component
@see     java.awt.Graphics#clipRect(int, int, int, int)
@see     java.awt.Graphics#setColor(java.awt.Color)
@see     java.awt.Graphics#setPaintMode()
@see     java.awt.Graphics#setXORMode(java.awt.Color)
@see     java.awt.Graphics#setFont(java.awt.Font)
@since       JDK1.0
"
      operation 6215810 "Graphics"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>Graphics</code> object.
This constructor is the default constructor for a graphics
context.
<p>
Since <code>Graphics</code> is an abstract class, applications
cannot call this constructor directly. Graphics contexts are
obtained from other graphics contexts or are created by calling
<code>getGraphics</code> on a component.
@see        java.awt.Graphics#create()
@see        java.awt.Component#getGraphics
"
      end

      operation 6215938 "create"
	abstract public return_type class_ref 343682 // Graphics
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Graphics</code> object that is
a copy of this <code>Graphics</code> object.
@return     a new graphics context that is a copy of
                      this graphics context.
"
      end

      operation 6216066 "create"
	public return_type class_ref 343682 // Graphics
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>Graphics</code> object based on this
<code>Graphics</code> object, but with a new translation and clip area.
The new <code>Graphics</code> object has its origin
translated to the specified point (<i>x</i>,&nbsp;<i>y</i>).
Its clip area is determined by the intersection of the original
clip area with the specified rectangle.  The arguments are all
interpreted in the coordinate system of the original
<code>Graphics</code> object. The new graphics context is
identical to the original, except in two respects:

<ul>
<li>
The new graphics context is translated by (<i>x</i>,&nbsp;<i>y</i>).
That is to say, the point (<code>0</code>,&nbsp;<code>0</code>) in the
new graphics context is the same as (<i>x</i>,&nbsp;<i>y</i>) in
the original graphics context.
<li>
The new graphics context has an additional clipping rectangle, in
addition to whatever (translated) clipping rectangle it inherited
from the original graphics context. The origin of the new clipping
rectangle is at (<code>0</code>,&nbsp;<code>0</code>), and its size
is specified by the <code>width</code> and <code>height</code>
arguments.
</ul>
<p>
@param      x   the <i>x</i> coordinate.
@param      y   the <i>y</i> coordinate.
@param      width   the width of the clipping rectangle.
@param      height   the height of the clipping rectangle.
@return     a new graphics context.
@see        java.awt.Graphics#translate
@see        java.awt.Graphics#clipRect
"
      end

      operation 6216194 "translate"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the origin of the graphics context to the point
(<i>x</i>,&nbsp;<i>y</i>) in the current coordinate system.
Modifies this graphics context so that its new origin corresponds
to the point (<i>x</i>,&nbsp;<i>y</i>) in this graphics context's
original coordinate system.  All coordinates used in subsequent
rendering operations on this graphics context will be relative
to this new origin.
@param  x   the <i>x</i> coordinate.
@param  y   the <i>y</i> coordinate.
"
      end

      operation 6216322 "getColor"
	abstract public return_type class_ref 323458 // Color
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets this graphics context's current color.
@return    this graphics context's current color.
@see       java.awt.Color
@see       java.awt.Graphics#setColor(Color)
"
      end

      operation 6216450 "setColor"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this graphics context's current color to the specified
color. All subsequent graphics operations using this graphics
context use this specified color.
@param     c   the new rendering color.
@see       java.awt.Color
@see       java.awt.Graphics#getColor
"
      end

      operation 6216578 "setPaintMode"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the paint mode of this graphics context to overwrite the
destination with this graphics context's current color.
This sets the logical pixel operation function to the paint or
overwrite mode.  All subsequent rendering operations will
overwrite the destination with the current color.
"
      end

      operation 6216706 "setXORMode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "c1" type class_ref 323458 // Color
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the paint mode of this graphics context to alternate between
this graphics context's current color and the new specified color.
This specifies that logical pixel operations are performed in the
XOR mode, which alternates pixels between the current color and
a specified XOR color.
<p>
When drawing operations are performed, pixels which are the
current color are changed to the specified color, and vice versa.
<p>
Pixels that are of colors other than those two colors are changed
in an unpredictable but reversible manner; if the same figure is
drawn twice, then all pixels are restored to their original values.
@param     c1 the XOR alternation color
"
      end

      operation 6216834 "getFont"
	abstract public return_type class_ref 340354 // Font
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current font.
@return    this graphics context's current font.
@see       java.awt.Font
@see       java.awt.Graphics#setFont(Font)
"
      end

      operation 6216962 "setFont"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this graphics context's font to the specified font.
All subsequent text operations using this graphics context
use this font. A null argument is silently ignored.
@param  font   the font.
@see     java.awt.Graphics#getFont
@see     java.awt.Graphics#drawString(java.lang.String, int, int)
@see     java.awt.Graphics#drawBytes(byte[], int, int, int, int)
@see     java.awt.Graphics#drawChars(char[], int, int, int, int)
"
      end

      operation 6217090 "getFontMetrics"
	public return_type class_ref 343810 // FontMetrics
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the font metrics of the current font.
@return    the font metrics of this graphics
                   context's current font.
@see       java.awt.Graphics#getFont
@see       java.awt.FontMetrics
@see       java.awt.Graphics#getFontMetrics(Font)
"
      end

      operation 6217218 "getFontMetrics"
	abstract public return_type class_ref 343810 // FontMetrics
	nparams 1
	  param inout name "f" type class_ref 340354 // Font
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the font metrics for the specified font.
@return    the font metrics for the specified font.
@param     f the specified font
@see       java.awt.Graphics#getFont
@see       java.awt.FontMetrics
@see       java.awt.Graphics#getFontMetrics()
"
      end

      operation 6217346 "getClipBounds"
	abstract public return_type class_ref 314114 // Rectangle
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounding rectangle of the current clipping area.
This method refers to the user clip, which is independent of the
clipping associated with device bounds and window visibility.
If no clip has previously been set, or if the clip has been
cleared using <code>setClip(null)</code>, this method returns
<code>null</code>.
The coordinates in the rectangle are relative to the coordinate
system origin of this graphics context.
@return      the bounding rectangle of the current clipping area,
             or <code>null</code> if no clip is set.
@see         java.awt.Graphics#getClip
@see         java.awt.Graphics#clipRect
@see         java.awt.Graphics#setClip(int, int, int, int)
@see         java.awt.Graphics#setClip(Shape)
@since       JDK1.1
"
      end

      operation 6217474 "clipRect"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Intersects the current clip with the specified rectangle.
The resulting clipping area is the intersection of the current
clipping area and the specified rectangle.  If there is no
current clipping area, either because the clip has never been
set, or the clip has been cleared using <code>setClip(null)</code>,
the specified rectangle becomes the new clip.
This method sets the user clip, which is independent of the
clipping associated with device bounds and window visibility.
This method can only be used to make the current clip smaller.
To set the current clip larger, use any of the setClip methods.
Rendering operations have no effect outside of the clipping area.
@param x the x coordinate of the rectangle to intersect the clip with
@param y the y coordinate of the rectangle to intersect the clip with
@param width the width of the rectangle to intersect the clip with
@param height the height of the rectangle to intersect the clip with
@see #setClip(int, int, int, int)
@see #setClip(Shape)
"
      end

      operation 6217602 "setClip"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current clip to the rectangle specified by the given
coordinates.  This method sets the user clip, which is
independent of the clipping associated with device bounds
and window visibility.
Rendering operations have no effect outside of the clipping area.
@param       x the <i>x</i> coordinate of the new clip rectangle.
@param       y the <i>y</i> coordinate of the new clip rectangle.
@param       width the width of the new clip rectangle.
@param       height the height of the new clip rectangle.
@see         java.awt.Graphics#clipRect
@see         java.awt.Graphics#setClip(Shape)
@see         java.awt.Graphics#getClip
@since       JDK1.1
"
      end

      operation 6217730 "getClip"
	abstract public return_type class_ref 379394 // Shape
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current clipping area.
This method returns the user clip, which is independent of the
clipping associated with device bounds and window visibility.
If no clip has previously been set, or if the clip has been
cleared using <code>setClip(null)</code>, this method returns
<code>null</code>.
@return      a <code>Shape</code> object representing the
             current clipping area, or <code>null</code> if
             no clip is set.
@see         java.awt.Graphics#getClipBounds
@see         java.awt.Graphics#clipRect
@see         java.awt.Graphics#setClip(int, int, int, int)
@see         java.awt.Graphics#setClip(Shape)
@since       JDK1.1
"
      end

      operation 6217858 "setClip"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 379394 // Shape
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current clipping area to an arbitrary clip shape.
Not all objects that implement the <code>Shape</code>
interface can be used to set the clip.  The only
<code>Shape</code> objects that are guaranteed to be
supported are <code>Shape</code> objects that are
obtained via the <code>getClip</code> method and via
<code>Rectangle</code> objects.  This method sets the
user clip, which is independent of the clipping associated
with device bounds and window visibility.
@param clip the <code>Shape</code> to use to set the clip
@see         java.awt.Graphics#getClip()
@see         java.awt.Graphics#clipRect
@see         java.awt.Graphics#setClip(int, int, int, int)
@since       JDK1.1
"
      end

      operation 6217986 "copyArea"
	abstract public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies an area of the component by a distance specified by
<code>dx</code> and <code>dy</code>. From the point specified
by <code>x</code> and <code>y</code>, this method
copies downwards and to the right.  To copy an area of the
component to the left or upwards, specify a negative value for
<code>dx</code> or <code>dy</code>.
If a portion of the source rectangle lies outside the bounds
of the component, or is obscured by another window or component,
<code>copyArea</code> will be unable to copy the associated
pixels. The area that is omitted can be refreshed by calling
the component's <code>paint</code> method.
@param       x the <i>x</i> coordinate of the source rectangle.
@param       y the <i>y</i> coordinate of the source rectangle.
@param       width the width of the source rectangle.
@param       height the height of the source rectangle.
@param       dx the horizontal distance to copy the pixels.
@param       dy the vertical distance to copy the pixels.
"
      end

      operation 6218114 "drawLine"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x1" explicit_type "int"
	  param in name "y1" explicit_type "int"
	  param in name "x2" explicit_type "int"
	  param in name "y2" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws a line, using the current color, between the points
<code>(x1,&nbsp;y1)</code> and <code>(x2,&nbsp;y2)</code>
in this graphics context's coordinate system.
@param   x1  the first point's <i>x</i> coordinate.
@param   y1  the first point's <i>y</i> coordinate.
@param   x2  the second point's <i>x</i> coordinate.
@param   y2  the second point's <i>y</i> coordinate.
"
      end

      operation 6218242 "fillRect"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified rectangle.
The left and right edges of the rectangle are at
<code>x</code> and <code>x&nbsp;+&nbsp;width&nbsp;-&nbsp;1</code>.
The top and bottom edges are at
<code>y</code> and <code>y&nbsp;+&nbsp;height&nbsp;-&nbsp;1</code>.
The resulting rectangle covers an area
<code>width</code> pixels wide by
<code>height</code> pixels tall.
The rectangle is filled using the graphics context's current color.
@param         x   the <i>x</i> coordinate
                        of the rectangle to be filled.
@param         y   the <i>y</i> coordinate
                        of the rectangle to be filled.
@param         width   the width of the rectangle to be filled.
@param         height   the height of the rectangle to be filled.
@see           java.awt.Graphics#clearRect
@see           java.awt.Graphics#drawRect
"
      end

      operation 6218370 "drawRect"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the outline of the specified rectangle.
The left and right edges of the rectangle are at
<code>x</code> and <code>x&nbsp;+&nbsp;width</code>.
The top and bottom edges are at
<code>y</code> and <code>y&nbsp;+&nbsp;height</code>.
The rectangle is drawn using the graphics context's current color.
@param         x   the <i>x</i> coordinate
                        of the rectangle to be drawn.
@param         y   the <i>y</i> coordinate
                        of the rectangle to be drawn.
@param         width   the width of the rectangle to be drawn.
@param         height   the height of the rectangle to be drawn.
@see          java.awt.Graphics#fillRect
@see          java.awt.Graphics#clearRect
"
      end

      operation 6218498 "clearRect"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the specified rectangle by filling it with the background
color of the current drawing surface. This operation does not
use the current paint mode.
<p>
Beginning with Java&nbsp;1.1, the background color
of offscreen images may be system dependent. Applications should
use <code>setColor</code> followed by <code>fillRect</code> to
ensure that an offscreen image is cleared to a specific color.
@param       x the <i>x</i> coordinate of the rectangle to clear.
@param       y the <i>y</i> coordinate of the rectangle to clear.
@param       width the width of the rectangle to clear.
@param       height the height of the rectangle to clear.
@see         java.awt.Graphics#fillRect(int, int, int, int)
@see         java.awt.Graphics#drawRect
@see         java.awt.Graphics#setColor(java.awt.Color)
@see         java.awt.Graphics#setPaintMode
@see         java.awt.Graphics#setXORMode(java.awt.Color)
"
      end

      operation 6218626 "drawRoundRect"
	abstract public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "arcWidth" explicit_type "int"
	  param in name "arcHeight" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws an outlined round-cornered rectangle using this graphics
context's current color. The left and right edges of the rectangle
are at <code>x</code> and <code>x&nbsp;+&nbsp;width</code>,
respectively. The top and bottom edges of the rectangle are at
<code>y</code> and <code>y&nbsp;+&nbsp;height</code>.
@param      x the <i>x</i> coordinate of the rectangle to be drawn.
@param      y the <i>y</i> coordinate of the rectangle to be drawn.
@param      width the width of the rectangle to be drawn.
@param      height the height of the rectangle to be drawn.
@param      arcWidth the horizontal diameter of the arc
                   at the four corners.
@param      arcHeight the vertical diameter of the arc
                   at the four corners.
@see        java.awt.Graphics#fillRoundRect
"
      end

      operation 6218754 "fillRoundRect"
	abstract public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "arcWidth" explicit_type "int"
	  param in name "arcHeight" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the specified rounded corner rectangle with the current color.
The left and right edges of the rectangle
are at <code>x</code> and <code>x&nbsp;+&nbsp;width&nbsp;-&nbsp;1</code>,
respectively. The top and bottom edges of the rectangle are at
<code>y</code> and <code>y&nbsp;+&nbsp;height&nbsp;-&nbsp;1</code>.
@param       x the <i>x</i> coordinate of the rectangle to be filled.
@param       y the <i>y</i> coordinate of the rectangle to be filled.
@param       width the width of the rectangle to be filled.
@param       height the height of the rectangle to be filled.
@param       arcWidth the horizontal diameter
                    of the arc at the four corners.
@param       arcHeight the vertical diameter
                    of the arc at the four corners.
@see         java.awt.Graphics#drawRoundRect
"
      end

      operation 6218882 "draw3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws a 3-D highlighted outline of the specified rectangle.
The edges of the rectangle are highlighted so that they
appear to be beveled and lit from the upper left corner.
<p>
The colors used for the highlighting effect are determined
based on the current color.
The resulting rectangle covers an area that is
<code>width&nbsp;+&nbsp;1</code> pixels wide
by <code>height&nbsp;+&nbsp;1</code> pixels tall.
@param       x the <i>x</i> coordinate of the rectangle to be drawn.
@param       y the <i>y</i> coordinate of the rectangle to be drawn.
@param       width the width of the rectangle to be drawn.
@param       height the height of the rectangle to be drawn.
@param       raised a boolean that determines whether the rectangle
                     appears to be raised above the surface
                     or sunk into the surface.
@see         java.awt.Graphics#fill3DRect
"
      end

      operation 6219010 "fill3DRect"
	public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "raised" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints a 3-D highlighted rectangle filled with the current color.
The edges of the rectangle will be highlighted so that it appears
as if the edges were beveled and lit from the upper left corner.
The colors used for the highlighting effect will be determined from
the current color.
@param       x the <i>x</i> coordinate of the rectangle to be filled.
@param       y the <i>y</i> coordinate of the rectangle to be filled.
@param       width the width of the rectangle to be filled.
@param       height the height of the rectangle to be filled.
@param       raised a boolean value that determines whether the
                     rectangle appears to be raised above the surface
                     or etched into the surface.
@see         java.awt.Graphics#draw3DRect
"
      end

      operation 6219138 "drawOval"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the outline of an oval.
The result is a circle or ellipse that fits within the
rectangle specified by the <code>x</code>, <code>y</code>,
<code>width</code>, and <code>height</code> arguments.
<p>
The oval covers an area that is
<code>width&nbsp;+&nbsp;1</code> pixels wide
and <code>height&nbsp;+&nbsp;1</code> pixels tall.
@param       x the <i>x</i> coordinate of the upper left
                    corner of the oval to be drawn.
@param       y the <i>y</i> coordinate of the upper left
                    corner of the oval to be drawn.
@param       width the width of the oval to be drawn.
@param       height the height of the oval to be drawn.
@see         java.awt.Graphics#fillOval
"
      end

      operation 6219266 "fillOval"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills an oval bounded by the specified rectangle with the
current color.
@param       x the <i>x</i> coordinate of the upper left corner
                    of the oval to be filled.
@param       y the <i>y</i> coordinate of the upper left corner
                    of the oval to be filled.
@param       width the width of the oval to be filled.
@param       height the height of the oval to be filled.
@see         java.awt.Graphics#drawOval
"
      end

      operation 6219394 "drawArc"
	abstract public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "startAngle" explicit_type "int"
	  param in name "arcAngle" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the outline of a circular or elliptical arc
covering the specified rectangle.
<p>
The resulting arc begins at <code>startAngle</code> and extends
for <code>arcAngle</code> degrees, using the current color.
Angles are interpreted such that 0&nbsp;degrees
is at the 3&nbsp;o'clock position.
A positive value indicates a counter-clockwise rotation
while a negative value indicates a clockwise rotation.
<p>
The center of the arc is the center of the rectangle whose origin
is (<i>x</i>,&nbsp;<i>y</i>) and whose size is specified by the
<code>width</code> and <code>height</code> arguments.
<p>
The resulting arc covers an area
<code>width&nbsp;+&nbsp;1</code> pixels wide
by <code>height&nbsp;+&nbsp;1</code> pixels tall.
<p>
The angles are specified relative to the non-square extents of
the bounding rectangle such that 45 degrees always falls on the
line from the center of the ellipse to the upper right corner of
the bounding rectangle. As a result, if the bounding rectangle is
noticeably longer in one axis than the other, the angles to the
start and end of the arc segment will be skewed farther along the
longer axis of the bounds.
@param        x the <i>x</i> coordinate of the
                   upper-left corner of the arc to be drawn.
@param        y the <i>y</i>  coordinate of the
                   upper-left corner of the arc to be drawn.
@param        width the width of the arc to be drawn.
@param        height the height of the arc to be drawn.
@param        startAngle the beginning angle.
@param        arcAngle the angular extent of the arc,
                   relative to the start angle.
@see         java.awt.Graphics#fillArc
"
      end

      operation 6219522 "fillArc"
	abstract public explicit_return_type "void"
	nparams 6
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "startAngle" explicit_type "int"
	  param in name "arcAngle" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills a circular or elliptical arc covering the specified rectangle.
<p>
The resulting arc begins at <code>startAngle</code> and extends
for <code>arcAngle</code> degrees.
Angles are interpreted such that 0&nbsp;degrees
is at the 3&nbsp;o'clock position.
A positive value indicates a counter-clockwise rotation
while a negative value indicates a clockwise rotation.
<p>
The center of the arc is the center of the rectangle whose origin
is (<i>x</i>,&nbsp;<i>y</i>) and whose size is specified by the
<code>width</code> and <code>height</code> arguments.
<p>
The resulting arc covers an area
<code>width&nbsp;+&nbsp;1</code> pixels wide
by <code>height&nbsp;+&nbsp;1</code> pixels tall.
<p>
The angles are specified relative to the non-square extents of
the bounding rectangle such that 45 degrees always falls on the
line from the center of the ellipse to the upper right corner of
the bounding rectangle. As a result, if the bounding rectangle is
noticeably longer in one axis than the other, the angles to the
start and end of the arc segment will be skewed farther along the
longer axis of the bounds.
@param        x the <i>x</i> coordinate of the
                   upper-left corner of the arc to be filled.
@param        y the <i>y</i>  coordinate of the
                   upper-left corner of the arc to be filled.
@param        width the width of the arc to be filled.
@param        height the height of the arc to be filled.
@param        startAngle the beginning angle.
@param        arcAngle the angular extent of the arc,
                   relative to the start angle.
@see         java.awt.Graphics#drawArc
"
      end

      operation 6219650 "drawPolyline"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws a sequence of connected lines defined by
arrays of <i>x</i> and <i>y</i> coordinates.
Each pair of (<i>x</i>,&nbsp;<i>y</i>) coordinates defines a point.
The figure is not closed if the first point
differs from the last point.
@param       xPoints an array of <i>x</i> points
@param       yPoints an array of <i>y</i> points
@param       nPoints the total number of points
@see         java.awt.Graphics#drawPolygon(int[], int[], int)
@since       JDK1.1
"
      end

      operation 6219778 "drawPolygon"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws a closed polygon defined by
arrays of <i>x</i> and <i>y</i> coordinates.
Each pair of (<i>x</i>,&nbsp;<i>y</i>) coordinates defines a point.
<p>
This method draws the polygon defined by <code>nPoint</code> line
segments, where the first <code>nPoint&nbsp;-&nbsp;1</code>
line segments are line segments from
<code>(xPoints[i&nbsp;-&nbsp;1],&nbsp;yPoints[i&nbsp;-&nbsp;1])</code>
to <code>(xPoints[i],&nbsp;yPoints[i])</code>, for
1&nbsp;&le;&nbsp;<i>i</i>&nbsp;&le;&nbsp;<code>nPoints</code>.
The figure is automatically closed by drawing a line connecting
the final point to the first point, if those points are different.
@param        xPoints   a an array of <code>x</code> coordinates.
@param        yPoints   a an array of <code>y</code> coordinates.
@param        nPoints   a the total number of points.
@see          java.awt.Graphics#fillPolygon
@see          java.awt.Graphics#drawPolyline
"
      end

      operation 6219906 "drawPolygon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 444674 // Polygon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the outline of a polygon defined by the specified
<code>Polygon</code> object.
@param        p the polygon to draw.
@see          java.awt.Graphics#fillPolygon
@see          java.awt.Graphics#drawPolyline
"
      end

      operation 6220034 "fillPolygon"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "xPoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "yPoints" explicit_type "int"
	multiplicity "[]"
	  param in name "nPoints" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills a closed polygon defined by
arrays of <i>x</i> and <i>y</i> coordinates.
<p>
This method draws the polygon defined by <code>nPoint</code> line
segments, where the first <code>nPoint&nbsp;-&nbsp;1</code>
line segments are line segments from
<code>(xPoints[i&nbsp;-&nbsp;1],&nbsp;yPoints[i&nbsp;-&nbsp;1])</code>
to <code>(xPoints[i],&nbsp;yPoints[i])</code>, for
1&nbsp;&le;&nbsp;<i>i</i>&nbsp;&le;&nbsp;<code>nPoints</code>.
The figure is automatically closed by drawing a line connecting
the final point to the first point, if those points are different.
<p>
The area inside the polygon is defined using an
even-odd fill rule, also known as the alternating rule.
@param        xPoints   a an array of <code>x</code> coordinates.
@param        yPoints   a an array of <code>y</code> coordinates.
@param        nPoints   a the total number of points.
@see          java.awt.Graphics#drawPolygon(int[], int[], int)
"
      end

      operation 6220162 "fillPolygon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 444674 // Polygon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills the polygon defined by the specified Polygon object with
the graphics context's current color.
<p>
The area inside the polygon is defined using an
even-odd fill rule, also known as the alternating rule.
@param        p the polygon to fill.
@see          java.awt.Graphics#drawPolygon(int[], int[], int)
"
      end

      operation 6220290 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the text given by the specified string, using this
graphics context's current font and color. The baseline of the
leftmost character is at position (<i>x</i>,&nbsp;<i>y</i>) in this
graphics context's coordinate system.
@param       str      the string to be drawn.
@param       x        the <i>x</i> coordinate.
@param       y        the <i>y</i> coordinate.
@throws NullPointerException if <code>str</code> is <code>null</code>.
@see         java.awt.Graphics#drawBytes
@see         java.awt.Graphics#drawChars
"
      end

      operation 6220418 "drawString"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "iterator" type class_ref 472962 // AttributedCharacterIterator
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Renders the text of the specified iterator applying its attributes
in accordance with the specification of the
{@link java.awt.font.TextAttribute TextAttribute} class.
<p>
The baseline of the leftmost character is at position
(<i>x</i>,&nbsp;<i>y</i>) in this graphics context's coordinate system.
@param       iterator the iterator whose text is to be drawn
@param       x        the <i>x</i> coordinate.
@param       y        the <i>y</i> coordinate.
@throws NullPointerException if <code>iterator</code> is
<code>null</code>.
@see         java.awt.Graphics#drawBytes
@see         java.awt.Graphics#drawChars
"
      end

      operation 6220546 "drawChars"
	public explicit_return_type "void"
	nparams 5
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the text given by the specified character array, using this
graphics context's current font and color. The baseline of the
first character is at position (<i>x</i>,&nbsp;<i>y</i>) in this
graphics context's coordinate system.
@param data the array of characters to be drawn
@param offset the start offset in the data
@param length the number of characters to be drawn
@param x the <i>x</i> coordinate of the baseline of the text
@param y the <i>y</i> coordinate of the baseline of the text
@throws NullPointerException if <code>data</code> is <code>null</code>.
@throws IndexOutOfBoundsException if <code>offset</code> or
<code>length</code>is less than zero, or
<code>offset+length</code> is greater than the length of the
<code>data</code> array.
@see         java.awt.Graphics#drawBytes
@see         java.awt.Graphics#drawString
"
      end

      operation 6220674 "drawBytes"
	public explicit_return_type "void"
	nparams 5
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws the text given by the specified byte array, using this
graphics context's current font and color. The baseline of the
first character is at position (<i>x</i>,&nbsp;<i>y</i>) in this
graphics context's coordinate system.
<p>
Use of this method is not recommended as each byte is interpreted
as a Unicode code point in the range 0 to 255, and so can only be
used to draw Latin characters in that range.
@param data the data to be drawn
@param offset the start offset in the data
@param length the number of bytes that are drawn
@param x the <i>x</i> coordinate of the baseline of the text
@param y the <i>y</i> coordinate of the baseline of the text
@throws NullPointerException if <code>data</code> is <code>null</code>.
@throws IndexOutOfBoundsException if <code>offset</code> or
<code>length</code>is less than zero, or <code>offset+length</code>
is greater than the length of the <code>data</code> array.
@see         java.awt.Graphics#drawChars
@see         java.awt.Graphics#drawString
"
      end

      operation 6220802 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 4
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified image as is currently available.
The image is drawn with its top-left corner at
(<i>x</i>,&nbsp;<i>y</i>) in this graphics context's coordinate
space. Transparent pixels in the image do not affect whatever
pixels are already there.
<p>
This method returns immediately in all cases, even if the
complete image has not yet been loaded, and it has not been dithered
and converted for the current output device.
<p>
If the image has completely loaded and its pixels are
no longer being changed, then
<code>drawImage</code> returns <code>true</code>.
Otherwise, <code>drawImage</code> returns <code>false</code>
and as more of
the image becomes available
or it is time to draw another frame of animation,
the process that loads the image notifies
the specified image observer.
@param    img the specified image to be drawn. This method does
              nothing if <code>img</code> is null.
@param    x   the <i>x</i> coordinate.
@param    y   the <i>y</i> coordinate.
@param    observer    object to be notified as more of
                         the image is converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see      java.awt.Image
@see      java.awt.image.ImageObserver
@see      java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 6220930 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified image as has already been scaled
to fit inside the specified rectangle.
<p>
The image is drawn inside the specified rectangle of this
graphics context's coordinate space, and is scaled if
necessary. Transparent pixels do not affect whatever pixels
are already there.
<p>
This method returns immediately in all cases, even if the
entire image has not yet been scaled, dithered, and converted
for the current output device.
If the current output representation is not yet complete, then
<code>drawImage</code> returns <code>false</code>. As more of
the image becomes available, the process that loads the image notifies
the image observer by calling its <code>imageUpdate</code> method.
<p>
A scaled version of an image will not necessarily be
available immediately just because an unscaled version of the
image has been constructed for this output device.  Each size of
the image may be cached separately and generated from the original
data in a separate image production sequence.
@param    img    the specified image to be drawn. This method does
                 nothing if <code>img</code> is null.
@param    x      the <i>x</i> coordinate.
@param    y      the <i>y</i> coordinate.
@param    width  the width of the rectangle.
@param    height the height of the rectangle.
@param    observer    object to be notified as more of
                         the image is converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see      java.awt.Image
@see      java.awt.image.ImageObserver
@see      java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 6221058 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 5
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified image as is currently available.
The image is drawn with its top-left corner at
(<i>x</i>,&nbsp;<i>y</i>) in this graphics context's coordinate
space.  Transparent pixels are drawn in the specified
background color.
<p>
This operation is equivalent to filling a rectangle of the
width and height of the specified image with the given color and then
drawing the image on top of it, but possibly more efficient.
<p>
This method returns immediately in all cases, even if the
complete image has not yet been loaded, and it has not been dithered
and converted for the current output device.
<p>
If the image has completely loaded and its pixels are
no longer being changed, then
<code>drawImage</code> returns <code>true</code>.
Otherwise, <code>drawImage</code> returns <code>false</code>
and as more of
the image becomes available
or it is time to draw another frame of animation,
the process that loads the image notifies
the specified image observer.
@param    img the specified image to be drawn. This method does
              nothing if <code>img</code> is null.
@param    x      the <i>x</i> coordinate.
@param    y      the <i>y</i> coordinate.
@param    bgcolor the background color to paint under the
                        non-opaque portions of the image.
@param    observer    object to be notified as more of
                         the image is converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see      java.awt.Image
@see      java.awt.image.ImageObserver
@see      java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 6221186 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 7
	  param inout name "img" type class_ref 340098 // Image
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified image as has already been scaled
to fit inside the specified rectangle.
<p>
The image is drawn inside the specified rectangle of this
graphics context's coordinate space, and is scaled if
necessary. Transparent pixels are drawn in the specified
background color.
This operation is equivalent to filling a rectangle of the
width and height of the specified image with the given color and then
drawing the image on top of it, but possibly more efficient.
<p>
This method returns immediately in all cases, even if the
entire image has not yet been scaled, dithered, and converted
for the current output device.
If the current output representation is not yet complete then
<code>drawImage</code> returns <code>false</code>. As more of
the image becomes available, the process that loads the image notifies
the specified image observer.
<p>
A scaled version of an image will not necessarily be
available immediately just because an unscaled version of the
image has been constructed for this output device.  Each size of
the image may be cached separately and generated from the original
data in a separate image production sequence.
@param    img       the specified image to be drawn. This method does
                    nothing if <code>img</code> is null.
@param    x         the <i>x</i> coordinate.
@param    y         the <i>y</i> coordinate.
@param    width     the width of the rectangle.
@param    height    the height of the rectangle.
@param    bgcolor   the background color to paint under the
                        non-opaque portions of the image.
@param    observer    object to be notified as more of
                         the image is converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see      java.awt.Image
@see      java.awt.image.ImageObserver
@see      java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
"
      end

      operation 6221314 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 10
	  param inout name "img" type class_ref 340098 // Image
	  param in name "dx1" explicit_type "int"
	  param in name "dy1" explicit_type "int"
	  param in name "dx2" explicit_type "int"
	  param in name "dy2" explicit_type "int"
	  param in name "sx1" explicit_type "int"
	  param in name "sy1" explicit_type "int"
	  param in name "sx2" explicit_type "int"
	  param in name "sy2" explicit_type "int"
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified area of the specified image as is
currently available, scaling it on the fly to fit inside the
specified area of the destination drawable surface. Transparent pixels
do not affect whatever pixels are already there.
<p>
This method returns immediately in all cases, even if the
image area to be drawn has not yet been scaled, dithered, and converted
for the current output device.
If the current output representation is not yet complete then
<code>drawImage</code> returns <code>false</code>. As more of
the image becomes available, the process that loads the image notifies
the specified image observer.
<p>
This method always uses the unscaled version of the image
to render the scaled rectangle and performs the required
scaling on the fly. It does not use a cached, scaled version
of the image for this operation. Scaling of the image from source
to destination is performed such that the first coordinate
of the source rectangle is mapped to the first coordinate of
the destination rectangle, and the second source coordinate is
mapped to the second destination coordinate. The subimage is
scaled and flipped as needed to preserve those mappings.
@param       img the specified image to be drawn. This method does
                 nothing if <code>img</code> is null.
@param       dx1 the <i>x</i> coordinate of the first corner of the
                   destination rectangle.
@param       dy1 the <i>y</i> coordinate of the first corner of the
                   destination rectangle.
@param       dx2 the <i>x</i> coordinate of the second corner of the
                   destination rectangle.
@param       dy2 the <i>y</i> coordinate of the second corner of the
                   destination rectangle.
@param       sx1 the <i>x</i> coordinate of the first corner of the
                   source rectangle.
@param       sy1 the <i>y</i> coordinate of the first corner of the
                   source rectangle.
@param       sx2 the <i>x</i> coordinate of the second corner of the
                   source rectangle.
@param       sy2 the <i>y</i> coordinate of the second corner of the
                   source rectangle.
@param       observer object to be notified as more of the image is
                   scaled and converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see         java.awt.Image
@see         java.awt.image.ImageObserver
@see         java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
@since       JDK1.1
"
      end

      operation 6221442 "drawImage"
	abstract public explicit_return_type "boolean"
	nparams 11
	  param inout name "img" type class_ref 340098 // Image
	  param in name "dx1" explicit_type "int"
	  param in name "dy1" explicit_type "int"
	  param in name "dx2" explicit_type "int"
	  param in name "dy2" explicit_type "int"
	  param in name "sx1" explicit_type "int"
	  param in name "sy1" explicit_type "int"
	  param in name "sx2" explicit_type "int"
	  param in name "sy2" explicit_type "int"
	  param inout name "bgcolor" type class_ref 323458 // Color
	  param inout name "observer" type class_ref 339970 // ImageObserver
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Draws as much of the specified area of the specified image as is
currently available, scaling it on the fly to fit inside the
specified area of the destination drawable surface.
<p>
Transparent pixels are drawn in the specified background color.
This operation is equivalent to filling a rectangle of the
width and height of the specified image with the given color and then
drawing the image on top of it, but possibly more efficient.
<p>
This method returns immediately in all cases, even if the
image area to be drawn has not yet been scaled, dithered, and converted
for the current output device.
If the current output representation is not yet complete then
<code>drawImage</code> returns <code>false</code>. As more of
the image becomes available, the process that loads the image notifies
the specified image observer.
<p>
This method always uses the unscaled version of the image
to render the scaled rectangle and performs the required
scaling on the fly. It does not use a cached, scaled version
of the image for this operation. Scaling of the image from source
to destination is performed such that the first coordinate
of the source rectangle is mapped to the first coordinate of
the destination rectangle, and the second source coordinate is
mapped to the second destination coordinate. The subimage is
scaled and flipped as needed to preserve those mappings.
@param       img the specified image to be drawn. This method does
                 nothing if <code>img</code> is null.
@param       dx1 the <i>x</i> coordinate of the first corner of the
                   destination rectangle.
@param       dy1 the <i>y</i> coordinate of the first corner of the
                   destination rectangle.
@param       dx2 the <i>x</i> coordinate of the second corner of the
                   destination rectangle.
@param       dy2 the <i>y</i> coordinate of the second corner of the
                   destination rectangle.
@param       sx1 the <i>x</i> coordinate of the first corner of the
                   source rectangle.
@param       sy1 the <i>y</i> coordinate of the first corner of the
                   source rectangle.
@param       sx2 the <i>x</i> coordinate of the second corner of the
                   source rectangle.
@param       sy2 the <i>y</i> coordinate of the second corner of the
                   source rectangle.
@param       bgcolor the background color to paint under the
                   non-opaque portions of the image.
@param       observer object to be notified as more of the image is
                   scaled and converted.
@return   <code>false</code> if the image pixels are still changing;
          <code>true</code> otherwise.
@see         java.awt.Image
@see         java.awt.image.ImageObserver
@see         java.awt.image.ImageObserver#imageUpdate(java.awt.Image, int, int, int, int, int)
@since       JDK1.1
"
      end

      operation 6221570 "dispose"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of this graphics context and releases
any system resources that it is using.
A <code>Graphics</code> object cannot be used after
<code>dispose</code>has been called.
<p>
When a Java program runs, a large number of <code>Graphics</code>
objects can be created within a short time frame.
Although the finalization process of the garbage collector
also disposes of the same system resources, it is preferable
to manually free the associated resources by calling this
method rather than to rely on a finalization process which
may not run to completion for a long period of time.
<p>
Graphics objects which are provided as arguments to the
<code>paint</code> and <code>update</code> methods
of components are automatically released by the system when
those methods return. For efficiency, programmers should
call <code>dispose</code> when finished using
a <code>Graphics</code> object only if it was created
directly from a component or another <code>Graphics</code> object.
@see         java.awt.Graphics#finalize
@see         java.awt.Component#paint
@see         java.awt.Component#update
@see         java.awt.Component#getGraphics
@see         java.awt.Graphics#create
"
      end

      operation 6221698 "finalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of this graphics context once it is no longer referenced.
@see #dispose
"
      end

      operation 6221826 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> object representing this
                       <code>Graphics</code> object's value.
@return       a string representation of this graphics context.
"
      end

      operation 6221954 "getClipRect"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the bounding rectangle of the current clipping area.
@return      the bounding rectangle of the current clipping area
             or <code>null</code> if no clip is set.
@deprecated As of JDK version 1.1,
replaced by <code>getClipBounds()</code>.
"
      end

      operation 6222082 "hitClip"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified rectangular area might intersect
the current clipping area.
The coordinates of the specified rectangular area are in the
user coordinate space and are relative to the coordinate
system origin of this graphics context.
This method may use an algorithm that calculates a result quickly
but which sometimes might return true even if the specified
rectangular area does not intersect the clipping area.
The specific algorithm employed may thus trade off accuracy for
speed, but it will never return false unless it can guarantee
that the specified rectangular area does not intersect the
current clipping area.
The clipping area used by this method can represent the
intersection of the user clip as specified through the clip
methods of this graphics context as well as the clipping
associated with the device or image bounds and window visibility.

@param x the x coordinate of the rectangle to test against the clip
@param y the y coordinate of the rectangle to test against the clip
@param width the width of the rectangle to test against the clip
@param height the height of the rectangle to test against the clip
@return <code>true</code> if the specified rectangle intersects
        the bounds of the current clip; <code>false</code>
        otherwise.
"
      end

      operation 6222210 "getClipBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounding rectangle of the current clipping area.
The coordinates in the rectangle are relative to the coordinate
system origin of this graphics context.  This method differs
from {@link #getClipBounds() getClipBounds} in that an existing
rectangle is used instead of allocating a new one.
This method refers to the user clip, which is independent of the
clipping associated with device bounds and window visibility.
 If no clip has previously been set, or if the clip has been
cleared using <code>setClip(null)</code>, this method returns the
specified <code>Rectangle</code>.
@param  r    the rectangle where the current clipping area is
             copied to.  Any current values in this rectangle are
             overwritten.
@return      the bounding rectangle of the current clipping area.
"
      end
    end

    class 343810 "FontMetrics"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>FontMetrics</code> class defines a font metrics object, which
encapsulates information about the rendering of a particular font on a
particular screen.
<p>
<b>Note to subclassers</b>: Since many of these methods form closed,
mutually recursive loops, you must take care that you implement
at least one of the methods in each such loop to prevent
infinite recursion when your subclass is used.
In particular, the following is the minimal suggested set of methods
to override in order to ensure correctness and prevent infinite
recursion (though other subsets are equally feasible):
<ul>
<li>{@link #getAscent()}
<li>{@link #getLeading()}
<li>{@link #getMaxAdvance()}
<li>{@link #charWidth(char)}
<li>{@link #charsWidth(char[], int, int)}
</ul>
<p>
<img src=\"doc-files/FontMetrics-1.gif\" alt=\"The letter 'p' showing its 'reference point'\"
style=\"border:15px; float:right; margin: 7px 10px;\">
Note that the implementations of these methods are
inefficient, so they are usually overridden with more efficient
toolkit-specific implementations.
<p>
When an application asks to place a character at the position
(<i>x</i>,&nbsp;<i>y</i>), the character is placed so that its
reference point (shown as the dot in the accompanying image) is
put at that position. The reference point specifies a horizontal
line called the <i>baseline</i> of the character. In normal
printing, the baselines of characters should align.
<p>
In addition, every character in a font has an <i>ascent</i>, a
<i>descent</i>, and an <i>advance width</i>. The ascent is the
amount by which the character ascends above the baseline. The
descent is the amount by which the character descends below the
baseline. The advance width indicates the position at which AWT
should place the next character.
<p>
An array of characters or a string can also have an ascent, a
descent, and an advance width. The ascent of the array is the
maximum ascent of any character in the array. The descent is the
maximum descent of any character in the array. The advance width
is the sum of the advance widths of each of the characters in the
character array.  The advance of a <code>String</code> is the
distance along the baseline of the <code>String</code>.  This
distance is the width that should be used for centering or
right-aligning the <code>String</code>.
<p>Note that the advance of a <code>String</code> is not necessarily
the sum of the advances of its characters measured in isolation
because the width of a character can vary depending on its context.
For example, in Arabic text, the shape of a character can change
in order to connect to other characters.  Also, in some scripts,
certain character sequences can be represented by a single shape,
called a <em>ligature</em>.  Measuring characters individually does
not account for these transformations.
<p>Font metrics are baseline-relative, meaning that they are
generally independent of the rotation applied to the font (modulo
possible grid hinting effects).  See {@link java.awt.Font Font}.

@author      Jim Graham
@see         java.awt.Font
@since       JDK1.0
"
      classrelation 2917506 // <realization>
	relation 2917506 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2917506 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      extra_member 149890 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2917634 // DEFAULT_FRC (<unidirectional association>)
	relation 2917634 --->
	  a role_name "DEFAULT_FRC" init_value " new FontRenderContext(null, false, false)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2917634 // DEFAULT_FRC (<unidirectional association>)
	  b parent class_ref 866178 // FontRenderContext
      end

      classrelation 2917762 // font (<unidirectional association>)
	relation 2917762 --->
	  a role_name "font" protected
	    comment "
The actual {@link Font} from which the font metrics are
created.
This cannot be null.

@serial
@see #getFont()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2917762 // font (<unidirectional association>)
	  b parent class_ref 340354 // Font
      end

      attribute 1373698 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1681126225205050147L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6204418 "FontMetrics"
	protected explicit_return_type ""
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>FontMetrics</code> object for finding out
height and width information about the specified <code>Font</code>
and specific character glyphs in that <code>Font</code>.
@param     font the <code>Font</code>
@see       java.awt.Font
"
      end

      operation 6204546 "getFont"
	public return_type class_ref 340354 // Font
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>Font</code> described by this
<code>FontMetrics</code> object.
@return    the <code>Font</code> described by this
<code>FontMetrics</code> object.
"
      end

      operation 6204674 "getFontRenderContext"
	public return_type class_ref 866178 // FontRenderContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>FontRenderContext</code> used by this
<code>FontMetrics</code> object to measure text.
<p>
Note that methods in this class which take a <code>Graphics</code>
parameter measure text using the <code>FontRenderContext</code>
of that <code>Graphics</code> object, and not this
<code>FontRenderContext</code>
@return    the <code>FontRenderContext</code> used by this
<code>FontMetrics</code> object.
@since 1.6
"
      end

      operation 6204802 "getLeading"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the <em>standard leading</em> of the
<code>Font</code> described by this <code>FontMetrics</code>
object.  The standard leading, or
interline spacing, is the logical amount of space to be reserved
between the descent of one line of text and the ascent of the next
line. The height metric is calculated to include this extra space.
@return    the standard leading of the <code>Font</code>.
@see   #getHeight()
@see   #getAscent()
@see   #getDescent()
"
      end

      operation 6204930 "getAscent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the <em>font ascent</em> of the <code>Font</code>
described by this <code>FontMetrics</code> object. The font ascent
is the distance from the font's baseline to the top of most
alphanumeric characters. Some characters in the <code>Font</code>
might extend above the font ascent line.
@return     the font ascent of the <code>Font</code>.
@see        #getMaxAscent()
"
      end

      operation 6205058 "getDescent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the <em>font descent</em> of the <code>Font</code>
described by this
<code>FontMetrics</code> object. The font descent is the distance
from the font's baseline to the bottom of most alphanumeric
characters with descenders. Some characters in the
<code>Font</code> might extend
below the font descent line.
@return     the font descent of the <code>Font</code>.
@see        #getMaxDescent()
"
      end

      operation 6205186 "getHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the standard height of a line of text in this font.  This
is the distance between the baseline of adjacent lines of text.
It is the sum of the leading + ascent + descent. Due to rounding
this may not be the same as getAscent() + getDescent() + getLeading().
There is no guarantee that lines of text spaced at this distance are
disjoint; such lines may overlap if some characters overshoot
either the standard ascent or the standard descent metric.
@return    the standard height of the font.
@see       #getLeading()
@see       #getAscent()
@see       #getDescent()
"
      end

      operation 6205314 "getMaxAscent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the maximum ascent of the <code>Font</code>
described by this <code>FontMetrics</code> object.  No character
extends further above the font's baseline than this height.
@return    the maximum ascent of any character in the
<code>Font</code>.
@see       #getAscent()
"
      end

      operation 6205442 "getMaxDescent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the maximum descent of the <code>Font</code>
described by this <code>FontMetrics</code> object.  No character
extends further below the font's baseline than this height.
@return    the maximum descent of any character in the
<code>Font</code>.
@see       #getDescent()
"
      end

      operation 6205570 "getMaxDecent"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "For backward compatibility only.
@return    the maximum descent of any character in the
<code>Font</code>.
@see #getMaxDescent()
@deprecated As of JDK version 1.1.1,
replaced by <code>getMaxDescent()</code>.
"
      end

      operation 6205698 "getMaxAdvance"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum advance width of any character in this
<code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
string's baseline.  The advance of a <code>String</code> is
not necessarily the sum of the advances of its characters.
@return    the maximum advance width of any character
           in the <code>Font</code>, or <code>-1</code> if the
           maximum advance width is not known.
"
      end

      operation 6205826 "charWidth"
	public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the advance width of the specified character in this
<code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
character's baseline.  Note that the advance of a
<code>String</code> is not necessarily the sum of the advances
of its characters.

<p>This method doesn't validate the specified character to be a
valid Unicode code point. The caller must validate the
character value using {@link
java.lang.Character#isValidCodePoint(int)
Character.isValidCodePoint} if necessary.

@param codePoint the character (Unicode code point) to be measured
@return    the advance width of the specified character
           in the <code>Font</code> described by this
           <code>FontMetrics</code> object.
@see   #charsWidth(char[], int, int)
@see   #stringWidth(String)
"
      end

      operation 6205954 "charWidth"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the advance width of the specified character in this
<code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
character's baseline.  Note that the advance of a
<code>String</code> is not necessarily the sum of the advances
of its characters.

<p><b>Note:</b> This method cannot handle <a
href=\"../lang/Character.html#supplementary\"> supplementary
characters</a>. To support all Unicode characters, including
supplementary characters, use the {@link #charWidth(int)} method.

@param ch the character to be measured
@return     the advance width of the specified character
                 in the <code>Font</code> described by this
                 <code>FontMetrics</code> object.
@see        #charsWidth(char[], int, int)
@see        #stringWidth(String)
"
      end

      operation 6206082 "stringWidth"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total advance width for showing the specified
<code>String</code> in this <code>Font</code>.  The advance
is the distance from the leftmost point to the rightmost point
on the string's baseline.
<p>
Note that the advance of a <code>String</code> is
not necessarily the sum of the advances of its characters.
@param str the <code>String</code> to be measured
@return    the advance width of the specified <code>String</code>
                 in the <code>Font</code> described by this
                 <code>FontMetrics</code>.
@throws NullPointerException if str is null.
@see       #bytesWidth(byte[], int, int)
@see       #charsWidth(char[], int, int)
@see       #getStringBounds(String, Graphics)
"
      end

      operation 6206210 "charsWidth"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total advance width for showing the specified array
of characters in this <code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
string's baseline.  The advance of a <code>String</code>
is not necessarily the sum of the advances of its characters.
This is equivalent to measuring a <code>String</code> of the
characters in the specified range.
@param data the array of characters to be measured
@param off the start offset of the characters in the array
@param len the number of characters to be measured from the array
@return    the advance width of the subarray of the specified
              <code>char</code> array in the font described by
              this <code>FontMetrics</code> object.
@throws    NullPointerException if <code>data</code> is null.
@throws    IndexOutOfBoundsException if the <code>off</code>
           and <code>len</code> arguments index characters outside
           the bounds of the <code>data</code> array.
@see       #charWidth(int)
@see       #charWidth(char)
@see       #bytesWidth(byte[], int, int)
@see       #stringWidth(String)
"
      end

      operation 6206338 "bytesWidth"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total advance width for showing the specified array
of bytes in this <code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
string's baseline.  The advance of a <code>String</code>
is not necessarily the sum of the advances of its characters.
This is equivalent to measuring a <code>String</code> of the
characters in the specified range.
@param data the array of bytes to be measured
@param off the start offset of the bytes in the array
@param len the number of bytes to be measured from the array
@return    the advance width of the subarray of the specified
              <code>byte</code> array in the <code>Font</code>
                 described by
              this <code>FontMetrics</code> object.
@throws    NullPointerException if <code>data</code> is null.
@throws    IndexOutOfBoundsException if the <code>off</code>
           and <code>len</code> arguments index bytes outside
           the bounds of the <code>data</code> array.
@see       #charsWidth(char[], int, int)
@see       #stringWidth(String)
"
      end

      operation 6206466 "getWidths"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the advance widths of the first 256 characters in the
<code>Font</code>.  The advance is the
distance from the leftmost point to the rightmost point on the
character's baseline.  Note that the advance of a
<code>String</code> is not necessarily the sum of the advances
of its characters.
@return    an array storing the advance widths of the
                characters in the <code>Font</code>
                described by this <code>FontMetrics</code> object.
"
      end

      operation 6206594 "hasUniformLineMetrics"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the <code>Font</code> has uniform line metrics.  A
composite font may consist of several different fonts to cover
various character sets.  In such cases, the
<code>FontLineMetrics</code> objects are not uniform.
Different fonts may have a different ascent, descent, metrics and
so on.  This information is sometimes necessary for line
measuring and line breaking.
@return <code>true</code> if the font has uniform line metrics;
<code>false</code> otherwise.
@see java.awt.Font#hasUniformLineMetrics()
"
      end

      operation 6206722 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link LineMetrics} object for the specified
<code>String</code> in the specified {@link Graphics} context.
@param str the specified <code>String</code>
@param context the specified <code>Graphics</code> context
@return a <code>LineMetrics</code> object created with the
specified <code>String</code> and <code>Graphics</code> context.
@see java.awt.Font#getLineMetrics(String, FontRenderContext)
"
      end

      operation 6206850 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "str" type class_ref 128130 // String
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link LineMetrics} object for the specified
<code>String</code> in the specified {@link Graphics} context.
@param str the specified <code>String</code>
@param beginIndex the initial offset of <code>str</code>
@param limit the end offset of <code>str</code>
@param context the specified <code>Graphics</code> context
@return a <code>LineMetrics</code> object created with the
specified <code>String</code> and <code>Graphics</code> context.
@see java.awt.Font#getLineMetrics(String, int, int, FontRenderContext)
"
      end

      operation 6206978 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link LineMetrics} object for the specified
character array in the specified {@link Graphics} context.
@param chars the specified character array
@param beginIndex the initial offset of <code>chars</code>
@param limit the end offset of <code>chars</code>
@param context the specified <code>Graphics</code> context
@return a <code>LineMetrics</code> object created with the
specified character array and <code>Graphics</code> context.
@see java.awt.Font#getLineMetrics(char[], int, int, FontRenderContext)
"
      end

      operation 6207106 "getLineMetrics"
	public return_type class_ref 866306 // LineMetrics
	nparams 4
	  param inout name "ci" type class_ref 429314 // CharacterIterator
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link LineMetrics} object for the specified
{@link CharacterIterator} in the specified {@link Graphics}
context.
@param ci the specified <code>CharacterIterator</code>
@param beginIndex the initial offset in <code>ci</code>
@param limit the end index of <code>ci</code>
@param context the specified <code>Graphics</code> context
@return a <code>LineMetrics</code> object created with the
specified arguments.
@see java.awt.Font#getLineMetrics(CharacterIterator, int, int, FontRenderContext)
"
      end

      operation 6207234 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the specified <code>String</code> in the
specified <code>Graphics</code> context.  The bounds is used
to layout the <code>String</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.FontMetrics class notes}).
@param str the specified <code>String</code>
@param context the specified <code>Graphics</code> context
@return a {@link Rectangle2D} that is the bounding box of the
specified <code>String</code> in the specified
<code>Graphics</code> context.
@see java.awt.Font#getStringBounds(String, FontRenderContext)
"
      end

      operation 6207362 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "str" type class_ref 128130 // String
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the specified <code>String</code> in the
specified <code>Graphics</code> context.  The bounds is used
to layout the <code>String</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.FontMetrics class notes}).
@param str the specified <code>String</code>
@param beginIndex the offset of the beginning of <code>str</code>
@param limit the end offset of <code>str</code>
@param context the specified <code>Graphics</code> context
@return a <code>Rectangle2D</code> that is the bounding box of the
specified <code>String</code> in the specified
<code>Graphics</code> context.
@see java.awt.Font#getStringBounds(String, int, int, FontRenderContext)
"
      end

      operation 6207490 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the specified array of characters
in the specified <code>Graphics</code> context.
The bounds is used to layout the <code>String</code>
created with the specified array of characters,
<code>beginIndex</code> and <code>limit</code>.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.FontMetrics class notes}).
@param chars an array of characters
@param beginIndex the initial offset of the array of
characters
@param limit the end offset of the array of characters
@param context the specified <code>Graphics</code> context
@return a <code>Rectangle2D</code> that is the bounding box of the
specified character array in the specified
<code>Graphics</code> context.
@see java.awt.Font#getStringBounds(char[], int, int, FontRenderContext)
"
      end

      operation 6207618 "getStringBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 4
	  param inout name "ci" type class_ref 429314 // CharacterIterator
	  param in name "beginIndex" explicit_type "int"
	  param in name "limit" explicit_type "int"
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the characters indexed in the specified
<code>CharacterIterator</code> in the
specified <code>Graphics</code> context.
<p>Note: The returned bounds is in baseline-relative coordinates
(see {@link java.awt.FontMetrics class notes}).
@param ci the specified <code>CharacterIterator</code>
@param beginIndex the initial offset in <code>ci</code>
@param limit the end index of <code>ci</code>
@param context the specified <code>Graphics</code> context
@return a <code>Rectangle2D</code> that is the bounding box of the
characters indexed in the specified <code>CharacterIterator</code>
in the specified <code>Graphics</code> context.
@see java.awt.Font#getStringBounds(CharacterIterator, int, int, FontRenderContext)
"
      end

      operation 6207746 "getMaxCharBounds"
	public return_type class_ref 380674 // Rectangle2D
	nparams 1
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds for the character with the maximum bounds
in the specified <code>Graphics</code> context.
@param context the specified <code>Graphics</code> context
@return a <code>Rectangle2D</code> that is the
bounding box for the character with the maximum bounds.
@see java.awt.Font#getMaxCharBounds(FontRenderContext)
"
      end

      operation 6207874 "myFRC"
	private return_type class_ref 866178 // FontRenderContext
	nparams 1
	  param inout name "context" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6208002 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a representation of this <code>FontMetrics</code>
object's values as a <code>String</code>.
@return    a <code>String</code> representation of this
<code>FontMetrics</code> object.
@since     JDK1.0.
"
      end

      operation 6208130 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end
    end

    class 343938 "Insets"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>Insets</code> object is a representation of the borders
of a container. It specifies the space that a container must leave
at each of its edges. The space can be a border, a blank space, or
a title.

@author      Arthur van Hoff
@author      Sami Shaio
@see         java.awt.LayoutManager
@see         java.awt.Container
@since       JDK1.0
"
      classrelation 2926594 // <realization>
	relation 2926594 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2926594 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2926722 // <realization>
	relation 2926722 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2926722 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1391490 "top"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The inset from the top.
This value is added to the Top of the rectangle
to yield a new location for the Top.

@serial
@see #clone()

"
      end

      attribute 1391618 "left"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The inset from the left.
This value is added to the Left of the rectangle
to yield a new location for the Left edge.

@serial
@see #clone()

"
      end

      attribute 1391746 "bottom"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The inset from the bottom.
This value is subtracted from the Bottom of the rectangle
to yield a new location for the Bottom.

@serial
@see #clone()

"
      end

      attribute 1391874 "right"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The inset from the right.
This value is subtracted from the Right of the rectangle
to yield a new location for the Right edge.

@serial
@see #clone()

"
      end

      attribute 1392002 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2272572637695466749L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 150402 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6248834 "Insets"
	public explicit_return_type ""
	nparams 4
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and initializes a new <code>Insets</code> object with the
specified top, left, bottom, and right insets.
@param       top   the inset from the top.
@param       left   the inset from the left.
@param       bottom   the inset from the bottom.
@param       right   the inset from the right.
"
      end

      operation 6248962 "set"
	public explicit_return_type "void"
	nparams 4
	  param in name "top" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	  param in name "right" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set top, left, bottom, and right to the specified values

@param       top   the inset from the top.
@param       left   the inset from the left.
@param       bottom   the inset from the bottom.
@param       right   the inset from the right.
@since 1.5
"
      end

      operation 6249090 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether two insets objects are equal. Two instances
of <code>Insets</code> are equal if the four integer values
of the fields <code>top</code>, <code>left</code>,
<code>bottom</code>, and <code>right</code> are all equal.
@return      <code>true</code> if the two insets are equal;
                         otherwise <code>false</code>.
@since       JDK1.1
"
      end

      operation 6249218 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code for this Insets.

@return    a hash code for this Insets.
"
      end

      operation 6249346 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>Insets</code> object.
This method is intended to be used only for debugging purposes, and
the content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return  a string representation of this <code>Insets</code> object.
"
      end

      operation 6249474 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a copy of this object.
@return     a copy of this <code>Insets</code> object.
"
      end

      operation 6249602 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end
    end

    class 344322 "ImageCapabilities"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Capabilities and properties of images.
@author Michael Martak
@since 1.4
"
      classrelation 2926466 // <realization>
	relation 2926466 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2926466 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1391362 "accelerated"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6248322 "ImageCapabilities"
	public explicit_return_type ""
	nparams 1
	  param inout name "accelerated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object for specifying image capabilities.
@param accelerated whether or not an accelerated image is desired
"
      end

      operation 6248450 "isAccelerated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the object whose capabilities are
encapsulated in this <code>ImageCapabilities</code> can be or is
accelerated.
@return whether or not an image can be, or is, accelerated.  There are
various platform-specific ways to accelerate an image, including
pixmaps, VRAM, AGP.  This is the general acceleration method (as
opposed to residing in system memory).
"
      end

      operation 6248578 "isTrueVolatile"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the <code>VolatileImage</code>
described by this <code>ImageCapabilities</code> can lose
its surfaces.
@return whether or not a volatile image is subject to losing its surfaces
at the whim of the operating system.
"
      end

      operation 6248706 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a copy of this ImageCapabilities object.
"
      end
    end

    class 344450 "AWTException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an Abstract Window Toolkit exception has occurred.

@author      Arthur van Hoff
"
      classrelation 2885122 // <generalisation>
	relation 2885122 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2885122 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1335938 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1900414231151323879L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6088194 "AWTException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of <code>AWTException</code> with the
specified detail message. A detail message is an
instance of <code>String</code> that describes this particular
exception.
@param   msg     the detail message
@since   JDK1.0
"
      end
    end

    class 344578 "BufferCapabilities"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Capabilities and properties of buffers.

@see java.awt.image.BufferStrategy#getCapabilities()
@see GraphicsConfiguration#getBufferCapabilities
@author Michael Martak
@since 1.4
"
      class 345090 "FlipContents"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2889986 // <generalisation>
	  relation 2889986 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2889986 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1338754 "I_UNDEFINED"
	  class_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1338882 "I_BACKGROUND"
	  class_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1339010 "I_PRIOR"
	  class_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1339138 "I_COPIED"
	  class_attribute private explicit_type "int"
	  init_value " 3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2890114 // NAMES (<unidirectional association>)
	  relation 2890114 --->
	    a role_name "NAMES" multiplicity "[]" init_value "
            { \"undefined\", \"background\", \"prior\", \"copied\" }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2890114 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2890242 // UNDEFINED (<unidirectional association>)
	  relation 2890242 --->
	    a role_name "UNDEFINED" init_value "
            new FlipContents(I_UNDEFINED)" class_relation const_relation public
	      comment "
When flip contents are <code>UNDEFINED</code>, the
contents of the back buffer are undefined after flipping.
@see #isPageFlipping
@see #getFlipContents
@see #BACKGROUND
@see #PRIOR
@see #COPIED

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2890242 // UNDEFINED (<unidirectional association>)
	    b parent class_ref 345090 // FlipContents
	end

	classrelation 2890370 // BACKGROUND (<unidirectional association>)
	  relation 2890370 --->
	    a role_name "BACKGROUND" init_value "
            new FlipContents(I_BACKGROUND)" class_relation const_relation public
	      comment "
When flip contents are <code>BACKGROUND</code>, the
contents of the back buffer are cleared with the background color after
flipping.
@see #isPageFlipping
@see #getFlipContents
@see #UNDEFINED
@see #PRIOR
@see #COPIED

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2890370 // BACKGROUND (<unidirectional association>)
	    b parent class_ref 345090 // FlipContents
	end

	classrelation 2890498 // PRIOR (<unidirectional association>)
	  relation 2890498 --->
	    a role_name "PRIOR" init_value "
            new FlipContents(I_PRIOR)" class_relation const_relation public
	      comment "
When flip contents are <code>PRIOR</code>, the
contents of the back buffer are the prior contents of the front buffer
(a true page flip).
@see #isPageFlipping
@see #getFlipContents
@see #UNDEFINED
@see #BACKGROUND
@see #COPIED

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2890498 // PRIOR (<unidirectional association>)
	    b parent class_ref 345090 // FlipContents
	end

	classrelation 2890626 // COPIED (<unidirectional association>)
	  relation 2890626 --->
	    a role_name "COPIED" init_value "
            new FlipContents(I_COPIED)" class_relation const_relation public
	      comment "
When flip contents are <code>COPIED</code>, the
contents of the back buffer are copied to the front buffer when
flipping.
@see #isPageFlipping
@see #getFlipContents
@see #UNDEFINED
@see #BACKGROUND
@see #PRIOR

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2890626 // COPIED (<unidirectional association>)
	    b parent class_ref 345090 // FlipContents
	end

	operation 6098178 "FlipContents"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2889474 // <realization>
	relation 2889474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2889474 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2889602 // frontCaps (<unidirectional association>)
	relation 2889602 --->
	  a role_name "frontCaps" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889602 // frontCaps (<unidirectional association>)
	  b parent class_ref 344322 // ImageCapabilities
      end

      classrelation 2889730 // backCaps (<unidirectional association>)
	relation 2889730 --->
	  a role_name "backCaps" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889730 // backCaps (<unidirectional association>)
	  b parent class_ref 344322 // ImageCapabilities
      end

      classrelation 2889858 // flipContents (<unidirectional association>)
	relation 2889858 --->
	  a role_name "flipContents" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889858 // flipContents (<unidirectional association>)
	  b parent class_ref 345090 // FlipContents
      end

      operation 6097154 "BufferCapabilities"
	public explicit_return_type ""
	nparams 3
	  param inout name "frontCaps" type class_ref 344322 // ImageCapabilities
	  param inout name "backCaps" type class_ref 344322 // ImageCapabilities
	  param inout name "flipContents" type class_ref 345090 // FlipContents
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new object for specifying buffering capabilities
@param frontCaps the capabilities of the front buffer; cannot be
<code>null</code>
@param backCaps the capabilities of the back and intermediate buffers;
cannot be <code>null</code>
@param flipContents the contents of the back buffer after page-flipping,
<code>null</code> if page flipping is not used (implies blitting)
@exception IllegalArgumentException if frontCaps or backCaps are
<code>null</code>
"
      end

      operation 6097282 "getFrontBufferCapabilities"
	public return_type class_ref 344322 // ImageCapabilities
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the image capabilities of the front (displayed) buffer
"
      end

      operation 6097410 "getBackBufferCapabilities"
	public return_type class_ref 344322 // ImageCapabilities
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the image capabilities of all back buffers (intermediate buffers
are considered back buffers)
"
      end

      operation 6097538 "isPageFlipping"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return whether or not the buffer strategy uses page flipping; a set of
buffers that uses page flipping
can swap the contents internally between the front buffer and one or
more back buffers by switching the video pointer (or by copying memory
internally).  A non-flipping set of
buffers uses blitting to copy the contents from one buffer to
another; when this is the case, <code>getFlipContents</code> returns
<code>null</code>
"
      end

      operation 6097666 "getFlipContents"
	public return_type class_ref 345090 // FlipContents
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the resulting contents of the back buffer after page-flipping.
This value is <code>null</code> when the <code>isPageFlipping</code>
returns <code>false</code>, implying blitting.  It can be one of
<code>FlipContents.UNDEFINED</code>
(the assumed default), <code>FlipContents.BACKGROUND</code>,
<code>FlipContents.PRIOR</code>, or
<code>FlipContents.COPIED</code>.
@see #isPageFlipping
@see FlipContents#UNDEFINED
@see FlipContents#BACKGROUND
@see FlipContents#PRIOR
@see FlipContents#COPIED
"
      end

      operation 6097794 "isFullScreenRequired"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return whether page flipping is only available in full-screen mode.  If this
is <code>true</code>, full-screen exclusive mode is required for
page-flipping.
@see #isPageFlipping
@see GraphicsDevice#setFullScreenWindow
"
      end

      operation 6097922 "isMultiBufferAvailable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return whether or not
page flipping can be performed using more than two buffers (one or more
intermediate buffers as well as the front and back buffer).
@see #isPageFlipping
"
      end

      operation 6098050 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a copy of this BufferCapabilities object.
"
      end
    end

    class 347394 "Window"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@code Window} object is a top-level window with no borders and no
menubar.
The default layout for a window is {@code BorderLayout}.
<p>
A window must have either a frame, dialog, or another window defined as its
owner when it's constructed.
<p>
In a multi-screen environment, you can create a {@code Window}
on a different screen device by constructing the {@code Window}
with {@link #Window(Window, GraphicsConfiguration)}.  The
{@code GraphicsConfiguration} object is one of the
{@code GraphicsConfiguration} objects of the target screen device.
<p>
In a virtual device multi-screen environment in which the desktop
area could span multiple physical screen devices, the bounds of all
configurations are relative to the virtual device coordinate system.
The origin of the virtual-coordinate system is at the upper left-hand
corner of the primary physical screen.  Depending on the location of
the primary screen in the virtual device, negative coordinates are
possible, as shown in the following figure.
<p>
<img src=\"doc-files/MultiScreen.gif\"
alt=\"Diagram shows virtual device containing 4 physical screens. Primary physical screen shows coords (0,0), other screen shows (-80,-100).\"
style=\"float:center; margin: 7px 10px;\">
<p>
In such an environment, when calling {@code setLocation},
you must pass a virtual coordinate to this method.  Similarly,
calling {@code getLocationOnScreen} on a {@code Window} returns
virtual device coordinates.  Call the {@code getBounds} method
of a {@code GraphicsConfiguration} to find its origin in the virtual
coordinate system.
<p>
The following code sets the location of a {@code Window}
at (10, 10) relative to the origin of the physical screen
of the corresponding {@code GraphicsConfiguration}.  If the
bounds of the {@code GraphicsConfiguration} is not taken
into account, the {@code Window} location would be set
at (10, 10) relative to the virtual-coordinate system and would appear
on the primary physical screen, which might be different from the
physical screen of the specified {@code GraphicsConfiguration}.

<pre>
     Window w = new Window(Window owner, GraphicsConfiguration gc);
     Rectangle bounds = gc.getBounds();
     w.setLocation(10 + bounds.x, 10 + bounds.y);
</pre>

<p>
Note: the location and size of top-level windows (including
{@code Window}s, {@code Frame}s, and {@code Dialog}s)
are under the control of the desktop's window management system.
Calls to {@code setLocation}, {@code setSize}, and
{@code setBounds} are requests (not directives) which are
forwarded to the window management system.  Every effort will be
made to honor such requests.  However, in some cases the window
management system may ignore such requests, or modify the requested
geometry in order to place and size the {@code Window} in a way
that more closely matches the desktop settings.
<p>
Due to the asynchronous nature of native event handling, the results
returned by {@code getBounds}, {@code getLocation},
{@code getLocationOnScreen}, and {@code getSize} might not
reflect the actual geometry of the Window on screen until the last
request has been processed.  During the processing of subsequent
requests these values might change accordingly while the window
management system fulfills the requests.
<p>
An application may set the size and location of an invisible
{@code Window} arbitrarily, but the window management system may
subsequently change its size and/or location when the
{@code Window} is made visible. One or more {@code ComponentEvent}s
will be generated to indicate the new geometry.
<p>
Windows are capable of generating the following WindowEvents:
WindowOpened, WindowClosed, WindowGainedFocus, WindowLostFocus.

@author      Sami Shaio
@author      Arthur van Hoff
@see WindowEvent
@see #addWindowListener
@see java.awt.BorderLayout
@since       JDK1.0
"
      classrelation 925186 // <generalisation>
	relation 925186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 925186 // <generalisation>
	  b parent class_ref 338690 // Container
      end

      classrelation 925314 // <realization>
	relation 925314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 925314 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      class 468866 "Type"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 608770 "NORMAL"
	  public type class_ref 468866 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a <i>normal</i> window.

This is the default type for objects of the {@code Window} class or
its descendants. Use this type for regular top-level windows.

"
	end

	attribute 608898 "UTILITY"
	  public type class_ref 468866 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a <i>utility</i> window.

A utility window is usually a small window such as a toolbar or a
palette. The native system may render the window with smaller
title-bar if the window is either a {@code Frame} or a {@code
Dialog} object, and if it has its decorations enabled.

"
	end

	attribute 609026 "POPUP"
	  public type class_ref 468866 // Type
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a <i>popup</i> window.

A popup window is a temporary window such as a drop-down menu or a
tooltip. On some platforms, windows of that type may be forcibly
made undecorated even if they are instances of the {@code Frame} or
{@code Dialog} class, and have decorations enabled.
"
	end
      end

      classrelation 925442 // warningString (<unidirectional association>)
	relation 925442 --->
	  a role_name "warningString" package
	    comment "
This represents the warning message that is
to be displayed in a non secure window. ie :
a window that has a security manager installed that denies
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}.
This message can be displayed anywhere in the window.

@serial
@see #getWarningString

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925442 // warningString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 925570 // icons (<unidirectional association>)
	relation 925570 --->
	  a role_name "icons" package
	    comment "
{@code icons} is the graphical way we can
represent the frames and dialogs.
{@code Window} can't display icon but it's
being inherited by owned {@code Dialog}s.

@serial
@see #getIconImages
@see #setIconImages

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Image> ${name}${value};
"
	    classrelation_ref 925570 // icons (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 925698 // temporaryLostComponent (<unidirectional association>)
	relation 925698 --->
	  a role_name "temporaryLostComponent" private
	    comment "
Holds the reference to the component which last had focus in this window
before it lost focus.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925698 // temporaryLostComponent (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 609154 "systemSyncLWRequests"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 609282 "syncLWRequests"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 609410 "beforeFirstShow"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 609538 "disposing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 468994 "WindowDisposerRecord"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 927874 // owner (<unidirectional association>)
	  relation 927874 --->
	    a role_name "owner" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	      classrelation_ref 927874 // owner (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 928002 // weakThis (<unidirectional association>)
	  relation 928002 --->
	    a role_name "weakThis" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	      classrelation_ref 928002 // weakThis (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 928130 // context (<unidirectional association>)
	  relation 928130 --->
	    a role_name "context" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AppContext> ${name}${value};
"
	      classrelation_ref 928130 // context (<unidirectional association>)
	    b parent class_ref 131330 // WeakReference
	end

	operation 2809858 "WindowDisposerRecord"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" explicit_type "AppContext"
	    param inout name "victim" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2809986 "updateOwner"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2810114 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 925826 // disposerRecord (<unidirectional association>)
	relation 925826 --->
	  a role_name "disposerRecord" init_value " null" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925826 // disposerRecord (<unidirectional association>)
	  b parent class_ref 468994 // WindowDisposerRecord
      end

      attribute 609666 "OPENED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 609794 "state"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An Integer value representing the Window State.

@serial
@since 1.2
@see #show

"
      end

      attribute 609922 "alwaysOnTop"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A boolean value representing Window always-on-top state
@since 1.5
@serial
@see #setAlwaysOnTop
@see #isAlwaysOnTop

"
      end

      classrelation 925954 // allWindows (<unidirectional association>)
	relation 925954 --->
	  stereotype "IdentityArrayList"
	  a role_name "allWindows" init_value " new IdentityArrayList<Window>()" class_relation const_relation private
	    comment "Contains all the windows that have a peer object associated,
i. e. between addNotify() and removeNotify() calls. The list
of all Window instances can be obtained from AppContext object.

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 925954 // allWindows (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      classrelation 926082 // ownedWindowList (<unidirectional association>)
	relation 926082 --->
	  a role_name "ownedWindowList" init_value "
                                            new Vector<WeakReference<Window>>()" package
	    comment "
A vector containing all the windows this
window currently owns.
@since 1.2
@see #getOwnedWindows

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WeakReference<Window>> ${name}${value};
"
	    classrelation_ref 926082 // ownedWindowList (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 926210 // weakThis (<unidirectional association>)
	relation 926210 --->
	  a role_name "weakThis" private
	    comment "
We insert a weak reference into the Vector of all Windows in AppContext
instead of 'this' so that garbage collection can still take place
correctly.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	    classrelation_ref 926210 // weakThis (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      attribute 610050 "showWithParent"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 926338 // modalBlocker (<unidirectional association>)
	relation 926338 --->
	  a role_name "modalBlocker" package
	    comment "
Contains the modal dialog that blocks this window, or null
if the window is unblocked.

@since 1.6

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926338 // modalBlocker (<unidirectional association>)
	  b parent class_ref 469122 // Dialog
      end

      classrelation 926466 // modalExclusionType (<unidirectional association>)
	relation 926466 --->
	  a role_name "modalExclusionType" package
	    comment "
@serial

@see java.awt.Dialog.ModalExclusionType
@see #getModalExclusionType
@see #setModalExclusionType

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926466 // modalExclusionType (<unidirectional association>)
	  b parent class_ref 469250 // ModalExclusionType
      end

      classrelation 926594 // windowListener (<unidirectional association>)
	relation 926594 --->
	  a role_name "windowListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926594 // windowListener (<unidirectional association>)
	  b parent class_ref 433794 // WindowListener
      end

      classrelation 926722 // windowStateListener (<unidirectional association>)
	relation 926722 --->
	  a role_name "windowStateListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926722 // windowStateListener (<unidirectional association>)
	  b parent class_ref 469378 // WindowStateListener
      end

      classrelation 926850 // windowFocusListener (<unidirectional association>)
	relation 926850 --->
	  a role_name "windowFocusListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926850 // windowFocusListener (<unidirectional association>)
	  b parent class_ref 422914 // WindowFocusListener
      end

      classrelation 926978 // inputContext (<unidirectional association>)
	relation 926978 --->
	  a role_name "inputContext" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926978 // inputContext (<unidirectional association>)
	  b parent class_ref 346114 // InputContext
      end

      classrelation 927106 // inputContextLock (<unidirectional association>)
	relation 927106 --->
	  a role_name "inputContextLock" init_value " new Object()" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927106 // inputContextLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 927234 // focusMgr (<unidirectional association>)
	relation 927234 --->
	  a role_name "focusMgr" private
	    comment "
Unused. Maintained for serialization backward-compatibility.

@serial
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927234 // focusMgr (<unidirectional association>)
	  b parent class_ref 469506 // FocusManager
      end

      attribute 610178 "focusableWindowState"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether this Window can become the focused Window.

@serial
@see #getFocusableWindowState
@see #setFocusableWindowState
@since 1.4

"
      end

      attribute 610306 "autoRequestFocus"
	volatile private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether this window should receive focus on
subsequently being shown (with a call to {@code setVisible(true)}), or
being moved to the front (with a call to {@code toFront()}).

@serial
@see #setAutoRequestFocus
@see #isAutoRequestFocus
@since 1.7

"
      end

      attribute 610434 "isInShow"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that this window is being shown. This flag is set to true at
the beginning of show() and to false at the end of show().

@see #show()
@see Dialog#shouldBlock

"
      end

      attribute 610562 "opacity"
	volatile private explicit_type "float"
	init_value " 1.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The opacity level of the window

@serial
@see #setOpacity(float)
@see #getOpacity()
@since 1.7

"
      end

      classrelation 927362 // shape (<unidirectional association>)
	relation 927362 --->
	  a role_name "shape" init_value " null" private
	    comment "
The shape assigned to this window. This field is set to {@code null} if
no shape is set (rectangular window).

@serial
@see #getShape()
@see #setShape(Shape)
@since 1.7

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927362 // shape (<unidirectional association>)
	  b parent class_ref 379394 // Shape
      end

      classrelation 927490 // base (<unidirectional association>)
	relation 927490 --->
	  a role_name "base" init_value " \"win\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927490 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 610690 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 610818 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4497834738069338734L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      attribute 610946 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.Window\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611074 "locationByPlatformProp"
	class_attribute const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611202 "isTrayIconWindow"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611330 "securityWarningWidth"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "These fields are initialized in the native peer code
or via AWTAccessor's WindowAccessor.

"
      end

      attribute 611458 "securityWarningHeight"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611586 "securityWarningPointX"
	private explicit_type "double"
	init_value " 2.0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "These fields represent the desired location for the security
warning if this window is untrusted.
See com.sun.awt.SecurityWarning for more details.

"
      end

      attribute 611714 "securityWarningPointY"
	private explicit_type "double"
	init_value " 0.0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611842 "securityWarningAlignmentX"
	private explicit_type "float"
	init_value " RIGHT_ALIGNMENT"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 611970 "securityWarningAlignmentY"
	private explicit_type "float"
	init_value " TOP_ALIGNMENT"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 137986 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        String s = java.security.AccessController.doPrivileged(
            new GetPropertyAction(\"java.awt.syncLWRequests\"));
        systemSyncLWRequests = (s != null && s.equals(\"true\"));
        s = java.security.AccessController.doPrivileged(
            new GetPropertyAction(\"java.awt.Window.locationByPlatform\"));
        locationByPlatformProp = (s != null && s.equals(\"true\"));
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 2809602 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      operation 2809730 "Window"
	package explicit_return_type ""
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible window in default size with the
specified {@code GraphicsConfiguration}.
<p>
If there is a security manager, then it is invoked to check
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}
to determine whether or not the window must be displayed with
a warning banner.

@param gc the {@code GraphicsConfiguration} of the target screen
    device. If {@code gc} is {@code null}, the system default
    {@code GraphicsConfiguration} is assumed
@exception IllegalArgumentException if {@code gc}
   is not from a screen device
@exception HeadlessException when
    {@code GraphicsEnvironment.isHeadless()} returns {@code true}

@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      classrelation 927618 // anchor (<unidirectional association>)
	relation 927618 --->
	  a role_name "anchor" init_value " new Object()" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927618 // anchor (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 2810242 "initGC"
	private return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2810370 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2810498 "Window"
	package explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible window in the default size.
<p>
If there is a security manager set, it is invoked to check
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}.
If that check fails with a {@code SecurityException} then a warning
banner is created.

@exception HeadlessException when
    {@code GraphicsEnvironment.isHeadless()} returns {@code true}

@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 2810626 "Window"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible window with the specified
{@code Frame} as its owner. The window will not be focusable
unless its owner is showing on the screen.
<p>
If there is a security manager set, it is invoked to check
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}.
If that check fails with a {@code SecurityException} then a warning
banner is created.

@param owner the {@code Frame} to act as owner or {@code null}
   if this window has no owner
@exception IllegalArgumentException if the {@code owner}'s
   {@code GraphicsConfiguration} is not from a screen device
@exception HeadlessException when
   {@code GraphicsEnvironment.isHeadless} returns {@code true}

@see java.awt.GraphicsEnvironment#isHeadless
@see #isShowing
"
      end

      operation 2810754 "Window"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible window with the specified
{@code Window} as its owner. This window will not be focusable
unless its nearest owning {@code Frame} or {@code Dialog}
is showing on the screen.
<p>
If there is a security manager set, it is invoked to check
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}.
If that check fails with a {@code SecurityException} then a
warning banner is created.

@param owner the {@code Window} to act as owner or
    {@code null} if this window has no owner
@exception IllegalArgumentException if the {@code owner}'s
    {@code GraphicsConfiguration} is not from a screen device
@exception HeadlessException when
    {@code GraphicsEnvironment.isHeadless()} returns
    {@code true}

@see       java.awt.GraphicsEnvironment#isHeadless
@see       #isShowing

@since     1.2
"
      end

      operation 2810882 "Window"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible window with the specified owner
{@code Window} and a {@code GraphicsConfiguration}
of a screen device. The Window will not be focusable unless
its nearest owning {@code Frame} or {@code Dialog}
is showing on the screen.
<p>
If there is a security manager set, it is invoked to check
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}. If that
check fails with a {@code SecurityException} then a warning banner
is created.

@param owner the window to act as owner or {@code null}
    if this window has no owner
@param gc the {@code GraphicsConfiguration} of the target
    screen device; if {@code gc} is {@code null},
    the system default {@code GraphicsConfiguration} is assumed
@exception IllegalArgumentException if {@code gc}
    is not from a screen device
@exception HeadlessException when
    {@code GraphicsEnvironment.isHeadless()} returns
    {@code true}

@see       java.awt.GraphicsEnvironment#isHeadless
@see       GraphicsConfiguration#getBounds
@see       #isShowing
@since     1.3
"
      end

      operation 2811010 "ownedInit"
	private explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2811138 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 2811266 "getIconImages"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Image> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sequence of images to be displayed as the icon for this window.
<p>
This method returns a copy of the internally stored list, so all operations
on the returned object will not affect the window's behavior.

@return    the copy of icon images' list for this window, or
           empty list if this window doesn't have icon images.
@see       #setIconImages
@see       #setIconImage(Image)
@since     1.6
"
      end

      operation 2811394 "setIconImages"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icons" type class_ref 175362 // List
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Image> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the sequence of images to be displayed as the icon
for this window. Subsequent calls to {@code getIconImages} will
always return a copy of the {@code icons} list.
<p>
Depending on the platform capabilities one or several images
of different dimensions will be used as the window's icon.
<p>
The {@code icons} list is scanned for the images of most
appropriate dimensions from the beginning. If the list contains
several images of the same size, the first will be used.
<p>
Ownerless windows with no icon specified use platfrom-default icon.
The icon of an owned window may be inherited from the owner
unless explicitly overridden.
Setting the icon to {@code null} or empty list restores
the default behavior.
<p>
Note : Native windowing systems may use different images of differing
dimensions to represent a window, depending on the context (e.g.
window decoration, window list, taskbar, etc.). They could also use
just a single image for all contexts or no image at all.

@param     icons the list of icon images to be displayed.
@see       #getIconImages()
@see       #setIconImage(Image)
@since     1.6
"
      end

      operation 2811522 "setIconImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the image to be displayed as the icon for this window.
<p>
This method can be used instead of {@link #setIconImages setIconImages()}
to specify a single image as a window's icon.
<p>
The following statement:
<pre>
    setIconImage(image);
</pre>
is equivalent to:
<pre>
    ArrayList&lt;Image&gt; imageList = new ArrayList&lt;Image&gt;();
    imageList.add(image);
    setIconImages(imageList);
</pre>
<p>
Note : Native windowing systems may use different images of differing
dimensions to represent a window, depending on the context (e.g.
window decoration, window list, taskbar, etc.). They could also use
just a single image for all contexts or no image at all.

@param     image the icon image to be displayed.
@see       #setIconImages
@see       #getIconImages()
@since     1.6
"
      end

      operation 2811650 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Window displayable by creating the connection to its
native screen resource.
This method is called internally by the toolkit and should
not be called directly by programs.
@see Component#isDisplayable
@see Container#removeNotify
@since JDK1.0
"
      end

      operation 2811778 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 2811906 "pack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes this Window to be sized to fit the preferred size
and layouts of its subcomponents. The resulting width and
height of the window are automatically enlarged if either
of dimensions is less than the minimum size as specified
by the previous call to the {@code setMinimumSize} method.
<p>
If the window and/or its owner are not displayable yet,
both of them are made displayable before calculating
the preferred size. The Window is validated after its
size is being calculated.

@see Component#isDisplayable
@see #setMinimumSize
"
      end

      operation 2812034 "setMinimumSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "minimumSize" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum size of this window to a constant
value.  Subsequent calls to {@code getMinimumSize}
will always return this value. If current window's
size is less than {@code minimumSize} the size of the
window is automatically enlarged to honor the minimum size.
<p>
If the {@code setSize} or {@code setBounds} methods
are called afterwards with a width or height less than
that was specified by the {@code setMinimumSize} method
the window is automatically enlarged to meet
the {@code minimumSize} value. The {@code minimumSize}
value also affects the behaviour of the {@code pack} method.
<p>
The default behavior is restored by setting the minimum size
parameter to the {@code null} value.
<p>
Resizing operation may be restricted if the user tries
to resize window below the {@code minimumSize} value.
This behaviour is platform-dependent.

@param minimumSize the new minimum size of this window
@see Component#setMinimumSize
@see #getMinimumSize
@see #isMinimumSizeSet
@see #setSize(Dimension)
@see #pack
@since 1.6
"
      end

      operation 2812162 "setSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
The {@code d.width} and {@code d.height} values
are automatically enlarged if either is less than
the minimum size as specified by previous call to
{@code setMinimumSize}.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.

@see #getSize
@see #setBounds
@see #setMinimumSize
@since 1.6
"
      end

      operation 2812290 "setSize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
The {@code width} and {@code height} values
are automatically enlarged if either is less than
the minimum size as specified by previous call to
{@code setMinimumSize}.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.

@see #getSize
@see #setBounds
@see #setMinimumSize
@since 1.6
"
      end

      operation 2812418 "setLocation"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.
"
      end

      operation 2812546 "setLocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.
"
      end

      operation 2812674 "reshape"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by {@code setBounds(int, int, int, int)}.
"
      end

      operation 2812802 "setClientSize"
	package explicit_return_type "void"
	nparams 2
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 928258 // beforeFirstWindowShown (<unidirectional association>)
	relation 928258 --->
	  a role_name "beforeFirstWindowShown" init_value " new AtomicBoolean(true)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928258 // beforeFirstWindowShown (<unidirectional association>)
	  b parent class_ref 357506 // AtomicBoolean
      end

      operation 2812930 "closeSplashScreen"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2813058 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows or hides this {@code Window} depending on the value of parameter
{@code b}.
<p>
If the method shows the window then the window is also made
focused under the following conditions:
<ul>
<li> The {@code Window} meets the requirements outlined in the
     {@link #isFocusableWindow} method.
<li> The {@code Window}'s {@code autoRequestFocus} property is of the {@code true} value.
<li> Native windowing system allows the {@code Window} to get focused.
</ul>
There is an exception for the second condition (the value of the
{@code autoRequestFocus} property). The property is not taken into account if the
window is a modal dialog, which blocks the currently focused window.
<p>
Developers must never assume that the window is the focused or active window
until it receives a WINDOW_GAINED_FOCUS or WINDOW_ACTIVATED event.
@param b  if {@code true}, makes the {@code Window} visible,
otherwise hides the {@code Window}.
If the {@code Window} and/or its owner
are not yet displayable, both are made displayable.  The
{@code Window} will be validated prior to being made visible.
If the {@code Window} is already visible, this will bring the
{@code Window} to the front.<p>
If {@code false}, hides this {@code Window}, its subcomponents, and all
of its owned children.
The {@code Window} and its subcomponents can be made visible again
with a call to {@code #setVisible(true)}.
@see java.awt.Component#isDisplayable
@see java.awt.Component#setVisible
@see java.awt.Window#toFront
@see java.awt.Window#dispose
@see java.awt.Window#setAutoRequestFocus
@see java.awt.Window#isFocusableWindow
"
      end

      operation 2813186 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Makes the Window visible. If the Window and/or its owner
are not yet displayable, both are made displayable.  The
Window will be validated prior to being made visible.
If the Window is already visible, this will bring the Window
to the front.
@see       Component#isDisplayable
@see       #toFront
@deprecated As of JDK version 1.5, replaced by
{@link #setVisible(boolean)}.
"
      end

      operation 2813314 "updateChildFocusableWindowState"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2813442 "postWindowEvent"
	package explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2813570 "hide"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Hide this Window, its subcomponents, and all of its owned children.
The Window and its subcomponents can be made visible again
with a call to {@code show}.
@see #show
@see #dispose
@deprecated As of JDK version 1.5, replaced by
{@link #setVisible(boolean)}.
"
      end

      operation 2813698 "clearMostRecentFocusOwnerOnHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2813826 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases all of the native screen resources used by this
{@code Window}, its subcomponents, and all of its owned
children. That is, the resources for these {@code Component}s
will be destroyed, any memory they consume will be returned to the
OS, and they will be marked as undisplayable.
<p>
The {@code Window} and its subcomponents can be made displayable
again by rebuilding the native resources with a subsequent call to
{@code pack} or {@code show}. The states of the recreated
{@code Window} and its subcomponents will be identical to the
states of these objects at the point where the {@code Window}
was disposed (not accounting for additional modifications between
those actions).
<p>
<b>Note</b>: When the last displayable window
within the Java virtual machine (VM) is disposed of, the VM may
terminate.  See <a href=\"doc-files/AWTThreadIssues.html#Autoshutdown\">
AWT Threading Issues</a> for more information.
@see Component#isDisplayable
@see #pack
@see #show
"
      end

      operation 2813954 "disposeImpl"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fix for 4872170.
If dispose() is called on parent then its children have to be disposed as well
as reported in javadoc. So we need to implement this functionality even if a
child overrides dispose() in a wrong way without calling super.dispose().
"
      end

      operation 2814082 "doDispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2814210 "adjustListeningChildrenOnParent"
	package explicit_return_type "void"
	nparams 2
	  param in name "mask" explicit_type "long"
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Should only be called while holding the tree lock.
It's overridden here because parent == owner in Window,
and we shouldn't adjust counter on owner
"
      end

      operation 2814338 "adjustDecendantsOnParent"
	package explicit_return_type "void"
	nparams 1
	  param in name "num" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Should only be called while holding tree lock"
      end

      operation 2814466 "toFront"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this Window is visible, brings this Window to the front and may make
it the focused Window.
<p>
Places this Window at the top of the stacking order and shows it in
front of any other Windows in this VM. No action will take place if this
Window is not visible. Some platforms do not allow Windows which own
other Windows to appear on top of those owned Windows. Some platforms
may not permit this VM to place its Windows above windows of native
applications, or Windows of other VMs. This permission may depend on
whether a Window in this VM is already focused. Every attempt will be
made to move this Window as high as possible in the stacking order;
however, developers should not assume that this method will move this
Window above all other windows in every situation.
<p>
Developers must never assume that this Window is the focused or active
Window until this Window receives a WINDOW_GAINED_FOCUS or WINDOW_ACTIVATED
event. On platforms where the top-most window is the focused window, this
method will <b>probably</b> focus this Window (if it is not already focused)
under the following conditions:
<ul>
<li> The window meets the requirements outlined in the
     {@link #isFocusableWindow} method.
<li> The window's property {@code autoRequestFocus} is of the
     {@code true} value.
<li> Native windowing system allows the window to get focused.
</ul>
On platforms where the stacking order does not typically affect the focused
window, this method will <b>probably</b> leave the focused and active
Windows unchanged.
<p>
If this method causes this Window to be focused, and this Window is a
Frame or a Dialog, it will also become activated. If this Window is
focused, but it is not a Frame or a Dialog, then the first Frame or
Dialog that is an owner of this Window will be activated.
<p>
If this window is blocked by modal dialog, then the blocking dialog
is brought to the front and remains above the blocked window.

@see       #toBack
@see       #setAutoRequestFocus
@see       #isFocusableWindow
"
      end

      operation 2814594 "toFront_NoClientCode"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This functionality is implemented in a final package-private method
 to insure that it cannot be overridden by client subclasses."
      end

      operation 2814722 "toBack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this Window is visible, sends this Window to the back and may cause
it to lose focus or activation if it is the focused or active Window.
<p>
Places this Window at the bottom of the stacking order and shows it
behind any other Windows in this VM. No action will take place is this
Window is not visible. Some platforms do not allow Windows which are
owned by other Windows to appear below their owners. Every attempt will
be made to move this Window as low as possible in the stacking order;
however, developers should not assume that this method will move this
Window below all other windows in every situation.
<p>
Because of variations in native windowing systems, no guarantees about
changes to the focused and active Windows can be made. Developers must
never assume that this Window is no longer the focused or active Window
until this Window receives a WINDOW_LOST_FOCUS or WINDOW_DEACTIVATED
event. On platforms where the top-most window is the focused window,
this method will <b>probably</b> cause this Window to lose focus. In
that case, the next highest, focusable Window in this VM will receive
focus. On platforms where the stacking order does not typically affect
the focused window, this method will <b>probably</b> leave the focused
and active Windows unchanged.

@see       #toFront
"
      end

      operation 2814850 "toBack_NoClientCode"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This functionality is implemented in a final package-private method
 to insure that it cannot be overridden by client subclasses."
      end

      operation 2814978 "getToolkit"
	public return_type class_ref 343298 // Toolkit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the toolkit of this frame.
@return    the toolkit of this window.
@see       Toolkit
@see       Toolkit#getDefaultToolkit
@see       Component#getToolkit
"
      end

      operation 2815106 "getWarningString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the warning string that is displayed with this window.
If this window is insecure, the warning string is displayed
somewhere in the visible area of the window. A window is
insecure if there is a security manager and the security
manager denies
{@code AWTPermission(\"showWindowWithoutWarningBanner\")}.
<p>
If the window is secure, then {@code getWarningString}
returns {@code null}. If the window is insecure, this
method checks for the system property
{@code awt.appletWarning}
and returns the string value of that property.
@return    the warning string for this window.
"
      end

      operation 2815234 "setWarningString"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2815362 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code Locale} object that is associated
with this window, if the locale has been set.
If no locale has been set, then the default locale
is returned.
@return    the locale that is set for this window.
@see       java.util.Locale
@since     JDK1.1
"
      end

      operation 2815490 "getInputContext"
	public return_type class_ref 346114 // InputContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the input context for this window. A window always has an input context,
which is shared by subcomponents unless they create and set their own.
@see Component#getInputContext
@since 1.2
"
      end

      operation 2815618 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" type class_ref 340866 // Cursor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the cursor image to a specified cursor.
<p>
The method may have no visual effect if the Java platform
implementation and/or the native system do not support
changing the mouse cursor shape.
@param     cursor One of the constants defined
           by the {@code Cursor} class. If this parameter is null
           then the cursor for this window will be set to the type
           Cursor.DEFAULT_CURSOR.
@see       Component#getCursor
@see       Cursor
@since     JDK1.1
"
      end

      operation 2815746 "getOwner"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the owner of this window.
@since 1.2
"
      end

      operation 2815874 "getOwner_NoClientCode"
	package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816002 "getOwnedWindows"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array containing all the windows this
window currently owns.
@since 1.2
"
      end

      operation 2816130 "getOwnedWindows_NoClientCode"
	package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816258 "isModalBlocked"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816386 "setModalBlocked"
	package explicit_return_type "void"
	nparams 3
	  param inout name "blocker" type class_ref 469122 // Dialog
	  param inout name "blocked" explicit_type "boolean"
	  param inout name "peerCall" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816514 "getModalBlocker"
	package return_type class_ref 469122 // Dialog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816642 "getAllWindows"
	class_operation package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}IdentityArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all displayable Windows, i. e. all the
Windows which peer is not null.

@see #addNotify
@see #removeNotify
"
      end

      operation 2816770 "getAllUnblockedWindows"
	class_operation package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}IdentityArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2816898 "getWindows"
	class_operation private return_type class_ref 347394 // Window
	nparams 1
	  param inout name "appContext" explicit_type "AppContext"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2817026 "getWindows"
	class_operation public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all {@code Window}s, both owned and ownerless,
created by this application.
If called from an applet, the array includes only the {@code Window}s
accessible by that applet.
<p>
<b>Warning:</b> this method may return system created windows, such
as a print dialog. Applications should not assume the existence of
these dialogs, nor should an application assume anything about these
dialogs such as component positions, {@code LayoutManager}s
or serialization.

@see Frame#getFrames
@see Window#getOwnerlessWindows

@since 1.6
"
      end

      operation 2817154 "getOwnerlessWindows"
	class_operation public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all {@code Window}s created by this application
that have no owner. They include {@code Frame}s and ownerless
{@code Dialog}s and {@code Window}s.
If called from an applet, the array includes only the {@code Window}s
accessible by that applet.
<p>
<b>Warning:</b> this method may return system created windows, such
as a print dialog. Applications should not assume the existence of
these dialogs, nor should an application assume anything about these
dialogs such as component positions, {@code LayoutManager}s
or serialization.

@see Frame#getFrames
@see Window#getWindows()

@since 1.6
"
      end

      operation 2817282 "getDocumentRoot"
	package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2817410 "setModalExclusionType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exclusionType" type class_ref 469250 // ModalExclusionType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the modal exclusion type for this window. If a window is modal
excluded, it is not blocked by some modal dialogs. See {@link
java.awt.Dialog.ModalExclusionType Dialog.ModalExclusionType} for
possible modal exclusion types.
<p>
If the given type is not supported, {@code NO_EXCLUDE} is used.
<p>
Note: changing the modal exclusion type for a visible window may have no
effect until it is hidden and then shown again.

@param exclusionType the modal exclusion type for this window; a {@code null}
    value is equivalent to {@link Dialog.ModalExclusionType#NO_EXCLUDE
    NO_EXCLUDE}
@throws SecurityException if the calling thread does not have permission
    to set the modal exclusion property to the window with the given
    {@code exclusionType}
@see java.awt.Dialog.ModalExclusionType
@see java.awt.Window#getModalExclusionType
@see java.awt.Toolkit#isModalExclusionTypeSupported

@since 1.6
"
      end

      operation 2817538 "getModalExclusionType"
	public return_type class_ref 469250 // ModalExclusionType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modal exclusion type of this window.

@return the modal exclusion type of this window

@see java.awt.Dialog.ModalExclusionType
@see java.awt.Window#setModalExclusionType

@since 1.6
"
      end

      operation 2817666 "isModalExcluded"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "exclusionType" type class_ref 469250 // ModalExclusionType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2817794 "updateChildrenBlocking"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2817922 "addWindowListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 433794 // WindowListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified window listener to receive window events from
this window.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window listener
@see #removeWindowListener
@see #getWindowListeners
"
      end

      operation 2818050 "addWindowStateListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 469378 // WindowStateListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified window state listener to receive window
events from this window.  If {@code l} is {@code null},
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window state listener
@see #removeWindowStateListener
@see #getWindowStateListeners
@since 1.4
"
      end

      operation 2818178 "addWindowFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 422914 // WindowFocusListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified window focus listener to receive window events
from this window.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window focus listener
@see #removeWindowFocusListener
@see #getWindowFocusListeners
@since 1.4
"
      end

      operation 2818306 "removeWindowListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 433794 // WindowListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified window listener so that it no longer
receives window events from this window.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window listener
@see #addWindowListener
@see #getWindowListeners
"
      end

      operation 2818434 "removeWindowStateListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 469378 // WindowStateListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified window state listener so that it no
longer receives window events from this window.  If
{@code l} is {@code null}, no exception is thrown and
no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window state listener
@see #addWindowStateListener
@see #getWindowStateListeners
@since 1.4
"
      end

      operation 2818562 "removeWindowFocusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 422914 // WindowFocusListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified window focus listener so that it no longer
receives window events from this window.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param   l the window focus listener
@see #addWindowFocusListener
@see #getWindowFocusListeners
@since 1.4
"
      end

      operation 2818690 "getWindowListeners"
	public return_type class_ref 433794 // WindowListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the window listeners
registered on this window.

@return all of this window's {@code WindowListener}s
        or an empty array if no window
        listeners are currently registered

@see #addWindowListener
@see #removeWindowListener
@since 1.4
"
      end

      operation 2818818 "getWindowFocusListeners"
	public return_type class_ref 422914 // WindowFocusListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the window focus listeners
registered on this window.

@return all of this window's {@code WindowFocusListener}s
        or an empty array if no window focus
        listeners are currently registered

@see #addWindowFocusListener
@see #removeWindowFocusListener
@since 1.4
"
      end

      operation 2818946 "getWindowStateListeners"
	public return_type class_ref 469378 // WindowStateListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the window state listeners
registered on this window.

@return all of this window's {@code WindowStateListener}s
        or an empty array if no window state
        listeners are currently registered

@see #addWindowStateListener
@see #removeWindowStateListener
@since 1.4
"
      end

      operation 2819074 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this {@code Window}.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>

You can specify the {@code listenerType} argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
{@code Window} {@code w}
for its window listeners with the following code:

<pre>WindowListener[] wls = (WindowListener[])(w.getListeners(WindowListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         {@code java.util.EventListener}
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this window,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if {@code listenerType}
         doesn't specify a class or interface that implements
         {@code java.util.EventListener}
@exception NullPointerException if {@code listenerType} is {@code null}

@see #getWindowListeners
@since 1.3
"
      end

      operation 2819202 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is handled at lower level"
      end

      operation 2819330 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this window. If the event is an
{@code WindowEvent}, it invokes the
{@code processWindowEvent} method, else it invokes its
superclass's {@code processEvent}.
<p>Note that if the event parameter is {@code null}
the behavior is unspecified and may result in an
exception.

@param e the event
"
      end

      operation 2819458 "processWindowEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes window events occurring on this window by
dispatching them to any registered WindowListener objects.
NOTE: This method will not be called unless window events
are enabled for this component; this happens when one of the
following occurs:
<ul>
<li>A WindowListener object is registered via
    {@code addWindowListener}
<li>Window events are enabled via {@code enableEvents}
</ul>
<p>Note that if the event parameter is {@code null}
the behavior is unspecified and may result in an
exception.

@param e the window event
@see Component#enableEvents
"
      end

      operation 2819586 "processWindowFocusEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes window focus event occurring on this window by
dispatching them to any registered WindowFocusListener objects.
NOTE: this method will not be called unless window focus events
are enabled for this window. This happens when one of the
following occurs:
<ul>
<li>a WindowFocusListener is registered via
    {@code addWindowFocusListener}
<li>Window focus events are enabled via {@code enableEvents}
</ul>
<p>Note that if the event parameter is {@code null}
the behavior is unspecified and may result in an
exception.

@param e the window focus event
@see Component#enableEvents
@since 1.4
"
      end

      operation 2819714 "processWindowStateEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes window state event occurring on this window by
dispatching them to any registered {@code WindowStateListener}
objects.
NOTE: this method will not be called unless window state events
are enabled for this window.  This happens when one of the
following occurs:
<ul>
<li>a {@code WindowStateListener} is registered via
   {@code addWindowStateListener}
<li>window state events are enabled via {@code enableEvents}
</ul>
<p>Note that if the event parameter is {@code null}
the behavior is unspecified and may result in an
exception.

@param e the window state event
@see java.awt.Component#enableEvents
@since 1.4
"
      end

      operation 2819842 "preProcessKeyEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements a debugging hook -- checks to see if
the user has typed <i>control-shift-F1</i>.  If so,
the list of child windows is dumped to {@code System.out}.
@param e  the keyboard event
"
      end

      operation 2819970 "postProcessKeyEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2820098 "setAlwaysOnTop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "alwaysOnTop" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this window should always be above other windows.  If
there are multiple always-on-top windows, their relative order is
unspecified and platform dependent.
<p>
If some other window is already always-on-top then the
relative order between these windows is unspecified (depends on
platform).  No window can be brought to be over the always-on-top
window except maybe another always-on-top window.
<p>
All windows owned by an always-on-top window inherit this state and
automatically become always-on-top.  If a window ceases to be
always-on-top, the windows that it owns will no longer be
always-on-top.  When an always-on-top window is sent {@link #toBack
toBack}, its always-on-top state is set to {@code false}.

<p> When this method is called on a window with a value of
{@code true}, and the window is visible and the platform
supports always-on-top for this window, the window is immediately
brought forward, \"sticking\" it in the top-most position. If the
window isn`t currently visible, this method sets the always-on-top
state to {@code true} but does not bring the window forward.
When the window is later shown, it will be always-on-top.

<p> When this method is called on a window with a value of
{@code false} the always-on-top state is set to normal. It may also
cause an unspecified, platform-dependent change in the z-order of
top-level windows, but other always-on-top windows will remain in
top-most position. Calling this method with a value of {@code false}
on a window that has a normal state has no effect.

<p><b>Note</b>: some platforms might not support always-on-top
windows.  To detect if always-on-top windows are supported by the
current platform, use {@link Toolkit#isAlwaysOnTopSupported()} and
{@link Window#isAlwaysOnTopSupported()}.  If always-on-top mode
isn't supported for this window or this window's toolkit does not
support always-on-top windows, calling this method has no effect.
<p>
If a SecurityManager is installed, the calling thread must be
granted the AWTPermission \"setWindowAlwaysOnTop\" in
order to set the value of this property. If this
permission is not granted, this method will throw a
SecurityException, and the current value of the property will
be left unchanged.

@param alwaysOnTop true if the window should always be above other
       windows
@throws SecurityException if the calling thread does not have
        permission to set the value of always-on-top property

@see #isAlwaysOnTop
@see #toFront
@see #toBack
@see AWTPermission
@see #isAlwaysOnTopSupported
@see #getToolkit
@see Toolkit#isAlwaysOnTopSupported
@since 1.5
"
      end

      operation 2820226 "setOwnedWindowsAlwaysOnTop"
	private explicit_return_type "void"
	nparams 1
	  param inout name "alwaysOnTop" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"rawtypes\", \"unchecked\"})
"
	
	
	
      end

      operation 2820354 "isAlwaysOnTopSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the always-on-top mode is supported for this
window. Some platforms may not support always-on-top windows, some
may support only some kinds of top-level windows; for example,
a platform may not support always-on-top modal dialogs.

@return {@code true}, if the always-on-top mode is supported for
        this window and this window's toolkit supports always-on-top windows,
        {@code false} otherwise

@see #setAlwaysOnTop(boolean)
@see #getToolkit
@see Toolkit#isAlwaysOnTopSupported
@since 1.6
"
      end

      operation 2820482 "isAlwaysOnTop"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this window is an always-on-top window.
@return {@code true}, if the window is in always-on-top state,
        {@code false} otherwise
@see #setAlwaysOnTop
@since 1.5
"
      end

      operation 2820610 "getFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the child Component of this Window that has focus if this Window
is focused; returns null otherwise.

@return the child Component with focus, or null if this Window is not
        focused
@see #getMostRecentFocusOwner
@see #isFocused
"
      end

      operation 2820738 "getMostRecentFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the child Component of this Window that will receive the focus
when this Window is focused. If this Window is currently focused, this
method returns the same Component as {@code getFocusOwner()}. If
this Window is not focused, then the child Component that most recently
requested focus will be returned. If no child Component has ever
requested focus, and this is a focusable Window, then this Window's
initial focusable Component is returned. If no child Component has ever
requested focus, and this is a non-focusable Window, null is returned.

@return the child Component that will receive focus when this Window is
        focused
@see #getFocusOwner
@see #isFocused
@see #isFocusableWindow
@since 1.4
"
      end

      operation 2820866 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Window is active. Only a Frame or a Dialog may be
active. The native windowing system may denote the active Window or its
children with special decorations, such as a highlighted title bar. The
active Window is always either the focused Window, or the first Frame or
Dialog that is an owner of the focused Window.

@return whether this is the active Window.
@see #isFocused
@since 1.4
"
      end

      operation 2820994 "isFocused"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Window is focused. If there exists a focus owner,
the focused Window is the Window that is, or contains, that focus owner.
If there is no focus owner, then no Window is focused.
<p>
If the focused Window is a Frame or a Dialog it is also the active
Window. Otherwise, the active Window is the first Frame or Dialog that
is an owner of the focused Window.

@return whether this is the focused Window.
@see #isActive
@since 1.4
"
      end

      operation 2821122 "getFocusTraversalKeys"
	public return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Gets a focus traversal key for this Window. (See {@code
setFocusTraversalKeys} for a full description of each key.)
<p>
If the traversal key has not been explicitly set for this Window,
then this Window's parent's traversal key is returned. If the
traversal key has not been explicitly set for any of this Window's
ancestors, then the current KeyboardFocusManager's default traversal key
is returned.

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
        KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@return the AWTKeyStroke for the specified key
@see Container#setFocusTraversalKeys
@see KeyboardFocusManager#FORWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#BACKWARD_TRAVERSAL_KEYS
@see KeyboardFocusManager#UP_CYCLE_TRAVERSAL_KEYS
@see KeyboardFocusManager#DOWN_CYCLE_TRAVERSAL_KEYS
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
        KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@since 1.4
"
      end

      operation 2821250 "setFocusCycleRoot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusCycleRoot" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing because Windows must always be roots of a focus traversal
cycle. The passed-in value is ignored.

@param focusCycleRoot this value is ignored
@see #isFocusCycleRoot
@see Container#setFocusTraversalPolicy
@see Container#getFocusTraversalPolicy
@since 1.4
"
      end

      operation 2821378 "isFocusCycleRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns {@code true} because all Windows must be roots of a
focus traversal cycle.

@return {@code true}
@see #setFocusCycleRoot
@see Container#setFocusTraversalPolicy
@see Container#getFocusTraversalPolicy
@since 1.4
"
      end

      operation 2821506 "getFocusCycleRootAncestor"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns {@code null} because Windows have no ancestors; they
represent the top of the Component hierarchy.

@return {@code null}
@see Container#isFocusCycleRoot()
@since 1.4
"
      end

      operation 2821634 "isFocusableWindow"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Window can become the focused Window, that is,
whether this Window or any of its subcomponents can become the focus
owner. For a Frame or Dialog to be focusable, its focusable Window state
must be set to {@code true}. For a Window which is not a Frame or
Dialog to be focusable, its focusable Window state must be set to
{@code true}, its nearest owning Frame or Dialog must be
showing on the screen, and it must contain at least one Component in
its focus traversal cycle. If any of these conditions is not met, then
neither this Window nor any of its subcomponents can become the focus
owner.

@return {@code true} if this Window can be the focused Window;
        {@code false} otherwise
@see #getFocusableWindowState
@see #setFocusableWindowState
@see #isShowing
@see Component#isFocusable
@since 1.4
"
      end

      operation 2821762 "getFocusableWindowState"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Window can become the focused Window if it meets
the other requirements outlined in {@code isFocusableWindow}. If
this method returns {@code false}, then
{@code isFocusableWindow} will return {@code false} as well.
If this method returns {@code true}, then
{@code isFocusableWindow} may return {@code true} or
{@code false} depending upon the other requirements which must be
met in order for a Window to be focusable.
<p>
By default, all Windows have a focusable Window state of
{@code true}.

@return whether this Window can be the focused Window
@see #isFocusableWindow
@see #setFocusableWindowState
@see #isShowing
@see Component#setFocusable
@since 1.4
"
      end

      operation 2821890 "setFocusableWindowState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "focusableWindowState" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this Window can become the focused Window if it meets
the other requirements outlined in {@code isFocusableWindow}. If
this Window's focusable Window state is set to {@code false}, then
{@code isFocusableWindow} will return {@code false}. If this
Window's focusable Window state is set to {@code true}, then
{@code isFocusableWindow} may return {@code true} or
{@code false} depending upon the other requirements which must be
met in order for a Window to be focusable.
<p>
Setting a Window's focusability state to {@code false} is the
standard mechanism for an application to identify to the AWT a Window
which will be used as a floating palette or toolbar, and thus should be
a non-focusable Window.

Setting the focusability state on a visible {@code Window}
can have a delayed effect on some platforms &#151; the actual
change may happen only when the {@code Window} becomes
hidden and then visible again.  To ensure consistent behavior
across platforms, set the {@code Window}'s focusable state
when the {@code Window} is invisible and then show it.

@param focusableWindowState whether this Window can be the focused
       Window
@see #isFocusableWindow
@see #getFocusableWindowState
@see #isShowing
@see Component#setFocusable
@since 1.4
"
      end

      operation 2822018 "setAutoRequestFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autoRequestFocus" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this window should receive focus on
subsequently being shown (with a call to {@link #setVisible setVisible(true)}),
or being moved to the front (with a call to {@link #toFront}).
<p>
Note that {@link #setVisible setVisible(true)} may be called indirectly
(e.g. when showing an owner of the window makes the window to be shown).
{@link #toFront} may also be called indirectly (e.g. when
{@link #setVisible setVisible(true)} is called on already visible window).
In all such cases this property takes effect as well.
<p>
The value of the property is not inherited by owned windows.

@param autoRequestFocus whether this window should be focused on
       subsequently being shown or being moved to the front
@see #isAutoRequestFocus
@see #isFocusableWindow
@see #setVisible
@see #toFront
@since 1.7
"
      end

      operation 2822146 "isAutoRequestFocus"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this window should receive focus on subsequently being shown
(with a call to {@link #setVisible setVisible(true)}), or being moved to the front
(with a call to {@link #toFront}).
<p>
By default, the window has {@code autoRequestFocus} value of {@code true}.

@return {@code autoRequestFocus} value
@see #setAutoRequestFocus
@since 1.7
"
      end

      operation 2822274 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list. The listener is
registered for all bound properties of this class, including the
following:
<ul>
   <li>this Window's font (\"font\")</li>
   <li>this Window's background color (\"background\")</li>
   <li>this Window's foreground color (\"foreground\")</li>
   <li>this Window's focusability (\"focusable\")</li>
   <li>this Window's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Window's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Window's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Window's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
   <li>this Window's Set of DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleFocusTraversalKeys\")</li>
   <li>this Window's focus traversal policy (\"focusTraversalPolicy\")
       </li>
   <li>this Window's focusable Window state (\"focusableWindowState\")
       </li>
   <li>this Window's always-on-top state(\"alwaysOnTop\")</li>
</ul>
Note that if this Window is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param    listener  the PropertyChangeListener to be added

@see Component#removePropertyChangeListener
@see #addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
"
      end

      operation 2822402 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list for a specific
property. The specified property may be user-defined, or one of the
following:
<ul>
   <li>this Window's font (\"font\")</li>
   <li>this Window's background color (\"background\")</li>
   <li>this Window's foreground color (\"foreground\")</li>
   <li>this Window's focusability (\"focusable\")</li>
   <li>this Window's focus traversal keys enabled state
       (\"focusTraversalKeysEnabled\")</li>
   <li>this Window's Set of FORWARD_TRAVERSAL_KEYS
       (\"forwardFocusTraversalKeys\")</li>
   <li>this Window's Set of BACKWARD_TRAVERSAL_KEYS
       (\"backwardFocusTraversalKeys\")</li>
   <li>this Window's Set of UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleFocusTraversalKeys\")</li>
   <li>this Window's Set of DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleFocusTraversalKeys\")</li>
   <li>this Window's focus traversal policy (\"focusTraversalPolicy\")
       </li>
   <li>this Window's focusable Window state (\"focusableWindowState\")
       </li>
   <li>this Window's always-on-top state(\"alwaysOnTop\")</li>
</ul>
Note that if this Window is inheriting a bound property, then no
event will be fired in response to a change in the inherited property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param propertyName one of the property names listed above
@param listener the PropertyChangeListener to be added

@see #addPropertyChangeListener(java.beans.PropertyChangeListener)
@see Component#removePropertyChangeListener
"
      end

      operation 2822530 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates if this container is a validate root.
<p>
{@code Window} objects are the validate roots, and, therefore, they
override this method to return {@code true}.

@return {@code true}
@since 1.7
@see java.awt.Container#isValidateRoot
"
      end

      operation 2822658 "dispatchEventImpl"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event to this window or one of its sub components.
@param e the event
"
      end

      operation 2822786 "postEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 340610 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1
replaced by {@code dispatchEvent(AWTEvent)}.
"
      end

      operation 2822914 "isShowing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this Window is showing on screen.
@see Component#setVisible
"
      end

      operation 2823042 "isDisposing"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2823170 "applyResourceBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rb" type class_ref 249858 // ResourceBundle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of J2SE 1.4, replaced by
{@link Component#applyComponentOrientation Component.applyComponentOrientation}.
"
      end

      operation 2823298 "applyResourceBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rbName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of J2SE 1.4, replaced by
{@link Component#applyComponentOrientation Component.applyComponentOrientation}.
"
      end

      operation 2823426 "addOwnedWindow"
	package explicit_return_type "void"
	nparams 1
	  param inout name "weakWindow" type class_ref 131330 // WeakReference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Window> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Support for tracking all windows owned by this window
"
      end

      operation 2823554 "removeOwnedWindow"
	package explicit_return_type "void"
	nparams 1
	  param inout name "weakWindow" type class_ref 131330 // WeakReference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Window> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2823682 "connectOwnedWindow"
	package explicit_return_type "void"
	nparams 1
	  param inout name "child" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2823810 "addToWindowList"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2823938 "removeFromWindowList"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "context" explicit_type "AppContext"
	  param inout name "weakThis" type class_ref 131330 // WeakReference
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Window> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2824066 "removeFromWindowList"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 928386 // type (<unidirectional association>)
	relation 928386 --->
	  a role_name "type" init_value " Type.NORMAL" private
	    comment "
Window type.

Synchronization: ObjectLock

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928386 // type (<unidirectional association>)
	  b parent class_ref 468866 // Type
      end

      operation 2824194 "setType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 468866 // Type
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type of the window.

This method can only be called while the window is not displayable.

@throws IllegalComponentStateException if the window
        is displayable.
@throws IllegalArgumentException if the type is {@code null}
@see    Component#isDisplayable
@see    #getType
@since 1.7
"
      end

      operation 2824322 "getType"
	public return_type class_ref 468866 // Type
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the window.

@see   #setType
@since 1.7
"
      end

      attribute 612098 "windowSerializedDataVersion"
	private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The window serialized data version.

@serial

"
      end

      operation 2824450 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable {@code WindowListener}s and
{@code WindowFocusListener}s as optional data.
Writes a list of child windows as optional data.
Writes a list of icon images as optional data

@param s the {@code ObjectOutputStream} to write
@serialData {@code null} terminated sequence of
   0 or more pairs; the pair consists of a {@code String}
   and {@code Object}; the {@code String}
   indicates the type of object and is one of the following:
   {@code windowListenerK} indicating a
     {@code WindowListener} object;
   {@code windowFocusWindowK} indicating a
     {@code WindowFocusListener} object;
   {@code ownedWindowK} indicating a child
     {@code Window} object

@see AWTEventMulticaster#save(java.io.ObjectOutputStream, java.lang.String, java.util.EventListener)
@see Component#windowListenerK
@see Component#windowFocusListenerK
@see Component#ownedWindowK
@see #readObject(ObjectInputStream)
"
      end

      operation 2824578 "initDeserializedWindow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Part of deserialization procedure to be called before
 user's code.
"
      end

      operation 2824706 "deserializeResources"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2824834 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the {@code ObjectInputStream} and an optional
list of listeners to receive various events fired by
the component; also reads a list of
(possibly {@code null}) child windows.
Unrecognized keys or values will be ignored.

@param s the {@code ObjectInputStream} to read
@exception HeadlessException if
  {@code GraphicsEnvironment.isHeadless} returns
  {@code true}
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject
"
      end

      operation 2824962 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---



Gets the AccessibleContext associated with this Window.
For windows, the AccessibleContext takes the form of an
AccessibleAWTWindow.
A new AccessibleAWTWindow instance is created if necessary.

@return an AccessibleAWTWindow that serves as the
        AccessibleContext of this Window
@since 1.3
"
      end

      class 469634 "AccessibleAWTWindow"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 928514 // <generalisation>
	  relation 928514 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 928514 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	attribute 612226 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4215068635060671780L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 2825090 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see javax.accessibility.AccessibleRole
"
	end

	operation 2825218 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see javax.accessibility.AccessibleState
"
	end
      end

      operation 2825346 "setGraphicsConfiguration"
	package explicit_return_type "void"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " inner class AccessibleAWTWindow"
      end

      operation 2825474 "setLocationRelativeTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the location of the window relative to the specified
component according to the following scenarios.
<p>
The target screen mentioned below is a screen to which
the window should be placed after the setLocationRelativeTo
method is called.
<ul>
<li>If the component is {@code null}, or the {@code
GraphicsConfiguration} associated with this component is
{@code null}, the window is placed in the center of the
screen. The center point can be obtained with the {@link
GraphicsEnvironment#getCenterPoint
GraphicsEnvironment.getCenterPoint} method.
<li>If the component is not {@code null}, but it is not
currently showing, the window is placed in the center of
the target screen defined by the {@code
GraphicsConfiguration} associated with this component.
<li>If the component is not {@code null} and is shown on
the screen, then the window is located in such a way that
the center of the window coincides with the center of the
component.
</ul>
<p>
If the screens configuration does not allow the window to
be moved from one screen to another, then the window is
only placed at the location determined according to the
above conditions and its {@code GraphicsConfiguration} is
not changed.
<p>
<b>Note</b>: If the lower edge of the window is out of the screen,
then the window is placed to the side of the {@code Component}
that is closest to the center of the screen. So if the
component is on the right part of the screen, the window
is placed to its left, and vice versa.
<p>
If after the window location has been calculated, the upper,
left, or right edge of the window is out of the screen,
then the window is located in such a way that the upper,
left, or right edge of the window coincides with the
corresponding edge of the screen. If both left and right
edges of the window are out of the screen, the window is
placed at the left side of the screen. The similar placement
will occur if both top and bottom edges are out of the screen.
In that case, the window is placed at the top side of the screen.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.

@param c  the component in relation to which the window's location
          is determined
@see java.awt.GraphicsEnvironment#getCenterPoint
@since 1.4
"
      end

      operation 2825602 "deliverMouseWheelToAncestor"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden from Component.  Top-level Windows should not propagate a
MouseWheelEvent beyond themselves into their owning Windows.
"
      end

      operation 2825730 "dispatchMouseWheelToAncestor"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden from Component.  Top-level Windows don't dispatch to ancestors
"
      end

      operation 2825858 "createBufferStrategy"
	public explicit_return_type "void"
	nparams 1
	  param in name "numBuffers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component.
Multi-buffering is useful for rendering performance.  This method
attempts to create the best strategy available with the number of
buffers supplied.  It will always create a {@code BufferStrategy}
with that number of buffers.
A page-flipping strategy is attempted first, then a blitting strategy
using accelerated buffers.  Finally, an unaccelerated blitting
strategy is used.
<p>
Each time this method is called,
the existing buffer strategy for this component is discarded.
@param numBuffers number of buffers to create
@exception IllegalArgumentException if numBuffers is less than 1.
@exception IllegalStateException if the component is not displayable
@see #isDisplayable
@see #getBufferStrategy
@since 1.4
"
      end

      operation 2825986 "createBufferStrategy"
	public explicit_return_type "void"
	nparams 2
	  param in name "numBuffers" explicit_type "int"
	  param inout name "caps" type class_ref 344578 // BufferCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component with the
required buffer capabilities.  This is useful, for example, if only
accelerated memory or page flipping is desired (as specified by the
buffer capabilities).
<p>
Each time this method
is called, the existing buffer strategy for this component is discarded.
@param numBuffers number of buffers to create, including the front buffer
@param caps the required capabilities for creating the buffer strategy;
cannot be {@code null}
@exception AWTException if the capabilities supplied could not be
supported or met; this may happen, for example, if there is not enough
accelerated memory currently available, or if page flipping is specified
but not possible.
@exception IllegalArgumentException if numBuffers is less than 1, or if
caps is {@code null}
@see #getBufferStrategy
@since 1.4
"
      end

      operation 2826114 "getBufferStrategy"
	public return_type class_ref 341122 // BufferStrategy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code BufferStrategy} used by this component.  This
method will return null if a {@code BufferStrategy} has not yet
been created or has been disposed.

@return the buffer strategy used by this component
@see #createBufferStrategy
@since 1.4
"
      end

      operation 2826242 "getTemporaryLostComponent"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2826370 "setTemporaryLostComponent"
	package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2826498 "canContainFocusOwner"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "focusOwnerCandidate" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this window can contain focus owner.
Verifies that it is focusable and as container it can container focus owner.
@since 1.5
"
      end

      attribute 612354 "locationByPlatform"
	volatile private explicit_type "boolean"
	init_value " locationByPlatformProp"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 2826626 "setLocationByPlatform"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locationByPlatform" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this Window should appear at the default location for the
native windowing system or at the current location (returned by
{@code getLocation}) the next time the Window is made visible.
This behavior resembles a native window shown without programmatically
setting its location.  Most windowing systems cascade windows if their
locations are not explicitly set. The actual location is determined once the
window is shown on the screen.
<p>
This behavior can also be enabled by setting the System Property
\"java.awt.Window.locationByPlatform\" to \"true\", though calls to this method
take precedence.
<p>
Calls to {@code setVisible}, {@code setLocation} and
{@code setBounds} after calling {@code setLocationByPlatform} clear
this property of the Window.
<p>
For example, after the following code is executed:
<pre>
setLocationByPlatform(true);
setVisible(true);
boolean flag = isLocationByPlatform();
</pre>
The window will be shown at platform's default location and
{@code flag} will be {@code false}.
<p>
In the following sample:
<pre>
setLocationByPlatform(true);
setLocation(10, 10);
boolean flag = isLocationByPlatform();
setVisible(true);
</pre>
The window will be shown at (10, 10) and {@code flag} will be
{@code false}.

@param locationByPlatform {@code true} if this Window should appear
       at the default location, {@code false} if at the current location
@throws IllegalComponentStateException if the window
        is showing on screen and locationByPlatform is {@code true}.
@see #setLocation
@see #isShowing
@see #setVisible
@see #isLocationByPlatform
@see java.lang.System#getProperty(String)
@since 1.5
"
      end

      operation 2826754 "isLocationByPlatform"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this Window will appear at the default location
for the native windowing system the next time this Window is made visible.
This method always returns {@code false} if the Window is showing on the
screen.

@return whether this Window will appear at the default location
@see #setLocationByPlatform
@see #isShowing
@since 1.5
"
      end

      operation 2826882 "setBounds"
	public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
The {@code width} or {@code height} values
are automatically enlarged if either is less than
the minimum size as specified by previous call to
{@code setMinimumSize}.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.

@see #getBounds
@see #setLocation(int, int)
@see #setLocation(Point)
@see #setSize(int, int)
@see #setSize(Dimension)
@see #setMinimumSize
@see #setLocationByPlatform
@see #isLocationByPlatform
@since 1.6
"
      end

      operation 2827010 "setBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
The {@code r.width} or {@code r.height} values
will be automatically enlarged if either is less than
the minimum size as specified by previous call to
{@code setMinimumSize}.
<p>
The method changes the geometry-related data. Therefore,
the native windowing system may ignore such requests, or it may modify
the requested data, so that the {@code Window} object is placed and sized
in a way that corresponds closely to the desktop settings.

@see #getBounds
@see #setLocation(int, int)
@see #setLocation(Point)
@see #setSize(int, int)
@see #setSize(Dimension)
@see #setMinimumSize
@see #setLocationByPlatform
@see #isLocationByPlatform
@since 1.6
"
      end

      operation 2827138 "isRecursivelyVisible"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this component will be displayed on the screen.
@return {@code true} if the component and all of its ancestors
         until a toplevel window are visible, {@code false} otherwise
"
      end

      operation 2827266 "getOpacity"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ******************** SHAPES & TRANSPARENCY CODE ********************

Returns the opacity of the window.

@return the opacity of the window

@see Window#setOpacity(float)
@see GraphicsDevice.WindowTranslucency

@since 1.7
"
      end

      operation 2827394 "setOpacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "opacity" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the opacity of the window.
<p>
The opacity value is in the range [0..1]. Note that setting the opacity
level of 0 may or may not disable the mouse event handling on this
window. This is a platform-dependent behavior.
<p>
The following conditions must be met in order to set the opacity value
less than {@code 1.0f}:
<ul>
<li>The {@link GraphicsDevice.WindowTranslucency#TRANSLUCENT TRANSLUCENT}
translucency must be supported by the underlying system
<li>The window must be undecorated (see {@link Frame#setUndecorated}
and {@link Dialog#setUndecorated})
<li>The window must not be in full-screen mode (see {@link
GraphicsDevice#setFullScreenWindow(Window)})
</ul>
<p>
If the requested opacity value is less than {@code 1.0f}, and any of the
above conditions are not met, the window opacity will not change,
and the {@code IllegalComponentStateException} will be thrown.
<p>
The translucency levels of individual pixels may also be effected by the
alpha component of their color (see {@link Window#setBackground(Color)}) and the
current shape of this window (see {@link #setShape(Shape)}).

@param opacity the opacity level to set to the window

@throws IllegalArgumentException if the opacity is out of the range
    [0..1]
@throws IllegalComponentStateException if the window is decorated and
    the opacity is less than {@code 1.0f}
@throws IllegalComponentStateException if the window is in full screen
    mode, and the opacity is less than {@code 1.0f}
@throws UnsupportedOperationException if the {@code
    GraphicsDevice.WindowTranslucency#TRANSLUCENT TRANSLUCENT}
    translucency is not supported and the opacity is less than
    {@code 1.0f}

@see Window#getOpacity
@see Window#setBackground(Color)
@see Window#setShape(Shape)
@see Frame#isUndecorated
@see Dialog#isUndecorated
@see GraphicsDevice.WindowTranslucency
@see GraphicsDevice#isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency)

@since 1.7
"
      end

      operation 2827522 "getShape"
	public return_type class_ref 379394 // Shape
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the shape of the window.

The value returned by this method may not be the same as
previously set with {@code setShape(shape)}, but it is guaranteed
to represent the same shape.

@return the shape of the window or {@code null} if no
    shape is specified for the window

@see Window#setShape(Shape)
@see GraphicsDevice.WindowTranslucency

@since 1.7
"
      end

      operation 2827650 "setShape"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shape" type class_ref 379394 // Shape
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the shape of the window.
<p>
Setting a shape cuts off some parts of the window. Only the parts that
belong to the given {@link Shape} remain visible and clickable. If
the shape argument is {@code null}, this method restores the default
shape, making the window rectangular on most platforms.
<p>
The following conditions must be met to set a non-null shape:
<ul>
<li>The {@link GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSPARENT
PERPIXEL_TRANSPARENT} translucency must be supported by the
underlying system
<li>The window must be undecorated (see {@link Frame#setUndecorated}
and {@link Dialog#setUndecorated})
<li>The window must not be in full-screen mode (see {@link
GraphicsDevice#setFullScreenWindow(Window)})
</ul>
<p>
If the requested shape is not {@code null}, and any of the above
conditions are not met, the shape of this window will not change,
and either the {@code UnsupportedOperationException} or {@code
IllegalComponentStateException} will be thrown.
<p>
The translucency levels of individual pixels may also be effected by the
alpha component of their color (see {@link Window#setBackground(Color)}) and the
opacity value (see {@link #setOpacity(float)}). See {@link
GraphicsDevice.WindowTranslucency} for more details.

@param shape the shape to set to the window

@throws IllegalComponentStateException if the shape is not {@code
    null} and the window is decorated
@throws IllegalComponentStateException if the shape is not {@code
    null} and the window is in full-screen mode
@throws UnsupportedOperationException if the shape is not {@code
    null} and {@link GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSPARENT
    PERPIXEL_TRANSPARENT} translucency is not supported

@see Window#getShape()
@see Window#setBackground(Color)
@see Window#setOpacity(float)
@see Frame#isUndecorated
@see Dialog#isUndecorated
@see GraphicsDevice.WindowTranslucency
@see GraphicsDevice#isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency)

@since 1.7
"
      end

      operation 2827778 "getBackground"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the background color of this window.
<p>
Note that the alpha component of the returned color indicates whether
the window is in the non-opaque (per-pixel translucent) mode.

@return this component's background color

@see Window#setBackground(Color)
@see Window#isOpaque
@see GraphicsDevice.WindowTranslucency
"
      end

      operation 2827906 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bgColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sets the background color of this window.
<p>
If the windowing system supports the {@link
GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSLUCENT PERPIXEL_TRANSLUCENT}
translucency, the alpha component of the given background color
may effect the mode of operation for this window: it indicates whether
this window must be opaque (alpha equals {@code 1.0f}) or per-pixel translucent
(alpha is less than {@code 1.0f}). If the given background color is
{@code null}, the window is considered completely opaque.
<p>
All the following conditions must be met to enable the per-pixel
transparency mode for this window:
<ul>
<li>The {@link GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSLUCENT
PERPIXEL_TRANSLUCENT} translucency must be supported by the graphics
device where this window is located
<li>The window must be undecorated (see {@link Frame#setUndecorated}
and {@link Dialog#setUndecorated})
<li>The window must not be in full-screen mode (see {@link
GraphicsDevice#setFullScreenWindow(Window)})
</ul>
<p>
If the alpha component of the requested background color is less than
{@code 1.0f}, and any of the above conditions are not met, the background
color of this window will not change, the alpha component of the given
background color will not affect the mode of operation for this window,
and either the {@code UnsupportedOperationException} or {@code
IllegalComponentStateException} will be thrown.
<p>
When the window is per-pixel translucent, the drawing sub-system
respects the alpha value of each individual pixel. If a pixel gets
painted with the alpha color component equal to zero, it becomes
visually transparent. If the alpha of the pixel is equal to 1.0f, the
pixel is fully opaque. Interim values of the alpha color component make
the pixel semi-transparent. In this mode, the background of the window
gets painted with the alpha value of the given background color. If the
alpha value of the argument of this method is equal to {@code 0}, the
background is not painted at all.
<p>
The actual level of translucency of a given pixel also depends on window
opacity (see {@link #setOpacity(float)}), as well as the current shape of
this window (see {@link #setShape(Shape)}).
<p>
Note that painting a pixel with the alpha value of {@code 0} may or may
not disable the mouse event handling on this pixel. This is a
platform-dependent behavior. To make sure the mouse events do not get
dispatched to a particular pixel, the pixel must be excluded from the
shape of the window.
<p>
Enabling the per-pixel translucency mode may change the graphics
configuration of this window due to the native platform requirements.

@param bgColor the color to become this window's background color.

@throws IllegalComponentStateException if the alpha value of the given
    background color is less than {@code 1.0f} and the window is decorated
@throws IllegalComponentStateException if the alpha value of the given
    background color is less than {@code 1.0f} and the window is in
    full-screen mode
@throws UnsupportedOperationException if the alpha value of the given
    background color is less than {@code 1.0f} and {@link
    GraphicsDevice.WindowTranslucency#PERPIXEL_TRANSLUCENT
    PERPIXEL_TRANSLUCENT} translucency is not supported

@see Window#getBackground
@see Window#isOpaque
@see Window#setOpacity(float)
@see Window#setShape(Shape)
@see Frame#isUndecorated
@see Dialog#isUndecorated
@see GraphicsDevice.WindowTranslucency
@see GraphicsDevice#isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency)
@see GraphicsConfiguration#isTranslucencyCapable()
"
      end

      operation 2828034 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates if the window is currently opaque.
<p>
The method returns {@code false} if the background color of the window
is not {@code null} and the alpha component of the color is less than
{@code 1.0f}. The method returns {@code true} otherwise.

@return {@code true} if the window is opaque, {@code false} otherwise

@see Window#getBackground
@see Window#setBackground(Color)
@since 1.7
"
      end

      operation 2828162 "updateWindow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2828290 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

@since 1.7
"
      end

      operation 2828418 "setLayersOpaque"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "component" type class_ref 338818 // Component
	  param inout name "isOpaque" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2828546 "getContainer"
	package return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ************************** MIXING CODE *******************************
 A window has an owner, but it does NOT have a container"
      end

      operation 2828674 "applyCompoundShape"
	package explicit_return_type "void"
	nparams 1
	  param inout name "shape" explicit_type "Region"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Applies the shape to the component
@param shape Shape to be applied to the component
"
      end

      operation 2828802 "applyCurrentShape"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2828930 "mixOnReshaping"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2829058 "getLocationOnWindow"
	package return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2829186 "limit"
	class_operation private explicit_return_type "double"
	nparams 3
	  param in name "value" explicit_type "double"
	  param in name "min" explicit_type "double"
	  param in name "max" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ****************** END OF MIXING CODE ********************************

Limit the given double value with the given range.
"
      end

      operation 2829314 "calculateSecurityWarningPosition"
	private return_type class_ref 380802 // Point2D
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "w" explicit_type "double"
	  param in name "h" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculate the position of the security warning.

This method gets the window location/size as reported by the native
system since the locally cached values may represent outdated data.

The method is used from the native code, or via AWTAccessor.

NOTE: this method is invoked on the toolkit thread, and therefore is not
supposed to become public/user-overridable.
"
      end

      extra_member 138114 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setWindowAccessor(new AWTAccessor.WindowAccessor() {
            public float getOpacity(Window window) {
                return window.opacity;
            }
            public void setOpacity(Window window, float opacity) {
                window.setOpacity(opacity);
            }
            public Shape getShape(Window window) {
                return window.getShape();
            }
            public void setShape(Window window, Shape shape) {
                window.setShape(shape);
            }
            public void setOpaque(Window window, boolean opaque) {
                Color bg = window.getBackground();
                if (bg == null) {
                    bg = new Color(0, 0, 0, 0);
                }
                window.setBackground(new Color(bg.getRed(), bg.getGreen(), bg.getBlue(),
                                               opaque ? 255 : 0));
            }
            public void updateWindow(Window window) {
                window.updateWindow();
            }

            public Dimension getSecurityWarningSize(Window window) {
                return new Dimension(window.securityWarningWidth,
                        window.securityWarningHeight);
            }

            public void setSecurityWarningSize(Window window, int width, int height)
            {
                window.securityWarningWidth = width;
                window.securityWarningHeight = height;
            }

            public void setSecurityWarningPosition(Window window,
                    Point2D point, float alignmentX, float alignmentY)
            {
                window.securityWarningPointX = point.getX();
                window.securityWarningPointY = point.getY();
                window.securityWarningAlignmentX = alignmentX;
                window.securityWarningAlignmentY = alignmentY;

                synchronized (window.getTreeLock()) {
                    WindowPeer peer = (WindowPeer)window.getPeer();
                    if (peer != null) {
                        peer.repositionSecurityWarning();
                    }
                }
            }

            public Point2D calculateSecurityWarningPosition(Window window,
                    double x, double y, double w, double h)
            {
                return window.calculateSecurityWarningPosition(x, y, w, h);
            }

            public void setLWRequestStatus(Window changed, boolean status) {
                changed.syncLWRequests = status;
            }

            public boolean isAutoRequestFocus(Window w) {
                return w.autoRequestFocus;
            }

            public boolean isTrayIconWindow(Window w) {
                return w.isTrayIconWindow;
            }

            public void setTrayIconWindow(Window w, boolean isTrayIconWindow) {
                w.isTrayIconWindow = isTrayIconWindow;
            }

            public Window[] getOwnedWindows(Window w) {
                return w.getOwnedWindows_NoClientCode();
            }
        }); // WindowAccessor
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 2829442 "updateZOrder"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " static
 a window doesn't need to be updated in the Z-order."
      end
    end

    class 348290 "IllegalComponentStateException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an AWT component is not in an appropriate state for
the requested operation.

@author      Jonni Kanerva
"
      classrelation 2926082 // <generalisation>
	relation 2926082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2926082 // <generalisation>
	  b parent class_ref 254850 // IllegalStateException
      end

      attribute 1390338 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1889339587208144238L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6246786 "IllegalComponentStateException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IllegalComponentStateException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 6246914 "IllegalComponentStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IllegalComponentStateException with the specified detail
message.  A detail message is a String that describes this particular
exception.
@param s the String that contains a detailed message
"
      end
    end

    class 349698 "LayoutManager"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the interface for classes that know how to lay out
<code>Container</code>s.
<p>
Swing's painting architecture assumes the children of a
<code>JComponent</code> do not overlap.  If a
<code>JComponent</code>'s <code>LayoutManager</code> allows
children to overlap, the <code>JComponent</code> must override
<code>isOptimizedDrawingEnabled</code> to return false.

@see Container
@see javax.swing.JComponent#isOptimizedDrawingEnabled

@author      Sami Shaio
@author      Arthur van Hoff
"
      operation 2157058 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the layout manager uses a per-component string,
adds the component <code>comp</code> to the layout,
associating it
with the string specified by <code>name</code>.

@param name the string to be associated with the component
@param comp the component to be added
"
      end

      operation 2157186 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout.
@param comp the component to be removed
"
      end

      operation 2157314 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the preferred size dimensions for the specified
container, given the components it contains.
@param parent the container to be laid out

@see #minimumLayoutSize
"
      end

      operation 2157442 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the minimum size dimensions for the specified
container, given the components it contains.
@param parent the component to be laid out
@see #preferredLayoutSize
"
      end

      operation 2157570 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the specified container.
@param parent the container to be laid out
"
      end
    end

    class 349826 "LightweightDispatcher"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " ****************** END OF MIXING CODE ********************************

Class to manage the dispatching of MouseEvents to the lightweight descendants
and SunDropTargetEvents to both lightweight and heavyweight descendants
contained by a native container.

NOTE: the class name is not appropriate anymore, but we cannot change it
because we must keep serialization compatibility.

@author Timothy Prinzing
"
      classrelation 608258 // <realization>
	relation 608258 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 608258 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 608514 // <realization>
	relation 608514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 608514 // <realization>
	  b parent class_ref 351234 // AWTEventListener
      end

      attribute 453378 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5184291520170872969L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      attribute 453506 "LWD_MOUSE_DRAGGED_OVER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Our own mouse event for when we're dragged over from another hw
container

"
      end

      attribute 453634 "eventLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.event.LightweightDispatcher\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 453762 "BUTTONS_DOWN_MASK"
	class_attribute const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 135682 "initialization"
	
	cpp "" ""
	java "  static {
        int[] buttonsDownMask = AWTAccessor.getInputEventAccessor().
                getButtonDownMasks();
        int mask = 0;
        for (int buttonDownMask : buttonsDownMask) {
            mask |= buttonDownMask;
        }
        BUTTONS_DOWN_MASK = mask;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 1966594 "LightweightDispatcher"
	package explicit_return_type ""
	nparams 1
	  param inout name "nativeContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1966722 "dispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clean up any resources allocated when dispatcher was created;
should be called from Container.removeNotify
"
      end

      operation 1966850 "enableEvents"
	package explicit_return_type "void"
	nparams 1
	  param in name "events" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables events to subcomponents.
"
      end

      operation 1966978 "dispatchEvent"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an event to a sub-component if necessary, and
returns whether or not the event was forwarded to a
sub-component.

@param e the event
"
      end

      operation 1967106 "isMouseGrab"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method effectively returns whether or not a mouse button was down
just BEFORE the event happened.  A better method name might be
wasAMouseButtonDownBeforeThisEvent().
"
      end

      operation 1967234 "processMouseEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method attempts to distribute a mouse event to a lightweight
component.  It tries to avoid doing any unnecessary probes down
into the component tree to minimize the overhead of determining
where to route the event, since mouse movement events tend to
come in large and frequent amounts.
"
      end

      operation 1967362 "processDropTargetEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" explicit_type "SunDropTargetEvent"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1967490 "trackDropTargetEnterExit"
	private explicit_return_type "void"
	nparams 2
	  param inout name "targetOver" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates dnd enter/exit events as mouse moves over lw components
@param targetOver       Target mouse is over (including native container)
@param e                SunDropTarget mouse event in native container
"
      end

      operation 1967618 "trackMouseEnterExit"
	private explicit_return_type "void"
	nparams 2
	  param inout name "targetOver" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates enter/exit events as mouse moves over lw components
@param targetOver        Target mouse is over (including native container)
@param e                 Mouse event in native container
"
      end

      operation 1967746 "retargetMouseEnterExit"
	private return_type class_ref 338818 // Component
	nparams 4
	  param inout name "targetOver" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346626 // MouseEvent
	  param inout name "lastEntered" type class_ref 338818 // Component
	  param inout name "inNativeContainer" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1967874 "startListeningForOtherDrags"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Listens to global mouse drag events so even drags originating
from other heavyweight containers will generate enter/exit
events in this container
"
      end

      operation 1968002 "stopListeningForOtherDrags"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1968130 "eventDispatched"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Implementation of AWTEventListener)
Listen for drag events posted in other hw components so we can
track enter/exit regardless of where a drag originated
"
      end

      operation 1968258 "retargetMouseEvent"
	package explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 338818 // Component
	  param in name "id" explicit_type "int"
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a mouse event to the current mouse event recipient using
the given event (sent to the windowed host) as a srcEvent.  If
the mouse event target is still in the component tree, the
coordinates of the event are translated to those of the target.
If the target has been removed, we don't bother to send the
message.
"
      end

      classrelation 608642 // nativeContainer (<unidirectional association>)
	relation 608642 --->
	  a role_name "nativeContainer" private
	    comment " --- member variables -------------------------------

The windowed container that might be hosting events for
subcomponents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 608642 // nativeContainer (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 608770 // focus (<unidirectional association>)
	relation 608770 --->
	  a role_name "focus" private
	    comment "
This variable is not used, but kept for serialization compatibility

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 608770 // focus (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 608898 // mouseEventTarget (<unidirectional association>)
	relation 608898 --->
	  a role_name "mouseEventTarget" private
	    comment "
The current subcomponent being hosted by this windowed
component that has events being forwarded to it.  If this
is null, there are currently no events being forwarded to
a subcomponent.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 608898 // mouseEventTarget (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 609026 // targetLastEntered (<unidirectional association>)
	relation 609026 --->
	  a role_name "targetLastEntered" private
	    comment "
The last component entered by the {@code MouseEvent}.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 609026 // targetLastEntered (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 609154 // targetLastEnteredDT (<unidirectional association>)
	relation 609154 --->
	  a role_name "targetLastEnteredDT" private
	    comment "
The last component entered by the {@code SunDropTargetEvent}.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 609154 // targetLastEnteredDT (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      attribute 453890 "isMouseInNativeContainer"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is the mouse over the native container.

"
      end

      attribute 454018 "isMouseDTInNativeContainer"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Is DnD over the native container.

"
      end

      classrelation 609282 // nativeCursor (<unidirectional association>)
	relation 609282 --->
	  a role_name "nativeCursor" private
	    comment "
This variable is not used, but kept for serialization compatibility

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 609282 // nativeCursor (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      attribute 454146 "eventMask"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The event mask for contained lightweight components.  Lightweight
components need a windowed container to host window-related
events.  This separate mask indicates events that have been
requested by contained lightweight components without effecting
the mask of the windowed component itself.

"
      end

      attribute 454274 "PROXY_EVENT_MASK"
	class_attribute const_attribute private explicit_type "long"
	init_value "
        AWTEvent.FOCUS_EVENT_MASK |
        AWTEvent.KEY_EVENT_MASK |
        AWTEvent.MOUSE_EVENT_MASK |
        AWTEvent.MOUSE_MOTION_EVENT_MASK |
        AWTEvent.MOUSE_WHEEL_EVENT_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The kind of events routed to lightweight components from windowed
hosts.

"
      end

      attribute 454402 "MOUSE_MASK"
	class_attribute const_attribute private explicit_type "long"
	init_value "
        AWTEvent.MOUSE_EVENT_MASK |
        AWTEvent.MOUSE_MOTION_EVENT_MASK |
        AWTEvent.MOUSE_WHEEL_EVENT_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 349954 "FocusTraversalPolicy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy defines the order in which Components with a
particular focus cycle root are traversed. Instances can apply the policy to
arbitrary focus cycle roots, allowing themselves to be shared across
Containers. They do not need to be reinitialized when the focus cycle roots
of a Component hierarchy change.
<p>
The core responsibility of a FocusTraversalPolicy is to provide algorithms
determining the next and previous Components to focus when traversing
forward or backward in a UI. Each FocusTraversalPolicy must also provide
algorithms for determining the first, last, and default Components in a
traversal cycle. First and last Components are used when normal forward and
backward traversal, respectively, wraps. The default Component is the first
to receive focus when traversing down into a new focus traversal cycle.
A FocusTraversalPolicy can optionally provide an algorithm for determining
a Window's initial Component. The initial Component is the first to receive
focus when a Window is first made visible.
<p>
FocusTraversalPolicy takes into account <a
href=\"doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus traversal
policy providers</a>.  When searching for first/last/next/previous Component,
if a focus traversal policy provider is encountered, its focus traversal
policy is used to perform the search operation.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author David Mendenhall

@see Container#setFocusTraversalPolicy
@see Container#getFocusTraversalPolicy
@see Container#setFocusCycleRoot
@see Container#isFocusCycleRoot
@see Container#setFocusTraversalPolicyProvider
@see Container#isFocusTraversalPolicyProvider
@see KeyboardFocusManager#setDefaultFocusTraversalPolicy
@see KeyboardFocusManager#getDefaultFocusTraversalPolicy
@since 1.4
"
      operation 6144386 "getComponentAfter"
	abstract public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus after aComponent.
aContainer must be a focus cycle root of aComponent or a focus traversal
policy provider.

@param aContainer a focus cycle root of aComponent or focus traversal
       policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus after aComponent, or
        null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if
        either aContainer or aComponent is null
"
      end

      operation 6144514 "getComponentBefore"
	abstract public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus before aComponent.
aContainer must be a focus cycle root of aComponent or a focus traversal
policy provider.

@param aContainer a focus cycle root of aComponent or focus traversal
       policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus before aComponent,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or a focus traversal policy provider, or if
        either aContainer or aComponent is null
"
      end

      operation 6144642 "getFirstComponent"
	abstract public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
forward direction.

@param aContainer the focus cycle root or focus traversal policy provider
       whose first Component is to be returned
@return the first Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6144770 "getLastComponent"
	abstract public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
reverse direction.

@param aContainer the focus cycle root or focus traversal policy
       provider whose last Component is to be returned
@return the last Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6144898 "getDefaultComponent"
	abstract public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default Component to focus. This Component will be the first
to receive focus when traversing down into a new focus traversal cycle
rooted at aContainer.

@param aContainer the focus cycle root or focus traversal policy
       provider whose default Component is to be returned
@return the default Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6145026 "getInitialComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "window" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus when a Window is
made visible for the first time. Once the Window has been made visible
by a call to <code>show()</code> or <code>setVisible(true)</code>, the
initial Component will not be used again. Instead, if the Window loses
and subsequently regains focus, or is made invisible or undisplayable
and subsequently made visible and displayable, the Window's most
recently focused Component will become the focus owner. The default
implementation of this method returns the default Component.

@param window the Window whose initial Component is to be returned
@return the Component that should receive the focus when window is made
        visible for the first time, or null if no suitable Component can
        be found
@see #getDefaultComponent
@see Window#getMostRecentFocusOwner
@throws IllegalArgumentException if window is null
"
      end
    end

    class 379394 "Shape"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Shape</code> interface provides definitions for objects
that represent some form of geometric shape.  The <code>Shape</code>
is described by a {@link PathIterator} object, which can express the
outline of the <code>Shape</code> as well as a rule for determining
how the outline divides the 2D plane into interior and exterior
points.  Each <code>Shape</code> object provides callbacks to get the
bounding box of the geometry, determine whether points or
rectangles lie partly or entirely within the interior
of the <code>Shape</code>, and retrieve a <code>PathIterator</code>
object that describes the trajectory path of the <code>Shape</code>
outline.
<p>
<a name=\"def_insideness\"><b>Definition of insideness:</b></a>
A point is considered to lie inside a
<code>Shape</code> if and only if:
<ul>
<li> it lies completely
inside the<code>Shape</code> boundary <i>or</i>
<li>
it lies exactly on the <code>Shape</code> boundary <i>and</i> the
space immediately adjacent to the
point in the increasing <code>X</code> direction is
entirely inside the boundary <i>or</i>
<li>
it lies exactly on a horizontal boundary segment <b>and</b> the
space immediately adjacent to the point in the
increasing <code>Y</code> direction is inside the boundary.
</ul>
<p>The <code>contains</code> and <code>intersects</code> methods
consider the interior of a <code>Shape</code> to be the area it
encloses as if it were filled.  This means that these methods
consider
unclosed shapes to be implicitly closed for the purpose of
determining if a shape contains or intersects a rectangle or if a
shape contains a point.

@see java.awt.geom.PathIterator
@see java.awt.geom.AffineTransform
@see java.awt.geom.FlatteningPathIterator
@see java.awt.geom.GeneralPath

@author Jim Graham
@since 1.2
"
      operation 2166274 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer {@link Rectangle} that completely encloses the
<code>Shape</code>.  Note that there is no guarantee that the
returned <code>Rectangle</code> is the smallest bounding box that
encloses the <code>Shape</code>, only that the <code>Shape</code>
lies entirely within the indicated  <code>Rectangle</code>.  The
returned <code>Rectangle</code> might also fail to completely
enclose the <code>Shape</code> if the <code>Shape</code> overflows
the limited range of the integer data type.  The
<code>getBounds2D</code> method generally returns a
tighter bounding box due to its greater flexibility in
representation.

<p>
Note that the <a href=\"{@docRoot}/java/awt/Shape.html#def_insideness\">
definition of insideness</a> can lead to situations where points
on the defining outline of the {@code shape} may not be considered
contained in the returned {@code bounds} object, but only in cases
where those points are also not considered contained in the original
{@code shape}.
</p>
<p>
If a {@code point} is inside the {@code shape} according to the
{@link #contains(double x, double y) contains(point)} method, then
it must be inside the returned {@code Rectangle} bounds object
according to the {@link #contains(double x, double y) contains(point)}
method of the {@code bounds}. Specifically:
</p>
<p>
 {@code shape.contains(x,y)} requires {@code bounds.contains(x,y)}
</p>
<p>
If a {@code point} is not inside the {@code shape}, then it might
still be contained in the {@code bounds} object:
</p>
<p>
 {@code bounds.contains(x,y)} does not imply {@code shape.contains(x,y)}
</p>
@return an integer <code>Rectangle</code> that completely encloses
                the <code>Shape</code>.
@see #getBounds2D
@since 1.2
"
      end

      operation 2166402 "getBounds2D"
	public return_type class_ref 380674 // Rectangle2D
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a high precision and more accurate bounding box of
the <code>Shape</code> than the <code>getBounds</code> method.
Note that there is no guarantee that the returned
{@link Rectangle2D} is the smallest bounding box that encloses
the <code>Shape</code>, only that the <code>Shape</code> lies
entirely within the indicated <code>Rectangle2D</code>.  The
bounding box returned by this method is usually tighter than that
returned by the <code>getBounds</code> method and never fails due
to overflow problems since the return value can be an instance of
the <code>Rectangle2D</code> that uses double precision values to
store the dimensions.

<p>
Note that the <a href=\"{@docRoot}/java/awt/Shape.html#def_insideness\">
definition of insideness</a> can lead to situations where points
on the defining outline of the {@code shape} may not be considered
contained in the returned {@code bounds} object, but only in cases
where those points are also not considered contained in the original
{@code shape}.
</p>
<p>
If a {@code point} is inside the {@code shape} according to the
{@link #contains(Point2D p) contains(point)} method, then it must
be inside the returned {@code Rectangle2D} bounds object according
to the {@link #contains(Point2D p) contains(point)} method of the
{@code bounds}. Specifically:
</p>
<p>
 {@code shape.contains(p)} requires {@code bounds.contains(p)}
</p>
<p>
If a {@code point} is not inside the {@code shape}, then it might
still be contained in the {@code bounds} object:
</p>
<p>
 {@code bounds.contains(p)} does not imply {@code shape.contains(p)}
</p>
@return an instance of <code>Rectangle2D</code> that is a
                high-precision bounding box of the <code>Shape</code>.
@see #getBounds
@since 1.2
"
      end

      operation 2166530 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the specified coordinates are inside the boundary of the
<code>Shape</code>, as described by the
<a href=\"{@docRoot}/java/awt/Shape.html#def_insideness\">
definition of insideness</a>.
@param x the specified X coordinate to be tested
@param y the specified Y coordinate to be tested
@return <code>true</code> if the specified coordinates are inside
        the <code>Shape</code> boundary; <code>false</code>
        otherwise.
@since 1.2
"
      end

      operation 2166658 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 380802 // Point2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if a specified {@link Point2D} is inside the boundary
of the <code>Shape</code>, as described by the
<a href=\"{@docRoot}/java/awt/Shape.html#def_insideness\">
definition of insideness</a>.
@param p the specified <code>Point2D</code> to be tested
@return <code>true</code> if the specified <code>Point2D</code> is
         inside the boundary of the <code>Shape</code>;
         <code>false</code> otherwise.
@since 1.2
"
      end

      operation 2166786 "intersects"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "w" explicit_type "double"
	  param in name "h" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the interior of the <code>Shape</code> intersects the
interior of a specified rectangular area.
The rectangular area is considered to intersect the <code>Shape</code>
if any point is contained in both the interior of the
<code>Shape</code> and the specified rectangular area.
<p>
The {@code Shape.intersects()} method allows a {@code Shape}
implementation to conservatively return {@code true} when:
<ul>
<li>
there is a high probability that the rectangular area and the
<code>Shape</code> intersect, but
<li>
the calculations to accurately determine this intersection
are prohibitively expensive.
</ul>
This means that for some {@code Shapes} this method might
return {@code true} even though the rectangular area does not
intersect the {@code Shape}.
The {@link java.awt.geom.Area Area} class performs
more accurate computations of geometric intersection than most
{@code Shape} objects and therefore can be used if a more precise
answer is required.

@param x the X coordinate of the upper-left corner
         of the specified rectangular area
@param y the Y coordinate of the upper-left corner
         of the specified rectangular area
@param w the width of the specified rectangular area
@param h the height of the specified rectangular area
@return <code>true</code> if the interior of the <code>Shape</code> and
         the interior of the rectangular area intersect, or are
         both highly likely to intersect and intersection calculations
         would be too expensive to perform; <code>false</code> otherwise.
@see java.awt.geom.Area
@since 1.2
"
      end

      operation 2166914 "intersects"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the interior of the <code>Shape</code> intersects the
interior of a specified <code>Rectangle2D</code>.
The {@code Shape.intersects()} method allows a {@code Shape}
implementation to conservatively return {@code true} when:
<ul>
<li>
there is a high probability that the <code>Rectangle2D</code> and the
<code>Shape</code> intersect, but
<li>
the calculations to accurately determine this intersection
are prohibitively expensive.
</ul>
This means that for some {@code Shapes} this method might
return {@code true} even though the {@code Rectangle2D} does not
intersect the {@code Shape}.
The {@link java.awt.geom.Area Area} class performs
more accurate computations of geometric intersection than most
{@code Shape} objects and therefore can be used if a more precise
answer is required.

@param r the specified <code>Rectangle2D</code>
@return <code>true</code> if the interior of the <code>Shape</code> and
         the interior of the specified <code>Rectangle2D</code>
         intersect, or are both highly likely to intersect and intersection
         calculations would be too expensive to perform; <code>false</code>
         otherwise.
@see #intersects(double, double, double, double)
@since 1.2
"
      end

      operation 2167042 "contains"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "w" explicit_type "double"
	  param in name "h" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the interior of the <code>Shape</code> entirely contains
the specified rectangular area.  All coordinates that lie inside
the rectangular area must lie within the <code>Shape</code> for the
entire rectangular area to be considered contained within the
<code>Shape</code>.
<p>
The {@code Shape.contains()} method allows a {@code Shape}
implementation to conservatively return {@code false} when:
<ul>
<li>
the <code>intersect</code> method returns <code>true</code> and
<li>
the calculations to determine whether or not the
<code>Shape</code> entirely contains the rectangular area are
prohibitively expensive.
</ul>
This means that for some {@code Shapes} this method might
return {@code false} even though the {@code Shape} contains
the rectangular area.
The {@link java.awt.geom.Area Area} class performs
more accurate geometric computations than most
{@code Shape} objects and therefore can be used if a more precise
answer is required.

@param x the X coordinate of the upper-left corner
         of the specified rectangular area
@param y the Y coordinate of the upper-left corner
         of the specified rectangular area
@param w the width of the specified rectangular area
@param h the height of the specified rectangular area
@return <code>true</code> if the interior of the <code>Shape</code>
         entirely contains the specified rectangular area;
         <code>false</code> otherwise or, if the <code>Shape</code>
         contains the rectangular area and the
         <code>intersects</code> method returns <code>true</code>
         and the containment calculations would be too expensive to
         perform.
@see java.awt.geom.Area
@see #intersects
@since 1.2
"
      end

      operation 2167170 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the interior of the <code>Shape</code> entirely contains the
specified <code>Rectangle2D</code>.
The {@code Shape.contains()} method allows a {@code Shape}
implementation to conservatively return {@code false} when:
<ul>
<li>
the <code>intersect</code> method returns <code>true</code> and
<li>
the calculations to determine whether or not the
<code>Shape</code> entirely contains the <code>Rectangle2D</code>
are prohibitively expensive.
</ul>
This means that for some {@code Shapes} this method might
return {@code false} even though the {@code Shape} contains
the {@code Rectangle2D}.
The {@link java.awt.geom.Area Area} class performs
more accurate geometric computations than most
{@code Shape} objects and therefore can be used if a more precise
answer is required.

@param r The specified <code>Rectangle2D</code>
@return <code>true</code> if the interior of the <code>Shape</code>
         entirely contains the <code>Rectangle2D</code>;
         <code>false</code> otherwise or, if the <code>Shape</code>
         contains the <code>Rectangle2D</code> and the
         <code>intersects</code> method returns <code>true</code>
         and the containment calculations would be too expensive to
         perform.
@see #contains(double, double, double, double)
@since 1.2
"
      end

      operation 2167298 "getPathIterator"
	public return_type class_ref 380930 // PathIterator
	nparams 1
	  param inout name "at" type class_ref 381058 // AffineTransform
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator object that iterates along the
<code>Shape</code> boundary and provides access to the geometry of the
<code>Shape</code> outline.  If an optional {@link AffineTransform}
is specified, the coordinates returned in the iteration are
transformed accordingly.
<p>
Each call to this method returns a fresh <code>PathIterator</code>
object that traverses the geometry of the <code>Shape</code> object
independently from any other <code>PathIterator</code> objects in use
at the same time.
<p>
It is recommended, but not guaranteed, that objects
implementing the <code>Shape</code> interface isolate iterations
that are in process from any changes that might occur to the original
object's geometry during such iterations.

@param at an optional <code>AffineTransform</code> to be applied to the
         coordinates as they are returned in the iteration, or
         <code>null</code> if untransformed coordinates are desired
@return a new <code>PathIterator</code> object, which independently
         traverses the geometry of the <code>Shape</code>.
@since 1.2
"
      end

      operation 2167426 "getPathIterator"
	public return_type class_ref 380930 // PathIterator
	nparams 2
	  param inout name "at" type class_ref 381058 // AffineTransform
	  param in name "flatness" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator object that iterates along the <code>Shape</code>
boundary and provides access to a flattened view of the
<code>Shape</code> outline geometry.
<p>
Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types are
returned by the iterator.
<p>
If an optional <code>AffineTransform</code> is specified,
the coordinates returned in the iteration are transformed
accordingly.
<p>
The amount of subdivision of the curved segments is controlled
by the <code>flatness</code> parameter, which specifies the
maximum distance that any point on the unflattened transformed
curve can deviate from the returned flattened path segments.
Note that a limit on the accuracy of the flattened path might be
silently imposed, causing very small flattening parameters to be
treated as larger values.  This limit, if there is one, is
defined by the particular implementation that is used.
<p>
Each call to this method returns a fresh <code>PathIterator</code>
object that traverses the <code>Shape</code> object geometry
independently from any other <code>PathIterator</code> objects in use at
the same time.
<p>
It is recommended, but not guaranteed, that objects
implementing the <code>Shape</code> interface isolate iterations
that are in process from any changes that might occur to the original
object's geometry during such iterations.

@param at an optional <code>AffineTransform</code> to be applied to the
         coordinates as they are returned in the iteration, or
         <code>null</code> if untransformed coordinates are desired
@param flatness the maximum distance that the line segments used to
         approximate the curved segments are allowed to deviate
         from any point on the original curve
@return a new <code>PathIterator</code> that independently traverses
        a flattened view of the geometry of the  <code>Shape</code>.
@since 1.2
"
      end
    end

    class 391298 "ItemSelectable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface for objects which contain a set of items for
which zero or more can be selected.

@author Amy Fowler
"
      operation 2219266 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected items or <code>null</code> if no
items are selected.
"
      end

      operation 2219394 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to receive item events when the state of an item is
changed by the user. Item events are not sent when an item's
state is set programmatically.  If <code>l</code> is
<code>null</code>, no exception is thrown and no action is performed.

@param    l the listener to receive events
@see ItemEvent
"
      end

      operation 2219522 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item listener.
If <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.

@param   l the listener being removed
@see ItemEvent
"
      end
    end

    class 393346 "Frame"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Frame</code> is a top-level window with a title and a border.
<p>
The size of the frame includes any area designated for the
border.  The dimensions of the border area may be obtained
using the <code>getInsets</code> method, however, since
these dimensions are platform-dependent, a valid insets
value cannot be obtained until the frame is made displayable
by either calling <code>pack</code> or <code>show</code>.
Since the border area is included in the overall size of the
frame, the border effectively obscures a portion of the frame,
constraining the area available for rendering and/or displaying
subcomponents to the rectangle which has an upper-left corner
location of <code>(insets.left, insets.top)</code>, and has a size of
<code>width - (insets.left + insets.right)</code> by
<code>height - (insets.top + insets.bottom)</code>.
<p>
The default layout for a frame is <code>BorderLayout</code>.
<p>
A frame may have its native decorations (i.e. <code>Frame</code>
and <code>Titlebar</code>) turned off
with <code>setUndecorated</code>. This can only be done while the frame
is not {@link Component#isDisplayable() displayable}.
<p>
In a multi-screen environment, you can create a <code>Frame</code>
on a different screen device by constructing the <code>Frame</code>
with {@link #Frame(GraphicsConfiguration)} or
{@link #Frame(String title, GraphicsConfiguration)}.  The
<code>GraphicsConfiguration</code> object is one of the
<code>GraphicsConfiguration</code> objects of the target screen
device.
<p>
In a virtual device multi-screen environment in which the desktop
area could span multiple physical screen devices, the bounds of all
configurations are relative to the virtual-coordinate system.  The
origin of the virtual-coordinate system is at the upper left-hand
corner of the primary physical screen.  Depending on the location
of the primary screen in the virtual device, negative coordinates
are possible, as shown in the following figure.
<p>
<img src=\"doc-files/MultiScreen.gif\"
alt=\"Diagram of virtual device encompassing three physical screens and one primary physical screen. The primary physical screen
shows (0,0) coords while a different physical screen shows (-80,-100) coords.\"
style=\"float:center; margin: 7px 10px;\">
<p>
In such an environment, when calling <code>setLocation</code>,
you must pass a virtual coordinate to this method.  Similarly,
calling <code>getLocationOnScreen</code> on a <code>Frame</code>
returns virtual device coordinates.  Call the <code>getBounds</code>
method of a <code>GraphicsConfiguration</code> to find its origin in
the virtual coordinate system.
<p>
The following code sets the
location of the <code>Frame</code> at (10, 10) relative
to the origin of the physical screen of the corresponding
<code>GraphicsConfiguration</code>.  If the bounds of the
<code>GraphicsConfiguration</code> is not taken into account, the
<code>Frame</code> location would be set at (10, 10) relative to the
virtual-coordinate system and would appear on the primary physical
screen, which might be different from the physical screen of the
specified <code>GraphicsConfiguration</code>.

<pre>
     Frame f = new Frame(GraphicsConfiguration gc);
     Rectangle bounds = gc.getBounds();
     f.setLocation(10 + bounds.x, 10 + bounds.y);
</pre>

<p>
Frames are capable of generating the following types of
<code>WindowEvent</code>s:
<ul>
<li><code>WINDOW_OPENED</code>
<li><code>WINDOW_CLOSING</code>:
    <br>If the program doesn't
    explicitly hide or dispose the window while processing
    this event, the window close operation is canceled.
<li><code>WINDOW_CLOSED</code>
<li><code>WINDOW_ICONIFIED</code>
<li><code>WINDOW_DEICONIFIED</code>
<li><code>WINDOW_ACTIVATED</code>
<li><code>WINDOW_DEACTIVATED</code>
<li><code>WINDOW_GAINED_FOCUS</code>
<li><code>WINDOW_LOST_FOCUS</code>
<li><code>WINDOW_STATE_CHANGED</code>
</ul>

@author      Sami Shaio
@see WindowEvent
@see Window#addWindowListener
@since       JDK1.0
"
      classrelation 2917890 // <generalisation>
	relation 2917890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2917890 // <generalisation>
	  b parent class_ref 347394 // Window
      end

      classrelation 2918018 // <realization>
	relation 2918018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2918018 // <realization>
	  b parent class_ref 340226 // MenuContainer
      end

      attribute 1373826 "DEFAULT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.DEFAULT_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Note: These are being obsoleted;  programs should use the Cursor class
variables going forward. See Cursor and Component.setCursor.


@deprecated   replaced by <code>Cursor.DEFAULT_CURSOR</code>.

"
      end

      attribute 1373954 "CROSSHAIR_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.CROSSHAIR_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.CROSSHAIR_CURSOR</code>.

"
      end

      attribute 1374082 "TEXT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.TEXT_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.TEXT_CURSOR</code>.

"
      end

      attribute 1374210 "WAIT_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.WAIT_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.WAIT_CURSOR</code>.

"
      end

      attribute 1374338 "SW_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.SW_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.SW_RESIZE_CURSOR</code>.

"
      end

      attribute 1374466 "SE_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.SE_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.SE_RESIZE_CURSOR</code>.

"
      end

      attribute 1374594 "NW_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.NW_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.NW_RESIZE_CURSOR</code>.

"
      end

      attribute 1374722 "NE_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.NE_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.NE_RESIZE_CURSOR</code>.

"
      end

      attribute 1374850 "N_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.N_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.N_RESIZE_CURSOR</code>.

"
      end

      attribute 1374978 "S_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.S_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.S_RESIZE_CURSOR</code>.

"
      end

      attribute 1375106 "W_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.W_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.W_RESIZE_CURSOR</code>.

"
      end

      attribute 1375234 "E_RESIZE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.E_RESIZE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.E_RESIZE_CURSOR</code>.

"
      end

      attribute 1375362 "HAND_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.HAND_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.HAND_CURSOR</code>.

"
      end

      attribute 1375490 "MOVE_CURSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " Cursor.MOVE_CURSOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@deprecated   replaced by <code>Cursor.MOVE_CURSOR</code>.

"
      end

      attribute 1375618 "NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Frame is in the \"normal\" state.  This symbolic constant names a
frame state with all state bits cleared.
@see #setExtendedState(int)
@see #getExtendedState

"
      end

      attribute 1375746 "ICONIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This state bit indicates that frame is iconified.
@see #setExtendedState(int)
@see #getExtendedState

"
      end

      attribute 1375874 "MAXIMIZED_HORIZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This state bit indicates that frame is maximized in the
horizontal direction.
@see #setExtendedState(int)
@see #getExtendedState
@since 1.4

"
      end

      attribute 1376002 "MAXIMIZED_VERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This state bit indicates that frame is maximized in the
vertical direction.
@see #setExtendedState(int)
@see #getExtendedState
@since 1.4

"
      end

      attribute 1376130 "MAXIMIZED_BOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " MAXIMIZED_VERT | MAXIMIZED_HORIZ"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This state bit mask indicates that frame is fully maximized
(that is both horizontally and vertically).  It is just a
convenience alias for
<code>MAXIMIZED_VERT&nbsp;|&nbsp;MAXIMIZED_HORIZ</code>.

<p>Note that the correct test for frame being fully maximized is
<pre>
    (state &amp; Frame.MAXIMIZED_BOTH) == Frame.MAXIMIZED_BOTH
</pre>

<p>To test is frame is maximized in <em>some</em> direction use
<pre>
    (state &amp; Frame.MAXIMIZED_BOTH) != 0
</pre>

@see #setExtendedState(int)
@see #getExtendedState
@since 1.4

"
      end

      classrelation 2918146 // maximizedBounds (<unidirectional association>)
	relation 2918146 --->
	  a role_name "maximizedBounds" package
	    comment "
Maximized bounds for this frame.
@see     #setMaximizedBounds(Rectangle)
@see     #getMaximizedBounds
@serial
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2918146 // maximizedBounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      classrelation 2918274 // title (<unidirectional association>)
	relation 2918274 --->
	  a role_name "title" init_value " \"Untitled\"" package
	    comment "
This is the title of the frame.  It can be changed
at any time.  <code>title</code> can be null and if
this is the case the <code>title</code> = \"\".

@serial
@see #getTitle
@see #setTitle(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2918274 // title (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2918402 // menuBar (<unidirectional association>)
	relation 2918402 --->
	  a role_name "menuBar" package
	    comment "
The frames menubar.  If <code>menuBar</code> = null
the frame will not have a menubar.

@serial
@see #getMenuBar
@see #setMenuBar(MenuBar)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2918402 // menuBar (<unidirectional association>)
	  b parent class_ref 866562 // MenuBar
      end

      attribute 1376258 "resizable"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field indicates whether the frame is resizable.
This property can be changed at any time.
<code>resizable</code> will be true if the frame is
resizable, otherwise it will be false.

@serial
@see #isResizable()

"
      end

      attribute 1376386 "undecorated"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field indicates whether the frame is undecorated.
This property can only be changed while the frame is not displayable.
<code>undecorated</code> will be true if the frame is
undecorated, otherwise it will be false.

@serial
@see #setUndecorated(boolean)
@see #isUndecorated()
@see Component#isDisplayable()
@since 1.4

"
      end

      attribute 1376514 "mbManagement"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>mbManagement</code> is only used by the Motif implementation.

@serial

 used only by the Motif impl. "
      end

      attribute 1376642 "state"
	private explicit_type "int"
	init_value " NORMAL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " XXX: uwe: abuse old field for now
 will need to take care of serialization
"
      end

      classrelation 2918530 // ownedWindows (<unidirectional association>)
	relation 2918530 --->
	  a role_name "ownedWindows" package
	    comment "
The Windows owned by the Frame.
Note: in 1.2 this has been superceded by Window.ownedWindowList

@serial
@see java.awt.Window#ownedWindowList

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	    classrelation_ref 2918530 // ownedWindows (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2918658 // base (<unidirectional association>)
	relation 2918658 --->
	  a role_name "base" init_value " \"frame\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2918658 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1376770 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1376898 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2673458971256075116L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 150018 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6208258 "Frame"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of <code>Frame</code> that is
initially invisible.  The title of the <code>Frame</code>
is empty.
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless()
@see Component#setSize
@see Component#setVisible(boolean)
"
      end

      operation 6208386 "Frame"
	public explicit_return_type ""
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible {@code Frame} with the
specified {@code GraphicsConfiguration}.

@param gc the <code>GraphicsConfiguration</code>
of the target screen device. If <code>gc</code>
is <code>null</code>, the system default
<code>GraphicsConfiguration</code> is assumed.
@exception IllegalArgumentException if
<code>gc</code> is not from a screen device.
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless()
@since     1.3
"
      end

      operation 6208514 "Frame"
	public explicit_return_type ""
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible <code>Frame</code> object
with the specified title.
@param title the title to be displayed in the frame's border.
             A <code>null</code> value
             is treated as an empty string, \"\".
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless()
@see java.awt.Component#setSize
@see java.awt.Component#setVisible(boolean)
@see java.awt.GraphicsConfiguration#getBounds
"
      end

      operation 6208642 "Frame"
	public explicit_return_type ""
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, initially invisible <code>Frame</code> object
with the specified title and a
<code>GraphicsConfiguration</code>.
@param title the title to be displayed in the frame's border.
             A <code>null</code> value
             is treated as an empty string, \"\".
@param gc the <code>GraphicsConfiguration</code>
of the target screen device.  If <code>gc</code> is
<code>null</code>, the system default
<code>GraphicsConfiguration</code> is assumed.
@exception IllegalArgumentException if <code>gc</code>
is not from a screen device.
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless()
@see java.awt.Component#setSize
@see java.awt.Component#setVisible(boolean)
@see java.awt.GraphicsConfiguration#getBounds
@since 1.3
"
      end

      operation 6208770 "init"
	private explicit_return_type "void"
	nparams 2
	  param inout name "title" type class_ref 128130 // String
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6208898 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6209026 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Frame displayable by connecting it to
a native screen resource.  Making a frame displayable will
cause any of its children to be made displayable.
This method is called internally by the toolkit and should
not be called directly by programs.
@see Component#isDisplayable
@see #removeNotify
"
      end

      operation 6209154 "getTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the title of the frame.  The title is displayed in the
frame's border.
@return    the title of this frame, or an empty string (\"\")
               if this frame doesn't have a title.
@see       #setTitle(String)
"
      end

      operation 6209282 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the title for this frame to the specified string.
@param title the title to be displayed in the frame's border.
             A <code>null</code> value
             is treated as an empty string, \"\".
@see      #getTitle
"
      end

      operation 6209410 "getIconImage"
	public return_type class_ref 340098 // Image
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the image to be displayed as the icon for this frame.
<p>
This method is obsolete and kept for backward compatibility
only. Use {@link Window#getIconImages Window.getIconImages()} instead.
<p>
If a list of several images was specified as a Window's icon,
this method will return the first item of the list.

@return    the icon image for this frame, or <code>null</code>
                   if this frame doesn't have an icon image.
@see       #setIconImage(Image)
@see       Window#getIconImages()
@see       Window#setIconImages
"
      end

      operation 6209538 "setIconImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6209666 "getMenuBar"
	public return_type class_ref 866562 // MenuBar
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the menu bar for this frame.
@return    the menu bar for this frame, or <code>null</code>
                  if this frame doesn't have a menu bar.
@see       #setMenuBar(MenuBar)
"
      end

      operation 6209794 "setMenuBar"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mb" type class_ref 866562 // MenuBar
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the menu bar for this frame to the specified menu bar.
@param     mb the menu bar being set.
           If this parameter is <code>null</code> then any
           existing menu bar on this frame is removed.
@see       #getMenuBar
"
      end

      operation 6209922 "isResizable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this frame is resizable by the user.
By default, all frames are initially resizable.
@return    <code>true</code> if the user can resize this frame;
                       <code>false</code> otherwise.
@see       java.awt.Frame#setResizable(boolean)
"
      end

      operation 6210050 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this frame is resizable by the user.
@param    resizable   <code>true</code> if this frame is resizable;
                      <code>false</code> otherwise.
@see      java.awt.Frame#isResizable
"
      end

      operation 6210178 "setState"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of this frame (obsolete).
<p>
In older versions of JDK a frame state could only be NORMAL or
ICONIFIED.  Since JDK 1.4 set of supported frame states is
expanded and frame state is represented as a bitwise mask.
<p>
For compatibility with applications developed
earlier this method still accepts
{@code Frame.NORMAL} and
{@code Frame.ICONIFIED} only.  The iconic
state of the frame is only changed, other aspects
of frame state are not affected by this method. If
the state passed to this method is neither {@code
Frame.NORMAL} nor {@code Frame.ICONIFIED} the
method performs no actions at all.
<p>Note that if the state is not supported on a
given platform, neither the state nor the return
value of the {@link #getState} method will be
changed. The application may determine whether a
specific state is supported via the {@link
java.awt.Toolkit#isFrameStateSupported} method.
<p><b>If the frame is currently visible on the
screen</b> (the {@link #isShowing} method returns
{@code true}), the developer should examine the
return value of the  {@link
java.awt.event.WindowEvent#getNewState} method of
the {@code WindowEvent} received through the
{@link java.awt.event.WindowStateListener} to
determine that the state has actually been
changed.
<p><b>If the frame is not visible on the
screen</b>, the events may or may not be
generated.  In this case the developer may assume
that the state changes immediately after this
method returns.  Later, when the {@code
setVisible(true)} method is invoked, the frame
will attempt to apply this state. Receiving any
{@link
java.awt.event.WindowEvent#WINDOW_STATE_CHANGED}
events is not guaranteed in this case also.

@param state either <code>Frame.NORMAL</code> or
    <code>Frame.ICONIFIED</code>.
@see #setExtendedState(int)
@see java.awt.Window#addWindowStateListener
"
      end

      operation 6210306 "setExtendedState"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of this frame. The state is
represented as a bitwise mask.
<ul>
<li><code>NORMAL</code>
<br>Indicates that no state bits are set.
<li><code>ICONIFIED</code>
<li><code>MAXIMIZED_HORIZ</code>
<li><code>MAXIMIZED_VERT</code>
<li><code>MAXIMIZED_BOTH</code>
<br>Concatenates <code>MAXIMIZED_HORIZ</code>
and <code>MAXIMIZED_VERT</code>.
</ul>
<p>Note that if the state is not supported on a
given platform, neither the state nor the return
value of the {@link #getExtendedState} method will
be changed. The application may determine whether
a specific state is supported via the {@link
java.awt.Toolkit#isFrameStateSupported} method.
<p><b>If the frame is currently visible on the
screen</b> (the {@link #isShowing} method returns
{@code true}), the developer should examine the
return value of the {@link
java.awt.event.WindowEvent#getNewState} method of
the {@code WindowEvent} received through the
{@link java.awt.event.WindowStateListener} to
determine that the state has actually been
changed.
<p><b>If the frame is not visible on the
screen</b>, the events may or may not be
generated.  In this case the developer may assume
that the state changes immediately after this
method returns.  Later, when the {@code
setVisible(true)} method is invoked, the frame
will attempt to apply this state. Receiving any
{@link
java.awt.event.WindowEvent#WINDOW_STATE_CHANGED}
events is not guaranteed in this case also.

@param state a bitwise mask of frame state constants
@since   1.4
@see java.awt.Window#addWindowStateListener
"
      end

      operation 6210434 "isFrameStateSupported"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "state" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6210562 "getState"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this frame (obsolete).
<p>
In older versions of JDK a frame state could only be NORMAL or
ICONIFIED.  Since JDK 1.4 set of supported frame states is
expanded and frame state is represented as a bitwise mask.
<p>
For compatibility with old programs this method still returns
<code>Frame.NORMAL</code> and <code>Frame.ICONIFIED</code> but
it only reports the iconic state of the frame, other aspects of
frame state are not reported by this method.

@return  <code>Frame.NORMAL</code> or <code>Frame.ICONIFIED</code>.
@see     #setState(int)
@see     #getExtendedState
"
      end

      operation 6210690 "getExtendedState"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the state of this frame. The state is
represented as a bitwise mask.
<ul>
<li><code>NORMAL</code>
<br>Indicates that no state bits are set.
<li><code>ICONIFIED</code>
<li><code>MAXIMIZED_HORIZ</code>
<li><code>MAXIMIZED_VERT</code>
<li><code>MAXIMIZED_BOTH</code>
<br>Concatenates <code>MAXIMIZED_HORIZ</code>
and <code>MAXIMIZED_VERT</code>.
</ul>

@return  a bitwise mask of frame state constants
@see     #setExtendedState(int)
@since 1.4
"
      end

      extra_member 150146 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setFrameAccessor(
            new AWTAccessor.FrameAccessor() {
                public void setExtendedState(Frame frame, int state) {
                    synchronized(frame.getObjectLock()) {
                        frame.state = state;
                    }
                }
                public int getExtendedState(Frame frame) {
                    synchronized(frame.getObjectLock()) {
                        return frame.state;
                    }
                }
                public Rectangle getMaximizedBounds(Frame frame) {
                    synchronized(frame.getObjectLock()) {
                        return frame.maximizedBounds;
                    }
                }
            }
        );
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6210818 "setMaximizedBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bounds" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximized bounds for this frame.
<p>
When a frame is in maximized state the system supplies some
defaults bounds.  This method allows some or all of those
system supplied values to be overridden.
<p>
If <code>bounds</code> is <code>null</code>, accept bounds
supplied by the system.  If non-<code>null</code> you can
override some of the system supplied values while accepting
others by setting those fields you want to accept from system
to <code>Integer.MAX_VALUE</code>.
<p>
Note, the given maximized bounds are used as a hint for the native
system, because the underlying platform may not support setting the
location and/or size of the maximized windows.  If that is the case, the
provided values do not affect the appearance of the frame in the
maximized state.

@param bounds  bounds for the maximized state
@see #getMaximizedBounds()
@since 1.4
"
      end

      operation 6210946 "getMaximizedBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets maximized bounds for this frame.
Some fields may contain <code>Integer.MAX_VALUE</code> to indicate
that system supplied values for this field must be used.

@return  maximized bounds for this frame;  may be <code>null</code>
@see     #setMaximizedBounds(Rectangle)
@since   1.4
"
      end

      operation 6211074 "setUndecorated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "undecorated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables or enables decorations for this frame.
<p>
This method can only be called while the frame is not displayable. To
make this frame decorated, it must be opaque and have the default shape,
otherwise the {@code IllegalComponentStateException} will be thrown.
Refer to {@link Window#setShape}, {@link Window#setOpacity} and {@link
Window#setBackground} for details

@param  undecorated {@code true} if no frame decorations are to be
        enabled; {@code false} if frame decorations are to be enabled

@throws IllegalComponentStateException if the frame is displayable
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and this frame does not have the default shape
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and this frame opacity is less than {@code 1.0f}
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and the alpha value of this frame background
     color is less than {@code 1.0f}

@see    #isUndecorated
@see    Component#isDisplayable
@see    Window#getShape
@see    Window#getOpacity
@see    Window#getBackground
@see    javax.swing.JFrame#setDefaultLookAndFeelDecorated(boolean)

@since 1.4
"
      end

      operation 6211202 "isUndecorated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this frame is undecorated.
By default, all frames are initially decorated.
@return    <code>true</code> if frame is undecorated;
                       <code>false</code> otherwise.
@see       java.awt.Frame#setUndecorated(boolean)
@since 1.4
"
      end

      operation 6211330 "setOpacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "opacity" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6211458 "setShape"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shape" type class_ref 379394 // Shape
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6211586 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bgColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6211714 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified menu bar from this frame.
@param    m   the menu component to remove.
          If <code>m</code> is <code>null</code>, then
          no action is taken
"
      end

      operation 6211842 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Frame undisplayable by removing its connection
to its native screen resource. Making a Frame undisplayable
will cause any of its children to be made undisplayable.
This method is called by the toolkit internally and should
not be called directly by programs.
@see Component#isDisplayable
@see #addNotify
"
      end

      operation 6211970 "postProcessKeyEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6212098 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Frame</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return the parameter string of this frame
"
      end

      operation 6212226 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param in name "cursorType" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>Component.setCursor(Cursor)</code>.
"
      end

      operation 6212354 "getCursorType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>Component.getCursor()</code>.
"
      end

      operation 6212482 "getFrames"
	class_operation public return_type class_ref 393346 // Frame
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all {@code Frame}s created by this application.
If called from an applet, the array includes only the {@code Frame}s
accessible by that applet.
<p>
<b>Warning:</b> this method may return system created frames, such
as a shared, hidden frame which is used by Swing. Applications
should not assume the existence of these frames, nor should an
application assume anything about these frames such as component
positions, <code>LayoutManager</code>s or serialization.
<p>
<b>Note</b>: To obtain a list of all ownerless windows, including
ownerless {@code Dialog}s (introduced in release 1.6), use {@link
Window#getOwnerlessWindows Window.getOwnerlessWindows}.

@see Window#getWindows()
@see Window#getOwnerlessWindows

@since 1.2
"
      end

      attribute 1377026 "frameSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.  If there's a MenuBar we restore
its (transient) parent field here.  Likewise for top level
windows that are \"owned\" by this frame.


<code>Frame</code>'s Serialized Data Version.

@serial

"
      end

      operation 6212610 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
an optional serializable icon <code>Image</code>, which is
available as of 1.4.

@param s the <code>ObjectOutputStream</code> to write
@serialData an optional icon <code>Image</code>
@see java.awt.Image
@see #getIconImage
@see #setIconImage(Image)
@see #readObject(ObjectInputStream)
"
      end

      operation 6212738 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code>.  Tries
to read an icon <code>Image</code>, which is optional
data available as of 1.4.  If an icon <code>Image</code>
is not available, but anything other than an EOF
is detected, an <code>OptionalDataException</code>
will be thrown.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception java.io.OptionalDataException if an icon <code>Image</code>
  is not available, but anything other than an EOF
  is detected
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless()
@see java.awt.Image
@see #getIconImage
@see #setIconImage(Image)
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6212866 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6212994 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---



Gets the AccessibleContext associated with this Frame.
For frames, the AccessibleContext takes the form of an
AccessibleAWTFrame.
A new AccessibleAWTFrame instance is created if necessary.

@return an AccessibleAWTFrame that serves as the
        AccessibleContext of this Frame
@since 1.3
"
      end

      class 866690 "AccessibleAWTFrame"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2918786 // <generalisation>
	  relation 2918786 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2918786 // <generalisation>
	    b parent class_ref 469634 // AccessibleAWTWindow
	end

	attribute 1377154 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6172960752956030250L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6213122 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 6213250 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end
      end
    end

    class 406402 "LayoutManager2"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines an interface for classes that know how to layout Containers
based on a layout constraints object.

This interface extends the LayoutManager interface to deal with layouts
explicitly in terms of constraint objects that specify how and where
components should be added to the layout.
<p>
This minimal extension to LayoutManager is intended for tool
providers who wish to the creation of constraint-based layouts.
It does not yet provide full, general support for custom
constraint-based layout managers.

@see LayoutManager
@see Container

@author      Jonni Kanerva
"
      classrelation 747010 // <generalisation>
	relation 747010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 747010 // <generalisation>
	  b parent class_ref 349698 // LayoutManager
      end

      operation 2355970 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout, using the specified
constraint object.
@param comp the component to be added
@param constraints  where/how the component is added to the layout.
"
      end

      operation 2356098 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the maximum size dimensions for the specified container,
given the components it contains.
@see java.awt.Component#getMaximumSize
@see LayoutManager
"
      end

      operation 2356226 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 2356354 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 2356482 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the layout, indicating that if the layout manager
has cached information it should be discarded.
"
      end
    end

    class 426882 "GridBagConstraints"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GridBagConstraints</code> class specifies constraints
for components that are laid out using the
<code>GridBagLayout</code> class.

@author Doug Stein
@author Bill Spitzak (orignial NeWS &amp; OLIT implementation)
@see java.awt.GridBagLayout
@since JDK1.0
"
      classrelation 2924034 // <realization>
	relation 2924034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2924034 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2924162 // <realization>
	relation 2924162 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2924162 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1379586 "RELATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that this component is the next-to-last component in its
column or row (<code>gridwidth</code>, <code>gridheight</code>),
or that this component be placed next to the previously added
component (<code>gridx</code>, <code>gridy</code>).
@see      java.awt.GridBagConstraints#gridwidth
@see      java.awt.GridBagConstraints#gridheight
@see      java.awt.GridBagConstraints#gridx
@see      java.awt.GridBagConstraints#gridy

"
      end

      attribute 1379714 "REMAINDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that this component is the
last component in its column or row.

"
      end

      attribute 1379842 "NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Do not resize the component.

"
      end

      attribute 1379970 "BOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Resize the component both horizontally and vertically.

"
      end

      attribute 1380098 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Resize the component horizontally but not vertically.

"
      end

      attribute 1380226 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Resize the component vertically but not horizontally.

"
      end

      attribute 1380354 "CENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component in the center of its display area.

"
      end

      attribute 1380482 "NORTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the top of its display area,
centered horizontally.

"
      end

      attribute 1380610 "NORTHEAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the top-right corner of its display area.

"
      end

      attribute 1380738 "EAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component on the right side of its display area,
centered vertically.

"
      end

      attribute 1380866 "SOUTHEAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the bottom-right corner of its display area.

"
      end

      attribute 1380994 "SOUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the bottom of its display area, centered
horizontally.

"
      end

      attribute 1381122 "SOUTHWEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the bottom-left corner of its display area.

"
      end

      attribute 1381250 "WEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component on the left side of its display area,
centered vertically.

"
      end

      attribute 1381378 "NORTHWEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Put the component at the top-left corner of its display area.

"
      end

      attribute 1381506 "PAGE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component centered along the edge of its display area
associated with the start of a page for the current
{@code ComponentOrientation}.  Equal to NORTH for horizontal
orientations.

"
      end

      attribute 1381634 "PAGE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component centered along the edge of its display area
associated with the end of a page for the current
{@code ComponentOrientation}.  Equal to SOUTH for horizontal
orientations.

"
      end

      attribute 1381762 "LINE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component centered along the edge of its display area where
lines of text would normally begin for the current
{@code ComponentOrientation}.  Equal to WEST for horizontal,
left-to-right orientations and EAST for horizontal, right-to-left
orientations.

"
      end

      attribute 1381890 "LINE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component centered along the edge of its display area where
lines of text would normally end for the current
{@code ComponentOrientation}.  Equal to EAST for horizontal,
left-to-right orientations and WEST for horizontal, right-to-left
orientations.

"
      end

      attribute 1382018 "FIRST_LINE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component in the corner of its display area where
the first line of text on a page would normally begin for the current
{@code ComponentOrientation}.  Equal to NORTHWEST for horizontal,
left-to-right orientations and NORTHEAST for horizontal, right-to-left
orientations.

"
      end

      attribute 1382146 "FIRST_LINE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component in the corner of its display area where
the first line of text on a page would normally end for the current
{@code ComponentOrientation}.  Equal to NORTHEAST for horizontal,
left-to-right orientations and NORTHWEST for horizontal, right-to-left
orientations.

"
      end

      attribute 1382274 "LAST_LINE_START"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component in the corner of its display area where
the last line of text on a page would normally start for the current
{@code ComponentOrientation}.  Equal to SOUTHWEST for horizontal,
left-to-right orientations and SOUTHEAST for horizontal, right-to-left
orientations.

"
      end

      attribute 1382402 "LAST_LINE_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Place the component in the corner of its display area where
the last line of text on a page would normally end for the current
{@code ComponentOrientation}.  Equal to SOUTHEAST for horizontal,
left-to-right orientations and SOUTHWEST for horizontal, right-to-left
orientations.

"
      end

      attribute 1382530 "BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x100"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally centered and
vertically aligned along the baseline of the prevailing row.
If the component does not have a baseline it will be vertically
centered.

@since 1.6

"
      end

      attribute 1382658 "BASELINE_LEADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x200"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
leading edge.  For components with a left-to-right orientation,
the leading edge is the left edge.  Vertically the component is
aligned along the baseline of the prevailing row.  If the
component does not have a baseline it will be vertically
centered.

@since 1.6

"
      end

      attribute 1382786 "BASELINE_TRAILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x300"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
trailing edge.  For components with a left-to-right
orientation, the trailing edge is the right edge.  Vertically
the component is aligned along the baseline of the prevailing
row.  If the component does not have a baseline it will be
vertically centered.

@since 1.6

"
      end

      attribute 1382914 "ABOVE_BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x400"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally centered.  Vertically
the component is positioned so that its bottom edge touches
the baseline of the starting row.  If the starting row does not
have a baseline it will be vertically centered.

@since 1.6

"
      end

      attribute 1383042 "ABOVE_BASELINE_LEADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
leading edge.  For components with a left-to-right orientation,
the leading edge is the left edge.  Vertically the component is
positioned so that its bottom edge touches the baseline of the
starting row.  If the starting row does not have a baseline it
will be vertically centered.

@since 1.6

"
      end

      attribute 1383170 "ABOVE_BASELINE_TRAILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x600"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
trailing edge.  For components with a left-to-right
orientation, the trailing edge is the right edge.  Vertically
the component is positioned so that its bottom edge touches
the baseline of the starting row.  If the starting row does not
have a baseline it will be vertically centered.

@since 1.6

"
      end

      attribute 1383298 "BELOW_BASELINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x700"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally centered.  Vertically
the component is positioned so that its top edge touches the
baseline of the starting row.  If the starting row does not
have a baseline it will be vertically centered.

@since 1.6

"
      end

      attribute 1383426 "BELOW_BASELINE_LEADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x800"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
leading edge.  For components with a left-to-right orientation,
the leading edge is the left edge.  Vertically the component is
positioned so that its top edge touches the baseline of the
starting row.  If the starting row does not have a baseline it
will be vertically centered.

@since 1.6

"
      end

      attribute 1383554 "BELOW_BASELINE_TRAILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x900"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Possible value for the <code>anchor</code> field.  Specifies
that the component should be horizontally placed along the
trailing edge.  For components with a left-to-right
orientation, the trailing edge is the right edge.  Vertically
the component is positioned so that its top edge touches the
baseline of the starting row.  If the starting row does not
have a baseline it will be vertically centered.

@since 1.6

"
      end

      attribute 1383682 "gridx"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies the cell containing the leading edge of the component's
display area, where the first cell in a row has <code>gridx=0</code>.
The leading edge of a component's display area is its left edge for
a horizontal, left-to-right container and its right edge for a
horizontal, right-to-left container.
The value
<code>RELATIVE</code> specifies that the component be placed
immediately following the component that was added to the container
just before this component was added.
<p>
The default value is <code>RELATIVE</code>.
<code>gridx</code> should be a non-negative value.
@serial
@see #clone()
@see java.awt.GridBagConstraints#gridy
@see java.awt.ComponentOrientation

"
      end

      attribute 1383810 "gridy"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies the cell at the top of the component's display area,
where the topmost cell has <code>gridy=0</code>. The value
<code>RELATIVE</code> specifies that the component be placed just
below the component that was added to the container just before
this component was added.
<p>
The default value is <code>RELATIVE</code>.
<code>gridy</code> should be a non-negative value.
@serial
@see #clone()
@see java.awt.GridBagConstraints#gridx

"
      end

      attribute 1383938 "gridwidth"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies the number of cells in a row for the component's
display area.
<p>
Use <code>REMAINDER</code> to specify that the component's
display area will be from <code>gridx</code> to the last
cell in the row.
Use <code>RELATIVE</code> to specify that the component's
display area will be from <code>gridx</code> to the next
to the last one in its row.
<p>
<code>gridwidth</code> should be non-negative and the default
value is 1.
@serial
@see #clone()
@see java.awt.GridBagConstraints#gridheight

"
      end

      attribute 1384066 "gridheight"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies the number of cells in a column for the component's
display area.
<p>
Use <code>REMAINDER</code> to specify that the component's
display area will be from <code>gridy</code> to the last
cell in the column.
Use <code>RELATIVE</code> to specify that the component's
display area will be from <code>gridy</code> to the next
to the last one in its column.
<p>
<code>gridheight</code> should be a non-negative value and the
default value is 1.
@serial
@see #clone()
@see java.awt.GridBagConstraints#gridwidth

"
      end

      attribute 1384194 "weightx"
	public explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies how to distribute extra horizontal space.
<p>
The grid bag layout manager calculates the weight of a column to
be the maximum <code>weightx</code> of all the components in a
column. If the resulting layout is smaller horizontally than the area
it needs to fill, the extra space is distributed to each column in
proportion to its weight. A column that has a weight of zero receives
no extra space.
<p>
If all the weights are zero, all the extra space appears between
the grids of the cell and the left and right edges.
<p>
The default value of this field is <code>0</code>.
<code>weightx</code> should be a non-negative value.
@serial
@see #clone()
@see java.awt.GridBagConstraints#weighty

"
      end

      attribute 1384322 "weighty"
	public explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies how to distribute extra vertical space.
<p>
The grid bag layout manager calculates the weight of a row to be
the maximum <code>weighty</code> of all the components in a row.
If the resulting layout is smaller vertically than the area it
needs to fill, the extra space is distributed to each row in
proportion to its weight. A row that has a weight of zero receives no
extra space.
<p>
If all the weights are zero, all the extra space appears between
the grids of the cell and the top and bottom edges.
<p>
The default value of this field is <code>0</code>.
<code>weighty</code> should be a non-negative value.
@serial
@see #clone()
@see java.awt.GridBagConstraints#weightx

"
      end

      attribute 1384450 "anchor"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is used when the component is smaller than its
display area. It determines where, within the display area, to
place the component.
<p> There are three kinds of possible values: orientation
relative, baseline relative and absolute.  Orientation relative
values are interpreted relative to the container's component
orientation property, baseline relative values are interpreted
relative to the baseline and absolute values are not.  The
absolute values are:
<code>CENTER</code>, <code>NORTH</code>, <code>NORTHEAST</code>,
<code>EAST</code>, <code>SOUTHEAST</code>, <code>SOUTH</code>,
<code>SOUTHWEST</code>, <code>WEST</code>, and <code>NORTHWEST</code>.
The orientation relative values are: <code>PAGE_START</code>,
<code>PAGE_END</code>,
<code>LINE_START</code>, <code>LINE_END</code>,
<code>FIRST_LINE_START</code>, <code>FIRST_LINE_END</code>,
<code>LAST_LINE_START</code> and <code>LAST_LINE_END</code>.  The
baseline relative values are:
<code>BASELINE</code>, <code>BASELINE_LEADING</code>,
<code>BASELINE_TRAILING</code>,
<code>ABOVE_BASELINE</code>, <code>ABOVE_BASELINE_LEADING</code>,
<code>ABOVE_BASELINE_TRAILING</code>,
<code>BELOW_BASELINE</code>, <code>BELOW_BASELINE_LEADING</code>,
and <code>BELOW_BASELINE_TRAILING</code>.
The default value is <code>CENTER</code>.
@serial
@see #clone()
@see java.awt.ComponentOrientation

"
      end

      attribute 1384578 "fill"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is used when the component's display area is larger
than the component's requested size. It determines whether to
resize the component, and if so, how.
<p>
The following values are valid for <code>fill</code>:

<ul>
<li>
<code>NONE</code>: Do not resize the component.
<li>
<code>HORIZONTAL</code>: Make the component wide enough to fill
        its display area horizontally, but do not change its height.
<li>
<code>VERTICAL</code>: Make the component tall enough to fill its
        display area vertically, but do not change its width.
<li>
<code>BOTH</code>: Make the component fill its display area
        entirely.
</ul>
<p>
The default value is <code>NONE</code>.
@serial
@see #clone()

"
      end

      classrelation 2924290 // insets (<unidirectional association>)
	relation 2924290 --->
	  a role_name "insets" public
	    comment "
This field specifies the external padding of the component, the
minimum amount of space between the component and the edges of its
display area.
<p>
The default value is <code>new Insets(0, 0, 0, 0)</code>.
@serial
@see #clone()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2924290 // insets (<unidirectional association>)
	  b parent class_ref 343938 // Insets
      end

      attribute 1384706 "ipadx"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field specifies the internal padding of the component, how much
space to add to the minimum width of the component. The width of
the component is at least its minimum width plus
<code>ipadx</code> pixels.
<p>
The default value is <code>0</code>.
@serial
@see #clone()
@see java.awt.GridBagConstraints#ipady

"
      end

      attribute 1384834 "ipady"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field specifies the internal padding, that is, how much
space to add to the minimum height of the component. The height of
the component is at least its minimum height plus
<code>ipady</code> pixels.
<p>
The default value is 0.
@serial
@see #clone()
@see java.awt.GridBagConstraints#ipadx

"
      end

      attribute 1384962 "tempX"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary place holder for the x coordinate.
@serial

"
      end

      attribute 1385090 "tempY"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary place holder for the y coordinate.
@serial

"
      end

      attribute 1385218 "tempWidth"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary place holder for the Width of the component.
@serial

"
      end

      attribute 1385346 "tempHeight"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Temporary place holder for the Height of the component.
@serial

"
      end

      attribute 1385474 "minWidth"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum width of the component.  It is used to calculate
<code>ipady</code>, where the default will be 0.
@serial
@see #ipady

"
      end

      attribute 1385602 "minHeight"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum height of the component. It is used to calculate
<code>ipadx</code>, where the default will be 0.
@serial
@see #ipadx

"
      end

      attribute 1385730 "ascent"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following fields are only used if the anchor is
 one of BASELINE, BASELINE_LEADING or BASELINE_TRAILING.
 ascent and descent include the insets and ipady values.
"
      end

      attribute 1385858 "descent"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2924418 // baselineResizeBehavior (<unidirectional association>)
	relation 2924418 --->
	  a role_name "baselineResizeBehavior" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2924418 // baselineResizeBehavior (<unidirectional association>)
	  b parent class_ref 343170 // BaselineResizeBehavior
      end

      attribute 1385986 "centerPadding"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The folllowing two fields are used if the baseline type is
 CENTER_OFFSET.
 centerPadding is either 0 or 1 and indicates if
 the height needs to be padded by one when calculating where the
 baseline lands
"
      end

      attribute 1386114 "centerOffset"
	package explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Where the baseline lands relative to the center of the component.
"
      end

      attribute 1386242 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1000070633030801713L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6237954 "GridBagConstraints"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>GridBagConstraint</code> object with
all of its fields set to their default value.
"
      end

      operation 6238082 "GridBagConstraints"
	public explicit_return_type ""
	nparams 11
	  param in name "gridx" explicit_type "int"
	  param in name "gridy" explicit_type "int"
	  param in name "gridwidth" explicit_type "int"
	  param in name "gridheight" explicit_type "int"
	  param in name "weightx" explicit_type "double"
	  param in name "weighty" explicit_type "double"
	  param in name "anchor" explicit_type "int"
	  param in name "fill" explicit_type "int"
	  param inout name "insets" type class_ref 343938 // Insets
	  param in name "ipadx" explicit_type "int"
	  param in name "ipady" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>GridBagConstraints</code> object with
all of its fields set to the passed-in arguments.

Note: Because the use of this constructor hinders readability
of source code, this constructor should only be used by
automatic source code generation tools.

@param gridx     The initial gridx value.
@param gridy     The initial gridy value.
@param gridwidth The initial gridwidth value.
@param gridheight        The initial gridheight value.
@param weightx   The initial weightx value.
@param weighty   The initial weighty value.
@param anchor    The initial anchor value.
@param fill      The initial fill value.
@param insets    The initial insets value.
@param ipadx     The initial ipadx value.
@param ipady     The initial ipady value.

@see java.awt.GridBagConstraints#gridx
@see java.awt.GridBagConstraints#gridy
@see java.awt.GridBagConstraints#gridwidth
@see java.awt.GridBagConstraints#gridheight
@see java.awt.GridBagConstraints#weightx
@see java.awt.GridBagConstraints#weighty
@see java.awt.GridBagConstraints#anchor
@see java.awt.GridBagConstraints#fill
@see java.awt.GridBagConstraints#insets
@see java.awt.GridBagConstraints#ipadx
@see java.awt.GridBagConstraints#ipady

@since 1.2
"
      end

      operation 6238210 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a copy of this grid bag constraint.
@return     a copy of this grid bag constraint
"
      end

      operation 6238338 "isVerticallyResizable"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 444674 "Polygon"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Polygon</code> class encapsulates a description of a
closed, two-dimensional region within a coordinate space. This
region is bounded by an arbitrary number of line segments, each of
which is one side of the polygon. Internally, a polygon
comprises of a list of {@code (x,y)}
coordinate pairs, where each pair defines a <i>vertex</i> of the
polygon, and two successive pairs are the endpoints of a
line that is a side of the polygon. The first and final
pairs of {@code (x,y)} points are joined by a line segment
that closes the polygon.  This <code>Polygon</code> is defined with
an even-odd winding rule.  See
{@link java.awt.geom.PathIterator#WIND_EVEN_ODD WIND_EVEN_ODD}
for a definition of the even-odd winding rule.
This class's hit-testing methods, which include the
<code>contains</code>, <code>intersects</code> and <code>inside</code>
methods, use the <i>insideness</i> definition described in the
{@link Shape} class comments.

@author      Sami Shaio
@see Shape
@author      Herb Jellinek
@since       1.0
"
      classrelation 2962690 // <realization>
	relation 2962690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2962690 // <realization>
	  b parent class_ref 379394 // Shape
      end

      classrelation 2962818 // <realization>
	relation 2962818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2962818 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1417474 "npoints"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The total number of points.  The value of <code>npoints</code>
represents the number of valid points in this <code>Polygon</code>
and might be less than the number of elements in
{@link #xpoints xpoints} or {@link #ypoints ypoints}.
This value can be NULL.

@serial
@see #addPoint(int, int)
@since 1.0

"
      end

      attribute 1417602 "xpoints"
	public explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array of X coordinates.  The number of elements in
this array might be more than the number of X coordinates
in this <code>Polygon</code>.  The extra elements allow new points
to be added to this <code>Polygon</code> without re-creating this
array.  The value of {@link #npoints npoints} is equal to the
number of valid points in this <code>Polygon</code>.

@serial
@see #addPoint(int, int)
@since 1.0

"
      end

      attribute 1417730 "ypoints"
	public explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array of Y coordinates.  The number of elements in
this array might be more than the number of Y coordinates
in this <code>Polygon</code>.  The extra elements allow new points
to be added to this <code>Polygon</code> without re-creating this
array.  The value of <code>npoints</code> is equal to the
number of valid points in this <code>Polygon</code>.

@serial
@see #addPoint(int, int)
@since 1.0

"
      end

      classrelation 2962946 // bounds (<unidirectional association>)
	relation 2962946 --->
	  a role_name "bounds" protected
	    comment "
The bounds of this {@code Polygon}.
This value can be null.

@serial
@see #getBoundingBox()
@see #getBounds()
@since 1.0

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2962946 // bounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      attribute 1417858 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6460061437900069969L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      attribute 1417986 "MIN_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default length for xpoints and ypoints.

"
      end

      operation 6301442 "Polygon"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty polygon.
@since 1.0
"
      end

      operation 6301570 "Polygon"
	public explicit_return_type ""
	nparams 3
	  param inout name "xpoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "ypoints" explicit_type "int"
	multiplicity "[]"
	  param in name "npoints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and initializes a <code>Polygon</code> from the specified
parameters.
@param xpoints an array of X coordinates
@param ypoints an array of Y coordinates
@param npoints the total number of points in the
                         <code>Polygon</code>
@exception  NegativeArraySizeException if the value of
                      <code>npoints</code> is negative.
@exception  IndexOutOfBoundsException if <code>npoints</code> is
            greater than the length of <code>xpoints</code>
            or the length of <code>ypoints</code>.
@exception  NullPointerException if <code>xpoints</code> or
            <code>ypoints</code> is <code>null</code>.
@since 1.0
"
      end

      operation 6301698 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets this <code>Polygon</code> object to an empty polygon.
The coordinate arrays and the data in them are left untouched
but the number of points is reset to zero to mark the old
vertex data as invalid and to start accumulating new vertex
data at the beginning.
All internally-cached data relating to the old vertices
are discarded.
Note that since the coordinate arrays from before the reset
are reused, creating a new empty <code>Polygon</code> might
be more memory efficient than resetting the current one if
the number of vertices in the new polygon data is significantly
smaller than the number of vertices in the data from before the
reset.
@see         java.awt.Polygon#invalidate
@since 1.4
"
      end

      operation 6301826 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates or flushes any internally-cached data that depends
on the vertex coordinates of this <code>Polygon</code>.
This method should be called after any direct manipulation
of the coordinates in the <code>xpoints</code> or
<code>ypoints</code> arrays to avoid inconsistent results
from methods such as <code>getBounds</code> or <code>contains</code>
that might cache data from earlier computations relating to
the vertex coordinates.
@see         java.awt.Polygon#getBounds
@since 1.4
"
      end

      operation 6301954 "translate"
	public explicit_return_type "void"
	nparams 2
	  param in name "deltaX" explicit_type "int"
	  param in name "deltaY" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the vertices of the <code>Polygon</code> by
<code>deltaX</code> along the x axis and by
<code>deltaY</code> along the y axis.
@param deltaX the amount to translate along the X axis
@param deltaY the amount to translate along the Y axis
@since 1.1
"
      end

      operation 6302082 "calculateBounds"
	package explicit_return_type "void"
	nparams 3
	  param inout name "xpoints" explicit_type "int"
	multiplicity "[]"
	  param inout name "ypoints" explicit_type "int"
	multiplicity "[]"
	  param in name "npoints" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the bounding box of the points passed to the constructor.
Sets <code>bounds</code> to the result.
@param xpoints[] array of <i>x</i> coordinates
@param ypoints[] array of <i>y</i> coordinates
@param npoints the total number of points
"
      end

      operation 6302210 "updateBounds"
	package explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes the bounding box to accommodate the specified coordinates.
@param x,&nbsp;y the specified coordinates
"
      end

      operation 6302338 "addPoint"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified coordinates to this <code>Polygon</code>.
<p>
If an operation that calculates the bounding box of this
<code>Polygon</code> has already been performed, such as
<code>getBounds</code> or <code>contains</code>, then this
method updates the bounding box.
@param       x the specified X coordinate
@param       y the specified Y coordinate
@see         java.awt.Polygon#getBounds
@see         java.awt.Polygon#contains
@since 1.0
"
      end

      operation 6302466 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bounding box of this <code>Polygon</code>.
The bounding box is the smallest {@link Rectangle} whose
sides are parallel to the x and y axes of the
coordinate space, and can completely contain the <code>Polygon</code>.
@return a <code>Rectangle</code> that defines the bounds of this
<code>Polygon</code>.
@since 1.1
"
      end

      operation 6302594 "getBoundingBox"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the bounds of this <code>Polygon</code>.
@return the bounds of this <code>Polygon</code>.
@deprecated As of JDK version 1.1,
replaced by <code>getBounds()</code>.
@since 1.0
"
      end

      operation 6302722 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified {@link Point} is inside this
<code>Polygon</code>.
@param p the specified <code>Point</code> to be tested
@return <code>true</code> if the <code>Polygon</code> contains the
                 <code>Point</code>; <code>false</code> otherwise.
@see #contains(double, double)
@since 1.0
"
      end

      operation 6302850 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified coordinates are inside this
<code>Polygon</code>.
<p>
@param x the specified X coordinate to be tested
@param y the specified Y coordinate to be tested
@return {@code true} if this {@code Polygon} contains
        the specified coordinates {@code (x,y)};
        {@code false} otherwise.
@see #contains(double, double)
@since 1.1
"
      end

      operation 6302978 "inside"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determines whether the specified coordinates are contained in this
<code>Polygon</code>.
@param x the specified X coordinate to be tested
@param y the specified Y coordinate to be tested
@return {@code true} if this {@code Polygon} contains
        the specified coordinates {@code (x,y)};
        {@code false} otherwise.
@see #contains(double, double)
@deprecated As of JDK version 1.1,
replaced by <code>contains(int, int)</code>.
@since 1.0
"
      end

      operation 6303106 "getBounds2D"
	public return_type class_ref 380674 // Rectangle2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6303234 "contains"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6303362 "getCrossings"
	private explicit_return_type "Crossings"
	nparams 4
	  param in name "xlo" explicit_type "double"
	  param in name "ylo" explicit_type "double"
	  param in name "xhi" explicit_type "double"
	  param in name "yhi" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6303490 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 380802 // Point2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6303618 "intersects"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "w" explicit_type "double"
	  param in name "h" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6303746 "intersects"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6303874 "contains"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "w" explicit_type "double"
	  param in name "h" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6304002 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
@since 1.2
"
      end

      operation 6304130 "getPathIterator"
	public return_type class_ref 380930 // PathIterator
	nparams 1
	  param inout name "at" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator object that iterates along the boundary of this
<code>Polygon</code> and provides access to the geometry
of the outline of this <code>Polygon</code>.  An optional
{@link AffineTransform} can be specified so that the coordinates
returned in the iteration are transformed accordingly.
@param at an optional <code>AffineTransform</code> to be applied to the
         coordinates as they are returned in the iteration, or
         <code>null</code> if untransformed coordinates are desired
@return a {@link PathIterator} object that provides access to the
         geometry of this <code>Polygon</code>.
@since 1.2
"
      end

      operation 6304258 "getPathIterator"
	public return_type class_ref 380930 // PathIterator
	nparams 2
	  param inout name "at" type class_ref 381058 // AffineTransform
	  param in name "flatness" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator object that iterates along the boundary of
the <code>Shape</code> and provides access to the geometry of the
outline of the <code>Shape</code>.  Only SEG_MOVETO, SEG_LINETO, and
SEG_CLOSE point types are returned by the iterator.
Since polygons are already flat, the <code>flatness</code> parameter
is ignored.  An optional <code>AffineTransform</code> can be specified
in which case the coordinates returned in the iteration are transformed
accordingly.
@param at an optional <code>AffineTransform</code> to be applied to the
         coordinates as they are returned in the iteration, or
         <code>null</code> if untransformed coordinates are desired
@param flatness the maximum amount that the control points
         for a given curve can vary from colinear before a subdivided
         curve is replaced by a straight line connecting the
         endpoints.  Since polygons are already flat the
         <code>flatness</code> parameter is ignored.
@return a <code>PathIterator</code> object that provides access to the
         <code>Shape</code> object's geometry.
@since 1.2
"
      end

      class 873986 "PolygonPathIterator"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2963074 // <realization>
	  relation 2963074 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2963074 // <realization>
	    b parent class_ref 380930 // PathIterator
	end

	classrelation 2963202 // poly (<unidirectional association>)
	  relation 2963202 --->
	    a role_name "poly" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2963202 // poly (<unidirectional association>)
	    b parent class_ref 444674 // Polygon
	end

	classrelation 2963330 // transform (<unidirectional association>)
	  relation 2963330 --->
	    a role_name "transform" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2963330 // transform (<unidirectional association>)
	    b parent class_ref 381058 // AffineTransform
	end

	attribute 1418114 "index"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6304386 "PolygonPathIterator"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "pg" type class_ref 444674 // Polygon
	    param inout name "at" type class_ref 381058 // AffineTransform
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6304514 "getWindingRule"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the winding rule for determining the interior of the
path.
@return an integer representing the current winding rule.
@see PathIterator#WIND_NON_ZERO
"
	end

	operation 6304642 "isDone"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Tests if there are more points to read.
@return <code>true</code> if there are more points to read;
         <code>false</code> otherwise.
"
	end

	operation 6304770 "next"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Moves the iterator forwards, along the primary direction of
traversal, to the next segment of the path when there are
more points in that direction.
"
	end

	operation 6304898 "currentSegment"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "coords" explicit_type "float"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the coordinates and type of the current path segment in
the iteration.
The return value is the path segment type:
SEG_MOVETO, SEG_LINETO, or SEG_CLOSE.
A <code>float</code> array of length 2 must be passed in and
can be used to store the coordinates of the point(s).
Each point is stored as a pair of <code>float</code> x,&nbsp;y
coordinates.  SEG_MOVETO and SEG_LINETO types return one
point, and SEG_CLOSE does not return any points.
@param coords a <code>float</code> array that specifies the
coordinates of the point(s)
@return an integer representing the type and coordinates of the
             current path segment.
@see PathIterator#SEG_MOVETO
@see PathIterator#SEG_LINETO
@see PathIterator#SEG_CLOSE
"
	end

	operation 6305026 "currentSegment"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "coords" explicit_type "double"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the coordinates and type of the current path segment in
the iteration.
The return value is the path segment type:
SEG_MOVETO, SEG_LINETO, or SEG_CLOSE.
A <code>double</code> array of length 2 must be passed in and
can be used to store the coordinates of the point(s).
Each point is stored as a pair of <code>double</code> x,&nbsp;y
coordinates.
SEG_MOVETO and SEG_LINETO types return one point,
and SEG_CLOSE does not return any points.
@param coords a <code>double</code> array that specifies the
coordinates of the point(s)
@return an integer representing the type and coordinates of the
             current path segment.
@see PathIterator#SEG_MOVETO
@see PathIterator#SEG_LINETO
@see PathIterator#SEG_CLOSE
"
	end
      end
    end

    class 455554 "LinearGradientPaint"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code LinearGradientPaint} class provides a way to fill
a {@link java.awt.Shape} with a linear color gradient pattern.  The user
may specify two or more gradient colors, and this paint will provide an
interpolation between each color.  The user also specifies start and end
points which define where in user space the color gradient should begin
and end.
<p>
The user must provide an array of floats specifying how to distribute the
colors along the gradient.  These values should range from 0.0 to 1.0 and
act like keyframes along the gradient (they mark where the gradient should
be exactly a particular color).
<p>
In the event that the user does not set the first keyframe value equal
to 0 and/or the last keyframe value equal to 1, keyframes will be created
at these positions and the first and last colors will be replicated there.
So, if a user specifies the following arrays to construct a gradient:<br>
<pre>
    {Color.BLUE, Color.RED}, {.3f, .7f}
</pre>
this will be converted to a gradient with the following keyframes:<br>
<pre>
    {Color.BLUE, Color.BLUE, Color.RED, Color.RED}, {0f, .3f, .7f, 1f}
</pre>

<p>
The user may also select what action the {@code LinearGradientPaint} object
takes when it is filling the space outside the start and end points by
setting {@code CycleMethod} to either {@code REFLECTION} or {@code REPEAT}.
The distances between any two colors in any of the reflected or repeated
copies of the gradient are the same as the distance between those same two
colors between the start and end points.
Note that some minor variations in distances may occur due to sampling at
the granularity of a pixel.
If no cycle method is specified, {@code NO_CYCLE} will be chosen by
default, which means the endpoint colors will be used to fill the
remaining area.
<p>
The colorSpace parameter allows the user to specify in which colorspace
the interpolation should be performed, default sRGB or linearized RGB.

<p>
The following code demonstrates typical usage of
{@code LinearGradientPaint}:
<pre>
    Point2D start = new Point2D.Float(0, 0);
    Point2D end = new Point2D.Float(50, 50);
    float[] dist = {0.0f, 0.2f, 1.0f};
    Color[] colors = {Color.RED, Color.WHITE, Color.BLUE};
    LinearGradientPaint p =
        new LinearGradientPaint(start, end, dist, colors);
</pre>
<p>
This code will create a {@code LinearGradientPaint} which interpolates
between red and white for the first 20% of the gradient and between white
and blue for the remaining 80%.

<p>
This image demonstrates the example code above for each
of the three cycle methods:
<center>
<img src = \"doc-files/LinearGradientPaint.png\"
alt=\"image showing the output of the example code\">
</center>

@see java.awt.Paint
@see java.awt.Graphics2D#setPaint
@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
@since 1.6
"
      classrelation 2932482 // <generalisation>
	relation 2932482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2932482 // <generalisation>
	  b parent class_ref 870914 // MultipleGradientPaint
      end

      classrelation 2932610 // start (<unidirectional association>)
	relation 2932610 --->
	  a role_name "start" const_relation private
	    comment " Gradient start and end points. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2932610 // start (<unidirectional association>)
	  b parent class_ref 380802 // Point2D
      end

      classrelation 2932738 // end (<unidirectional association>)
	relation 2932738 --->
	  a role_name "end" const_relation private
	    comment " Gradient start and end points. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2932738 // end (<unidirectional association>)
	  b parent class_ref 380802 // Point2D
      end

      operation 6258050 "LinearGradientPaint"
	public explicit_return_type ""
	nparams 6
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinearGradientPaint} with a default
{@code NO_CYCLE} repeating method and {@code SRGB} color space.

@param startX the X coordinate of the gradient axis start point
              in user space
@param startY the Y coordinate of the gradient axis start point
              in user space
@param endX   the X coordinate of the gradient axis end point
              in user space
@param endY   the Y coordinate of the gradient axis end point
              in user space
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null,
@throws IllegalArgumentException
if start and end points are the same points,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6258178 "LinearGradientPaint"
	public explicit_return_type ""
	nparams 7
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinearGradientPaint} with a default {@code SRGB}
color space.

@param startX the X coordinate of the gradient axis start point
              in user space
@param startY the Y coordinate of the gradient axis start point
              in user space
@param endX   the X coordinate of the gradient axis end point
              in user space
@param endY   the Y coordinate of the gradient axis end point
              in user space
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if start and end points are the same points,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6258306 "LinearGradientPaint"
	public explicit_return_type ""
	nparams 4
	  param inout name "start" type class_ref 380802 // Point2D
	  param inout name "end" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinearGradientPaint} with a default
{@code NO_CYCLE} repeating method and {@code SRGB} color space.

@param start the gradient axis start {@code Point2D} in user space
@param end the gradient axis end {@code Point2D} in user space
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value

@throws NullPointerException
if one of the points is null,
or {@code fractions} array is null,
or {@code colors} array is null
@throws IllegalArgumentException
if start and end points are the same points,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6258434 "LinearGradientPaint"
	public explicit_return_type ""
	nparams 5
	  param inout name "start" type class_ref 380802 // Point2D
	  param inout name "end" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinearGradientPaint} with a default {@code SRGB}
color space.

@param start the gradient axis start {@code Point2D} in user space
@param end the gradient axis end {@code Point2D} in user space
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if one of the points is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if start and end points are the same points,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6258562 "LinearGradientPaint"
	public explicit_return_type ""
	nparams 7
	  param inout name "start" type class_ref 380802 // Point2D
	  param inout name "end" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	  param inout name "gradientTransform" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({ \"startPoint\", \"endPoint\", \"fractions\", \"colors\", \"cycleMethod\", \"colorSpace\", \"transform\" })
"
	
	
	
	comment "Constructs a {@code LinearGradientPaint}.

@param start the gradient axis start {@code Point2D} in user space
@param end the gradient axis end {@code Point2D} in user space
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}
@param colorSpace which color space to use for interpolation,
                  either {@code SRGB} or {@code LINEAR_RGB}
@param gradientTransform transform to apply to the gradient

@throws NullPointerException
if one of the points is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null,
or {@code colorSpace} is null,
or {@code gradientTransform} is null
@throws IllegalArgumentException
if start and end points are the same points,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6258690 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "transform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate a linear color gradient pattern.
See the {@link Paint#createContext specification} of the
method in the {@link Paint} interface for information
on null parameter handling.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param deviceBounds the device space bounding box
                    of the graphics primitive being rendered.
@param userBounds the user space bounding box
                  of the graphics primitive being rendered.
@param transform the {@link AffineTransform} from user
             space into device space.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
@return the {@code PaintContext} for
        generating color patterns.
@see Paint
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end

      operation 6258818 "getStartPoint"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the start point of the gradient axis.

@return a {@code Point2D} object that is a copy of the point
that anchors the first color of this {@code LinearGradientPaint}
"
      end

      operation 6258946 "getEndPoint"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the end point of the gradient axis.

@return a {@code Point2D} object that is a copy of the point
that anchors the last color of this {@code LinearGradientPaint}
"
      end
    end

    class 455682 "RadialGradientPaint"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code RadialGradientPaint} class provides a way to fill a shape with
a circular radial color gradient pattern. The user may specify 2 or more
gradient colors, and this paint will provide an interpolation between
each color.
<p>
The user must specify the circle controlling the gradient pattern,
which is described by a center point and a radius.  The user can also
specify a separate focus point within that circle, which controls the
location of the first color of the gradient.  By default the focus is
set to be the center of the circle.
<p>
This paint will map the first color of the gradient to the focus point,
and the last color to the perimeter of the circle, interpolating
smoothly for any in-between colors specified by the user.  Any line drawn
from the focus point to the circumference will thus span all the gradient
colors.
<p>
Specifying a focus point outside of the radius of the circle will cause
the rings of the gradient pattern to be centered on the point just inside
the edge of the circle in the direction of the focus point.
The rendering will internally use this modified location as if it were
the specified focus point.
<p>
The user must provide an array of floats specifying how to distribute the
colors along the gradient.  These values should range from 0.0 to 1.0 and
act like keyframes along the gradient (they mark where the gradient should
be exactly a particular color).
<p>
In the event that the user does not set the first keyframe value equal
to 0 and/or the last keyframe value equal to 1, keyframes will be created
at these positions and the first and last colors will be replicated there.
So, if a user specifies the following arrays to construct a gradient:<br>
<pre>
    {Color.BLUE, Color.RED}, {.3f, .7f}
</pre>
this will be converted to a gradient with the following keyframes:<br>
<pre>
    {Color.BLUE, Color.BLUE, Color.RED, Color.RED}, {0f, .3f, .7f, 1f}
</pre>

<p>
The user may also select what action the {@code RadialGradientPaint} object
takes when it is filling the space outside the circle's radius by
setting {@code CycleMethod} to either {@code REFLECTION} or {@code REPEAT}.
The gradient color proportions are equal for any particular line drawn
from the focus point. The following figure shows that the distance AB
is equal to the distance BC, and the distance AD is equal to the distance DE.
<center>
<img src = \"doc-files/RadialGradientPaint-3.png\" alt=\"image showing the
distance AB=BC, and AD=DE\">
</center>
If the gradient and graphics rendering transforms are uniformly scaled and
the user sets the focus so that it coincides with the center of the circle,
the gradient color proportions are equal for any line drawn from the center.
The following figure shows the distances AB, BC, AD, and DE. They are all equal.
<center>
<img src = \"doc-files/RadialGradientPaint-4.png\" alt=\"image showing the
distance of AB, BC, AD, and DE are all equal\">
</center>
Note that some minor variations in distances may occur due to sampling at
the granularity of a pixel.
If no cycle method is specified, {@code NO_CYCLE} will be chosen by
default, which means the the last keyframe color will be used to fill the
remaining area.
<p>
The colorSpace parameter allows the user to specify in which colorspace
the interpolation should be performed, default sRGB or linearized RGB.

<p>
The following code demonstrates typical usage of
{@code RadialGradientPaint}, where the center and focus points are
the same:
<pre>
    Point2D center = new Point2D.Float(50, 50);
    float radius = 25;
    float[] dist = {0.0f, 0.2f, 1.0f};
    Color[] colors = {Color.RED, Color.WHITE, Color.BLUE};
    RadialGradientPaint p =
        new RadialGradientPaint(center, radius, dist, colors);
</pre>

<p>
This image demonstrates the example code above, with default
(centered) focus for each of the three cycle methods:
<center>
<img src = \"doc-files/RadialGradientPaint-1.png\" alt=\"image showing the
output of the sameple code\">
</center>

<p>
It is also possible to specify a non-centered focus point, as
in the following code:
<pre>
    Point2D center = new Point2D.Float(50, 50);
    float radius = 25;
    Point2D focus = new Point2D.Float(40, 40);
    float[] dist = {0.0f, 0.2f, 1.0f};
    Color[] colors = {Color.RED, Color.WHITE, Color.BLUE};
    RadialGradientPaint p =
        new RadialGradientPaint(center, radius, focus,
                                dist, colors,
                                CycleMethod.NO_CYCLE);
</pre>

<p>
This image demonstrates the previous example code, with non-centered
focus for each of the three cycle methods:
<center>
<img src = \"doc-files/RadialGradientPaint-2.png\" alt=\"image showing the
output of the sample code\">
</center>

@see java.awt.Paint
@see java.awt.Graphics2D#setPaint
@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
@since 1.6
"
      classrelation 2963842 // <generalisation>
	relation 2963842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2963842 // <generalisation>
	  b parent class_ref 870914 // MultipleGradientPaint
      end

      classrelation 2963970 // focus (<unidirectional association>)
	relation 2963970 --->
	  a role_name "focus" const_relation private
	    comment " Focus point which defines the 0% gradient stop X coordinate. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2963970 // focus (<unidirectional association>)
	  b parent class_ref 380802 // Point2D
      end

      classrelation 2964098 // center (<unidirectional association>)
	relation 2964098 --->
	  a role_name "center" const_relation private
	    comment " Center of the circle defining the 100% gradient stop X coordinate. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2964098 // center (<unidirectional association>)
	  b parent class_ref 380802 // Point2D
      end

      attribute 1418754 "radius"
	const_attribute private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Radius of the outermost circle defining the 100% gradient stop. 
"
      end

      operation 6307074 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 5
	  param in name "cx" explicit_type "float"
	  param in name "cy" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code NO_CYCLE} repeating method and {@code SRGB} color space,
using the center as the focus point.

@param cx the X coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param cy the Y coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param radius the radius of the circle defining the extents of the
              color gradient
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307202 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 4
	  param inout name "center" type class_ref 380802 // Point2D
	  param in name "radius" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code NO_CYCLE} repeating method and {@code SRGB} color space,
using the center as the focus point.

@param center the center point, in user space, of the circle defining
              the gradient
@param radius the radius of the circle defining the extents of the
              color gradient
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.

@throws NullPointerException
if {@code center} point is null,
or {@code fractions} array is null,
or {@code colors} array is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307330 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 6
	  param in name "cx" explicit_type "float"
	  param in name "cy" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code SRGB} color space, using the center as the focus point.

@param cx the X coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param cy the Y coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param radius the radius of the circle defining the extents of the
              color gradient
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307458 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 5
	  param inout name "center" type class_ref 380802 // Point2D
	  param in name "radius" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code SRGB} color space, using the center as the focus point.

@param center the center point, in user space, of the circle defining
              the gradient
@param radius the radius of the circle defining the extents of the
              color gradient
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if {@code center} point is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307586 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 8
	  param in name "cx" explicit_type "float"
	  param in name "cy" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param in name "fx" explicit_type "float"
	  param in name "fy" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code SRGB} color space.

@param cx the X coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param cy the Y coordinate in user space of the center point of the
          circle defining the gradient.  The last color of the
          gradient is mapped to the perimeter of this circle.
@param radius the radius of the circle defining the extents of the
              color gradient
@param fx the X coordinate of the point in user space to which the
          first color is mapped
@param fy the Y coordinate of the point in user space to which the
          first color is mapped
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307714 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 6
	  param inout name "center" type class_ref 380802 // Point2D
	  param in name "radius" explicit_type "float"
	  param inout name "focus" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code SRGB} color space.

@param center the center point, in user space, of the circle defining
              the gradient.  The last color of the gradient is mapped
              to the perimeter of this circle.
@param radius the radius of the circle defining the extents of the color
              gradient
@param focus the point in user space to which the first color is mapped
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient. The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if one of the points is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307842 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 8
	  param inout name "center" type class_ref 380802 // Point2D
	  param in name "radius" explicit_type "float"
	  param inout name "focus" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	  param inout name "gradientTransform" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({ \"centerPoint\", \"radius\", \"focusPoint\", \"fractions\", \"colors\", \"cycleMethod\", \"colorSpace\", \"transform\" })
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint}.

@param center the center point in user space of the circle defining the
              gradient.  The last color of the gradient is mapped to
              the perimeter of this circle.
@param radius the radius of the circle defining the extents of the
              color gradient
@param focus the point in user space to which the first color is mapped
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}
@param colorSpace which color space to use for interpolation,
                  either {@code SRGB} or {@code LINEAR_RGB}
@param gradientTransform transform to apply to the gradient

@throws NullPointerException
if one of the points is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null,
or {@code colorSpace} is null,
or {@code gradientTransform} is null
@throws IllegalArgumentException
if {@code radius} is non-positive,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6307970 "RadialGradientPaint"
	public explicit_return_type ""
	nparams 4
	  param inout name "gradientBounds" type class_ref 380674 // Rectangle2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code RadialGradientPaint} with a default
{@code SRGB} color space.
The gradient circle of the {@code RadialGradientPaint} is defined
by the given bounding box.
<p>
This constructor is a more convenient way to express the
following (equivalent) code:<br>

<pre>
    double gw = gradientBounds.getWidth();
    double gh = gradientBounds.getHeight();
    double cx = gradientBounds.getCenterX();
    double cy = gradientBounds.getCenterY();
    Point2D center = new Point2D.Double(cx, cy);

    AffineTransform gradientTransform = new AffineTransform();
    gradientTransform.translate(cx, cy);
    gradientTransform.scale(gw / 2, gh / 2);
    gradientTransform.translate(-cx, -cy);

    RadialGradientPaint gp =
        new RadialGradientPaint(center, 1.0f, center,
                                fractions, colors,
                                cycleMethod,
                                ColorSpaceType.SRGB,
                                gradientTransform);
</pre>

@param gradientBounds the bounding box, in user space, of the circle
                      defining the outermost extent of the gradient
@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors to use in the gradient.  The first color
              is used at the focus point, the last color around the
              perimeter of the circle.
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}

@throws NullPointerException
if {@code gradientBounds} is null,
or {@code fractions} array is null,
or {@code colors} array is null,
or {@code cycleMethod} is null
@throws IllegalArgumentException
if {@code gradientBounds} is empty,
or {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6308098 "createGradientTransform"
	class_operation private return_type class_ref 381058 // AffineTransform
	nparams 1
	  param inout name "r" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6308226 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "transform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate a circular radial color gradient pattern.
See the description of the {@link Paint#createContext createContext} method
for information on null parameter handling.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param deviceBounds the device space bounding box
                    of the graphics primitive being rendered.
@param userBounds the user space bounding box
                  of the graphics primitive being rendered.
@param transform the {@link AffineTransform} from user
             space into device space.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
@return the {@code PaintContext} for
        generating color patterns.
@see Paint
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end

      operation 6308354 "getCenterPoint"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the center point of the radial gradient.

@return a {@code Point2D} object that is a copy of the center point
"
      end

      operation 6308482 "getFocusPoint"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the focus point of the radial gradient.
Note that if the focus point specified when the radial gradient
was constructed lies outside of the radius of the circle, this
method will still return the original focus point even though
the rendering may center the rings of color on a different
point that lies inside the radius.

@return a {@code Point2D} object that is a copy of the focus point
"
      end

      operation 6308610 "getRadius"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the radius of the circle defining the radial gradient.

@return the radius of the circle defining the radial gradient
"
      end
    end

    class 469122 "Dialog"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Dialog is a top-level window with a title and a border
that is typically used to take some form of input from the user.

The size of the dialog includes any area designated for the
border.  The dimensions of the border area can be obtained
using the <code>getInsets</code> method, however, since
these dimensions are platform-dependent, a valid insets
value cannot be obtained until the dialog is made displayable
by either calling <code>pack</code> or <code>show</code>.
Since the border area is included in the overall size of the
dialog, the border effectively obscures a portion of the dialog,
constraining the area available for rendering and/or displaying
subcomponents to the rectangle which has an upper-left corner
location of <code>(insets.left, insets.top)</code>, and has a size of
<code>width - (insets.left + insets.right)</code> by
<code>height - (insets.top + insets.bottom)</code>.
<p>
The default layout for a dialog is <code>BorderLayout</code>.
<p>
A dialog may have its native decorations (i.e. Frame &amp; Titlebar) turned off
with <code>setUndecorated</code>.  This can only be done while the dialog
is not {@link Component#isDisplayable() displayable}.
<p>
A dialog may have another window as its owner when it's constructed.  When
the owner window of a visible dialog is minimized, the dialog will
automatically be hidden from the user. When the owner window is subsequently
restored, the dialog is made visible to the user again.
<p>
In a multi-screen environment, you can create a <code>Dialog</code>
on a different screen device than its owner.  See {@link java.awt.Frame} for
more information.
<p>
A dialog can be either modeless (the default) or modal.  A modal
dialog is one which blocks input to some other top-level windows
in the application, except for any windows created with the dialog
as their owner. See <a href=\"doc-files/Modality.html\">AWT Modality</a>
specification for details.
<p>
Dialogs are capable of generating the following
<code>WindowEvents</code>:
<code>WindowOpened</code>, <code>WindowClosing</code>,
<code>WindowClosed</code>, <code>WindowActivated</code>,
<code>WindowDeactivated</code>, <code>WindowGainedFocus</code>,
<code>WindowLostFocus</code>.

@see WindowEvent
@see Window#addWindowListener

@author      Sami Shaio
@author      Arthur van Hoff
@since       JDK1.0
"
      class 469250 "ModalExclusionType"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1351682 "NO_EXCLUDE"
	  public type class_ref 469250 // ModalExclusionType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "No modal exclusion.

"
	end

	attribute 1351810 "APPLICATION_EXCLUDE"
	  public type class_ref 469250 // ModalExclusionType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "<code>APPLICATION_EXCLUDE</code> indicates that a top-level window
won't be blocked by any application-modal dialogs. Also, it isn't
blocked by document-modal dialogs from outside of its child hierarchy.

"
	end

	attribute 1351938 "TOOLKIT_EXCLUDE"
	  public type class_ref 469250 // ModalExclusionType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "<code>TOOLKIT_EXCLUDE</code> indicates that a top-level window
won't be blocked by  application-modal or toolkit-modal dialogs. Also,
it isn't blocked by document-modal dialogs from outside of its
child hierarchy.
The \"toolkitModality\" <code>AWTPermission</code> must be granted
for this exclusion. If an exclusion property is being changed to
<code>TOOLKIT_EXCLUDE</code> and this permission is not granted, a
<code>SecurityEcxeption</code> will be thrown, and the exclusion
property will be left unchanged.
"
	end
      end

      classrelation 2910338 // <generalisation>
	relation 2910338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2910338 // <generalisation>
	  b parent class_ref 347394 // Window
      end

      extra_member 148994 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1350658 "resizable"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A dialog's resizable property. Will be true
if the Dialog is to be resizable, otherwise
it will be false.

@serial
@see #setResizable(boolean)

"
      end

      attribute 1350786 "undecorated"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field indicates whether the dialog is undecorated.
This property can only be changed while the dialog is not displayable.
<code>undecorated</code> will be true if the dialog is
undecorated, otherwise it will be false.

@serial
@see #setUndecorated(boolean)
@see #isUndecorated()
@see Component#isDisplayable()
@since 1.4

"
      end

      attribute 1350914 "initialized"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 863362 "ModalityType"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1351042 "MODELESS"
	  public type class_ref 863362 // ModalityType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "<code>MODELESS</code> dialog doesn't block any top-level windows.

"
	end

	attribute 1351170 "DOCUMENT_MODAL"
	  public type class_ref 863362 // ModalityType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A <code>DOCUMENT_MODAL</code> dialog blocks input to all top-level windows
from the same document except those from its own child hierarchy.
A document is a top-level window without an owner. It may contain child
windows that, together with the top-level window are treated as a single
solid document. Since every top-level window must belong to some
document, its root can be found as the top-nearest window without an owner.

"
	end

	attribute 1351298 "APPLICATION_MODAL"
	  public type class_ref 863362 // ModalityType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "An <code>APPLICATION_MODAL</code> dialog blocks all top-level windows
from the same Java application except those from its own child hierarchy.
If there are several applets launched in a browser, they can be
treated either as separate applications or a single one. This behavior
is implementation-dependent.

"
	end

	attribute 1351426 "TOOLKIT_MODAL"
	  public type class_ref 863362 // ModalityType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A <code>TOOLKIT_MODAL</code> dialog blocks all top-level windows run
from the same toolkit except those from its own child hierarchy. If there
are several applets launched in a browser, all of them run with the same
toolkit; thus, a toolkit-modal dialog displayed by an applet may affect
other applets and all windows of the browser instance which embeds the
Java runtime environment for this toolkit.
Special <code>AWTPermission</code> \"toolkitModality\" must be granted to use
toolkit-modal dialogs. If a <code>TOOLKIT_MODAL</code> dialog is being created
and this permission is not granted, a <code>SecurityException</code> will be
thrown, and no dialog will be created. If a modality type is being changed
to <code>TOOLKIT_MODAL</code> and this permission is not granted, a
<code>SecurityException</code> will be thrown, and the modality type will
be left unchanged.
"
	end
      end

      classrelation 2910466 // DEFAULT_MODALITY_TYPE (<unidirectional association>)
	relation 2910466 --->
	  a role_name "DEFAULT_MODALITY_TYPE" init_value " ModalityType.APPLICATION_MODAL" class_relation const_relation public
	    comment "
Default modality type for modal dialogs. The default modality type is
<code>APPLICATION_MODAL</code>. Calling the oldstyle <code>setModal(true)</code>
is equal to <code>setModalityType(DEFAULT_MODALITY_TYPE)</code>.

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2910466 // DEFAULT_MODALITY_TYPE (<unidirectional association>)
	  b parent class_ref 863362 // ModalityType
      end

      attribute 1351554 "modal"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if this dialog is modal, false is the dialog is modeless.
A modal dialog blocks user input to some application top-level
windows. This field is kept only for backwards compatibility. Use the
{@link Dialog.ModalityType ModalityType} enum instead.

@serial

@see #isModal
@see #setModal
@see #getModalityType
@see #setModalityType
@see ModalityType
@see ModalityType#MODELESS
@see #DEFAULT_MODALITY_TYPE

"
      end

      classrelation 2910594 // modalityType (<unidirectional association>)
	relation 2910594 --->
	  a role_name "modalityType" package
	    comment "
Modality type of this dialog. If the dialog's modality type is not
{@link Dialog.ModalityType#MODELESS ModalityType.MODELESS}, it blocks all
user input to some application top-level windows.

@serial

@see ModalityType
@see #getModalityType
@see #setModalityType

@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2910594 // modalityType (<unidirectional association>)
	  b parent class_ref 863362 // ModalityType
      end

      classrelation 2910722 // modalDialogs (<unidirectional association>)
	relation 2910722 --->
	  stereotype "IdentityArrayList"
	  a role_name "modalDialogs" init_value " new IdentityArrayList<Dialog>()" class_relation package
	    comment " operations with this list should be synchronized on tree lock
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 2910722 // modalDialogs (<unidirectional association>)
	  b parent class_ref 469122 // Dialog
      end

      classrelation 2910850 // blockedWindows (<unidirectional association>)
	relation 2910850 --->
	  stereotype "IdentityArrayList"
	  a role_name "blockedWindows" init_value " new IdentityArrayList<Window>()" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 2910850 // blockedWindows (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      classrelation 2910978 // title (<unidirectional association>)
	relation 2910978 --->
	  a role_name "title" package
	    comment "
Specifies the title of the Dialog.
This field can be null.

@serial
@see #getTitle()
@see #setTitle(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2910978 // title (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2911106 // modalFilter (<unidirectional association>)
	relation 2911106 --->
	  a role_name "modalFilter" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2911106 // modalFilter (<unidirectional association>)
	  b parent class_ref 863490 // ModalEventFilter
      end

      classrelation 2911234 // secondaryLoop (<unidirectional association>)
	relation 2911234 --->
	  a role_name "secondaryLoop" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2911234 // secondaryLoop (<unidirectional association>)
	  b parent class_ref 863618 // SecondaryLoop
      end

      attribute 1352066 "isInHide"
	volatile package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that this dialog is being hidden. This flag is set to true at
the beginning of hide() and to false at the end of hide().

@see #hide()
@see #hideAndDisposePreHandler()
@see #hideAndDisposeHandler()
@see #shouldBlock()

"
      end

      attribute 1352194 "isInDispose"
	volatile package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that this dialog is being disposed. This flag is set to true at
the beginning of doDispose() and to false at the end of doDispose().

@see #hide()
@see #hideAndDisposePreHandler()
@see #hideAndDisposeHandler()
@see #doDispose()

"
      end

      classrelation 2911362 // base (<unidirectional association>)
	relation 2911362 --->
	  a role_name "base" init_value " \"dialog\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2911362 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1352322 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1352450 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5920926903803293709L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6167682 "Dialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code> with
the specified owner <code>Frame</code> and an empty title.

@param owner the owner of the dialog or <code>null</code> if
    this dialog has no owner
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
"
      end

      operation 6167810 "Dialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the specified
owner <code>Frame</code> and modality and an empty title.

@param owner the owner of the dialog or <code>null</code> if
    this dialog has no owner
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If <code>false</code>, the dialog is <code>MODELESS</code>;
    if <code>true</code>, the modality type property is set to
    <code>DEFAULT_MODALITY_TYPE</code>
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6167938 "Dialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code> with
the specified owner <code>Frame</code> and title.

@param owner the owner of the dialog or <code>null</code> if
    this dialog has no owner
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@exception IllegalArgumentException if the <code>owner</code>'s
    <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
"
      end

      operation 6168066 "Dialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Frame</code>, title and modality.

@param owner the owner of the dialog or <code>null</code> if
    this dialog has no owner
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If <code>false</code>, the dialog is <code>MODELESS</code>;
    if <code>true</code>, the modality type property is set to
    <code>DEFAULT_MODALITY_TYPE</code>
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
"
      end

      operation 6168194 "Dialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the specified owner
<code>Frame</code>, title, modality, and <code>GraphicsConfiguration</code>.
@param owner the owner of the dialog or <code>null</code> if this dialog
    has no owner
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If <code>false</code>, the dialog is <code>MODELESS</code>;
    if <code>true</code>, the modality type property is set to
    <code>DEFAULT_MODALITY_TYPE</code>
@param gc the <code>GraphicsConfiguration</code> of the target screen device;
    if <code>null</code>, the default system <code>GraphicsConfiguration</code>
    is assumed
@exception java.lang.IllegalArgumentException if <code>gc</code>
    is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible
@since 1.4
"
      end

      operation 6168322 "Dialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 469122 // Dialog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code> with
the specified owner <code>Dialog</code> and an empty title.

@param owner the owner of the dialog or <code>null</code> if this
    dialog has no owner
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
    <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.2
"
      end

      operation 6168450 "Dialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code>
with the specified owner <code>Dialog</code> and title.

@param owner the owner of the dialog or <code>null</code> if this
    has no owner
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
    <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.GraphicsEnvironment#isHeadless
@since 1.2
"
      end

      operation 6168578 "Dialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Dialog</code>, title, and modality.

@param owner the owner of the dialog or <code>null</code> if this
    dialog has no owner
@param title the title of the dialog or <code>null</code> if this
    dialog has no title
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If <code>false</code>, the dialog is <code>MODELESS</code>;
    if <code>true</code>, the modality type property is set to
    <code>DEFAULT_MODALITY_TYPE</code>
@exception IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless

@since 1.2
"
      end

      operation 6168706 "Dialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modal" explicit_type "boolean"
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Dialog</code>, title, modality and
<code>GraphicsConfiguration</code>.

@param owner the owner of the dialog or <code>null</code> if this
    dialog has no owner
@param title the title of the dialog or <code>null</code> if this
    dialog has no title
@param modal specifies whether dialog blocks user input to other top-level
    windows when shown. If <code>false</code>, the dialog is <code>MODELESS</code>;
    if <code>true</code>, the modality type property is set to
    <code>DEFAULT_MODALITY_TYPE</code>
@param gc the <code>GraphicsConfiguration</code> of the target screen device;
    if <code>null</code>, the default system <code>GraphicsConfiguration</code>
    is assumed
@exception java.lang.IllegalArgumentException if <code>gc</code>
   is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog.ModalityType#MODELESS
@see java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see Component#setSize
@see Component#setVisible

@since 1.4
"
      end

      operation 6168834 "Dialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code> with the
specified owner <code>Window</code> and an empty title.

@param owner the owner of the dialog. The owner must be an instance of
    {@link java.awt.Dialog Dialog}, {@link java.awt.Frame Frame}, any
    of their descendents or <code>null</code>

@exception java.lang.IllegalArgumentException if the <code>owner</code>
    is not an instance of {@link java.awt.Dialog Dialog} or {@link
    java.awt.Frame Frame}
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
    <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.GraphicsEnvironment#isHeadless

@since 1.6
"
      end

      operation 6168962 "Dialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible, modeless <code>Dialog</code> with
the specified owner <code>Window</code> and title.

@param owner the owner of the dialog. The owner must be an instance of
   {@link java.awt.Dialog Dialog}, {@link java.awt.Frame Frame}, any
   of their descendents or <code>null</code>
@param title the title of the dialog or <code>null</code> if this dialog
   has no title

@exception java.lang.IllegalArgumentException if the <code>owner</code>
   is not an instance of {@link java.awt.Dialog Dialog} or {@link
   java.awt.Frame Frame}
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>

@see java.awt.GraphicsEnvironment#isHeadless

@since 1.6
"
      end

      operation 6169090 "Dialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Window</code> and modality and an empty title.

@param owner the owner of the dialog. The owner must be an instance of
   {@link java.awt.Dialog Dialog}, {@link java.awt.Frame Frame}, any
   of their descendents or <code>null</code>
@param modalityType specifies whether dialog blocks input to other
   windows when shown. <code>null</code> value and unsupported modality
   types are equivalent to <code>MODELESS</code>

@exception java.lang.IllegalArgumentException if the <code>owner</code>
   is not an instance of {@link java.awt.Dialog Dialog} or {@link
   java.awt.Frame Frame}
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
   <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
   <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@exception SecurityException if the calling thread does not have permission
   to create modal dialogs with the given <code>modalityType</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see java.awt.Toolkit#isModalityTypeSupported

@since 1.6
"
      end

      operation 6169218 "Dialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Window</code>, title and modality.

@param owner the owner of the dialog. The owner must be an instance of
    {@link java.awt.Dialog Dialog}, {@link java.awt.Frame Frame}, any
    of their descendents or <code>null</code>
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@param modalityType specifies whether dialog blocks input to other
   windows when shown. <code>null</code> value and unsupported modality
   types are equivalent to <code>MODELESS</code>

@exception java.lang.IllegalArgumentException if the <code>owner</code>
    is not an instance of {@link java.awt.Dialog Dialog} or {@link
    java.awt.Frame Frame}
@exception java.lang.IllegalArgumentException if the <code>owner</code>'s
    <code>GraphicsConfiguration</code> is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@exception SecurityException if the calling thread does not have permission
    to create modal dialogs with the given <code>modalityType</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see java.awt.Toolkit#isModalityTypeSupported

@since 1.6
"
      end

      operation 6169346 "Dialog"
	public explicit_return_type ""
	nparams 4
	  param inout name "owner" type class_ref 347394 // Window
	  param inout name "title" type class_ref 128130 // String
	  param inout name "modalityType" type class_ref 863362 // ModalityType
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an initially invisible <code>Dialog</code> with the
specified owner <code>Window</code>, title, modality and
<code>GraphicsConfiguration</code>.

@param owner the owner of the dialog. The owner must be an instance of
    {@link java.awt.Dialog Dialog}, {@link java.awt.Frame Frame}, any
    of their descendents or <code>null</code>
@param title the title of the dialog or <code>null</code> if this dialog
    has no title
@param modalityType specifies whether dialog blocks input to other
   windows when shown. <code>null</code> value and unsupported modality
   types are equivalent to <code>MODELESS</code>
@param gc the <code>GraphicsConfiguration</code> of the target screen device;
    if <code>null</code>, the default system <code>GraphicsConfiguration</code>
    is assumed

@exception java.lang.IllegalArgumentException if the <code>owner</code>
    is not an instance of {@link java.awt.Dialog Dialog} or {@link
    java.awt.Frame Frame}
@exception java.lang.IllegalArgumentException if <code>gc</code>
    is not from a screen device
@exception HeadlessException when
    <code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@exception SecurityException if the calling thread does not have permission
    to create modal dialogs with the given <code>modalityType</code>

@see java.awt.Dialog.ModalityType
@see java.awt.Dialog#setModal
@see java.awt.Dialog#setModalityType
@see java.awt.GraphicsEnvironment#isHeadless
@see java.awt.Toolkit#isModalityTypeSupported

@since 1.6
"
      end

      operation 6169474 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6169602 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Dialog displayable by connecting it to
a native screen resource.  Making a dialog displayable will
cause any of its children to be made displayable.
This method is called internally by the toolkit and should
not be called directly by programs.
@see Component#isDisplayable
@see #removeNotify
"
      end

      operation 6169730 "isModal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the dialog is modal.
<p>
This method is obsolete and is kept for backwards compatibility only.
Use {@link #getModalityType getModalityType()} instead.

@return    <code>true</code> if this dialog window is modal;
           <code>false</code> otherwise

@see       java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see       java.awt.Dialog.ModalityType#MODELESS
@see       java.awt.Dialog#setModal
@see       java.awt.Dialog#getModalityType
@see       java.awt.Dialog#setModalityType
"
      end

      operation 6169858 "isModal_NoClientCode"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6169986 "setModal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "modal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether this dialog should be modal.
<p>
This method is obsolete and is kept for backwards compatibility only.
Use {@link #setModalityType setModalityType()} instead.
<p>
Note: changing modality of the visible dialog may have no effect
until it is hidden and then shown again.

@param modal specifies whether dialog blocks input to other windows
    when shown; calling to <code>setModal(true)</code> is equivalent to
    <code>setModalityType(Dialog.DEFAULT_MODALITY_TYPE)</code>, and
    calling to <code>setModal(false)</code> is equvivalent to
    <code>setModalityType(Dialog.ModalityType.MODELESS)</code>

@see       java.awt.Dialog#DEFAULT_MODALITY_TYPE
@see       java.awt.Dialog.ModalityType#MODELESS
@see       java.awt.Dialog#isModal
@see       java.awt.Dialog#getModalityType
@see       java.awt.Dialog#setModalityType

@since     1.1
"
      end

      operation 6170114 "getModalityType"
	public return_type class_ref 863362 // ModalityType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modality type of this dialog.

@return modality type of this dialog

@see java.awt.Dialog#setModalityType

@since 1.6
"
      end

      operation 6170242 "setModalityType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the modality type for this dialog. See {@link
java.awt.Dialog.ModalityType ModalityType} for possible modality types.
<p>
If the given modality type is not supported, <code>MODELESS</code>
is used. You may want to call <code>getModalityType()</code> after calling
this method to ensure that the modality type has been set.
<p>
Note: changing modality of the visible dialog may have no effect
until it is hidden and then shown again.

@param type specifies whether dialog blocks input to other
    windows when shown. <code>null</code> value and unsupported modality
    types are equivalent to <code>MODELESS</code>
@exception SecurityException if the calling thread does not have permission
    to create modal dialogs with the given <code>modalityType</code>

@see       java.awt.Dialog#getModalityType
@see       java.awt.Toolkit#isModalityTypeSupported

@since     1.6
"
      end

      operation 6170370 "getTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the title of the dialog. The title is displayed in the
dialog's border.
@return    the title of this dialog window. The title may be
           <code>null</code>.
@see       java.awt.Dialog#setTitle
"
      end

      operation 6170498 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the title of the Dialog.
@param title the title displayed in the dialog's border;
a null value results in an empty title
@see #getTitle
"
      end

      operation 6170626 "conditionalShow"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "toFocus" type class_ref 338818 // Component
	  param inout name "time" type class_ref 256386 // AtomicLong
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if we actually showed, false if we just called toFront()
"
      end

      operation 6170754 "setVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shows or hides this {@code Dialog} depending on the value of parameter
{@code b}.
@param b if {@code true}, makes the {@code Dialog} visible,
otherwise hides the {@code Dialog}.
If the dialog and/or its owner
are not yet displayable, both are made displayable.  The
dialog will be validated prior to being made visible.
If {@code false}, hides the {@code Dialog} and then causes {@code setVisible(true)}
to return if it is currently blocked.
<p>
<b>Notes for modal dialogs</b>.
<ul>
<li>{@code setVisible(true)}:  If the dialog is not already
visible, this call will not return until the dialog is
hidden by calling {@code setVisible(false)} or
{@code dispose}.
<li>{@code setVisible(false)}:  Hides the dialog and then
returns on {@code setVisible(true)} if it is currently blocked.
<li>It is OK to call this method from the event dispatching
thread because the toolkit ensures that other events are
not blocked while this method is blocked.
</ul>
@see java.awt.Window#setVisible
@see java.awt.Window#dispose
@see java.awt.Component#isDisplayable
@see java.awt.Component#validate
@see java.awt.Dialog#isModal
"
      end

      operation 6170882 "show"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Makes the {@code Dialog} visible. If the dialog and/or its owner
are not yet displayable, both are made displayable.  The
dialog will be validated prior to being made visible.
If the dialog is already visible, this will bring the dialog
to the front.
<p>
If the dialog is modal and is not already visible, this call
will not return until the dialog is hidden by calling hide or
dispose. It is permissible to show modal dialogs from the event
dispatching thread because the toolkit will ensure that another
event pump runs while the one which invoked this method is blocked.
@see Component#hide
@see Component#isDisplayable
@see Component#validate
@see #isModal
@see Window#setVisible(boolean)
@deprecated As of JDK version 1.5, replaced by
{@link #setVisible(boolean) setVisible(boolean)}.
"
      end

      operation 6171010 "modalityPushed"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6171138 "modalityPopped"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6171266 "interruptBlocking"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6171394 "hideAndDisposePreHandler"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6171522 "hideAndDisposeHandler"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6171650 "hide"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Hides the Dialog and then causes {@code show} to return if it is currently
blocked.
@see Window#show
@see Window#dispose
@see Window#setVisible(boolean)
@deprecated As of JDK version 1.5, replaced by
{@link #setVisible(boolean) setVisible(boolean)}.
"
      end

      operation 6171778 "doDispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes the Dialog and then causes show() to return if it is currently
blocked.
"
      end

      operation 6171906 "toBack"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
<p>
If this dialog is modal and blocks some windows, then all of them are
also sent to the back to keep them below the blocking dialog.

@see java.awt.Window#toBack
"
      end

      operation 6172034 "isResizable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this dialog is resizable by the user.
By default, all dialogs are initially resizable.
@return    <code>true</code> if the user can resize the dialog;
           <code>false</code> otherwise.
@see       java.awt.Dialog#setResizable
"
      end

      operation 6172162 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this dialog is resizable by the user.
@param     resizable <code>true</code> if the user can
                resize this dialog; <code>false</code> otherwise.
@see       java.awt.Dialog#isResizable
"
      end

      operation 6172290 "setUndecorated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "undecorated" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables or enables decorations for this dialog.
<p>
This method can only be called while the dialog is not displayable. To
make this dialog decorated, it must be opaque and have the default shape,
otherwise the {@code IllegalComponentStateException} will be thrown.
Refer to {@link Window#setShape}, {@link Window#setOpacity} and {@link
Window#setBackground} for details

@param  undecorated {@code true} if no dialog decorations are to be
        enabled; {@code false} if dialog decorations are to be enabled

@throws IllegalComponentStateException if the dialog is displayable
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and this dialog does not have the default shape
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and this dialog opacity is less than {@code 1.0f}
@throws IllegalComponentStateException if {@code undecorated} is
     {@code false}, and the alpha value of this dialog background
     color is less than {@code 1.0f}

@see    #isUndecorated
@see    Component#isDisplayable
@see    Window#getShape
@see    Window#getOpacity
@see    Window#getBackground

@since 1.4
"
      end

      operation 6172418 "isUndecorated"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this dialog is undecorated.
By default, all dialogs are initially decorated.
@return    <code>true</code> if dialog is undecorated;
                       <code>false</code> otherwise.
@see       java.awt.Dialog#setUndecorated
@since 1.4
"
      end

      operation 6172546 "setOpacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "opacity" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6172674 "setShape"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shape" type class_ref 379394 // Shape
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6172802 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bgColor" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6172930 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this dialog. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return    the parameter string of this dialog window.
"
      end

      operation 6173058 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6173186 "modalShow"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Modality support ---



This method is called only for modal dialogs.

Goes through the list of all visible top-level windows and
divide them into three distinct groups: blockers of this dialog,
blocked by this dialog and all others. Then blocks this dialog
by first met dialog from the first group (if any) and blocks all
the windows from the second group.
"
      end

      operation 6173314 "modalHide"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called only for modal dialogs.

Unblocks all the windows blocked by this modal dialog. After
each of them has been unblocked, it is checked to be blocked by
any other modal dialogs.
"
      end

      operation 6173442 "shouldBlock"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given top-level window should be blocked by
this dialog. Note, that the given window can be also a modal dialog
and it should block this dialog, but this method do not take such
situations into consideration (such checks are performed in the
modalShow() and modalHide() methods).

This method should be called on the getTreeLock() lock.
"
      end

      operation 6173570 "blockWindow"
	package explicit_return_type "void"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given top-level window to the list of blocked
windows for this dialog and marks it as modal blocked.
If the window is already blocked by some modal dialog,
does nothing.
"
      end

      operation 6173698 "blockWindows"
	package explicit_return_type "void"
	nparams 1
	  param inout name "toBlock" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Window> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6173826 "unblockWindow"
	package explicit_return_type "void"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the given top-level window from the list of blocked
windows for this dialog and marks it as unblocked. If the
window is not modal blocked, does nothing.
"
      end

      operation 6173954 "checkShouldBeBlocked"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if any other modal dialog D blocks the given window.
If such D exists, mark the window as blocked by D.
"
      end

      operation 6174082 "checkModalityPermission"
	private explicit_return_type "void"
	nparams 1
	  param inout name "mt" type class_ref 863362 // ModalityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6174210 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6174338 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---



Gets the AccessibleContext associated with this Dialog.
For dialogs, the AccessibleContext takes the form of an
AccessibleAWTDialog.
A new AccessibleAWTDialog instance is created if necessary.

@return an AccessibleAWTDialog that serves as the
        AccessibleContext of this Dialog
@since 1.3
"
      end

      class 863746 "AccessibleAWTDialog"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2911490 // <generalisation>
	  relation 2911490 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2911490 // <generalisation>
	    b parent class_ref 469634 // AccessibleAWTWindow
	end

	attribute 1352578 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 4837230331833941201L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6174466 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 6174594 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end
      end
    end

    class 469506 "FocusManager"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " class Window

This class is no longer used, but is maintained for Serialization
backward-compatibility.
"
      classrelation 928642 // <realization>
	relation 928642 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 928642 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 928770 // focusRoot (<unidirectional association>)
	relation 928770 --->
	  a role_name "focusRoot" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928770 // focusRoot (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 928898 // focusOwner (<unidirectional association>)
	relation 928898 --->
	  a role_name "focusOwner" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928898 // focusOwner (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 612482 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2491878825643557906L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end
    end

    class 471170 "KeyEventPostProcessor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@FunctionalInterface
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A KeyEventPostProcessor cooperates with the current KeyboardFocusManager
in the final resolution of all unconsumed KeyEvents. KeyEventPostProcessors
registered with the current KeyboardFocusManager will receive KeyEvents
after the KeyEvents have been dispatched to and handled by their targets.
KeyEvents that would have been otherwise discarded because no Component in
the application currently owns the focus will also be forwarded to
registered KeyEventPostProcessors. This will allow applications to implement
features that require global KeyEvent post-handling, such as menu shortcuts.
<p>
Note that the KeyboardFocusManager itself implements KeyEventPostProcessor.
By default, the current KeyboardFocusManager will be the final
KeyEventPostProcessor in the chain. The current KeyboardFocusManager cannot
be completely deregistered as a KeyEventPostProcessor. However, if a
KeyEventPostProcessor reports that no further post-processing of the
KeyEvent should take place, the AWT will consider the event fully handled
and will take no additional action with regard to the event. (While it is
possible for client code to register the current KeyboardFocusManager as
a KeyEventPostProcessor one or more times, this is usually unnecessary and
not recommended.)

@author David Mendenhall

@see KeyboardFocusManager#addKeyEventPostProcessor
@see KeyboardFocusManager#removeKeyEventPostProcessor
@since 1.4
"
      operation 2841858 "postProcessKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the current KeyboardFocusManager, requesting
that this KeyEventPostProcessor perform any necessary post-processing
which should be part of the KeyEvent's final resolution. At the time
this method is invoked, typically the KeyEvent has already been
dispatched to and handled by its target. However, if no Component in
the application currently owns the focus, then the KeyEvent has not
been dispatched to any Component. Typically, KeyEvent post-processing
will be used to implement features which require global KeyEvent
post-handling, such as menu shortcuts. Note that if a
KeyEventPostProcessor wishes to dispatch the KeyEvent, it must use
<code>redispatchEvent</code> to prevent the AWT from recursively
requesting that this KeyEventPostProcessor perform post-processing
of the event again.
<p>
If an implementation of this method returns <code>false</code>, then the
KeyEvent is passed to the next KeyEventPostProcessor in the chain,
ending with the current KeyboardFocusManager. If an implementation
returns <code>true</code>, the KeyEvent is assumed to have been fully
handled (although this need not be the case), and the AWT will take no
further action with regard to the KeyEvent. If an implementation
consumes the KeyEvent but returns <code>false</code>, the consumed
event will still be passed to the next KeyEventPostProcessor in the
chain. It is important for developers to check whether the KeyEvent has
been consumed before performing any post-processing of the KeyEvent. By
default, the current KeyboardFocusManager will perform no post-
processing in response to a consumed KeyEvent.

@param e the KeyEvent to post-process
@return <code>true</code> if the AWT should take no further action with
        regard to the KeyEvent; <code>false</code> otherwise
@see KeyboardFocusManager#redispatchEvent
"
      end
    end

    class 855042 "Panel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>Panel</code> is the simplest container class. A panel
provides space in which an application can attach any other
component, including other panels.
<p>
The default layout manager for a panel is the
<code>FlowLayout</code> layout manager.

@author      Sami Shaio
@see     java.awt.FlowLayout
@since   JDK1.0
"
      classrelation 2878850 // <generalisation>
	relation 2878850 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2878850 // <generalisation>
	  b parent class_ref 338690 // Container
      end

      classrelation 2878978 // <realization>
	relation 2878978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2878978 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2879106 // base (<unidirectional association>)
	relation 2879106 --->
	  a role_name "base" init_value " \"panel\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2879106 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1328770 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1328898 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2728009084054400034L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6064130 "Panel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new panel using the default layout manager.
The default layout manager for all panels is the
<code>FlowLayout</code> class.
"
      end

      operation 6064258 "Panel"
	public explicit_return_type ""
	nparams 1
	  param inout name "layout" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new panel with the specified layout manager.
@param layout the layout manager for this panel.
@since JDK1.1
"
      end

      operation 6064386 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6064514 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the Panel's peer.  The peer allows you to modify the
appearance of the panel without changing its functionality.
"
      end

      operation 6064642 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this Panel.
For panels, the AccessibleContext takes the form of an
AccessibleAWTPanel.
A new AccessibleAWTPanel instance is created if necessary.

@return an AccessibleAWTPanel that serves as the
        AccessibleContext of this Panel
@since 1.3
"
      end

      class 855170 "AccessibleAWTPanel"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2879234 // <generalisation>
	  relation 2879234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2879234 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	attribute 1329026 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6409552226660031050L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6064770 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 855810 "ActiveEvent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for events that know how to dispatch themselves.
By implementing this interface an event can be placed upon the event
queue and its <code>dispatch()</code> method will be called when the event
is dispatched, using the <code>EventDispatchThread</code>.
<p>
This is a very useful mechanism for avoiding deadlocks. If
a thread is executing in a critical section (i.e., it has entered
one or more monitors), calling other synchronized code may
cause deadlocks. To avoid the potential deadlocks, an
<code>ActiveEvent</code> can be created to run the second section of
code at later time. If there is contention on the monitor,
the second thread will simply block until the first thread
has finished its work and exited its monitors.
<p>
For security reasons, it is often desirable to use an <code>ActiveEvent</code>
to avoid calling untrusted code from a critical thread. For
instance, peer implementations can use this facility to avoid
making calls into user code from a system thread. Doing so avoids
potential deadlocks and denial-of-service attacks.

@author  Timothy Prinzing
@since   1.2
"
      operation 6071042 "dispatch"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch the event to its target, listeners of the events source,
or do whatever it is this event is supposed to do.
"
      end
    end

    class 855938 "Adjustable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface for objects which have an adjustable numeric value
contained within a bounded range of values.

@author Amy Fowler
@author Tim Prinzing
"
      attribute 1329410 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the <code>Adjustable</code> has horizontal orientation.

"
      end

      attribute 1329538 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the <code>Adjustable</code> has vertical orientation.

"
      end

      attribute 1329666 "NO_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the <code>Adjustable</code> has no orientation.

"
      end

      operation 6071170 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the orientation of the adjustable object.
@return the orientation of the adjustable object;
  either <code>HORIZONTAL</code>, <code>VERTICAL</code>,
  or <code>NO_ORIENTATION</code>
"
      end

      operation 6071298 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum value of the adjustable object.
@param min the minimum value
"
      end

      operation 6071426 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum value of the adjustable object.
@return the minimum value of the adjustable object
"
      end

      operation 6071554 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "max" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum value of the adjustable object.
@param max the maximum value
"
      end

      operation 6071682 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum value of the adjustable object.
@return the maximum value of the adjustable object
"
      end

      operation 6071810 "setUnitIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "u" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unit value increment for the adjustable object.
@param u the unit increment
"
      end

      operation 6071938 "getUnitIncrement"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the unit value increment for the adjustable object.
@return the unit value increment for the adjustable object
"
      end

      operation 6072066 "setBlockIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the block value increment for the adjustable object.
@param b the block increment
"
      end

      operation 6072194 "getBlockIncrement"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the block value increment for the adjustable object.
@return the block value increment for the adjustable object
"
      end

      operation 6072322 "setVisibleAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the length of the proportional indicator of the
adjustable object.
@param v the length of the indicator
"
      end

      operation 6072450 "getVisibleAmount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the length of the proportional indicator.
@return the length of the proportional indicator
"
      end

      operation 6072578 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current value of the adjustable object. If
the value supplied is less than <code>minimum</code>
or greater than <code>maximum</code> - <code>visibleAmount</code>,
then one of those values is substituted, as appropriate.
<p>
Calling this method does not fire an
<code>AdjustmentEvent</code>.

@param v the current value, between <code>minimum</code>
   and <code>maximum</code> - <code>visibleAmount</code>
"
      end

      operation 6072706 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current value of the adjustable object.
@return the current value of the adjustable object
"
      end

      operation 6072834 "addAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to receive adjustment events when the value of
the adjustable object changes.
@param l the listener to receive events
@see AdjustmentEvent
"
      end

      operation 6072962 "removeAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an adjustment listener.
@param l the listener being removed
@see AdjustmentEvent
"
      end
    end

    class 856194 "AlphaComposite"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>AlphaComposite</code> class implements basic alpha
compositing rules for combining source and destination colors
to achieve blending and transparency effects with graphics and
images.
The specific rules implemented by this class are the basic set
of 12 rules described in
T. Porter and T. Duff, \"Compositing Digital Images\", SIGGRAPH 84,
253-259.
The rest of this documentation assumes some familiarity with the
definitions and concepts outlined in that paper.

<p>
This class extends the standard equations defined by Porter and
Duff to include one additional factor.
An instance of the <code>AlphaComposite</code> class can contain
an alpha value that is used to modify the opacity or coverage of
every source pixel before it is used in the blending equations.

<p>
It is important to note that the equations defined by the Porter
and Duff paper are all defined to operate on color components
that are premultiplied by their corresponding alpha components.
Since the <code>ColorModel</code> and <code>Raster</code> classes
allow the storage of pixel data in either premultiplied or
non-premultiplied form, all input data must be normalized into
premultiplied form before applying the equations and all results
might need to be adjusted back to the form required by the destination
before the pixel values are stored.

<p>
Also note that this class defines only the equations
for combining color and alpha values in a purely mathematical
sense. The accurate application of its equations depends
on the way the data is retrieved from its sources and stored
in its destinations.
See <a href=\"#caveats\">Implementation Caveats</a>
for further information.

<p>
The following factors are used in the description of the blending
equation in the Porter and Duff paper:

<blockquote>
<table summary=\"layout\">
<tr><th align=left>Factor&nbsp;&nbsp;<th align=left>Definition
<tr><td><em>A<sub>s</sub></em><td>the alpha component of the source pixel
<tr><td><em>C<sub>s</sub></em><td>a color component of the source pixel in premultiplied form
<tr><td><em>A<sub>d</sub></em><td>the alpha component of the destination pixel
<tr><td><em>C<sub>d</sub></em><td>a color component of the destination pixel in premultiplied form
<tr><td><em>F<sub>s</sub></em><td>the fraction of the source pixel that contributes to the output
<tr><td><em>F<sub>d</sub></em><td>the fraction of the destination pixel that contributes
to the output
<tr><td><em>A<sub>r</sub></em><td>the alpha component of the result
<tr><td><em>C<sub>r</sub></em><td>a color component of the result in premultiplied form
</table>
</blockquote>

<p>
Using these factors, Porter and Duff define 12 ways of choosing
the blending factors <em>F<sub>s</sub></em> and <em>F<sub>d</sub></em> to
produce each of 12 desirable visual effects.
The equations for determining <em>F<sub>s</sub></em> and <em>F<sub>d</sub></em>
are given in the descriptions of the 12 static fields
that specify visual effects.
For example,
the description for
<a href=\"#SRC_OVER\"><code>SRC_OVER</code></a>
specifies that <em>F<sub>s</sub></em> = 1 and <em>F<sub>d</sub></em> = (1-<em>A<sub>s</sub></em>).
Once a set of equations for determining the blending factors is
known they can then be applied to each pixel to produce a result
using the following set of equations:

<pre>
     <em>F<sub>s</sub></em> = <em>f</em>(<em>A<sub>d</sub></em>)
     <em>F<sub>d</sub></em> = <em>f</em>(<em>A<sub>s</sub></em>)
     <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*<em>F<sub>s</sub></em> + <em>A<sub>d</sub></em>*<em>F<sub>d</sub></em>
     <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*<em>F<sub>s</sub></em> + <em>C<sub>d</sub></em>*<em>F<sub>d</sub></em></pre>

<p>
The following factors will be used to discuss our extensions to
the blending equation in the Porter and Duff paper:

<blockquote>
<table summary=\"layout\">
<tr><th align=left>Factor&nbsp;&nbsp;<th align=left>Definition
<tr><td><em>C<sub>sr</sub></em> <td>one of the raw color components of the source pixel
<tr><td><em>C<sub>dr</sub></em> <td>one of the raw color components of the destination pixel
<tr><td><em>A<sub>ac</sub></em>  <td>the \"extra\" alpha component from the AlphaComposite instance
<tr><td><em>A<sub>sr</sub></em> <td>the raw alpha component of the source pixel
<tr><td><em>A<sub>dr</sub></em><td>the raw alpha component of the destination pixel
<tr><td><em>A<sub>df</sub></em> <td>the final alpha component stored in the destination
<tr><td><em>C<sub>df</sub></em> <td>the final raw color component stored in the destination
</table>
</blockquote>

<h3>Preparing Inputs</h3>

<p>
The <code>AlphaComposite</code> class defines an additional alpha
value that is applied to the source alpha.
This value is applied as if an implicit SRC_IN rule were first
applied to the source pixel against a pixel with the indicated
alpha by multiplying both the raw source alpha and the raw
source colors by the alpha in the <code>AlphaComposite</code>.
This leads to the following equation for producing the alpha
used in the Porter and Duff blending equation:

<pre>
     <em>A<sub>s</sub></em> = <em>A<sub>sr</sub></em> * <em>A<sub>ac</sub></em> </pre>

All of the raw source color components need to be multiplied
by the alpha in the <code>AlphaComposite</code> instance.
Additionally, if the source was not in premultiplied form
then the color components also need to be multiplied by the
source alpha.
Thus, the equation for producing the source color components
for the Porter and Duff equation depends on whether the source
pixels are premultiplied or not:

<pre>
     <em>C<sub>s</sub></em> = <em>C<sub>sr</sub></em> * <em>A<sub>sr</sub></em> * <em>A<sub>ac</sub></em>     (if source is not premultiplied)
     <em>C<sub>s</sub></em> = <em>C<sub>sr</sub></em> * <em>A<sub>ac</sub></em>           (if source is premultiplied) </pre>

No adjustment needs to be made to the destination alpha:

<pre>
     <em>A<sub>d</sub></em> = <em>A<sub>dr</sub></em> </pre>

<p>
The destination color components need to be adjusted only if
they are not in premultiplied form:

<pre>
     <em>C<sub>d</sub></em> = <em>C<sub>dr</sub></em> * <em>A<sub>d</sub></em>    (if destination is not premultiplied)
     <em>C<sub>d</sub></em> = <em>C<sub>dr</sub></em>         (if destination is premultiplied) </pre>

<h3>Applying the Blending Equation</h3>

<p>
The adjusted <em>A<sub>s</sub></em>, <em>A<sub>d</sub></em>,
<em>C<sub>s</sub></em>, and <em>C<sub>d</sub></em> are used in the standard
Porter and Duff equations to calculate the blending factors
<em>F<sub>s</sub></em> and <em>F<sub>d</sub></em> and then the resulting
premultiplied components <em>A<sub>r</sub></em> and <em>C<sub>r</sub></em>.

<h3>Preparing Results</h3>

<p>
The results only need to be adjusted if they are to be stored
back into a destination buffer that holds data that is not
premultiplied, using the following equations:

<pre>
     <em>A<sub>df</sub></em> = <em>A<sub>r</sub></em>
     <em>C<sub>df</sub></em> = <em>C<sub>r</sub></em>                 (if dest is premultiplied)
     <em>C<sub>df</sub></em> = <em>C<sub>r</sub></em> / <em>A<sub>r</sub></em>            (if dest is not premultiplied) </pre>

Note that since the division is undefined if the resulting alpha
is zero, the division in that case is omitted to avoid the \"divide
by zero\" and the color components are left as
all zeros.

<h3>Performance Considerations</h3>

<p>
For performance reasons, it is preferable that
<code>Raster</code> objects passed to the <code>compose</code>
method of a {@link CompositeContext} object created by the
<code>AlphaComposite</code> class have premultiplied data.
If either the source <code>Raster</code>
or the destination <code>Raster</code>
is not premultiplied, however,
appropriate conversions are performed before and after the compositing
operation.

<h3><a name=\"caveats\">Implementation Caveats</a></h3>

<ul>
<li>
Many sources, such as some of the opaque image types listed
in the <code>BufferedImage</code> class, do not store alpha values
for their pixels.  Such sources supply an alpha of 1.0 for
all of their pixels.

<li>
Many destinations also have no place to store the alpha values
that result from the blending calculations performed by this class.
Such destinations thus implicitly discard the resulting
alpha values that this class produces.
It is recommended that such destinations should treat their stored
color values as non-premultiplied and divide the resulting color
values by the resulting alpha value before storing the color
values and discarding the alpha value.

<li>
The accuracy of the results depends on the manner in which pixels
are stored in the destination.
An image format that provides at least 8 bits of storage per color
and alpha component is at least adequate for use as a destination
for a sequence of a few to a dozen compositing operations.
An image format with fewer than 8 bits of storage per component
is of limited use for just one or two compositing operations
before the rounding errors dominate the results.
An image format
that does not separately store
color components is not a
good candidate for any type of translucent blending.
For example, <code>BufferedImage.TYPE_BYTE_INDEXED</code>
should not be used as a destination for a blending operation
because every operation
can introduce large errors, due to
the need to choose a pixel from a limited palette to match the
results of the blending equations.

<li>
Nearly all formats store pixels as discrete integers rather than
the floating point values used in the reference equations above.
The implementation can either scale the integer pixel
values into floating point values in the range 0.0 to 1.0 or
use slightly modified versions of the equations
that operate entirely in the integer domain and yet produce
analogous results to the reference equations.

<p>
Typically the integer values are related to the floating point
values in such a way that the integer 0 is equated
to the floating point value 0.0 and the integer
2^<em>n</em>-1 (where <em>n</em> is the number of bits
in the representation) is equated to 1.0.
For 8-bit representations, this means that 0x00
represents 0.0 and 0xff represents
1.0.

<li>
The internal implementation can approximate some of the equations
and it can also eliminate some steps to avoid unnecessary operations.
For example, consider a discrete integer image with non-premultiplied
alpha values that uses 8 bits per component for storage.
The stored values for a
nearly transparent darkened red might be:

<pre>
   (A, R, G, B) = (0x01, 0xb0, 0x00, 0x00)</pre>

<p>
If integer math were being used and this value were being
composited in
<a href=\"#SRC\"><code>SRC</code></a>
mode with no extra alpha, then the math would
indicate that the results were (in integer format):

<pre>
   (A, R, G, B) = (0x01, 0x01, 0x00, 0x00)</pre>

<p>
Note that the intermediate values, which are always in premultiplied
form, would only allow the integer red component to be either 0x00
or 0x01.  When we try to store this result back into a destination
that is not premultiplied, dividing out the alpha will give us
very few choices for the non-premultiplied red value.
In this case an implementation that performs the math in integer
space without shortcuts is likely to end up with the final pixel
values of:

<pre>
   (A, R, G, B) = (0x01, 0xff, 0x00, 0x00)</pre>

<p>
(Note that 0x01 divided by 0x01 gives you 1.0, which is equivalent
to the value 0xff in an 8-bit storage format.)

<p>
Alternately, an implementation that uses floating point math
might produce more accurate results and end up returning to the
original pixel value with little, if any, roundoff error.
Or, an implementation using integer math might decide that since
the equations boil down to a virtual NOP on the color values
if performed in a floating point space, it can transfer the
pixel untouched to the destination and avoid all the math entirely.

<p>
These implementations all attempt to honor the
same equations, but use different tradeoffs of integer and
floating point math and reduced or full equations.
To account for such differences, it is probably best to
expect only that the premultiplied form of the results to
match between implementations and image formats.  In this
case both answers, expressed in premultiplied form would
equate to:

<pre>
   (A, R, G, B) = (0x01, 0x01, 0x00, 0x00)</pre>

<p>
and thus they would all match.

<li>
Because of the technique of simplifying the equations for
calculation efficiency, some implementations might perform
differently when encountering result alpha values of 0.0
on a non-premultiplied destination.
Note that the simplification of removing the divide by alpha
in the case of the SRC rule is technically not valid if the
denominator (alpha) is 0.
But, since the results should only be expected to be accurate
when viewed in premultiplied form, a resulting alpha of 0
essentially renders the resulting color components irrelevant
and so exact behavior in this case should not be expected.
</ul>
@see Composite
@see CompositeContext
"
      classrelation 2879874 // <realization>
	relation 2879874 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2879874 // <realization>
	  b parent class_ref 856322 // Composite
      end

      attribute 1329794 "CLEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Both the color and the alpha of the destination are cleared
(Porter-Duff Clear rule).
Neither the source nor the destination is used as input.
<p>
<em>F<sub>s</sub></em> = 0 and <em>F<sub>d</sub></em> = 0, thus:
<pre>
 <em>A<sub>r</sub></em> = 0
 <em>C<sub>r</sub></em> = 0
</pre>

"
      end

      attribute 1329922 "SRC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The source is copied to the destination
(Porter-Duff Source rule).
The destination is not used as input.
<p>
<em>F<sub>s</sub></em> = 1 and <em>F<sub>d</sub></em> = 0, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>
</pre>

"
      end

      attribute 1330050 "DST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The destination is left untouched
(Porter-Duff Destination rule).
<p>
<em>F<sub>s</sub></em> = 0 and <em>F<sub>d</sub></em> = 1, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>d</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>d</sub></em>
</pre>
@since 1.4

"
      end

      attribute 1330178 "SRC_OVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Note that DST was added in 1.4 so it is numbered out of order...

The source is composited over the destination
(Porter-Duff Source Over Destination rule).
<p>
<em>F<sub>s</sub></em> = 1 and <em>F<sub>d</sub></em> = (1-<em>A<sub>s</sub></em>), thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em> + <em>A<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em> + <em>C<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
</pre>

"
      end

      attribute 1330306 "DST_OVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The destination is composited over the source and
the result replaces the destination
(Porter-Duff Destination Over Source rule).
<p>
<em>F<sub>s</sub></em> = (1-<em>A<sub>d</sub></em>) and <em>F<sub>d</sub></em> = 1, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>A<sub>d</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>C<sub>d</sub></em>
</pre>

"
      end

      attribute 1330434 "SRC_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the source lying inside of the destination replaces
the destination
(Porter-Duff Source In Destination rule).
<p>
<em>F<sub>s</sub></em> = <em>A<sub>d</sub></em> and <em>F<sub>d</sub></em> = 0, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*<em>A<sub>d</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*<em>A<sub>d</sub></em>
</pre>

"
      end

      attribute 1330562 "DST_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the destination lying inside of the source
replaces the destination
(Porter-Duff Destination In Source rule).
<p>
<em>F<sub>s</sub></em> = 0 and <em>F<sub>d</sub></em> = <em>A<sub>s</sub></em>, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>d</sub></em>*<em>A<sub>s</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>d</sub></em>*<em>A<sub>s</sub></em>
</pre>

"
      end

      attribute 1330690 "SRC_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the source lying outside of the destination
replaces the destination
(Porter-Duff Source Held Out By Destination rule).
<p>
<em>F<sub>s</sub></em> = (1-<em>A<sub>d</sub></em>) and <em>F<sub>d</sub></em> = 0, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>)
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>)
</pre>

"
      end

      attribute 1330818 "DST_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the destination lying outside of the source
replaces the destination
(Porter-Duff Destination Held Out By Source rule).
<p>
<em>F<sub>s</sub></em> = 0 and <em>F<sub>d</sub></em> = (1-<em>A<sub>s</sub></em>), thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
 <em>C<sub>r</sub></em> = <em>C<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
</pre>

"
      end

      attribute 1330946 "SRC_ATOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Rule 9 is DST which is defined above where it fits into the
 list logically, rather than numerically

 public static final int  DST             = 9;

The part of the source lying inside of the destination
is composited onto the destination
(Porter-Duff Source Atop Destination rule).
<p>
<em>F<sub>s</sub></em> = <em>A<sub>d</sub></em> and <em>F<sub>d</sub></em> = (1-<em>A<sub>s</sub></em>), thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*<em>A<sub>d</sub></em> + <em>A<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>) = <em>A<sub>d</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*<em>A<sub>d</sub></em> + <em>C<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
</pre>
@since 1.4

"
      end

      attribute 1331074 "DST_ATOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the destination lying inside of the source
is composited over the source and replaces the destination
(Porter-Duff Destination Atop Source rule).
<p>
<em>F<sub>s</sub></em> = (1-<em>A<sub>d</sub></em>) and <em>F<sub>d</sub></em> = <em>A<sub>s</sub></em>, thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>A<sub>d</sub></em>*<em>A<sub>s</sub></em> = <em>A<sub>s</sub></em>
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>C<sub>d</sub></em>*<em>A<sub>s</sub></em>
</pre>
@since 1.4

"
      end

      attribute 1331202 "XOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The part of the source that lies outside of the destination
is combined with the part of the destination that lies outside
of the source
(Porter-Duff Source Xor Destination rule).
<p>
<em>F<sub>s</sub></em> = (1-<em>A<sub>d</sub></em>) and <em>F<sub>d</sub></em> = (1-<em>A<sub>s</sub></em>), thus:
<pre>
 <em>A<sub>r</sub></em> = <em>A<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>A<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
 <em>C<sub>r</sub></em> = <em>C<sub>s</sub></em>*(1-<em>A<sub>d</sub></em>) + <em>C<sub>d</sub></em>*(1-<em>A<sub>s</sub></em>)
</pre>
@since 1.4

"
      end

      classrelation 2880002 // Clear (<unidirectional association>)
	relation 2880002 --->
	  a role_name "Clear" init_value " new AlphaComposite(CLEAR)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque CLEAR rule
with an alpha of 1.0f.
@see #CLEAR

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880002 // Clear (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880130 // Src (<unidirectional association>)
	relation 2880130 --->
	  a role_name "Src" init_value " new AlphaComposite(SRC)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque SRC rule
with an alpha of 1.0f.
@see #SRC

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880130 // Src (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880258 // Dst (<unidirectional association>)
	relation 2880258 --->
	  a role_name "Dst" init_value " new AlphaComposite(DST)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque DST rule
with an alpha of 1.0f.
@see #DST
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880258 // Dst (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880386 // SrcOver (<unidirectional association>)
	relation 2880386 --->
	  a role_name "SrcOver" init_value " new AlphaComposite(SRC_OVER)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque SRC_OVER rule
with an alpha of 1.0f.
@see #SRC_OVER

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880386 // SrcOver (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880514 // DstOver (<unidirectional association>)
	relation 2880514 --->
	  a role_name "DstOver" init_value " new AlphaComposite(DST_OVER)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque DST_OVER rule
with an alpha of 1.0f.
@see #DST_OVER

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880514 // DstOver (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880642 // SrcIn (<unidirectional association>)
	relation 2880642 --->
	  a role_name "SrcIn" init_value " new AlphaComposite(SRC_IN)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque SRC_IN rule
with an alpha of 1.0f.
@see #SRC_IN

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880642 // SrcIn (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880770 // DstIn (<unidirectional association>)
	relation 2880770 --->
	  a role_name "DstIn" init_value " new AlphaComposite(DST_IN)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque DST_IN rule
with an alpha of 1.0f.
@see #DST_IN

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880770 // DstIn (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2880898 // SrcOut (<unidirectional association>)
	relation 2880898 --->
	  a role_name "SrcOut" init_value " new AlphaComposite(SRC_OUT)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque SRC_OUT rule
with an alpha of 1.0f.
@see #SRC_OUT

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2880898 // SrcOut (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2881026 // DstOut (<unidirectional association>)
	relation 2881026 --->
	  a role_name "DstOut" init_value " new AlphaComposite(DST_OUT)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque DST_OUT rule
with an alpha of 1.0f.
@see #DST_OUT

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2881026 // DstOut (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2881154 // SrcAtop (<unidirectional association>)
	relation 2881154 --->
	  a role_name "SrcAtop" init_value " new AlphaComposite(SRC_ATOP)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque SRC_ATOP rule
with an alpha of 1.0f.
@see #SRC_ATOP
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2881154 // SrcAtop (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2881282 // DstAtop (<unidirectional association>)
	relation 2881282 --->
	  a role_name "DstAtop" init_value " new AlphaComposite(DST_ATOP)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque DST_ATOP rule
with an alpha of 1.0f.
@see #DST_ATOP
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2881282 // DstAtop (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      classrelation 2881410 // Xor (<unidirectional association>)
	relation 2881410 --->
	  a role_name "Xor" init_value " new AlphaComposite(XOR)" class_relation const_relation public
	    comment "
<code>AlphaComposite</code> object that implements the opaque XOR rule
with an alpha of 1.0f.
@see #XOR
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2881410 // Xor (<unidirectional association>)
	  b parent class_ref 856194 // AlphaComposite
      end

      attribute 1331330 "MIN_RULE"
	class_attribute const_attribute private explicit_type "int"
	init_value " CLEAR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1331458 "MAX_RULE"
	class_attribute const_attribute private explicit_type "int"
	init_value " XOR"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1331586 "extraAlpha"
	package explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1331714 "rule"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6073218 "AlphaComposite"
	private explicit_return_type ""
	nparams 1
	  param in name "rule" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6073346 "AlphaComposite"
	private explicit_return_type ""
	nparams 2
	  param in name "rule" explicit_type "int"
	  param in name "alpha" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6073474 "getInstance"
	class_operation public return_type class_ref 856194 // AlphaComposite
	nparams 1
	  param in name "rule" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>AlphaComposite</code> object with the specified rule.
@param rule the compositing rule
@throws IllegalArgumentException if <code>rule</code> is not one of
        the following:  {@link #CLEAR}, {@link #SRC}, {@link #DST},
        {@link #SRC_OVER}, {@link #DST_OVER}, {@link #SRC_IN},
        {@link #DST_IN}, {@link #SRC_OUT}, {@link #DST_OUT},
        {@link #SRC_ATOP}, {@link #DST_ATOP}, or {@link #XOR}
"
      end

      operation 6073602 "getInstance"
	class_operation public return_type class_ref 856194 // AlphaComposite
	nparams 2
	  param in name "rule" explicit_type "int"
	  param in name "alpha" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>AlphaComposite</code> object with the specified rule and
the constant alpha to multiply with the alpha of the source.
The source is multiplied with the specified alpha before being composited
with the destination.
@param rule the compositing rule
@param alpha the constant alpha to be multiplied with the alpha of
the source. <code>alpha</code> must be a floating point number in the
inclusive range [0.0,&nbsp;1.0].
@throws IllegalArgumentException if
        <code>alpha</code> is less than 0.0 or greater than 1.0, or if
        <code>rule</code> is not one of
        the following:  {@link #CLEAR}, {@link #SRC}, {@link #DST},
        {@link #SRC_OVER}, {@link #DST_OVER}, {@link #SRC_IN},
        {@link #DST_IN}, {@link #SRC_OUT}, {@link #DST_OUT},
        {@link #SRC_ATOP}, {@link #DST_ATOP}, or {@link #XOR}
"
      end

      operation 6073730 "createContext"
	public return_type class_ref 856450 // CompositeContext
	nparams 3
	  param inout name "srcColorModel" type class_ref 312066 // ColorModel
	  param inout name "dstColorModel" type class_ref 312066 // ColorModel
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a context for the compositing operation.
The context contains state that is used in performing
the compositing operation.
@param srcColorModel  the {@link ColorModel} of the source
@param dstColorModel  the <code>ColorModel</code> of the destination
@return the <code>CompositeContext</code> object to be used to perform
compositing operations.
"
      end

      operation 6073858 "getAlpha"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alpha value of this <code>AlphaComposite</code>.  If this
<code>AlphaComposite</code> does not have an alpha value, 1.0 is returned.
@return the alpha value of this <code>AlphaComposite</code>.
"
      end

      operation 6073986 "getRule"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the compositing rule of this <code>AlphaComposite</code>.
@return the compositing rule of this <code>AlphaComposite</code>.
"
      end

      operation 6074114 "derive"
	public return_type class_ref 856194 // AlphaComposite
	nparams 1
	  param in name "rule" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a similar <code>AlphaComposite</code> object that uses
the specified compositing rule.
If this object already uses the specified compositing rule,
this object is returned.
@return an <code>AlphaComposite</code> object derived from
this object that uses the specified compositing rule.
@param rule the compositing rule
@throws IllegalArgumentException if
        <code>rule</code> is not one of
        the following:  {@link #CLEAR}, {@link #SRC}, {@link #DST},
        {@link #SRC_OVER}, {@link #DST_OVER}, {@link #SRC_IN},
        {@link #DST_IN}, {@link #SRC_OUT}, {@link #DST_OUT},
        {@link #SRC_ATOP}, {@link #DST_ATOP}, or {@link #XOR}
@since 1.6
"
      end

      operation 6074242 "derive"
	public return_type class_ref 856194 // AlphaComposite
	nparams 1
	  param in name "alpha" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a similar <code>AlphaComposite</code> object that uses
the specified alpha value.
If this object already has the specified alpha value,
this object is returned.
@return an <code>AlphaComposite</code> object derived from
this object that uses the specified alpha value.
@param alpha the constant alpha to be multiplied with the alpha of
the source. <code>alpha</code> must be a floating point number in the
inclusive range [0.0,&nbsp;1.0].
@throws IllegalArgumentException if
        <code>alpha</code> is less than 0.0 or greater than 1.0
@since 1.6
"
      end

      operation 6074370 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode for this composite.
@return      a hash code for this composite.
"
      end

      operation 6074498 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified object is equal to this
<code>AlphaComposite</code>.
<p>
The result is <code>true</code> if and only if
the argument is not <code>null</code> and is an
<code>AlphaComposite</code> object that has the same
compositing rule and alpha value as this object.

@param obj the <code>Object</code> to test for equality
@return <code>true</code> if <code>obj</code> equals this
<code>AlphaComposite</code>; <code>false</code> otherwise.
"
      end
    end

    class 856322 "Composite"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Composite</code> interface, along with
{@link CompositeContext}, defines the methods to compose a draw
primitive with the underlying graphics area.
After the <code>Composite</code> is set in the
{@link Graphics2D} context, it combines a shape, text, or an image
being rendered with the colors that have already been rendered
according to pre-defined rules. The classes
implementing this interface provide the rules and a method to create
the context for a particular operation.
<code>CompositeContext</code> is an environment used by the
compositing operation, which is created by the <code>Graphics2D</code>
prior to the start of the operation.  <code>CompositeContext</code>
contains private information and resources needed for a compositing
operation.  When the <code>CompositeContext</code> is no longer needed,
the <code>Graphics2D</code> object disposes of it in order to reclaim
resources allocated for the operation.
<p>
Instances of classes implementing <code>Composite</code> must be
immutable because the <code>Graphics2D</code> does not clone
these objects when they are set as an attribute with the
<code>setComposite</code> method or when the <code>Graphics2D</code>
object is cloned.  This is to avoid undefined rendering behavior of
<code>Graphics2D</code>, resulting from the modification of
the <code>Composite</code> object after it has been set in the
<code>Graphics2D</code> context.
<p>
Since this interface must expose the contents of pixels on the
target device or image to potentially arbitrary code, the use of
custom objects which implement this interface when rendering directly
to a screen device is governed by the <code>readDisplayPixels</code>
{@link AWTPermission}.  The permission check will occur when such
a custom object is passed to the <code>setComposite</code> method
of a <code>Graphics2D</code> retrieved from a {@link Component}.
@see AlphaComposite
@see CompositeContext
@see Graphics2D#setComposite
"
      operation 6073090 "createContext"
	public return_type class_ref 856450 // CompositeContext
	nparams 3
	  param inout name "srcColorModel" type class_ref 312066 // ColorModel
	  param inout name "dstColorModel" type class_ref 312066 // ColorModel
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a context containing state that is used to perform
the compositing operation.  In a multi-threaded environment,
several contexts can exist simultaneously for a single
<code>Composite</code> object.
@param srcColorModel  the {@link ColorModel} of the source
@param dstColorModel  the <code>ColorModel</code> of the destination
@param hints the hint that the context object uses to choose between
rendering alternatives
@return the <code>CompositeContext</code> object used to perform the
compositing operation.
"
      end
    end

    class 856450 "CompositeContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>CompositeContext</code> interface defines the encapsulated
and optimized environment for a compositing operation.
<code>CompositeContext</code> objects maintain state for
compositing operations.  In a multi-threaded environment, several
contexts can exist simultaneously for a single {@link Composite}
object.
@see Composite
"
      operation 6144002 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases resources allocated for a context.
"
      end

      operation 6144130 "compose"
	public explicit_return_type "void"
	nparams 3
	  param inout name "src" type class_ref 311682 // Raster
	  param inout name "dstIn" type class_ref 311682 // Raster
	  param inout name "dstOut" type class_ref 322690 // WritableRaster
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Composes the two source {@link Raster} objects and
places the result in the destination
{@link WritableRaster}.  Note that the destination
can be the same object as either the first or second
source. Note that <code>dstIn</code> and
<code>dstOut</code> must be compatible with the
<code>dstColorModel</code> passed to the
{@link Composite#createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints) createContext}
method of the <code>Composite</code> interface.
@param src the first source for the compositing operation
@param dstIn the second source for the compositing operation
@param dstOut the <code>WritableRaster</code> into which the
result of the operation is stored
@see Composite
"
      end
    end

    class 856578 "RenderingHints"
      visibility public 
      nactuals 2
      actual class class_ref 130178 // Map
        rank 0 explicit_value ""
      actual class class_ref 130178 // Map
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code RenderingHints} class defines and manages collections of
keys and associated values which allow an application to provide input
into the choice of algorithms used by other classes which perform
rendering and image manipulation services.
The {@link java.awt.Graphics2D} class, and classes that implement
{@link java.awt.image.BufferedImageOp} and
{@link java.awt.image.RasterOp} all provide methods to get and
possibly to set individual or groups of {@code RenderingHints}
keys and their associated values.
When those implementations perform any rendering or image manipulation
operations they should examine the values of any {@code RenderingHints}
that were requested by the caller and tailor the algorithms used
accordingly and to the best of their ability.
<p>
Note that since these keys and values are <i>hints</i>, there is
no requirement that a given implementation supports all possible
choices indicated below or that it can respond to requests to
modify its choice of algorithm.
The values of the various hint keys may also interact such that
while all variants of a given key are supported in one situation,
the implementation may be more restricted when the values associated
with other keys are modified.
For example, some implementations may be able to provide several
types of dithering when the antialiasing hint is turned off, but
have little control over dithering when antialiasing is on.
The full set of supported keys and hints may also vary by destination
since runtimes may use different underlying modules to render to
the screen, or to {@link java.awt.image.BufferedImage} objects,
or while printing.
<p>
Implementations are free to ignore the hints completely, but should
try to use an implementation algorithm that is as close as possible
to the request.
If an implementation supports a given algorithm when any value is used
for an associated hint key, then minimally it must do so when the
value for that key is the exact value that specifies the algorithm.
<p>
The keys used to control the hints are all special values that
subclass the associated {@link RenderingHints.Key} class.
Many common hints are expressed below as static constants in this
class, but the list is not meant to be exhaustive.
Other hints may be created by other packages by defining new objects
which subclass the {@code Key} class and defining the associated values.
"
      class 867458 "Key"
	abstract visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2964610 // identitymap (<unidirectional association>)
	  relation 2964610 --->
	    a role_name "identitymap" init_value " new HashMap<>(17)" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object,Object> ${name}${value};
"
	      classrelation_ref 2964610 // identitymap (<unidirectional association>)
	    b parent class_ref 132866 // HashMap
	end

	operation 6309250 "getIdentity"
	  private return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6309378 "recordIdentity"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param inout name "k" type class_ref 867458 // Key
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1420802 "privatekey"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6309506 "Key"
	  protected explicit_return_type ""
	  nparams 1
	    param in name "privatekey" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a key using the indicated private key.  Each
subclass of Key maintains its own unique domain of integer
keys.  No two objects with the same integer key and of the
same specific subclass can be constructed.  An exception
will be thrown if an attempt is made to construct another
object of a given class with the same integer key as a
pre-existing instance of that subclass of Key.
@param privatekey the specified key
"
	end

	operation 6309634 "isCompatibleValue"
	  abstract public explicit_return_type "boolean"
	  nparams 1
	    param inout name "val" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the specified object is a valid value
for this Key.
@param val the <code>Object</code> to test for validity
@return <code>true</code> if <code>val</code> is valid;
        <code>false</code> otherwise.
"
	end

	operation 6309762 "intKey"
	  protected explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the private integer key that the subclass
instantiated this Key with.
@return the private integer key that the subclass
instantiated this Key with.
"
	end

	operation 6309890 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The hash code for all Key objects will be the same as the
system identity code of the object as defined by the
System.identityHashCode() method.
"
	end

	operation 6310018 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The equals method for all Key objects will return the same
result as the equality operator '=='.
"
	end
      end

      classrelation 2964354 // <realization>
	relation 2964354 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 2964354 // <realization>
	  b parent class_ref 130178 // Map
      end

      classrelation 2964482 // <realization>
	relation 2964482 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2964482 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2964738 // hintmap (<unidirectional association>)
	relation 2964738 --->
	  a role_name "hintmap" init_value " new HashMap<>(7)" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object,Object> ${name}${value};
"
	    classrelation_ref 2964738 // hintmap (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 2964866 // KEY_ANTIALIASING (<unidirectional association>)
	relation 2964866 --->
	  a role_name "KEY_ANTIALIASING" init_value "
        SunHints.KEY_ANTIALIASING" class_relation const_relation public
	    comment "
Antialiasing hint key.
The {@code ANTIALIASING} hint controls whether or not the
geometry rendering methods of a {@link Graphics2D} object
will attempt to reduce aliasing artifacts along the edges
of shapes.
<p>
A typical antialiasing algorithm works by blending the existing
colors of the pixels along the boundary of a shape with the
requested fill paint according to the estimated partial pixel
coverage of the shape.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_ANTIALIAS_ON}
<li>{@link #VALUE_ANTIALIAS_OFF}
<li>{@link #VALUE_ANTIALIAS_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2964866 // KEY_ANTIALIASING (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2964994 // VALUE_ANTIALIAS_ON (<unidirectional association>)
	relation 2964994 --->
	  a role_name "VALUE_ANTIALIAS_ON" init_value "
        SunHints.VALUE_ANTIALIAS_ON" class_relation const_relation public
	    comment "
Antialiasing hint value -- rendering is done with antialiasing.
@see #KEY_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2964994 // VALUE_ANTIALIAS_ON (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965122 // VALUE_ANTIALIAS_OFF (<unidirectional association>)
	relation 2965122 --->
	  a role_name "VALUE_ANTIALIAS_OFF" init_value "
        SunHints.VALUE_ANTIALIAS_OFF" class_relation const_relation public
	    comment "
Antialiasing hint value -- rendering is done without antialiasing.
@see #KEY_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965122 // VALUE_ANTIALIAS_OFF (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965250 // VALUE_ANTIALIAS_DEFAULT (<unidirectional association>)
	relation 2965250 --->
	  a role_name "VALUE_ANTIALIAS_DEFAULT" init_value "
         SunHints.VALUE_ANTIALIAS_DEFAULT" class_relation const_relation public
	    comment "
Antialiasing hint value -- rendering is done with a default
antialiasing mode chosen by the implementation.
@see #KEY_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965250 // VALUE_ANTIALIAS_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965378 // KEY_RENDERING (<unidirectional association>)
	relation 2965378 --->
	  a role_name "KEY_RENDERING" init_value "
         SunHints.KEY_RENDERING" class_relation const_relation public
	    comment "
Rendering hint key.
The {@code RENDERING} hint is a general hint that provides
a high level recommendation as to whether to bias algorithm
choices more for speed or quality when evaluating tradeoffs.
This hint could be consulted for any rendering or image
manipulation operation, but decisions will usually honor
other, more specific hints in preference to this hint.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_RENDER_SPEED}
<li>{@link #VALUE_RENDER_QUALITY}
<li>{@link #VALUE_RENDER_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965378 // KEY_RENDERING (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2965506 // VALUE_RENDER_SPEED (<unidirectional association>)
	relation 2965506 --->
	  a role_name "VALUE_RENDER_SPEED" init_value "
         SunHints.VALUE_RENDER_SPEED" class_relation const_relation public
	    comment "
Rendering hint value -- rendering algorithms are chosen
with a preference for output speed.
@see #KEY_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965506 // VALUE_RENDER_SPEED (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965634 // VALUE_RENDER_QUALITY (<unidirectional association>)
	relation 2965634 --->
	  a role_name "VALUE_RENDER_QUALITY" init_value "
         SunHints.VALUE_RENDER_QUALITY" class_relation const_relation public
	    comment "
Rendering hint value -- rendering algorithms are chosen
with a preference for output quality.
@see #KEY_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965634 // VALUE_RENDER_QUALITY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965762 // VALUE_RENDER_DEFAULT (<unidirectional association>)
	relation 2965762 --->
	  a role_name "VALUE_RENDER_DEFAULT" init_value "
         SunHints.VALUE_RENDER_DEFAULT" class_relation const_relation public
	    comment "
Rendering hint value -- rendering algorithms are chosen
by the implementation for a good tradeoff of performance
vs. quality.
@see #KEY_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965762 // VALUE_RENDER_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2965890 // KEY_DITHERING (<unidirectional association>)
	relation 2965890 --->
	  a role_name "KEY_DITHERING" init_value "
         SunHints.KEY_DITHERING" class_relation const_relation public
	    comment "
Dithering hint key.
The {@code DITHERING} hint controls how closely to approximate
a color when storing into a destination with limited color
resolution.
<p>
Some rendering destinations may support a limited number of
color choices which may not be able to accurately represent
the full spectrum of colors that can result during rendering
operations.
For such a destination the {@code DITHERING} hint controls
whether rendering is done with a flat solid fill of a single
pixel value which is the closest supported color to what was
requested, or whether shapes will be filled with a pattern of
colors which combine to better approximate that color.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_DITHER_DISABLE}
<li>{@link #VALUE_DITHER_ENABLE}
<li>{@link #VALUE_DITHER_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2965890 // KEY_DITHERING (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2966018 // VALUE_DITHER_DISABLE (<unidirectional association>)
	relation 2966018 --->
	  a role_name "VALUE_DITHER_DISABLE" init_value "
         SunHints.VALUE_DITHER_DISABLE" class_relation const_relation public
	    comment "
Dithering hint value -- do not dither when rendering geometry.
@see #KEY_DITHERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966018 // VALUE_DITHER_DISABLE (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966146 // VALUE_DITHER_ENABLE (<unidirectional association>)
	relation 2966146 --->
	  a role_name "VALUE_DITHER_ENABLE" init_value "
         SunHints.VALUE_DITHER_ENABLE" class_relation const_relation public
	    comment "
Dithering hint value -- dither when rendering geometry, if needed.
@see #KEY_DITHERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966146 // VALUE_DITHER_ENABLE (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966274 // VALUE_DITHER_DEFAULT (<unidirectional association>)
	relation 2966274 --->
	  a role_name "VALUE_DITHER_DEFAULT" init_value "
         SunHints.VALUE_DITHER_DEFAULT" class_relation const_relation public
	    comment "
Dithering hint value -- use a default for dithering chosen by
the implementation.
@see #KEY_DITHERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966274 // VALUE_DITHER_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966402 // KEY_TEXT_ANTIALIASING (<unidirectional association>)
	relation 2966402 --->
	  a role_name "KEY_TEXT_ANTIALIASING" init_value "
         SunHints.KEY_TEXT_ANTIALIASING" class_relation const_relation public
	    comment "
Text antialiasing hint key.
The {@code TEXT_ANTIALIASING} hint can control the use of
antialiasing algorithms for text independently of the
choice used for shape rendering.
Often an application may want to use antialiasing for text
only and not for other shapes.
Additionally, the algorithms for reducing the aliasing
artifacts for text are often more sophisticated than those
that have been developed for general rendering so this
hint key provides additional values which can control
the choices of some of those text-specific algorithms.
If left in the {@code DEFAULT} state, this hint will
generally defer to the value of the regular
{@link #KEY_ANTIALIASING} hint key.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_TEXT_ANTIALIAS_ON}
<li>{@link #VALUE_TEXT_ANTIALIAS_OFF}
<li>{@link #VALUE_TEXT_ANTIALIAS_DEFAULT}
<li>{@link #VALUE_TEXT_ANTIALIAS_GASP}
<li>{@link #VALUE_TEXT_ANTIALIAS_LCD_HRGB}
<li>{@link #VALUE_TEXT_ANTIALIAS_LCD_HBGR}
<li>{@link #VALUE_TEXT_ANTIALIAS_LCD_VRGB}
<li>{@link #VALUE_TEXT_ANTIALIAS_LCD_VBGR}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966402 // KEY_TEXT_ANTIALIASING (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2966530 // VALUE_TEXT_ANTIALIAS_ON (<unidirectional association>)
	relation 2966530 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_ON" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_ON" class_relation const_relation public
	    comment "
Text antialiasing hint value -- text rendering is done with
some form of antialiasing.
@see #KEY_TEXT_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966530 // VALUE_TEXT_ANTIALIAS_ON (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966658 // VALUE_TEXT_ANTIALIAS_OFF (<unidirectional association>)
	relation 2966658 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_OFF" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_OFF" class_relation const_relation public
	    comment "
Text antialiasing hint value -- text rendering is done without
any form of antialiasing.
@see #KEY_TEXT_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966658 // VALUE_TEXT_ANTIALIAS_OFF (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966786 // VALUE_TEXT_ANTIALIAS_DEFAULT (<unidirectional association>)
	relation 2966786 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_DEFAULT" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_DEFAULT" class_relation const_relation public
	    comment "
Text antialiasing hint value -- text rendering is done according
to the {@link #KEY_ANTIALIASING} hint or a default chosen by the
implementation.
@see #KEY_TEXT_ANTIALIASING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966786 // VALUE_TEXT_ANTIALIAS_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2966914 // VALUE_TEXT_ANTIALIAS_GASP (<unidirectional association>)
	relation 2966914 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_GASP" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_GASP" class_relation const_relation public
	    comment "
Text antialiasing hint value -- text rendering is requested to
use information in the font resource which specifies for each point
size whether to apply {@link #VALUE_TEXT_ANTIALIAS_ON} or
{@link #VALUE_TEXT_ANTIALIAS_OFF}.
<p>
TrueType fonts typically provide this information in the 'gasp' table.
In the absence of this information, the behaviour for a particular
font and size is determined by implementation defaults.
<p>
<i>Note:</i>A font designer will typically carefully hint a font for
the most common user interface point sizes. Consequently the 'gasp'
table will likely specify to use only hinting at those sizes and not
\"smoothing\". So in many cases the resulting text display is
equivalent to {@code VALUE_TEXT_ANTIALIAS_OFF}.
This may be unexpected but is correct.
<p>
Logical fonts which are composed of multiple physical fonts will for
consistency will use the setting most appropriate for the overall
composite font.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2966914 // VALUE_TEXT_ANTIALIAS_GASP (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967042 // VALUE_TEXT_ANTIALIAS_LCD_HRGB (<unidirectional association>)
	relation 2967042 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_LCD_HRGB" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB" class_relation const_relation public
	    comment "
Text antialiasing hint value -- request that text be displayed
optimised for an LCD display with subpixels in order from display
left to right of R,G,B such that the horizontal subpixel resolution
is three times that of the full pixel horizontal resolution (HRGB).
This is the most common configuration.
Selecting this hint for displays with one of the other LCD subpixel
configurations will likely result in unfocused text.
<p>
<i>Notes:</i><br>
An implementation when choosing whether to apply any of the
LCD text hint values may take into account factors including requiring
color depth of the destination to be at least 15 bits per pixel
(ie 5 bits per color component),
characteristics of a font such as whether embedded bitmaps may
produce better results, or when displaying to a non-local networked
display device enabling it only if suitable protocols are available,
or ignoring the hint if performing very high resolution rendering
or the target device is not appropriate: eg when printing.
<p>
These hints can equally be applied when rendering to software images,
but these images may not then be suitable for general export, as the
text will have been rendered appropriately for a specific subpixel
organisation. Also lossy images are not a good choice, nor image
formats such as GIF which have limited colors.
So unless the image is destined solely for rendering on a
display device with the same configuration, some other text
anti-aliasing hint such as
{@link #VALUE_TEXT_ANTIALIAS_ON}
may be a better choice.
<p>Selecting a value which does not match the LCD display in use
will likely lead to a degradation in text quality.
On display devices (ie CRTs) which do not have the same characteristics
as LCD displays, the overall effect may appear similar to standard text
anti-aliasing, but the quality may be degraded by color distortion.
Analog connected LCD displays may also show little advantage over
standard text-antialiasing and be similar to CRTs.
<p>
In other words for the best results use an LCD display with a digital
display connector and specify the appropriate sub-pixel configuration.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967042 // VALUE_TEXT_ANTIALIAS_LCD_HRGB (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967170 // VALUE_TEXT_ANTIALIAS_LCD_HBGR (<unidirectional association>)
	relation 2967170 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_LCD_HBGR" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_LCD_HBGR" class_relation const_relation public
	    comment "
Text antialiasing hint value -- request that text be displayed
optimised for an LCD display with subpixels in order from display
left to right of B,G,R such that the horizontal subpixel resolution
is three times that of the full pixel horizontal resolution (HBGR).
This is a much less common configuration than HRGB.
Selecting this hint for displays with one of the other LCD subpixel
configurations will likely result in unfocused text.
See {@link #VALUE_TEXT_ANTIALIAS_LCD_HRGB},
for more information on when this hint is applied.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967170 // VALUE_TEXT_ANTIALIAS_LCD_HBGR (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967298 // VALUE_TEXT_ANTIALIAS_LCD_VRGB (<unidirectional association>)
	relation 2967298 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_LCD_VRGB" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_LCD_VRGB" class_relation const_relation public
	    comment "
Text antialiasing hint value -- request that text be displayed
optimised for an LCD display with subpixel organisation from display
top to bottom of R,G,B such that the vertical subpixel resolution is
three times that of the full pixel vertical resolution (VRGB).
Vertical orientation is very uncommon and probably mainly useful
for a physically rotated display.
Selecting this hint for displays with one of the other LCD subpixel
configurations will likely result in unfocused text.
See {@link #VALUE_TEXT_ANTIALIAS_LCD_HRGB},
for more information on when this hint is applied.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967298 // VALUE_TEXT_ANTIALIAS_LCD_VRGB (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967426 // VALUE_TEXT_ANTIALIAS_LCD_VBGR (<unidirectional association>)
	relation 2967426 --->
	  a role_name "VALUE_TEXT_ANTIALIAS_LCD_VBGR" init_value "
         SunHints.VALUE_TEXT_ANTIALIAS_LCD_VBGR" class_relation const_relation public
	    comment "
Text antialiasing hint value -- request that text be displayed
optimised for an LCD display with subpixel organisation from display
top to bottom of B,G,R such that the vertical subpixel resolution is
three times that of the full pixel vertical resolution (VBGR).
Vertical orientation is very uncommon and probably mainly useful
for a physically rotated display.
Selecting this hint for displays with one of the other LCD subpixel
configurations will likely result in unfocused text.
See {@link #VALUE_TEXT_ANTIALIAS_LCD_HRGB},
for more information on when this hint is applied.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967426 // VALUE_TEXT_ANTIALIAS_LCD_VBGR (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967554 // KEY_TEXT_LCD_CONTRAST (<unidirectional association>)
	relation 2967554 --->
	  a role_name "KEY_TEXT_LCD_CONTRAST" init_value "
        SunHints.KEY_TEXT_ANTIALIAS_LCD_CONTRAST" class_relation const_relation public
	    comment "
LCD text contrast rendering hint key.
The value is an <code>Integer</code> object which is used as a text
contrast adjustment when used in conjunction with an LCD text
anti-aliasing hint such as
{@link #VALUE_TEXT_ANTIALIAS_LCD_HRGB}.
<ul>
<li>Values should be a positive integer in the range 100 to 250.
<li>A lower value (eg 100) corresponds to higher contrast text when
displaying dark text on a light background.
<li>A higher value (eg 200) corresponds to lower contrast text when
displaying dark text on a light background.
<li>A typical useful value is in the narrow range 140-180.
<li>If no value is specified, a system or implementation default value
will be applied.
</ul>
The default value can be expected to be adequate for most purposes,
so clients should rarely need to specify a value for this hint unless
they have concrete information as to an appropriate value.
A higher value does not mean a higher contrast, in fact the opposite
is true.
The correction is applied in a similar manner to a gamma adjustment
for non-linear perceptual luminance response of display systems, but
does not indicate a full correction for this.

@see #KEY_TEXT_ANTIALIASING
@since 1.6

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967554 // KEY_TEXT_LCD_CONTRAST (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2967682 // KEY_FRACTIONALMETRICS (<unidirectional association>)
	relation 2967682 --->
	  a role_name "KEY_FRACTIONALMETRICS" init_value "
         SunHints.KEY_FRACTIONALMETRICS" class_relation const_relation public
	    comment "
Font fractional metrics hint key.
The {@code FRACTIONALMETRICS} hint controls whether the positioning
of individual character glyphs takes into account the sub-pixel
accuracy of the scaled character advances of the font or whether
such advance vectors are rounded to an integer number of whole
device pixels.
This hint only recommends how much accuracy should be used to
position the glyphs and does not specify or recommend whether or
not the actual rasterization or pixel bounds of the glyph should
be modified to match.
<p>
Rendering text to a low resolution device like a screen will
necessarily involve a number of rounding operations as the
high quality and very precise definition of the shape and
metrics of the character glyphs must be matched to discrete
device pixels.
Ideally the positioning of glyphs during text layout would be
calculated by scaling the design metrics in the font according
to the point size, but then the scaled advance width will not
necessarily be an integer number of pixels.
If the glyphs are positioned with sub-pixel accuracy according
to these scaled design metrics then the rasterization would
ideally need to be adjusted for each possible sub-pixel origin.
<p>
Unfortunately, scaling each glyph customized to its exact
subpixel origin during text layout would be prohibitively
expensive so a simplified system based on integer device
positions is typically used to lay out the text.
The rasterization of the glyph and the scaled advance width
are both adjusted together to yield text that looks good at
device resolution and has consistent integer pixel distances
between glyphs that help the glyphs look uniformly and
consistently spaced and readable.
<p>
This process of rounding advance widths for rasterized glyphs
to integer distances means that the character density and the
overall length of a string of text will be different from the
theoretical design measurements due to the accumulation of
a series of small differences in the adjusted widths of
each glyph.
The specific differences will be different for each glyph,
some being wider and some being narrower than their theoretical
design measurements.
Thus the overall difference in character density and length
will vary by a number of factors including the font, the
specific device resolution being targeted, and the glyphs
chosen to represent the string being rendered.
As a result, rendering the same string at multiple device
resolutions can yield widely varying metrics for whole strings.
<p>
When {@code FRACTIONALMETRICS} are enabled, the true font design
metrics are scaled by the point size and used for layout with
sub-pixel accuracy.
The average density of glyphs and total length of a long
string of characters will therefore more closely match the
theoretical design of the font, but readability may be affected
since individual pairs of characters may not always appear to
be consistent distances apart depending on how the sub-pixel
accumulation of the glyph origins meshes with the device pixel
grid.
Enabling this hint may be desirable when text layout is being
performed that must be consistent across a wide variety of
output resolutions.
Specifically, this hint may be desirable in situations where
the layout of text is being previewed on a low resolution
device like a screen for output that will eventually be
rendered on a high resolution printer or typesetting device.
<p>
When disabled, the scaled design metrics are rounded or adjusted
to integer distances for layout.
The distances between any specific pair of glyphs will be more
uniform on the device, but the density and total length of long
strings may no longer match the theoretical intentions of the
font designer.
Disabling this hint will typically produce more readable results
on low resolution devices like computer monitors.
<p>
The allowable values for this key are
<ul>
<li>{@link #VALUE_FRACTIONALMETRICS_OFF}
<li>{@link #VALUE_FRACTIONALMETRICS_ON}
<li>{@link #VALUE_FRACTIONALMETRICS_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967682 // KEY_FRACTIONALMETRICS (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2967810 // VALUE_FRACTIONALMETRICS_OFF (<unidirectional association>)
	relation 2967810 --->
	  a role_name "VALUE_FRACTIONALMETRICS_OFF" init_value "
         SunHints.VALUE_FRACTIONALMETRICS_OFF" class_relation const_relation public
	    comment "
Font fractional metrics hint value -- character glyphs are
positioned with advance widths rounded to pixel boundaries.
@see #KEY_FRACTIONALMETRICS

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967810 // VALUE_FRACTIONALMETRICS_OFF (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2967938 // VALUE_FRACTIONALMETRICS_ON (<unidirectional association>)
	relation 2967938 --->
	  a role_name "VALUE_FRACTIONALMETRICS_ON" init_value "
         SunHints.VALUE_FRACTIONALMETRICS_ON" class_relation const_relation public
	    comment "
Font fractional metrics hint value -- character glyphs are
positioned with sub-pixel accuracy.
@see #KEY_FRACTIONALMETRICS

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2967938 // VALUE_FRACTIONALMETRICS_ON (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968066 // VALUE_FRACTIONALMETRICS_DEFAULT (<unidirectional association>)
	relation 2968066 --->
	  a role_name "VALUE_FRACTIONALMETRICS_DEFAULT" init_value "
         SunHints.VALUE_FRACTIONALMETRICS_DEFAULT" class_relation const_relation public
	    comment "
Font fractional metrics hint value -- character glyphs are
positioned with accuracy chosen by the implementation.
@see #KEY_FRACTIONALMETRICS

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968066 // VALUE_FRACTIONALMETRICS_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968194 // KEY_INTERPOLATION (<unidirectional association>)
	relation 2968194 --->
	  a role_name "KEY_INTERPOLATION" init_value "
         SunHints.KEY_INTERPOLATION" class_relation const_relation public
	    comment "
Interpolation hint key.
The {@code INTERPOLATION} hint controls how image pixels are
filtered or resampled during an image rendering operation.
<p>
Implicitly images are defined to provide color samples at
integer coordinate locations.
When images are rendered upright with no scaling onto a
destination, the choice of which image pixels map to which
device pixels is obvious and the samples at the integer
coordinate locations in the image are transfered to the
pixels at the corresponding integer locations on the device
pixel grid one for one.
When images are rendered in a scaled, rotated, or otherwise
transformed coordinate system, then the mapping of device
pixel coordinates back to the image can raise the question
of what color sample to use for the continuous coordinates
that lie between the integer locations of the provided image
samples.
Interpolation algorithms define functions which provide a
color sample for any continuous coordinate in an image based
on the color samples at the surrounding integer coordinates.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_INTERPOLATION_NEAREST_NEIGHBOR}
<li>{@link #VALUE_INTERPOLATION_BILINEAR}
<li>{@link #VALUE_INTERPOLATION_BICUBIC}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968194 // KEY_INTERPOLATION (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2968322 // VALUE_INTERPOLATION_NEAREST_NEIGHBOR (<unidirectional association>)
	relation 2968322 --->
	  a role_name "VALUE_INTERPOLATION_NEAREST_NEIGHBOR" init_value "
         SunHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR" class_relation const_relation public
	    comment "
Interpolation hint value -- the color sample of the nearest
neighboring integer coordinate sample in the image is used.
Conceptually the image is viewed as a grid of unit-sized
square regions of color centered around the center of each
image pixel.
<p>
As the image is scaled up, it will look correspondingly blocky.
As the image is scaled down, the colors for source pixels will
be either used unmodified, or skipped entirely in the output
representation.

@see #KEY_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968322 // VALUE_INTERPOLATION_NEAREST_NEIGHBOR (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968450 // VALUE_INTERPOLATION_BILINEAR (<unidirectional association>)
	relation 2968450 --->
	  a role_name "VALUE_INTERPOLATION_BILINEAR" init_value "
         SunHints.VALUE_INTERPOLATION_BILINEAR" class_relation const_relation public
	    comment "
Interpolation hint value -- the color samples of the 4 nearest
neighboring integer coordinate samples in the image are
interpolated linearly to produce a color sample.
Conceptually the image is viewed as a set of infinitely small
point color samples which have value only at the centers of
integer coordinate pixels and the space between those pixel
centers is filled with linear ramps of colors that connect
adjacent discrete samples in a straight line.
<p>
As the image is scaled up, there are no blocky edges between
the colors in the image as there are with
{@link #VALUE_INTERPOLATION_NEAREST_NEIGHBOR NEAREST_NEIGHBOR},
but the blending may show some subtle discontinuities along the
horizontal and vertical edges that line up with the samples
caused by a sudden change in the slope of the interpolation
from one side of a sample to the other.
As the image is scaled down, more image pixels have their
color samples represented in the resulting output since each
output pixel receives color information from up to 4 image
pixels.

@see #KEY_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968450 // VALUE_INTERPOLATION_BILINEAR (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968578 // VALUE_INTERPOLATION_BICUBIC (<unidirectional association>)
	relation 2968578 --->
	  a role_name "VALUE_INTERPOLATION_BICUBIC" init_value "
         SunHints.VALUE_INTERPOLATION_BICUBIC" class_relation const_relation public
	    comment "
Interpolation hint value -- the color samples of 9 nearby
integer coordinate samples in the image are interpolated using
a cubic function in both {@code X} and {@code Y} to produce
a color sample.
Conceptually the view of the image is very similar to the view
used in the {@link #VALUE_INTERPOLATION_BILINEAR BILINEAR}
algorithm except that the ramps of colors that connect between
the samples are curved and have better continuity of slope
as they cross over between sample boundaries.
<p>
As the image is scaled up, there are no blocky edges and the
interpolation should appear smoother and with better depictions
of any edges in the original image than with {@code BILINEAR}.
As the image is scaled down, even more of the original color
samples from the original image will have their color information
carried through and represented.

@see #KEY_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968578 // VALUE_INTERPOLATION_BICUBIC (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968706 // KEY_ALPHA_INTERPOLATION (<unidirectional association>)
	relation 2968706 --->
	  a role_name "KEY_ALPHA_INTERPOLATION" init_value "
         SunHints.KEY_ALPHA_INTERPOLATION" class_relation const_relation public
	    comment "
Alpha interpolation hint key.
The {@code ALPHA_INTERPOLATION} hint is a general hint that
provides a high level recommendation as to whether to bias
alpha blending algorithm choices more for speed or quality
when evaluating tradeoffs.
<p>
This hint could control the choice of alpha blending
calculations that sacrifice some precision to use fast
lookup tables or lower precision SIMD instructions.
This hint could also control whether or not the color
and alpha values are converted into a linear color space
during the calculations for a more linear visual effect
at the expense of additional per-pixel calculations.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_ALPHA_INTERPOLATION_SPEED}
<li>{@link #VALUE_ALPHA_INTERPOLATION_QUALITY}
<li>{@link #VALUE_ALPHA_INTERPOLATION_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968706 // KEY_ALPHA_INTERPOLATION (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2968834 // VALUE_ALPHA_INTERPOLATION_SPEED (<unidirectional association>)
	relation 2968834 --->
	  a role_name "VALUE_ALPHA_INTERPOLATION_SPEED" init_value "
         SunHints.VALUE_ALPHA_INTERPOLATION_SPEED" class_relation const_relation public
	    comment "
Alpha interpolation hint value -- alpha blending algorithms
are chosen with a preference for calculation speed.
@see #KEY_ALPHA_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968834 // VALUE_ALPHA_INTERPOLATION_SPEED (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2968962 // VALUE_ALPHA_INTERPOLATION_QUALITY (<unidirectional association>)
	relation 2968962 --->
	  a role_name "VALUE_ALPHA_INTERPOLATION_QUALITY" init_value "
         SunHints.VALUE_ALPHA_INTERPOLATION_QUALITY" class_relation const_relation public
	    comment "
Alpha interpolation hint value -- alpha blending algorithms
are chosen with a preference for precision and visual quality.
@see #KEY_ALPHA_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2968962 // VALUE_ALPHA_INTERPOLATION_QUALITY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969090 // VALUE_ALPHA_INTERPOLATION_DEFAULT (<unidirectional association>)
	relation 2969090 --->
	  a role_name "VALUE_ALPHA_INTERPOLATION_DEFAULT" init_value "
         SunHints.VALUE_ALPHA_INTERPOLATION_DEFAULT" class_relation const_relation public
	    comment "
Alpha interpolation hint value -- alpha blending algorithms
are chosen by the implementation for a good tradeoff of
performance vs. quality.
@see #KEY_ALPHA_INTERPOLATION

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969090 // VALUE_ALPHA_INTERPOLATION_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969218 // KEY_COLOR_RENDERING (<unidirectional association>)
	relation 2969218 --->
	  a role_name "KEY_COLOR_RENDERING" init_value "
         SunHints.KEY_COLOR_RENDERING" class_relation const_relation public
	    comment "
Color rendering hint key.
The {@code COLOR_RENDERING} hint controls the accuracy of
approximation and conversion when storing colors into a
destination image or surface.
<p>
When a rendering or image manipulation operation produces
a color value that must be stored into a destination, it
must first convert that color into a form suitable for
storing into the destination image or surface.
Minimally, the color components must be converted to bit
representations and ordered in the correct order or an
index into a color lookup table must be chosen before
the data can be stored into the destination memory.
Without this minimal conversion, the data in the destination
would likely represent random, incorrect or possibly even
unsupported values.
Algorithms to quickly convert the results of rendering
operations into the color format of most common destinations
are well known and fairly optimal to execute.
<p>
Simply performing the most basic color format conversion to
store colors into a destination can potentially ignore a
difference in the calibration of the
{@link java.awt.color.ColorSpace}
of the source and destination or other factors such as the
linearity of the gamma correction.
Unless the source and destination {@code ColorSpace} are
identical, to correctly perform a rendering operation with
the most care taken for the accuracy of the colors being
represented, the source colors should be converted to a
device independent {@code ColorSpace} and the results then
converted back to the destination {@code ColorSpace}.
Furthermore, if calculations such as the blending of multiple
source colors are to be performed during the rendering
operation, greater visual clarity can be achieved if the
intermediate device independent {@code ColorSpace} is
chosen to have a linear relationship between the values
being calculated and the perception of the human eye to
the response curves of the output device.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_COLOR_RENDER_SPEED}
<li>{@link #VALUE_COLOR_RENDER_QUALITY}
<li>{@link #VALUE_COLOR_RENDER_DEFAULT}
</ul>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969218 // KEY_COLOR_RENDERING (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2969346 // VALUE_COLOR_RENDER_SPEED (<unidirectional association>)
	relation 2969346 --->
	  a role_name "VALUE_COLOR_RENDER_SPEED" init_value "
         SunHints.VALUE_COLOR_RENDER_SPEED" class_relation const_relation public
	    comment "
Color rendering hint value -- perform the fastest color
conversion to the format of the output device.
@see #KEY_COLOR_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969346 // VALUE_COLOR_RENDER_SPEED (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969474 // VALUE_COLOR_RENDER_QUALITY (<unidirectional association>)
	relation 2969474 --->
	  a role_name "VALUE_COLOR_RENDER_QUALITY" init_value "
         SunHints.VALUE_COLOR_RENDER_QUALITY" class_relation const_relation public
	    comment "
Color rendering hint value -- perform the color conversion
calculations with the highest accuracy and visual quality.
@see #KEY_COLOR_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969474 // VALUE_COLOR_RENDER_QUALITY (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969602 // VALUE_COLOR_RENDER_DEFAULT (<unidirectional association>)
	relation 2969602 --->
	  a role_name "VALUE_COLOR_RENDER_DEFAULT" init_value "
         SunHints.VALUE_COLOR_RENDER_DEFAULT" class_relation const_relation public
	    comment "
Color rendering hint value -- perform color conversion
calculations as chosen by the implementation to represent
the best available tradeoff between performance and
accuracy.
@see #KEY_COLOR_RENDERING

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969602 // VALUE_COLOR_RENDER_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969730 // KEY_STROKE_CONTROL (<unidirectional association>)
	relation 2969730 --->
	  a role_name "KEY_STROKE_CONTROL" init_value "
        SunHints.KEY_STROKE_CONTROL" class_relation const_relation public
	    comment "
Stroke normalization control hint key.
The {@code STROKE_CONTROL} hint controls whether a rendering
implementation should or is allowed to modify the geometry
of rendered shapes for various purposes.
<p>
Some implementations may be able to use an optimized platform
rendering library which may be faster than traditional software
rendering algorithms on a given platform, but which may also
not support floating point coordinates.
Some implementations may also have sophisticated algorithms
which perturb the coordinates of a path so that wide lines
appear more uniform in width and spacing.
<p>
If an implementation performs any type of modification or
\"normalization\" of a path, it should never move the coordinates
by more than half a pixel in any direction.
<p>
The allowable values for this hint are
<ul>
<li>{@link #VALUE_STROKE_NORMALIZE}
<li>{@link #VALUE_STROKE_PURE}
<li>{@link #VALUE_STROKE_DEFAULT}
</ul>
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969730 // KEY_STROKE_CONTROL (<unidirectional association>)
	  b parent class_ref 867458 // Key
      end

      classrelation 2969858 // VALUE_STROKE_DEFAULT (<unidirectional association>)
	relation 2969858 --->
	  a role_name "VALUE_STROKE_DEFAULT" init_value "
        SunHints.VALUE_STROKE_DEFAULT" class_relation const_relation public
	    comment "
Stroke normalization control hint value -- geometry may be
modified or left pure depending on the tradeoffs in a given
implementation.
Typically this setting allows an implementation to use a fast
integer coordinate based platform rendering library, but does
not specifically request normalization for uniformity or
aesthetics.

@see #KEY_STROKE_CONTROL
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969858 // VALUE_STROKE_DEFAULT (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2969986 // VALUE_STROKE_NORMALIZE (<unidirectional association>)
	relation 2969986 --->
	  a role_name "VALUE_STROKE_NORMALIZE" init_value "
        SunHints.VALUE_STROKE_NORMALIZE" class_relation const_relation public
	    comment "
Stroke normalization control hint value -- geometry should
be normalized to improve uniformity or spacing of lines and
overall aesthetics.
Note that different normalization algorithms may be more
successful than others for given input paths.

@see #KEY_STROKE_CONTROL
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2969986 // VALUE_STROKE_NORMALIZE (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2970114 // VALUE_STROKE_PURE (<unidirectional association>)
	relation 2970114 --->
	  a role_name "VALUE_STROKE_PURE" init_value "
        SunHints.VALUE_STROKE_PURE" class_relation const_relation public
	    comment "
Stroke normalization control hint value -- geometry should
be left unmodified and rendered with sub-pixel accuracy.

@see #KEY_STROKE_CONTROL
@since 1.3

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2970114 // VALUE_STROKE_PURE (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 6310146 "RenderingHints"
	public explicit_return_type ""
	nparams 1
	  param inout name "init" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Key,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new object with keys and values initialized
from the specified Map object which may be null.
@param init a map of key/value pairs to initialize the hints
         or null if the object should be empty
"
      end

      operation 6310274 "RenderingHints"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" type class_ref 867458 // Key
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new object with the specified key/value pair.
@param key the key of the particular hint property
@param value the value of the hint property specified with
<code>key</code>
"
      end

      operation 6310402 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of key-value mappings in this
<code>RenderingHints</code>.

@return the number of key-value mappings in this
<code>RenderingHints</code>.
"
      end

      operation 6310530 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this
<code>RenderingHints</code> contains no key-value mappings.

@return <code>true</code> if this
<code>RenderingHints</code> contains no key-value mappings.
"
      end

      operation 6310658 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code RenderingHints}
 contains a mapping for the specified key.

@param key key whose presence in this
{@code RenderingHints} is to be tested.
@return {@code true} if this {@code RenderingHints}
         contains a mapping for the specified key.
@exception ClassCastException if the key can not
           be cast to {@code RenderingHints.Key}
"
      end

      operation 6310786 "containsValue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this RenderingHints maps one or more keys to the
specified value.
More formally, returns <code>true</code> if and only
if this <code>RenderingHints</code>
contains at least one mapping to a value <code>v</code> such that
<pre>
(value==null ? v==null : value.equals(v))
</pre>.
This operation will probably require time linear in the
<code>RenderingHints</code> size for most implementations
of <code>RenderingHints</code>.

@param value value whose presence in this
         <code>RenderingHints</code> is to be tested.
@return <code>true</code> if this <code>RenderingHints</code>
          maps one or more keys to the specified value.
"
      end

      operation 6310914 "get"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value to which the specified key is mapped.
@param   key   a rendering hint key
@return  the value to which the key is mapped in this object or
         {@code null} if the key is not mapped to any value in
         this object.
@exception ClassCastException if the key can not
           be cast to {@code RenderingHints.Key}
@see     #put(Object, Object)
"
      end

      operation 6311042 "put"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "key" type class_ref 129538 // Object
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Maps the specified {@code key} to the specified
{@code value} in this {@code RenderingHints} object.
Neither the key nor the value can be {@code null}.
The value can be retrieved by calling the {@code get} method
with a key that is equal to the original key.
@param      key     the rendering hint key.
@param      value   the rendering hint value.
@return     the previous value of the specified key in this object
            or {@code null} if it did not have one.
@exception NullPointerException if the key is
           {@code null}.
@exception ClassCastException if the key can not
           be cast to {@code RenderingHints.Key}
@exception IllegalArgumentException if the
           {@link Key#isCompatibleValue(java.lang.Object)
                  Key.isCompatibleValue()}
           method of the specified key returns false for the
           specified value
@see     #get(Object)
"
      end

      operation 6311170 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all of the keys and corresponding values from the specified
<code>RenderingHints</code> object to this
<code>RenderingHints</code> object. Keys that are present in
this <code>RenderingHints</code> object, but not in the specified
<code>RenderingHints</code> object are not affected.
@param hints the set of key/value pairs to be added to this
<code>RenderingHints</code> object
"
      end

      operation 6311298 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears this <code>RenderingHints</code> object of all key/value
pairs.
"
      end

      operation 6311426 "remove"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the key and its corresponding value from this
{@code RenderingHints} object. This method does nothing if the
key is not in this {@code RenderingHints} object.
@param   key   the rendering hints key that needs to be removed
@exception ClassCastException if the key can not
           be cast to {@code RenderingHints.Key}
@return  the value to which the key had previously been mapped in this
         {@code RenderingHints} object, or {@code null}
         if the key did not have a mapping.
"
      end

      operation 6311554 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies all of the mappings from the specified {@code Map}
to this {@code RenderingHints}.  These mappings replace
any mappings that this {@code RenderingHints} had for any
of the keys currently in the specified {@code Map}.
@param m the specified {@code Map}
@exception ClassCastException class of a key or value
         in the specified {@code Map} prevents it from being
         stored in this {@code RenderingHints}.
@exception IllegalArgumentException some aspect
         of a key or value in the specified {@code Map}
          prevents it from being stored in
           this {@code RenderingHints}.
"
      end

      operation 6311682 "keySet"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> view of the Keys contained in this
<code>RenderingHints</code>.  The Set is backed by the
<code>RenderingHints</code>, so changes to the
<code>RenderingHints</code> are reflected in the <code>Set</code>,
and vice-versa.  If the <code>RenderingHints</code> is modified
while an iteration over the <code>Set</code> is in progress,
the results of the iteration are undefined.  The <code>Set</code>
supports element removal, which removes the corresponding
mapping from the <code>RenderingHints</code>, via the
<code>Iterator.remove</code>, <code>Set.remove</code>,
<code>removeAll</code> <code>retainAll</code>, and
<code>clear</code> operations.  It does not support
the <code>add</code> or <code>addAll</code> operations.

@return a <code>Set</code> view of the keys contained
in this <code>RenderingHints</code>.
"
      end

      operation 6311810 "values"
	public return_type class_ref 184194 // Collection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Collection</code> view of the values
contained in this <code>RenderinHints</code>.
The <code>Collection</code> is backed by the
<code>RenderingHints</code>, so changes to
the <code>RenderingHints</code> are reflected in
the <code>Collection</code>, and vice-versa.
If the <code>RenderingHints</code> is modified while
an iteration over the <code>Collection</code> is
in progress, the results of the iteration are undefined.
The <code>Collection</code> supports element removal,
which removes the corresponding mapping from the
<code>RenderingHints</code>, via the
<code>Iterator.remove</code>,
<code>Collection.remove</code>, <code>removeAll</code>,
<code>retainAll</code> and <code>clear</code> operations.
It does not support the <code>add</code> or
<code>addAll</code> operations.

@return a <code>Collection</code> view of the values
         contained in this <code>RenderingHints</code>.
"
      end

      operation 6311938 "entrySet"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<Object,Object>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Set</code> view of the mappings contained
in this <code>RenderingHints</code>.  Each element in the
returned <code>Set</code> is a <code>Map.Entry</code>.
The <code>Set</code> is backed by the <code>RenderingHints</code>,
so changes to the <code>RenderingHints</code> are reflected
in the <code>Set</code>, and vice-versa.  If the
<code>RenderingHints</code> is modified while
while an iteration over the <code>Set</code> is in progress,
the results of the iteration are undefined.
<p>
The entrySet returned from a <code>RenderingHints</code> object
is not modifiable.

@return a <code>Set</code> view of the mappings contained in
this <code>RenderingHints</code>.
"
      end

      operation 6312066 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified <code>Object</code> with this
<code>RenderingHints</code> for equality.
Returns <code>true</code> if the specified object is also a
<code>Map</code> and the two <code>Map</code> objects represent
the same mappings.  More formally, two <code>Map</code> objects
<code>t1</code> and <code>t2</code> represent the same mappings
if <code>t1.keySet().equals(t2.keySet())</code> and for every
key <code>k</code> in <code>t1.keySet()</code>,
<pre>
(t1.get(k)==null ? t2.get(k)==null : t1.get(k).equals(t2.get(k)))
</pre>.
This ensures that the <code>equals</code> method works properly across
different implementations of the <code>Map</code> interface.

@param o <code>Object</code> to be compared for equality with
this <code>RenderingHints</code>.
@return <code>true</code> if the specified <code>Object</code>
is equal to this <code>RenderingHints</code>.
"
      end

      operation 6312194 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this <code>RenderingHints</code>.
The hash code of a <code>RenderingHints</code> is defined to be
the sum of the hashCodes of each <code>Entry</code> in the
<code>RenderingHints</code> object's entrySet view.  This ensures that
<code>t1.equals(t2)</code> implies that
<code>t1.hashCode()==t2.hashCode()</code> for any two <code>Map</code>
objects <code>t1</code> and <code>t2</code>, as required by the general
contract of <code>Object.hashCode</code>.

@return the hash code value for this <code>RenderingHints</code>.
@see java.util.Map.Entry#hashCode()
@see Object#hashCode()
@see Object#equals(Object)
@see #equals(Object)
"
      end

      operation 6312322 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Creates a clone of this <code>RenderingHints</code> object
that has the same contents as this <code>RenderingHints</code>
object.
@return a clone of this instance.
"
      end

      operation 6312450 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a rather long string representation of the hashmap
which contains the mappings of keys to values for this
<code>RenderingHints</code> object.
@return  a string representation of this object.
"
      end
    end

    class 856706 "AttributeValue"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 1331842 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.AttributeValue\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1331970 "value"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2881538 // names (<unidirectional association>)
	relation 2881538 --->
	  a role_name "names" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2881538 // names (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6074626 "AttributeValue"
	protected explicit_return_type ""
	nparams 2
	  param in name "value" explicit_type "int"
	  param inout name "names" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6074754 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This hashCode is used by the sun.awt implementation as an array
 index."
      end

      operation 6074882 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 856834 "AWTError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when a serious Abstract Window Toolkit error has occurred.

@author      Arthur van Hoff
"
      classrelation 2881666 // <generalisation>
	relation 2881666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2881666 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 1332098 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1819846354050686206L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6075010 "AWTError"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance of <code>AWTError</code> with the specified
detail message.
@param   msg   the detail message.
@since   JDK1.0
"
      end
    end

    class 856962 "AWTEventMulticaster"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code AWTEventMulticaster} implements efficient and thread-safe multi-cast
event dispatching for the AWT events defined in the {@code java.awt.event}
package.
<p>
The following example illustrates how to use this class:

<pre><code>
public myComponent extends Component {
    ActionListener actionListener = null;

    public synchronized void addActionListener(ActionListener l) {
        actionListener = AWTEventMulticaster.add(actionListener, l);
    }
    public synchronized void removeActionListener(ActionListener l) {
        actionListener = AWTEventMulticaster.remove(actionListener, l);
    }
    public void processEvent(AWTEvent e) {
        // when event occurs which causes \"action\" semantic
        ActionListener listener = actionListener;
        if (listener != null) {
            listener.actionPerformed(new ActionEvent());
        }
    }
}
</code></pre>
The important point to note is the first argument to the {@code
add} and {@code remove} methods is the field maintaining the
listeners. In addition you must assign the result of the {@code add}
and {@code remove} methods to the field maintaining the listeners.
<p>
{@code AWTEventMulticaster} is implemented as a pair of {@code
EventListeners} that are set at construction time. {@code
AWTEventMulticaster} is immutable. The {@code add} and {@code
remove} methods do not alter {@code AWTEventMulticaster} in
anyway. If necessary, a new {@code AWTEventMulticaster} is
created. In this way it is safe to add and remove listeners during
the process of an event dispatching.  However, event listeners
added during the process of an event dispatch operation are not
notified of the event currently being dispatched.
<p>
All of the {@code add} methods allow {@code null} arguments. If the
first argument is {@code null}, the second argument is returned. If
the first argument is not {@code null} and the second argument is
{@code null}, the first argument is returned. If both arguments are
{@code non-null}, a new {@code AWTEventMulticaster} is created using
the two arguments and returned.
<p>
For the {@code remove} methods that take two arguments, the following is
returned:
<ul>
  <li>{@code null}, if the first argument is {@code null}, or
      the arguments are equal, by way of {@code ==}.
  <li>the first argument, if the first argument is not an instance of
      {@code AWTEventMulticaster}.
  <li>result of invoking {@code remove(EventListener)} on the
      first argument, supplying the second argument to the
      {@code remove(EventListener)} method.
</ul>
<p>Swing makes use of
{@link javax.swing.event.EventListenerList EventListenerList} for
similar logic. Refer to it for details.

@see javax.swing.event.EventListenerList

@author      John Rose
@author      Amy Fowler
@since       1.1
"
      classrelation 2882178 // <realization>
	relation 2882178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882178 // <realization>
	  b parent class_ref 341890 // ComponentListener
      end

      classrelation 2882306 // <realization>
	relation 2882306 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882306 // <realization>
	  b parent class_ref 350082 // ContainerListener
      end

      classrelation 2882434 // <realization>
	relation 2882434 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882434 // <realization>
	  b parent class_ref 342018 // FocusListener
      end

      classrelation 2882562 // <realization>
	relation 2882562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882562 // <realization>
	  b parent class_ref 342402 // KeyListener
      end

      classrelation 2882690 // <realization>
	relation 2882690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882690 // <realization>
	  b parent class_ref 342530 // MouseListener
      end

      classrelation 2882818 // <realization>
	relation 2882818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882818 // <realization>
	  b parent class_ref 342658 // MouseMotionListener
      end

      classrelation 2882946 // <realization>
	relation 2882946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2882946 // <realization>
	  b parent class_ref 433794 // WindowListener
      end

      classrelation 2883074 // <realization>
	relation 2883074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883074 // <realization>
	  b parent class_ref 422914 // WindowFocusListener
      end

      classrelation 2883202 // <realization>
	relation 2883202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883202 // <realization>
	  b parent class_ref 469378 // WindowStateListener
      end

      classrelation 2883330 // <realization>
	relation 2883330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883330 // <realization>
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2883458 // <realization>
	relation 2883458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883458 // <realization>
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 2883714 // <realization>
	relation 2883714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883714 // <realization>
	  b parent class_ref 856066 // AdjustmentListener
      end

      classrelation 2883970 // <realization>
	relation 2883970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2883970 // <realization>
	  b parent class_ref 857218 // TextListener
      end

      classrelation 2884226 // <realization>
	relation 2884226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2884226 // <realization>
	  b parent class_ref 342914 // InputMethodListener
      end

      classrelation 2884354 // <realization>
	relation 2884354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2884354 // <realization>
	  b parent class_ref 342146 // HierarchyListener
      end

      classrelation 2884610 // <realization>
	relation 2884610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2884610 // <realization>
	  b parent class_ref 342274 // HierarchyBoundsListener
      end

      classrelation 2884738 // <realization>
	relation 2884738 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2884738 // <realization>
	  b parent class_ref 342786 // MouseWheelListener
      end

      classrelation 2884866 // a (<unidirectional association>)
	relation 2884866 --->
	  a role_name "a" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2884866 // a (<unidirectional association>)
	  b parent class_ref 314882 // EventListener
      end

      classrelation 2884994 // b (<unidirectional association>)
	relation 2884994 --->
	  a role_name "b" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2884994 // b (<unidirectional association>)
	  b parent class_ref 314882 // EventListener
      end

      operation 6077826 "AWTEventMulticaster"
	protected explicit_return_type ""
	nparams 2
	  param inout name "a" type class_ref 314882 // EventListener
	  param inout name "b" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an event multicaster instance which chains listener-a
with listener-b. Input parameters <code>a</code> and <code>b</code>
should not be <code>null</code>, though implementations may vary in
choosing whether or not to throw <code>NullPointerException</code>
in that case.
@param a listener-a
@param b listener-b
"
      end

      operation 6077954 "remove"
	protected return_type class_ref 314882 // EventListener
	nparams 1
	  param inout name "oldl" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from this multicaster.
<p>
The returned multicaster contains all the listeners in this
multicaster with the exception of all occurrences of {@code oldl}.
If the resulting multicaster contains only one regular listener
the regular listener may be returned.  If the resulting multicaster
is empty, then {@code null} may be returned instead.
<p>
No exception is thrown if {@code oldl} is {@code null}.

@param oldl the listener to be removed
@return resulting listener
"
      end

      operation 6078082 "componentResized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentResized event by invoking the
componentResized methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078210 "componentMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentMoved event by invoking the
componentMoved methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078338 "componentShown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentShown event by invoking the
componentShown methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078466 "componentHidden"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346242 // ComponentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentHidden event by invoking the
componentHidden methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078594 "componentAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 350338 // ContainerEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentAdded container event by invoking the
componentAdded methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078722 "componentRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 350338 // ContainerEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the componentRemoved container event by invoking the
componentRemoved methods on listener-a and listener-b.
@param e the component event
"
      end

      operation 6078850 "focusGained"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the focusGained event by invoking the
focusGained methods on listener-a and listener-b.
@param e the focus event
"
      end

      operation 6078978 "focusLost"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the focusLost event by invoking the
focusLost methods on listener-a and listener-b.
@param e the focus event
"
      end

      operation 6079106 "keyTyped"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the keyTyped event by invoking the
keyTyped methods on listener-a and listener-b.
@param e the key event
"
      end

      operation 6079234 "keyPressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the keyPressed event by invoking the
keyPressed methods on listener-a and listener-b.
@param e the key event
"
      end

      operation 6079362 "keyReleased"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the keyReleased event by invoking the
keyReleased methods on listener-a and listener-b.
@param e the key event
"
      end

      operation 6079490 "mouseClicked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseClicked event by invoking the
mouseClicked methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6079618 "mousePressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mousePressed event by invoking the
mousePressed methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6079746 "mouseReleased"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseReleased event by invoking the
mouseReleased methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6079874 "mouseEntered"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseEntered event by invoking the
mouseEntered methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6080002 "mouseExited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseExited event by invoking the
mouseExited methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6080130 "mouseDragged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseDragged event by invoking the
mouseDragged methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6080258 "mouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseMoved event by invoking the
mouseMoved methods on listener-a and listener-b.
@param e the mouse event
"
      end

      operation 6080386 "windowOpened"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowOpened event by invoking the
windowOpened methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6080514 "windowClosing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowClosing event by invoking the
windowClosing methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6080642 "windowClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowClosed event by invoking the
windowClosed methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6080770 "windowIconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowIconified event by invoking the
windowIconified methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6080898 "windowDeiconified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowDeiconfied event by invoking the
windowDeiconified methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6081026 "windowActivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowActivated event by invoking the
windowActivated methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6081154 "windowDeactivated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowDeactivated event by invoking the
windowDeactivated methods on listener-a and listener-b.
@param e the window event
"
      end

      operation 6081282 "windowStateChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowStateChanged event by invoking the
windowStateChanged methods on listener-a and listener-b.
@param e the window event
@since 1.4
"
      end

      operation 6081410 "windowGainedFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowGainedFocus event by invoking the windowGainedFocus
methods on listener-a and listener-b.
@param e the window event
@since 1.4
"
      end

      operation 6081538 "windowLostFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the windowLostFocus event by invoking the windowLostFocus
methods on listener-a and listener-b.
@param e the window event
@since 1.4
"
      end

      operation 6081666 "actionPerformed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the actionPerformed event by invoking the
actionPerformed methods on listener-a and listener-b.
@param e the action event
"
      end

      operation 6081794 "itemStateChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the itemStateChanged event by invoking the
itemStateChanged methods on listener-a and listener-b.
@param e the item event
"
      end

      operation 6081922 "adjustmentValueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 857090 // AdjustmentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the adjustmentValueChanged event by invoking the
adjustmentValueChanged methods on listener-a and listener-b.
@param e the adjustment event
"
      end

      operation 6082050 "textValueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 857346 // TextEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6082178 "inputMethodTextChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346754 // InputMethodEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the inputMethodTextChanged event by invoking the
inputMethodTextChanged methods on listener-a and listener-b.
@param e the item event
"
      end

      operation 6082306 "caretPositionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346754 // InputMethodEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the caretPositionChanged event by invoking the
caretPositionChanged methods on listener-a and listener-b.
@param e the item event
"
      end

      operation 6082434 "hierarchyChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the hierarchyChanged event by invoking the
hierarchyChanged methods on listener-a and listener-b.
@param e the item event
@since 1.3
"
      end

      operation 6082562 "ancestorMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the ancestorMoved event by invoking the
ancestorMoved methods on listener-a and listener-b.
@param e the item event
@since 1.3
"
      end

      operation 6082690 "ancestorResized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346882 // HierarchyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the ancestorResized event by invoking the
ancestorResized methods on listener-a and listener-b.
@param e the item event
@since 1.3
"
      end

      operation 6082818 "mouseWheelMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the mouseWheelMoved event by invoking the
mouseWheelMoved methods on listener-a and listener-b.
@param e the mouse event
@since 1.4
"
      end

      operation 6082946 "add"
	class_operation public return_type class_ref 341890 // ComponentListener
	nparams 2
	  param inout name "a" type class_ref 341890 // ComponentListener
	  param inout name "b" type class_ref 341890 // ComponentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds component-listener-a with component-listener-b and
returns the resulting multicast listener.
@param a component-listener-a
@param b component-listener-b
"
      end

      operation 6083074 "add"
	class_operation public return_type class_ref 350082 // ContainerListener
	nparams 2
	  param inout name "a" type class_ref 350082 // ContainerListener
	  param inout name "b" type class_ref 350082 // ContainerListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds container-listener-a with container-listener-b and
returns the resulting multicast listener.
@param a container-listener-a
@param b container-listener-b
"
      end

      operation 6083202 "add"
	class_operation public return_type class_ref 342018 // FocusListener
	nparams 2
	  param inout name "a" type class_ref 342018 // FocusListener
	  param inout name "b" type class_ref 342018 // FocusListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds focus-listener-a with focus-listener-b and
returns the resulting multicast listener.
@param a focus-listener-a
@param b focus-listener-b
"
      end

      operation 6083330 "add"
	class_operation public return_type class_ref 342402 // KeyListener
	nparams 2
	  param inout name "a" type class_ref 342402 // KeyListener
	  param inout name "b" type class_ref 342402 // KeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds key-listener-a with key-listener-b and
returns the resulting multicast listener.
@param a key-listener-a
@param b key-listener-b
"
      end

      operation 6083458 "add"
	class_operation public return_type class_ref 342530 // MouseListener
	nparams 2
	  param inout name "a" type class_ref 342530 // MouseListener
	  param inout name "b" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds mouse-listener-a with mouse-listener-b and
returns the resulting multicast listener.
@param a mouse-listener-a
@param b mouse-listener-b
"
      end

      operation 6083586 "add"
	class_operation public return_type class_ref 342658 // MouseMotionListener
	nparams 2
	  param inout name "a" type class_ref 342658 // MouseMotionListener
	  param inout name "b" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds mouse-motion-listener-a with mouse-motion-listener-b and
returns the resulting multicast listener.
@param a mouse-motion-listener-a
@param b mouse-motion-listener-b
"
      end

      operation 6083714 "add"
	class_operation public return_type class_ref 433794 // WindowListener
	nparams 2
	  param inout name "a" type class_ref 433794 // WindowListener
	  param inout name "b" type class_ref 433794 // WindowListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds window-listener-a with window-listener-b and
returns the resulting multicast listener.
@param a window-listener-a
@param b window-listener-b
"
      end

      operation 6083842 "add"
	class_operation public return_type class_ref 469378 // WindowStateListener
	nparams 2
	  param inout name "a" type class_ref 469378 // WindowStateListener
	  param inout name "b" type class_ref 469378 // WindowStateListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds window-state-listener-a with window-state-listener-b
and returns the resulting multicast listener.
@param a window-state-listener-a
@param b window-state-listener-b
@since 1.4
"
      end

      operation 6083970 "add"
	class_operation public return_type class_ref 422914 // WindowFocusListener
	nparams 2
	  param inout name "a" type class_ref 422914 // WindowFocusListener
	  param inout name "b" type class_ref 422914 // WindowFocusListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds window-focus-listener-a with window-focus-listener-b
and returns the resulting multicast listener.
@param a window-focus-listener-a
@param b window-focus-listener-b
@since 1.4
"
      end

      operation 6084098 "add"
	class_operation public return_type class_ref 354306 // ActionListener
	nparams 2
	  param inout name "a" type class_ref 354306 // ActionListener
	  param inout name "b" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds action-listener-a with action-listener-b and
returns the resulting multicast listener.
@param a action-listener-a
@param b action-listener-b
"
      end

      operation 6084226 "add"
	class_operation public return_type class_ref 389506 // ItemListener
	nparams 2
	  param inout name "a" type class_ref 389506 // ItemListener
	  param inout name "b" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds item-listener-a with item-listener-b and
returns the resulting multicast listener.
@param a item-listener-a
@param b item-listener-b
"
      end

      operation 6084354 "add"
	class_operation public return_type class_ref 856066 // AdjustmentListener
	nparams 2
	  param inout name "a" type class_ref 856066 // AdjustmentListener
	  param inout name "b" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds adjustment-listener-a with adjustment-listener-b and
returns the resulting multicast listener.
@param a adjustment-listener-a
@param b adjustment-listener-b
"
      end

      operation 6084482 "add"
	class_operation public return_type class_ref 857218 // TextListener
	nparams 2
	  param inout name "a" type class_ref 857218 // TextListener
	  param inout name "b" type class_ref 857218 // TextListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6084610 "add"
	class_operation public return_type class_ref 342914 // InputMethodListener
	nparams 2
	  param inout name "a" type class_ref 342914 // InputMethodListener
	  param inout name "b" type class_ref 342914 // InputMethodListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds input-method-listener-a with input-method-listener-b and
returns the resulting multicast listener.
@param a input-method-listener-a
@param b input-method-listener-b
"
      end

      operation 6084738 "add"
	class_operation public return_type class_ref 342146 // HierarchyListener
	nparams 2
	  param inout name "a" type class_ref 342146 // HierarchyListener
	  param inout name "b" type class_ref 342146 // HierarchyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds hierarchy-listener-a with hierarchy-listener-b and
returns the resulting multicast listener.
@param a hierarchy-listener-a
@param b hierarchy-listener-b
@since 1.3
"
      end

      operation 6084866 "add"
	class_operation public return_type class_ref 342274 // HierarchyBoundsListener
	nparams 2
	  param inout name "a" type class_ref 342274 // HierarchyBoundsListener
	  param inout name "b" type class_ref 342274 // HierarchyBoundsListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds hierarchy-bounds-listener-a with hierarchy-bounds-listener-b and
returns the resulting multicast listener.
@param a hierarchy-bounds-listener-a
@param b hierarchy-bounds-listener-b
@since 1.3
"
      end

      operation 6084994 "add"
	class_operation public return_type class_ref 342786 // MouseWheelListener
	nparams 2
	  param inout name "a" type class_ref 342786 // MouseWheelListener
	  param inout name "b" type class_ref 342786 // MouseWheelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds mouse-wheel-listener-a with mouse-wheel-listener-b and
returns the resulting multicast listener.
@param a mouse-wheel-listener-a
@param b mouse-wheel-listener-b
@since 1.4
"
      end

      operation 6085122 "remove"
	class_operation public return_type class_ref 341890 // ComponentListener
	nparams 2
	  param inout name "l" type class_ref 341890 // ComponentListener
	  param inout name "oldl" type class_ref 341890 // ComponentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old component-listener from component-listener-l and
returns the resulting multicast listener.
@param l component-listener-l
@param oldl the component-listener being removed
"
      end

      operation 6085250 "remove"
	class_operation public return_type class_ref 350082 // ContainerListener
	nparams 2
	  param inout name "l" type class_ref 350082 // ContainerListener
	  param inout name "oldl" type class_ref 350082 // ContainerListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old container-listener from container-listener-l and
returns the resulting multicast listener.
@param l container-listener-l
@param oldl the container-listener being removed
"
      end

      operation 6085378 "remove"
	class_operation public return_type class_ref 342018 // FocusListener
	nparams 2
	  param inout name "l" type class_ref 342018 // FocusListener
	  param inout name "oldl" type class_ref 342018 // FocusListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old focus-listener from focus-listener-l and
returns the resulting multicast listener.
@param l focus-listener-l
@param oldl the focus-listener being removed
"
      end

      operation 6085506 "remove"
	class_operation public return_type class_ref 342402 // KeyListener
	nparams 2
	  param inout name "l" type class_ref 342402 // KeyListener
	  param inout name "oldl" type class_ref 342402 // KeyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old key-listener from key-listener-l and
returns the resulting multicast listener.
@param l key-listener-l
@param oldl the key-listener being removed
"
      end

      operation 6085634 "remove"
	class_operation public return_type class_ref 342530 // MouseListener
	nparams 2
	  param inout name "l" type class_ref 342530 // MouseListener
	  param inout name "oldl" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old mouse-listener from mouse-listener-l and
returns the resulting multicast listener.
@param l mouse-listener-l
@param oldl the mouse-listener being removed
"
      end

      operation 6085762 "remove"
	class_operation public return_type class_ref 342658 // MouseMotionListener
	nparams 2
	  param inout name "l" type class_ref 342658 // MouseMotionListener
	  param inout name "oldl" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old mouse-motion-listener from mouse-motion-listener-l
and returns the resulting multicast listener.
@param l mouse-motion-listener-l
@param oldl the mouse-motion-listener being removed
"
      end

      operation 6085890 "remove"
	class_operation public return_type class_ref 433794 // WindowListener
	nparams 2
	  param inout name "l" type class_ref 433794 // WindowListener
	  param inout name "oldl" type class_ref 433794 // WindowListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old window-listener from window-listener-l and
returns the resulting multicast listener.
@param l window-listener-l
@param oldl the window-listener being removed
"
      end

      operation 6086018 "remove"
	class_operation public return_type class_ref 469378 // WindowStateListener
	nparams 2
	  param inout name "l" type class_ref 469378 // WindowStateListener
	  param inout name "oldl" type class_ref 469378 // WindowStateListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old window-state-listener from window-state-listener-l
and returns the resulting multicast listener.
@param l window-state-listener-l
@param oldl the window-state-listener being removed
@since 1.4
"
      end

      operation 6086146 "remove"
	class_operation public return_type class_ref 422914 // WindowFocusListener
	nparams 2
	  param inout name "l" type class_ref 422914 // WindowFocusListener
	  param inout name "oldl" type class_ref 422914 // WindowFocusListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old window-focus-listener from window-focus-listener-l
and returns the resulting multicast listener.
@param l window-focus-listener-l
@param oldl the window-focus-listener being removed
@since 1.4
"
      end

      operation 6086274 "remove"
	class_operation public return_type class_ref 354306 // ActionListener
	nparams 2
	  param inout name "l" type class_ref 354306 // ActionListener
	  param inout name "oldl" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old action-listener from action-listener-l and
returns the resulting multicast listener.
@param l action-listener-l
@param oldl the action-listener being removed
"
      end

      operation 6086402 "remove"
	class_operation public return_type class_ref 389506 // ItemListener
	nparams 2
	  param inout name "l" type class_ref 389506 // ItemListener
	  param inout name "oldl" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old item-listener from item-listener-l and
returns the resulting multicast listener.
@param l item-listener-l
@param oldl the item-listener being removed
"
      end

      operation 6086530 "remove"
	class_operation public return_type class_ref 856066 // AdjustmentListener
	nparams 2
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	  param inout name "oldl" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old adjustment-listener from adjustment-listener-l and
returns the resulting multicast listener.
@param l adjustment-listener-l
@param oldl the adjustment-listener being removed
"
      end

      operation 6086658 "remove"
	class_operation public return_type class_ref 857218 // TextListener
	nparams 2
	  param inout name "l" type class_ref 857218 // TextListener
	  param inout name "oldl" type class_ref 857218 // TextListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6086786 "remove"
	class_operation public return_type class_ref 342914 // InputMethodListener
	nparams 2
	  param inout name "l" type class_ref 342914 // InputMethodListener
	  param inout name "oldl" type class_ref 342914 // InputMethodListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old input-method-listener from input-method-listener-l and
returns the resulting multicast listener.
@param l input-method-listener-l
@param oldl the input-method-listener being removed
"
      end

      operation 6086914 "remove"
	class_operation public return_type class_ref 342146 // HierarchyListener
	nparams 2
	  param inout name "l" type class_ref 342146 // HierarchyListener
	  param inout name "oldl" type class_ref 342146 // HierarchyListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old hierarchy-listener from hierarchy-listener-l and
returns the resulting multicast listener.
@param l hierarchy-listener-l
@param oldl the hierarchy-listener being removed
@since 1.3
"
      end

      operation 6087042 "remove"
	class_operation public return_type class_ref 342274 // HierarchyBoundsListener
	nparams 2
	  param inout name "l" type class_ref 342274 // HierarchyBoundsListener
	  param inout name "oldl" type class_ref 342274 // HierarchyBoundsListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old hierarchy-bounds-listener from
hierarchy-bounds-listener-l and returns the resulting multicast
listener.
@param l hierarchy-bounds-listener-l
@param oldl the hierarchy-bounds-listener being removed
@since 1.3
"
      end

      operation 6087170 "remove"
	class_operation public return_type class_ref 342786 // MouseWheelListener
	nparams 2
	  param inout name "l" type class_ref 342786 // MouseWheelListener
	  param inout name "oldl" type class_ref 342786 // MouseWheelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old mouse-wheel-listener from mouse-wheel-listener-l
and returns the resulting multicast listener.
@param l mouse-wheel-listener-l
@param oldl the mouse-wheel-listener being removed
@since 1.4
"
      end

      operation 6087298 "addInternal"
	class_operation protected return_type class_ref 314882 // EventListener
	nparams 2
	  param inout name "a" type class_ref 314882 // EventListener
	  param inout name "b" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resulting multicast listener from adding listener-a
and listener-b together.
If listener-a is null, it returns listener-b;
If listener-b is null, it returns listener-a
If neither are null, then it creates and returns
a new AWTEventMulticaster instance which chains a with b.
@param a event listener-a
@param b event listener-b
"
      end

      operation 6087426 "removeInternal"
	class_operation protected return_type class_ref 314882 // EventListener
	nparams 2
	  param inout name "l" type class_ref 314882 // EventListener
	  param inout name "oldl" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resulting multicast listener after removing the
old listener from listener-l.
If listener-l equals the old listener OR listener-l is null,
returns null.
Else if listener-l is an instance of AWTEventMulticaster,
then it removes the old listener from it.
Else, returns listener l.
@param l the listener being removed from
@param oldl the listener being removed
"
      end

      operation 6087554 "saveInternal"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	  param inout name "k" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serialization support.
"
      end

      operation 6087682 "save"
	class_operation protected explicit_return_type "void"
	nparams 3
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	  param inout name "k" type class_ref 128130 // String
	  param inout name "l" type class_ref 314882 // EventListener
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6087810 "getListenerCount"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "l" type class_ref 314882 // EventListener
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursive method which returns a count of the number of listeners in
EventListener, handling the (common) case of l actually being an
AWTEventMulticaster.  Additionally, only listeners of type listenerType
are counted.  Method modified to fix bug 4513402.  -bchristi
"
      end

      operation 6087938 "populateListenerArray"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "a" type class_ref 314882 // EventListener
	multiplicity "[]"
	  param inout name "l" type class_ref 314882 // EventListener
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recusive method which populates EventListener array a with EventListeners
from l.  l is usually an AWTEventMulticaster.  Bug 4513402 revealed that
if l differed in type from the element type of a, an ArrayStoreException
would occur.  Now l is only inserted into a if it's of the appropriate
type.  -bchristi
"
      end

      operation 6088066 "getListeners"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "l" type class_ref 314882 // EventListener
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array of all the objects chained as
<code><em>Foo</em>Listener</code>s by the specified
<code>java.util.EventListener</code>.
<code><em>Foo</em>Listener</code>s are chained by the
<code>AWTEventMulticaster</code> using the
<code>add<em>Foo</em>Listener</code> method.
If a <code>null</code> listener is specified, this method returns an
empty array. If the specified listener is not an instance of
<code>AWTEventMulticaster</code>, this method returns an array which
contains only the specified listener. If no such listeners are chained,
this method returns an empty array.

@param l the specified <code>java.util.EventListener</code>
@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects chained as
         <code><em>Foo</em>Listener</code>s by the specified multicast
         listener, or an empty array if no such listeners have been
         chained by the specified multicast listener
@exception NullPointerException if the specified
            {@code listenertype} parameter is {@code null}
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@since 1.4
"
      end
    end

    class 857474 "VKCollection"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2885890 // code2name (<unidirectional association>)
	relation 2885890 --->
	  a role_name "code2name" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer, String> ${name}${value};
"
	    classrelation_ref 2885890 // code2name (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2886018 // name2code (<unidirectional association>)
	relation 2886018 --->
	  a role_name "name2code" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2886018 // name2code (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 6091778 "VKCollection"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6091906 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "code" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6092034 "findCode"
	public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6092162 "findName"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "code" type class_ref 137602 // Integer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 857602 "AWTPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for AWT permissions.
An <code>AWTPermission</code> contains a target name but
no actions list; you either have the named permission
or you don't.

<P>
The target name is the name of the AWT permission (see below). The naming
convention follows the hierarchical property naming convention.
Also, an asterisk could be used to represent all AWT permissions.

<P>
The following table lists all the possible <code>AWTPermission</code>
target names, and for each provides a description of what the
permission allows and a discussion of the risks of granting code
the permission.

<table border=1 cellpadding=5 summary=\"AWTPermission target names, descriptions, and associated risks.\">
<tr>
<th>Permission Target Name</th>
<th>What the Permission Allows</th>
<th>Risks of Allowing this Permission</th>
</tr>

<tr>
  <td>accessClipboard</td>
  <td>Posting and retrieval of information to and from the AWT clipboard</td>
  <td>This would allow malfeasant code to share
potentially sensitive or confidential information.</td>
</tr>

<tr>
  <td>accessEventQueue</td>
  <td>Access to the AWT event queue</td>
  <td>After retrieving the AWT event queue,
malicious code may peek at and even remove existing events
from its event queue, as well as post bogus events which may purposefully
cause the application or applet to misbehave in an insecure manner.</td>
</tr>

<tr>
  <td>accessSystemTray</td>
  <td>Access to the AWT SystemTray instance</td>
  <td>This would allow malicious code to add tray icons to the system tray.
First, such an icon may look like the icon of some known application
(such as a firewall or anti-virus) and order a user to do something unsafe
(with help of balloon messages). Second, the system tray may be glutted with
tray icons so that no one could add a tray icon anymore.</td>
</tr>

<tr>
  <td>createRobot</td>
  <td>Create java.awt.Robot objects</td>
  <td>The java.awt.Robot object allows code to generate native-level
mouse and keyboard events as well as read the screen. It could allow
malicious code to control the system, run other programs, read the
display, and deny mouse and keyboard access to the user.</td>
</tr>

<tr>
  <td>fullScreenExclusive</td>
  <td>Enter full-screen exclusive mode</td>
  <td>Entering full-screen exclusive mode allows direct access to
low-level graphics card memory.  This could be used to spoof the
system, since the program is in direct control of rendering. Depending on
the implementation, the security warning may not be shown for the windows
used to enter the full-screen exclusive mode (assuming that the {@code
fullScreenExclusive} permission has been granted to this application). Note
that this behavior does not mean that the {@code
showWindowWithoutWarningBanner} permission will be automatically granted to
the application which has the {@code fullScreenExclusive} permission:
non-full-screen windows will continue to be shown with the security
warning.</td>
</tr>

<tr>
  <td>listenToAllAWTEvents</td>
  <td>Listen to all AWT events, system-wide</td>
  <td>After adding an AWT event listener,
malicious code may scan all AWT events dispatched in the system,
allowing it to read all user input (such as passwords).  Each
AWT event listener is called from within the context of that
event queue's EventDispatchThread, so if the accessEventQueue
permission is also enabled, malicious code could modify the
contents of AWT event queues system-wide, causing the application
or applet to misbehave in an insecure manner.</td>
</tr>

<tr>
  <td>readDisplayPixels</td>
  <td>Readback of pixels from the display screen</td>
  <td>Interfaces such as the java.awt.Composite interface or the
java.awt.Robot class allow arbitrary code to examine pixels on the
display enable malicious code to snoop on the activities of the user.</td>
</tr>

<tr>
  <td>replaceKeyboardFocusManager</td>
  <td>Sets the <code>KeyboardFocusManager</code> for
      a particular thread.
  <td>When <code>SecurityManager</code> is installed, the invoking
      thread must be granted this permission in order to replace
      the current <code>KeyboardFocusManager</code>.  If permission
      is not granted, a <code>SecurityException</code> will be thrown.
</tr>

<tr>
  <td>setAppletStub</td>
  <td>Setting the stub which implements Applet container services</td>
  <td>Malicious code could set an applet's stub and result in unexpected
behavior or denial of service to an applet.</td>
</tr>

<tr>
  <td>setWindowAlwaysOnTop</td>
  <td>Setting always-on-top property of the window: {@link Window#setAlwaysOnTop}</td>
  <td>The malicious window might make itself look and behave like a real full desktop, so that
information entered by the unsuspecting user is captured and subsequently misused </td>
</tr>

<tr>
  <td>showWindowWithoutWarningBanner</td>
  <td>Display of a window without also displaying a banner warning
that the window was created by an applet</td>
  <td>Without this warning,
an applet may pop up windows without the user knowing that they
belong to an applet.  Since users may make security-sensitive
decisions based on whether or not the window belongs to an applet
(entering a username and password into a dialog box, for example),
disabling this warning banner may allow applets to trick the user
into entering such information.</td>
</tr>

<tr>
  <td>toolkitModality</td>
  <td>Creating {@link Dialog.ModalityType#TOOLKIT_MODAL TOOLKIT_MODAL} dialogs
      and setting the {@link Dialog.ModalExclusionType#TOOLKIT_EXCLUDE
      TOOLKIT_EXCLUDE} window property.</td>
  <td>When a toolkit-modal dialog is shown from an applet, it blocks all other
applets in the browser. When launching applications from Java Web Start,
its windows (such as the security dialog) may also be blocked by toolkit-modal
dialogs, shown from these applications.</td>
</tr>

<tr>
  <td>watchMousePointer</td>
  <td>Getting the information about the mouse pointer position at any
time</td>
  <td>Constantly watching the mouse pointer,
an applet can make guesses about what the user is doing, i.e. moving
the mouse to the lower left corner of the screen most likely means that
the user is about to launch an application. If a virtual keypad is used
so that keyboard is emulated using the mouse, an applet may guess what
is being typed.</td>
</tr>
</table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager


@author Marianne Mueller
@author Roland Schemers
"
      classrelation 2886146 // <generalisation>
	relation 2886146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2886146 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      attribute 1336706 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8890392402588814465L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from the Java 2 platform for interoperability 
"
      end

      operation 6092290 "AWTPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>AWTPermission</code> with the specified name.
The name is the symbolic name of the <code>AWTPermission</code>,
such as \"topLevelWindow\", \"systemClipboard\", etc. An asterisk
may be used to indicate all AWT permissions.

@param name the name of the AWTPermission

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty.
"
      end

      operation 6092418 "AWTPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>AWTPermission</code> object with the specified name.
The name is the symbolic name of the <code>AWTPermission</code>, and the
actions string is currently unused and should be <code>null</code>.

@param name the name of the <code>AWTPermission</code>
@param actions should be <code>null</code>

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty.
"
      end
    end

    class 857730 "BasicStroke"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>BasicStroke</code> class defines a basic set of rendering
attributes for the outlines of graphics primitives, which are rendered
with a {@link Graphics2D} object that has its Stroke attribute set to
this <code>BasicStroke</code>.
The rendering attributes defined by <code>BasicStroke</code> describe
the shape of the mark made by a pen drawn along the outline of a
{@link Shape} and the decorations applied at the ends and joins of
path segments of the <code>Shape</code>.
These rendering attributes include:
<dl>
<dt><i>width</i>
<dd>The pen width, measured perpendicularly to the pen trajectory.
<dt><i>end caps</i>
<dd>The decoration applied to the ends of unclosed subpaths and
dash segments.  Subpaths that start and end on the same point are
still considered unclosed if they do not have a CLOSE segment.
See {@link java.awt.geom.PathIterator#SEG_CLOSE SEG_CLOSE}
for more information on the CLOSE segment.
The three different decorations are: {@link #CAP_BUTT},
{@link #CAP_ROUND}, and {@link #CAP_SQUARE}.
<dt><i>line joins</i>
<dd>The decoration applied at the intersection of two path segments
and at the intersection of the endpoints of a subpath that is closed
using {@link java.awt.geom.PathIterator#SEG_CLOSE SEG_CLOSE}.
The three different decorations are: {@link #JOIN_BEVEL},
{@link #JOIN_MITER}, and {@link #JOIN_ROUND}.
<dt><i>miter limit</i>
<dd>The limit to trim a line join that has a JOIN_MITER decoration.
A line join is trimmed when the ratio of miter length to stroke
width is greater than the miterlimit value.  The miter length is
the diagonal length of the miter, which is the distance between
the inside corner and the outside corner of the intersection.
The smaller the angle formed by two line segments, the longer
the miter length and the sharper the angle of intersection.  The
default miterlimit value of 10.0f causes all angles less than
11 degrees to be trimmed.  Trimming miters converts
the decoration of the line join to bevel.
<dt><i>dash attributes</i>
<dd>The definition of how to make a dash pattern by alternating
between opaque and transparent sections.
</dl>
All attributes that specify measurements and distances controlling
the shape of the returned outline are measured in the same
coordinate system as the original unstroked <code>Shape</code>
argument.  When a <code>Graphics2D</code> object uses a
<code>Stroke</code> object to redefine a path during the execution
of one of its <code>draw</code> methods, the geometry is supplied
in its original form before the <code>Graphics2D</code> transform
attribute is applied.  Therefore, attributes such as the pen width
are interpreted in the user space coordinate system of the
<code>Graphics2D</code> object and are subject to the scaling and
shearing effects of the user-space-to-device-space transform in that
particular <code>Graphics2D</code>.
For example, the width of a rendered shape's outline is determined
not only by the width attribute of this <code>BasicStroke</code>,
but also by the transform attribute of the
<code>Graphics2D</code> object.  Consider this code:
<blockquote><tt>
     // sets the Graphics2D object's Transform attribute
     g2d.scale(10, 10);
     // sets the Graphics2D object's Stroke attribute
     g2d.setStroke(new BasicStroke(1.5f));
</tt></blockquote>
Assuming there are no other scaling transforms added to the
<code>Graphics2D</code> object, the resulting line
will be approximately 15 pixels wide.
As the example code demonstrates, a floating-point line
offers better precision, especially when large transforms are
used with a <code>Graphics2D</code> object.
When a line is diagonal, the exact width depends on how the
rendering pipeline chooses which pixels to fill as it traces the
theoretical widened outline.  The choice of which pixels to turn
on is affected by the antialiasing attribute because the
antialiasing rendering pipeline can choose to color
partially-covered pixels.
<p>
For more information on the user space coordinate system and the
rendering process, see the <code>Graphics2D</code> class comments.
@see Graphics2D
@author Jim Graham
"
      classrelation 2886274 // <realization>
	relation 2886274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2886274 // <realization>
	  b parent class_ref 857858 // Stroke
      end

      attribute 1336834 "JOIN_MITER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Joins path segments by extending their outside edges until
they meet.

"
      end

      attribute 1336962 "JOIN_ROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Joins path segments by rounding off the corner at a radius
of half the line width.

"
      end

      attribute 1337090 "JOIN_BEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Joins path segments by connecting the outer corners of their
wide outlines with a straight segment.

"
      end

      attribute 1337218 "CAP_BUTT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ends unclosed subpaths and dash segments with no added
decoration.

"
      end

      attribute 1337346 "CAP_ROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ends unclosed subpaths and dash segments with a round
decoration that has a radius equal to half of the width
of the pen.

"
      end

      attribute 1337474 "CAP_SQUARE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ends unclosed subpaths and dash segments with a square
projection that extends beyond the end of the segment
to a distance equal to half of the line width.

"
      end

      attribute 1337602 "width"
	package explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1337730 "join"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1337858 "cap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1337986 "miterlimit"
	package explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1338114 "dash"
	package explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1338242 "dash_phase"
	package explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6092674 "BasicStroke"
	public explicit_return_type ""
	nparams 6
	  param in name "width" explicit_type "float"
	  param in name "cap" explicit_type "int"
	  param in name "join" explicit_type "int"
	  param in name "miterlimit" explicit_type "float"
	  param inout name "dash" explicit_type "float"
	multiplicity "[]"
	  param in name "dash_phase" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({ \"lineWidth\", \"endCap\", \"lineJoin\", \"miterLimit\", \"dashArray\", \"dashPhase\" })
"
	
	
	
	comment "Constructs a new <code>BasicStroke</code> with the specified
attributes.
@param width the width of this <code>BasicStroke</code>.  The
        width must be greater than or equal to 0.0f.  If width is
        set to 0.0f, the stroke is rendered as the thinnest
        possible line for the target device and the antialias
        hint setting.
@param cap the decoration of the ends of a <code>BasicStroke</code>
@param join the decoration applied where path segments meet
@param miterlimit the limit to trim the miter join.  The miterlimit
       must be greater than or equal to 1.0f.
@param dash the array representing the dashing pattern
@param dash_phase the offset to start the dashing pattern
@throws IllegalArgumentException if <code>width</code> is negative
@throws IllegalArgumentException if <code>cap</code> is not either
        CAP_BUTT, CAP_ROUND or CAP_SQUARE
@throws IllegalArgumentException if <code>miterlimit</code> is less
        than 1 and <code>join</code> is JOIN_MITER
@throws IllegalArgumentException if <code>join</code> is not
        either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER
@throws IllegalArgumentException if <code>dash_phase</code>
        is negative and <code>dash</code> is not <code>null</code>
@throws IllegalArgumentException if the length of
        <code>dash</code> is zero
@throws IllegalArgumentException if dash lengths are all zero.
"
      end

      operation 6092802 "BasicStroke"
	public explicit_return_type ""
	nparams 4
	  param in name "width" explicit_type "float"
	  param in name "cap" explicit_type "int"
	  param in name "join" explicit_type "int"
	  param in name "miterlimit" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a solid <code>BasicStroke</code> with the specified
attributes.
@param width the width of the <code>BasicStroke</code>
@param cap the decoration of the ends of a <code>BasicStroke</code>
@param join the decoration applied where path segments meet
@param miterlimit the limit to trim the miter join
@throws IllegalArgumentException if <code>width</code> is negative
@throws IllegalArgumentException if <code>cap</code> is not either
        CAP_BUTT, CAP_ROUND or CAP_SQUARE
@throws IllegalArgumentException if <code>miterlimit</code> is less
        than 1 and <code>join</code> is JOIN_MITER
@throws IllegalArgumentException if <code>join</code> is not
        either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER
"
      end

      operation 6092930 "BasicStroke"
	public explicit_return_type ""
	nparams 3
	  param in name "width" explicit_type "float"
	  param in name "cap" explicit_type "int"
	  param in name "join" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a solid <code>BasicStroke</code> with the specified
attributes.  The <code>miterlimit</code> parameter is
unnecessary in cases where the default is allowable or the
line joins are not specified as JOIN_MITER.
@param width the width of the <code>BasicStroke</code>
@param cap the decoration of the ends of a <code>BasicStroke</code>
@param join the decoration applied where path segments meet
@throws IllegalArgumentException if <code>width</code> is negative
@throws IllegalArgumentException if <code>cap</code> is not either
        CAP_BUTT, CAP_ROUND or CAP_SQUARE
@throws IllegalArgumentException if <code>join</code> is not
        either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER
"
      end

      operation 6093058 "BasicStroke"
	public explicit_return_type ""
	nparams 1
	  param in name "width" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a solid <code>BasicStroke</code> with the specified
line width and with default values for the cap and join
styles.
@param width the width of the <code>BasicStroke</code>
@throws IllegalArgumentException if <code>width</code> is negative
"
      end

      operation 6093186 "BasicStroke"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>BasicStroke</code> with defaults for all
attributes.
The default attributes are a solid line of width 1.0, CAP_SQUARE,
JOIN_MITER, a miter limit of 10.0.
"
      end

      operation 6093314 "createStrokedShape"
	public return_type class_ref 379394 // Shape
	nparams 1
	  param inout name "s" type class_ref 379394 // Shape
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Shape</code> whose interior defines the
stroked outline of a specified <code>Shape</code>.
@param s the <code>Shape</code> boundary be stroked
@return the <code>Shape</code> of the stroked outline.
"
      end

      operation 6093442 "getLineWidth"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the line width.  Line width is represented in user space,
which is the default-coordinate space used by Java 2D.  See the
<code>Graphics2D</code> class comments for more information on
the user space coordinate system.
@return the line width of this <code>BasicStroke</code>.
@see Graphics2D
"
      end

      operation 6093570 "getEndCap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the end cap style.
@return the end cap style of this <code>BasicStroke</code> as one
of the static <code>int</code> values that define possible end cap
styles.
"
      end

      operation 6093698 "getLineJoin"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the line join style.
@return the line join style of the <code>BasicStroke</code> as one
of the static <code>int</code> values that define possible line
join styles.
"
      end

      operation 6093826 "getMiterLimit"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the limit of miter joins.
@return the limit of miter joins of the <code>BasicStroke</code>.
"
      end

      operation 6093954 "getDashArray"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array representing the lengths of the dash segments.
Alternate entries in the array represent the user space lengths
of the opaque and transparent segments of the dashes.
As the pen moves along the outline of the <code>Shape</code>
to be stroked, the user space
distance that the pen travels is accumulated.  The distance
value is used to index into the dash array.
The pen is opaque when its current cumulative distance maps
to an even element of the dash array and transparent otherwise.
@return the dash array.
"
      end

      operation 6094082 "getDashPhase"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current dash phase.
The dash phase is a distance specified in user coordinates that
represents an offset into the dashing pattern. In other words, the dash
phase defines the point in the dashing pattern that will correspond to
the beginning of the stroke.
@return the dash phase as a <code>float</code> value.
"
      end

      operation 6094210 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode for this stroke.
@return      a hash code for this stroke.
"
      end

      operation 6094338 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this BasicStroke represents the same
stroking operation as the given argument.


Tests if a specified object is equal to this <code>BasicStroke</code>
by first testing if it is a <code>BasicStroke</code> and then comparing
its width, join, cap, miter limit, dash, and dash phase attributes with
those of this <code>BasicStroke</code>.
@param  obj the specified object to compare to this
             <code>BasicStroke</code>
@return <code>true</code> if the width, join, cap, miter limit, dash, and
           dash phase are the same for both objects;
           <code>false</code> otherwise.
"
      end
    end

    class 857858 "Stroke"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Stroke</code> interface allows a
{@link Graphics2D} object to obtain a {@link Shape} that is the
decorated outline, or stylistic representation of the outline,
of the specified <code>Shape</code>.
Stroking a <code>Shape</code> is like tracing its outline with a
marking pen of the appropriate size and shape.
The area where the pen would place ink is the area enclosed by the
outline <code>Shape</code>.
<p>
The methods of the <code>Graphics2D</code> interface that use the
outline <code>Shape</code> returned by a <code>Stroke</code> object
include <code>draw</code> and any other methods that are
implemented in terms of that method, such as
<code>drawLine</code>, <code>drawRect</code>,
<code>drawRoundRect</code>, <code>drawOval</code>,
<code>drawArc</code>, <code>drawPolyline</code>,
and <code>drawPolygon</code>.
<p>
The objects of the classes implementing <code>Stroke</code>
must be read-only because <code>Graphics2D</code> does not
clone these objects either when they are set as an attribute
with the <code>setStroke</code> method or when the
<code>Graphics2D</code> object is itself cloned.
If a <code>Stroke</code> object is modified after it is set in
the <code>Graphics2D</code> context then the behavior
of subsequent rendering would be undefined.
@see BasicStroke
@see Graphics2D#setStroke
"
      operation 6092546 "createStrokedShape"
	public return_type class_ref 379394 // Shape
	nparams 1
	  param inout name "p" type class_ref 379394 // Shape
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an outline <code>Shape</code> which encloses the area that
should be painted when the <code>Shape</code> is stroked according
to the rules defined by the
object implementing the <code>Stroke</code> interface.
@param p a <code>Shape</code> to be stroked
@return the stroked outline <code>Shape</code>.
"
      end
    end

    class 857986 "BorderLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A border layout lays out a container, arranging and resizing
its components to fit in five regions:
north, south, east, west, and center.
Each region may contain no more than one component, and
is identified by a corresponding constant:
<code>NORTH</code>, <code>SOUTH</code>, <code>EAST</code>,
<code>WEST</code>, and <code>CENTER</code>.  When adding a
component to a container with a border layout, use one of these
five constants, for example:
<pre>
   Panel p = new Panel();
   p.setLayout(new BorderLayout());
   p.add(new Button(\"Okay\"), BorderLayout.SOUTH);
</pre>
As a convenience, <code>BorderLayout</code> interprets the
absence of a string specification the same as the constant
<code>CENTER</code>:
<pre>
   Panel p2 = new Panel();
   p2.setLayout(new BorderLayout());
   p2.add(new TextArea());  // Same as p.add(new TextArea(), BorderLayout.CENTER);
</pre>
<p>
In addition, <code>BorderLayout</code> supports the relative
positioning constants, <code>PAGE_START</code>, <code>PAGE_END</code>,
<code>LINE_START</code>, and <code>LINE_END</code>.
In a container whose <code>ComponentOrientation</code> is set to
<code>ComponentOrientation.LEFT_TO_RIGHT</code>, these constants map to
<code>NORTH</code>, <code>SOUTH</code>, <code>WEST</code>, and
<code>EAST</code>, respectively.
<p>
For compatibility with previous releases, <code>BorderLayout</code>
also includes the relative positioning constants <code>BEFORE_FIRST_LINE</code>,
<code>AFTER_LAST_LINE</code>, <code>BEFORE_LINE_BEGINS</code> and
<code>AFTER_LINE_ENDS</code>.  These are equivalent to
<code>PAGE_START</code>, <code>PAGE_END</code>, <code>LINE_START</code>
and <code>LINE_END</code> respectively.  For
consistency with the relative positioning constants used by other
components, the latter constants are preferred.
<p>
Mixing both absolute and relative positioning constants can lead to
unpredictable results.  If
you use both types, the relative constants will take precedence.
For example, if you add components using both the <code>NORTH</code>
and <code>PAGE_START</code> constants in a container whose
orientation is <code>LEFT_TO_RIGHT</code>, only the
<code>PAGE_START</code> will be layed out.
<p>
NOTE: Currently (in the Java 2 platform v1.2),
<code>BorderLayout</code> does not support vertical
orientations.  The <code>isVertical</code> setting on the container's
<code>ComponentOrientation</code> is not respected.
<p>
The components are laid out according to their
preferred sizes and the constraints of the container's size.
The <code>NORTH</code> and <code>SOUTH</code> components may
be stretched horizontally; the <code>EAST</code> and
<code>WEST</code> components may be stretched vertically;
the <code>CENTER</code> component may stretch both horizontally
and vertically to fill any space left over.
<p>
Here is an example of five buttons in an applet laid out using
the <code>BorderLayout</code> layout manager:
<p>
<img src=\"doc-files/BorderLayout-1.gif\"
alt=\"Diagram of an applet demonstrating BorderLayout.
     Each section of the BorderLayout contains a Button corresponding to its position in the layout, one of:
     North, West, Center, East, or South.\"
style=\"float:center; margin: 7px 10px;\">
<p>
The code for this applet is as follows:

<hr><blockquote><pre>
import java.awt.*;
import java.applet.Applet;

public class buttonDir extends Applet {
  public void init() {
    setLayout(new BorderLayout());
    add(new Button(\"North\"), BorderLayout.NORTH);
    add(new Button(\"South\"), BorderLayout.SOUTH);
    add(new Button(\"East\"), BorderLayout.EAST);
    add(new Button(\"West\"), BorderLayout.WEST);
    add(new Button(\"Center\"), BorderLayout.CENTER);
  }
}
</pre></blockquote><hr>
<p>
@author      Arthur van Hoff
@see         java.awt.Container#add(String, Component)
@see         java.awt.ComponentOrientation
@since       JDK1.0
"
      classrelation 2886402 // <realization>
	relation 2886402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2886402 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 2886530 // <realization>
	relation 2886530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2886530 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1338370 "hgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constructs a border layout with the horizontal gaps
between components.
The horizontal gap is specified by <code>hgap</code>.

@see #getHgap()
@see #setHgap(int)

@serial

"
      end

      attribute 1338498 "vgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constructs a border layout with the vertical gaps
between components.
The vertical gap is specified by <code>vgap</code>.

@see #getVgap()
@see #setVgap(int)
@serial

"
      end

      classrelation 2886658 // north (<unidirectional association>)
	relation 2886658 --->
	  a role_name "north" package
	    comment "
Constant to specify components location to be the
     north portion of the border layout.
@serial
@see #getChild(String, boolean)
@see #addLayoutComponent
@see #getLayoutAlignmentX
@see #getLayoutAlignmentY
@see #removeLayoutComponent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2886658 // north (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2886786 // west (<unidirectional association>)
	relation 2886786 --->
	  a role_name "west" package
	    comment "
Constant to specify components location to be the
     west portion of the border layout.
@serial
@see #getChild(String, boolean)
@see #addLayoutComponent
@see #getLayoutAlignmentX
@see #getLayoutAlignmentY
@see #removeLayoutComponent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2886786 // west (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2886914 // east (<unidirectional association>)
	relation 2886914 --->
	  a role_name "east" package
	    comment "
Constant to specify components location to be the
     east portion of the border layout.
@serial
@see #getChild(String, boolean)
@see #addLayoutComponent
@see #getLayoutAlignmentX
@see #getLayoutAlignmentY
@see #removeLayoutComponent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2886914 // east (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887042 // south (<unidirectional association>)
	relation 2887042 --->
	  a role_name "south" package
	    comment "
Constant to specify components location to be the
     south portion of the border layout.
@serial
@see #getChild(String, boolean)
@see #addLayoutComponent
@see #getLayoutAlignmentX
@see #getLayoutAlignmentY
@see #removeLayoutComponent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887042 // south (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887170 // center (<unidirectional association>)
	relation 2887170 --->
	  a role_name "center" package
	    comment "
Constant to specify components location to be the
     center portion of the border layout.
@serial
@see #getChild(String, boolean)
@see #addLayoutComponent
@see #getLayoutAlignmentX
@see #getLayoutAlignmentY
@see #removeLayoutComponent

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887170 // center (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887298 // firstLine (<unidirectional association>)
	relation 2887298 --->
	  a role_name "firstLine" package
	    comment "

A relative positioning constant, that can be used instead of
north, south, east, west or center.
mixing the two types of constants can lead to unpredictable results.  If
you use both types, the relative constants will take precedence.
For example, if you add components using both the <code>NORTH</code>
and <code>BEFORE_FIRST_LINE</code> constants in a container whose
orientation is <code>LEFT_TO_RIGHT</code>, only the
<code>BEFORE_FIRST_LINE</code> will be layed out.
This will be the same for lastLine, firstItem, lastItem.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887298 // firstLine (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887426 // lastLine (<unidirectional association>)
	relation 2887426 --->
	  a role_name "lastLine" package
	    comment "
A relative positioning constant, that can be used instead of
north, south, east, west or center.
Please read Description for firstLine.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887426 // lastLine (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887554 // firstItem (<unidirectional association>)
	relation 2887554 --->
	  a role_name "firstItem" package
	    comment "
A relative positioning constant, that can be used instead of
north, south, east, west or center.
Please read Description for firstLine.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887554 // firstItem (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887682 // lastItem (<unidirectional association>)
	relation 2887682 --->
	  a role_name "lastItem" package
	    comment "
A relative positioning constant, that can be used instead of
north, south, east, west or center.
Please read Description for firstLine.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887682 // lastItem (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2887810 // NORTH (<unidirectional association>)
	relation 2887810 --->
	  a role_name "NORTH" init_value " \"North\"" class_relation const_relation public
	    comment "
The north layout constraint (top of container).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887810 // NORTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2887938 // SOUTH (<unidirectional association>)
	relation 2887938 --->
	  a role_name "SOUTH" init_value " \"South\"" class_relation const_relation public
	    comment "
The south layout constraint (bottom of container).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2887938 // SOUTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888066 // EAST (<unidirectional association>)
	relation 2888066 --->
	  a role_name "EAST" init_value " \"East\"" class_relation const_relation public
	    comment "
The east layout constraint (right side of container).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888066 // EAST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888194 // WEST (<unidirectional association>)
	relation 2888194 --->
	  a role_name "WEST" init_value " \"West\"" class_relation const_relation public
	    comment "
The west layout constraint (left side of container).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888194 // WEST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888322 // CENTER (<unidirectional association>)
	relation 2888322 --->
	  a role_name "CENTER" init_value " \"Center\"" class_relation const_relation public
	    comment "
The center layout constraint (middle of container).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888322 // CENTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888450 // BEFORE_FIRST_LINE (<unidirectional association>)
	relation 2888450 --->
	  a role_name "BEFORE_FIRST_LINE" init_value " \"First\"" class_relation const_relation public
	    comment "
Synonym for PAGE_START.  Exists for compatibility with previous
versions.  PAGE_START is preferred.

@see #PAGE_START
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888450 // BEFORE_FIRST_LINE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888578 // AFTER_LAST_LINE (<unidirectional association>)
	relation 2888578 --->
	  a role_name "AFTER_LAST_LINE" init_value " \"Last\"" class_relation const_relation public
	    comment "
Synonym for PAGE_END.  Exists for compatibility with previous
versions.  PAGE_END is preferred.

@see #PAGE_END
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888578 // AFTER_LAST_LINE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888706 // BEFORE_LINE_BEGINS (<unidirectional association>)
	relation 2888706 --->
	  a role_name "BEFORE_LINE_BEGINS" init_value " \"Before\"" class_relation const_relation public
	    comment "
Synonym for LINE_START.  Exists for compatibility with previous
versions.  LINE_START is preferred.

@see #LINE_START
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888706 // BEFORE_LINE_BEGINS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888834 // AFTER_LINE_ENDS (<unidirectional association>)
	relation 2888834 --->
	  a role_name "AFTER_LINE_ENDS" init_value " \"After\"" class_relation const_relation public
	    comment "
Synonym for LINE_END.  Exists for compatibility with previous
versions.  LINE_END is preferred.

@see #LINE_END
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888834 // AFTER_LINE_ENDS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2888962 // PAGE_START (<unidirectional association>)
	relation 2888962 --->
	  a role_name "PAGE_START" init_value " BEFORE_FIRST_LINE" class_relation const_relation public
	    comment "
The component comes before the first line of the layout's content.
For Western, left-to-right and top-to-bottom orientations, this is
equivalent to NORTH.

@see java.awt.Component#getComponentOrientation
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2888962 // PAGE_START (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2889090 // PAGE_END (<unidirectional association>)
	relation 2889090 --->
	  a role_name "PAGE_END" init_value " AFTER_LAST_LINE" class_relation const_relation public
	    comment "
The component comes after the last line of the layout's content.
For Western, left-to-right and top-to-bottom orientations, this is
equivalent to SOUTH.

@see java.awt.Component#getComponentOrientation
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889090 // PAGE_END (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2889218 // LINE_START (<unidirectional association>)
	relation 2889218 --->
	  a role_name "LINE_START" init_value " BEFORE_LINE_BEGINS" class_relation const_relation public
	    comment "
The component goes at the beginning of the line direction for the
layout. For Western, left-to-right and top-to-bottom orientations,
this is equivalent to WEST.

@see java.awt.Component#getComponentOrientation
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889218 // LINE_START (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2889346 // LINE_END (<unidirectional association>)
	relation 2889346 --->
	  a role_name "LINE_END" init_value " AFTER_LINE_ENDS" class_relation const_relation public
	    comment "
The component goes at the end of the line direction for the
layout. For Western, left-to-right and top-to-bottom orientations,
this is equivalent to EAST.

@see java.awt.Component#getComponentOrientation
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2889346 // LINE_END (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1338626 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8658291919501921765L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6094466 "BorderLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new border layout with
no gaps between components.
"
      end

      operation 6094594 "BorderLayout"
	public explicit_return_type ""
	nparams 2
	  param in name "hgap" explicit_type "int"
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a border layout with the specified gaps
between components.
The horizontal gap is specified by <code>hgap</code>
and the vertical gap is specified by <code>vgap</code>.
@param   hgap   the horizontal gap.
@param   vgap   the vertical gap.
"
      end

      operation 6094722 "getHgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the horizontal gap between components.
@since   JDK1.1
"
      end

      operation 6094850 "setHgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "hgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal gap between components.
@param hgap the horizontal gap between components
@since   JDK1.1
"
      end

      operation 6094978 "getVgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the vertical gap between components.
@since   JDK1.1
"
      end

      operation 6095106 "setVgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical gap between components.
@param vgap the vertical gap between components
@since   JDK1.1
"
      end

      operation 6095234 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout, using the specified
constraint object.  For border layouts, the constraint must be
one of the following constants:  <code>NORTH</code>,
<code>SOUTH</code>, <code>EAST</code>,
<code>WEST</code>, or <code>CENTER</code>.
<p>
Most applications do not call this method directly. This method
is called when a component is added to a container using the
<code>Container.add</code> method with the same argument types.
@param   comp         the component to be added.
@param   constraints  an object that specifies how and where
                      the component is added to the layout.
@see     java.awt.Container#add(java.awt.Component, java.lang.Object)
@exception   IllegalArgumentException  if the constraint object is not
                a string, or if it not one of the five specified
             constants.
@since   JDK1.1
"
      end

      operation 6095362 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated  replaced by <code>addLayoutComponent(Component, Object)</code>.
"
      end

      operation 6095490 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from this border layout. This
method is called when a container calls its <code>remove</code> or
<code>removeAll</code> methods. Most applications do not call this
method directly.
@param   comp   the component to be removed.
@see     java.awt.Container#remove(java.awt.Component)
@see     java.awt.Container#removeAll()
"
      end

      operation 6095618 "getLayoutComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the component that was added using the given constraint

@param   constraints  the desired constraint, one of <code>CENTER</code>,
                      <code>NORTH</code>, <code>SOUTH</code>,
                      <code>WEST</code>, <code>EAST</code>,
                      <code>PAGE_START</code>, <code>PAGE_END</code>,
                      <code>LINE_START</code>, <code>LINE_END</code>
@return  the component at the given location, or <code>null</code> if
         the location is empty
@exception   IllegalArgumentException  if the constraint object is
             not one of the nine specified constants
@see     #addLayoutComponent(java.awt.Component, java.lang.Object)
@since 1.5
"
      end

      operation 6095746 "getLayoutComponent"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "target" type class_ref 338690 // Container
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component that corresponds to the given constraint location
based on the target <code>Container</code>'s component orientation.
Components added with the relative constraints <code>PAGE_START</code>,
<code>PAGE_END</code>, <code>LINE_START</code>, and <code>LINE_END</code>
take precedence over components added with the explicit constraints
<code>NORTH</code>, <code>SOUTH</code>, <code>WEST</code>, and <code>EAST</code>.
The <code>Container</code>'s component orientation is used to determine the location of components
added with <code>LINE_START</code> and <code>LINE_END</code>.

@param   constraints     the desired absolute position, one of <code>CENTER</code>,
                         <code>NORTH</code>, <code>SOUTH</code>,
                         <code>EAST</code>, <code>WEST</code>
@param   target     the {@code Container} used to obtain
                    the constraint location based on the target
                    {@code Container}'s component orientation.
@return  the component at the given location, or <code>null</code> if
         the location is empty
@exception   IllegalArgumentException  if the constraint object is
             not one of the five specified constants
@exception   NullPointerException  if the target parameter is null
@see     #addLayoutComponent(java.awt.Component, java.lang.Object)
@since 1.5
"
      end

      operation 6095874 "getConstraints"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the constraints for the specified component

@param   comp the component to be queried
@return  the constraint for the specified component,
         or null if component is null or is not present
         in this layout
@see #addLayoutComponent(java.awt.Component, java.lang.Object)
@since 1.5
"
      end

      operation 6096002 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of the <code>target</code> container
using this layout manager.
<p>
This method is called when a container calls its
<code>getMinimumSize</code> method. Most applications do not call
this method directly.
@param   target   the container in which to do the layout.
@return  the minimum dimensions needed to lay out the subcomponents
         of the specified container.
@see     java.awt.Container
@see     java.awt.BorderLayout#preferredLayoutSize
@see     java.awt.Container#getMinimumSize()
"
      end

      operation 6096130 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of the <code>target</code>
container using this layout manager, based on the components
in the container.
<p>
Most applications do not call this method directly. This method
is called when a container calls its <code>getPreferredSize</code>
method.
@param   target   the container in which to do the layout.
@return  the preferred dimensions to lay out the subcomponents
         of the specified container.
@see     java.awt.Container
@see     java.awt.BorderLayout#minimumLayoutSize
@see     java.awt.Container#getPreferredSize()
"
      end

      operation 6096258 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum dimensions for this layout given the components
in the specified target container.
@param target the component which needs to be laid out
@see Container
@see #minimumLayoutSize
@see #preferredLayoutSize
"
      end

      operation 6096386 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 6096514 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 6096642 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the layout, indicating that if the layout manager
has cached information it should be discarded.
"
      end

      operation 6096770 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the container argument using this border layout.
<p>
This method actually reshapes the components in the specified
container in order to satisfy the constraints of this
<code>BorderLayout</code> object. The <code>NORTH</code>
and <code>SOUTH</code> components, if any, are placed at
the top and bottom of the container, respectively. The
<code>WEST</code> and <code>EAST</code> components are
then placed on the left and right, respectively. Finally,
the <code>CENTER</code> object is placed in any remaining
space in the middle.
<p>
Most applications do not call this method directly. This method
is called when a container calls its <code>doLayout</code> method.
@param   target   the container in which to do the layout.
@see     java.awt.Container
@see     java.awt.Container#doLayout()
"
      end

      operation 6096898 "getChild"
	private return_type class_ref 338818 // Component
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "ltr" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the component that corresponds to the given constraint location

@param   key     The desired absolute position,
                 either NORTH, SOUTH, EAST, or WEST.
@param   ltr     Is the component line direction left-to-right?
"
      end

      operation 6097026 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the state of this border layout.
@return    a string representation of this border layout.
"
      end
    end

    class 858114 "Button"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class creates a labeled button. The application can cause
some action to happen when the button is pushed. This image
depicts three views of a \"<code>Quit</code>\" button as it appears
under the Solaris operating system:
<p>
<img src=\"doc-files/Button-1.gif\" alt=\"The following context describes the graphic\"
style=\"float:center; margin: 7px 10px;\">
<p>
The first view shows the button as it appears normally.
The second view shows the button
when it has input focus. Its outline is darkened to let the
user know that it is an active object. The third view shows the
button when the user clicks the mouse over the button, and thus
requests that an action be performed.
<p>
The gesture of clicking on a button with the mouse
is associated with one instance of <code>ActionEvent</code>,
which is sent out when the mouse is both pressed and released
over the button. If an application is interested in knowing
when the button has been pressed but not released, as a separate
gesture, it can specialize <code>processMouseEvent</code>,
or it can register itself as a listener for mouse events by
calling <code>addMouseListener</code>. Both of these methods are
defined by <code>Component</code>, the abstract superclass of
all components.
<p>
When a button is pressed and released, AWT sends an instance
of <code>ActionEvent</code> to the button, by calling
<code>processEvent</code> on the button. The button's
<code>processEvent</code> method receives all events
for the button; it passes an action event along by
calling its own <code>processActionEvent</code> method.
The latter method passes the action event on to any action
listeners that have registered an interest in action
events generated by this button.
<p>
If an application wants to perform some action based on
a button being pressed and released, it should implement
<code>ActionListener</code> and register the new listener
to receive events from this button, by calling the button's
<code>addActionListener</code> method. The application can
make use of the button's action command as a messaging protocol.

@author      Sami Shaio
@see         java.awt.event.ActionEvent
@see         java.awt.event.ActionListener
@see         java.awt.Component#processMouseEvent
@see         java.awt.Component#addMouseListener
@since       JDK1.0
"
      classrelation 2890754 // <generalisation>
	relation 2890754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2890754 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2890882 // <realization>
	relation 2890882 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2890882 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2891010 // label (<unidirectional association>)
	relation 2891010 --->
	  a role_name "label" package
	    comment "
The button's label.  This value may be null.
@serial
@see #getLabel()
@see #setLabel(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2891010 // label (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2891138 // actionCommand (<unidirectional association>)
	relation 2891138 --->
	  a role_name "actionCommand" package
	    comment "
The action to be performed once a button has been
pressed.  This value may be null.
@serial
@see #getActionCommand()
@see #setActionCommand(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2891138 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2891266 // actionListener (<unidirectional association>)
	relation 2891266 --->
	  a role_name "actionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2891266 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2891394 // base (<unidirectional association>)
	relation 2891394 --->
	  a role_name "base" init_value " \"button\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2891394 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1339266 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1339394 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8774683716313001058L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 147714 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6098306 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      operation 6098434 "Button"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a button with an empty string for its label.

@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6098562 "Button"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a button with the specified label.

@param label  a string label for the button, or
              <code>null</code> for no label
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6098690 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6098818 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer of the button.  The button's peer allows the
application to change the look of the button without changing
its functionality.

@see     java.awt.Toolkit#createButton(java.awt.Button)
@see     java.awt.Component#getToolkit()
"
      end

      operation 6098946 "getLabel"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label of this button.

@return    the button's label, or <code>null</code>
               if the button has no label.
@see       java.awt.Button#setLabel
"
      end

      operation 6099074 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the button's label to be the specified string.

@param     label   the new label, or <code>null</code>
               if the button has no label.
@see       java.awt.Button#getLabel
"
      end

      operation 6099202 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the command name for the action event fired
by this button. By default this action command is
set to match the label of the button.

@param     command  a string used to set the button's
                 action command.
           If the string is <code>null</code> then the action command
           is set to match the label of the button.
@see       java.awt.event.ActionEvent
@since     JDK1.1
"
      end

      operation 6099330 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the command name of the action event fired by this button.
If the command name is <code>null</code> (default) then this method
returns the label of the button.
"
      end

      operation 6099458 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive action events from
this button. Action events occur when a user presses or releases
the mouse over this button.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l the action listener
@see           #removeActionListener
@see           #getActionListeners
@see           java.awt.event.ActionListener
@since         JDK1.1
"
      end

      operation 6099586 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener so that it no longer
receives action events from this button. Action events occur
when a user presses or releases the mouse over this button.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l     the action listener
@see             #addActionListener
@see             #getActionListeners
@see             java.awt.event.ActionListener
@since           JDK1.1
"
      end

      operation 6099714 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this button.

@return all of this button's <code>ActionListener</code>s
        or an empty array if no action
        listeners are currently registered

@see             #addActionListener
@see             #removeActionListener
@see             java.awt.event.ActionListener
@since 1.4
"
      end

      operation 6099842 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Button</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Button</code> <code>b</code>
for its action listeners with the following code:

<pre>ActionListener[] als = (ActionListener[])(b.getListeners(ActionListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this button,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getActionListeners
@since 1.3
"
      end

      operation 6099970 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6100098 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this button. If an event is
an instance of <code>ActionEvent</code>, this method invokes
the <code>processActionEvent</code> method. Otherwise,
it invokes <code>processEvent</code> on the superclass.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param        e the event
@see          java.awt.event.ActionEvent
@see          java.awt.Button#processActionEvent
@since        JDK1.1
"
      end

      operation 6100226 "processActionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes action events occurring on this button
by dispatching them to any registered
<code>ActionListener</code> objects.
<p>
This method is not called unless action events are
enabled for this button. Action events are enabled
when one of the following occurs:
<ul>
<li>An <code>ActionListener</code> object is registered
via <code>addActionListener</code>.
<li>Action events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the action event
@see         java.awt.event.ActionListener
@see         java.awt.Button#addActionListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6100354 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Button</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return     the parameter string of this button
"
      end

      attribute 1339522 "buttonSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


Button Serial Data Version.
@serial

"
      end

      operation 6100482 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ActionListeners</code>
as optional data.  The non-serializable
<code>ActionListeners</code> are detected and
no attempt is made to serialize them.

@serialData <code>null</code> terminated sequence of 0 or
  more pairs: the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code>
  indicates the type of object and is one of the following:
  <code>actionListenerK</code> indicating an
    <code>ActionListener</code> object

@param s the <code>ObjectOutputStream</code> to write
@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#actionListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6100610 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if
it isn't <code>null</code> adds a listener to
receive action events fired by the button.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@serial
@see #removeActionListener(ActionListener)
@see #addActionListener(ActionListener)
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6100738 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with
this <code>Button</code>. For buttons, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleAWTButton</code>.
A new <code>AccessibleAWTButton</code> instance is
created if necessary.

@return an <code>AccessibleAWTButton</code> that serves as the
        <code>AccessibleContext</code> of this <code>Button</code>
@beaninfo
      expert: true
 description: The AccessibleContext associated with this Button.
@since 1.3
"
      end

      class 858242 "AccessibleAWTButton"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2891522 // <generalisation>
	  relation 2891522 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2891522 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2891650 // <realization>
	  relation 2891650 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2891650 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 2891778 // <realization>
	  relation 2891778 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2891778 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	attribute 1339650 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -5932203980244017102L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6100866 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
"
	end

	operation 6100994 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 6101122 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 6101250 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.  The
default behavior of a button is to have one action - toggle
the button.

@return 1, the number of Actions in this object
"
	end

	operation 6101378 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 6101506 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the the action was performed; else false.
"
	end

	operation 6101634 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of this object as a Number.

@return An Integer of 0 if this isn't selected or an Integer of 1 if
this is selected.
@see javax.swing.AbstractButton#isSelected()
"
	end

	operation 6101762 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 6101890 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return An Integer of 0.
"
	end

	operation 6102018 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return An Integer of 0.
"
	end

	operation 6102146 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 858370 "Canvas"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Canvas</code> component represents a blank rectangular
area of the screen onto which the application can draw or from
which the application can trap input events from the user.
<p>
An application must subclass the <code>Canvas</code> class in
order to get useful functionality such as creating a custom
component. The <code>paint</code> method must be overridden
in order to perform custom graphics on the canvas.

@author      Sami Shaio
@since       JDK1.0
"
      classrelation 2891906 // <generalisation>
	relation 2891906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2891906 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2892034 // <realization>
	relation 2892034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2892034 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2892162 // base (<unidirectional association>)
	relation 2892162 --->
	  a role_name "base" init_value " \"canvas\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2892162 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1339778 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1339906 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2284879212465893870L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6102274 "Canvas"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Canvas.
"
      end

      operation 6102402 "Canvas"
	public explicit_return_type ""
	nparams 1
	  param inout name "config" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Canvas given a GraphicsConfiguration object.

@param config a reference to a GraphicsConfiguration object.

@see GraphicsConfiguration
"
      end

      operation 6102530 "setGraphicsConfiguration"
	package explicit_return_type "void"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6102658 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6102786 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer of the canvas.  This peer allows you to change the
user interface of the canvas without changing its functionality.
@see     java.awt.Toolkit#createCanvas(java.awt.Canvas)
@see     java.awt.Component#getToolkit()
"
      end

      operation 6102914 "paint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Paints this canvas.
<p>
Most applications that subclass <code>Canvas</code> should
override this method in order to perform some useful operation
(typically, custom painting of the canvas).
The default operation is simply to clear the canvas.
Applications that override this method need not call
super.paint(g).

@param      g   the specified Graphics context
@see        #update(Graphics)
@see        Component#paint(Graphics)
"
      end

      operation 6103042 "update"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates this canvas.
<p>
This method is called in response to a call to <code>repaint</code>.
The canvas is first cleared by filling it with the background
color, and then completely redrawn by calling this canvas's
<code>paint</code> method.
Note: applications that override this method should either call
super.update(g) or incorporate the functionality described
above into their own code.

@param g the specified Graphics context
@see   #paint(Graphics)
@see   Component#update(Graphics)
"
      end

      operation 6103170 "postsOldMouseEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6103298 "createBufferStrategy"
	public explicit_return_type "void"
	nparams 1
	  param in name "numBuffers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component.
Multi-buffering is useful for rendering performance.  This method
attempts to create the best strategy available with the number of
buffers supplied.  It will always create a <code>BufferStrategy</code>
with that number of buffers.
A page-flipping strategy is attempted first, then a blitting strategy
using accelerated buffers.  Finally, an unaccelerated blitting
strategy is used.
<p>
Each time this method is called,
the existing buffer strategy for this component is discarded.
@param numBuffers number of buffers to create, including the front buffer
@exception IllegalArgumentException if numBuffers is less than 1.
@exception IllegalStateException if the component is not displayable
@see #isDisplayable
@see #getBufferStrategy
@since 1.4
"
      end

      operation 6103426 "createBufferStrategy"
	public explicit_return_type "void"
	nparams 2
	  param in name "numBuffers" explicit_type "int"
	  param inout name "caps" type class_ref 344578 // BufferCapabilities
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new strategy for multi-buffering on this component with the
required buffer capabilities.  This is useful, for example, if only
accelerated memory or page flipping is desired (as specified by the
buffer capabilities).
<p>
Each time this method
is called, the existing buffer strategy for this component is discarded.
@param numBuffers number of buffers to create
@param caps the required capabilities for creating the buffer strategy;
cannot be <code>null</code>
@exception AWTException if the capabilities supplied could not be
supported or met; this may happen, for example, if there is not enough
accelerated memory currently available, or if page flipping is specified
but not possible.
@exception IllegalArgumentException if numBuffers is less than 1, or if
caps is <code>null</code>
@see #getBufferStrategy
@since 1.4
"
      end

      operation 6103554 "getBufferStrategy"
	public return_type class_ref 341122 // BufferStrategy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>BufferStrategy</code> used by this component.  This
method will return null if a <code>BufferStrategy</code> has not yet
been created or has been disposed.

@return the buffer strategy used by this component
@see #createBufferStrategy
@since 1.4
"
      end

      operation 6103682 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--- Accessibility Support ---



Gets the AccessibleContext associated with this Canvas.
For canvases, the AccessibleContext takes the form of an
AccessibleAWTCanvas.
A new AccessibleAWTCanvas instance is created if necessary.

@return an AccessibleAWTCanvas that serves as the
        AccessibleContext of this Canvas
@since 1.3
"
      end

      class 858498 "AccessibleAWTCanvas"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2892290 // <generalisation>
	  relation 2892290 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2892290 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	attribute 1340034 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -6325592262103146699L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6103810 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 858626 "CardLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>CardLayout</code> object is a layout manager for a
container. It treats each component in the container as a card.
Only one card is visible at a time, and the container acts as
a stack of cards. The first component added to a
<code>CardLayout</code> object is the visible component when the
container is first displayed.
<p>
The ordering of cards is determined by the container's own internal
ordering of its component objects. <code>CardLayout</code>
defines a set of methods that allow an application to flip
through these cards sequentially, or to show a specified card.
The {@link CardLayout#addLayoutComponent}
method can be used to associate a string identifier with a given card
for fast random access.

@author      Arthur van Hoff
@see         java.awt.Container
@since       JDK1.0
"
      classrelation 2892418 // <realization>
	relation 2892418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2892418 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 2892546 // <realization>
	relation 2892546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2892546 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1340162 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4328196481005934313L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 858754 "Card"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2892802 // <realization>
	  relation 2892802 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2892802 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 1340290 "serialVersionUID"
	  class_attribute const_attribute package explicit_type "long"
	  init_value " 6640330810709497518L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2892930 // name (<unidirectional association>)
	  relation 2892930 --->
	    a role_name "name" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2892930 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2893058 // comp (<unidirectional association>)
	  relation 2893058 --->
	    a role_name "comp" public
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2893058 // comp (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 6103938 "Card"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "cardName" type class_ref 128130 // String
	    param inout name "cardComponent" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2892674 // vector (<unidirectional association>)
	relation 2892674 --->
	  a role_name "vector" init_value " new Vector<>()" package
	    comment "
This creates a Vector to store associated
pairs of components and their names.
@see java.util.Vector

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Card> ${name}${value};
"
	    classrelation_ref 2892674 // vector (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1340418 "currentCard"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Index of Component currently displayed by CardLayout.

"
      end

      attribute 1340546 "hgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A cards horizontal Layout gap (inset). It specifies
the space between the left and right edges of a
container and the current component.
This should be a non negative Integer.
@see getHgap()
@see setHgap()

"
      end

      attribute 1340674 "vgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A cards vertical Layout gap (inset). It specifies
the space between the top and bottom edges of a
container and the current component.
This should be a non negative Integer.
@see getVgap()
@see setVgap()

"
      end

      classrelation 2893186 // serialPersistentFields (<unidirectional association>)
	relation 2893186 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"tab\", Hashtable.class),
        new ObjectStreamField(\"hgap\", Integer.TYPE),
        new ObjectStreamField(\"vgap\", Integer.TYPE),
        new ObjectStreamField(\"vector\", Vector.class),
        new ObjectStreamField(\"currentCard\", Integer.TYPE)
    }" class_relation const_relation private
	    comment "
@serialField tab         Hashtable
     deprectated, for forward compatibility only
@serialField hgap        int
@serialField vgap        int
@serialField vector      Vector
@serialField currentCard int

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2893186 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 6104066 "CardLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new card layout with gaps of size zero.
"
      end

      operation 6104194 "CardLayout"
	public explicit_return_type ""
	nparams 2
	  param in name "hgap" explicit_type "int"
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new card layout with the specified horizontal and
vertical gaps. The horizontal gaps are placed at the left and
right edges. The vertical gaps are placed at the top and bottom
edges.
@param     hgap   the horizontal gap.
@param     vgap   the vertical gap.
"
      end

      operation 6104322 "getHgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the horizontal gap between components.
@return    the horizontal gap between components.
@see       java.awt.CardLayout#setHgap(int)
@see       java.awt.CardLayout#getVgap()
@since     JDK1.1
"
      end

      operation 6104450 "setHgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "hgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal gap between components.
@param hgap the horizontal gap between components.
@see       java.awt.CardLayout#getHgap()
@see       java.awt.CardLayout#setVgap(int)
@since     JDK1.1
"
      end

      operation 6104578 "getVgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the vertical gap between components.
@return the vertical gap between components.
@see       java.awt.CardLayout#setVgap(int)
@see       java.awt.CardLayout#getHgap()
"
      end

      operation 6104706 "setVgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical gap between components.
@param     vgap the vertical gap between components.
@see       java.awt.CardLayout#getVgap()
@see       java.awt.CardLayout#setHgap(int)
@since     JDK1.1
"
      end

      operation 6104834 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this card layout's internal
table of names. The object specified by <code>constraints</code>
must be a string. The card layout stores this string as a key-value
pair that can be used for random access to a particular card.
By calling the <code>show</code> method, an application can
display the component with the specified name.
@param     comp          the component to be added.
@param     constraints   a tag that identifies a particular
                                       card in the layout.
@see       java.awt.CardLayout#show(java.awt.Container, java.lang.String)
@exception  IllegalArgumentException  if the constraint is not a string.
"
      end

      operation 6104962 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated   replaced by
     <code>addLayoutComponent(Component, Object)</code>.
"
      end

      operation 6105090 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout.
If the card was visible on top, the next card underneath it is shown.
@param   comp   the component to be removed.
@see     java.awt.Container#remove(java.awt.Component)
@see     java.awt.Container#removeAll()
"
      end

      operation 6105218 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of the container argument using
this card layout.
@param   parent the parent container in which to do the layout
@return  the preferred dimensions to lay out the subcomponents
               of the specified container
@see     java.awt.Container#getPreferredSize
@see     java.awt.CardLayout#minimumLayoutSize
"
      end

      operation 6105346 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the minimum size for the specified panel.
@param     parent the parent container in which to do the layout
@return    the minimum dimensions required to lay out the
               subcomponents of the specified container
@see       java.awt.Container#doLayout
@see       java.awt.CardLayout#preferredLayoutSize
"
      end

      operation 6105474 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum dimensions for this layout given the components
in the specified target container.
@param target the component which needs to be laid out
@see Container
@see #minimumLayoutSize
@see #preferredLayoutSize
"
      end

      operation 6105602 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 6105730 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
"
      end

      operation 6105858 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the layout, indicating that if the layout manager
has cached information it should be discarded.
"
      end

      operation 6105986 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the specified container using this card layout.
<p>
Each component in the <code>parent</code> container is reshaped
to be the size of the container, minus space for surrounding
insets, horizontal gaps, and vertical gaps.

@param     parent the parent container in which to do the layout
@see       java.awt.Container#doLayout
"
      end

      operation 6106114 "checkLayout"
	package explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make sure that the Container really has a CardLayout installed.
Otherwise havoc can ensue!
"
      end

      operation 6106242 "first"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips to the first card of the container.
@param     parent   the parent container in which to do the layout
@see       java.awt.CardLayout#last
"
      end

      operation 6106370 "next"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips to the next card of the specified container. If the
currently visible card is the last one, this method flips to the
first card in the layout.
@param     parent   the parent container in which to do the layout
@see       java.awt.CardLayout#previous
"
      end

      operation 6106498 "previous"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips to the previous card of the specified container. If the
currently visible card is the first one, this method flips to the
last card in the layout.
@param     parent   the parent container in which to do the layout
@see       java.awt.CardLayout#next
"
      end

      operation 6106626 "showDefaultComponent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6106754 "last"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips to the last card of the container.
@param     parent   the parent container in which to do the layout
@see       java.awt.CardLayout#first
"
      end

      operation 6106882 "show"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parent" type class_ref 338690 // Container
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flips to the component that was added to this layout with the
specified <code>name</code>, using <code>addLayoutComponent</code>.
If no such component exists, then nothing happens.
@param     parent   the parent container in which to do the layout
@param     name     the component name
@see       java.awt.CardLayout#addLayoutComponent(java.awt.Component, java.lang.Object)
"
      end

      operation 6107010 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the state of this card layout.
@return    a string representation of this card layout.
"
      end

      operation 6107138 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads serializable fields from stream.
"
      end

      operation 6107266 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes serializable fields to stream.
"
      end
    end

    class 858882 "Checkbox"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A check box is a graphical component that can be in either an
\"on\" (<code>true</code>) or \"off\" (<code>false</code>) state.
Clicking on a check box changes its state from
\"on\" to \"off,\" or from \"off\" to \"on.\"
<p>
The following code example creates a set of check boxes in
a grid layout:

<hr><blockquote><pre>
setLayout(new GridLayout(3, 1));
add(new Checkbox(\"one\", null, true));
add(new Checkbox(\"two\"));
add(new Checkbox(\"three\"));
</pre></blockquote><hr>
<p>
This image depicts the check boxes and grid layout
created by this code example:
<p>
<img src=\"doc-files/Checkbox-1.gif\" alt=\"The following context describes the graphic.\"
style=\"float:center; margin: 7px 10px;\">
<p>
The button labeled <code>one</code> is in the \"on\" state, and the
other two are in the \"off\" state. In this example, which uses the
<code>GridLayout</code> class, the states of the three check
boxes are set independently.
<p>
Alternatively, several check boxes can be grouped together under
the control of a single object, using the
<code>CheckboxGroup</code> class.
In a check box group, at most one button can be in the \"on\"
state at any given time. Clicking on a check box to turn it on
forces any other check box in the same group that is on
into the \"off\" state.

@author      Sami Shaio
@see         java.awt.GridLayout
@see         java.awt.CheckboxGroup
@since       JDK1.0
"
      classrelation 2893314 // <generalisation>
	relation 2893314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2893314 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2893442 // <realization>
	relation 2893442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2893442 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 2893570 // <realization>
	relation 2893570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2893570 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 147842 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2893698 // label (<unidirectional association>)
	relation 2893698 --->
	  a role_name "label" package
	    comment "
The label of the Checkbox.
This field can be null.
@serial
@see #getLabel()
@see #setLabel(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2893698 // label (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1340802 "state"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The state of the <code>Checkbox</code>.
@serial
@see #getState()
@see #setState(boolean)

"
      end

      classrelation 2893826 // group (<unidirectional association>)
	relation 2893826 --->
	  a role_name "group" package
	    comment "
The check box group.
This field can be null indicating that the checkbox
is not a group checkbox.
@serial
@see #getCheckboxGroup()
@see #setCheckboxGroup(CheckboxGroup)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2893826 // group (<unidirectional association>)
	  b parent class_ref 859010 // CheckboxGroup
      end

      classrelation 2893954 // itemListener (<unidirectional association>)
	relation 2893954 --->
	  a role_name "itemListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2893954 // itemListener (<unidirectional association>)
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 2894082 // base (<unidirectional association>)
	relation 2894082 --->
	  a role_name "base" init_value " \"checkbox\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2894082 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1340930 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1341058 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7270714317450821763L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6107394 "setStateInternal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper function for setState and CheckboxGroup.setSelectedCheckbox
Should remain package-private.
"
      end

      operation 6107522 "Checkbox"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with an empty string for its label.
The state of this check box is set to \"off,\" and it is not
part of any check box group.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6107650 "Checkbox"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with the specified label.  The state
of this check box is set to \"off,\" and it is not part of
any check box group.

@param     label   a string label for this check box,
                       or <code>null</code> for no label.
@exception HeadlessException if
     <code>GraphicsEnvironment.isHeadless</code>
     returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6107778 "Checkbox"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with the specified label
and sets the specified state.
This check box is not part of any check box group.

@param     label   a string label for this check box,
                       or <code>null</code> for no label
@param     state    the initial state of this check box
@exception HeadlessException if
    <code>GraphicsEnvironment.isHeadless</code>
    returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6107906 "Checkbox"
	public explicit_return_type ""
	nparams 3
	  param inout name "label" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	  param inout name "group" type class_ref 859010 // CheckboxGroup
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Checkbox with the specified label, set to the
specified state, and in the specified check box group.

@param     label   a string label for this check box,
                       or <code>null</code> for no label.
@param     state   the initial state of this check box.
@param     group   a check box group for this check box,
                          or <code>null</code> for no group.
@exception HeadlessException if
    <code>GraphicsEnvironment.isHeadless</code>
    returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since     JDK1.1
"
      end

      operation 6108034 "Checkbox"
	public explicit_return_type ""
	nparams 3
	  param inout name "label" type class_ref 128130 // String
	  param inout name "group" type class_ref 859010 // CheckboxGroup
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a check box with the specified label, in the specified
check box group, and set to the specified state.

@param     label   a string label for this check box,
                       or <code>null</code> for no label.
@param     group   a check box group for this check box,
                          or <code>null</code> for no group.
@param     state   the initial state of this check box.
@exception HeadlessException if
   <code>GraphicsEnvironment.isHeadless</code>
   returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since     JDK1.1
"
      end

      operation 6108162 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this component.  Called by
<code>getName</code> when the name is <code>null</code>.

@return a name for this component
"
      end

      operation 6108290 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer of the Checkbox. The peer allows you to change the
look of the Checkbox without changing its functionality.

@see     java.awt.Toolkit#createCheckbox(java.awt.Checkbox)
@see     java.awt.Component#getToolkit()
"
      end

      operation 6108418 "getLabel"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label of this check box.

@return   the label of this check box, or <code>null</code>
                 if this check box has no label.
@see      #setLabel(String)
"
      end

      operation 6108546 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this check box's label to be the string argument.

@param    label   a string to set as the new label, or
                       <code>null</code> for no label.
@see      #getLabel
"
      end

      operation 6108674 "getState"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this check box is in the \"on\" or \"off\" state.
The boolean value <code>true</code> indicates the \"on\" state,
and <code>false</code> indicates the \"off\" state.

@return    the state of this check box, as a boolean value
@see       #setState
"
      end

      operation 6108802 "setState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the state of this check box to the specified state.
The boolean value <code>true</code> indicates the \"on\" state,
and <code>false</code> indicates the \"off\" state.

<p>Note that this method should be primarily used to
initialize the state of the checkbox.  Programmatically
setting the state of the checkbox will <i>not</i> trigger
an <code>ItemEvent</code>.  The only way to trigger an
<code>ItemEvent</code> is by user interaction.

@param     state   the boolean state of the check box
@see       #getState
"
      end

      operation 6108930 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array (length 1) containing the checkbox
label or null if the checkbox is not selected.
@see ItemSelectable
"
      end

      operation 6109058 "getCheckboxGroup"
	public return_type class_ref 859010 // CheckboxGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines this check box's group.
@return     this check box's group, or <code>null</code>
              if the check box is not part of a check box group.
@see        #setCheckboxGroup(CheckboxGroup)
"
      end

      operation 6109186 "setCheckboxGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 859010 // CheckboxGroup
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this check box's group to the specified check box group.
If this check box is already in a different check box group,
it is first taken out of that group.
<p>
If the state of this check box is <code>true</code> and the new
group already has a check box selected, this check box's state
is changed to <code>false</code>.  If the state of this check
box is <code>true</code> and the new group has no check box
selected, this check box becomes the selected checkbox for
the new group and its state is <code>true</code>.

@param     g   the new check box group, or <code>null</code>
               to remove this check box from any check box group
@see       #getCheckboxGroup
"
      end

      operation 6109314 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item listener to receive item events from
this check box.  Item events are sent to listeners in response
to user input, but not in response to calls to setState().
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l    the item listener
@see           #removeItemListener
@see           #getItemListeners
@see           #setState
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6109442 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified item listener so that the item listener
no longer receives item events from this check box.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l    the item listener
@see           #addItemListener
@see           #getItemListeners
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6109570 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the item listeners
registered on this checkbox.

@return all of this checkbox's <code>ItemListener</code>s
        or an empty array if no item
        listeners are currently registered

@see           #addItemListener
@see           #removeItemListener
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since 1.4
"
      end

      operation 6109698 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Checkbox</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Checkbox</code> <code>c</code>
for its item listeners with the following code:

<pre>ItemListener[] ils = (ItemListener[])(c.getListeners(ItemListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this checkbox,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getItemListeners
@since 1.3
"
      end

      operation 6109826 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6109954 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this check box.
If the event is an instance of <code>ItemEvent</code>,
this method invokes the <code>processItemEvent</code> method.
Otherwise, it calls its superclass's <code>processEvent</code> method.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param         e the event
@see           java.awt.event.ItemEvent
@see           #processItemEvent
@since         JDK1.1
"
      end

      operation 6110082 "processItemEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes item events occurring on this check box by
dispatching them to any registered
<code>ItemListener</code> objects.
<p>
This method is not called unless item events are
enabled for this component. Item events are enabled
when one of the following occurs:
<ul>
<li>An <code>ItemListener</code> object is registered
via <code>addItemListener</code>.
<li>Item events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the item event
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@see         #addItemListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6110210 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Checkbox</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return    the parameter string of this check box
"
      end

      attribute 1341186 "checkboxSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


Serialized data version
@serial

"
      end

      operation 6110338 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ItemListeners</code>
as optional data.  The non-serializable
<code>ItemListeners</code> are detected and
no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of 0
  or more pairs; the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code> indicates
  the type of object and is one of the following:
  <code>itemListenerK</code> indicating an
    <code>ItemListener</code> object

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#itemListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6110466 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it
isn't <code>null</code> adds a listener to receive
item events fired by the <code>Checkbox</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@serial
@see #removeItemListener(ItemListener)
@see #addItemListener(ItemListener)
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6110594 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method ids
"
      end

      operation 6110722 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this Checkbox.
For checkboxes, the AccessibleContext takes the form of an
AccessibleAWTCheckbox.
A new AccessibleAWTCheckbox is created if necessary.

@return an AccessibleAWTCheckbox that serves as the
        AccessibleContext of this Checkbox
@since 1.3
"
      end

      class 859138 "AccessibleAWTCheckbox"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2894210 // <generalisation>
	  relation 2894210 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2894210 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2894338 // <realization>
	  relation 2894338 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2894338 // <realization>
	    b parent class_ref 389506 // ItemListener
	end

	classrelation 2894466 // <realization>
	  relation 2894466 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2894466 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 2894594 // <realization>
	  relation 2894594 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2894594 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	attribute 1341314 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7881579233144754107L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6110850 "AccessibleAWTCheckbox"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6110978 "itemStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 390658 // ItemEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Fire accessible property change events when the state of the
toggle button changes.
"
	end

	operation 6111106 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 6111234 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 6111362 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.
If there is more than one, the first one is the \"default\"
action.

@return the number of Actions in this object
"
	end

	operation 6111490 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 6111618 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the the action was performed; else false.
"
	end

	operation 6111746 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of this object as a Number.  If the value has not been
set, the return value will be null.

@return value of the object
@see #setCurrentAccessibleValue
"
	end

	operation 6111874 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set; else False
@see #getCurrentAccessibleValue
"
	end

	operation 6112002 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return Minimum value of the object; null if this object does not
have a minimum value
@see #getMaximumAccessibleValue
"
	end

	operation 6112130 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return Maximum value of the object; null if this object does not
have a maximum value
@see #getMinimumAccessibleValue
"
	end

	operation 6112258 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of
the object
@see AccessibleRole
"
	end

	operation 6112386 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end
      end
    end

    class 859010 "CheckboxGroup"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>CheckboxGroup</code> class is used to group together
a set of <code>Checkbox</code> buttons.
<p>
Exactly one check box button in a <code>CheckboxGroup</code> can
be in the \"on\" state at any given time. Pushing any
button sets its state to \"on\" and forces any other button that
is in the \"on\" state into the \"off\" state.
<p>
The following code example produces a new check box group,
with three check boxes:

<hr><blockquote><pre>
setLayout(new GridLayout(3, 1));
CheckboxGroup cbg = new CheckboxGroup();
add(new Checkbox(\"one\", cbg, true));
add(new Checkbox(\"two\", cbg, false));
add(new Checkbox(\"three\", cbg, false));
</pre></blockquote><hr>
<p>
This image depicts the check box group created by this example:
<p>
<img src=\"doc-files/CheckboxGroup-1.gif\"
alt=\"Shows three checkboxes, arranged vertically, labeled one, two, and three. Checkbox one is in the on state.\"
style=\"float:center; margin: 7px 10px;\">
<p>
@author      Sami Shaio
@see         java.awt.Checkbox
@since       JDK1.0
"
      classrelation 2894722 // <realization>
	relation 2894722 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2894722 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2894850 // selectedCheckbox (<unidirectional association>)
	relation 2894850 --->
	  a role_name "selectedCheckbox" init_value " null" package
	    comment "
The current choice.
@serial
@see #getCurrent()
@see #setCurrent(Checkbox)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2894850 // selectedCheckbox (<unidirectional association>)
	  b parent class_ref 858882 // Checkbox
      end

      attribute 1341442 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3729780091441768983L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6112514 "CheckboxGroup"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of <code>CheckboxGroup</code>.
"
      end

      operation 6112642 "getSelectedCheckbox"
	public return_type class_ref 858882 // Checkbox
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current choice from this check box group.
The current choice is the check box in this
group that is currently in the \"on\" state,
or <code>null</code> if all check boxes in the
group are off.
@return   the check box that is currently in the
                \"on\" state, or <code>null</code>.
@see      java.awt.Checkbox
@see      java.awt.CheckboxGroup#setSelectedCheckbox
@since    JDK1.1
"
      end

      operation 6112770 "getCurrent"
	public return_type class_ref 858882 // Checkbox
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getSelectedCheckbox()</code>.
"
      end

      operation 6112898 "setSelectedCheckbox"
	public explicit_return_type "void"
	nparams 1
	  param inout name "box" type class_ref 858882 // Checkbox
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the currently selected check box in this group
to be the specified check box.
This method sets the state of that check box to \"on\" and
sets all other check boxes in the group to be off.
<p>
If the check box argument is <tt>null</tt>, all check boxes
in this check box group are deselected. If the check box argument
belongs to a different check box group, this method does
nothing.
@param     box   the <code>Checkbox</code> to set as the
                     current selection.
@see      java.awt.Checkbox
@see      java.awt.CheckboxGroup#getSelectedCheckbox
@since    JDK1.1
"
      end

      operation 6113026 "setCurrent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "box" type class_ref 858882 // Checkbox
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setSelectedCheckbox(Checkbox)</code>.
"
      end

      operation 6113154 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this check box group,
including the value of its current selection.
@return    a string representation of this check box group.
"
      end
    end

    class 859266 "CheckboxMenuItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a check box that can be included in a menu.
Selecting the check box in the menu changes its state from
\"on\" to \"off\" or from \"off\" to \"on.\"
<p>
The following picture depicts a menu which contains an instance
of <code>CheckBoxMenuItem</code>:
<p>
<img src=\"doc-files/MenuBar-1.gif\"
alt=\"Menu labeled Examples, containing items Basic, Simple, Check, and More Examples. The Check item is a CheckBoxMenuItem instance, in the off state.\"
style=\"float:center; margin: 7px 10px;\">
<p>
The item labeled <code>Check</code> shows a check box menu item
in its \"off\" state.
<p>
When a check box menu item is selected, AWT sends an item event to
the item. Since the event is an instance of <code>ItemEvent</code>,
the <code>processEvent</code> method examines the event and passes
it along to <code>processItemEvent</code>. The latter method redirects
the event to any <code>ItemListener</code> objects that have
registered an interest in item events generated by this menu item.

@author      Sami Shaio
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@since       JDK1.0
"
      classrelation 2897922 // <generalisation>
	relation 2897922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2897922 // <generalisation>
	  b parent class_ref 859394 // MenuItem
      end

      classrelation 2898050 // <realization>
	relation 2898050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2898050 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 2898178 // <realization>
	relation 2898178 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2898178 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 148354 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setCheckboxMenuItemAccessor(
            new AWTAccessor.CheckboxMenuItemAccessor() {
                public boolean getState(CheckboxMenuItem cmi) {
                    return cmi.state;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1342978 "state"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The state of a checkbox menu item
@serial
@see #getState()
@see #setState(boolean)

"
      end

      classrelation 2898306 // itemListener (<unidirectional association>)
	relation 2898306 --->
	  a role_name "itemListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2898306 // itemListener (<unidirectional association>)
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 2898434 // base (<unidirectional association>)
	relation 2898434 --->
	  a role_name "base" init_value " \"chkmenuitem\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2898434 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1343106 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1343234 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6190621106981774043L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6128642 "CheckboxMenuItem"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a check box menu item with an empty label.
The item's state is initially set to \"off.\"
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
@since   JDK1.1
"
      end

      operation 6128770 "CheckboxMenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a check box menu item with the specified label.
The item's state is initially set to \"off.\"

@param     label   a string label for the check box menu item,
               or <code>null</code> for an unlabeled menu item.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6128898 "CheckboxMenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a check box menu item with the specified label and state.
@param      label   a string label for the check box menu item,
                    or <code>null</code> for an unlabeled menu item.
@param      state   the initial state of the menu item, where
                    <code>true</code> indicates \"on\" and
                    <code>false</code> indicates \"off.\"
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see java.awt.GraphicsEnvironment#isHeadless
@since      JDK1.1
"
      end

      operation 6129026 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this MenuComponent.  Called by getName() when
the name is null.
"
      end

      operation 6129154 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer of the checkbox item.  This peer allows us to
change the look of the checkbox item without changing its
functionality.
Most applications do not call this method directly.
@see     java.awt.Toolkit#createCheckboxMenuItem(java.awt.CheckboxMenuItem)
@see     java.awt.Component#getToolkit()
"
      end

      operation 6129282 "getState"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the state of this check box menu item
is \"on\" or \"off.\"

@return      the state of this check box menu item, where
                    <code>true</code> indicates \"on\" and
                    <code>false</code> indicates \"off\"
@see        #setState
"
      end

      operation 6129410 "setState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this check box menu item to the specified state.
The boolean value <code>true</code> indicates \"on\" while
<code>false</code> indicates \"off.\"

<p>Note that this method should be primarily used to
initialize the state of the check box menu item.
Programmatically setting the state of the check box
menu item will <i>not</i> trigger
an <code>ItemEvent</code>.  The only way to trigger an
<code>ItemEvent</code> is by user interaction.

@param      b   <code>true</code> if the check box
            menu item is on, otherwise <code>false</code>
@see        #getState
"
      end

      operation 6129538 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the an array (length 1) containing the checkbox menu item
label or null if the checkbox is not selected.
@see ItemSelectable
"
      end

      operation 6129666 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item listener to receive item events from
this check box menu item.  Item events are sent in response to user
actions, but not in response to calls to setState().
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l the item listener
@see           #removeItemListener
@see           #getItemListeners
@see           #setState
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6129794 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified item listener so that it no longer receives
item events from this check box menu item.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l the item listener
@see           #addItemListener
@see           #getItemListeners
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6129922 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the item listeners
registered on this checkbox menuitem.

@return all of this checkbox menuitem's <code>ItemListener</code>s
        or an empty array if no item
        listeners are currently registered

@see           #addItemListener
@see           #removeItemListener
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since 1.4
"
      end

      operation 6130050 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>CheckboxMenuItem</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>CheckboxMenuItem</code> <code>c</code>
for its item listeners with the following code:

<pre>ItemListener[] ils = (ItemListener[])(c.getListeners(ItemListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this checkbox menuitem,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getItemListeners
@since 1.3
"
      end

      operation 6130178 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6130306 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this check box menu item.
If the event is an instance of <code>ItemEvent</code>,
this method invokes the <code>processItemEvent</code> method.
If the event is not an item event,
it invokes <code>processEvent</code> on the superclass.
<p>
Check box menu items currently support only item events.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param        e the event
@see          java.awt.event.ItemEvent
@see          #processItemEvent
@since        JDK1.1
"
      end

      operation 6130434 "processItemEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes item events occurring on this check box menu item by
dispatching them to any registered <code>ItemListener</code> objects.
<p>
This method is not called unless item events are
enabled for this menu item. Item events are enabled
when one of the following occurs:
<ul>
<li>An <code>ItemListener</code> object is registered
via <code>addItemListener</code>.
<li>Item events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the item event
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@see         #addItemListener
@see         java.awt.MenuItem#enableEvents
@since       JDK1.1
"
      end

      operation 6130562 "doMenuEvent"
	package explicit_return_type "void"
	nparams 2
	  param in name "when" explicit_type "long"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Post an ItemEvent and toggle state.
"
      end

      operation 6130690 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this
<code>CheckBoxMenuItem</code>. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return     the parameter string of this check box menu item
"
      end

      attribute 1343362 "checkboxMenuItemSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


Serial Data Version
@serial

"
      end

      operation 6130818 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ItemListeners</code>
as optional data.  The non-serializable
<code>ItemListeners</code> are detected and
no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of
 0 or more pairs; the pair consists of a <code>String</code>
 and an <code>Object</code>; the <code>String</code> indicates
 the type of object and is one of the following:
 <code>itemListenerK</code> indicating an
   <code>ItemListener</code> object

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#itemListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6130946 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it
isn't <code>null</code> adds a listener to receive
item events fired by the <code>Checkbox</code> menu item.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@serial
@see removeActionListener()
@see addActionListener()
@see #writeObject
"
      end

      operation 6131074 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6131202 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this CheckboxMenuItem.
For checkbox menu items, the AccessibleContext takes the
form of an AccessibleAWTCheckboxMenuItem.
A new AccessibleAWTCheckboxMenuItem is created if necessary.

@return an AccessibleAWTCheckboxMenuItem that serves as the
        AccessibleContext of this CheckboxMenuItem
@since 1.3
"
      end

      class 860034 "AccessibleAWTCheckboxMenuItem"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2898562 // <generalisation>
	  relation 2898562 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2898562 // <generalisation>
	    b parent class_ref 859906 // AccessibleAWTMenuItem
	end

	classrelation 2898690 // <realization>
	  relation 2898690 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2898690 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 2898818 // <realization>
	  relation 2898818 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2898818 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	attribute 1343490 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -1122642964303476L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6131330 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 6131458 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 6131586 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.
If there is more than one, the first one is the \"default\"
action.

@return the number of Actions in this object
"
	end

	operation 6131714 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 6131842 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the action was performed; otherwise false.
"
	end

	operation 6131970 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of this object as a Number.  If the value has not been
set, the return value will be null.

@return value of the object
@see #setCurrentAccessibleValue
"
	end

	operation 6132098 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return true if the value was set; otherwise false
@see #getCurrentAccessibleValue
"
	end

	operation 6132226 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return Minimum value of the object; null if this object does not
have a minimum value
@see #getMaximumAccessibleValue
"
	end

	operation 6132354 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return Maximum value of the object; null if this object does not
have a maximum value
@see #getMinimumAccessibleValue
"
	end

	operation 6132482 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 859394 "MenuItem"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "All items in a menu must belong to the class
<code>MenuItem</code>, or one of its subclasses.
<p>
The default <code>MenuItem</code> object embodies
a simple labeled menu item.
<p>
This picture of a menu bar shows five menu items:
<IMG SRC=\"doc-files/MenuBar-1.gif\" alt=\"The following text describes this graphic.\"
style=\"float:center; margin: 7px 10px;\">
<br style=\"clear:left;\">
The first two items are simple menu items, labeled
<code>\"Basic\"</code> and <code>\"Simple\"</code>.
Following these two items is a separator, which is itself
a menu item, created with the label <code>\"-\"</code>.
Next is an instance of <code>CheckboxMenuItem</code>
labeled <code>\"Check\"</code>. The final menu item is a
submenu labeled <code>\"More&nbsp;Examples\"</code>,
and this submenu is an instance of <code>Menu</code>.
<p>
When a menu item is selected, AWT sends an action event to
the menu item. Since the event is an
instance of <code>ActionEvent</code>, the <code>processEvent</code>
method examines the event and passes it along to
<code>processActionEvent</code>. The latter method redirects the
event to any <code>ActionListener</code> objects that have
registered an interest in action events generated by this
menu item.
<P>
Note that the subclass <code>Menu</code> overrides this behavior and
does not send any event to the frame until one of its subitems is
selected.

@author Sami Shaio
"
      classrelation 2896642 // <generalisation>
	relation 2896642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2896642 // <generalisation>
	  b parent class_ref 340482 // MenuComponent
      end

      classrelation 2896770 // <realization>
	relation 2896770 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2896770 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 148226 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setMenuItemAccessor(
            new AWTAccessor.MenuItemAccessor() {
                public boolean isEnabled(MenuItem item) {
                    return item.enabled;
                }

                public String getLabel(MenuItem item) {
                    return item.label;
                }

                public MenuShortcut getShortcut(MenuItem item) {
                    return item.shortcut;
                }

                public String getActionCommandImpl(MenuItem item) {
                    return item.getActionCommandImpl();
                }

                public boolean isItemEnabled(MenuItem item) {
                    return item.isItemEnabled();
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1342210 "enabled"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value to indicate whether a menu item is enabled
or not.  If it is enabled, <code>enabled</code> will
be set to true.  Else <code>enabled</code> will
be set to false.

@serial
@see #isEnabled()
@see #setEnabled(boolean)

"
      end

      classrelation 2896898 // label (<unidirectional association>)
	relation 2896898 --->
	  a role_name "label" package
	    comment "
<code>label</code> is the label of a menu item.
It can be any string.

@serial
@see #getLabel()
@see #setLabel(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2896898 // label (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2897026 // actionCommand (<unidirectional association>)
	relation 2897026 --->
	  a role_name "actionCommand" package
	    comment "
This field indicates the command tha has been issued
by a  particular menu item.
By default the <code>actionCommand</code>
is the label of the menu item, unless it has been
set using setActionCommand.

@serial
@see #setActionCommand(String)
@see #getActionCommand()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2897026 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1342338 "eventMask"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The eventMask is ONLY set by subclasses via enableEvents.
The mask should NOT be set when listeners are registered
so that we can distinguish the difference between when
listeners request events and subclasses request them.

@serial

"
      end

      classrelation 2897154 // actionListener (<unidirectional association>)
	relation 2897154 --->
	  a role_name "actionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2897154 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2897282 // shortcut (<unidirectional association>)
	relation 2897282 --->
	  a role_name "shortcut" init_value " null" private
	    comment "
A sequence of key stokes that ia associated with
a menu item.
Note :in 1.1.2 you must use setActionCommand()
on a menu item in order for its shortcut to
work.

@serial
@see #getShortcut()
@see #setShortcut(MenuShortcut)
@see #deleteShortcut()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2897282 // shortcut (<unidirectional association>)
	  b parent class_ref 859778 // MenuShortcut
      end

      classrelation 2897410 // base (<unidirectional association>)
	relation 2897410 --->
	  a role_name "base" init_value " \"menuitem\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2897410 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1342466 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1342594 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -21757335363267194L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6122498 "MenuItem"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MenuItem with an empty label and no keyboard
shortcut.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since    JDK1.1
"
      end

      operation 6122626 "MenuItem"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MenuItem with the specified label
and no keyboard shortcut. Note that use of \"-\" in
a label is reserved to indicate a separator between
menu items. By default, all menu items except for
separators are enabled.
@param       label the label for this menu item.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since       JDK1.0
"
      end

      operation 6122754 "MenuItem"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" type class_ref 128130 // String
	  param inout name "s" type class_ref 859778 // MenuShortcut
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a menu item with an associated keyboard shortcut.
Note that use of \"-\" in a label is reserved to indicate
a separator between menu items. By default, all menu
items except for separators are enabled.
@param       label the label for this menu item.
@param       s the instance of <code>MenuShortcut</code>
                      associated with this menu item.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since       JDK1.1
"
      end

      operation 6122882 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this MenuComponent.  Called by getName() when
the name is null.
"
      end

      operation 6123010 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the menu item's peer.  The peer allows us to modify the
appearance of the menu item without changing its functionality.
"
      end

      operation 6123138 "getLabel"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label for this menu item.
@return  the label of this menu item, or <code>null</code>
if this menu item has no label.
@see     java.awt.MenuItem#setLabel
@since   JDK1.0
"
      end

      operation 6123266 "setLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the label for this menu item to the specified label.
@param     label   the new label, or <code>null</code> for no label.
@see       java.awt.MenuItem#getLabel
@since     JDK1.0
"
      end

      operation 6123394 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this menu item is enabled.
@see        java.awt.MenuItem#setEnabled
@since      JDK1.0
"
      end

      operation 6123522 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not this menu item can be chosen.
@param      b  if <code>true</code>, enables this menu item;
                      if <code>false</code>, disables it.
@see        java.awt.MenuItem#isEnabled
@since      JDK1.1
"
      end

      operation 6123650 "enable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 6123778 "enable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 6123906 "disable"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEnabled(boolean)</code>.
"
      end

      operation 6124034 "getShortcut"
	public return_type class_ref 859778 // MenuShortcut
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>MenuShortcut</code> object associated with this
menu item,
@return      the menu shortcut associated with this menu item,
                  or <code>null</code> if none has been specified.
@see         java.awt.MenuItem#setShortcut
@since       JDK1.1
"
      end

      operation 6124162 "setShortcut"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the <code>MenuShortcut</code> object associated with this
menu item. If a menu shortcut is already associated with
this menu item, it is replaced.
@param       s  the menu shortcut to associate
                          with this menu item.
@see         java.awt.MenuItem#getShortcut
@since       JDK1.1
"
      end

      operation 6124290 "deleteShortcut"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete any <code>MenuShortcut</code> object associated
with this menu item.
@since      JDK1.1
"
      end

      operation 6124418 "deleteShortcut"
	package explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete a matching MenuShortcut associated with this MenuItem.
Used when iterating Menus.
"
      end

      operation 6124546 "doMenuEvent"
	package explicit_return_type "void"
	nparams 2
	  param in name "when" explicit_type "long"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The main goal of this method is to post an appropriate event
to the event queue when menu shortcut is pressed. However,
in subclasses this method may do more than just posting
an event.
"
      end

      operation 6124674 "isItemEnabled"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the item and all its ancestors are
enabled, false otherwise
"
      end

      operation 6124802 "handleShortcut"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Post an ActionEvent to the target (on
keydown) and the item is enabled.
Returns true if there is an associated shortcut.
"
      end

      operation 6124930 "getShortcutMenuItem"
	package return_type class_ref 859394 // MenuItem
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6125058 "enableEvents"
	protected explicit_return_type "void"
	nparams 1
	  param in name "eventsToEnable" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables event delivery to this menu item for events
to be defined by the specified event mask parameter
<p>
Since event types are automatically enabled when a listener for
that type is added to the menu item, this method only needs
to be invoked by subclasses of <code>MenuItem</code> which desire to
have the specified event types delivered to <code>processEvent</code>
regardless of whether a listener is registered.

@param       eventsToEnable the event mask defining the event types
@see         java.awt.MenuItem#processEvent
@see         java.awt.MenuItem#disableEvents
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6125186 "disableEvents"
	protected explicit_return_type "void"
	nparams 1
	  param in name "eventsToDisable" explicit_type "long"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables event delivery to this menu item for events
defined by the specified event mask parameter.

@param       eventsToDisable the event mask defining the event types
@see         java.awt.MenuItem#processEvent
@see         java.awt.MenuItem#enableEvents
@see         java.awt.Component#disableEvents
@since       JDK1.1
"
      end

      operation 6125314 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the command name of the action event that is fired
by this menu item.
<p>
By default, the action command is set to the label of
the menu item.
@param       command   the action command to be set
                               for this menu item.
@see         java.awt.MenuItem#getActionCommand
@since       JDK1.1
"
      end

      operation 6125442 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the command name of the action event that is fired
by this menu item.
@see         java.awt.MenuItem#setActionCommand
@since       JDK1.1
"
      end

      operation 6125570 "getActionCommandImpl"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is final so it can be called on the Toolkit thread."
      end

      operation 6125698 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive action events
from this menu item.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param      l the action listener.
@see        #removeActionListener
@see        #getActionListeners
@see        java.awt.event.ActionEvent
@see        java.awt.event.ActionListener
@since      JDK1.1
"
      end

      operation 6125826 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener so it no longer receives
action events from this menu item.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param      l the action listener.
@see        #addActionListener
@see        #getActionListeners
@see        java.awt.event.ActionEvent
@see        java.awt.event.ActionListener
@since      JDK1.1
"
      end

      operation 6125954 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this menu item.

@return all of this menu item's <code>ActionListener</code>s
        or an empty array if no action
        listeners are currently registered

@see        #addActionListener
@see        #removeActionListener
@see        java.awt.event.ActionEvent
@see        java.awt.event.ActionListener
@since 1.4
"
      end

      operation 6126082 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>MenuItem</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>MenuItem</code> <code>m</code>
for its action listeners with the following code:

<pre>ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this menu item,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getActionListeners
@since 1.3
"
      end

      operation 6126210 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this menu item. If the event is an
instance of <code>ActionEvent</code>, it invokes
<code>processActionEvent</code>, another method
defined by <code>MenuItem</code>.
<p>
Currently, menu items only support action events.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the event
@see         java.awt.MenuItem#processActionEvent
@since       JDK1.1
"
      end

      operation 6126338 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6126466 "processActionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes action events occurring on this menu item,
by dispatching them to any registered
<code>ActionListener</code> objects.
This method is not called unless action events are
enabled for this component. Action events are enabled
when one of the following occurs:
<ul>
<li>An <code>ActionListener</code> object is registered
via <code>addActionListener</code>.
<li>Action events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the action event
@see         java.awt.event.ActionEvent
@see         java.awt.event.ActionListener
@see         java.awt.MenuItem#enableEvents
@since       JDK1.1
"
      end

      operation 6126594 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>MenuItem</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return the parameter string of this menu item
"
      end

      attribute 1342722 "menuItemSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


Menu item serialized data version.

@serial

"
      end

      operation 6126722 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ActionListeners</code>
as optional data. The non-serializable listeners are
detected and no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of 0
  or more pairs; the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code>
  indicates the type of object and is one of the following:
  <code>actionListenerK</code> indicating an
    <code>ActionListener</code> object

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see #readObject(ObjectInputStream)
"
      end

      operation 6126850 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it
isn't <code>null</code> adds a listener to receive
action events fired by the <code>Menu</code> Item.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see #removeActionListener(ActionListener)
@see #addActionListener(ActionListener)
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6126978 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6127106 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this MenuItem.
For menu items, the AccessibleContext takes the form of an
AccessibleAWTMenuItem.
A new AccessibleAWTMenuItem instance is created if necessary.

@return an AccessibleAWTMenuItem that serves as the
        AccessibleContext of this MenuItem
@since 1.3
"
      end

      class 859906 "AccessibleAWTMenuItem"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2897538 // <generalisation>
	  relation 2897538 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2897538 // <generalisation>
	    b parent class_ref 859650 // AccessibleAWTMenuComponent
	end

	classrelation 2897666 // <realization>
	  relation 2897666 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2897666 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	classrelation 2897794 // <realization>
	  relation 2897794 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2897794 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	attribute 1342850 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -217847831945965825L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6127234 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
"
	end

	operation 6127362 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 6127490 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
"
	end

	operation 6127618 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleValue associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleValue interface on behalf of itself.

@return this object
"
	end

	operation 6127746 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of Actions available in this object.  The
default behavior of a menu item is to have one action.

@return 1, the number of Actions in this object
"
	end

	operation 6127874 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return a description of the specified action of the object.

@param i zero-based index of the actions
"
	end

	operation 6128002 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the action was performed; otherwise false.
"
	end

	operation 6128130 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of this object as a Number.

@return An Integer of 0 if this isn't selected or an Integer of 1 if
this is selected.
@see javax.swing.AbstractButton#isSelected()
"
	end

	operation 6128258 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 6128386 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum value of this object as a Number.

@return An Integer of 0.
"
	end

	operation 6128514 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum value of this object as a Number.

@return An Integer of 0.
"
	end
      end
    end

    class 859778 "MenuShortcut"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>MenuShortcut</code>class represents a keyboard accelerator
for a MenuItem.
<p>
Menu shortcuts are created using virtual keycodes, not characters.
For example, a menu shortcut for Ctrl-a (assuming that Control is
the accelerator key) would be created with code like the following:
<p>
<code>MenuShortcut ms = new MenuShortcut(KeyEvent.VK_A, false);</code>
<p> or alternatively
<p>
<code>MenuShortcut ms = new MenuShortcut(KeyEvent.getExtendedKeyCodeForChar('A'), false);</code>
<p>
Menu shortcuts may also be constructed for a wider set of keycodes
using the <code>java.awt.event.KeyEvent.getExtendedKeyCodeForChar</code> call.
For example, a menu shortcut for \"Ctrl+cyrillic ef\" is created by
<p>
<code>MenuShortcut ms = new MenuShortcut(KeyEvent.getExtendedKeyCodeForChar('\\u0444'), false);</code>
<p>
Note that shortcuts created with a keycode or an extended keycode defined as a constant in <code>KeyEvent</code>
work regardless of the current keyboard layout. However, a shortcut made of
an extended keycode not listed in <code>KeyEvent</code>
only work if the current keyboard layout produces a corresponding letter.
<p>
The accelerator key is platform-dependent and may be obtained
via {@link Toolkit#getMenuShortcutKeyMask}.

@author Thomas Ball
@since JDK1.1
"
      classrelation 2938626 // <realization>
	relation 2938626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2938626 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1404674 "key"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The virtual keycode for the menu shortcut.
This is the keycode with which the menu shortcut will be created.
Note that it is a virtual keycode, not a character,
e.g. KeyEvent.VK_A, not 'a'.
Note: in 1.1.x you must use setActionCommand() on a menu item
in order for its shortcut to work, otherwise it will fire a null
action command.

@serial
@see #getKey()
@see #usesShiftModifier()
@see java.awt.event.KeyEvent
@since JDK1.1

"
      end

      attribute 1404802 "usesShift"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether the shft key was pressed.
If true, the shift key was pressed.
If false, the shift key was not pressed

@serial
@see #usesShiftModifier()
@since JDK1.1

"
      end

      attribute 1404930 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 143448358473180225L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6288514 "MenuShortcut"
	public explicit_return_type ""
	nparams 1
	  param in name "key" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MenuShortcut for the specified virtual keycode.
@param key the raw keycode for this MenuShortcut, as would be returned
in the keyCode field of a {@link java.awt.event.KeyEvent KeyEvent} if
this key were pressed.
@see java.awt.event.KeyEvent
"
      end

      operation 6288642 "MenuShortcut"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "int"
	  param inout name "useShiftModifier" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new MenuShortcut for the specified virtual keycode.
@param key the raw keycode for this MenuShortcut, as would be returned
in the keyCode field of a {@link java.awt.event.KeyEvent KeyEvent} if
this key were pressed.
@param useShiftModifier indicates whether this MenuShortcut is invoked
with the SHIFT key down.
@see java.awt.event.KeyEvent
"
      end

      operation 6288770 "getKey"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw keycode of this MenuShortcut.
@return the raw keycode of this MenuShortcut.
@see java.awt.event.KeyEvent
@since JDK1.1
"
      end

      operation 6288898 "usesShiftModifier"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this MenuShortcut must be invoked using the SHIFT key.
@return <code>true</code> if this MenuShortcut must be invoked using the
SHIFT key, <code>false</code> otherwise.
@since JDK1.1
"
      end

      operation 6289026 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this MenuShortcut is the same as another:
equality is defined to mean that both MenuShortcuts use the same key
and both either use or don't use the SHIFT key.
@param s the MenuShortcut to compare with this.
@return <code>true</code> if this MenuShortcut is the same as another,
<code>false</code> otherwise.
@since JDK1.1
"
      end

      operation 6289154 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this MenuShortcut is the same as another:
equality is defined to mean that both MenuShortcuts use the same key
and both either use or don't use the SHIFT key.
@param obj the Object to compare with this.
@return <code>true</code> if this MenuShortcut is the same as another,
<code>false</code> otherwise.
@since 1.2
"
      end

      operation 6289282 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode for this MenuShortcut.
@return the hashcode for this MenuShortcut.
@since 1.2
"
      end

      operation 6289410 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an internationalized description of the MenuShortcut.
@return a string representation of this MenuShortcut.
@since JDK1.1
"
      end

      operation 6289538 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameter string representing the state of this
MenuShortcut. This string is useful for debugging.
@return    the parameter string of this MenuShortcut.
@since JDK1.1
"
      end
    end

    class 860162 "Choice"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Choice</code> class presents a pop-up menu of choices.
The current choice is displayed as the title of the menu.
<p>
The following code example produces a pop-up menu:

<hr><blockquote><pre>
Choice ColorChooser = new Choice();
ColorChooser.add(\"Green\");
ColorChooser.add(\"Red\");
ColorChooser.add(\"Blue\");
</pre></blockquote><hr>
<p>
After this choice menu has been added to a panel,
it appears as follows in its normal state:
<p>
<img src=\"doc-files/Choice-1.gif\" alt=\"The following text describes the graphic\"
style=\"float:center; margin: 7px 10px;\">
<p>
In the picture, <code>\"Green\"</code> is the current choice.
Pushing the mouse button down on the object causes a menu to
appear with the current choice highlighted.
<p>
Some native platforms do not support arbitrary resizing of
<code>Choice</code> components and the behavior of
<code>setSize()/getSize()</code> is bound by
such limitations.
Native GUI <code>Choice</code> components' size are often bound by such
attributes as font size and length of items contained within
the <code>Choice</code>.
<p>
@author      Sami Shaio
@author      Arthur van Hoff
@since       JDK1.0
"
      classrelation 2898946 // <generalisation>
	relation 2898946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2898946 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2899074 // <realization>
	relation 2899074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2899074 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 2899202 // <realization>
	relation 2899202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2899202 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2899330 // pItems (<unidirectional association>)
	relation 2899330 --->
	  a role_name "pItems" package
	    comment "
The items for the <code>Choice</code>.
This can be a <code>null</code> value.
@serial
@see #add(String)
@see #addItem(String)
@see #getItem(int)
@see #getItemCount()
@see #insert(String, int)
@see #remove(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 2899330 // pItems (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1343618 "selectedIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the current choice for this <code>Choice</code>
or -1 if nothing is selected.
@serial
@see #getSelectedItem()
@see #select(int)

"
      end

      classrelation 2899458 // itemListener (<unidirectional association>)
	relation 2899458 --->
	  a role_name "itemListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2899458 // itemListener (<unidirectional association>)
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 2899586 // base (<unidirectional association>)
	relation 2899586 --->
	  a role_name "base" init_value " \"choice\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2899586 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1343746 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1343874 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4075310674757313071L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 148482 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        /* initialize JNI field and method ids */
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6132610 "Choice"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new choice menu. The menu initially has no items in it.
<p>
By default, the first item added to the choice menu becomes the
selected item, until a different selection is made by the user
by calling one of the <code>select</code> methods.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true
@see       java.awt.GraphicsEnvironment#isHeadless
@see       #select(int)
@see       #select(java.lang.String)
"
      end

      operation 6132738 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this component.  Called by
<code>getName</code> when the name is <code>null</code>.
"
      end

      operation 6132866 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the <code>Choice</code>'s peer.  This peer allows us
to change the look
of the <code>Choice</code> without changing its functionality.
@see     java.awt.Toolkit#createChoice(java.awt.Choice)
@see     java.awt.Component#getToolkit()
"
      end

      operation 6132994 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of items in this <code>Choice</code> menu.
@return the number of items in this <code>Choice</code> menu
@see     #getItem
@since   JDK1.1
"
      end

      operation 6133122 "countItems"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getItemCount()</code>.
"
      end

      operation 6133250 "getItem"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string at the specified index in this
<code>Choice</code> menu.
@param      index the index at which to begin
@see        #getItemCount
"
      end

      operation 6133378 "getItemImpl"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 6133506 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item to this <code>Choice</code> menu.
@param      item    the item to be added
@exception  NullPointerException   if the item's value is
                 <code>null</code>
@since      JDK1.1
"
      end

      operation 6133634 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obsolete as of Java 2 platform v1.1.  Please use the
<code>add</code> method instead.
<p>
Adds an item to this <code>Choice</code> menu.
@param item the item to be added
@exception NullPointerException if the item's value is equal to
         <code>null</code>
"
      end

      operation 6133762 "insertNoInvalidate"
	private explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an item to this <code>Choice</code>,
but does not invalidate the <code>Choice</code>.
Client methods must provide their own synchronization before
invoking this method.
@param item the item to be added
@param index the new item position
@exception NullPointerException if the item's value is equal to
         <code>null</code>
"
      end

      operation 6133890 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the item into this choice at the specified position.
Existing items at an index greater than or equal to
<code>index</code> are shifted up by one to accommodate
the new item.  If <code>index</code> is greater than or
equal to the number of items in this choice,
<code>item</code> is added to the end of this choice.
<p>
If the item is the first one being added to the choice,
then the item becomes selected.  Otherwise, if the
selected item was one of the items shifted, the first
item in the choice becomes the selected item.  If the
selected item was no among those shifted, it remains
the selected item.
@param item the non-<code>null</code> item to be inserted
@param index the position at which the item should be inserted
@exception IllegalArgumentException if index is less than 0
"
      end

      operation 6134018 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of <code>item</code>
from the <code>Choice</code> menu.  If the item
being removed is the currently selected item,
then the first item in the choice becomes the
selected item.  Otherwise, the currently selected
item remains selected (and the selected index is
updated accordingly).
@param      item  the item to remove from this <code>Choice</code> menu
@exception  IllegalArgumentException  if the item doesn't
                    exist in the choice menu
@since      JDK1.1
"
      end

      operation 6134146 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item from the choice menu
at the specified position.  If the item
being removed is the currently selected item,
then the first item in the choice becomes the
selected item.  Otherwise, the currently selected
item remains selected (and the selected index is
updated accordingly).
@param      position the position of the item
@throws IndexOutOfBoundsException if the specified
         position is out of bounds
@since      JDK1.1
"
      end

      operation 6134274 "removeNoInvalidate"
	private explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an item from the <code>Choice</code> at the
specified position, but does not invalidate the <code>Choice</code>.
Client methods must provide their
own synchronization before invoking this method.
@param      position   the position of the item
"
      end

      operation 6134402 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from the choice menu.
@see       #remove
@since     JDK1.1
"
      end

      operation 6134530 "getSelectedItem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a representation of the current choice as a string.
@return    a string representation of the currently
                    selected item in this choice menu
@see       #getSelectedIndex
"
      end

      operation 6134658 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array (length 1) containing the currently selected
item.  If this choice has no items, returns <code>null</code>.
@see ItemSelectable
"
      end

      operation 6134786 "getSelectedIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the currently selected item.
If nothing is selected, returns -1.

@return the index of the currently selected item, or -1 if nothing
 is currently selected
@see #getSelectedItem
"
      end

      operation 6134914 "select"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected item in this <code>Choice</code> menu to be the
item at the specified position.

<p>Note that this method should be primarily used to
initially select an item in this component.
Programmatically calling this method will <i>not</i> trigger
an <code>ItemEvent</code>.  The only way to trigger an
<code>ItemEvent</code> is by user interaction.

@param      pos      the position of the selected item
@exception  IllegalArgumentException if the specified
                           position is greater than the
                           number of items or less than zero
@see        #getSelectedItem
@see        #getSelectedIndex
"
      end

      operation 6135042 "select"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected item in this <code>Choice</code> menu
to be the item whose name is equal to the specified string.
If more than one item matches (is equal to) the specified string,
the one with the smallest index is selected.

<p>Note that this method should be primarily used to
initially select an item in this component.
Programmatically calling this method will <i>not</i> trigger
an <code>ItemEvent</code>.  The only way to trigger an
<code>ItemEvent</code> is by user interaction.

@param       str     the specified string
@see         #getSelectedItem
@see         #getSelectedIndex
"
      end

      operation 6135170 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item listener to receive item events from
this <code>Choice</code> menu.  Item events are sent in response
to user input, but not in response to calls to <code>select</code>.
If l is <code>null</code>, no exception is thrown and no action
is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.
@param         l    the item listener
@see           #removeItemListener
@see           #getItemListeners
@see           #select
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6135298 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified item listener so that it no longer receives
item events from this <code>Choice</code> menu.
If l is <code>null</code>, no exception is thrown and no
action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.
@param         l    the item listener
@see           #addItemListener
@see           #getItemListeners
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6135426 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the item listeners
registered on this choice.

@return all of this choice's <code>ItemListener</code>s
        or an empty array if no item
        listeners are currently registered

@see           #addItemListener
@see           #removeItemListener
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since 1.4
"
      end

      operation 6135554 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Choice</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Choice</code> <code>c</code>
for its item listeners with the following code:

<pre>ItemListener[] ils = (ItemListener[])(c.getListeners(ItemListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this choice,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getItemListeners
@since 1.3
"
      end

      operation 6135682 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6135810 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this choice. If the event is an
instance of <code>ItemEvent</code>, it invokes the
<code>processItemEvent</code> method. Otherwise, it calls its
superclass's <code>processEvent</code> method.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param      e the event
@see        java.awt.event.ItemEvent
@see        #processItemEvent
@since      JDK1.1
"
      end

      operation 6135938 "processItemEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes item events occurring on this <code>Choice</code>
menu by dispatching them to any registered
<code>ItemListener</code> objects.
<p>
This method is not called unless item events are
enabled for this component. Item events are enabled
when one of the following occurs:
<ul>
<li>An <code>ItemListener</code> object is registered
via <code>addItemListener</code>.
<li>Item events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the item event
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@see         #addItemListener(ItemListener)
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6136066 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Choice</code>
menu. This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return    the parameter string of this <code>Choice</code> menu
"
      end

      attribute 1344002 "choiceSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


Choice Serial Data Version.
@serial

"
      end

      operation 6136194 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ItemListeners</code>
as optional data. The non-serializable
<code>ItemListeners</code> are detected and
no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of 0
  or more pairs; the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code> indicates
  the type of object and is one of the following:
  <code>itemListenerK</code> indicating an
    <code>ItemListener</code> object

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#itemListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6136322 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it
isn't <code>null</code> adds a listener to receive
item events fired by the <code>Choice</code> item.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@serial
@see #removeItemListener(ItemListener)
@see #addItemListener(ItemListener)
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6136450 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6136578 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>Choice</code>. For <code>Choice</code> components,
the <code>AccessibleContext</code> takes the form of an
<code>AccessibleAWTChoice</code>. A new <code>AccessibleAWTChoice</code>
instance is created if necessary.

@return an <code>AccessibleAWTChoice</code> that serves as the
        <code>AccessibleContext</code> of this <code>Choice</code>
@since 1.3
"
      end

      class 860290 "AccessibleAWTChoice"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2899714 // <generalisation>
	  relation 2899714 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2899714 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2899842 // <realization>
	  relation 2899842 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2899842 // <realization>
	    b parent class_ref 348418 // AccessibleAction
	end

	attribute 1344130 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7175603582428509322L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6136706 "AccessibleAWTChoice"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6136834 "getAccessibleAction"
	  public return_type class_ref 348418 // AccessibleAction
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleAction associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleAction interface on behalf of itself.

@return this object
@see AccessibleAction
"
	end

	operation 6136962 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 6137090 "getAccessibleActionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible actions available in this object
If there are more than one, the first one is considered the \"default\"
action of the object.

@return the zero-based number of Actions in this object
"
	end

	operation 6137218 "getAccessibleActionDescription"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a description of the specified action of the object.

@param i zero-based index of the actions
@return a String description of the action
@see #getAccessibleActionCount
"
	end

	operation 6137346 "doAccessibleAction"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Perform the specified Action on the object

@param i zero-based index of actions
@return true if the action was performed; otherwise false.
@see #getAccessibleActionCount
"
	end
      end
    end

    class 860418 "Paint"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This <code>Paint</code> interface defines how color patterns
can be generated for {@link Graphics2D} operations.  A class
implementing the <code>Paint</code> interface is added to the
<code>Graphics2D</code> context in order to define the color
pattern used by the <code>draw</code> and <code>fill</code> methods.
<p>
Instances of classes implementing <code>Paint</code> must be
read-only because the <code>Graphics2D</code> does not clone
these objects when they are set as an attribute with the
<code>setPaint</code> method or when the <code>Graphics2D</code>
object is itself cloned.
@see PaintContext
@see Color
@see GradientPaint
@see TexturePaint
@see Graphics2D#setPaint
@version 1.36, 06/05/07
"
      classrelation 2899970 // <generalisation>
	relation 2899970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2899970 // <generalisation>
	  b parent class_ref 860546 // Transparency
      end

      operation 6137602 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate the color pattern.
The arguments to this method convey additional information
about the rendering operation that may be
used or ignored on various implementations of the {@code Paint} interface.
A caller must pass non-{@code null} values for all of the arguments
except for the {@code ColorModel} argument which may be {@code null} to
indicate that no specific {@code ColorModel} type is preferred.
Implementations of the {@code Paint} interface are allowed to use or ignore
any of the arguments as makes sense for their function, and are
not constrained to use the specified {@code ColorModel} for the returned
{@code PaintContext}, even if it is not {@code null}.
Implementations are allowed to throw {@code NullPointerException} for
any {@code null} argument other than the {@code ColorModel} argument,
but are not required to do so.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param deviceBounds the device space bounding box
                    of the graphics primitive being rendered.
                    Implementations of the {@code Paint} interface
                    are allowed to throw {@code NullPointerException}
                    for a {@code null} {@code deviceBounds}.
@param userBounds the user space bounding box
                  of the graphics primitive being rendered.
                    Implementations of the {@code Paint} interface
                    are allowed to throw {@code NullPointerException}
                    for a {@code null} {@code userBounds}.
@param xform the {@link AffineTransform} from user
             space into device space.
                    Implementations of the {@code Paint} interface
                    are allowed to throw {@code NullPointerException}
                    for a {@code null} {@code xform}.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
                    Implementations of the {@code Paint} interface
                    are allowed to throw {@code NullPointerException}
                    for a {@code null} {@code hints}.
@return the {@code PaintContext} for
        generating color patterns.
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end
    end

    class 860546 "Transparency"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Transparency</code> interface defines the common transparency
modes for implementing classes.
"
      attribute 1344258 "OPAQUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents image data that is guaranteed to be completely opaque,
meaning that all pixels have an alpha value of 1.0.

"
      end

      attribute 1344386 "BITMASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents image data that is guaranteed to be either completely
opaque, with an alpha value of 1.0, or completely transparent,
with an alpha value of 0.0.

"
      end

      attribute 1344514 "TRANSLUCENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents image data that contains or might contain arbitrary
alpha values between and including 0.0 and 1.0.

"
      end

      operation 6137474 "getTransparency"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this <code>Transparency</code>.
@return the field type of this <code>Transparency</code>, which is
         either OPAQUE, BITMASK or TRANSLUCENT.
"
      end
    end

    class 860674 "PaintContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>PaintContext</code> interface defines the encapsulated
and optimized environment to generate color patterns in device
space for fill or stroke operations on a
{@link Graphics2D}.  The <code>PaintContext</code> provides
the necessary colors for <code>Graphics2D</code> operations in the
form of a {@link Raster} associated with a {@link ColorModel}.
The <code>PaintContext</code> maintains state for a particular paint
operation.  In a multi-threaded environment, several
contexts can exist simultaneously for a single {@link Paint} object.
@see Paint
"
      operation 6142338 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the resources allocated for the operation.
"
      end

      operation 6142466 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ColorModel</code> of the output.  Note that
this <code>ColorModel</code> might be different from the hint
specified in the
{@link Paint#createContext(ColorModel, Rectangle, Rectangle2D,
AffineTransform, RenderingHints) createContext} method of
<code>Paint</code>.  Not all <code>PaintContext</code> objects are
capable of generating color patterns in an arbitrary
<code>ColorModel</code>.
@return the <code>ColorModel</code> of the output.
"
      end

      operation 6142594 "getRaster"
	public return_type class_ref 311682 // Raster
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Raster</code> containing the colors generated for
the graphics operation.
@param x the x coordinate of the area in device space
for which colors are generated.
@param y the y coordinate of the area in device space
for which colors are generated.
@param w the width of the area in device space
@param h the height of the area in device space
@return a <code>Raster</code> representing the specified
rectangular area and containing the colors generated for
the graphics operation.
"
      end
    end

    class 860802 "ColorPaintContext"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2903810 // <realization>
	relation 2903810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2903810 // <realization>
	  b parent class_ref 860674 // PaintContext
      end

      attribute 1345410 "color"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2903938 // savedTile (<unidirectional association>)
	relation 2903938 --->
	  a role_name "savedTile" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2903938 // savedTile (<unidirectional association>)
	  b parent class_ref 322690 // WritableRaster
      end

      operation 6142722 "ColorPaintContext"
	protected explicit_return_type ""
	nparams 2
	  param in name "color" explicit_type "int"
	  param inout name "cm" type class_ref 312066 // ColorModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6142850 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6142978 "getRGB"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the RGB value representing the color in the default sRGB
{@link ColorModel}.
(Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are
blue).
@return the RGB value of the color in the default sRGB
        <code>ColorModel</code>.
@see java.awt.image.ColorModel#getRGBdefault
@see #getRed
@see #getGreen
@see #getBlue
"
      end

      operation 6143106 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6143234 "getRaster"
	public return_type class_ref 311682 // Raster
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 860930 "Conditional"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Conditional is used by the EventDispatchThread's message pumps to
determine if a given pump should continue to run, or should instead exit
and yield control to the parent pump.

@author David Mendenhall
"
      operation 6144258 "evaluate"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 861058 "ContainerOrderFocusTraversalPolicy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy that determines traversal order based on the order
of child Components in a Container. From a particular focus cycle root, the
policy makes a pre-order traversal of the Component hierarchy, and traverses
a Container's children according to the ordering of the array returned by
<code>Container.getComponents()</code>. Portions of the hierarchy that are
not visible and displayable will not be searched.
<p>
By default, ContainerOrderFocusTraversalPolicy implicitly transfers focus
down-cycle. That is, during normal forward focus traversal, the Component
traversed after a focus cycle root will be the focus-cycle-root's default
Component to focus. This behavior can be disabled using the
<code>setImplicitDownCycleTraversal</code> method.
<p>
By default, methods of this class will return a Component only if it is
visible, displayable, enabled, and focusable. Subclasses can modify this
behavior by overriding the <code>accept</code> method.
<p>
This policy takes into account <a
href=\"doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus traversal
policy providers</a>.  When searching for first/last/next/previous Component,
if a focus traversal policy provider is encountered, its focus traversal
policy is used to perform the search operation.

@author David Mendenhall

@see Container#getComponents
@since 1.4
"
      classrelation 2904578 // <generalisation>
	relation 2904578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2904578 // <generalisation>
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 2904706 // <realization>
	relation 2904706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2904706 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1346178 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.ContainerOrderFocusTraversalPolicy\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1346306 "FORWARD_TRAVERSAL"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1346434 "BACKWARD_TRAVERSAL"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1346562 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 486933713763926351L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.4 serialVersionUID

"
      end

      attribute 1346690 "implicitDownCycleTraversal"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2904834 // cachedRoot (<unidirectional association>)
	relation 2904834 --->
	  a role_name "cachedRoot" private
	    comment "
Used by getComponentAfter and getComponentBefore for efficiency. In
order to maintain compliance with the specification of
FocusTraversalPolicy, if traversal wraps, we should invoke
getFirstComponent or getLastComponent. These methods may be overriden in
subclasses to behave in a non-generic way. However, in the generic case,
these methods will simply return the first or last Components of the
sorted list, respectively. Since getComponentAfter and
getComponentBefore have already built the list before determining
that they need to invoke getFirstComponent or getLastComponent, the
list should be reused if possible.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2904834 // cachedRoot (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 2904962 // cachedCycle (<unidirectional association>)
	relation 2904962 --->
	  a role_name "cachedCycle" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 2904962 // cachedCycle (<unidirectional association>)
	  b parent class_ref 861186 // List
      end

      operation 6145154 "getFocusTraversalCycle"
	private return_type class_ref 861186 // List
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Component> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We suppose to use getFocusTraversalCycle & getComponentIndex methods in order
to divide the policy into two parts:
1) Making the focus traversal cycle.
2) Traversing the cycle.
The 1st point assumes producing a list of components representing the focus
traversal cycle. The two methods mentioned above should implement this logic.
The 2nd point assumes implementing the common concepts of operating on the
cycle: traversing back and forth, retrieving the initial/default/first/last
component. These concepts are described in the AWT Focus Spec and they are
applied to the FocusTraversalPolicy in general.
Thus, a descendant of this policy may wish to not reimplement the logic of
the 2nd point but just override the implementation of the 1st one.
A striking example of such a descendant is the javax.swing.SortingFocusTraversalPolicy.

protected"
      end

      operation 6145282 "getComponentIndex"
	private explicit_return_type "int"
	nparams 2
	  param inout name "cycle" type class_ref 861186 // List
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Component> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "protected"
      end

      operation 6145410 "enumerateCycle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "container" type class_ref 338690 // Container
	  param inout name "cycle" type class_ref 861186 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<Component> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6145538 "getTopmostProvider"
	private return_type class_ref 338690 // Container
	nparams 2
	  param inout name "focusCycleRoot" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6145666 "getComponentDownCycle"
	private return_type class_ref 338818 // Component
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param in name "traversalDirection" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a new focus cycle takes place and returns a Component to traverse focus to.
@param comp a possible focus cycle root or policy provider
@param traversalDirection the direction of the traversal
@return a Component to traverse focus to if {@code comp} is a root or provider
        and implicit down-cycle is set, otherwise {@code null}
"
      end

      operation 6145794 "getComponentAfter"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus after aComponent.
aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.
<p>
By default, ContainerOrderFocusTraversalPolicy implicitly transfers
focus down-cycle. That is, during normal forward focus traversal, the
Component traversed after a focus cycle root will be the focus-cycle-
root's default Component to focus. This behavior can be disabled using
the <code>setImplicitDownCycleTraversal</code> method.
<p>
If aContainer is <a href=\"doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus
traversal policy provider</a>, the focus is always transferred down-cycle.

@param aContainer a focus cycle root of aComponent or a focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus after aComponent, or
        null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 6145922 "getComponentBefore"
	public return_type class_ref 338818 // Component
	nparams 2
	  param inout name "aContainer" type class_ref 338690 // Container
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Component that should receive the focus before aComponent.
aContainer must be a focus cycle root of aComponent or a <a
href=\"doc-files/FocusSpec.html#FocusTraversalPolicyProviders\">focus traversal policy
provider</a>.

@param aContainer a focus cycle root of aComponent or focus traversal policy provider
@param aComponent a (possibly indirect) child of aContainer, or
       aContainer itself
@return the Component that should receive the focus before aComponent,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is not a focus cycle
        root of aComponent or focus traversal policy provider, or if either aContainer or
        aComponent is null
"
      end

      operation 6146050 "getFirstComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
forward direction.

@param aContainer the focus cycle root or focus traversal policy provider whose first
       Component is to be returned
@return the first Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6146178 "getLastComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last Component in the traversal cycle. This method is used
to determine the next Component to focus when traversal wraps in the
reverse direction.

@param aContainer the focus cycle root or focus traversal policy provider whose last
       Component is to be returned
@return the last Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6146306 "getDefaultComponent"
	public return_type class_ref 338818 // Component
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default Component to focus. This Component will be the first
to receive focus when traversing down into a new focus traversal cycle
rooted at aContainer. The default implementation of this method
returns the same Component as <code>getFirstComponent</code>.

@param aContainer the focus cycle root or focus traversal policy provider whose default
       Component is to be returned
@return the default Component in the traversal cycle of aContainer,
        or null if no suitable Component can be found
@see #getFirstComponent
@throws IllegalArgumentException if aContainer is null
"
      end

      operation 6146434 "setImplicitDownCycleTraversal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "implicitDownCycleTraversal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this ContainerOrderFocusTraversalPolicy transfers focus
down-cycle implicitly. If <code>true</code>, during normal forward focus
traversal, the Component traversed after a focus cycle root will be the
focus-cycle-root's default Component to focus. If <code>false</code>,
the next Component in the focus traversal cycle rooted at the specified
focus cycle root will be traversed instead. The default value for this
property is <code>true</code>.

@param implicitDownCycleTraversal whether this
       ContainerOrderFocusTraversalPolicy transfers focus down-cycle
       implicitly
@see #getImplicitDownCycleTraversal
@see #getFirstComponent
"
      end

      operation 6146562 "getImplicitDownCycleTraversal"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this ContainerOrderFocusTraversalPolicy transfers focus
down-cycle implicitly. If <code>true</code>, during normal forward focus
traversal, the Component traversed after a focus cycle root will be the
focus-cycle-root's default Component to focus. If <code>false</code>,
the next Component in the focus traversal cycle rooted at the specified
focus cycle root will be traversed instead.

@return whether this ContainerOrderFocusTraversalPolicy transfers focus
        down-cycle implicitly
@see #setImplicitDownCycleTraversal
@see #getFirstComponent
"
      end

      operation 6146690 "accept"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether a Component is an acceptable choice as the new
focus owner. By default, this method will accept a Component if and
only if it is visible, displayable, enabled, and focusable.

@param aComponent the Component whose fitness as a focus owner is to
       be tested
@return <code>true</code> if aComponent is visible, displayable,
        enabled, and focusable; <code>false</code> otherwise
"
      end
    end

    class 861186 "List"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>List</code> component presents the user with a
scrolling list of text items. The list can be set up so that
the user can choose either one item or multiple items.
<p>
For example, the code&nbsp;.&nbsp;.&nbsp;.

<hr><blockquote><pre>
List lst = new List(4, false);
lst.add(\"Mercury\");
lst.add(\"Venus\");
lst.add(\"Earth\");
lst.add(\"JavaSoft\");
lst.add(\"Mars\");
lst.add(\"Jupiter\");
lst.add(\"Saturn\");
lst.add(\"Uranus\");
lst.add(\"Neptune\");
lst.add(\"Pluto\");
cnt.add(lst);
</pre></blockquote><hr>
<p>
where <code>cnt</code> is a container, produces the following
scrolling list:
<p>
<img src=\"doc-files/List-1.gif\"
alt=\"Shows a list containing: Venus, Earth, JavaSoft, and Mars. Javasoft is selected.\" style=\"float:center; margin: 7px 10px;\">
<p>
If the List allows multiple selections, then clicking on
an item that is already selected deselects it. In the preceding
example, only one item from the scrolling list can be selected
at a time, since the second argument when creating the new scrolling
list is <code>false</code>. If the List does not allow multiple
selections, selecting an item causes any other selected item
to be deselected.
<p>
Note that the list in the example shown was created with four visible
rows.  Once the list has been created, the number of visible rows
cannot be changed.  A default <code>List</code> is created with
four rows, so that <code>lst = new List()</code> is equivalent to
<code>list = new List(4, false)</code>.
<p>
Beginning with Java&nbsp;1.1, the Abstract Window Toolkit
sends the <code>List</code> object all mouse, keyboard, and focus events
that occur over it. (The old AWT event model is being maintained
only for backwards compatibility, and its use is discouraged.)
<p>
When an item is selected or deselected by the user, AWT sends an instance
of <code>ItemEvent</code> to the list.
When the user double-clicks on an item in a scrolling list,
AWT sends an instance of <code>ActionEvent</code> to the
list following the item event. AWT also generates an action event
when the user presses the return key while an item in the
list is selected.
<p>
If an application wants to perform some action based on an item
in this list being selected or activated by the user, it should implement
<code>ItemListener</code> or <code>ActionListener</code>
as appropriate and register the new listener to receive
events from this list.
<p>
For multiple-selection scrolling lists, it is considered a better
user interface to use an external gesture (such as clicking on a
button) to trigger the action.
@author      Sami Shaio
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@see         java.awt.event.ActionEvent
@see         java.awt.event.ActionListener
@since       JDK1.0
"
      classrelation 2934018 // <generalisation>
	relation 2934018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2934018 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2934146 // <realization>
	relation 2934146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2934146 // <realization>
	  b parent class_ref 391298 // ItemSelectable
      end

      classrelation 2934274 // <realization>
	relation 2934274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2934274 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2934402 // items (<unidirectional association>)
	relation 2934402 --->
	  a role_name "items" init_value " new Vector<>()" package
	    comment "
A vector created to contain items which will become
part of the List Component.

@serial
@see #addItem(String)
@see #getItem(int)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 2934402 // items (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1399682 "rows"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field will represent the number of visible rows in the
<code>List</code> Component.  It is specified only once, and
that is when the list component is actually
created.  It will never change.

@serial
@see #getRows()

"
      end

      attribute 1399810 "multipleMode"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>multipleMode</code> is a variable that will
be set to <code>true</code> if a list component is to be set to
multiple selection mode, that is where the user can
select more than one item in a list at one time.
<code>multipleMode</code> will be set to false if the
list component is set to single selection, that is where
the user can only select one item on the list at any
one time.

@serial
@see #isMultipleMode()
@see #setMultipleMode(boolean)

"
      end

      attribute 1399938 "selected"
	package explicit_type "int"
	multiplicity "[]"
	init_value " new int[0]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>selected</code> is an array that will contain
the indices of items that have been selected.

@serial
@see #getSelectedIndexes()
@see #getSelectedIndex()

"
      end

      attribute 1400066 "visibleIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This variable contains the value that will be used
when trying to make a particular list item visible.

@serial
@see #makeVisible(int)

"
      end

      classrelation 2934530 // actionListener (<unidirectional association>)
	relation 2934530 --->
	  a role_name "actionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2934530 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2934658 // itemListener (<unidirectional association>)
	relation 2934658 --->
	  a role_name "itemListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2934658 // itemListener (<unidirectional association>)
	  b parent class_ref 389506 // ItemListener
      end

      classrelation 2934786 // base (<unidirectional association>)
	relation 2934786 --->
	  a role_name "base" init_value " \"list\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2934786 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1400194 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1400322 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3304312411574666869L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6261250 "List"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new scrolling list.
By default, there are four visible lines and multiple selections are
not allowed.  Note that this is a convenience method for
<code>List(0, false)</code>.  Also note that the number of visible
lines in the list cannot be changed after it has been created.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6261378 "List"
	public explicit_return_type ""
	nparams 1
	  param in name "rows" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new scrolling list initialized with the specified
number of visible lines. By default, multiple selections are
not allowed.  Note that this is a convenience method for
<code>List(rows, false)</code>.  Also note that the number
of visible rows in the list cannot be changed after it has
been created.
@param       rows the number of items to show.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since       JDK1.1
"
      end

      attribute 1400450 "DEFAULT_VISIBLE_ROWS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default number of visible rows is 4.  A list with
zero rows is unusable and unsightly.

"
      end

      operation 6261506 "List"
	public explicit_return_type ""
	nparams 2
	  param in name "rows" explicit_type "int"
	  param inout name "multipleMode" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new scrolling list initialized to display the specified
number of rows. Note that if zero rows are specified, then
the list will be created with a default of four rows.
Also note that the number of visible rows in the list cannot
be changed after it has been created.
If the value of <code>multipleMode</code> is
<code>true</code>, then the user can select multiple items from
the list. If it is <code>false</code>, only one item at a time
can be selected.
@param       rows   the number of items to show.
@param       multipleMode   if <code>true</code>,
                    then multiple selections are allowed;
                    otherwise, only one item can be selected at a time.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6261634 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by
<code>getName</code> when the name is <code>null</code>.
"
      end

      operation 6261762 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer for the list.  The peer allows us to modify the
list's appearance without changing its functionality.
"
      end

      operation 6261890 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the peer for this list.  The peer allows us to modify the
list's appearance without changing its functionality.
"
      end

      operation 6262018 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of items in the list.
@return     the number of items in the list
@see        #getItem
@since      JDK1.1
"
      end

      operation 6262146 "countItems"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getItemCount()</code>.
"
      end

      operation 6262274 "getItem"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the item associated with the specified index.
@return       an item that is associated with
                   the specified index
@param        index the position of the item
@see          #getItemCount
"
      end

      operation 6262402 "getItemImpl"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: This method may be called by privileged threads.
       We implement this functionality in a package-private method
       to insure that it cannot be overridden by client subclasses.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 6262530 "getItems"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the items in the list.
@return       a string array containing items of the list
@see          #select
@see          #deselect
@see          #isIndexSelected
@since        JDK1.1
"
      end

      operation 6262658 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item to the end of scrolling list.
@param item the item to be added
@since JDK1.1
"
      end

      operation 6262786 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated      replaced by <code>add(String)</code>.
"
      end

      operation 6262914 "add"
	public explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item to the the scrolling list
at the position indicated by the index.  The index is
zero-based.  If the value of the index is less than zero,
or if the value of the index is greater than or equal to
the number of items in the list, then the item is added
to the end of the list.
@param       item   the item to be added;
             if this parameter is <code>null</code> then the item is
             treated as an empty string, <code>\"\"</code>
@param       index  the position at which to add the item
@since       JDK1.1
"
      end

      operation 6263042 "addItem"
	public explicit_return_type "void"
	nparams 2
	  param inout name "item" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated      replaced by <code>add(String, int)</code>.
"
      end

      operation 6263170 "replaceItem"
	public explicit_return_type "void"
	nparams 2
	  param inout name "newValue" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the item at the specified index in the scrolling list
with the new string.
@param       newValue   a new string to replace an existing item
@param       index      the position of the item to replace
@exception ArrayIndexOutOfBoundsException if <code>index</code>
         is out of range
"
      end

      operation 6263298 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from this list.
@see #remove
@see #delItems
@since JDK1.1
"
      end

      operation 6263426 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>removeAll()</code>.
"
      end

      operation 6263554 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of an item from the list.
If the specified item is selected, and is the only selected
item in the list, the list is set to have no selection.
@param        item  the item to remove from the list
@exception    IllegalArgumentException
                    if the item doesn't exist in the list
@since        JDK1.1
"
      end

      operation 6263682 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the item at the specified position
from this scrolling list.
If the item with the specified position is selected, and is the
only selected item in the list, the list is set to have no selection.
@param      position   the index of the item to delete
@see        #add(String, int)
@since      JDK1.1
@exception    ArrayIndexOutOfBoundsException
              if the <code>position</code> is less than 0 or
              greater than <code>getItemCount()-1</code>
"
      end

      operation 6263810 "delItem"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated     replaced by <code>remove(String)</code>
                        and <code>remove(int)</code>.
"
      end

      operation 6263938 "getSelectedIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the selected item on the list,

@return        the index of the selected item;
               if no item is selected, or if multiple items are
               selected, <code>-1</code> is returned.
@see           #select
@see           #deselect
@see           #isIndexSelected
"
      end

      operation 6264066 "getSelectedIndexes"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the selected indexes on the list.

@return        an array of the selected indexes on this scrolling list;
               if no item is selected, a zero-length array is returned.
@see           #select
@see           #deselect
@see           #isIndexSelected
"
      end

      operation 6264194 "getSelectedItem"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the selected item on this scrolling list.

@return        the selected item on the list;
               if no item is selected, or if multiple items are
               selected, <code>null</code> is returned.
@see           #select
@see           #deselect
@see           #isIndexSelected
"
      end

      operation 6264322 "getSelectedItems"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the selected items on this scrolling list.

@return        an array of the selected items on this scrolling list;
               if no item is selected, a zero-length array is returned.
@see           #select
@see           #deselect
@see           #isIndexSelected
"
      end

      operation 6264450 "getSelectedObjects"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the selected items on this scrolling list in an array of Objects.
@return        an array of <code>Object</code>s representing the
               selected items on this scrolling list;
               if no item is selected, a zero-length array is returned.
@see #getSelectedItems
@see ItemSelectable
"
      end

      operation 6264578 "select"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the item at the specified index in the scrolling list.
<p>
Note that passing out of range parameters is invalid,
and will result in unspecified behavior.

<p>Note that this method should be primarily used to
initially select an item in this component.
Programmatically calling this method will <i>not</i> trigger
an <code>ItemEvent</code>.  The only way to trigger an
<code>ItemEvent</code> is by user interaction.

@param        index the position of the item to select
@see          #getSelectedItem
@see          #deselect
@see          #isIndexSelected
"
      end

      operation 6264706 "deselect"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deselects the item at the specified index.
<p>
Note that passing out of range parameters is invalid,
and will result in unspecified behavior.
<p>
If the item at the specified index is not selected,
then the operation is ignored.
@param        index the position of the item to deselect
@see          #select
@see          #getSelectedItem
@see          #isIndexSelected
"
      end

      operation 6264834 "isIndexSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified item in this scrolling list is
selected.
@param      index   the item to be checked
@return     <code>true</code> if the specified item has been
                      selected; <code>false</code> otherwise
@see        #select
@see        #deselect
@since      JDK1.1
"
      end

      operation 6264962 "isSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>isIndexSelected(int)</code>.
"
      end

      operation 6265090 "getRows"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of visible lines in this list.  Note that
once the <code>List</code> has been created, this number
will never change.
@return     the number of visible lines in this scrolling list
"
      end

      operation 6265218 "isMultipleMode"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether this list allows multiple selections.
@return     <code>true</code> if this list allows multiple
                selections; otherwise, <code>false</code>
@see        #setMultipleMode
@since      JDK1.1
"
      end

      operation 6265346 "allowsMultipleSelections"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>isMultipleMode()</code>.
"
      end

      operation 6265474 "setMultipleMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag that determines whether this list
allows multiple selections.
When the selection mode is changed from multiple-selection to
single-selection, the selected items change as follows:
If a selected item has the location cursor, only that
item will remain selected.  If no selected item has the
location cursor, all items will be deselected.
@param       b   if <code>true</code> then multiple selections
                     are allowed; otherwise, only one item from
                     the list can be selected at once
@see         #isMultipleMode
@since       JDK1.1
"
      end

      operation 6265602 "setMultipleSelections"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setMultipleMode(boolean)</code>.
"
      end

      operation 6265730 "getVisibleIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the index of the item that was last made visible by
the method <code>makeVisible</code>.
@return      the index of the item that was last made visible
@see         #makeVisible
"
      end

      operation 6265858 "makeVisible"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes the item at the specified index visible.
@param       index    the position of the item
@see         #getVisibleIndex
"
      end

      operation 6265986 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred dimensions for a list with the specified
number of rows.
@param      rows    number of rows in the list
@return     the preferred dimensions for displaying this scrolling list
            given that the specified number of rows must be visible
@see        java.awt.Component#getPreferredSize
@since      JDK1.1
"
      end

      operation 6266114 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize(int)</code>.
"
      end

      operation 6266242 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred size of this scrolling list.
@return     the preferred dimensions for displaying this scrolling list
@see        java.awt.Component#getPreferredSize
@since      JDK1.1
"
      end

      operation 6266370 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize()</code>.
"
      end

      operation 6266498 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum dimensions for a list with the specified
number of rows.
@param      rows    number of rows in the list
@return     the minimum dimensions for displaying this scrolling list
            given that the specified number of rows must be visible
@see        java.awt.Component#getMinimumSize
@since      JDK1.1
"
      end

      operation 6266626 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize(int)</code>.
"
      end

      operation 6266754 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of this scrolling list.
@return       the minimum dimensions needed
                       to display this scrolling list
@see          java.awt.Component#getMinimumSize()
@since        JDK1.1
"
      end

      operation 6266882 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize()</code>.
"
      end

      operation 6267010 "addItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified item listener to receive item events from
this list.  Item events are sent in response to user input, but not
in response to calls to <code>select</code> or <code>deselect</code>.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l the item listener
@see           #removeItemListener
@see           #getItemListeners
@see           #select
@see           #deselect
@see           java.awt.event.ItemEvent
@see           java.awt.event.ItemListener
@since         JDK1.1
"
      end

      operation 6267138 "removeItemListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 389506 // ItemListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified item listener so that it no longer
receives item events from this list.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l the item listener
@see             #addItemListener
@see             #getItemListeners
@see             java.awt.event.ItemEvent
@see             java.awt.event.ItemListener
@since           JDK1.1
"
      end

      operation 6267266 "getItemListeners"
	public return_type class_ref 389506 // ItemListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the item listeners
registered on this list.

@return all of this list's <code>ItemListener</code>s
        or an empty array if no item
        listeners are currently registered

@see             #addItemListener
@see             #removeItemListener
@see             java.awt.event.ItemEvent
@see             java.awt.event.ItemListener
@since 1.4
"
      end

      operation 6267394 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive action events from
this list. Action events occur when a user double-clicks
on a list item or types Enter when the list has the keyboard
focus.
<p>
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l the action listener
@see           #removeActionListener
@see           #getActionListeners
@see           java.awt.event.ActionEvent
@see           java.awt.event.ActionListener
@since         JDK1.1
"
      end

      operation 6267522 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener so that it no longer
receives action events from this list. Action events
occur when a user double-clicks on a list item.
If listener <code>l</code> is <code>null</code>,
no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l     the action listener
@see             #addActionListener
@see             #getActionListeners
@see             java.awt.event.ActionEvent
@see             java.awt.event.ActionListener
@since           JDK1.1
"
      end

      operation 6267650 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this list.

@return all of this list's <code>ActionListener</code>s
        or an empty array if no action
        listeners are currently registered

@see             #addActionListener
@see             #removeActionListener
@see             java.awt.event.ActionEvent
@see             java.awt.event.ActionListener
@since 1.4
"
      end

      operation 6267778 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>List</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>List</code> <code>l</code>
for its item listeners with the following code:

<pre>ItemListener[] ils = (ItemListener[])(l.getListeners(ItemListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this list,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getItemListeners
@since 1.3
"
      end

      operation 6267906 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6268034 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this scrolling list. If an event is
an instance of <code>ItemEvent</code>, it invokes the
<code>processItemEvent</code> method. Else, if the
event is an instance of <code>ActionEvent</code>,
it invokes <code>processActionEvent</code>.
If the event is not an item event or an action event,
it invokes <code>processEvent</code> on the superclass.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param        e the event
@see          java.awt.event.ActionEvent
@see          java.awt.event.ItemEvent
@see          #processActionEvent
@see          #processItemEvent
@since        JDK1.1
"
      end

      operation 6268162 "processItemEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 390658 // ItemEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes item events occurring on this list by
dispatching them to any registered
<code>ItemListener</code> objects.
<p>
This method is not called unless item events are
enabled for this component. Item events are enabled
when one of the following occurs:
<ul>
<li>An <code>ItemListener</code> object is registered
via <code>addItemListener</code>.
<li>Item events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the item event
@see         java.awt.event.ItemEvent
@see         java.awt.event.ItemListener
@see         #addItemListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6268290 "processActionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes action events occurring on this component
by dispatching them to any registered
<code>ActionListener</code> objects.
<p>
This method is not called unless action events are
enabled for this component. Action events are enabled
when one of the following occurs:
<ul>
<li>An <code>ActionListener</code> object is registered
via <code>addActionListener</code>.
<li>Action events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the action event
@see         java.awt.event.ActionEvent
@see         java.awt.event.ActionListener
@see         #addActionListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6268418 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameter string representing the state of this
scrolling list. This string is useful for debugging.
@return    the parameter string of this scrolling list
"
      end

      operation 6268546 "delItems"
	public explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
Not for public use in the future.
This method is expected to be retained only as a package
private method.
"
      end

      attribute 1400578 "listSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization support.  Since the value of the selected
field isn't necessarily up to date, we sync it up with the
peer before serializing.


The <code>List</code> component's
Serialized Data Version.

@serial

"
      end

      operation 6268674 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>ItemListeners</code>
and <code>ActionListeners</code> as optional data.
The non-serializable listeners are detected and
no attempt is made to serialize them.

@serialData <code>null</code> terminated sequence of 0
 or more pairs; the pair consists of a <code>String</code>
 and an <code>Object</code>; the <code>String</code>
 indicates the type of object and is one of the
 following:
 <code>itemListenerK</code> indicating an
   <code>ItemListener</code> object;
 <code>actionListenerK</code> indicating an
   <code>ActionListener</code> object

@param s the <code>ObjectOutputStream</code> to write
@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#itemListenerK
@see java.awt.Component#actionListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6268802 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if it
isn't <code>null</code> adds a listener to receive
both item events and action events (as specified
by the key stored in the stream) fired by the
<code>List</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to write
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see #removeItemListener(ItemListener)
@see #addItemListener(ItemListener)
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6268930 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>List</code>. For lists, the <code>AccessibleContext</code>
takes the form of an <code>AccessibleAWTList</code>.
A new <code>AccessibleAWTList</code> instance is created, if necessary.

@return an <code>AccessibleAWTList</code> that serves as the
        <code>AccessibleContext</code> of this <code>List</code>
@since 1.3
"
      end

      class 871554 "AccessibleAWTList"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2934914 // <generalisation>
	  relation 2934914 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2934914 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2935042 // <realization>
	  relation 2935042 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2935042 // <realization>
	    b parent class_ref 348674 // AccessibleSelection
	end

	classrelation 2935170 // <realization>
	  relation 2935170 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2935170 // <realization>
	    b parent class_ref 389506 // ItemListener
	end

	classrelation 2935298 // <realization>
	  relation 2935298 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2935298 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	attribute 1400706 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7924617370136012829L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6269058 "AccessibleAWTList"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6269186 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6269314 "itemStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 390658 // ItemEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6269442 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of AccessibleState containing the current state
of the object
@see AccessibleState
"
	end

	operation 6269570 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 6269698 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the Accessible child contained at the local coordinate
Point, if one exists.

@return the Accessible at the specified location, if it exists
"
	end

	operation 6269826 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object.

@return the number of accessible children in the object.
"
	end

	operation 6269954 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the nth Accessible child of the object.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	operation 6270082 "getAccessibleSelection"
	  public return_type class_ref 348674 // AccessibleSelection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleSelection associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleSelection interface on behalf of itself.

@return this object
"
	end

	operation 6270210 "getAccessibleSelectionCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " AccessibleSelection methods

Returns the number of items currently selected.
If no items are selected, the return value will be 0.

@return the number of items currently selected.
"
	end

	operation 6270338 "getAccessibleSelection"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an Accessible representing the specified selected item
in the object.  If there isn't a selection, or there are
fewer items selected than the integer passed in, the return
value will be null.

@param i the zero-based index of selected items
@return an Accessible containing the selected item
"
	end

	operation 6270466 "isAccessibleChildSelected"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the current child of this object is selected.

@param i the zero-based index of the child in this Accessible
object.
@see AccessibleContext#getAccessibleChild
"
	end

	operation 6270594 "addAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified selected item in the object to the object's
selection.  If the object supports multiple selections,
the specified item is added to any existing selection, otherwise
it replaces any existing selection in the object.  If the
specified item is already selected, this method has no effect.

@param i the zero-based index of selectable items
"
	end

	operation 6270722 "removeAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes the specified selected item in the object from the object's
selection.  If the specified item isn't currently selected, this
method has no effect.

@param i the zero-based index of selectable items
"
	end

	operation 6270850 "clearAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clears the selection in the object, so that nothing in the
object is selected.
"
	end

	operation 6270978 "selectAllAccessibleSelection"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Causes every selected item in the object to be selected
if the object supports multiple selections.
"
	end

	class 871682 "AccessibleAWTListChild"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 2935426 // <generalisation>
	    relation 2935426 ---|>
	      a public
		java "${type}"
		classrelation_ref 2935426 // <generalisation>
	      b parent class_ref 347650 // AccessibleAWTComponent
	  end

	  classrelation 2935554 // <realization>
	    relation 2935554 -_-|>
	      a public
		java "${type}"
		classrelation_ref 2935554 // <realization>
	      b parent class_ref 347778 // Accessible
	  end

	  attribute 1400834 "serialVersionUID"
	    class_attribute const_attribute private explicit_type "long"
	    init_value " 4412022926028300317L"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "JDK 1.3 serialVersionUID

"
	  end

	  classrelation 2935682 // parent (<unidirectional association>)
	    relation 2935682 --->
	      a role_name "parent" private
		comment " [[[FIXME]]] need to finish implementing this!!!
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 2935682 // parent (<unidirectional association>)
	      b parent class_ref 861186 // List
	  end

	  attribute 1400962 "indexInParent"
	    private explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 6271106 "AccessibleAWTListChild"
	    public explicit_return_type ""
	    nparams 2
	      param inout name "parent" type class_ref 861186 // List
	      param in name "indexInParent" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 6271234 "getAccessibleContext"
	    public return_type class_ref 347522 // AccessibleContext
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " required Accessible methods


Gets the AccessibleContext for this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which acts as its own AccessibleContext.

@return this object
"
	  end

	  operation 6271362 "getAccessibleRole"
	    public return_type class_ref 348034 // AccessibleRole
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " required AccessibleContext methods


Get the role of this object.

@return an instance of AccessibleRole describing the role of
the object
@see AccessibleRole
"
	  end

	  operation 6271490 "getAccessibleStateSet"
	    public return_type class_ref 348162 // AccessibleStateSet
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the state set of this object.  The AccessibleStateSet of an
object is composed of a set of unique AccessibleState's.  A
change in the AccessibleStateSet of an object will cause a
PropertyChangeEvent to be fired for the
ACCESSIBLE_STATE_PROPERTY property.

@return an instance of AccessibleStateSet containing the
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener
"
	  end

	  operation 6271618 "getLocale"
	    public return_type class_ref 312962 // Locale
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the locale of the component. If the component does not
have a locale, then the locale of its parent is returned.

@return This component's locale.  If this component does not have
a locale, the locale of its parent is returned.

@exception IllegalComponentStateException
If the Component does not have its own locale and has not yet
been added to a containment hierarchy such that the locale can
be determined from the containing parent.
"
	  end

	  operation 6271746 "getAccessibleIndexInParent"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the 0-based index of this object in its accessible parent.

@return the 0-based index of this object in its parent; -1 if
this object does not have an accessible parent.

@see #getAccessibleParent
@see #getAccessibleChildrenCount
@see #getAccessibleChild
"
	  end

	  operation 6271874 "getAccessibleChildrenCount"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of accessible children of the object.

@return the number of accessible children of the object.
"
	  end

	  operation 6272002 "getAccessibleChild"
	    public return_type class_ref 347778 // Accessible
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Return the specified Accessible child of the object.  The
Accessible children of an Accessible object are zero-based,
so the first child of an Accessible child is at index 0, the
second child is at index 1, and so on.

@param i zero-based index of child
@return the Accessible child of the object
@see #getAccessibleChildrenCount
"
	  end

	  operation 6272130 "getBackground"
	    public return_type class_ref 323458 // Color
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " AccessibleComponent delegatation to parent List


Get the background color of this object.

@return the background color, if supported, of the object;
otherwise, null
@see #setBackground
"
	  end

	  operation 6272258 "setBackground"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "c" type class_ref 323458 // Color
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the background color of this object.

@param c the new Color for the background
@see #setBackground
"
	  end

	  operation 6272386 "getForeground"
	    public return_type class_ref 323458 // Color
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the foreground color of this object.

@return the foreground color, if supported, of the object;
otherwise, null
@see #setForeground
"
	  end

	  operation 6272514 "setForeground"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "c" type class_ref 323458 // Color
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the foreground color of this object.

@param c the new Color for the foreground
@see #getForeground
"
	  end

	  operation 6272642 "getCursor"
	    public return_type class_ref 340866 // Cursor
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the Cursor of this object.

@return the Cursor, if supported, of the object; otherwise, null
@see #setCursor
"
	  end

	  operation 6272770 "setCursor"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "cursor" type class_ref 340866 // Cursor
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the Cursor of this object.
<p>
The method may have no visual effect if the Java platform
implementation and/or the native system do not support
changing the mouse cursor shape.
@param cursor the new Cursor for the object
@see #getCursor
"
	  end

	  operation 6272898 "getFont"
	    public return_type class_ref 340354 // Font
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the Font of this object.

@return the Font,if supported, for the object; otherwise, null
@see #setFont
"
	  end

	  operation 6273026 "setFont"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "f" type class_ref 340354 // Font
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the Font of this object.

@param f the new Font for the object
@see #getFont
"
	  end

	  operation 6273154 "getFontMetrics"
	    public return_type class_ref 343810 // FontMetrics
	    nparams 1
	      param inout name "f" type class_ref 340354 // Font
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the FontMetrics of this object.

@param f the Font
@return the FontMetrics, if supported, the object; otherwise, null
@see #getFont
"
	  end

	  operation 6273282 "isEnabled"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Determine if the object is enabled.  Objects that are enabled
will also have the AccessibleState.ENABLED state set in their
AccessibleStateSet.

@return true if object is enabled; otherwise, false
@see #setEnabled
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#ENABLED
@see AccessibleStateSet
"
	  end

	  operation 6273410 "setEnabled"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "b" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the enabled state of the object.

@param b if true, enables this object; otherwise, disables it
@see #isEnabled
"
	  end

	  operation 6273538 "isVisible"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Determine if the object is visible.  Note: this means that the
object intends to be visible; however, it may not be
showing on the screen because one of the objects that this object
is contained by is currently not visible.  To determine if an
object is showing on the screen, use isShowing().
<p>Objects that are visible will also have the
AccessibleState.VISIBLE state set in their AccessibleStateSet.

@return true if object is visible; otherwise, false
@see #setVisible
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#VISIBLE
@see AccessibleStateSet
"
	  end

	  operation 6273666 "setVisible"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "b" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set the visible state of the object.

@param b if true, shows this object; otherwise, hides it
@see #isVisible
"
	  end

	  operation 6273794 "isShowing"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Determine if the object is showing.  This is determined by
checking the visibility of the object and visibility of the
object ancestors.
Note: this will return true even if the object is obscured
by another (for example, it to object is underneath a menu
that was pulled down).

@return true if object is showing; otherwise, false
"
	  end

	  operation 6273922 "contains"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Checks whether the specified point is within this object's
bounds, where the point's x and y coordinates are defined to
be relative to the coordinate system of the object.

@param p the Point relative to the coordinate system of the
object
@return true if object contains Point; otherwise false
@see #getBounds
"
	  end

	  operation 6274050 "getLocationOnScreen"
	    public return_type class_ref 323714 // Point
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the location of the object on the screen.

@return location of object on screen; null if this object
is not on the screen
@see #getBounds
@see #getLocation
"
	  end

	  operation 6274178 "getLocation"
	    public return_type class_ref 323714 // Point
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the location of the object relative to the parent in the
form of a point specifying the object's top-left corner in the
screen's coordinate space.

@return An instance of Point representing the top-left corner of
the objects's bounds in the coordinate space of the screen; null
if this object or its parent are not on the screen
@see #getBounds
@see #getLocationOnScreen
"
	  end

	  operation 6274306 "setLocation"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the location of the object relative to the parent.
@param p the new position for the top-left corner
@see #getLocation
"
	  end

	  operation 6274434 "getBounds"
	    public return_type class_ref 314114 // Rectangle
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Gets the bounds of this object in the form of a Rectangle object.
The bounds specify this object's width, height, and location
relative to its parent.

@return A rectangle indicating this component's bounds; null if
this object is not on the screen.
@see #contains
"
	  end

	  operation 6274562 "setBounds"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "r" type class_ref 314114 // Rectangle
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Sets the bounds of this object in the form of a Rectangle
object.  The bounds specify this object's width, height, and
location relative to its parent.

@param r rectangle indicating this component's bounds
@see #getBounds
"
	  end

	  operation 6274690 "getSize"
	    public return_type class_ref 316802 // Dimension
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the size of this object in the form of a Dimension
object.  The height field of the Dimension object contains this
objects's height, and the width field of the Dimension object
contains this object's width.

@return A Dimension object that indicates the size of this
component; null if this object is not on the screen
@see #setSize
"
	  end

	  operation 6274818 "setSize"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "d" type class_ref 316802 // Dimension
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Resizes this object so that it has width and height.

@param d - The dimension specifying the new size of the object.
@see #getSize
"
	  end

	  operation 6274946 "getAccessibleAt"
	    public return_type class_ref 347778 // Accessible
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the <code>Accessible</code> child, if one exists,
contained at the local coordinate <code>Point</code>.

@param p the point relative to the coordinate system of this
    object
@return the <code>Accessible</code>, if it exists,
    at the specified location; otherwise <code>null</code>
"
	  end

	  operation 6275074 "isFocusTraversable"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns whether this object can accept focus or not.   Objects
that can accept focus will also have the
<code>AccessibleState.FOCUSABLE</code> state set in their
<code>AccessibleStateSet</code>.

@return true if object can accept focus; otherwise false
@see AccessibleContext#getAccessibleStateSet
@see AccessibleState#FOCUSABLE
@see AccessibleState#FOCUSED
@see AccessibleStateSet
"
	  end

	  operation 6275202 "requestFocus"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Requests focus for this object.  If this object cannot accept
focus, nothing will happen.  Otherwise, the object will attempt
to take focus.
@see #isFocusTraversable
"
	  end

	  operation 6275330 "addFocusListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 342018 // FocusListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Adds the specified focus listener to receive focus events from
this component.

@param l the focus listener
@see #removeFocusListener
"
	  end

	  operation 6275458 "removeFocusListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 342018 // FocusListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Removes the specified focus listener so it no longer receives
focus events from this component.

@param l the focus listener
@see #addFocusListener
"
	  end
	end
      end
    end

    class 861314 "DefaultFocusTraversalPolicy"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A FocusTraversalPolicy that determines traversal order based on the order
of child Components in a Container. From a particular focus cycle root, the
policy makes a pre-order traversal of the Component hierarchy, and traverses
a Container's children according to the ordering of the array returned by
<code>Container.getComponents()</code>. Portions of the hierarchy that are
not visible and displayable will not be searched.
<p>
If client code has explicitly set the focusability of a Component by either
overriding <code>Component.isFocusTraversable()</code> or
<code>Component.isFocusable()</code>, or by calling
<code>Component.setFocusable()</code>, then a DefaultFocusTraversalPolicy
behaves exactly like a ContainerOrderFocusTraversalPolicy. If, however, the
Component is relying on default focusability, then a
DefaultFocusTraversalPolicy will reject all Components with non-focusable
peers. This is the default FocusTraversalPolicy for all AWT Containers.
<p>
The focusability of a peer is implementation-dependent. Sun recommends that
all implementations for a particular native platform construct peers with
the same focusability. The recommendations for Windows and Unix are that
Canvases, Labels, Panels, Scrollbars, ScrollPanes, Windows, and lightweight
Components have non-focusable peers, and all other Components have focusable
peers. These recommendations are used in the Sun AWT implementations. Note
that the focusability of a Component's peer is different from, and does not
impact, the focusability of the Component itself.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author David Mendenhall

@see Container#getComponents
@see Component#isFocusable
@see Component#setFocusable
@since 1.4
"
      classrelation 2905090 // <generalisation>
	relation 2905090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2905090 // <generalisation>
	  b parent class_ref 861058 // ContainerOrderFocusTraversalPolicy
      end

      attribute 1346818 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8876966522510157497L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      operation 6146818 "accept"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether a Component is an acceptable choice as the new
focus owner. The Component must be visible, displayable, and enabled
to be accepted. If client code has explicitly set the focusability
of the Component by either overriding
<code>Component.isFocusTraversable()</code> or
<code>Component.isFocusable()</code>, or by calling
<code>Component.setFocusable()</code>, then the Component will be
accepted if and only if it is focusable. If, however, the Component is
relying on default focusability, then all Canvases, Labels, Panels,
Scrollbars, ScrollPanes, Windows, and lightweight Components will be
rejected.

@param aComponent the Component whose fitness as a focus owner is to
       be tested
@return <code>true</code> if aComponent meets the above requirements;
        <code>false</code> otherwise
"
      end
    end

    class 861442 "DefaultKeyboardFocusManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The default KeyboardFocusManager for AWT applications. Focus traversal is
done in response to a Component's focus traversal keys, and using a
Container's FocusTraversalPolicy.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author David Mendenhall

@see FocusTraversalPolicy
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys
@since 1.4
"
      classrelation 2908674 // <generalisation>
	relation 2908674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2908674 // <generalisation>
	  b parent class_ref 861570 // KeyboardFocusManager
      end

      attribute 1348866 "focusLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.focus.DefaultKeyboardFocusManager\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2908802 // NULL_WINDOW_WR (<unidirectional association>)
	relation 2908802 --->
	  a role_name "NULL_WINDOW_WR" init_value "
        new WeakReference<Window>(null)" class_relation const_relation private
	    comment " null weak references to not create too many objects
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	    classrelation_ref 2908802 // NULL_WINDOW_WR (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 2908930 // NULL_COMPONENT_WR (<unidirectional association>)
	relation 2908930 --->
	  a role_name "NULL_COMPONENT_WR" init_value "
        new WeakReference<Component>(null)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 2908930 // NULL_COMPONENT_WR (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 2909058 // realOppositeWindowWR (<unidirectional association>)
	relation 2909058 --->
	  a role_name "realOppositeWindowWR" init_value " NULL_WINDOW_WR" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window> ${name}${value};
"
	    classrelation_ref 2909058 // realOppositeWindowWR (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 2909186 // realOppositeComponentWR (<unidirectional association>)
	relation 2909186 --->
	  a role_name "realOppositeComponentWR" init_value " NULL_COMPONENT_WR" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component> ${name}${value};
"
	    classrelation_ref 2909186 // realOppositeComponentWR (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      attribute 1348994 "inSendMessage"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2909314 // enqueuedKeyEvents (<unidirectional association>)
	relation 2909314 --->
	  a role_name "enqueuedKeyEvents" init_value " new LinkedList<KeyEvent>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyEvent> ${name}${value};
"
	    classrelation_ref 2909314 // enqueuedKeyEvents (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      class 862594 "TypeAheadMarker"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1349250 "after"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2909570 // untilFocused (<unidirectional association>)
	  relation 2909570 --->
	    a role_name "untilFocused" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2909570 // untilFocused (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 6161026 "TypeAheadMarker"
	  package explicit_return_type ""
	  nparams 2
	    param in name "after" explicit_type "long"
	    param inout name "untilFocused" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6161154 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns string representation of the marker
"
	end
      end

      classrelation 2909442 // typeAheadMarkers (<unidirectional association>)
	relation 2909442 --->
	  a role_name "typeAheadMarkers" init_value " new LinkedList<TypeAheadMarker>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TypeAheadMarker> ${name}${value};
"
	    classrelation_ref 2909442 // typeAheadMarkers (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      attribute 1349122 "consumeNextKeyTyped"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 148866 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setDefaultKeyboardFocusManagerAccessor(
            new AWTAccessor.DefaultKeyboardFocusManagerAccessor() {
                public void consumeNextKeyTyped(DefaultKeyboardFocusManager dkfm, KeyEvent e) {
                    dkfm.consumeNextKeyTyped(e);
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6161282 "getOwningFrameDialog"
	private return_type class_ref 347394 // Window
	nparams 1
	  param inout name "window" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6161410 "restoreFocus"
	private explicit_return_type "void"
	nparams 2
	  param inout name "fe" type class_ref 346370 // FocusEvent
	  param inout name "newFocusedWindow" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This series of restoreFocus methods is used for recovering from a
rejected focus or activation change. Rejections typically occur when
the user attempts to focus a non-focusable Component or Window.
"
      end

      operation 6161538 "restoreFocus"
	private explicit_return_type "void"
	nparams 1
	  param inout name "we" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6161666 "restoreFocus"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "aWindow" type class_ref 347394 // Window
	  param inout name "vetoedComponent" type class_ref 338818 // Component
	  param inout name "clearOnFailure" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6161794 "restoreFocus"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "toFocus" type class_ref 338818 // Component
	  param inout name "clearOnFailure" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6161922 "doRestoreFocus"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "toFocus" type class_ref 338818 // Component
	  param inout name "vetoedComponent" type class_ref 338818 // Component
	  param inout name "clearOnFailure" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 862722 "DefaultKeyboardFocusManagerSentEvent"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2910082 // <generalisation>
	  relation 2910082 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2910082 // <generalisation>
	    b parent class_ref 862850 // SentEvent
	end

	attribute 1349890 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -2924743257508701758L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "serialVersionUID

"
	end

	operation 6162690 "DefaultKeyboardFocusManagerSentEvent"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "nested" type class_ref 339202 // AWTEvent
	    param inout name "toNotify" explicit_type "AppContext"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6162818 "dispatch"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6162946 "sendMessage"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "target" type class_ref 338818 // Component
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a synthetic AWTEvent to a Component. If the Component is in
the current AppContext, then the event is immediately dispatched.
If the Component is in a different AppContext, then the event is
posted to the other AppContext's EventQueue, and this method blocks
until the event is handled or target AppContext is disposed.
Returns true if successfuly dispatched event, false if failed
to dispatch.
"
      end

      operation 6163074 "repostIfFollowsKeyEvents"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 423938 // WindowEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the focus window event follows key events waiting in the type-ahead
queue (if any). This may happen when a user types ahead in the window, the client
listeners hang EDT for a while, and the user switches b/w toplevels. In that
case the focus window events may be dispatched before the type-ahead events
get handled. This may lead to wrong focus behavior and in order to avoid it,
the focus window events are reposted to the end of the event queue. See 6981400.
"
      end

      operation 6163202 "dispatchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the AWT event dispatcher requesting that the
current KeyboardFocusManager dispatch the specified event on its behalf.
DefaultKeyboardFocusManagers dispatch all FocusEvents, all WindowEvents
related to focus, and all KeyEvents. These events are dispatched based
on the KeyboardFocusManager's notion of the focus owner and the focused
and active Windows, sometimes overriding the source of the specified
AWTEvent. If this method returns <code>false</code>, then the AWT event
dispatcher will attempt to dispatch the event itself.

@param e the AWTEvent to be dispatched
@return <code>true</code> if this method dispatched the event;
        <code>false</code> otherwise
"
      end

      operation 6163330 "dispatchKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by <code>dispatchEvent</code> if no other
KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or
if no other KeyEventDispatchers are registered. If the event has not
been consumed, its target is enabled, and the focus owner is not null,
this method dispatches the event to its target. This method will also
subsequently dispatch the event to all registered
KeyEventPostProcessors. After all this operations are finished,
the event is passed to peers for processing.
<p>
In all cases, this method returns <code>true</code>, since
DefaultKeyboardFocusManager is designed so that neither
<code>dispatchEvent</code>, nor the AWT event dispatcher, should take
further action on the event in any situation.

@param e the KeyEvent to be dispatched
@return <code>true</code>
@see Component#dispatchEvent
"
      end

      operation 6163458 "postProcessKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called by <code>dispatchKeyEvent</code>. It will
handle any unconsumed KeyEvents that map to an AWT
<code>MenuShortcut</code> by consuming the event and activating the
shortcut.

@param e the KeyEvent to post-process
@return <code>true</code>
@see #dispatchKeyEvent
@see MenuShortcut
"
      end

      operation 6163586 "pumpApprovedKeyEvents"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6163714 "dumpMarkers"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the list of type-ahead queue markers to stderr
"
      end

      operation 6163842 "typeAheadAssertions"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "target" type class_ref 338818 // Component
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6163970 "hasMarker"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there are some marker associated with component <code>comp</code>
in a markers' queue
@since 1.5
"
      end

      operation 6164098 "clearMarkers"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears markers queue
@since 1.5
"
      end

      operation 6164226 "preDispatchKeyEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "ke" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6164354 "consumeNextKeyTyped"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param e is a KEY_PRESSED event that can be used
         to track the next KEY_TYPED related.
"
      end

      operation 6164482 "consumeTraversalKey"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6164610 "consumeProcessedKeyEvent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "return true if event was consumed
"
      end

      operation 6164738 "processKeyEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "focusedComponent" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method initiates a focus traversal operation if and only if the
KeyEvent represents a focus traversal key for the specified
focusedComponent. It is expected that focusedComponent is the current
focus owner, although this need not be the case. If it is not,
focus traversal will nevertheless proceed as if focusedComponent
were the focus owner.

@param focusedComponent the Component that is the basis for a focus
       traversal operation if the specified event represents a focus
       traversal key for the Component
@param e the event that may represent a focus traversal key
"
      end

      operation 6164866 "enqueueKeyEvents"
	protected explicit_return_type "void"
	nparams 2
	  param in name "after" explicit_type "long"
	  param inout name "untilFocused" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delays dispatching of KeyEvents until the specified Component becomes
the focus owner. KeyEvents with timestamps later than the specified
timestamp will be enqueued until the specified Component receives a
FOCUS_GAINED event, or the AWT cancels the delay request by invoking
<code>dequeueKeyEvents</code> or <code>discardKeyEvents</code>.

@param after timestamp of current event, or the current, system time if
       the current event has no timestamp, or the AWT cannot determine
       which event is currently being handled
@param untilFocused Component which will receive a FOCUS_GAINED event
       before any pending KeyEvents
@see #dequeueKeyEvents
@see #discardKeyEvents
"
      end

      operation 6164994 "dequeueKeyEvents"
	protected explicit_return_type "void"
	nparams 2
	  param in name "after" explicit_type "long"
	  param inout name "untilFocused" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases for normal dispatching to the current focus owner all
KeyEvents which were enqueued because of a call to
<code>enqueueKeyEvents</code> with the same timestamp and Component.
If the given timestamp is less than zero, the outstanding enqueue
request for the given Component with the <b>oldest</b> timestamp (if
any) should be cancelled.

@param after the timestamp specified in the call to
       <code>enqueueKeyEvents</code>, or any value &lt; 0
@param untilFocused the Component specified in the call to
       <code>enqueueKeyEvents</code>
@see #enqueueKeyEvents
@see #discardKeyEvents
"
      end

      operation 6165122 "discardKeyEvents"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Discards all KeyEvents which were enqueued because of one or more calls
to <code>enqueueKeyEvents</code> with the specified Component, or one of
its descendants.

@param comp the Component specified in one or more calls to
       <code>enqueueKeyEvents</code>, or a parent of such a Component
@see #enqueueKeyEvents
@see #dequeueKeyEvents
"
      end

      operation 6165250 "purgeStampedEvents"
	private explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "long"
	  param in name "end" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notes:
   * must be called inside a synchronized block
   * if 'start' is < 0, then this function does nothing
   * if 'end' is < 0, then all KeyEvents from 'start' to the end of the
     queue will be removed"
      end

      operation 6165378 "focusPreviousComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component before aComponent, typically based on a
FocusTraversalPolicy.

@param aComponent the Component that is the basis for the focus
       traversal operation
@see FocusTraversalPolicy
@see Component#transferFocusBackward
"
      end

      operation 6165506 "focusNextComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component after aComponent, typically based on a
FocusTraversalPolicy.

@param aComponent the Component that is the basis for the focus
       traversal operation
@see FocusTraversalPolicy
@see Component#transferFocus
"
      end

      operation 6165634 "upFocusCycle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus up one focus traversal cycle. Typically, the focus owner
is set to aComponent's focus cycle root, and the current focus cycle
root is set to the new focus owner's focus cycle root. If, however,
aComponent's focus cycle root is a Window, then the focus owner is set
to the focus cycle root's default Component to focus, and the current
focus cycle root is unchanged.

@param aComponent the Component that is the basis for the focus
       traversal operation
@see Component#transferFocusUpCycle
"
      end

      operation 6165762 "downFocusCycle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus down one focus traversal cycle. If aContainer is a focus
cycle root, then the focus owner is set to aContainer's default
Component to focus, and the current focus cycle root is set to
aContainer. If aContainer is not a focus cycle root, then no focus
traversal operation occurs.

@param aContainer the Container that is the basis for the focus
       traversal operation
@see Container#transferFocusDownCycle
"
      end
    end

    class 861570 "KeyboardFocusManager"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The KeyboardFocusManager is responsible for managing the active and focused
Windows, and the current focus owner. The focus owner is defined as the
Component in an application that will typically receive all KeyEvents
generated by the user. The focused Window is the Window that is, or
contains, the focus owner. Only a Frame or a Dialog can be the active
Window. The native windowing system may denote the active Window or its
children with special decorations, such as a highlighted title bar. The
active Window is always either the focused Window, or the first Frame or
Dialog that is an owner of the focused Window.
<p>
The KeyboardFocusManager is both a centralized location for client code to
query for the focus owner and initiate focus changes, and an event
dispatcher for all FocusEvents, WindowEvents related to focus, and
KeyEvents.
<p>
Some browsers partition applets in different code bases into separate
contexts, and establish walls between these contexts. In such a scenario,
there will be one KeyboardFocusManager per context. Other browsers place all
applets into the same context, implying that there will be only a single,
global KeyboardFocusManager for all applets. This behavior is
implementation-dependent. Consult your browser's documentation for more
information. No matter how many contexts there may be, however, there can
never be more than one focus owner, focused Window, or active Window, per
ClassLoader.
<p>
Please see
<a href=\"https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html\">
How to Use the Focus Subsystem</a>,
a section in <em>The Java Tutorial</em>, and the
<a href=\"../../java/awt/doc-files/FocusSpec.html\">Focus Specification</a>
for more information.

@author David Mendenhall

@see Window
@see Frame
@see Dialog
@see java.awt.event.FocusEvent
@see java.awt.event.WindowEvent
@see java.awt.event.KeyEvent
@since 1.4
"
      classrelation 2905218 // <realization>
	relation 2905218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2905218 // <realization>
	  b parent class_ref 861698 // KeyEventDispatcher
      end

      classrelation 2905346 // <realization>
	relation 2905346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2905346 // <realization>
	  b parent class_ref 471170 // KeyEventPostProcessor
      end

      attribute 1346946 "focusLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.focus.KeyboardFocusManager\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Shared focus engine logger
"
      end

      extra_member 148738 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
        AWTAccessor.setKeyboardFocusManagerAccessor(
            new AWTAccessor.KeyboardFocusManagerAccessor() {
                public int shouldNativelyFocusHeavyweight(Component heavyweight,
                                                   Component descendant,
                                                   boolean temporary,
                                                   boolean focusedWindowChangeAllowed,
                                                   long time,
                                                   CausedFocusEvent.Cause cause)
                {
                    return KeyboardFocusManager.shouldNativelyFocusHeavyweight(
                        heavyweight, descendant, temporary, focusedWindowChangeAllowed, time, cause);
                }
                public boolean processSynchronousLightweightTransfer(Component heavyweight,
                                                              Component descendant,
                                                              boolean temporary,
                                                              boolean focusedWindowChangeAllowed,
                                                              long time)
                {
                    return KeyboardFocusManager.processSynchronousLightweightTransfer(
                        heavyweight, descendant, temporary, focusedWindowChangeAllowed, time);
                }
                public void removeLastFocusRequest(Component heavyweight) {
                    KeyboardFocusManager.removeLastFocusRequest(heavyweight);
                }
                public void setMostRecentFocusOwner(Window window, Component component) {
                    KeyboardFocusManager.setMostRecentFocusOwner(window, component);
                }
                public KeyboardFocusManager getCurrentKeyboardFocusManager(AppContext ctx) {
                    return KeyboardFocusManager.getCurrentKeyboardFocusManager(ctx);
                }
                public Container getCurrentFocusCycleRoot() {
                    return KeyboardFocusManager.currentFocusCycleRoot;
                }
            }
        );
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2905474 // peer (<unidirectional association>)
	relation 2905474 --->
	  a role_name "peer" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2905474 // peer (<unidirectional association>)
	  b parent class_ref 861826 // KeyboardFocusManagerPeer
      end

      operation 6147074 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      attribute 1347074 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.KeyboardFocusManager\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1347202 "FORWARD_TRAVERSAL_KEYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the Forward focus traversal keys.

@see #setDefaultFocusTraversalKeys
@see #getDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys

"
      end

      attribute 1347330 "BACKWARD_TRAVERSAL_KEYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the Backward focus traversal keys.

@see #setDefaultFocusTraversalKeys
@see #getDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys

"
      end

      attribute 1347458 "UP_CYCLE_TRAVERSAL_KEYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the Up Cycle focus traversal keys.

@see #setDefaultFocusTraversalKeys
@see #getDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys

"
      end

      attribute 1347586 "DOWN_CYCLE_TRAVERSAL_KEYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The identifier for the Down Cycle focus traversal keys.

@see #setDefaultFocusTraversalKeys
@see #getDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys

"
      end

      attribute 1347714 "TRAVERSAL_KEY_LENGTH"
	class_attribute const_attribute package explicit_type "int"
	init_value " DOWN_CYCLE_TRAVERSAL_KEYS + 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6147202 "getCurrentKeyboardFocusManager"
	class_operation public return_type class_ref 861570 // KeyboardFocusManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current KeyboardFocusManager instance for the calling
thread's context.

@return this thread's context's KeyboardFocusManager
@see #setCurrentKeyboardFocusManager
"
      end

      operation 6147330 "getCurrentKeyboardFocusManager"
	class_operation package return_type class_ref 861570 // KeyboardFocusManager
	nparams 1
	  param inout name "appcontext" explicit_type "AppContext"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6147458 "setCurrentKeyboardFocusManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newManager" type class_ref 861570 // KeyboardFocusManager
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current KeyboardFocusManager instance for the calling thread's
context. If null is specified, then the current KeyboardFocusManager
is replaced with a new instance of DefaultKeyboardFocusManager.
<p>
If a SecurityManager is installed, the calling thread must be granted
the AWTPermission \"replaceKeyboardFocusManager\" in order to replace the
the current KeyboardFocusManager. If this permission is not granted,
this method will throw a SecurityException, and the current
KeyboardFocusManager will be unchanged.

@param newManager the new KeyboardFocusManager for this thread's context
@see #getCurrentKeyboardFocusManager
@see DefaultKeyboardFocusManager
@throws SecurityException if the calling thread does not have permission
        to replace the current KeyboardFocusManager
"
      end

      classrelation 2905602 // focusOwner (<unidirectional association>)
	relation 2905602 --->
	  a role_name "focusOwner" class_relation private
	    comment "
The Component in an application that will typically receive all
KeyEvents generated by the user.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2905602 // focusOwner (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2905730 // permanentFocusOwner (<unidirectional association>)
	relation 2905730 --->
	  a role_name "permanentFocusOwner" class_relation private
	    comment "
The Component in an application that will regain focus when an
outstanding temporary focus transfer has completed, or the focus owner,
if no outstanding temporary transfer exists.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2905730 // permanentFocusOwner (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2905858 // focusedWindow (<unidirectional association>)
	relation 2905858 --->
	  a role_name "focusedWindow" class_relation private
	    comment "
The Window which is, or contains, the focus owner.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2905858 // focusedWindow (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      classrelation 2905986 // activeWindow (<unidirectional association>)
	relation 2905986 --->
	  a role_name "activeWindow" class_relation private
	    comment "
Only a Frame or a Dialog can be the active Window. The native windowing
system may denote the active Window with a special decoration, such as a
highlighted title bar. The active Window is always either the focused
Window, or the first Frame or Dialog which is an owner of the focused
Window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2905986 // activeWindow (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      classrelation 2906114 // defaultPolicy (<unidirectional association>)
	relation 2906114 --->
	  a role_name "defaultPolicy" init_value "
        new DefaultFocusTraversalPolicy()" private
	    comment "
The default FocusTraversalPolicy for all Windows that have no policy of
their own set. If those Windows have focus-cycle-root children that have
no keyboard-traversal policy of their own, then those children will also
inherit this policy (as will, recursively, their focus-cycle-root
children).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2906114 // defaultPolicy (<unidirectional association>)
	  b parent class_ref 349954 // FocusTraversalPolicy
      end

      classrelation 2906242 // defaultFocusTraversalKeyPropertyNames (<unidirectional association>)
	relation 2906242 --->
	  a role_name "defaultFocusTraversalKeyPropertyNames" multiplicity "[]" init_value " {
        \"forwardDefaultFocusTraversalKeys\",
        \"backwardDefaultFocusTraversalKeys\",
        \"upCycleDefaultFocusTraversalKeys\",
        \"downCycleDefaultFocusTraversalKeys\"
    }" class_relation const_relation private
	    comment "
The bound property names of each focus traversal key.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2906242 // defaultFocusTraversalKeyPropertyNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2906370 // defaultFocusTraversalKeyStrokes (<unidirectional association>)
	relation 2906370 --->
	  a role_name "defaultFocusTraversalKeyStrokes" multiplicity "[][]" init_value " {
        {
            AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, 0, false),
            AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, InputEvent.CTRL_DOWN_MASK | InputEvent.CTRL_MASK, false),
        },
        {
            AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, InputEvent.SHIFT_DOWN_MASK | InputEvent.SHIFT_MASK, false),
            AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB,
                                         InputEvent.SHIFT_DOWN_MASK | InputEvent.SHIFT_MASK | InputEvent.CTRL_DOWN_MASK | InputEvent.CTRL_MASK,
                                         false),
        },
        {},
        {},
      }" class_relation const_relation private
	    comment "
The default strokes for initializing the default focus traversal keys.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2906370 // defaultFocusTraversalKeyStrokes (<unidirectional association>)
	  b parent class_ref 341506 // AWTKeyStroke
      end

      classrelation 2906498 // defaultFocusTraversalKeys (<unidirectional association>)
	relation 2906498 --->
	  a role_name "defaultFocusTraversalKeys" multiplicity "[]" init_value " new Set[4]" private
	    comment "
The default focus traversal keys. Each array of traversal keys will be
in effect on all Windows that have no such array of their own explicitly
set. Each array will also be inherited, recursively, by any child
Component of those Windows that has no such array of its own explicitly
set.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTKeyStroke>${multiplicity} ${name}${value};
"
	    classrelation_ref 2906498 // defaultFocusTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 2906626 // currentFocusCycleRoot (<unidirectional association>)
	relation 2906626 --->
	  a role_name "currentFocusCycleRoot" class_relation private
	    comment "
The current focus cycle root. If the focus owner is itself a focus cycle
root, then it may be ambiguous as to which Components represent the next
and previous Components to focus during normal focus traversal. In that
case, the current focus cycle root is used to differentiate among the
possibilities.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2906626 // currentFocusCycleRoot (<unidirectional association>)
	  b parent class_ref 338690 // Container
      end

      classrelation 2906754 // vetoableSupport (<unidirectional association>)
	relation 2906754 --->
	  a role_name "vetoableSupport" private
	    comment "
A description of any VetoableChangeListeners which have been registered.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2906754 // vetoableSupport (<unidirectional association>)
	  b parent class_ref 356994 // VetoableChangeSupport
      end

      classrelation 2906882 // changeSupport (<unidirectional association>)
	relation 2906882 --->
	  a role_name "changeSupport" private
	    comment "
A description of any PropertyChangeListeners which have been registered.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2906882 // changeSupport (<unidirectional association>)
	  b parent class_ref 343042 // PropertyChangeSupport
      end

      classrelation 2907010 // keyEventDispatchers (<unidirectional association>)
	relation 2907010 --->
	  a role_name "keyEventDispatchers" private
	    comment "
This KeyboardFocusManager's KeyEventDispatcher chain. The List does not
include this KeyboardFocusManager unless it was explicitly re-registered
via a call to <code>addKeyEventDispatcher</code>. If no other
KeyEventDispatchers are registered, this field may be null or refer to
a List of length 0.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyEventDispatcher> ${name}${value};
"
	    classrelation_ref 2907010 // keyEventDispatchers (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      classrelation 2907138 // keyEventPostProcessors (<unidirectional association>)
	relation 2907138 --->
	  a role_name "keyEventPostProcessors" private
	    comment "
This KeyboardFocusManager's KeyEventPostProcessor chain. The List does
not include this KeyboardFocusManager unless it was explicitly
re-registered via a call to <code>addKeyEventPostProcessor</code>.
If no other KeyEventPostProcessors are registered, this field may be
null or refer to a List of length 0.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyEventPostProcessor> ${name}${value};
"
	    classrelation_ref 2907138 // keyEventPostProcessors (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      classrelation 2907266 // mostRecentFocusOwners (<unidirectional association>)
	relation 2907266 --->
	  a role_name "mostRecentFocusOwners" init_value " new WeakHashMap<>()" class_relation private
	    comment "
Maps Windows to those Windows' most recent focus owners.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Window, WeakReference<Component>> ${name}${value};
"
	    classrelation_ref 2907266 // mostRecentFocusOwners (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2907394 // replaceKeyboardFocusManagerPermission (<unidirectional association>)
	relation 2907394 --->
	  a role_name "replaceKeyboardFocusManagerPermission" class_relation private
	    comment "
We cache the permission used to verify that the calling thread is
permitted to access the global focus state.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2907394 // replaceKeyboardFocusManagerPermission (<unidirectional association>)
	  b parent class_ref 857602 // AWTPermission
      end

      classrelation 2907522 // currentSequencedEvent (<unidirectional association>)
	relation 2907522 --->
	  a role_name "currentSequencedEvent" init_value " null" package
	    comment "
SequencedEvent which is currently dispatched in AppContext.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2907522 // currentSequencedEvent (<unidirectional association>)
	  b parent class_ref 861954 // SequencedEvent
      end

      operation 6147586 "setCurrentSequencedEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "current" type class_ref 861954 // SequencedEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6147714 "getCurrentSequencedEvent"
	package return_type class_ref 861954 // SequencedEvent
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6147842 "initFocusTraversalKeysSet"
	class_operation package return_type class_ref 192258 // Set
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param inout name "targetSet" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}, ${t1}<AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6147970 "KeyboardFocusManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a KeyboardFocusManager.
"
      end

      operation 6148098 "initPeer"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6148226 "getFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the focus owner, if the focus owner is in the same context as
the calling thread. The focus owner is defined as the Component in an
application that will typically receive all KeyEvents generated by the
user. KeyEvents which map to the focus owner's focus traversal keys will
not be delivered if focus traversal keys are enabled for the focus
owner. In addition, KeyEventDispatchers may retarget or consume
KeyEvents before they reach the focus owner.

@return the focus owner, or null if the focus owner is not a member of
        the calling thread's context
@see #getGlobalFocusOwner
@see #setGlobalFocusOwner
"
      end

      operation 6148354 "getGlobalFocusOwner"
	protected return_type class_ref 338818 // Component
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the focus owner, even if the calling thread is in a different
context than the focus owner. The focus owner is defined as the
Component in an application that will typically receive all KeyEvents
generated by the user. KeyEvents which map to the focus owner's focus
traversal keys will not be delivered if focus traversal keys are enabled
for the focus owner. In addition, KeyEventDispatchers may retarget or
consume KeyEvents before they reach the focus owner.
<p>
This method will throw a SecurityException if this KeyboardFocusManager
is not the current KeyboardFocusManager for the calling thread's
context.

@return the focus owner
@see #getFocusOwner
@see #setGlobalFocusOwner
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
"
      end

      operation 6148482 "setGlobalFocusOwner"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "focusOwner" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focus owner. The operation will be cancelled if the Component
is not focusable. The focus owner is defined as the Component in an
application that will typically receive all KeyEvents generated by the
user. KeyEvents which map to the focus owner's focus traversal keys will
not be delivered if focus traversal keys are enabled for the focus
owner. In addition, KeyEventDispatchers may retarget or consume
KeyEvents before they reach the focus owner.
<p>
This method does not actually set the focus to the specified Component.
It merely stores the value to be subsequently returned by
<code>getFocusOwner()</code>. Use <code>Component.requestFocus()</code>
or <code>Component.requestFocusInWindow()</code> to change the focus
owner, subject to platform limitations.

@param focusOwner the focus owner
@see #getFocusOwner
@see #getGlobalFocusOwner
@see Component#requestFocus()
@see Component#requestFocusInWindow()
@see Component#isFocusable
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
@beaninfo
      bound: true
"
      end

      operation 6148610 "clearFocusOwner"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the focus owner at both the Java and native levels if the
focus owner exists and resides in the same context as the calling thread,
otherwise the method returns silently.
<p>
The focus owner component will receive a permanent FOCUS_LOST event.
After this operation completes, the native windowing system will discard
all user-generated KeyEvents until the user selects a new Component to
receive focus, or a Component is given focus explicitly via a call to
{@code requestFocus()}. This operation does not change the focused or
active Windows.

@see Component#requestFocus()
@see java.awt.event.FocusEvent#FOCUS_LOST
@since 1.8
"
      end

      operation 6148738 "clearGlobalFocusOwner"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the global focus owner at both the Java and native levels. If
there exists a focus owner, that Component will receive a permanent
FOCUS_LOST event. After this operation completes, the native windowing
system will discard all user-generated KeyEvents until the user selects
a new Component to receive focus, or a Component is given focus
explicitly via a call to <code>requestFocus()</code>. This operation
does not change the focused or active Windows.
<p>
If a SecurityManager is installed, the calling thread must be granted
the \"replaceKeyboardFocusManager\" AWTPermission. If this permission is
not granted, this method will throw a SecurityException, and the current
focus owner will not be cleared.
<p>
This method is intended to be used only by KeyboardFocusManager set as
current KeyboardFocusManager for the calling thread's context. It is not
for general client use.

@see KeyboardFocusManager#clearFocusOwner
@see Component#requestFocus()
@see java.awt.event.FocusEvent#FOCUS_LOST
@throws SecurityException if the calling thread does not have
        \"replaceKeyboardFocusManager\" permission
"
      end

      operation 6148866 "_clearGlobalFocusOwner"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6148994 "clearGlobalFocusOwnerPriv"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6149122 "getNativeFocusOwner"
	package return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6149250 "setNativeFocusOwner"
	package explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6149378 "getNativeFocusedWindow"
	package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6149506 "getPermanentFocusOwner"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the permanent focus owner, if the permanent focus owner is in
the same context as the calling thread. The permanent focus owner is
defined as the last Component in an application to receive a permanent
FOCUS_GAINED event. The focus owner and permanent focus owner are
equivalent unless a temporary focus change is currently in effect. In
such a situation, the permanent focus owner will again be the focus
owner when the temporary focus change ends.

@return the permanent focus owner, or null if the permanent focus owner
        is not a member of the calling thread's context
@see #getGlobalPermanentFocusOwner
@see #setGlobalPermanentFocusOwner
"
      end

      operation 6149634 "getGlobalPermanentFocusOwner"
	protected return_type class_ref 338818 // Component
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the permanent focus owner, even if the calling thread is in a
different context than the permanent focus owner. The permanent focus
owner is defined as the last Component in an application to receive a
permanent FOCUS_GAINED event. The focus owner and permanent focus owner
are equivalent unless a temporary focus change is currently in effect.
In such a situation, the permanent focus owner will again be the focus
owner when the temporary focus change ends.

@return the permanent focus owner
@see #getPermanentFocusOwner
@see #setGlobalPermanentFocusOwner
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
"
      end

      operation 6149762 "setGlobalPermanentFocusOwner"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "permanentFocusOwner" type class_ref 338818 // Component
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the permanent focus owner. The operation will be cancelled if the
Component is not focusable. The permanent focus owner is defined as the
last Component in an application to receive a permanent FOCUS_GAINED
event. The focus owner and permanent focus owner are equivalent unless
a temporary focus change is currently in effect. In such a situation,
the permanent focus owner will again be the focus owner when the
temporary focus change ends.
<p>
This method does not actually set the focus to the specified Component.
It merely stores the value to be subsequently returned by
<code>getPermanentFocusOwner()</code>. Use
<code>Component.requestFocus()</code> or
<code>Component.requestFocusInWindow()</code> to change the focus owner,
subject to platform limitations.

@param permanentFocusOwner the permanent focus owner
@see #getPermanentFocusOwner
@see #getGlobalPermanentFocusOwner
@see Component#requestFocus()
@see Component#requestFocusInWindow()
@see Component#isFocusable
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
@beaninfo
      bound: true
"
      end

      operation 6149890 "getFocusedWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the focused Window, if the focused Window is in the same context
as the calling thread. The focused Window is the Window that is or
contains the focus owner.

@return the focused Window, or null if the focused Window is not a
        member of the calling thread's context
@see #getGlobalFocusedWindow
@see #setGlobalFocusedWindow
"
      end

      operation 6150018 "getGlobalFocusedWindow"
	protected return_type class_ref 347394 // Window
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the focused Window, even if the calling thread is in a different
context than the focused Window. The focused Window is the Window that
is or contains the focus owner.

@return the focused Window
@see #getFocusedWindow
@see #setGlobalFocusedWindow
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
"
      end

      operation 6150146 "setGlobalFocusedWindow"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "focusedWindow" type class_ref 347394 // Window
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the focused Window. The focused Window is the Window that is or
contains the focus owner. The operation will be cancelled if the
specified Window to focus is not a focusable Window.
<p>
This method does not actually change the focused Window as far as the
native windowing system is concerned. It merely stores the value to be
subsequently returned by <code>getFocusedWindow()</code>. Use
<code>Component.requestFocus()</code> or
<code>Component.requestFocusInWindow()</code> to change the focused
Window, subject to platform limitations.

@param focusedWindow the focused Window
@see #getFocusedWindow
@see #getGlobalFocusedWindow
@see Component#requestFocus()
@see Component#requestFocusInWindow()
@see Window#isFocusableWindow
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
@beaninfo
      bound: true
"
      end

      operation 6150274 "getActiveWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the active Window, if the active Window is in the same context
as the calling thread. Only a Frame or a Dialog can be the active
Window. The native windowing system may denote the active Window or its
children with special decorations, such as a highlighted title bar.
The active Window is always either the focused Window, or the first
Frame or Dialog that is an owner of the focused Window.

@return the active Window, or null if the active Window is not a member
        of the calling thread's context
@see #getGlobalActiveWindow
@see #setGlobalActiveWindow
"
      end

      operation 6150402 "getGlobalActiveWindow"
	protected return_type class_ref 347394 // Window
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the active Window, even if the calling thread is in a different
context than the active Window. Only a Frame or a Dialog can be the
active Window. The native windowing system may denote the active Window
or its children with special decorations, such as a highlighted title
bar. The active Window is always either the focused Window, or the first
Frame or Dialog that is an owner of the focused Window.

@return the active Window
@see #getActiveWindow
@see #setGlobalActiveWindow
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
"
      end

      operation 6150530 "setGlobalActiveWindow"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "activeWindow" type class_ref 347394 // Window
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the active Window. Only a Frame or a Dialog can be the active
Window. The native windowing system may denote the active Window or its
children with special decorations, such as a highlighted title bar. The
active Window is always either the focused Window, or the first Frame or
Dialog that is an owner of the focused Window.
<p>
This method does not actually change the active Window as far as the
native windowing system is concerned. It merely stores the value to be
subsequently returned by <code>getActiveWindow()</code>. Use
<code>Component.requestFocus()</code> or
<code>Component.requestFocusInWindow()</code>to change the active
Window, subject to platform limitations.

@param activeWindow the active Window
@see #getActiveWindow
@see #getGlobalActiveWindow
@see Component#requestFocus()
@see Component#requestFocusInWindow()
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
@beaninfo
      bound: true
"
      end

      operation 6150658 "getDefaultFocusTraversalPolicy"
	public return_type class_ref 349954 // FocusTraversalPolicy
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default FocusTraversalPolicy. Top-level components
use this value on their creation to initialize their own focus traversal
policy by explicit call to Container.setFocusTraversalPolicy.

@return the default FocusTraversalPolicy. null will never be returned.
@see #setDefaultFocusTraversalPolicy
@see Container#setFocusTraversalPolicy
@see Container#getFocusTraversalPolicy
"
      end

      operation 6150786 "setDefaultFocusTraversalPolicy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultPolicy" type class_ref 349954 // FocusTraversalPolicy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default FocusTraversalPolicy. Top-level components
use this value on their creation to initialize their own focus traversal
policy by explicit call to Container.setFocusTraversalPolicy.
Note: this call doesn't affect already created components as they have
their policy initialized. Only new components will use this policy as
their default policy.

@param defaultPolicy the new, default FocusTraversalPolicy
@see #getDefaultFocusTraversalPolicy
@see Container#setFocusTraversalPolicy
@see Container#getFocusTraversalPolicy
@throws IllegalArgumentException if defaultPolicy is null
@beaninfo
      bound: true
"
      end

      operation 6150914 "setDefaultFocusTraversalKeys"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "keystrokes" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends AWTKeyStroke> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default focus traversal keys for a given traversal operation.
This traversal key {@code Set} will be in effect on all
{@code Window}s that have no such {@code Set} of
their own explicitly defined. This {@code Set} will also be
inherited, recursively, by any child {@code Component} of
those {@code Windows} that has
no such {@code Set} of its own explicitly defined.
<p>
The default values for the default focus traversal keys are
implementation-dependent. Sun recommends that all implementations for a
particular native platform use the same default values. The
recommendations for Windows and Unix are listed below. These
recommendations are used in the Sun AWT implementations.

<table border=1 summary=\"Recommended default values for focus traversal keys\">
<tr>
   <th>Identifier</th>
   <th>Meaning</th>
   <th>Default</th>
</tr>
<tr>
   <td>{@code KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS}</td>
   <td>Normal forward keyboard traversal</td>
   <td>{@code TAB} on {@code KEY_PRESSED},
       {@code CTRL-TAB} on {@code KEY_PRESSED}</td>
</tr>
<tr>
   <td>{@code KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS}</td>
   <td>Normal reverse keyboard traversal</td>
   <td>{@code SHIFT-TAB} on {@code KEY_PRESSED},
       {@code CTRL-SHIFT-TAB} on {@code KEY_PRESSED}</td>
</tr>
<tr>
   <td>{@code KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS}</td>
   <td>Go up one focus traversal cycle</td>
   <td>none</td>
</tr>
<tr>
   <td>{@code KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS}</td>
   <td>Go down one focus traversal cycle</td>
   <td>none</td>
</tr>
</table>

To disable a traversal key, use an empty {@code Set};
{@code Collections.EMPTY_SET} is recommended.
<p>
Using the {@code AWTKeyStroke} API, client code can
specify on which of two
specific {@code KeyEvent}s, {@code KEY_PRESSED} or
{@code KEY_RELEASED}, the focus traversal operation will
occur. Regardless of which {@code KeyEvent} is specified,
however, all {@code KeyEvent}s related to the focus
traversal key, including the associated {@code KEY_TYPED}
event, will be consumed, and will not be dispatched
to any {@code Component}. It is a runtime error to
specify a {@code KEY_TYPED} event as
mapping to a focus traversal operation, or to map the same event to
multiple default focus traversal operations.
<p>
This method may throw a {@code ClassCastException} if any {@code Object}
in {@code keystrokes} is not an {@code AWTKeyStroke}.

@param id one of
       {@code KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS},
       {@code KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS},
       {@code KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS}, or
       {@code KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS}
@param keystrokes the Set of {@code AWTKeyStroke}s for the
       specified operation
@see #getDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys
@throws IllegalArgumentException if id is not one of
        {@code KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS},
        {@code KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS},
        {@code KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS}, or
        {@code KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS},
        or if keystrokes is {@code null},
        or if keystrokes contains {@code null},
        or if any keystroke
        represents a {@code KEY_TYPED} event,
        or if any keystroke already maps
        to another default focus traversal operation
@beaninfo
      bound: true
"
      end

      operation 6151042 "getDefaultFocusTraversalKeys"
	public return_type class_ref 192258 // Set
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<AWTKeyStroke> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Set of default focus traversal keys for a given traversal
operation. This traversal key Set will be in effect on all Windows that
have no such Set of their own explicitly defined. This Set will also be
inherited, recursively, by any child Component of those Windows that has
no such Set of its own explicitly defined. (See
<code>setDefaultFocusTraversalKeys</code> for a full description of each
operation.)

@param id one of KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
       KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
       KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
@return the <code>Set</code> of <code>AWTKeyStroke</code>s
        for the specified operation; the <code>Set</code>
        will be unmodifiable, and may be empty; <code>null</code>
        will never be returned
@see #setDefaultFocusTraversalKeys
@see Component#setFocusTraversalKeys
@see Component#getFocusTraversalKeys
@throws IllegalArgumentException if id is not one of
        KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS,
        KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS, or
        KeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYS
"
      end

      operation 6151170 "getCurrentFocusCycleRoot"
	public return_type class_ref 338690 // Container
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current focus cycle root, if the current focus cycle root is
in the same context as the calling thread. If the focus owner is itself
a focus cycle root, then it may be ambiguous as to which Components
represent the next and previous Components to focus during normal focus
traversal. In that case, the current focus cycle root is used to
differentiate among the possibilities.
<p>
This method is intended to be used only by KeyboardFocusManagers and
focus implementations. It is not for general client use.

@return the current focus cycle root, or null if the current focus cycle
        root is not a member of the calling thread's context
@see #getGlobalCurrentFocusCycleRoot
@see #setGlobalCurrentFocusCycleRoot
"
      end

      operation 6151298 "getGlobalCurrentFocusCycleRoot"
	protected return_type class_ref 338690 // Container
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current focus cycle root, even if the calling thread is in a
different context than the current focus cycle root. If the focus owner
is itself a focus cycle root, then it may be ambiguous as to which
Components represent the next and previous Components to focus during
normal focus traversal. In that case, the current focus cycle root is
used to differentiate among the possibilities.

@return the current focus cycle root, or null if the current focus cycle
        root is not a member of the calling thread's context
@see #getCurrentFocusCycleRoot
@see #setGlobalCurrentFocusCycleRoot
@throws SecurityException if this KeyboardFocusManager is not the
        current KeyboardFocusManager for the calling thread's context
        and if the calling thread does not have \"replaceKeyboardFocusManager\"
        permission
"
      end

      operation 6151426 "setGlobalCurrentFocusCycleRoot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newFocusCycleRoot" type class_ref 338690 // Container
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current focus cycle root. If the focus owner is itself a focus
cycle root, then it may be ambiguous as to which Components represent
the next and previous Components to focus during normal focus traversal.
In that case, the current focus cycle root is used to differentiate
among the possibilities.
<p>
If a SecurityManager is installed, the calling thread must be granted
the \"replaceKeyboardFocusManager\" AWTPermission. If this permission is
not granted, this method will throw a SecurityException, and the current
focus cycle root will not be changed.
<p>
This method is intended to be used only by KeyboardFocusManagers and
focus implementations. It is not for general client use.

@param newFocusCycleRoot the new focus cycle root
@see #getCurrentFocusCycleRoot
@see #getGlobalCurrentFocusCycleRoot
@throws SecurityException if the calling thread does not have
        \"replaceKeyboardFocusManager\" permission
@beaninfo
      bound: true
"
      end

      operation 6151554 "setGlobalCurrentFocusCycleRootPriv"
	package explicit_return_type "void"
	nparams 1
	  param in name "newFocusCycleRoot" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6151682 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list. The listener is
registered for all bound properties of this class, including the
following:
<ul>
   <li>whether the KeyboardFocusManager is currently managing focus
       for this application or applet's browser context
       (\"managingFocus\")</li>
   <li>the focus owner (\"focusOwner\")</li>
   <li>the permanent focus owner (\"permanentFocusOwner\")</li>
   <li>the focused Window (\"focusedWindow\")</li>
   <li>the active Window (\"activeWindow\")</li>
   <li>the default focus traversal policy
       (\"defaultFocusTraversalPolicy\")</li>
   <li>the Set of default FORWARD_TRAVERSAL_KEYS
       (\"forwardDefaultFocusTraversalKeys\")</li>
   <li>the Set of default BACKWARD_TRAVERSAL_KEYS
       (\"backwardDefaultFocusTraversalKeys\")</li>
   <li>the Set of default UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleDefaultFocusTraversalKeys\")</li>
   <li>the Set of default DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleDefaultFocusTraversalKeys\")</li>
   <li>the current focus cycle root (\"currentFocusCycleRoot\")</li>
</ul>
If listener is null, no exception is thrown and no action is performed.

@param listener the PropertyChangeListener to be added
@see #removePropertyChangeListener
@see #getPropertyChangeListeners
@see #addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
"
      end

      operation 6151810 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a PropertyChangeListener from the listener list. This method
should be used to remove the PropertyChangeListeners that were
registered for all bound properties of this class.
<p>
If listener is null, no exception is thrown and no action is performed.

@param listener the PropertyChangeListener to be removed
@see #addPropertyChangeListener
@see #getPropertyChangeListeners
@see #removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
"
      end

      operation 6151938 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the property change listeners
registered on this keyboard focus manager.

@return all of this keyboard focus manager's
        <code>PropertyChangeListener</code>s
        or an empty array if no property change
        listeners are currently registered

@see #addPropertyChangeListener
@see #removePropertyChangeListener
@see #getPropertyChangeListeners(java.lang.String)
@since 1.4
"
      end

      operation 6152066 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a PropertyChangeListener to the listener list for a specific
property. The specified property may be user-defined, or one of the
following:
<ul>
   <li>whether the KeyboardFocusManager is currently managing focus
       for this application or applet's browser context
       (\"managingFocus\")</li>
   <li>the focus owner (\"focusOwner\")</li>
   <li>the permanent focus owner (\"permanentFocusOwner\")</li>
   <li>the focused Window (\"focusedWindow\")</li>
   <li>the active Window (\"activeWindow\")</li>
   <li>the default focus traversal policy
       (\"defaultFocusTraversalPolicy\")</li>
   <li>the Set of default FORWARD_TRAVERSAL_KEYS
       (\"forwardDefaultFocusTraversalKeys\")</li>
   <li>the Set of default BACKWARD_TRAVERSAL_KEYS
       (\"backwardDefaultFocusTraversalKeys\")</li>
   <li>the Set of default UP_CYCLE_TRAVERSAL_KEYS
       (\"upCycleDefaultFocusTraversalKeys\")</li>
   <li>the Set of default DOWN_CYCLE_TRAVERSAL_KEYS
       (\"downCycleDefaultFocusTraversalKeys\")</li>
   <li>the current focus cycle root (\"currentFocusCycleRoot\")</li>
</ul>
If listener is null, no exception is thrown and no action is performed.

@param propertyName one of the property names listed above
@param listener the PropertyChangeListener to be added
@see #addPropertyChangeListener(java.beans.PropertyChangeListener)
@see #removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
@see #getPropertyChangeListeners(java.lang.String)
"
      end

      operation 6152194 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a PropertyChangeListener from the listener list for a specific
property. This method should be used to remove PropertyChangeListeners
that were registered for a specific bound property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param propertyName a valid property name
@param listener the PropertyChangeListener to be removed
@see #addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
@see #getPropertyChangeListeners(java.lang.String)
@see #removePropertyChangeListener(java.beans.PropertyChangeListener)
"
      end

      operation 6152322 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PropertyChangeListener</code>s
associated with the named property.

@return all of the <code>PropertyChangeListener</code>s associated with
        the named property or an empty array if no such listeners have
        been added.

@see #addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
@see #removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
@since 1.4
"
      end

      operation 6152450 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a PropertyChangeEvent in response to a change in a bound property.
The event will be delivered to all registered PropertyChangeListeners.
No event will be delivered if oldValue and newValue are the same.

@param propertyName the name of the property that has changed
@param oldValue the property's previous value
@param newValue the property's new value
"
      end

      operation 6152578 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a VetoableChangeListener to the listener list. The listener is
registered for all vetoable properties of this class, including the
following:
<ul>
   <li>the focus owner (\"focusOwner\")</li>
   <li>the permanent focus owner (\"permanentFocusOwner\")</li>
   <li>the focused Window (\"focusedWindow\")</li>
   <li>the active Window (\"activeWindow\")</li>
</ul>
If listener is null, no exception is thrown and no action is performed.

@param listener the VetoableChangeListener to be added
@see #removeVetoableChangeListener
@see #getVetoableChangeListeners
@see #addVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
"
      end

      operation 6152706 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a VetoableChangeListener from the listener list. This method
should be used to remove the VetoableChangeListeners that were
registered for all vetoable properties of this class.
<p>
If listener is null, no exception is thrown and no action is performed.

@param listener the VetoableChangeListener to be removed
@see #addVetoableChangeListener
@see #getVetoableChangeListeners
@see #removeVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
"
      end

      operation 6152834 "getVetoableChangeListeners"
	public return_type class_ref 862082 // VetoableChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the vetoable change listeners
registered on this keyboard focus manager.

@return all of this keyboard focus manager's
        <code>VetoableChangeListener</code>s
        or an empty array if no vetoable change
        listeners are currently registered

@see #addVetoableChangeListener
@see #removeVetoableChangeListener
@see #getVetoableChangeListeners(java.lang.String)
@since 1.4
"
      end

      operation 6152962 "addVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a VetoableChangeListener to the listener list for a specific
property. The specified property may be user-defined, or one of the
following:
<ul>
   <li>the focus owner (\"focusOwner\")</li>
   <li>the permanent focus owner (\"permanentFocusOwner\")</li>
   <li>the focused Window (\"focusedWindow\")</li>
   <li>the active Window (\"activeWindow\")</li>
</ul>
If listener is null, no exception is thrown and no action is performed.

@param propertyName one of the property names listed above
@param listener the VetoableChangeListener to be added
@see #addVetoableChangeListener(java.beans.VetoableChangeListener)
@see #removeVetoableChangeListener
@see #getVetoableChangeListeners
"
      end

      operation 6153090 "removeVetoableChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 862082 // VetoableChangeListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a VetoableChangeListener from the listener list for a specific
property. This method should be used to remove VetoableChangeListeners
that were registered for a specific bound property.
<p>
If listener is null, no exception is thrown and no action is performed.

@param propertyName a valid property name
@param listener the VetoableChangeListener to be removed
@see #addVetoableChangeListener
@see #getVetoableChangeListeners
@see #removeVetoableChangeListener(java.beans.VetoableChangeListener)
"
      end

      operation 6153218 "getVetoableChangeListeners"
	public return_type class_ref 862082 // VetoableChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>VetoableChangeListener</code>s
associated with the named property.

@return all of the <code>VetoableChangeListener</code>s associated with
        the named property or an empty array if no such listeners have
        been added.

@see #addVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
@see #removeVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)
@see #getVetoableChangeListeners
@since 1.4
"
      end

      operation 6153346 "fireVetoableChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 862210 // PropertyVetoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fires a PropertyChangeEvent in response to a change in a vetoable
property. The event will be delivered to all registered
VetoableChangeListeners. If a VetoableChangeListener throws a
PropertyVetoException, a new event is fired reverting all
VetoableChangeListeners to the old value and the exception is then
rethrown. No event will be delivered if oldValue and newValue are the
same.

@param propertyName the name of the property that has changed
@param oldValue the property's previous value
@param newValue the property's new value
@throws java.beans.PropertyVetoException if a
        <code>VetoableChangeListener</code> threw
        <code>PropertyVetoException</code>
"
      end

      operation 6153474 "addKeyEventDispatcher"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dispatcher" type class_ref 861698 // KeyEventDispatcher
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a KeyEventDispatcher to this KeyboardFocusManager's dispatcher
chain. This KeyboardFocusManager will request that each
KeyEventDispatcher dispatch KeyEvents generated by the user before
finally dispatching the KeyEvent itself. KeyEventDispatchers will be
notified in the order in which they were added. Notifications will halt
as soon as one KeyEventDispatcher returns <code>true</code> from its
<code>dispatchKeyEvent</code> method. There is no limit to the total
number of KeyEventDispatchers which can be added, nor to the number of
times which a particular KeyEventDispatcher instance can be added.
<p>
If a null dispatcher is specified, no action is taken and no exception
is thrown.
<p>
In a multithreaded application, {@link KeyEventDispatcher} behaves
the same as other AWT listeners.  See
<a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for more details.

@param dispatcher the KeyEventDispatcher to add to the dispatcher chain
@see #removeKeyEventDispatcher
"
      end

      operation 6153602 "removeKeyEventDispatcher"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dispatcher" type class_ref 861698 // KeyEventDispatcher
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a KeyEventDispatcher which was previously added to this
KeyboardFocusManager's dispatcher chain. This KeyboardFocusManager
cannot itself be removed, unless it was explicitly re-registered via a
call to <code>addKeyEventDispatcher</code>.
<p>
If a null dispatcher is specified, if the specified dispatcher is not
in the dispatcher chain, or if this KeyboardFocusManager is specified
without having been explicitly re-registered, no action is taken and no
exception is thrown.
<p>
In a multithreaded application, {@link KeyEventDispatcher} behaves
the same as other AWT listeners.  See
<a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for more details.

@param dispatcher the KeyEventDispatcher to remove from the dispatcher
       chain
@see #addKeyEventDispatcher
"
      end

      operation 6153730 "getKeyEventDispatchers"
	protected return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KeyEventDispatcher> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List.
The List will not include this KeyboardFocusManager unless it was
explicitly re-registered via a call to
<code>addKeyEventDispatcher</code>. If no other KeyEventDispatchers are
registered, implementations are free to return null or a List of length
0. Client code should not assume one behavior over another, nor should
it assume that the behavior, once established, will not change.

@return a possibly null or empty List of KeyEventDispatchers
@see #addKeyEventDispatcher
@see #removeKeyEventDispatcher
"
      end

      operation 6153858 "addKeyEventPostProcessor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "processor" type class_ref 471170 // KeyEventPostProcessor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a KeyEventPostProcessor to this KeyboardFocusManager's post-
processor chain. After a KeyEvent has been dispatched to and handled by
its target, KeyboardFocusManager will request that each
KeyEventPostProcessor perform any necessary post-processing as part
of the KeyEvent's final resolution. KeyEventPostProcessors
will be notified in the order in which they were added; the current
KeyboardFocusManager will be notified last. Notifications will halt
as soon as one KeyEventPostProcessor returns <code>true</code> from its
<code>postProcessKeyEvent</code> method. There is no limit to the the
total number of KeyEventPostProcessors that can be added, nor to the
number of times that a particular KeyEventPostProcessor instance can be
added.
<p>
If a null post-processor is specified, no action is taken and no
exception is thrown.
<p>
In a multithreaded application, {@link KeyEventPostProcessor} behaves
the same as other AWT listeners.  See
<a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for more details.

@param processor the KeyEventPostProcessor to add to the post-processor
       chain
@see #removeKeyEventPostProcessor
"
      end

      operation 6153986 "removeKeyEventPostProcessor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "processor" type class_ref 471170 // KeyEventPostProcessor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a previously added KeyEventPostProcessor from this
KeyboardFocusManager's post-processor chain. This KeyboardFocusManager
cannot itself be entirely removed from the chain. Only additional
references added via <code>addKeyEventPostProcessor</code> can be
removed.
<p>
If a null post-processor is specified, if the specified post-processor
is not in the post-processor chain, or if this KeyboardFocusManager is
specified without having been explicitly added, no action is taken and
no exception is thrown.
<p>
In a multithreaded application, {@link KeyEventPostProcessor} behaves
the same as other AWT listeners.  See
<a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for more details.

@param processor the KeyEventPostProcessor to remove from the post-
       processor chain
@see #addKeyEventPostProcessor
"
      end

      operation 6154114 "getKeyEventPostProcessors"
	protected return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KeyEventPostProcessor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a
List. The List will not include this KeyboardFocusManager unless it was
explicitly added via a call to <code>addKeyEventPostProcessor</code>. If
no KeyEventPostProcessors are registered, implementations are free to
return null or a List of length 0. Client code should not assume one
behavior over another, nor should it assume that the behavior, once
established, will not change.

@return a possibly null or empty List of KeyEventPostProcessors
@see #addKeyEventPostProcessor
@see #removeKeyEventPostProcessor
"
      end

      operation 6154242 "setMostRecentFocusOwner"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6154370 "setMostRecentFocusOwner"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "window" type class_ref 347394 // Window
	  param inout name "component" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6154498 "clearMostRecentFocusOwner"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6154626 "getMostRecentFocusOwner"
	class_operation package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "window" type class_ref 347394 // Window
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Please be careful changing this method! It is called from
javax.swing.JComponent.runInputVerifier() using reflection.
"
      end

      operation 6154754 "dispatchEvent"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the AWT event dispatcher requesting that the
current KeyboardFocusManager dispatch the specified event on its behalf.
It is expected that all KeyboardFocusManagers will dispatch all
FocusEvents, all WindowEvents related to focus, and all KeyEvents.
These events should be dispatched based on the KeyboardFocusManager's
notion of the focus owner and the focused and active Windows, sometimes
overriding the source of the specified AWTEvent. Dispatching must be
done using <code>redispatchEvent</code> to prevent the AWT event
dispatcher from recursively requesting that the KeyboardFocusManager
dispatch the event again. If this method returns <code>false</code>,
then the AWT event dispatcher will attempt to dispatch the event itself.

@param e the AWTEvent to be dispatched
@return <code>true</code> if this method dispatched the event;
        <code>false</code> otherwise
@see #redispatchEvent
@see #dispatchKeyEvent
"
      end

      operation 6154882 "redispatchEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 338818 // Component
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Redispatches an AWTEvent in such a way that the AWT event dispatcher
will not recursively request that the KeyboardFocusManager, or any
installed KeyEventDispatchers, dispatch the event again. Client
implementations of <code>dispatchEvent</code> and client-defined
KeyEventDispatchers must call <code>redispatchEvent(target, e)</code>
instead of <code>target.dispatchEvent(e)</code> to dispatch an event.
<p>
This method is intended to be used only by KeyboardFocusManagers and
KeyEventDispatchers. It is not for general client use.

@param target the Component to which the event should be dispatched
@param e the event to dispatch
@see #dispatchEvent
@see KeyEventDispatcher
"
      end

      operation 6155010 "dispatchKeyEvent"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Typically this method will be called by <code>dispatchEvent</code> if no
other KeyEventDispatcher in the dispatcher chain dispatched the
KeyEvent, or if no other KeyEventDispatchers are registered. If an
implementation of this method returns <code>false</code>,
<code>dispatchEvent</code> may try to dispatch the KeyEvent itself, or
may simply return <code>false</code>. If <code>true</code> is returned,
<code>dispatchEvent</code> should return <code>true</code> as well.

@param e the KeyEvent which the current KeyboardFocusManager has
       requested that this KeyEventDispatcher dispatch
@return <code>true</code> if the KeyEvent was dispatched;
        <code>false</code> otherwise
@see #dispatchEvent
"
      end

      operation 6155138 "postProcessKeyEvent"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called by <code>dispatchKeyEvent</code>.
By default, this method will handle any unconsumed KeyEvents that
map to an AWT <code>MenuShortcut</code> by consuming the event
and activating the shortcut.

@param e the KeyEvent to post-process
@return <code>true</code> to indicate that no other
        KeyEventPostProcessor will be notified of the KeyEvent.
@see #dispatchKeyEvent
@see MenuShortcut
"
      end

      operation 6155266 "processKeyEvent"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "focusedComponent" type class_ref 338818 // Component
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method initiates a focus traversal operation if and only if the
KeyEvent represents a focus traversal key for the specified
focusedComponent. It is expected that focusedComponent is the current
focus owner, although this need not be the case. If it is not,
focus traversal will nevertheless proceed as if focusedComponent
were the current focus owner.

@param focusedComponent the Component that will be the basis for a focus
       traversal operation if the specified event represents a focus
       traversal key for the Component
@param e the event that may represent a focus traversal key
"
      end

      operation 6155394 "enqueueKeyEvents"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "after" explicit_type "long"
	  param inout name "untilFocused" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT to notify the KeyboardFocusManager that it should
delay dispatching of KeyEvents until the specified Component becomes
the focus owner. If client code requests a focus change, and the AWT
determines that this request might be granted by the native windowing
system, then the AWT will call this method. It is the responsibility of
the KeyboardFocusManager to delay dispatching of KeyEvents with
timestamps later than the specified time stamp until the specified
Component receives a FOCUS_GAINED event, or the AWT cancels the delay
request by invoking <code>dequeueKeyEvents</code> or
<code>discardKeyEvents</code>.

@param after timestamp of current event, or the current, system time if
       the current event has no timestamp, or the AWT cannot determine
       which event is currently being handled
@param untilFocused Component which should receive a FOCUS_GAINED event
       before any pending KeyEvents
@see #dequeueKeyEvents
@see #discardKeyEvents
"
      end

      operation 6155522 "dequeueKeyEvents"
	abstract protected explicit_return_type "void"
	nparams 2
	  param in name "after" explicit_type "long"
	  param inout name "untilFocused" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT to notify the KeyboardFocusManager that it should
cancel delayed dispatching of KeyEvents. All KeyEvents which were
enqueued because of a call to <code>enqueueKeyEvents</code> with the
same timestamp and Component should be released for normal dispatching
to the current focus owner. If the given timestamp is less than zero,
the outstanding enqueue request for the given Component with the <b>
oldest</b> timestamp (if any) should be cancelled.

@param after the timestamp specified in the call to
       <code>enqueueKeyEvents</code>, or any value &lt; 0
@param untilFocused the Component specified in the call to
       <code>enqueueKeyEvents</code>
@see #enqueueKeyEvents
@see #discardKeyEvents
"
      end

      operation 6155650 "discardKeyEvents"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the AWT to notify the KeyboardFocusManager that it should
cancel delayed dispatching of KeyEvents. All KeyEvents which were
enqueued because of one or more calls to <code>enqueueKeyEvents</code>
with the same Component should be discarded.

@param comp the Component specified in one or more calls to
       <code>enqueueKeyEvents</code>
@see #enqueueKeyEvents
@see #dequeueKeyEvents
"
      end

      operation 6155778 "focusNextComponent"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component after aComponent, typically based on a
FocusTraversalPolicy.

@param aComponent the Component that is the basis for the focus
       traversal operation
@see FocusTraversalPolicy
"
      end

      operation 6155906 "focusPreviousComponent"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component before aComponent, typically based on a
FocusTraversalPolicy.

@param aComponent the Component that is the basis for the focus
       traversal operation
@see FocusTraversalPolicy
"
      end

      operation 6156034 "upFocusCycle"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "aComponent" type class_ref 338818 // Component
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus up one focus traversal cycle. Typically, the focus owner
is set to aComponent's focus cycle root, and the current focus cycle
root is set to the new focus owner's focus cycle root. If, however,
aComponent's focus cycle root is a Window, then typically the focus
owner is set to the Window's default Component to focus, and the current
focus cycle root is unchanged.

@param aComponent the Component that is the basis for the focus
       traversal operation
"
      end

      operation 6156162 "downFocusCycle"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "aContainer" type class_ref 338690 // Container
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus down one focus traversal cycle. Typically, if
aContainer is a focus cycle root, then the focus owner is set to
aContainer's default Component to focus, and the current focus cycle
root is set to aContainer. If aContainer is not a focus cycle root, then
no focus traversal operation occurs.

@param aContainer the Container that is the basis for the focus
       traversal operation
"
      end

      operation 6156290 "focusNextComponent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component after the current focus owner.
"
      end

      operation 6156418 "focusPreviousComponent"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Focuses the Component before the current focus owner.
"
      end

      operation 6156546 "upFocusCycle"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus up one focus traversal cycle from the current focus
owner. Typically, the new focus owner is set to the current focus
owner's focus cycle root, and the current focus cycle root is set to the
new focus owner's focus cycle root. If, however, the current focus
owner's focus cycle root is a Window, then typically the focus owner is
set to the focus cycle root's default Component to focus, and the
current focus cycle root is unchanged.
"
      end

      operation 6156674 "downFocusCycle"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the focus down one focus traversal cycle from the current focus
owner, if and only if the current focus owner is a Container that is a
focus cycle root. Typically, the focus owner is set to the current focus
owner's default Component to focus, and the current focus cycle root is
set to the current focus owner. If the current focus owner is not a
Container that is a focus cycle root, then no focus traversal operation
occurs.
"
      end

      operation 6156802 "dumpRequests"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the list of focus requests to stderr
"
      end

      class 862338 "LightweightFocusRequest"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2907650 // component (<unidirectional association>)
	  relation 2907650 --->
	    a role_name "component" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2907650 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	attribute 1347842 "temporary"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1347970 "cause"
	  const_attribute package explicit_type "CausedFocusEvent.Cause"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6156930 "LightweightFocusRequest"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "component" type class_ref 338818 // Component
	    param inout name "temporary" explicit_type "boolean"
	    param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6157058 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 862466 "HeavyweightFocusRequest"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2907778 // heavyweight (<unidirectional association>)
	  relation 2907778 --->
	    a role_name "heavyweight" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2907778 // heavyweight (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 2907906 // lightweightRequests (<unidirectional association>)
	  relation 2907906 --->
	    a role_name "lightweightRequests" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LightweightFocusRequest> ${name}${value};
"
	      classrelation_ref 2907906 // lightweightRequests (<unidirectional association>)
	    b parent class_ref 163074 // LinkedList
	end

	classrelation 2908034 // CLEAR_GLOBAL_FOCUS_OWNER (<unidirectional association>)
	  relation 2908034 --->
	    a role_name "CLEAR_GLOBAL_FOCUS_OWNER" init_value "
            new HeavyweightFocusRequest()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2908034 // CLEAR_GLOBAL_FOCUS_OWNER (<unidirectional association>)
	    b parent class_ref 862466 // HeavyweightFocusRequest
	end

	operation 6157186 "HeavyweightFocusRequest"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6157314 "HeavyweightFocusRequest"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "heavyweight" type class_ref 338818 // Component
	    param inout name "descendant" type class_ref 338818 // Component
	    param inout name "temporary" explicit_type "boolean"
	    param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6157442 "addLightweightRequest"
	  package explicit_return_type "boolean"
	  nparams 3
	    param inout name "descendant" type class_ref 338818 // Component
	    param inout name "temporary" explicit_type "boolean"
	    param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6157570 "getFirstLightweightRequest"
	  package return_type class_ref 862338 // LightweightFocusRequest
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6157698 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2908162 // heavyweightRequests (<unidirectional association>)
	relation 2908162 --->
	  a role_name "heavyweightRequests" init_value "
        new LinkedList<HeavyweightFocusRequest>()" class_relation private
	    comment "
heavyweightRequests is used as a monitor for synchronized changes of
currentLightweightRequests, clearingCurrentLightweightRequests and
newFocusOwner.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<HeavyweightFocusRequest> ${name}${value};
"
	    classrelation_ref 2908162 // heavyweightRequests (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      classrelation 2908290 // currentLightweightRequests (<unidirectional association>)
	relation 2908290 --->
	  a role_name "currentLightweightRequests" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LightweightFocusRequest> ${name}${value};
"
	    classrelation_ref 2908290 // currentLightweightRequests (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      attribute 1348098 "clearingCurrentLightweightRequests"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1348226 "allowSyncFocusRequests"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2908418 // newFocusOwner (<unidirectional association>)
	relation 2908418 --->
	  a role_name "newFocusOwner" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2908418 // newFocusOwner (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      attribute 1348354 "disableRestoreFocus"
	class_attribute volatile private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1348482 "SNFH_FAILURE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1348610 "SNFH_SUCCESS_HANDLED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1348738 "SNFH_SUCCESS_PROCEED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6157826 "processSynchronousLightweightTransfer"
	class_operation package explicit_return_type "boolean"
	nparams 5
	  param inout name "heavyweight" type class_ref 338818 // Component
	  param inout name "descendant" type class_ref 338818 // Component
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	  param in name "time" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6157954 "shouldNativelyFocusHeavyweight"
	class_operation package explicit_return_type "int"
	nparams 6
	  param inout name "heavyweight" type class_ref 338818 // Component
	  param inout name "descendant" type class_ref 338818 // Component
	  param inout name "temporary" explicit_type "boolean"
	  param inout name "focusedWindowChangeAllowed" explicit_type "boolean"
	  param in name "time" explicit_type "long"
	  param inout name "cause" explicit_type "CausedFocusEvent.Cause"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the native implementation should proceed with a
pending, native focus request. Before changing the focus at the native
level, the AWT implementation should always call this function for
permission. This function will reject the request if a duplicate request
preceded it, or if the specified heavyweight Component already owns the
focus and no native focus changes are pending. Otherwise, the request
will be approved and the focus request list will be updated so that,
if necessary, the proper descendant will be focused when the
corresponding FOCUS_GAINED event on the heavyweight is received.

An implementation must ensure that calls to this method and native
focus changes are atomic. If this is not guaranteed, then the ordering
of the focus request list may be incorrect, leading to errors in the
type-ahead mechanism. Typically this is accomplished by only calling
this function from the native event pumping thread, or by holding a
global, native lock during invocation.
"
      end

      operation 6158082 "markClearGlobalFocusOwner"
	class_operation package return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Window which will be active after processing this request,
or null if this is a duplicate request. The active Window is useful
because some native platforms do not support setting the native focus
owner to null. On these platforms, the obvious choice is to set the
focus owner to the focus proxy of the active Window.
"
      end

      operation 6158210 "getCurrentWaitingRequest"
	package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "parent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6158338 "isAutoFocusTransferEnabled"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6158466 "isAutoFocusTransferEnabledFor"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6158594 "dispatchAndCatchException"
	class_operation private return_type class_ref 129922 // Throwable
	nparams 3
	  param inout name "ex" type class_ref 129922 // Throwable
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "event" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to process exceptions in dispatching focus event (in focusLost/focusGained callbacks).
@param ex previously caught exception that may be processed right here, or null
@param comp the component to dispatch the event to
@param event the event to dispatch to the component
"
      end

      operation 6158722 "handleException"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6158850 "processCurrentLightweightRequests"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6158978 "retargetUnexpectedFocusEvent"
	class_operation package return_type class_ref 346370 // FocusEvent
	nparams 1
	  param inout name "fe" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159106 "retargetFocusGained"
	class_operation package return_type class_ref 346370 // FocusEvent
	nparams 1
	  param inout name "fe" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159234 "retargetFocusLost"
	class_operation package return_type class_ref 346370 // FocusEvent
	nparams 1
	  param inout name "fe" type class_ref 346370 // FocusEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159362 "retargetFocusEvent"
	class_operation package return_type class_ref 339202 // AWTEvent
	nparams 1
	  param inout name "event" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159490 "clearMarkers"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears markers queue
This method is not intended to be overridden by KFM's.
Only DefaultKeyboardFocusManager can implement it.
@since 1.5
"
      end

      operation 6159618 "removeFirstRequest"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159746 "removeLastFocusRequest"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "heavyweight" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6159874 "focusedWindowChanged"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "to" type class_ref 338818 // Component
	  param inout name "from" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6160002 "isTemporary"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "to" type class_ref 338818 // Component
	  param inout name "from" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6160130 "getHeavyweight"
	class_operation package return_type class_ref 338818 // Component
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2908546 // proxyActive (<unidirectional association>)
	relation 2908546 --->
	  a role_name "proxyActive" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2908546 // proxyActive (<unidirectional association>)
	  b parent class_ref 189698 // Field
      end

      operation 6160258 "isProxyActiveImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Accessor to private field isProxyActive of KeyEvent"
      end

      operation 6160386 "isProxyActive"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the value of this KeyEvent's field isProxyActive"
      end

      operation 6160514 "getLastHWRequest"
	class_operation private return_type class_ref 862466 // HeavyweightFocusRequest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6160642 "getFirstHWRequest"
	class_operation private return_type class_ref 862466 // HeavyweightFocusRequest
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6160770 "checkReplaceKFMPermission"
	class_operation private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6160898 "checkKFMSecurity"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Checks if this KeyboardFocusManager instance is the current KFM,
 or otherwise checks if the calling thread has \"replaceKeyboardFocusManager\"
 permission. Here's the reasoning to do so:

 A system KFM instance (which is the current KFM by default) may have no
 \"replaceKFM\" permission when a client code is on the call stack beneath,
 but still it should be able to execute the methods protected by this check
 due to the system KFM is trusted (and so it does like \"privileged\").

 If this KFM instance is not the current KFM but the client code has all
 permissions we can't throw SecurityException because it would contradict
 the security concepts. In this case the trusted client code is responsible
 for calling the secured methods from KFM instance which is not current."
      end
    end

    class 861698 "KeyEventDispatcher"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@FunctionalInterface
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the
targeting and dispatching of all KeyEvents. KeyEventDispatchers registered
with the current KeyboardFocusManager will receive KeyEvents before they are
dispatched to their targets, allowing each KeyEventDispatcher to retarget
the event, consume it, dispatch the event itself, or make other changes.
<p>
Note that KeyboardFocusManager itself implements KeyEventDispatcher. By
default, the current KeyboardFocusManager will be the sink for all KeyEvents
not dispatched by the registered KeyEventDispatchers. The current
KeyboardFocusManager cannot be completely deregistered as a
KeyEventDispatcher. However, if a KeyEventDispatcher reports that it
dispatched the KeyEvent, regardless of whether it actually did so, the
KeyboardFocusManager will take no further action with regard to the
KeyEvent. (While it is possible for client code to register the current
KeyboardFocusManager as a KeyEventDispatcher one or more times, this is
usually unnecessary and not recommended.)

@author David Mendenhall

@see KeyboardFocusManager#addKeyEventDispatcher
@see KeyboardFocusManager#removeKeyEventDispatcher
@since 1.4
"
      operation 6146946 "dispatchKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the current KeyboardFocusManager requesting
that this KeyEventDispatcher dispatch the specified event on its behalf.
This KeyEventDispatcher is free to retarget the event, consume it,
dispatch it itself, or make other changes. This capability is typically
used to deliver KeyEvents to Components other than the focus owner. This
can be useful when navigating children of non-focusable Windows in an
accessible environment, for example. Note that if a KeyEventDispatcher
dispatches the KeyEvent itself, it must use <code>redispatchEvent</code>
to prevent the current KeyboardFocusManager from recursively requesting
that this KeyEventDispatcher dispatch the event again.
<p>
If an implementation of this method returns <code>false</code>, then
the KeyEvent is passed to the next KeyEventDispatcher in the chain,
ending with the current KeyboardFocusManager. If an implementation
returns <code>true</code>, the KeyEvent is assumed to have been
dispatched (although this need not be the case), and the current
KeyboardFocusManager will take no further action with regard to the
KeyEvent. In such a case,
<code>KeyboardFocusManager.dispatchEvent</code> should return
<code>true</code> as well. If an implementation consumes the KeyEvent,
but returns <code>false</code>, the consumed event will still be passed
to the next KeyEventDispatcher in the chain. It is important for
developers to check whether the KeyEvent has been consumed before
dispatching it to a target. By default, the current KeyboardFocusManager
will not dispatch a consumed KeyEvent.

@param e the KeyEvent to dispatch
@return <code>true</code> if the KeyboardFocusManager should take no
        further action with regard to the KeyEvent; <code>false</code>
        otherwise
@see KeyboardFocusManager#redispatchEvent
"
      end
    end

    class 861954 "SequencedEvent"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A mechanism for ensuring that a series of AWTEvents are executed in a
precise order, even across multiple AppContexts. The nested events will be
dispatched in the order in which their wrapping SequencedEvents were
constructed. The only exception to this rule is if the peer of the target of
the nested event was destroyed (with a call to Component.removeNotify)
before the wrapping SequencedEvent was able to be dispatched. In this case,
the nested event is never dispatched.

@author David Mendenhall
"
      classrelation 2974082 // <generalisation>
	relation 2974082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2974082 // <generalisation>
	  b parent class_ref 339202 // AWTEvent
      end

      classrelation 2974210 // <realization>
	relation 2974210 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2974210 // <realization>
	  b parent class_ref 855810 // ActiveEvent
      end

      attribute 1425794 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 547742659238625067L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      attribute 1425922 "ID"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        java.awt.event.FocusEvent.FOCUS_LAST + 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2974338 // list (<unidirectional association>)
	relation 2974338 --->
	  a role_name "list" init_value " new LinkedList<>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SequencedEvent> ${name}${value};
"
	    classrelation_ref 2974338 // list (<unidirectional association>)
	  b parent class_ref 163074 // LinkedList
      end

      classrelation 2974466 // nested (<unidirectional association>)
	relation 2974466 --->
	  a role_name "nested" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2974466 // nested (<unidirectional association>)
	  b parent class_ref 339202 // AWTEvent
      end

      attribute 1426050 "appContext"
	private explicit_type "AppContext"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1426178 "disposed"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 151682 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setSequencedEventAccessor(new AWTAccessor.SequencedEventAccessor() {
            public AWTEvent getNested(AWTEvent sequencedEvent) {
                return ((SequencedEvent)sequencedEvent).nested;
            }
            public boolean isSequencedEvent(AWTEvent event) {
                return event instanceof SequencedEvent;
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6330370 "SequencedEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "nested" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new SequencedEvent which will dispatch the specified
nested event.

@param nested the AWTEvent which this SequencedEvent's dispatch()
       method will dispatch
"
      end

      operation 6330498 "dispatch"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches the nested event after all previous nested events have been
dispatched or disposed. If this method is invoked before all previous nested events
have been dispatched, then this method blocks until such a point is
reached.
While waiting disposes nested events to disposed AppContext

NOTE: Locking protocol.  Since dispose() can get EventQueue lock,
dispatch() shall never call dispose() while holding the lock on the list,
as EventQueue lock is held during dispatching.  The locks should be acquired
in the same order.
"
      end

      operation 6330626 "isOwnerAppContextDisposed"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "se" type class_ref 861954 // SequencedEvent
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "true only if event exists and nested source appContext is disposed.
"
      end

      operation 6330754 "isFirstOrDisposed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sequenced events are dispatched in order, so we cannot dispatch
until we are the first sequenced event in the queue (i.e. it's our
turn).  But while we wait for our turn to dispatch, the event
could have been disposed for a number of reasons.
"
      end

      operation 6330882 "getFirst"
	class_operation private return_type class_ref 861954 // SequencedEvent
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6331010 "getFirstWithContext"
	class_operation private return_type class_ref 861954 // SequencedEvent
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disposes all events from disposed AppContext
return first valid event
"
      end

      operation 6331138 "dispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disposes of this instance. This method is invoked once the nested event
has been dispatched and handled, or when the peer of the target of the
nested event has been disposed with a call to Component.removeNotify.

NOTE: Locking protocol.  Since SunToolkit.postEvent can get EventQueue lock,
it shall never be called while holding the lock on the list,
as EventQueue lock is held during dispatching and dispatch() will get
lock on the list. The locks should be acquired in the same order.
"
      end
    end

    class 862850 "SentEvent"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A wrapping tag for a nested AWTEvent which indicates that the event was
sent from another AppContext. The destination AppContext should handle the
event even if it is currently blocked waiting for a SequencedEvent or
another SentEvent to be handled.

@author David Mendenhall
"
      classrelation 2909698 // <generalisation>
	relation 2909698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2909698 // <generalisation>
	  b parent class_ref 339202 // AWTEvent
      end

      classrelation 2909826 // <realization>
	relation 2909826 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2909826 // <realization>
	  b parent class_ref 855810 // ActiveEvent
      end

      attribute 1349378 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -383615247028828931L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      attribute 1349506 "ID"
	class_attribute const_attribute package explicit_type "int"
	init_value "
        java.awt.event.FocusEvent.FOCUS_LAST + 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1349634 "dispatched"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2909954 // nested (<unidirectional association>)
	relation 2909954 --->
	  a role_name "nested" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2909954 // nested (<unidirectional association>)
	  b parent class_ref 339202 // AWTEvent
      end

      attribute 1349762 "toNotify"
	private explicit_type "AppContext"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6162050 "SentEvent"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6162178 "SentEvent"
	package explicit_return_type ""
	nparams 1
	  param inout name "nested" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6162306 "SentEvent"
	package explicit_return_type ""
	nparams 2
	  param inout name "nested" type class_ref 339202 // AWTEvent
	  param inout name "toNotify" explicit_type "AppContext"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6162434 "dispatch"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6162562 "dispose"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 862978 "Desktop"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Desktop} class allows a Java application to launch
associated applications registered on the native desktop to handle
a {@link java.net.URI} or a file.

<p> Supported operations include:
<ul>
  <li>launching the user-default browser to show a specified
      URI;</li>
  <li>launching the user-default mail client with an optional
      {@code mailto} URI;</li>
  <li>launching a registered application to open, edit or print a
      specified file.</li>
</ul>

<p> This class provides methods corresponding to these
operations. The methods look for the associated application
registered on the current platform, and launch it to handle a URI
or file. If there is no associated application or the associated
application fails to be launched, an exception is thrown.

<p> An application is registered to a URI or file type; for
example, the {@code \"sxi\"} file extension is typically registered
to StarOffice.  The mechanism of registering, accessing, and
launching the associated application is platform-dependent.

<p> Each operation is an action type represented by the {@link
Desktop.Action} class.

<p> Note: when some action is invoked and the associated
application is executed, it will be executed on the same system as
the one on which the Java application was launched.

@since 1.6
@author Armin Chen
@author George Zhang
"
      class 863106 "Action"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1350018 "OPEN"
	  public type class_ref 863106 // Action
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents an \"open\" action.
@see Desktop#open(java.io.File)

"
	end

	attribute 1350146 "EDIT"
	  public type class_ref 863106 // Action
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents an \"edit\" action.
@see Desktop#edit(java.io.File)

"
	end

	attribute 1350274 "PRINT"
	  public type class_ref 863106 // Action
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a \"print\" action.
@see Desktop#print(java.io.File)

"
	end

	attribute 1350402 "MAIL"
	  public type class_ref 863106 // Action
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a \"mail\" action.
@see Desktop#mail()
@see Desktop#mail(java.net.URI)

"
	end

	attribute 1350530 "BROWSE"
	  public type class_ref 863106 // Action
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents a \"browse\" action.
@see Desktop#browse(java.net.URI)
"
	end
      end

      classrelation 2910210 // peer (<unidirectional association>)
	relation 2910210 --->
	  a role_name "peer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2910210 // peer (<unidirectional association>)
	  b parent class_ref 863234 // DesktopPeer
      end

      operation 6165890 "Desktop"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Suppresses default constructor for noninstantiability.
"
      end

      operation 6166018 "getDesktop"
	class_operation public return_type class_ref 862978 // Desktop
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Desktop</code> instance of the current
browser context.  On some platforms the Desktop API may not be
supported; use the {@link #isDesktopSupported} method to
determine if the current desktop is supported.
@return the Desktop instance of the current browser context
@throws HeadlessException if {@link
GraphicsEnvironment#isHeadless()} returns {@code true}
@throws UnsupportedOperationException if this class is not
supported on the current platform
@see #isDesktopSupported()
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6166146 "isDesktopSupported"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this class is supported on the current platform.
If it's supported, use {@link #getDesktop()} to retrieve an
instance.

@return <code>true</code> if this class is supported on the
        current platform; <code>false</code> otherwise
@see #getDesktop()
"
      end

      operation 6166274 "isSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "action" type class_ref 863106 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether an action is supported on the current platform.

<p>Even when the platform supports an action, a file or URI may
not have a registered application for the action.  For example,
most of the platforms support the {@link Desktop.Action#OPEN}
action.  But for a specific file, there may not be an
application registered to open it.  In this case, {@link
#isSupported} may return {@code true}, but the corresponding
action method will throw an {@link IOException}.

@param action the specified {@link Action}
@return <code>true</code> if the specified action is supported on
        the current platform; <code>false</code> otherwise
@see Desktop.Action
"
      end

      operation 6166402 "checkFileValidation"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the file is a valid file and readable.

@throws SecurityException If a security manager exists and its
        {@link SecurityManager#checkRead(java.lang.String)} method
        denies read access to the file
@throws NullPointerException if file is null
@throws IllegalArgumentException if file doesn't exist
"
      end

      operation 6166530 "checkActionSupport"
	private explicit_return_type "void"
	nparams 1
	  param inout name "actionType" type class_ref 863106 // Action
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the action type is supported.

@param actionType the action type in question
@throws UnsupportedOperationException if the specified action type is not
        supported on the current platform
"
      end

      operation 6166658 "checkAWTPermission"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls to the security manager's <code>checkPermission</code> method with
 an <code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
 permission.
"
      end

      operation 6166786 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the associated application to open the file.

<p> If the specified file is a directory, the file manager of
the current platform is launched to open it.

@param file the file to be opened with the associated application
@throws NullPointerException if {@code file} is {@code null}
@throws IllegalArgumentException if the specified file doesn't
exist
@throws UnsupportedOperationException if the current platform
does not support the {@link Desktop.Action#OPEN} action
@throws IOException if the specified file has no associated
application or the associated application fails to be launched
@throws SecurityException if a security manager exists and its
{@link java.lang.SecurityManager#checkRead(java.lang.String)}
method denies read access to the file, or it denies the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
permission, or the calling thread is not allowed to create a
subprocess
@see java.awt.AWTPermission
"
      end

      operation 6166914 "edit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the associated editor application and opens a file for
editing.

@param file the file to be opened for editing
@throws NullPointerException if the specified file is {@code null}
@throws IllegalArgumentException if the specified file doesn't
exist
@throws UnsupportedOperationException if the current platform
does not support the {@link Desktop.Action#EDIT} action
@throws IOException if the specified file has no associated
editor, or the associated application fails to be launched
@throws SecurityException if a security manager exists and its
{@link java.lang.SecurityManager#checkRead(java.lang.String)}
method denies read access to the file, or {@link
java.lang.SecurityManager#checkWrite(java.lang.String)} method
denies write access to the file, or it denies the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
permission, or the calling thread is not allowed to create a
subprocess
@see java.awt.AWTPermission
"
      end

      operation 6167042 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a file with the native desktop printing facility, using
the associated application's print command.

@param file the file to be printed
@throws NullPointerException if the specified file is {@code
null}
@throws IllegalArgumentException if the specified file doesn't
exist
@throws UnsupportedOperationException if the current platform
        does not support the {@link Desktop.Action#PRINT} action
@throws IOException if the specified file has no associated
application that can be used to print it
@throws SecurityException if a security manager exists and its
{@link java.lang.SecurityManager#checkRead(java.lang.String)}
method denies read access to the file, or its {@link
java.lang.SecurityManager#checkPrintJobAccess()} method denies
the permission to print the file, or the calling thread is not
allowed to create a subprocess
"
      end

      operation 6167170 "browse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 783874 // URI
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the default browser to display a {@code URI}.
If the default browser is not able to handle the specified
{@code URI}, the application registered for handling
{@code URIs} of the specified type is invoked. The application
is determined from the protocol and path of the {@code URI}, as
defined by the {@code URI} class.
<p>
If the calling thread does not have the necessary permissions,
and this is invoked from within an applet,
{@code AppletContext.showDocument()} is used. Similarly, if the calling
does not have the necessary permissions, and this is invoked from within
a Java Web Started application, {@code BasicService.showDocument()}
is used.

@param uri the URI to be displayed in the user default browser
@throws NullPointerException if {@code uri} is {@code null}
@throws UnsupportedOperationException if the current platform
does not support the {@link Desktop.Action#BROWSE} action
@throws IOException if the user default browser is not found,
or it fails to be launched, or the default handler application
failed to be launched
@throws SecurityException if a security manager exists and it
denies the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
permission, or the calling thread is not allowed to create a
subprocess; and not invoked from within an applet or Java Web Started
application
@throws IllegalArgumentException if the necessary permissions
are not available and the URI can not be converted to a {@code URL}
@see java.net.URI
@see java.awt.AWTPermission
@see java.applet.AppletContext
"
      end

      operation 6167298 "mail"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the mail composing window of the user default mail
client.

@throws UnsupportedOperationException if the current platform
does not support the {@link Desktop.Action#MAIL} action
@throws IOException if the user default mail client is not
found, or it fails to be launched
@throws SecurityException if a security manager exists and it
denies the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
permission, or the calling thread is not allowed to create a
subprocess
@see java.awt.AWTPermission
"
      end

      operation 6167426 "mail"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mailtoURI" type class_ref 783874 // URI
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launches the mail composing window of the user default mail
client, filling the message fields specified by a {@code
mailto:} URI.

<p> A <code>mailto:</code> URI can specify message fields
including <i>\"to\"</i>, <i>\"cc\"</i>, <i>\"subject\"</i>,
<i>\"body\"</i>, etc.  See <a
href=\"http://www.ietf.org/rfc/rfc2368.txt\">The mailto URL
scheme (RFC 2368)</a> for the {@code mailto:} URI specification
details.

@param mailtoURI the specified {@code mailto:} URI
@throws NullPointerException if the specified URI is {@code
null}
@throws IllegalArgumentException if the URI scheme is not
        <code>\"mailto\"</code>
@throws UnsupportedOperationException if the current platform
does not support the {@link Desktop.Action#MAIL} action
@throws IOException if the user default mail client is not
found or fails to be launched
@throws SecurityException if a security manager exists and it
denies the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code>
permission, or the calling thread is not allowed to create a
subprocess
@see java.net.URI
@see java.awt.AWTPermission
"
      end

      operation 6167554 "checkExec"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 863490 "ModalEventFilter"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2938754 // <realization>
	relation 2938754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2938754 // <realization>
	  b parent class_ref 864130 // EventFilter
      end

      classrelation 2938882 // modalDialog (<unidirectional association>)
	relation 2938882 --->
	  a role_name "modalDialog" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2938882 // modalDialog (<unidirectional association>)
	  b parent class_ref 469122 // Dialog
      end

      attribute 1405058 "disabled"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6289666 "ModalEventFilter"
	protected explicit_return_type ""
	nparams 1
	  param inout name "modalDialog" type class_ref 469122 // Dialog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6289794 "getModalDialog"
	package return_type class_ref 469122 // Dialog
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6289922 "acceptEvent"
	public return_type class_ref 864386 // FilterAction
	nparams 1
	  param inout name "event" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6290050 "acceptWindow"
	abstract protected return_type class_ref 864386 // FilterAction
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6290178 "disable"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " When a modal dialog is hidden its modal filter may not be deleted from
 EventDispatchThread event filters immediately, so we need to mark the filter
 as disabled to prevent it from working. Simple checking for visibility of
 the modalDialog is not enough, as it can be hidden and then shown again
 with a new event pump and a new filter"
      end

      operation 6290306 "compareTo"
	package explicit_return_type "int"
	nparams 1
	  param inout name "another" type class_ref 863490 // ModalEventFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6290434 "createFilterForDialog"
	class_operation package return_type class_ref 863490 // ModalEventFilter
	nparams 1
	  param inout name "modalDialog" type class_ref 469122 // Dialog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 872578 "ToolkitModalEventFilter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2939010 // <generalisation>
	  relation 2939010 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2939010 // <generalisation>
	    b parent class_ref 863490 // ModalEventFilter
	end

	attribute 1405186 "appContext"
	  private explicit_type "AppContext"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6290562 "ToolkitModalEventFilter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "modalDialog" type class_ref 469122 // Dialog
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6290690 "acceptWindow"
	  protected return_type class_ref 864386 // FilterAction
	  nparams 1
	    param inout name "w" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 872706 "ApplicationModalEventFilter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2939138 // <generalisation>
	  relation 2939138 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2939138 // <generalisation>
	    b parent class_ref 863490 // ModalEventFilter
	end

	attribute 1405314 "appContext"
	  private explicit_type "AppContext"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6290818 "ApplicationModalEventFilter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "modalDialog" type class_ref 469122 // Dialog
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6290946 "acceptWindow"
	  protected return_type class_ref 864386 // FilterAction
	  nparams 1
	    param inout name "w" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 872834 "DocumentModalEventFilter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2939266 // <generalisation>
	  relation 2939266 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2939266 // <generalisation>
	    b parent class_ref 863490 // ModalEventFilter
	end

	classrelation 2939394 // documentRoot (<unidirectional association>)
	  relation 2939394 --->
	    a role_name "documentRoot" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2939394 // documentRoot (<unidirectional association>)
	    b parent class_ref 347394 // Window
	end

	operation 6291074 "DocumentModalEventFilter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "modalDialog" type class_ref 469122 // Dialog
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6291202 "acceptWindow"
	  protected return_type class_ref 864386 // FilterAction
	  nparams 1
	    param inout name "w" type class_ref 347394 // Window
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 863618 "SecondaryLoop"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A helper interface to run the nested event loop.
<p>
Objects that implement this interface are created with the
{@link EventQueue#createSecondaryLoop} method. The interface
provides two methods, {@link #enter} and {@link #exit},
which can be used to start and stop the event loop.
<p>
When the {@link #enter} method is called, the current
thread is blocked until the loop is terminated by the
{@link #exit} method. Also, a new event loop is started
on the event dispatch thread, which may or may not be
the current thread. The loop can be terminated on any
thread by calling its {@link #exit} method. After the
loop is terminated, the {@code SecondaryLoop} object can
be reused to run a new nested event loop.
<p>
A typical use case of applying this interface is AWT
and Swing modal dialogs. When a modal dialog is shown on
the event dispatch thread, it enters a new secondary loop.
Later, when the dialog is hidden or disposed, it exits
the loop, and the thread continues its execution.
<p>
The following example illustrates a simple use case of
secondary loops:

<pre>
  SecondaryLoop loop;

  JButton jButton = new JButton(\"Button\");
  jButton.addActionListener(new ActionListener() {
      {@code @Override}
      public void actionPerformed(ActionEvent e) {
          Toolkit tk = Toolkit.getDefaultToolkit();
          EventQueue eq = tk.getSystemEventQueue();
          loop = eq.createSecondaryLoop();

          // Spawn a new thread to do the work
          Thread worker = new WorkerThread();
          worker.start();

          // Enter the loop to block the current event
          // handler, but leave UI responsive
          if (!loop.enter()) {
              // Report an error
          }
      }
  });

  class WorkerThread extends Thread {
      {@code @Override}
      public void run() {
          // Perform calculations
          doSomethingUseful();

          // Exit the loop
          loop.exit();
      }
  }
</pre>

@see Dialog#show
@see EventQueue#createSecondaryLoop
@see Toolkit#getSystemEventQueue

@author Anton Tarasov, Artem Ananiev

@since 1.7
"
      operation 6330114 "enter"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Blocks the execution of the current thread and enters a new
secondary event loop on the event dispatch thread.
<p>
This method can be called by any thread including the event
dispatch thread. This thread will be blocked until the {@link
#exit} method is called or the loop is terminated. A new
secondary loop will be created on the event dispatch thread
for dispatching events in either case.
<p>
This method can only start one new event loop at a time per
object. If a secondary event loop has already been started
by this object and is currently still running, this method
returns {@code false} to indicate that it was not successful
in starting a new event loop. Otherwise, this method blocks
the calling thread and later returns {@code true} when the
new event loop is terminated. At such time, this object can
again be used to start another new event loop.

@return {@code true} after termination of the secondary loop,
        if the secondary loop was started by this call,
        {@code false} otherwise
"
      end

      operation 6330242 "exit"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unblocks the execution of the thread blocked by the {@link
#enter} method and exits the secondary loop.
<p>
This method resumes the thread that called the {@link #enter}
method and exits the secondary loop that was created when
the {@link #enter} method was invoked.
<p>
Note that if any other secondary loop is started while this
loop is running, the blocked thread will not resume execution
until the nested loop is terminated.
<p>
If this secondary loop has not been started with the {@link
#enter} method, or this secondary loop has already finished
with the {@link #exit} method, this method returns {@code
false}, otherwise {@code true} is returned.

@return {@code true} if this loop was previously started and
        has not yet been finished with the {@link #exit} method,
        {@code false} otherwise
"
      end
    end

    class 863874 "DisplayMode"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DisplayMode</code> class encapsulates the bit depth, height,
width, and refresh rate of a <code>GraphicsDevice</code>. The ability to
change graphics device's display mode is platform- and
configuration-dependent and may not always be available
(see {@link GraphicsDevice#isDisplayChangeSupported}).
<p>
For more information on full-screen exclusive mode API, see the
<a href=\"https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html\">
Full-Screen Exclusive Mode API Tutorial</a>.

@see GraphicsDevice
@see GraphicsDevice#isDisplayChangeSupported
@see GraphicsDevice#getDisplayModes
@see GraphicsDevice#setDisplayMode
@author Michael Martak
@since 1.4
"
      classrelation 2912002 // size (<unidirectional association>)
	relation 2912002 --->
	  a role_name "size" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2912002 // size (<unidirectional association>)
	  b parent class_ref 316802 // Dimension
      end

      attribute 1353090 "bitDepth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1353218 "refreshRate"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6177154 "DisplayMode"
	public explicit_return_type ""
	nparams 4
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "bitDepth" explicit_type "int"
	  param in name "refreshRate" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new display mode object with the supplied parameters.
@param width the width of the display, in pixels
@param height the height of the display, in pixels
@param bitDepth the bit depth of the display, in bits per
       pixel.  This can be <code>BIT_DEPTH_MULTI</code> if multiple
       bit depths are available.
@param refreshRate the refresh rate of the display, in hertz.
       This can be <code>REFRESH_RATE_UNKNOWN</code> if the
       information is not available.
@see #BIT_DEPTH_MULTI
@see #REFRESH_RATE_UNKNOWN
"
      end

      operation 6177282 "getHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height of the display, in pixels.
@return the height of the display, in pixels
"
      end

      operation 6177410 "getWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of the display, in pixels.
@return the width of the display, in pixels
"
      end

      attribute 1353346 "BIT_DEPTH_MULTI"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the bit depth if multiple bit depths are supported in this
display mode.
@see #getBitDepth

"
      end

      operation 6177538 "getBitDepth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bit depth of the display, in bits per pixel.  This may be
<code>BIT_DEPTH_MULTI</code> if multiple bit depths are supported in
this display mode.

@return the bit depth of the display, in bits per pixel.
@see #BIT_DEPTH_MULTI
"
      end

      attribute 1353474 "REFRESH_RATE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value of the refresh rate if not known.
@see #getRefreshRate

"
      end

      operation 6177666 "getRefreshRate"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the refresh rate of the display, in hertz.  This may be
<code>REFRESH_RATE_UNKNOWN</code> if the information is not available.

@return the refresh rate of the display, in hertz.
@see #REFRESH_RATE_UNKNOWN
"
      end

      operation 6177794 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "dm" type class_ref 863874 // DisplayMode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the two display modes are equal.
@return whether the two display modes are equal
"
      end

      operation 6177922 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "dm" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6178050 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end
    end

    class 864002 "EventDispatchThread"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EventDispatchThread is a package-private AWT class which takes
events off the EventQueue and dispatches them to the appropriate
AWT components.

The Thread starts a \"permanent\" event pump with a call to
pumpEvents(Conditional) in its run() method. Event handlers can choose to
block this event pump at any time, but should start a new pump (<b>not</b>
a new EventDispatchThread) by again calling pumpEvents(Conditional). This
secondary event pump will exit automatically as soon as the Condtional
evaluate()s to false and an additional Event is pumped and dispatched.

@author Tom Ball
@author Amy Fowler
@author Fred Ecks
@author David Mendenhall

@since 1.1
"
      classrelation 2912642 // <generalisation>
	relation 2912642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2912642 // <generalisation>
	  b parent class_ref 128642 // Thread
      end

      attribute 1363970 "eventLog"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.event.EventDispatchThread\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2912770 // theQueue (<unidirectional association>)
	relation 2912770 --->
	  a role_name "theQueue" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2912770 // theQueue (<unidirectional association>)
	  b parent class_ref 339458 // EventQueue
      end

      attribute 1364098 "doDispatch"
	volatile private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1364226 "ANY_EVENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2912898 // eventFilters (<unidirectional association>)
	relation 2912898 --->
	  a role_name "eventFilters" init_value " new ArrayList<EventFilter>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<EventFilter> ${name}${value};
"
	    classrelation_ref 2912898 // eventFilters (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 6179970 "EventDispatchThread"
	package explicit_return_type ""
	nparams 3
	  param inout name "group" type class_ref 128898 // ThreadGroup
	  param inout name "name" type class_ref 128130 // String
	  param inout name "queue" type class_ref 339458 // EventQueue
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180098 "stopDispatching"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must be called on EDT only, that's why no synchronization
"
      end

      operation 6180226 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180354 "pumpEvents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "cond" type class_ref 860930 // Conditional
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180482 "pumpEventsForHierarchy"
	package explicit_return_type "void"
	nparams 2
	  param inout name "cond" type class_ref 860930 // Conditional
	  param inout name "modalComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180610 "pumpEvents"
	package explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "cond" type class_ref 860930 // Conditional
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180738 "pumpEventsForHierarchy"
	package explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "cond" type class_ref 860930 // Conditional
	  param inout name "modalComponent" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180866 "pumpEventsForFilter"
	package explicit_return_type "void"
	nparams 2
	  param inout name "cond" type class_ref 860930 // Conditional
	  param inout name "filter" type class_ref 864130 // EventFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6180994 "pumpEventsForFilter"
	package explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "cond" type class_ref 860930 // Conditional
	  param inout name "filter" type class_ref 864130 // EventFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181122 "addEventFilter"
	package explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 864130 // EventFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181250 "removeEventFilter"
	package explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 864130 // EventFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181378 "pumpOneEventForFilters"
	package explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181506 "processException"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181634 "getEventQueue"
	public return_type class_ref 339458 // EventQueue
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6181762 "setEventQueue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "eq" type class_ref 339458 // EventQueue
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 864258 "HierarchyEventFilter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2913026 // <realization>
	  relation 2913026 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2913026 // <realization>
	    b parent class_ref 864130 // EventFilter
	end

	classrelation 2913154 // modalComponent (<unidirectional association>)
	  relation 2913154 --->
	    a role_name "modalComponent" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2913154 // modalComponent (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	operation 6182018 "HierarchyEventFilter"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "modalComponent" type class_ref 338818 // Component
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6182146 "acceptEvent"
	  public return_type class_ref 864386 // FilterAction
	  nparams 1
	    param inout name "event" type class_ref 339202 // AWTEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 864130 "EventFilter"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 864386 "FilterAction"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1364354 "ACCEPT"
	  public type class_ref 864386 // FilterAction
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "ACCEPT means that this filter do not filter the event and allowes other
active filters to proceed it. If all the active filters accept the event, it
is dispatched by the <code>EventDispatchThread</code>
@see EventDispatchThread#pumpEventsForFilter

"
	end

	attribute 1364482 "REJECT"
	  public type class_ref 864386 // FilterAction
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "REJECT means that this filter filter the event. No other filters are queried,
and the event is not dispatched by the <code>EventDispatchedThread</code>
@see EventDispatchThread#pumpEventsForFilter

"
	end

	attribute 1364610 "ACCEPT_IMMEDIATELY"
	  public type class_ref 864386 // FilterAction
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "ACCEPT_IMMEDIATELY means that this filter do not filter the event, no other
filters are queried and to proceed it, and it is dispatched by the
<code>EventDispatchThread</code>
It is not recommended to use ACCEPT_IMMEDIATELY as there may be some active
filters not queried yet that do not accept this event. It is primarily used
by modal filters.
@see EventDispatchThread#pumpEventsForFilter
@see ModalEventFilter
"
	end
      end

      operation 6181890 "acceptEvent"
	public return_type class_ref 864386 // FilterAction
	nparams 1
	  param inout name "ev" type class_ref 339202 // AWTEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 864514 "Queue"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Queue object holds pointers to the beginning and end of one internal
queue. An EventQueue object is composed of multiple internal Queues, one
for each priority supported by the EventQueue. All Events on a particular
internal Queue have identical priority.
"
      attribute 1367042 "head"
	package explicit_type "EventQueueItem"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1367170 "tail"
	package explicit_type "EventQueueItem"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 865154 "FileDialog"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>FileDialog</code> class displays a dialog window
from which the user can select a file.
<p>
Since it is a modal dialog, when the application calls
its <code>show</code> method to display the dialog,
it blocks the rest of the application until the user has
chosen a file.

@see Window#show

@author      Sami Shaio
@author      Arthur van Hoff
@since       JDK1.0
"
      classrelation 2914818 // <generalisation>
	relation 2914818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2914818 // <generalisation>
	  b parent class_ref 469122 // Dialog
      end

      attribute 1367298 "LOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant value indicates that the purpose of the file
dialog window is to locate a file from which to read.

"
      end

      attribute 1367426 "SAVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This constant value indicates that the purpose of the file
dialog window is to locate a file to which to write.

"
      end

      attribute 1367554 "mode"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "There are two <code>FileDialog</code> modes: <code>LOAD</code> and
<code>SAVE</code>.
This integer will represent one or the other.
If the mode is not specified it will default to <code>LOAD</code>.

@serial
@see getMode()
@see setMode()
@see java.awt.FileDialog#LOAD
@see java.awt.FileDialog#SAVE

"
      end

      classrelation 2914946 // dir (<unidirectional association>)
	relation 2914946 --->
	  a role_name "dir" package
	    comment "
The string specifying the directory to display
in the file dialog.  This variable may be <code>null</code>.

@serial
@see getDirectory()
@see setDirectory()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2914946 // dir (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2915074 // file (<unidirectional association>)
	relation 2915074 --->
	  a role_name "file" package
	    comment "
The string specifying the initial value of the
filename text field in the file dialog.
This variable may be <code>null</code>.

@serial
@see getFile()
@see setFile()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2915074 // file (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2915202 // files (<unidirectional association>)
	relation 2915202 --->
	  a role_name "files" multiplicity "[]" private
	    comment "
Contains the File instances for all the files that the user selects.

@serial
@see #getFiles
@since 1.7

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2915202 // files (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      attribute 1367682 "multipleMode"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Represents whether the file dialog allows the multiple file selection.

@serial
@see #setMultipleMode
@see #isMultipleMode
@since 1.7

"
      end

      classrelation 2915330 // filter (<unidirectional association>)
	relation 2915330 --->
	  a role_name "filter" package
	    comment "
The filter used as the file dialog's filename filter.
The file dialog will only be displaying files whose
names are accepted by this filter.
This variable may be <code>null</code>.

@serial
@see #getFilenameFilter()
@see #setFilenameFilter()
@see FileNameFilter

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2915330 // filter (<unidirectional association>)
	  b parent class_ref 580482 // FilenameFilter
      end

      classrelation 2915458 // base (<unidirectional association>)
	relation 2915458 --->
	  a role_name "base" init_value " \"filedlg\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2915458 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1367810 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1367938 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5035145889651310422L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      extra_member 149506 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 149634 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setFileDialogAccessor(
            new AWTAccessor.FileDialogAccessor() {
                public void setFiles(FileDialog fileDialog, File files[]) {
                    fileDialog.setFiles(files);
                }
                public void setFile(FileDialog fileDialog, String file) {
                    fileDialog.file = (\"\".equals(file)) ? null : file;
                }
                public void setDirectory(FileDialog fileDialog, String directory) {
                    fileDialog.dir = (\"\".equals(directory)) ? null : directory;
                }
                public boolean isMultipleMode(FileDialog fileDialog) {
                    synchronized (fileDialog.getObjectLock()) {
                        return fileDialog.multipleMode;
                    }
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6188290 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs for fields that may be
accessed from C.
"
      end

      operation 6188418 "FileDialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 393346 // Frame
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog for loading a file.  The title of the
file dialog is initially empty.  This is a convenience method for
<code>FileDialog(parent, \"\", LOAD)</code>.

@param parent the owner of the dialog
@since JDK1.1
"
      end

      operation 6188546 "FileDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog window with the specified title for loading
a file. The files shown are those in the current directory.
This is a convenience method for
<code>FileDialog(parent, title, LOAD)</code>.

@param     parent   the owner of the dialog
@param     title    the title of the dialog
"
      end

      operation 6188674 "FileDialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "parent" type class_ref 393346 // Frame
	  param inout name "title" type class_ref 128130 // String
	  param in name "mode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog window with the specified title for loading
or saving a file.
<p>
If the value of <code>mode</code> is <code>LOAD</code>, then the
file dialog is finding a file to read, and the files shown are those
in the current directory.   If the value of
<code>mode</code> is <code>SAVE</code>, the file dialog is finding
a place to write a file.

@param     parent   the owner of the dialog
@param     title   the title of the dialog
@param     mode   the mode of the dialog; either
         <code>FileDialog.LOAD</code> or <code>FileDialog.SAVE</code>
@exception  IllegalArgumentException if an illegal file
                dialog mode is supplied
@see       java.awt.FileDialog#LOAD
@see       java.awt.FileDialog#SAVE
"
      end

      operation 6188802 "FileDialog"
	public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 469122 // Dialog
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog for loading a file.  The title of the
file dialog is initially empty.  This is a convenience method for
<code>FileDialog(parent, \"\", LOAD)</code>.

@param     parent   the owner of the dialog
@exception java.lang.IllegalArgumentException if the <code>parent</code>'s
           <code>GraphicsConfiguration</code>
           is not from a screen device;
@exception java.lang.IllegalArgumentException if <code>parent</code>
           is <code>null</code>; this exception is always thrown when
           <code>GraphicsEnvironment.isHeadless</code>
           returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.5
"
      end

      operation 6188930 "FileDialog"
	public explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog window with the specified title for loading
a file. The files shown are those in the current directory.
This is a convenience method for
<code>FileDialog(parent, title, LOAD)</code>.

@param     parent   the owner of the dialog
@param     title    the title of the dialog; a <code>null</code> value
                    will be accepted without causing a
                    <code>NullPointerException</code> to be thrown
@exception java.lang.IllegalArgumentException if the <code>parent</code>'s
           <code>GraphicsConfiguration</code>
           is not from a screen device;
@exception java.lang.IllegalArgumentException if <code>parent</code>
           is <code>null</code>; this exception is always thrown when
           <code>GraphicsEnvironment.isHeadless</code>
           returns <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@since     1.5
"
      end

      operation 6189058 "FileDialog"
	public explicit_return_type ""
	nparams 3
	  param inout name "parent" type class_ref 469122 // Dialog
	  param inout name "title" type class_ref 128130 // String
	  param in name "mode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a file dialog window with the specified title for loading
or saving a file.
<p>
If the value of <code>mode</code> is <code>LOAD</code>, then the
file dialog is finding a file to read, and the files shown are those
in the current directory.   If the value of
<code>mode</code> is <code>SAVE</code>, the file dialog is finding
a place to write a file.

@param     parent   the owner of the dialog
@param     title    the title of the dialog; a <code>null</code> value
                    will be accepted without causing a
                    <code>NullPointerException</code> to be thrown
@param     mode     the mode of the dialog; either
                    <code>FileDialog.LOAD</code> or <code>FileDialog.SAVE</code>
@exception java.lang.IllegalArgumentException if an illegal
           file dialog mode is supplied;
@exception java.lang.IllegalArgumentException if the <code>parent</code>'s
           <code>GraphicsConfiguration</code>
           is not from a screen device;
@exception java.lang.IllegalArgumentException if <code>parent</code>
           is <code>null</code>; this exception is always thrown when
           <code>GraphicsEnvironment.isHeadless</code>
           returns <code>true</code>
@see       java.awt.GraphicsEnvironment#isHeadless
@see       java.awt.FileDialog#LOAD
@see       java.awt.FileDialog#SAVE
@since     1.5
"
      end

      operation 6189186 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this component. Called by <code>getName()</code>
when the name is <code>null</code>.
"
      end

      operation 6189314 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the file dialog's peer.  The peer allows us to change the look
of the file dialog without changing its functionality.
"
      end

      operation 6189442 "getMode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this file dialog box is for loading from a file
or for saving to a file.

@return   the mode of this file dialog window, either
              <code>FileDialog.LOAD</code> or
              <code>FileDialog.SAVE</code>
@see      java.awt.FileDialog#LOAD
@see      java.awt.FileDialog#SAVE
@see      java.awt.FileDialog#setMode
"
      end

      operation 6189570 "setMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the mode of the file dialog.  If <code>mode</code> is not
a legal value, an exception will be thrown and <code>mode</code>
will not be set.

@param      mode  the mode for this file dialog, either
                <code>FileDialog.LOAD</code> or
                <code>FileDialog.SAVE</code>
@see        java.awt.FileDialog#LOAD
@see        java.awt.FileDialog#SAVE
@see        java.awt.FileDialog#getMode
@exception  IllegalArgumentException if an illegal file
                dialog mode is supplied
@since      JDK1.1
"
      end

      operation 6189698 "getDirectory"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the directory of this file dialog.

@return  the (potentially <code>null</code> or invalid)
         directory of this <code>FileDialog</code>
@see       java.awt.FileDialog#setDirectory
"
      end

      operation 6189826 "setDirectory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dir" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the directory of this file dialog window to be the
specified directory. Specifying a <code>null</code> or an
invalid directory implies an implementation-defined default.
This default will not be realized, however, until the user
has selected a file. Until this point, <code>getDirectory()</code>
will return the value passed into this method.
<p>
Specifying \"\" as the directory is exactly equivalent to
specifying <code>null</code> as the directory.

@param     dir   the specified directory
@see       java.awt.FileDialog#getDirectory
"
      end

      operation 6189954 "getFile"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the selected file of this file dialog.  If the user
selected <code>CANCEL</code>, the returned file is <code>null</code>.

@return    the currently selected file of this file dialog window,
               or <code>null</code> if none is selected
@see       java.awt.FileDialog#setFile
"
      end

      operation 6190082 "getFiles"
	public return_type class_ref 131970 // File
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns files that the user selects.
<p>
If the user cancels the file dialog,
then the method returns an empty array.

@return    files that the user selects or an empty array
           if the user cancels the file dialog.
@see       #setFile(String)
@see       #getFile
@since 1.7
"
      end

      operation 6190210 "setFiles"
	private explicit_return_type "void"
	nparams 1
	  param inout name "files" type class_ref 131970 // File
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the names of all the files that the user selects.

Note that the method is private and it's intended to be used
by the peers through the AWTAccessor API.

@param files     the array that contains the short names of
                 all the files that the user selects.

@see #getFiles
@since 1.7
"
      end

      operation 6190338 "setFile"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selected file for this file dialog window to be the
specified file. This file becomes the default file if it is set
before the file dialog window is first shown.
<p>
When the dialog is shown, the specified file is selected. The kind of
selection depends on the file existence, the dialog type, and the native
platform. E.g., the file could be highlighted in the file list, or a
file name editbox could be populated with the file name.
<p>
This method accepts either a full file path, or a file name with an
extension if used together with the {@code setDirectory} method.
<p>
Specifying \"\" as the file is exactly equivalent to specifying
{@code null} as the file.

@param    file   the file being set
@see      #getFile
@see      #getFiles
"
      end

      operation 6190466 "setMultipleMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables multiple file selection for the file dialog.

@param enable    if {@code true}, multiple file selection is enabled;
                 {@code false} - disabled.
@see #isMultipleMode
@since 1.7
"
      end

      operation 6190594 "isMultipleMode"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the file dialog allows the multiple file selection.

@return          {@code true} if the file dialog allows the multiple
                 file selection; {@code false} otherwise.
@see #setMultipleMode
@since 1.7
"
      end

      operation 6190722 "getFilenameFilter"
	public return_type class_ref 580482 // FilenameFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines this file dialog's filename filter. A filename filter
allows the user to specify which files appear in the file dialog
window.  Filename filters do not function in Sun's reference
implementation for Microsoft Windows.

@return    this file dialog's filename filter
@see       java.io.FilenameFilter
@see       java.awt.FileDialog#setFilenameFilter
"
      end

      operation 6190850 "setFilenameFilter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 580482 // FilenameFilter
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the filename filter for this file dialog window to the
specified filter.
Filename filters do not function in Sun's reference
implementation for Microsoft Windows.

@param   filter   the specified filter
@see     java.io.FilenameFilter
@see     java.awt.FileDialog#getFilenameFilter
"
      end

      operation 6190978 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and performs
a backwards compatibility check by converting
either a <code>dir</code> or a <code>file</code>
equal to an empty string to <code>null</code>.

@param s the <code>ObjectInputStream</code> to read
"
      end

      operation 6191106 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>FileDialog</code>
window. This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return  the parameter string of this file dialog window
"
      end

      operation 6191234 "postsOldMouseEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 865282 "FlowLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A flow layout arranges components in a directional flow, much
like lines of text in a paragraph. The flow direction is
determined by the container's <code>componentOrientation</code>
property and may be one of two values:
<ul>
<li><code>ComponentOrientation.LEFT_TO_RIGHT</code>
<li><code>ComponentOrientation.RIGHT_TO_LEFT</code>
</ul>
Flow layouts are typically used
to arrange buttons in a panel. It arranges buttons
horizontally until no more buttons fit on the same line.
The line alignment is determined by the <code>align</code>
property. The possible values are:
<ul>
<li>{@link #LEFT LEFT}
<li>{@link #RIGHT RIGHT}
<li>{@link #CENTER CENTER}
<li>{@link #LEADING LEADING}
<li>{@link #TRAILING TRAILING}
</ul>
<p>
For example, the following picture shows an applet using the flow
layout manager (its default layout manager) to position three buttons:
<p>
<img src=\"doc-files/FlowLayout-1.gif\"
ALT=\"Graphic of Layout for Three Buttons\"
style=\"float:center; margin: 7px 10px;\">
<p>
Here is the code for this applet:

<hr><blockquote><pre>
import java.awt.*;
import java.applet.Applet;

public class myButtons extends Applet {
    Button button1, button2, button3;
    public void init() {
        button1 = new Button(\"Ok\");
        button2 = new Button(\"Open\");
        button3 = new Button(\"Close\");
        add(button1);
        add(button2);
        add(button3);
    }
}
</pre></blockquote><hr>
<p>
A flow layout lets each component assume its natural (preferred) size.

@author      Arthur van Hoff
@author      Sami Shaio
@since       JDK1.0
@see ComponentOrientation
"
      classrelation 2915586 // <realization>
	relation 2915586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2915586 // <realization>
	  b parent class_ref 349698 // LayoutManager
      end

      classrelation 2915714 // <realization>
	relation 2915714 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2915714 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1368066 "LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value indicates that each row of components
should be left-justified.

"
      end

      attribute 1368194 "CENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value indicates that each row of components
should be centered.

"
      end

      attribute 1368322 "RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value indicates that each row of components
should be right-justified.

"
      end

      attribute 1368450 "LEADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value indicates that each row of components
should be justified to the leading edge of the container's
orientation, for example, to the left in left-to-right orientations.

@see     java.awt.Component#getComponentOrientation
@see     java.awt.ComponentOrientation
@since   1.2

"
      end

      attribute 1368578 "TRAILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value indicates that each row of components
should be justified to the trailing edge of the container's
orientation, for example, to the right in left-to-right orientations.

@see     java.awt.Component#getComponentOrientation
@see     java.awt.ComponentOrientation
@since   1.2

"
      end

      attribute 1368706 "align"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>align</code> is the property that determines
how each row distributes empty space.
It can be one of the following values:
<ul>
<li><code>LEFT</code>
<li><code>RIGHT</code>
<li><code>CENTER</code>
</ul>

@serial
@see #getAlignment
@see #setAlignment

 This is for 1.1 serialization compatibility"
      end

      attribute 1368834 "newAlign"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>newAlign</code> is the property that determines
how each row distributes empty space for the Java 2 platform,
v1.2 and greater.
It can be one of the following three values:
<ul>
<li><code>LEFT</code>
<li><code>RIGHT</code>
<li><code>CENTER</code>
<li><code>LEADING</code>
<li><code>TRAILING</code>
</ul>

@serial
@since 1.2
@see #getAlignment
@see #setAlignment

 This is the one we actually use"
      end

      attribute 1368962 "hgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The flow layout manager allows a seperation of
components with gaps.  The horizontal gap will
specify the space between components and between
the components and the borders of the
<code>Container</code>.

@serial
@see #getHgap()
@see #setHgap(int)

"
      end

      attribute 1369090 "vgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The flow layout manager allows a seperation of
components with gaps.  The vertical gap will
specify the space between rows and between the
the rows and the borders of the <code>Container</code>.

@serial
@see #getHgap()
@see #setHgap(int)

"
      end

      attribute 1369218 "alignOnBaseline"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, components will be aligned on their baseline.

"
      end

      attribute 1369346 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7262534875583282631L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6191362 "FlowLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>FlowLayout</code> with a centered alignment and a
default 5-unit horizontal and vertical gap.
"
      end

      operation 6191490 "FlowLayout"
	public explicit_return_type ""
	nparams 1
	  param in name "align" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>FlowLayout</code> with the specified
alignment and a default 5-unit horizontal and vertical gap.
The value of the alignment argument must be one of
<code>FlowLayout.LEFT</code>, <code>FlowLayout.RIGHT</code>,
<code>FlowLayout.CENTER</code>, <code>FlowLayout.LEADING</code>,
or <code>FlowLayout.TRAILING</code>.
@param align the alignment value
"
      end

      operation 6191618 "FlowLayout"
	public explicit_return_type ""
	nparams 3
	  param in name "align" explicit_type "int"
	  param in name "hgap" explicit_type "int"
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new flow layout manager with the indicated alignment
and the indicated horizontal and vertical gaps.
<p>
The value of the alignment argument must be one of
<code>FlowLayout.LEFT</code>, <code>FlowLayout.RIGHT</code>,
<code>FlowLayout.CENTER</code>, <code>FlowLayout.LEADING</code>,
or <code>FlowLayout.TRAILING</code>.
@param      align   the alignment value
@param      hgap    the horizontal gap between components
                    and between the components and the
                    borders of the <code>Container</code>
@param      vgap    the vertical gap between components
                    and between the components and the
                    borders of the <code>Container</code>
"
      end

      operation 6191746 "getAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the alignment for this layout.
Possible values are <code>FlowLayout.LEFT</code>,
<code>FlowLayout.RIGHT</code>, <code>FlowLayout.CENTER</code>,
<code>FlowLayout.LEADING</code>,
or <code>FlowLayout.TRAILING</code>.
@return     the alignment value for this layout
@see        java.awt.FlowLayout#setAlignment
@since      JDK1.1
"
      end

      operation 6191874 "setAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "align" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment for this layout.
Possible values are
<ul>
<li><code>FlowLayout.LEFT</code>
<li><code>FlowLayout.RIGHT</code>
<li><code>FlowLayout.CENTER</code>
<li><code>FlowLayout.LEADING</code>
<li><code>FlowLayout.TRAILING</code>
</ul>
@param      align one of the alignment values shown above
@see        #getAlignment()
@since      JDK1.1
"
      end

      operation 6192002 "getHgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the horizontal gap between components
and between the components and the borders
of the <code>Container</code>

@return     the horizontal gap between components
            and between the components and the borders
            of the <code>Container</code>
@see        java.awt.FlowLayout#setHgap
@since      JDK1.1
"
      end

      operation 6192130 "setHgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "hgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal gap between components and
between the components and the borders of the
<code>Container</code>.

@param hgap the horizontal gap between components
            and between the components and the borders
            of the <code>Container</code>
@see        java.awt.FlowLayout#getHgap
@since      JDK1.1
"
      end

      operation 6192258 "getVgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the vertical gap between components and
between the components and the borders of the
<code>Container</code>.

@return     the vertical gap between components
            and between the components and the borders
            of the <code>Container</code>
@see        java.awt.FlowLayout#setVgap
@since      JDK1.1
"
      end

      operation 6192386 "setVgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical gap between components and between
the components and the borders of the <code>Container</code>.

@param vgap the vertical gap between components
            and between the components and the borders
            of the <code>Container</code>
@see        java.awt.FlowLayout#getVgap
@since      JDK1.1
"
      end

      operation 6192514 "setAlignOnBaseline"
	public explicit_return_type "void"
	nparams 1
	  param inout name "alignOnBaseline" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not components should be vertically aligned along their
baseline.  Components that do not have a baseline will be centered.
The default is false.

@param alignOnBaseline whether or not components should be
                       vertically aligned on their baseline
@since 1.6
"
      end

      operation 6192642 "getAlignOnBaseline"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if components are to be vertically aligned along
their baseline.  The default is false.

@return true if components are to be vertically aligned along
             their baseline
@since 1.6
"
      end

      operation 6192770 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout.
Not used by this class.
@param name the name of the component
@param comp the component to be added
"
      end

      operation 6192898 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout.
Not used by this class.
@param comp the component to remove
@see       java.awt.Container#removeAll
"
      end

      operation 6193026 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred dimensions for this layout given the
<i>visible</i> components in the specified target container.

@param target the container that needs to be laid out
@return    the preferred dimensions to lay out the
           subcomponents of the specified container
@see Container
@see #minimumLayoutSize
@see       java.awt.Container#getPreferredSize
"
      end

      operation 6193154 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum dimensions needed to layout the <i>visible</i>
components contained in the specified target container.
@param target the container that needs to be laid out
@return    the minimum dimensions to lay out the
           subcomponents of the specified container
@see #preferredLayoutSize
@see       java.awt.Container
@see       java.awt.Container#doLayout
"
      end

      operation 6193282 "moveComponents"
	private explicit_return_type "int"
	nparams 11
	  param inout name "target" type class_ref 338690 // Container
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "rowStart" explicit_type "int"
	  param in name "rowEnd" explicit_type "int"
	  param inout name "ltr" explicit_type "boolean"
	  param inout name "useBaseline" explicit_type "boolean"
	  param inout name "ascent" explicit_type "int"
	multiplicity "[]"
	  param inout name "descent" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9}[] ${p9}, ${t10}[] ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Centers the elements in the specified row, if there is any slack.
@param target the component which needs to be moved
@param x the x coordinate
@param y the y coordinate
@param width the width dimensions
@param height the height dimensions
@param rowStart the beginning of the row
@param rowEnd the the ending of the row
@param useBaseline Whether or not to align on baseline.
@param ascent Ascent for the components. This is only valid if
              useBaseline is true.
@param descent Ascent for the components. This is only valid if
              useBaseline is true.
@return actual row height
"
      end

      operation 6193410 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the container. This method lets each
<i>visible</i> component take
its preferred size by reshaping the components in the
target container in order to satisfy the alignment of
this <code>FlowLayout</code> object.

@param target the specified component being laid out
@see Container
@see       java.awt.Container#doLayout
"
      end

      attribute 1369474 "currentSerialVersion"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the internal serial version which says which version was written
 - 0 (default) for versions before the Java 2 platform, v1.2
 - 1 for version >= Java 2 platform v1.2, which includes \"newAlign\" field

"
      end

      attribute 1369602 "serialVersionOnStream"
	private explicit_type "int"
	init_value " currentSerialVersion"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This represent the <code>currentSerialVersion</code>
which is bein used.  It will be one of two values :
<code>0</code> versions before Java 2 platform v1.2..
<code>1</code> versions after  Java 2 platform v1.2..

@serial
@since 1.2

"
      end

      operation 6193538 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object out of a serialization stream, handling
objects written by older versions of the class that didn't contain all
of the fields we use now..
"
      end

      operation 6193666 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>FlowLayout</code>
object and its values.
@return     a string representation of this layout
"
      end
    end

    class 865794 "FontFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by method createFont in the <code>Font</code> class to indicate
that the specified font is bad.

@author  Parry Kejriwal
@see     java.awt.Font
@since   1.3
"
      classrelation 2917378 // <generalisation>
	relation 2917378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2917378 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1373570 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4481290147811361272L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      operation 6204290 "FontFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a FontFormatException for the reason specified.
@param reason a <code>String</code> message indicating why
       the font is not accepted.
"
      end
    end

    class 866562 "MenuBar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>MenuBar</code> class encapsulates the platform's
concept of a menu bar bound to a frame. In order to associate
the menu bar with a <code>Frame</code> object, call the
frame's <code>setMenuBar</code> method.
<p>
<A NAME=\"mbexample\"></A><!-- target for cross references -->
This is what a menu bar might look like:
<p>
<img src=\"doc-files/MenuBar-1.gif\"
alt=\"Diagram of MenuBar containing 2 menus: Examples and Options.
Examples menu is expanded showing items: Basic, Simple, Check, and More Examples.\"
style=\"float:center; margin: 7px 10px;\">
<p>
A menu bar handles keyboard shortcuts for menu items, passing them
along to its child menus.
(Keyboard shortcuts, which are optional, provide the user with
an alternative to the mouse for invoking a menu item and the
action that is associated with it.)
Each menu item can maintain an instance of <code>MenuShortcut</code>.
The <code>MenuBar</code> class defines several methods,
{@link MenuBar#shortcuts} and
{@link MenuBar#getShortcutMenuItem}
that retrieve information about the shortcuts a given
menu bar is managing.

@author Sami Shaio
@see        java.awt.Frame
@see        java.awt.Frame#setMenuBar(java.awt.MenuBar)
@see        java.awt.Menu
@see        java.awt.MenuItem
@see        java.awt.MenuShortcut
@since      JDK1.0
"
      classrelation 2937730 // <generalisation>
	relation 2937730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2937730 // <generalisation>
	  b parent class_ref 340482 // MenuComponent
      end

      classrelation 2937858 // <realization>
	relation 2937858 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2937858 // <realization>
	  b parent class_ref 340226 // MenuContainer
      end

      classrelation 2937986 // <realization>
	relation 2937986 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2937986 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 150914 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
        AWTAccessor.setMenuBarAccessor(
            new AWTAccessor.MenuBarAccessor() {
                public Menu getHelpMenu(MenuBar menuBar) {
                    return menuBar.helpMenu;
                }

                public Vector<Menu> getMenus(MenuBar menuBar) {
                    return menuBar.menus;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2938114 // menus (<unidirectional association>)
	relation 2938114 --->
	  a role_name "menus" init_value " new Vector<>()" package
	    comment "
This field represents a vector of the
actual menus that will be part of the MenuBar.

@serial
@see #countMenus()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Menu> ${name}${value};
"
	    classrelation_ref 2938114 // menus (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 2938242 // helpMenu (<unidirectional association>)
	relation 2938242 --->
	  a role_name "helpMenu" package
	    comment "
This menu is a special menu dedicated to
help.  The one thing to note about this menu
is that on some platforms it appears at the
right edge of the menubar.

@serial
@see #getHelpMenu()
@see #setHelpMenu(Menu)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2938242 // helpMenu (<unidirectional association>)
	  b parent class_ref 872194 // Menu
      end

      classrelation 2938370 // base (<unidirectional association>)
	relation 2938370 --->
	  a role_name "base" init_value " \"menubar\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2938370 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1404162 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1404290 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4930327919388951260L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6285442 "MenuBar"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new menu bar.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6285570 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this MenuComponent.  Called by getName() when
the name is null.
"
      end

      operation 6285698 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the menu bar's peer.  The peer allows us to change the
appearance of the menu bar without changing any of the menu bar's
functionality.
"
      end

      operation 6285826 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu bar's peer.  The peer allows us to change the
appearance of the menu bar without changing any of the menu bar's
functionality.
"
      end

      operation 6285954 "getHelpMenu"
	public return_type class_ref 872194 // Menu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the help menu on the menu bar.
@return    the help menu on this menu bar.
"
      end

      operation 6286082 "setHelpMenu"
	public explicit_return_type "void"
	nparams 1
	  param in name "m" type class_ref 872194 // Menu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified menu to be this menu bar's help menu.
If this menu bar has an existing help menu, the old help menu is
removed from the menu bar, and replaced with the specified menu.
@param m    the menu to be set as the help menu
"
      end

      operation 6286210 "add"
	public return_type class_ref 872194 // Menu
	nparams 1
	  param inout name "m" type class_ref 872194 // Menu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified menu to the menu bar.
If the menu has been part of another menu bar,
removes it from that menu bar.

@param        m   the menu to be added
@return       the menu added
@see          java.awt.MenuBar#remove(int)
@see          java.awt.MenuBar#remove(java.awt.MenuComponent)
"
      end

      operation 6286338 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu located at the specified
index from this menu bar.
@param        index   the position of the menu to be removed.
@see          java.awt.MenuBar#add(java.awt.Menu)
"
      end

      operation 6286466 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "m" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified menu component from this menu bar.
@param        m the menu component to be removed.
@see          java.awt.MenuBar#add(java.awt.Menu)
"
      end

      operation 6286594 "getMenuCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of menus on the menu bar.
@return     the number of menus on the menu bar.
@since      JDK1.1
"
      end

      operation 6286722 "countMenus"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMenuCount()</code>.
"
      end

      operation 6286850 "getMenuCountImpl"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 6286978 "getMenu"
	public return_type class_ref 872194 // Menu
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the specified menu.
@param      i the index position of the menu to be returned.
@return     the menu at the specified index of this menu bar.
"
      end

      operation 6287106 "getMenuImpl"
	package return_type class_ref 872194 // Menu
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 6287234 "shortcuts"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<MenuShortcut> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an enumeration of all menu shortcuts this menu bar
is managing.
@return      an enumeration of menu shortcuts that this
                     menu bar is managing.
@see         java.awt.MenuShortcut
@since       JDK1.1
"
      end

      operation 6287362 "getShortcutMenuItem"
	public return_type class_ref 859394 // MenuItem
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the instance of <code>MenuItem</code> associated
with the specified <code>MenuShortcut</code> object,
or <code>null</code> if none of the menu items being managed
by this menu bar is associated with the specified menu
shortcut.
@param        s the specified menu shortcut.
@see          java.awt.MenuItem
@see          java.awt.MenuShortcut
@since        JDK1.1
"
      end

      operation 6287490 "handleShortcut"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Post an ACTION_EVENT to the target of the MenuPeer
associated with the specified keyboard event (on
keydown).  Returns true if there is an associated
keyboard event.
"
      end

      operation 6287618 "deleteShortcut"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the specified menu shortcut.
@param     s the menu shortcut to delete.
@since     JDK1.1
"
      end

      attribute 1404418 "menuBarSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.  Restore the (transient) parent
fields of Menubar menus here.


The MenuBar's serialized data version.

@serial

"
      end

      operation 6287746 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.

@param s the <code>ObjectOutputStream</code> to write
@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see #readObject(java.io.ObjectInputStream)
"
      end

      operation 6287874 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(java.io.ObjectOutputStream)
"
      end

      operation 6288002 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6288130 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this MenuBar.
For menu bars, the AccessibleContext takes the form of an
AccessibleAWTMenuBar.
A new AccessibleAWTMenuBar instance is created if necessary.

@return an AccessibleAWTMenuBar that serves as the
        AccessibleContext of this MenuBar
@since 1.3
"
      end

      operation 6288258 "getAccessibleChildIndex"
	package explicit_return_type "int"
	nparams 1
	  param inout name "child" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defined in MenuComponent. Overridden here.
"
      end

      class 872450 "AccessibleAWTMenuBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2938498 // <generalisation>
	  relation 2938498 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2938498 // <generalisation>
	    b parent class_ref 859650 // AccessibleAWTMenuComponent
	end

	attribute 1404546 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8577604491830083815L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6288386 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@since 1.4
"
	end
      end
    end

    class 866818 "GradientPaint"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GradientPaint</code> class provides a way to fill
a {@link Shape} with a linear color gradient pattern.
If {@link Point} P1 with {@link Color} C1 and <code>Point</code> P2 with
<code>Color</code> C2 are specified in user space, the
<code>Color</code> on the P1, P2 connecting line is proportionally
changed from C1 to C2.  Any point P not on the extended P1, P2
connecting line has the color of the point P' that is the perpendicular
projection of P on the extended P1, P2 connecting line.
Points on the extended line outside of the P1, P2 segment can be colored
in one of two ways.
<ul>
<li>
If the gradient is cyclic then the points on the extended P1, P2
connecting line cycle back and forth between the colors C1 and C2.
<li>
If the gradient is acyclic then points on the P1 side of the segment
have the constant <code>Color</code> C1 while points on the P2 side
have the constant <code>Color</code> C2.
</ul>

@see Paint
@see Graphics2D#setPaint
@version 10 Feb 1997
"
      classrelation 2918914 // <realization>
	relation 2918914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2918914 // <realization>
	  b parent class_ref 860418 // Paint
      end

      classrelation 2919042 // p1 (<unidirectional association>)
	relation 2919042 --->
	  a role_name "p1" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919042 // p1 (<unidirectional association>)
	  b parent class_ref 866946 // Float
      end

      classrelation 2919170 // p2 (<unidirectional association>)
	relation 2919170 --->
	  a role_name "p2" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919170 // p2 (<unidirectional association>)
	  b parent class_ref 866946 // Float
      end

      classrelation 2919298 // color1 (<unidirectional association>)
	relation 2919298 --->
	  a role_name "color1" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919298 // color1 (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2919426 // color2 (<unidirectional association>)
	relation 2919426 --->
	  a role_name "color2" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919426 // color2 (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      attribute 1377282 "cyclic"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6213378 "GradientPaint"
	public explicit_return_type ""
	nparams 6
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param inout name "color1" type class_ref 323458 // Color
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param inout name "color2" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a simple acyclic <code>GradientPaint</code> object.
@param x1 x coordinate of the first specified
<code>Point</code> in user space
@param y1 y coordinate of the first specified
<code>Point</code> in user space
@param color1 <code>Color</code> at the first specified
<code>Point</code>
@param x2 x coordinate of the second specified
<code>Point</code> in user space
@param y2 y coordinate of the second specified
<code>Point</code> in user space
@param color2 <code>Color</code> at the second specified
<code>Point</code>
@throws NullPointerException if either one of colors is null
"
      end

      operation 6213506 "GradientPaint"
	public explicit_return_type ""
	nparams 4
	  param inout name "pt1" type class_ref 380802 // Point2D
	  param inout name "color1" type class_ref 323458 // Color
	  param inout name "pt2" type class_ref 380802 // Point2D
	  param inout name "color2" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a simple acyclic <code>GradientPaint</code> object.
@param pt1 the first specified <code>Point</code> in user space
@param color1 <code>Color</code> at the first specified
<code>Point</code>
@param pt2 the second specified <code>Point</code> in user space
@param color2 <code>Color</code> at the second specified
<code>Point</code>
@throws NullPointerException if either one of colors or points
is null
"
      end

      operation 6213634 "GradientPaint"
	public explicit_return_type ""
	nparams 7
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param inout name "color1" type class_ref 323458 // Color
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param inout name "color2" type class_ref 323458 // Color
	  param inout name "cyclic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs either a cyclic or acyclic <code>GradientPaint</code>
object depending on the <code>boolean</code> parameter.
@param x1 x coordinate of the first specified
<code>Point</code> in user space
@param y1 y coordinate of the first specified
<code>Point</code> in user space
@param color1 <code>Color</code> at the first specified
<code>Point</code>
@param x2 x coordinate of the second specified
<code>Point</code> in user space
@param y2 y coordinate of the second specified
<code>Point</code> in user space
@param color2 <code>Color</code> at the second specified
<code>Point</code>
@param cyclic <code>true</code> if the gradient pattern should cycle
repeatedly between the two colors; <code>false</code> otherwise
"
      end

      operation 6213762 "GradientPaint"
	public explicit_return_type ""
	nparams 5
	  param inout name "pt1" type class_ref 380802 // Point2D
	  param inout name "color1" type class_ref 323458 // Color
	  param inout name "pt2" type class_ref 380802 // Point2D
	  param inout name "color2" type class_ref 323458 // Color
	  param inout name "cyclic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({ \"point1\", \"color1\", \"point2\", \"color2\", \"cyclic\" })
"
	
	
	
	comment "Constructs either a cyclic or acyclic <code>GradientPaint</code>
object depending on the <code>boolean</code> parameter.
@param pt1 the first specified <code>Point</code>
in user space
@param color1 <code>Color</code> at the first specified
<code>Point</code>
@param pt2 the second specified <code>Point</code>
in user space
@param color2 <code>Color</code> at the second specified
<code>Point</code>
@param cyclic <code>true</code> if the gradient pattern should cycle
repeatedly between the two colors; <code>false</code> otherwise
@throws NullPointerException if either one of colors or points
is null
"
      end

      operation 6213890 "getPoint1"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the point P1 that anchors the first color.
@return a {@link Point2D} object that is a copy of the point
that anchors the first color of this
<code>GradientPaint</code>.
"
      end

      operation 6214018 "getColor1"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color C1 anchored by the point P1.
@return a <code>Color</code> object that is the color
anchored by P1.
"
      end

      operation 6214146 "getPoint2"
	public return_type class_ref 380802 // Point2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the point P2 which anchors the second color.
@return a {@link Point2D} object that is a copy of the point
that anchors the second color of this
<code>GradientPaint</code>.
"
      end

      operation 6214274 "getColor2"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color C2 anchored by the point P2.
@return a <code>Color</code> object that is the color
anchored by P2.
"
      end

      operation 6214402 "isCyclic"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the gradient cycles repeatedly
between the two colors C1 and C2.
@return <code>true</code> if the gradient cycles repeatedly
between the two colors; <code>false</code> otherwise.
"
      end

      operation 6214530 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate a linear color gradient pattern.
See the {@link Paint#createContext specification} of the
method in the {@link Paint} interface for information
on null parameter handling.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param deviceBounds the device space bounding box
                    of the graphics primitive being rendered.
@param userBounds the user space bounding box
                  of the graphics primitive being rendered.
@param xform the {@link AffineTransform} from user
             space into device space.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
@return the {@code PaintContext} for
        generating color patterns.
@see Paint
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end

      operation 6214658 "getTransparency"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the transparency mode for this <code>GradientPaint</code>.
@return an integer value representing this <code>GradientPaint</code>
object's transparency mode.
@see Transparency
"
      end
    end

    class 867074 "GradientPaintContext"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2919554 // <realization>
	relation 2919554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2919554 // <realization>
	  b parent class_ref 860674 // PaintContext
      end

      classrelation 2919682 // xrgbmodel (<unidirectional association>)
	relation 2919682 --->
	  a role_name "xrgbmodel" init_value "
        new DirectColorModel(24, 0x00ff0000, 0x0000ff00, 0x000000ff)" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919682 // xrgbmodel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2919810 // xbgrmodel (<unidirectional association>)
	relation 2919810 --->
	  a role_name "xbgrmodel" init_value "
        new DirectColorModel(24, 0x000000ff, 0x0000ff00, 0x00ff0000)" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919810 // xbgrmodel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2919938 // cachedModel (<unidirectional association>)
	relation 2919938 --->
	  a role_name "cachedModel" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2919938 // cachedModel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2920066 // cached (<unidirectional association>)
	relation 2920066 --->
	  a role_name "cached" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Raster> ${name}${value};
"
	    classrelation_ref 2920066 // cached (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      operation 6214786 "getCachedRaster"
	class_operation package return_type class_ref 311682 // Raster
	nparams 3
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6214914 "putCachedRaster"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "ras" type class_ref 311682 // Raster
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1377410 "x1"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1377538 "y1"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1377666 "dx"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1377794 "dy"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1377922 "cyclic"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1378050 "interp"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2920194 // saved (<unidirectional association>)
	relation 2920194 --->
	  a role_name "saved" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2920194 // saved (<unidirectional association>)
	  b parent class_ref 311682 // Raster
      end

      classrelation 2920322 // model (<unidirectional association>)
	relation 2920322 --->
	  a role_name "model" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2920322 // model (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      operation 6215042 "GradientPaintContext"
	public explicit_return_type ""
	nparams 7
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "p1" type class_ref 380802 // Point2D
	  param inout name "p2" type class_ref 380802 // Point2D
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "c1" type class_ref 323458 // Color
	  param inout name "c2" type class_ref 323458 // Color
	  param inout name "cyclic" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6215170 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release the resources allocated for the operation.
"
      end

      operation 6215298 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ColorModel of the output.
"
      end

      operation 6215426 "getRaster"
	public return_type class_ref 311682 // Raster
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a Raster containing the colors generated for the graphics
operation.
@param x,y,w,h The area in device space for which colors are
generated.
"
      end

      operation 6215554 "cycleFillRaster"
	package explicit_return_type "void"
	nparams 8
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "rowrel" explicit_type "double"
	  param in name "dx" explicit_type "double"
	  param in name "dy" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6215682 "clipFillRaster"
	package explicit_return_type "void"
	nparams 8
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "rowrel" explicit_type "double"
	  param in name "dx" explicit_type "double"
	  param in name "dy" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 867586 "GraphicsCallback"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 867842 "PaintCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2920706 // <generalisation>
	  relation 2920706 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2920706 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2920834 // instance (<unidirectional association>)
	  relation 2920834 --->
	    a role_name "instance" init_value " new PaintCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2920834 // instance (<unidirectional association>)
	    b parent class_ref 867842 // PaintCallback
	end

	operation 6227458 "PaintCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6227586 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6227714 "getInstance"
	  class_operation package return_type class_ref 867842 // PaintCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 867970 "PrintCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2920962 // <generalisation>
	  relation 2920962 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2920962 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2921090 // instance (<unidirectional association>)
	  relation 2921090 --->
	    a role_name "instance" init_value " new PrintCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2921090 // instance (<unidirectional association>)
	    b parent class_ref 867970 // PrintCallback
	end

	operation 6227842 "PrintCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6227970 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6228098 "getInstance"
	  class_operation package return_type class_ref 867970 // PrintCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868098 "PaintAllCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2921218 // <generalisation>
	  relation 2921218 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2921218 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2921346 // instance (<unidirectional association>)
	  relation 2921346 --->
	    a role_name "instance" init_value " new PaintAllCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2921346 // instance (<unidirectional association>)
	    b parent class_ref 868098 // PaintAllCallback
	end

	operation 6228226 "PaintAllCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6228354 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6228482 "getInstance"
	  class_operation package return_type class_ref 868098 // PaintAllCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868226 "PrintAllCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2921474 // <generalisation>
	  relation 2921474 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2921474 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2921602 // instance (<unidirectional association>)
	  relation 2921602 --->
	    a role_name "instance" init_value " new PrintAllCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2921602 // instance (<unidirectional association>)
	    b parent class_ref 868226 // PrintAllCallback
	end

	operation 6228610 "PrintAllCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6228738 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6228866 "getInstance"
	  class_operation package return_type class_ref 868226 // PrintAllCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868354 "PeerPaintCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2921730 // <generalisation>
	  relation 2921730 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2921730 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2921858 // instance (<unidirectional association>)
	  relation 2921858 --->
	    a role_name "instance" init_value " new PeerPaintCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2921858 // instance (<unidirectional association>)
	    b parent class_ref 868354 // PeerPaintCallback
	end

	operation 6228994 "PeerPaintCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6229122 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6229250 "getInstance"
	  class_operation package return_type class_ref 868354 // PeerPaintCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868482 "PeerPrintCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2921986 // <generalisation>
	  relation 2921986 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2921986 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2922114 // instance (<unidirectional association>)
	  relation 2922114 --->
	    a role_name "instance" init_value " new PeerPrintCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2922114 // instance (<unidirectional association>)
	    b parent class_ref 868482 // PeerPrintCallback
	end

	operation 6229378 "PeerPrintCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6229506 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6229634 "getInstance"
	  class_operation package return_type class_ref 868482 // PeerPrintCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868610 "PaintHeavyweightComponentsCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2922242 // <generalisation>
	  relation 2922242 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2922242 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2922370 // instance (<unidirectional association>)
	  relation 2922370 --->
	    a role_name "instance" init_value "
            new PaintHeavyweightComponentsCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2922370 // instance (<unidirectional association>)
	    b parent class_ref 868610 // PaintHeavyweightComponentsCallback
	end

	operation 6229762 "PaintHeavyweightComponentsCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6229890 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6230018 "getInstance"
	  class_operation package return_type class_ref 868610 // PaintHeavyweightComponentsCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 868738 "PrintHeavyweightComponentsCallback"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2922498 // <generalisation>
	  relation 2922498 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2922498 // <generalisation>
	    b parent class_ref 867586 // GraphicsCallback
	end

	classrelation 2922626 // instance (<unidirectional association>)
	  relation 2922626 --->
	    a role_name "instance" init_value "
            new PrintHeavyweightComponentsCallback()" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2922626 // instance (<unidirectional association>)
	    b parent class_ref 868738 // PrintHeavyweightComponentsCallback
	end

	operation 6230146 "PrintHeavyweightComponentsCallback"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6230274 "run"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "comp" type class_ref 338818 // Component
	    param inout name "cg" type class_ref 343682 // Graphics
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6230402 "getInstance"
	  class_operation package return_type class_ref 868738 // PrintHeavyweightComponentsCallback
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4946178 // <generalisation>
	relation 4946178 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4946178 // <generalisation>
	  b parent class_ref 1499394 // SunGraphicsCallback
      end
    end

    class 868866 "GraphicsConfigTemplate"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GraphicsConfigTemplate</code> class is used to obtain a valid
{@link GraphicsConfiguration}.  A user instantiates one of these
objects and then sets all non-default attributes as desired.  The
{@link GraphicsDevice#getBestConfiguration} method found in the
{@link GraphicsDevice} class is then called with this
<code>GraphicsConfigTemplate</code>.  A valid
<code>GraphicsConfiguration</code> is returned that meets or exceeds
what was requested in the <code>GraphicsConfigTemplate</code>.
@see GraphicsDevice
@see GraphicsConfiguration

@since       1.2
"
      classrelation 2922754 // <realization>
	relation 2922754 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2922754 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1378178 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8061369279557787079L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      operation 6230530 "GraphicsConfigTemplate"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is an abstract class so only subclasses can be
instantiated.
"
      end

      attribute 1378306 "REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value used for \"Enum\" (Integer) type.  States that this
feature is required for the <code>GraphicsConfiguration</code>
object.  If this feature is not available, do not select the
<code>GraphicsConfiguration</code> object.

"
      end

      attribute 1378434 "PREFERRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value used for \"Enum\" (Integer) type.  States that this
feature is desired for the <code>GraphicsConfiguration</code>
object.  A selection with this feature is preferred over a
selection that does not include this feature, although both
selections can be considered valid matches.

"
      end

      attribute 1378562 "UNNECESSARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Value used for \"Enum\" (Integer) type.  States that this
feature is not necessary for the selection of the
<code>GraphicsConfiguration</code> object.  A selection
without this feature is preferred over a selection that
includes this feature since it is not used.

"
      end

      operation 6230658 "getBestConfiguration"
	abstract public return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"best\" configuration possible that passes the
criteria defined in the <code>GraphicsConfigTemplate</code>.
@param gc the array of <code>GraphicsConfiguration</code>
objects to choose from.
@return a <code>GraphicsConfiguration</code> object that is
the best configuration possible.
@see GraphicsConfiguration
"
      end

      operation 6230786 "isGraphicsConfigSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "gc" type class_ref 340994 // GraphicsConfiguration
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>boolean</code> indicating whether or
not the specified <code>GraphicsConfiguration</code> can be
used to create a drawing surface that supports the indicated
features.
@param gc the <code>GraphicsConfiguration</code> object to test
@return <code>true</code> if this
<code>GraphicsConfiguration</code> object can be used to create
surfaces that support the indicated features;
<code>false</code> if the <code>GraphicsConfiguration</code> can
not be used to create a drawing surface usable by this Java(tm)
API.
"
      end
    end

    class 868994 "GraphicsDevice"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GraphicsDevice</code> class describes the graphics devices
that might be available in a particular graphics environment.  These
include screen and printer devices. Note that there can be many screens
and many printers in an instance of {@link GraphicsEnvironment}. Each
graphics device has one or more {@link GraphicsConfiguration} objects
associated with it.  These objects specify the different configurations
in which the <code>GraphicsDevice</code> can be used.
<p>
In a multi-screen environment, the <code>GraphicsConfiguration</code>
objects can be used to render components on multiple screens.  The
following code sample demonstrates how to create a <code>JFrame</code>
object for each <code>GraphicsConfiguration</code> on each screen
device in the <code>GraphicsEnvironment</code>:
<pre>{@code
  GraphicsEnvironment ge = GraphicsEnvironment.
  getLocalGraphicsEnvironment();
  GraphicsDevice[] gs = ge.getScreenDevices();
  for (int j = 0; j < gs.length; j++) {
     GraphicsDevice gd = gs[j];
     GraphicsConfiguration[] gc =
     gd.getConfigurations();
     for (int i=0; i < gc.length; i++) {
        JFrame f = new
        JFrame(gs[j].getDefaultConfiguration());
        Canvas c = new Canvas(gc[i]);
        Rectangle gcBounds = gc[i].getBounds();
        int xoffs = gcBounds.x;
        int yoffs = gcBounds.y;
        f.getContentPane().add(c);
        f.setLocation((i*50)+xoffs, (i*60)+yoffs);
        f.show();
     }
  }
}</pre>
<p>
For more information on full-screen exclusive mode API, see the
<a href=\"https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html\">
Full-Screen Exclusive Mode API Tutorial</a>.

@see GraphicsEnvironment
@see GraphicsConfiguration
"
      classrelation 2923266 // fullScreenWindow (<unidirectional association>)
	relation 2923266 --->
	  a role_name "fullScreenWindow" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923266 // fullScreenWindow (<unidirectional association>)
	  b parent class_ref 347394 // Window
      end

      attribute 1378690 "fullScreenAppContext"
	private explicit_type "AppContext"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " tracks which AppContext"
      end

      classrelation 2923394 // fsAppContextLock (<unidirectional association>)
	relation 2923394 --->
	  a role_name "fsAppContextLock" init_value " new Object()" const_relation private
	    comment " created the FS window
 this lock is used for making synchronous changes to the AppContext's
 current full screen window
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923394 // fsAppContextLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2923522 // windowedModeBounds (<unidirectional association>)
	relation 2923522 --->
	  a role_name "windowedModeBounds" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923522 // windowedModeBounds (<unidirectional association>)
	  b parent class_ref 314114 // Rectangle
      end

      operation 6233090 "GraphicsDevice"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is an abstract class that cannot be instantiated directly.
Instances must be obtained from a suitable factory or query method.
@see GraphicsEnvironment#getScreenDevices
@see GraphicsEnvironment#getDefaultScreenDevice
@see GraphicsConfiguration#getDevice
"
      end

      attribute 1378818 "TYPE_RASTER_SCREEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Device is a raster screen.

"
      end

      attribute 1378946 "TYPE_PRINTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Device is a printer.

"
      end

      attribute 1379074 "TYPE_IMAGE_BUFFER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Device is an image buffer.  This buffer can reside in device
or system memory but it is not physically viewable by the user.

"
      end

      class 869250 "WindowTranslucency"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1379202 "PERPIXEL_TRANSPARENT"
	  public type class_ref 869250 // WindowTranslucency
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents support in the underlying system for windows each pixel
of which is guaranteed to be either completely opaque, with
an alpha value of 1.0, or completely transparent, with an alpha
value of 0.0.

"
	end

	attribute 1379330 "TRANSLUCENT"
	  public type class_ref 869250 // WindowTranslucency
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents support in the underlying system for windows all of
the pixels of which have the same alpha value between or including
0.0 and 1.0.

"
	end

	attribute 1379458 "PERPIXEL_TRANSLUCENT"
	  public type class_ref 869250 // WindowTranslucency
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Represents support in the underlying system for windows that
contain or might contain pixels with arbitrary alpha values
between and including 0.0 and 1.0.
"
	end
      end

      operation 6233218 "getType"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this <code>GraphicsDevice</code>.
@return the type of this <code>GraphicsDevice</code>, which can
either be TYPE_RASTER_SCREEN, TYPE_PRINTER or TYPE_IMAGE_BUFFER.
@see #TYPE_RASTER_SCREEN
@see #TYPE_PRINTER
@see #TYPE_IMAGE_BUFFER
"
      end

      operation 6233346 "getIDstring"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identification string associated with this
<code>GraphicsDevice</code>.
<p>
A particular program might use more than one
<code>GraphicsDevice</code> in a <code>GraphicsEnvironment</code>.
This method returns a <code>String</code> identifying a
particular <code>GraphicsDevice</code> in the local
<code>GraphicsEnvironment</code>.  Although there is
no public method to set this <code>String</code>, a programmer can
use the <code>String</code> for debugging purposes.  Vendors of
the Java&trade; Runtime Environment can
format the return value of the <code>String</code>.  To determine
how to interpret the value of the <code>String</code>, contact the
vendor of your Java Runtime.  To find out who the vendor is, from
your program, call the
{@link System#getProperty(String) getProperty} method of the
System class with \"java.vendor\".
@return a <code>String</code> that is the identification
of this <code>GraphicsDevice</code>.
"
      end

      operation 6233474 "getConfigurations"
	abstract public return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the <code>GraphicsConfiguration</code>
objects associated with this <code>GraphicsDevice</code>.
@return an array of <code>GraphicsConfiguration</code>
objects that are associated with this
<code>GraphicsDevice</code>.
"
      end

      operation 6233602 "getDefaultConfiguration"
	abstract public return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default <code>GraphicsConfiguration</code>
associated with this <code>GraphicsDevice</code>.
@return the default <code>GraphicsConfiguration</code>
of this <code>GraphicsDevice</code>.
"
      end

      operation 6233730 "getBestConfiguration"
	public return_type class_ref 340994 // GraphicsConfiguration
	nparams 1
	  param inout name "gct" type class_ref 868866 // GraphicsConfigTemplate
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"best\" configuration possible that passes the
criteria defined in the {@link GraphicsConfigTemplate}.
@param gct the <code>GraphicsConfigTemplate</code> object
used to obtain a valid <code>GraphicsConfiguration</code>
@return a <code>GraphicsConfiguration</code> that passes
the criteria defined in the specified
<code>GraphicsConfigTemplate</code>.
@see GraphicsConfigTemplate
"
      end

      operation 6233858 "isFullScreenSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this <code>GraphicsDevice</code>
supports full-screen exclusive mode.
If a SecurityManager is installed, its
<code>checkPermission</code> method will be called
with <code>AWTPermission(\"fullScreenExclusive\")</code>.
<code>isFullScreenSupported</code> returns true only if
that permission is granted.
@return whether full-screen exclusive mode is available for
this graphics device
@see java.awt.AWTPermission
@since 1.4
"
      end

      operation 6233986 "setFullScreenWindow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "w" type class_ref 347394 // Window
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enter full-screen mode, or return to windowed mode.  The entered
full-screen mode may be either exclusive or simulated.  Exclusive
mode is only available if <code>isFullScreenSupported</code>
returns <code>true</code>.
<p>
Exclusive mode implies:
<ul>
<li>Windows cannot overlap the full-screen window.  All other application
windows will always appear beneath the full-screen window in the Z-order.
<li>There can be only one full-screen window on a device at any time,
so calling this method while there is an existing full-screen Window
will cause the existing full-screen window to
return to windowed mode.
<li>Input method windows are disabled.  It is advisable to call
<code>Component.enableInputMethods(false)</code> to make a component
a non-client of the input method framework.
</ul>
<p>
The simulated full-screen mode places and resizes the window to the maximum
possible visible area of the screen. However, the native windowing system
may modify the requested geometry-related data, so that the {@code Window} object
is placed and sized in a way that corresponds closely to the desktop settings.
<p>
When entering full-screen mode, if the window to be used as a
full-screen window is not visible, this method will make it visible.
It will remain visible when returning to windowed mode.
<p>
When entering full-screen mode, all the translucency effects are reset for
the window. Its shape is set to {@code null}, the opacity value is set to
1.0f, and the background color alpha is set to 255 (completely opaque).
These values are not restored when returning to windowed mode.
<p>
It is unspecified and platform-dependent how decorated windows operate
in full-screen mode. For this reason, it is recommended to turn off
the decorations in a {@code Frame} or {@code Dialog} object by using the
{@code setUndecorated} method.
<p>
When returning to windowed mode from an exclusive full-screen window,
any display changes made by calling {@code setDisplayMode} are
automatically restored to their original state.

@param w a window to use as the full-screen window; {@code null}
if returning to windowed mode.  Some platforms expect the
fullscreen window to be a top-level component (i.e., a {@code Frame});
therefore it is preferable to use a {@code Frame} here rather than a
{@code Window}.

@see #isFullScreenSupported
@see #getFullScreenWindow
@see #setDisplayMode
@see Component#enableInputMethods
@see Component#setVisible
@see Frame#setUndecorated
@see Dialog#setUndecorated

@since 1.4
"
      end

      operation 6234114 "getFullScreenWindow"
	public return_type class_ref 347394 // Window
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Window</code> object representing the
full-screen window if the device is in full-screen mode.

@return the full-screen window, or <code>null</code> if the device is
not in full-screen mode.
@see #setFullScreenWindow(Window)
@since 1.4
"
      end

      operation 6234242 "isDisplayChangeSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this <code>GraphicsDevice</code>
supports low-level display changes.
On some platforms low-level display changes may only be allowed in
full-screen exclusive mode (i.e., if {@link #isFullScreenSupported()}
returns {@code true} and the application has already entered
full-screen mode using {@link #setFullScreenWindow}).
@return whether low-level display changes are supported for this
graphics device.
@see #isFullScreenSupported
@see #setDisplayMode
@see #setFullScreenWindow
@since 1.4
"
      end

      operation 6234370 "setDisplayMode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dm" type class_ref 863874 // DisplayMode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the display mode of this graphics device. This is only allowed
if {@link #isDisplayChangeSupported()} returns {@code true} and may
require first entering full-screen exclusive mode using
{@link #setFullScreenWindow} providing that full-screen exclusive mode is
supported (i.e., {@link #isFullScreenSupported()} returns
{@code true}).
<p>

The display mode must be one of the display modes returned by
{@link #getDisplayModes()}, with one exception: passing a display mode
with {@link DisplayMode#REFRESH_RATE_UNKNOWN} refresh rate will result in
selecting a display mode from the list of available display modes with
matching width, height and bit depth.
However, passing a display mode with {@link DisplayMode#BIT_DEPTH_MULTI}
for bit depth is only allowed if such mode exists in the list returned by
{@link #getDisplayModes()}.
<p>
Example code:
<pre><code>
Frame frame;
DisplayMode newDisplayMode;
GraphicsDevice gd;
// create a Frame, select desired DisplayMode from the list of modes
// returned by gd.getDisplayModes() ...

if (gd.isFullScreenSupported()) {
    gd.setFullScreenWindow(frame);
} else {
   // proceed in non-full-screen mode
   frame.setSize(...);
   frame.setLocation(...);
   frame.setVisible(true);
}

if (gd.isDisplayChangeSupported()) {
    gd.setDisplayMode(newDisplayMode);
}
</code></pre>

@param dm The new display mode of this graphics device.
@exception IllegalArgumentException if the <code>DisplayMode</code>
supplied is <code>null</code>, or is not available in the array returned
by <code>getDisplayModes</code>
@exception UnsupportedOperationException if
<code>isDisplayChangeSupported</code> returns <code>false</code>
@see #getDisplayMode
@see #getDisplayModes
@see #isDisplayChangeSupported
@since 1.4
"
      end

      operation 6234498 "getDisplayMode"
	public return_type class_ref 863874 // DisplayMode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current display mode of this
<code>GraphicsDevice</code>.
The returned display mode is allowed to have a refresh rate
{@link DisplayMode#REFRESH_RATE_UNKNOWN} if it is indeterminate.
Likewise, the returned display mode is allowed to have a bit depth
{@link DisplayMode#BIT_DEPTH_MULTI} if it is indeterminate or if multiple
bit depths are supported.
@return the current display mode of this graphics device.
@see #setDisplayMode(DisplayMode)
@since 1.4
"
      end

      operation 6234626 "getDisplayModes"
	public return_type class_ref 863874 // DisplayMode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all display modes available for this
<code>GraphicsDevice</code>.
The returned display modes are allowed to have a refresh rate
{@link DisplayMode#REFRESH_RATE_UNKNOWN} if it is indeterminate.
Likewise, the returned display modes are allowed to have a bit depth
{@link DisplayMode#BIT_DEPTH_MULTI} if it is indeterminate or if multiple
bit depths are supported.
@return all of the display modes available for this graphics device.
@since 1.4
"
      end

      operation 6234754 "getAvailableAcceleratedMemory"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the number of bytes available in
accelerated memory on this device.
Some images are created or cached
in accelerated memory on a first-come,
first-served basis.  On some operating systems,
this memory is a finite resource.  Calling this method
and scheduling the creation and flushing of images carefully may
enable applications to make the most efficient use of
that finite resource.
<br>
Note that the number returned is a snapshot of how much
memory is available; some images may still have problems
being allocated into that memory.  For example, depending
on operating system, driver, memory configuration, and
thread situations, the full extent of the size reported
may not be available for a given image.  There are further
inquiry methods on the {@link ImageCapabilities} object
associated with a VolatileImage that can be used to determine
whether a particular VolatileImage has been created in accelerated
memory.
@return number of bytes available in accelerated memory.
A negative return value indicates that the amount of accelerated memory
on this GraphicsDevice is indeterminate.
@see java.awt.image.VolatileImage#flush
@see ImageCapabilities#isAccelerated
@since 1.4
"
      end

      operation 6234882 "isWindowTranslucencySupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "translucencyKind" type class_ref 869250 // WindowTranslucency
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given level of translucency is supported by
this graphics device.

@param translucencyKind a kind of translucency support
@return whether the given translucency kind is supported

@since 1.7
"
      end

      operation 6235010 "isWindowShapingSupported"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the windowing system supports changing the shape
of top-level windows.
Note that this method may sometimes return true, but the native
windowing system may still not support the concept of
shaping (due to the bugs in the windowing system).
"
      end

      operation 6235138 "isWindowOpacitySupported"
	class_operation package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the windowing system supports changing the opacity
value of top-level windows.
Note that this method may sometimes return true, but the native
windowing system may still not support the concept of
translucency (due to the bugs in the windowing system).
"
      end

      operation 6235266 "isWindowPerpixelTranslucencySupported"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6235394 "getTranslucencyCapableGC"
	package return_type class_ref 340994 // GraphicsConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 869378 "GraphicsEnvironment"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
The <code>GraphicsEnvironment</code> class describes the collection
of {@link GraphicsDevice} objects and {@link java.awt.Font} objects
available to a Java(tm) application on a particular platform.
The resources in this <code>GraphicsEnvironment</code> might be local
or on a remote machine.  <code>GraphicsDevice</code> objects can be
screens, printers or image buffers and are the destination of
{@link Graphics2D} drawing methods.  Each <code>GraphicsDevice</code>
has a number of {@link GraphicsConfiguration} objects associated with
it.  These objects specify the different configurations in which the
<code>GraphicsDevice</code> can be used.
@see GraphicsDevice
@see GraphicsConfiguration
"
      classrelation 2923650 // localEnv (<unidirectional association>)
	relation 2923650 --->
	  a role_name "localEnv" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923650 // localEnv (<unidirectional association>)
	  b parent class_ref 869378 // GraphicsEnvironment
      end

      classrelation 2923778 // headless (<unidirectional association>)
	relation 2923778 --->
	  a role_name "headless" class_relation private
	    comment "
The headless state of the Toolkit and GraphicsEnvironment

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923778 // headless (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 2923906 // defaultHeadless (<unidirectional association>)
	relation 2923906 --->
	  a role_name "defaultHeadless" class_relation private
	    comment "
The headless state assumed by default

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2923906 // defaultHeadless (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      operation 6235522 "GraphicsEnvironment"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is an abstract class and cannot be instantiated directly.
Instances must be obtained from a suitable factory or query method.
"
      end

      operation 6235650 "getLocalGraphicsEnvironment"
	class_operation public return_type class_ref 869378 // GraphicsEnvironment
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local <code>GraphicsEnvironment</code>.
@return the local <code>GraphicsEnvironment</code>
"
      end

      operation 6235778 "createGE"
	class_operation private return_type class_ref 869378 // GraphicsEnvironment
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns the GraphicsEnvironment, according to the
system property 'java.awt.graphicsenv'.

@return the graphics environment
"
      end

      operation 6235906 "isHeadless"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether or not a display, keyboard, and mouse can be
supported in this environment.  If this method returns true,
a HeadlessException is thrown from areas of the Toolkit
and GraphicsEnvironment that are dependent on a display,
keyboard, or mouse.
@return <code>true</code> if this environment cannot support
a display, keyboard, and mouse; <code>false</code>
otherwise
@see java.awt.HeadlessException
@since 1.4
"
      end

      operation 6236034 "getHeadlessMessage"
	class_operation package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return warning message if headless state is assumed by default;
null otherwise
@since 1.5
"
      end

      operation 6236162 "getHeadlessProperty"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the value of the property \"java.awt.headless\"
@since 1.4
"
      end

      operation 6236290 "checkHeadless"
	class_operation package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check for headless state and throw HeadlessException if headless
@since 1.4
"
      end

      operation 6236418 "isHeadlessInstance"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether or not a display, keyboard, and mouse can be
supported in this graphics environment.  If this returns true,
<code>HeadlessException</code> will be thrown from areas of the
graphics environment that are dependent on a display, keyboard, or
mouse.
@return <code>true</code> if a display, keyboard, and mouse
can be supported in this environment; <code>false</code>
otherwise
@see java.awt.HeadlessException
@see #isHeadless
@since 1.4
"
      end

      operation 6236546 "getScreenDevices"
	abstract public return_type class_ref 868994 // GraphicsDevice
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all of the screen <code>GraphicsDevice</code>
objects.
@return an array containing all the <code>GraphicsDevice</code>
objects that represent screen devices
@exception HeadlessException if isHeadless() returns true
@see #isHeadless()
"
      end

      operation 6236674 "getDefaultScreenDevice"
	abstract public return_type class_ref 868994 // GraphicsDevice
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default screen <code>GraphicsDevice</code>.
@return the <code>GraphicsDevice</code> that represents the
default screen device
@exception HeadlessException if isHeadless() returns true
@see #isHeadless()
"
      end

      operation 6236802 "createGraphics"
	abstract public return_type class_ref 338178 // Graphics2D
	nparams 1
	  param inout name "img" type class_ref 311554 // BufferedImage
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Graphics2D</code> object for rendering into the
specified {@link BufferedImage}.
@param img the specified <code>BufferedImage</code>
@return a <code>Graphics2D</code> to be used for rendering into
the specified <code>BufferedImage</code>
@throws NullPointerException if <code>img</code> is null
"
      end

      operation 6236930 "getAllFonts"
	abstract public return_type class_ref 340354 // Font
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing a one-point size instance of all fonts
available in this <code>GraphicsEnvironment</code>.  Typical usage
would be to allow a user to select a particular font.  Then, the
application can size the font and set various font attributes by
calling the <code>deriveFont</code> method on the chosen instance.
<p>
This method provides for the application the most precise control
over which <code>Font</code> instance is used to render text.
If a font in this <code>GraphicsEnvironment</code> has multiple
programmable variations, only one
instance of that <code>Font</code> is returned in the array, and
other variations must be derived by the application.
<p>
If a font in this environment has multiple programmable variations,
such as Multiple-Master fonts, only one instance of that font is
returned in the <code>Font</code> array.  The other variations
must be derived by the application.

@return an array of <code>Font</code> objects
@see #getAvailableFontFamilyNames
@see java.awt.Font
@see java.awt.Font#deriveFont
@see java.awt.Font#getFontName
@since 1.2
"
      end

      operation 6237058 "getAvailableFontFamilyNames"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing the names of all font families in this
<code>GraphicsEnvironment</code> localized for the default locale,
as returned by <code>Locale.getDefault()</code>.
<p>
Typical usage would be for presentation to a user for selection of
a particular family name. An application can then specify this name
when creating a font, in conjunction with a style, such as bold or
italic, giving the font system flexibility in choosing its own best
match among multiple fonts in the same font family.

@return an array of <code>String</code> containing font family names
localized for the default locale, or a suitable alternative
name if no name exists for this locale.
@see #getAllFonts
@see java.awt.Font
@see java.awt.Font#getFamily
@since 1.2
"
      end

      operation 6237186 "getAvailableFontFamilyNames"
	abstract public return_type class_ref 128130 // String
	nparams 1
	  param inout name "l" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing the names of all font families in this
<code>GraphicsEnvironment</code> localized for the specified locale.
<p>
Typical usage would be for presentation to a user for selection of
a particular family name. An application can then specify this name
when creating a font, in conjunction with a style, such as bold or
italic, giving the font system flexibility in choosing its own best
match among multiple fonts in the same font family.

@param l a {@link Locale} object that represents a
particular geographical, political, or cultural region.
Specifying <code>null</code> is equivalent to
specifying <code>Locale.getDefault()</code>.
@return an array of <code>String</code> containing font family names
localized for the specified <code>Locale</code>, or a
suitable alternative name if no name exists for the specified locale.
@see #getAllFonts
@see java.awt.Font
@see java.awt.Font#getFamily
@since 1.2
"
      end

      operation 6237314 "registerFont"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "font" type class_ref 340354 // Font
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a <i>created</i> <code>Font</code>in this
<code>GraphicsEnvironment</code>.
A created font is one that was returned from calling
{@link Font#createFont}, or derived from a created font by
calling {@link Font#deriveFont}.
After calling this method for such a font, it is available to
be used in constructing new <code>Font</code>s by name or family name,
and is enumerated by {@link #getAvailableFontFamilyNames} and
{@link #getAllFonts} within the execution context of this
application or applet. This means applets cannot register fonts in
a way that they are visible to other applets.
<p>
Reasons that this method might not register the font and therefore
return <code>false</code> are:
<ul>
<li>The font is not a <i>created</i> <code>Font</code>.
<li>The font conflicts with a non-created <code>Font</code> already
in this <code>GraphicsEnvironment</code>. For example if the name
is that of a system font, or a logical font as described in the
documentation of the {@link Font} class. It is implementation dependent
whether a font may also conflict if it has the same family name
as a system font.
<p>Notice that an application can supersede the registration
of an earlier created font with a new one.
</ul>
@return true if the <code>font</code> is successfully
registered in this <code>GraphicsEnvironment</code>.
@throws NullPointerException if <code>font</code> is null
@since 1.6
"
      end

      operation 6237442 "preferLocaleFonts"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates a preference for locale-specific fonts in the mapping of
logical fonts to physical fonts. Calling this method indicates that font
rendering should primarily use fonts specific to the primary writing
system (the one indicated by the default encoding and the initial
default locale). For example, if the primary writing system is
Japanese, then characters should be rendered using a Japanese font
if possible, and other fonts should only be used for characters for
which the Japanese font doesn't have glyphs.
<p>
The actual change in font rendering behavior resulting from a call
to this method is implementation dependent; it may have no effect at
all, or the requested behavior may already match the default behavior.
The behavior may differ between font rendering in lightweight
and peered components.  Since calling this method requests a
different font, clients should expect different metrics, and may need
to recalculate window sizes and layout. Therefore this method should
be called before user interface initialisation.
@since 1.5
"
      end

      operation 6237570 "preferProportionalFonts"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates a preference for proportional over non-proportional (e.g.
dual-spaced CJK fonts) fonts in the mapping of logical fonts to
physical fonts. If the default mapping contains fonts for which
proportional and non-proportional variants exist, then calling
this method indicates the mapping should use a proportional variant.
<p>
The actual change in font rendering behavior resulting from a call to
this method is implementation dependent; it may have no effect at all.
The behavior may differ between font rendering in lightweight and
peered components. Since calling this method requests a
different font, clients should expect different metrics, and may need
to recalculate window sizes and layout. Therefore this method should
be called before user interface initialisation.
@since 1.5
"
      end

      operation 6237698 "getCenterPoint"
	public return_type class_ref 323714 // Point
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Point where Windows should be centered.
It is recommended that centered Windows be checked to ensure they fit
within the available display area using getMaximumWindowBounds().
@return the point where Windows should be centered

@exception HeadlessException if isHeadless() returns true
@see #getMaximumWindowBounds
@since 1.4
"
      end

      operation 6237826 "getMaximumWindowBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum bounds for centered Windows.
These bounds account for objects in the native windowing system such as
task bars and menu bars.  The returned bounds will reside on a single
display with one exception: on multi-screen systems where Windows should
be centered across all displays, this method returns the bounds of the
entire display area.
<p>
To get the usable bounds of a single display, use
<code>GraphicsConfiguration.getBounds()</code> and
<code>Toolkit.getScreenInsets()</code>.
@return  the maximum bounds for centered Windows

@exception HeadlessException if isHeadless() returns true
@see #getCenterPoint
@see GraphicsConfiguration#getBounds
@see Toolkit#getScreenInsets
@since 1.4
"
      end
    end

    class 869506 "GridBagLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GridBagLayout</code> class is a flexible layout
manager that aligns components vertically, horizontally or along their
baseline without requiring that the components be of the same size.
Each <code>GridBagLayout</code> object maintains a dynamic,
rectangular grid of cells, with each component occupying
one or more cells, called its <em>display area</em>.
<p>
Each component managed by a <code>GridBagLayout</code> is associated with
an instance of {@link GridBagConstraints}.  The constraints object
specifies where a component's display area should be located on the grid
and how the component should be positioned within its display area.  In
addition to its constraints object, the <code>GridBagLayout</code> also
considers each component's minimum and preferred sizes in order to
determine a component's size.
<p>
The overall orientation of the grid depends on the container's
{@link ComponentOrientation} property.  For horizontal left-to-right
orientations, grid coordinate (0,0) is in the upper left corner of the
container with x increasing to the right and y increasing downward.  For
horizontal right-to-left orientations, grid coordinate (0,0) is in the upper
right corner of the container with x increasing to the left and y
increasing downward.
<p>
To use a grid bag layout effectively, you must customize one or more
of the <code>GridBagConstraints</code> objects that are associated
with its components. You customize a <code>GridBagConstraints</code>
object by setting one or more of its instance variables:

<dl>
<dt>{@link GridBagConstraints#gridx},
{@link GridBagConstraints#gridy}
<dd>Specifies the cell containing the leading corner of the component's
display area, where the cell at the origin of the grid has address
<code>gridx&nbsp;=&nbsp;0</code>,
<code>gridy&nbsp;=&nbsp;0</code>.  For horizontal left-to-right layout,
a component's leading corner is its upper left.  For horizontal
right-to-left layout, a component's leading corner is its upper right.
Use <code>GridBagConstraints.RELATIVE</code> (the default value)
to specify that the component be placed immediately following
(along the x axis for <code>gridx</code> or the y axis for
<code>gridy</code>) the component that was added to the container
just before this component was added.
<dt>{@link GridBagConstraints#gridwidth},
{@link GridBagConstraints#gridheight}
<dd>Specifies the number of cells in a row (for <code>gridwidth</code>)
or column (for <code>gridheight</code>)
in the component's display area.
The default value is 1.
Use <code>GridBagConstraints.REMAINDER</code> to specify
that the component's display area will be from <code>gridx</code>
to the last cell in the row (for <code>gridwidth</code>)
or from <code>gridy</code> to the last cell in the column
(for <code>gridheight</code>).

Use <code>GridBagConstraints.RELATIVE</code> to specify
that the component's display area will be from <code>gridx</code>
to the next to the last cell in its row (for <code>gridwidth</code>
or from <code>gridy</code> to the next to the last cell in its
column (for <code>gridheight</code>).

<dt>{@link GridBagConstraints#fill}
<dd>Used when the component's display area
is larger than the component's requested size
to determine whether (and how) to resize the component.
Possible values are
<code>GridBagConstraints.NONE</code> (the default),
<code>GridBagConstraints.HORIZONTAL</code>
(make the component wide enough to fill its display area
horizontally, but don't change its height),
<code>GridBagConstraints.VERTICAL</code>
(make the component tall enough to fill its display area
vertically, but don't change its width), and
<code>GridBagConstraints.BOTH</code>
(make the component fill its display area entirely).
<dt>{@link GridBagConstraints#ipadx},
{@link GridBagConstraints#ipady}
<dd>Specifies the component's internal padding within the layout,
how much to add to the minimum size of the component.
The width of the component will be at least its minimum width
plus <code>ipadx</code> pixels. Similarly, the height of
the component will be at least the minimum height plus
<code>ipady</code> pixels.
<dt>{@link GridBagConstraints#insets}
<dd>Specifies the component's external padding, the minimum
amount of space between the component and the edges of its display area.
<dt>{@link GridBagConstraints#anchor}
<dd>Specifies where the component should be positioned in its display area.
There are three kinds of possible values: absolute, orientation-relative,
and baseline-relative
Orientation relative values are interpreted relative to the container's
<code>ComponentOrientation</code> property while absolute values
are not.  Baseline relative values are calculated relative to the
baseline.  Valid values are:

<center><table BORDER=0 WIDTH=800
       SUMMARY=\"absolute, relative and baseline values as described above\">
<tr>
<th><P style=\"text-align:left\">Absolute Values</th>
<th><P style=\"text-align:left\">Orientation Relative Values</th>
<th><P style=\"text-align:left\">Baseline Relative Values</th>
</tr>
<tr>
<td>
<ul style=\"list-style-type:none\">
<li><code>GridBagConstraints.NORTH</code></li>
<li><code>GridBagConstraints.SOUTH</code></li>
<li><code>GridBagConstraints.WEST</code></li>
<li><code>GridBagConstraints.EAST</code></li>
<li><code>GridBagConstraints.NORTHWEST</code></li>
<li><code>GridBagConstraints.NORTHEAST</code></li>
<li><code>GridBagConstraints.SOUTHWEST</code></li>
<li><code>GridBagConstraints.SOUTHEAST</code></li>
<li><code>GridBagConstraints.CENTER</code> (the default)</li>
</ul>
</td>
<td>
<ul style=\"list-style-type:none\">
<li><code>GridBagConstraints.PAGE_START</code></li>
<li><code>GridBagConstraints.PAGE_END</code></li>
<li><code>GridBagConstraints.LINE_START</code></li>
<li><code>GridBagConstraints.LINE_END</code></li>
<li><code>GridBagConstraints.FIRST_LINE_START</code></li>
<li><code>GridBagConstraints.FIRST_LINE_END</code></li>
<li><code>GridBagConstraints.LAST_LINE_START</code></li>
<li><code>GridBagConstraints.LAST_LINE_END</code></li>
</ul>
</td>
<td>
<ul style=\"list-style-type:none\">
<li><code>GridBagConstraints.BASELINE</code></li>
<li><code>GridBagConstraints.BASELINE_LEADING</code></li>
<li><code>GridBagConstraints.BASELINE_TRAILING</code></li>
<li><code>GridBagConstraints.ABOVE_BASELINE</code></li>
<li><code>GridBagConstraints.ABOVE_BASELINE_LEADING</code></li>
<li><code>GridBagConstraints.ABOVE_BASELINE_TRAILING</code></li>
<li><code>GridBagConstraints.BELOW_BASELINE</code></li>
<li><code>GridBagConstraints.BELOW_BASELINE_LEADING</code></li>
<li><code>GridBagConstraints.BELOW_BASELINE_TRAILING</code></li>
</ul>
</td>
</tr>
</table></center>
<dt>{@link GridBagConstraints#weightx},
{@link GridBagConstraints#weighty}
<dd>Used to determine how to distribute space, which is
important for specifying resizing behavior.
Unless you specify a weight for at least one component
in a row (<code>weightx</code>) and column (<code>weighty</code>),
all the components clump together in the center of their container.
This is because when the weight is zero (the default),
the <code>GridBagLayout</code> object puts any extra space
between its grid of cells and the edges of the container.
</dl>
<p>
Each row may have a baseline; the baseline is determined by the
components in that row that have a valid baseline and are aligned
along the baseline (the component's anchor value is one of {@code
BASELINE}, {@code BASELINE_LEADING} or {@code BASELINE_TRAILING}).
If none of the components in the row has a valid baseline, the row
does not have a baseline.
<p>
If a component spans rows it is aligned either to the baseline of
the start row (if the baseline-resize behavior is {@code
CONSTANT_ASCENT}) or the end row (if the baseline-resize behavior
is {@code CONSTANT_DESCENT}).  The row that the component is
aligned to is called the <em>prevailing row</em>.
<p>
The following figure shows a baseline layout and includes a
component that spans rows:
<center><table summary=\"Baseline Layout\">
<tr ALIGN=CENTER>
<td>
<img src=\"doc-files/GridBagLayout-baseline.png\"
 alt=\"The following text describes this graphic (Figure 1).\" style=\"float:center\">
</td>
</table></center>
This layout consists of three components:
<ul><li>A panel that starts in row 0 and ends in row 1.  The panel
  has a baseline-resize behavior of <code>CONSTANT_DESCENT</code> and has
  an anchor of <code>BASELINE</code>.  As the baseline-resize behavior
  is <code>CONSTANT_DESCENT</code> the prevailing row for the panel is
  row 1.
<li>Two buttons, each with a baseline-resize behavior of
  <code>CENTER_OFFSET</code> and an anchor of <code>BASELINE</code>.
</ul>
Because the second button and the panel share the same prevailing row,
they are both aligned along their baseline.
<p>
Components positioned using one of the baseline-relative values resize
differently than when positioned using an absolute or orientation-relative
value.  How components change is dictated by how the baseline of the
prevailing row changes.  The baseline is anchored to the
bottom of the display area if any components with the same prevailing row
have a baseline-resize behavior of <code>CONSTANT_DESCENT</code>,
otherwise the baseline is anchored to the top of the display area.
The following rules dictate the resize behavior:
<ul>
<li>Resizable components positioned above the baseline can only
grow as tall as the baseline.  For example, if the baseline is at 100
and anchored at the top, a resizable component positioned above the
baseline can never grow more than 100 units.
<li>Similarly, resizable components positioned below the baseline can
only grow as high as the difference between the display height and the
baseline.
<li>Resizable components positioned on the baseline with a
baseline-resize behavior of <code>OTHER</code> are only resized if
the baseline at the resized size fits within the display area.  If
the baseline is such that it does not fit within the display area
the component is not resized.
<li>Components positioned on the baseline that do not have a
baseline-resize behavior of <code>OTHER</code>
can only grow as tall as {@code display height - baseline + baseline of component}.
</ul>
If you position a component along the baseline, but the
component does not have a valid baseline, it will be vertically centered
in its space.  Similarly if you have positioned a component relative
to the baseline and none of the components in the row have a valid
baseline the component is vertically centered.
<p>
The following figures show ten components (all buttons)
managed by a grid bag layout.  Figure 2 shows the layout for a horizontal,
left-to-right container and Figure 3 shows the layout for a horizontal,
right-to-left container.

<center><table WIDTH=600 summary=\"layout\">
<tr ALIGN=CENTER>
<td>
<img src=\"doc-files/GridBagLayout-1.gif\" alt=\"The preceding text describes this graphic (Figure 1).\" style=\"float:center; margin: 7px 10px;\">
</td>
<td>
<img src=\"doc-files/GridBagLayout-2.gif\" alt=\"The preceding text describes this graphic (Figure 2).\" style=\"float:center; margin: 7px 10px;\">
</td>
<tr ALIGN=CENTER>
<td>Figure 2: Horizontal, Left-to-Right</td>
<td>Figure 3: Horizontal, Right-to-Left</td>
</tr>
</table></center>
<p>
Each of the ten components has the <code>fill</code> field
of its associated <code>GridBagConstraints</code> object
set to <code>GridBagConstraints.BOTH</code>.
In addition, the components have the following non-default constraints:

<ul>
<li>Button1, Button2, Button3: <code>weightx&nbsp;=&nbsp;1.0</code>
<li>Button4: <code>weightx&nbsp;=&nbsp;1.0</code>,
<code>gridwidth&nbsp;=&nbsp;GridBagConstraints.REMAINDER</code>
<li>Button5: <code>gridwidth&nbsp;=&nbsp;GridBagConstraints.REMAINDER</code>
<li>Button6: <code>gridwidth&nbsp;=&nbsp;GridBagConstraints.RELATIVE</code>
<li>Button7: <code>gridwidth&nbsp;=&nbsp;GridBagConstraints.REMAINDER</code>
<li>Button8: <code>gridheight&nbsp;=&nbsp;2</code>,
<code>weighty&nbsp;=&nbsp;1.0</code>
<li>Button9, Button 10:
<code>gridwidth&nbsp;=&nbsp;GridBagConstraints.REMAINDER</code>
</ul>
<p>
Here is the code that implements the example shown above:

<hr><blockquote><pre>
import java.awt.*;
import java.util.*;
import java.applet.Applet;

public class GridBagEx1 extends Applet {

    protected void makebutton(String name,
                              GridBagLayout gridbag,
                              GridBagConstraints c) {
        Button button = new Button(name);
        gridbag.setConstraints(button, c);
        add(button);
    }

    public void init() {
        GridBagLayout gridbag = new GridBagLayout();
        GridBagConstraints c = new GridBagConstraints();

        setFont(new Font(\"SansSerif\", Font.PLAIN, 14));
        setLayout(gridbag);

        c.fill = GridBagConstraints.BOTH;
        c.weightx = 1.0;
        makebutton(\"Button1\", gridbag, c);
        makebutton(\"Button2\", gridbag, c);
        makebutton(\"Button3\", gridbag, c);

        c.gridwidth = GridBagConstraints.REMAINDER; //end row
        makebutton(\"Button4\", gridbag, c);

        c.weightx = 0.0;                //reset to the default
        makebutton(\"Button5\", gridbag, c); //another row

        c.gridwidth = GridBagConstraints.RELATIVE; //next-to-last in row
        makebutton(\"Button6\", gridbag, c);

        c.gridwidth = GridBagConstraints.REMAINDER; //end row
        makebutton(\"Button7\", gridbag, c);

        c.gridwidth = 1;                //reset to the default
        c.gridheight = 2;
        c.weighty = 1.0;
        makebutton(\"Button8\", gridbag, c);

        c.weighty = 0.0;                //reset to the default
        c.gridwidth = GridBagConstraints.REMAINDER; //end row
        c.gridheight = 1;               //reset to the default
        makebutton(\"Button9\", gridbag, c);
        makebutton(\"Button10\", gridbag, c);

        setSize(300, 100);
    }

    public static void main(String args[]) {
        Frame f = new Frame(\"GridBag Layout Example\");
        GridBagEx1 ex1 = new GridBagEx1();

        ex1.init();

        f.add(\"Center\", ex1);
        f.pack();
        f.setSize(f.getPreferredSize());
        f.show();
    }
}
</pre></blockquote><hr>
<p>
@author Doug Stein
@author Bill Spitzak (orignial NeWS &amp; OLIT implementation)
@see       java.awt.GridBagConstraints
@see       java.awt.GridBagLayoutInfo
@see       java.awt.ComponentOrientation
@since JDK1.0
"
      classrelation 2924546 // <realization>
	relation 2924546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2924546 // <realization>
	  b parent class_ref 406402 // LayoutManager2
      end

      classrelation 2924674 // <realization>
	relation 2924674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2924674 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1386370 "EMPIRICMULTIPLIER"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1386498 "MAXGRIDSIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 512"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is no longer used to reserve arrays and kept for backward
compatibility. Previously, this was
the maximum number of grid positions (both horizontal and
vertical) that could be laid out by the grid bag layout.
Current implementation doesn't impose any limits
on the size of a grid.

"
      end

      attribute 1386626 "MINSIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The smallest grid that can be laid out by the grid bag layout.

"
      end

      attribute 1386754 "PREFERREDSIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The preferred grid size that can be laid out by the grid bag layout.

"
      end

      classrelation 2924802 // comptable (<unidirectional association>)
	relation 2924802 --->
	  a role_name "comptable" protected
	    comment "
This hashtable maintains the association between
a component and its gridbag constraints.
The Keys in <code>comptable</code> are the components and the
values are the instances of <code>GridBagConstraints</code>.

@serial
@see java.awt.GridBagConstraints

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Component,GridBagConstraints> ${name}${value};
"
	    classrelation_ref 2924802 // comptable (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 2924930 // defaultConstraints (<unidirectional association>)
	relation 2924930 --->
	  a role_name "defaultConstraints" protected
	    comment "
This field holds a gridbag constraints instance
containing the default values, so if a component
does not have gridbag constraints associated with
it, then the component will be assigned a
copy of the <code>defaultConstraints</code>.

@serial
@see #getConstraints(Component)
@see #setConstraints(Component, GridBagConstraints)
@see #lookupConstraints(Component)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2924930 // defaultConstraints (<unidirectional association>)
	  b parent class_ref 426882 // GridBagConstraints
      end

      classrelation 2925058 // layoutInfo (<unidirectional association>)
	relation 2925058 --->
	  a role_name "layoutInfo" protected
	    comment "
This field holds the layout information
for the gridbag.  The information in this field
is based on the most recent validation of the
gridbag.
If <code>layoutInfo</code> is <code>null</code>
this indicates that there are no components in
the gridbag or if there are components, they have
not yet been validated.

@serial
@see #getLayoutInfo(Container, int)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2925058 // layoutInfo (<unidirectional association>)
	  b parent class_ref 869634 // GridBagLayoutInfo
      end

      attribute 1386882 "columnWidths"
	public explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field holds the overrides to the column minimum
width.  If this field is non-<code>null</code> the values are
applied to the gridbag after all of the minimum columns
widths have been calculated.
If columnWidths has more elements than the number of
columns, columns are added to the gridbag to match
the number of elements in columnWidth.

@serial
@see #getLayoutDimensions()

"
      end

      attribute 1387010 "rowHeights"
	public explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field holds the overrides to the row minimum
heights.  If this field is non-<code>null</code> the values are
applied to the gridbag after all of the minimum row
heights have been calculated.
If <code>rowHeights</code> has more elements than the number of
rows, rows are added to the gridbag to match
the number of elements in <code>rowHeights</code>.

@serial
@see #getLayoutDimensions()

"
      end

      attribute 1387138 "columnWeights"
	public explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field holds the overrides to the column weights.
If this field is non-<code>null</code> the values are
applied to the gridbag after all of the columns
weights have been calculated.
If <code>columnWeights[i]</code> &gt; weight for column i, then
column i is assigned the weight in <code>columnWeights[i]</code>.
If <code>columnWeights</code> has more elements than the number
of columns, the excess elements are ignored - they do
not cause more columns to be created.

@serial

"
      end

      attribute 1387266 "rowWeights"
	public explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field holds the overrides to the row weights.
If this field is non-<code>null</code> the values are
applied to the gridbag after all of the rows
weights have been calculated.
If <code>rowWeights[i]</code> &gt; weight for row i, then
row i is assigned the weight in <code>rowWeights[i]</code>.
If <code>rowWeights</code> has more elements than the number
of rows, the excess elements are ignored - they do
not cause more rows to be created.

@serial

"
      end

      classrelation 2925186 // componentAdjusting (<unidirectional association>)
	relation 2925186 --->
	  a role_name "componentAdjusting" private
	    comment "
The component being positioned.  This is set before calling into
<code>adjustForGravity</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2925186 // componentAdjusting (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      operation 6238466 "GridBagLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a grid bag layout manager.
"
      end

      operation 6238594 "setConstraints"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 426882 // GridBagConstraints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the constraints for the specified component in this layout.
@param       comp the component to be modified
@param       constraints the constraints to be applied
"
      end

      operation 6238722 "getConstraints"
	public return_type class_ref 426882 // GridBagConstraints
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the constraints for the specified component.  A copy of
the actual <code>GridBagConstraints</code> object is returned.
@param       comp the component to be queried
@return      the constraint for the specified component in this
                 grid bag layout; a copy of the actual constraint
                 object is returned
"
      end

      operation 6238850 "lookupConstraints"
	protected return_type class_ref 426882 // GridBagConstraints
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the constraints for the specified component.
The return value is not a copy, but is the actual
<code>GridBagConstraints</code> object used by the layout mechanism.
<p>
If <code>comp</code> is not in the <code>GridBagLayout</code>,
a set of default <code>GridBagConstraints</code> are returned.
A <code>comp</code> value of <code>null</code> is invalid
and returns <code>null</code>.

@param       comp the component to be queried
@return      the constraints for the specified component
"
      end

      operation 6238978 "removeConstraints"
	private explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the constraints for the specified component in this layout
@param       comp the component to be modified
"
      end

      operation 6239106 "getLayoutOrigin"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the origin of the layout area, in the graphics coordinate
space of the target container.  This value represents the pixel
coordinates of the top-left corner of the layout area regardless of
the <code>ComponentOrientation</code> value of the container.  This
is distinct from the grid origin given by the cell coordinates (0,0).
Most applications do not call this method directly.
@return     the graphics origin of the cell in the top-left
            corner of the layout grid
@see        java.awt.ComponentOrientation
@since      JDK1.1
"
      end

      operation 6239234 "getLayoutDimensions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines column widths and row heights for the layout grid.
<p>
Most applications do not call this method directly.
@return     an array of two arrays, containing the widths
                      of the layout columns and
                      the heights of the layout rows
@since      JDK1.1
"
      end

      operation 6239362 "getLayoutWeights"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the weights of the layout grid's columns and rows.
Weights are used to calculate how much a given column or row
stretches beyond its preferred size, if the layout has extra
room to fill.
<p>
Most applications do not call this method directly.
@return      an array of two arrays, representing the
                   horizontal weights of the layout columns
                   and the vertical weights of the layout rows
@since       JDK1.1
"
      end

      operation 6239490 "location"
	public return_type class_ref 323714 // Point
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines which cell in the layout grid contains the point
specified by <code>(x,&nbsp;y)</code>. Each cell is identified
by its column index (ranging from 0 to the number of columns
minus 1) and its row index (ranging from 0 to the number of
rows minus 1).
<p>
If the <code>(x,&nbsp;y)</code> point lies
outside the grid, the following rules are used.
The column index is returned as zero if <code>x</code> lies to the
left of the layout for a left-to-right container or to the right of
the layout for a right-to-left container.  The column index is returned
as the number of columns if <code>x</code> lies
to the right of the layout in a left-to-right container or to the left
in a right-to-left container.
The row index is returned as zero if <code>y</code> lies above the
layout, and as the number of rows if <code>y</code> lies
below the layout.  The orientation of a container is determined by its
<code>ComponentOrientation</code> property.
@param      x    the <i>x</i> coordinate of a point
@param      y    the <i>y</i> coordinate of a point
@return     an ordered pair of indexes that indicate which cell
            in the layout grid contains the point
            (<i>x</i>,&nbsp;<i>y</i>).
@see        java.awt.ComponentOrientation
@since      JDK1.1
"
      end

      operation 6239618 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Has no effect, since this layout manager does not use a per-component string.
"
      end

      operation 6239746 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to the layout, using the specified
<code>constraints</code> object.  Note that constraints
are mutable and are, therefore, cloned when cached.

@param      comp         the component to be added
@param      constraints  an object that determines how
                         the component is added to the layout
@exception IllegalArgumentException if <code>constraints</code>
           is not a <code>GridBagConstraint</code>
"
      end

      operation 6239874 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from this layout.
<p>
Most applications do not call this method directly.
@param    comp   the component to be removed.
@see      java.awt.Container#remove(java.awt.Component)
@see      java.awt.Container#removeAll()
"
      end

      operation 6240002 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of the <code>parent</code>
container using this grid bag layout.
<p>
Most applications do not call this method directly.

@param     parent   the container in which to do the layout
@see       java.awt.Container#getPreferredSize
@return the preferred size of the <code>parent</code>
 container
"
      end

      operation 6240130 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of the <code>parent</code> container
using this grid bag layout.
<p>
Most applications do not call this method directly.
@param     parent   the container in which to do the layout
@see       java.awt.Container#doLayout
@return the minimum size of the <code>parent</code> container
"
      end

      operation 6240258 "maximumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum dimensions for this layout given the components
in the specified target container.
@param target the container which needs to be laid out
@see Container
@see #minimumLayoutSize(Container)
@see #preferredLayoutSize(Container)
@return the maximum dimensions for this layout
"
      end

      operation 6240386 "getLayoutAlignmentX"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the x axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
<p>
@return the value <code>0.5f</code> to indicate centered
"
      end

      operation 6240514 "getLayoutAlignmentY"
	public explicit_return_type "float"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the alignment along the y axis.  This specifies how
the component would like to be aligned relative to other
components.  The value should be a number between 0 and 1
where 0 represents alignment along the origin, 1 is aligned
the furthest away from the origin, 0.5 is centered, etc.
<p>
@return the value <code>0.5f</code> to indicate centered
"
      end

      operation 6240642 "invalidateLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the layout, indicating that if the layout manager
has cached information it should be discarded.
"
      end

      operation 6240770 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the specified container using this grid bag layout.
This method reshapes components in the specified container in
order to satisfy the constraints of this <code>GridBagLayout</code>
object.
<p>
Most applications do not call this method directly.
@param parent the container in which to do the layout
@see java.awt.Container
@see java.awt.Container#doLayout
"
      end

      operation 6240898 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this grid bag layout's values.
@return     a string representation of this grid bag layout.
"
      end

      operation 6241026 "getLayoutInfo"
	protected return_type class_ref 869634 // GridBagLayoutInfo
	nparams 2
	  param inout name "parent" type class_ref 338690 // Container
	  param in name "sizeflag" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the layout information.  Useful for debugging.

 DEBUG

 protected void dumpLayoutInfo(GridBagLayoutInfo s) {
   int x;

   System.out.println(\"Col\\tWidth\\tWeight\");
   for (x=0; x<s.width; x++) {
     System.out.println(x + \"\\t\" +
                  s.minWidth[x] + \"\\t\" +
                  s.weightX[x]);
   }
   System.out.println(\"Row\\tHeight\\tWeight\");
   for (x=0; x<s.height; x++) {
     System.out.println(x + \"\\t\" +
                  s.minHeight[x] + \"\\t\" +
                  s.weightY[x]);
   }
 }


Print the layout constraints.  Useful for debugging.

 DEBUG

 protected void dumpConstraints(GridBagConstraints constraints) {
   System.out.println(
                \"wt \" +
                constraints.weightx +
                \" \" +
                constraints.weighty +
                \", \" +

                \"box \" +
                constraints.gridx +
                \" \" +
                constraints.gridy +
                \" \" +
                constraints.gridwidth +
                \" \" +
                constraints.gridheight +
                \", \" +

                \"min \" +
                constraints.minWidth +
                \" \" +
                constraints.minHeight +
                \", \" +

                \"pad \" +
                constraints.insets.bottom +
                \" \" +
                constraints.insets.left +
                \" \" +
                constraints.insets.right +
                \" \" +
                constraints.insets.top +
                \" \" +
                constraints.ipadx +
                \" \" +
                constraints.ipady);
 }


Fills in an instance of <code>GridBagLayoutInfo</code> for the
current set of managed children. This requires three passes through the
set of children:

<ol>
<li>Figure out the dimensions of the layout grid.
<li>Determine which cells the components occupy.
<li>Distribute the weights and min sizes among the rows/columns.
</ol>

This also caches the minsizes for all the children when they are
first encountered (so subsequent loops don't need to ask again).
<p>
This method should only be used internally by
<code>GridBagLayout</code>.

@param parent  the layout container
@param sizeflag either <code>PREFERREDSIZE</code> or
  <code>MINSIZE</code>
@return the <code>GridBagLayoutInfo</code> for the set of children
@since 1.4
"
      end

      operation 6241154 "preInitMaximumArraySizes"
	private explicit_return_type "long"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculate maximum array sizes to allocate arrays without ensureCapacity
we may use preCalculated sizes in whole class because of upper estimation of
maximumArrayXIndex and maximumArrayYIndex.
"
      end

      operation 6241282 "GetLayoutInfo"
	protected return_type class_ref 869634 // GridBagLayoutInfo
	nparams 2
	  param inout name "parent" type class_ref 338690 // Container
	  param in name "sizeflag" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "PreInitMaximumSizes

This method is obsolete and supplied for backwards
compatibility only; new code should call {@link
#getLayoutInfo(java.awt.Container, int) getLayoutInfo} instead.
This method is the same as <code>getLayoutInfo</code>;
refer to <code>getLayoutInfo</code> for details on parameters
and return value.
"
      end

      operation 6241410 "calculateBaseline"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 426882 // GridBagConstraints
	  param inout name "size" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getLayoutInfo()

Calculate the baseline for the specified component.
If {@code c} is positioned along it's baseline, the baseline is
obtained and the {@code constraints} ascent, descent and
baseline resize behavior are set from the component; and true is
returned. Otherwise false is returned.
"
      end

      operation 6241538 "adjustForGravity"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "constraints" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the x, y, width, and height fields to the correct
values depending on the constraint geometry and pads.
This method should only be used internally by
<code>GridBagLayout</code>.

@param constraints the constraints to be applied
@param r the <code>Rectangle</code> to be adjusted
@since 1.4
"
      end

      operation 6241666 "AdjustForGravity"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "constraints" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is obsolete and supplied for backwards
compatibility only; new code should call {@link
#adjustForGravity(java.awt.GridBagConstraints, java.awt.Rectangle)
adjustForGravity} instead.
This method is the same as <code>adjustForGravity</code>;
refer to <code>adjustForGravity</code> for details
on parameters.
"
      end

      operation 6241794 "alignOnBaseline"
	private explicit_return_type "void"
	nparams 4
	  param inout name "cons" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	  param in name "cellY" explicit_type "int"
	  param in name "cellHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Positions on the baseline.

@param cellY the location of the row, does not include insets
@param cellHeight the height of the row, does not take into account
       insets
@param r available bounds for the component, is padded by insets and
       ipady
"
      end

      operation 6241922 "alignAboveBaseline"
	private explicit_return_type "void"
	nparams 4
	  param inout name "cons" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	  param in name "cellY" explicit_type "int"
	  param in name "cellHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Positions the specified component above the baseline. That is
the bottom edge of the component will be aligned along the baseline.
If the row does not have a baseline, this centers the component.
"
      end

      operation 6242050 "alignBelowBaseline"
	private explicit_return_type "void"
	nparams 4
	  param inout name "cons" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	  param in name "cellY" explicit_type "int"
	  param in name "cellHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Positions below the baseline.
"
      end

      operation 6242178 "centerVertically"
	private explicit_return_type "void"
	nparams 3
	  param inout name "cons" type class_ref 426882 // GridBagConstraints
	  param inout name "r" type class_ref 314114 // Rectangle
	  param in name "cellHeight" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6242306 "getMinSize"
	protected return_type class_ref 316802 // Dimension
	nparams 2
	  param inout name "parent" type class_ref 338690 // Container
	  param inout name "info" type class_ref 869634 // GridBagLayoutInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Figures out the minimum size of the
master based on the information from <code>getLayoutInfo</code>.
This method should only be used internally by
<code>GridBagLayout</code>.

@param parent the layout container
@param info the layout info for this parent
@return a <code>Dimension</code> object containing the
  minimum size
@since 1.4
"
      end

      operation 6242434 "GetMinSize"
	protected return_type class_ref 316802 // Dimension
	nparams 2
	  param inout name "parent" type class_ref 338690 // Container
	  param inout name "info" type class_ref 869634 // GridBagLayoutInfo
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is obsolete and supplied for backwards
compatibility only; new code should call {@link
#getMinSize(java.awt.Container, GridBagLayoutInfo) getMinSize} instead.
This method is the same as <code>getMinSize</code>;
refer to <code>getMinSize</code> for details on parameters
and return value.
"
      end

      attribute 1387394 "rightToLeft"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6242562 "arrangeGrid"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the grid.
This method should only be used internally by
<code>GridBagLayout</code>.

@param parent the layout container
@since 1.4
"
      end

      operation 6242690 "ArrangeGrid"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is obsolete and supplied for backwards
compatibility only; new code should call {@link
#arrangeGrid(Container) arrangeGrid} instead.
This method is the same as <code>arrangeGrid</code>;
refer to <code>arrangeGrid</code> for details on the
parameter.
"
      end

      attribute 1387522 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8838754796412211005L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Added for serial backwards compatibility (4348425)
"
      end
    end

    class 869634 "GridBagLayoutInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code GridBagLayoutInfo} is an utility class for
{@code GridBagLayout} layout manager.
It stores align, size and baseline parameters for every component within a container.
<p>
@see       java.awt.GridBagLayout
@see       java.awt.GridBagConstraints
@since 1.6
"
      classrelation 2925314 // <realization>
	relation 2925314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2925314 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1387650 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4899416460737170217L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      attribute 1387778 "width"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1387906 "height"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of  cells: horizontal and vertical "
      end

      attribute 1388034 "startx"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1388162 "starty"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " starting point for layout "
      end

      attribute 1388290 "minWidth"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " largest minWidth in each column "
      end

      attribute 1388418 "minHeight"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " largest minHeight in each row "
      end

      attribute 1388546 "weightX"
	package explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " largest weight in each column "
      end

      attribute 1388674 "weightY"
	package explicit_type "double"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " largest weight in each row "
      end

      attribute 1388802 "hasBaseline"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not baseline layout has been
requested and one of the components
has a valid baseline. "
      end

      attribute 1388930 "baselineType"
	package explicit_type "short"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " These are only valid if hasBaseline is true and are indexed by
 row.
 The type of baseline for a particular
row.  A mix of the BaselineResizeBehavior
constants (1 << ordinal()) "
      end

      attribute 1389058 "maxAscent"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Max ascent (baseline). "
      end

      attribute 1389186 "maxDescent"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Max descent (height - baseline) "
      end

      operation 6242818 "GridBagLayoutInfo"
	package explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of GridBagLayoutInfo representing {@code GridBagLayout}
grid cells with it's own parameters.
@param width the columns
@param height the rows
@since 6.0
"
      end

      operation 6242946 "hasConstantDescent"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified row has any component aligned on the
baseline with a baseline resize behavior of CONSTANT_DESCENT.
"
      end

      operation 6243074 "hasBaseline"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is a baseline for the specified row.
"
      end
    end

    class 869762 "GridLayout"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>GridLayout</code> class is a layout manager that
lays out a container's components in a rectangular grid.
The container is divided into equal-sized rectangles,
and one component is placed in each rectangle.
For example, the following is an applet that lays out six buttons
into three rows and two columns:

<hr><blockquote>
<pre>
import java.awt.*;
import java.applet.Applet;
public class ButtonGrid extends Applet {
    public void init() {
        setLayout(new GridLayout(3,2));
        add(new Button(\"1\"));
        add(new Button(\"2\"));
        add(new Button(\"3\"));
        add(new Button(\"4\"));
        add(new Button(\"5\"));
        add(new Button(\"6\"));
    }
}
</pre></blockquote><hr>
<p>
If the container's <code>ComponentOrientation</code> property is horizontal
and left-to-right, the above example produces the output shown in Figure 1.
If the container's <code>ComponentOrientation</code> property is horizontal
and right-to-left, the example produces the output shown in Figure 2.

<table style=\"float:center\" WIDTH=600 summary=\"layout\">
<tr ALIGN=CENTER>
<td><img SRC=\"doc-files/GridLayout-1.gif\"
     alt=\"Shows 6 buttons in rows of 2. Row 1 shows buttons 1 then 2.
Row 2 shows buttons 3 then 4. Row 3 shows buttons 5 then 6.\">
</td>

<td ALIGN=CENTER><img SRC=\"doc-files/GridLayout-2.gif\"
                  alt=\"Shows 6 buttons in rows of 2. Row 1 shows buttons 2 then 1.
Row 2 shows buttons 4 then 3. Row 3 shows buttons 6 then 5.\">
</td>
</tr>

<tr ALIGN=CENTER>
<td>Figure 1: Horizontal, Left-to-Right</td>

<td>Figure 2: Horizontal, Right-to-Left</td>
</tr>
</table>
<p>
When both the number of rows and the number of columns have
been set to non-zero values, either by a constructor or
by the <tt>setRows</tt> and <tt>setColumns</tt> methods, the number of
columns specified is ignored.  Instead, the number of
columns is determined from the specified number of rows
and the total number of components in the layout. So, for
example, if three rows and two columns have been specified
and nine components are added to the layout, they will
be displayed as three rows of three columns.  Specifying
the number of columns affects the layout only when the
number of rows is set to zero.

@author  Arthur van Hoff
@since   JDK1.0
"
      classrelation 2925442 // <realization>
	relation 2925442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2925442 // <realization>
	  b parent class_ref 349698 // LayoutManager
      end

      classrelation 2925570 // <realization>
	relation 2925570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2925570 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1389314 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7411804673224730901L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      attribute 1389442 "hgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the horizontal gap (in pixels) which specifies the space
between columns.  They can be changed at any time.
This should be a non-negative integer.

@serial
@see #getHgap()
@see #setHgap(int)

"
      end

      attribute 1389570 "vgap"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the vertical gap (in pixels) which specifies the space
between rows.  They can be changed at any time.
This should be a non negative integer.

@serial
@see #getVgap()
@see #setVgap(int)

"
      end

      attribute 1389698 "rows"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the number of rows specified for the grid.  The number
of rows can be changed at any time.
This should be a non negative integer, where '0' means
'any number' meaning that the number of Rows in that
dimension depends on the other dimension.

@serial
@see #getRows()
@see #setRows(int)

"
      end

      attribute 1389826 "cols"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This is the number of columns specified for the grid.  The number
of columns can be changed at any time.
This should be a non negative integer, where '0' means
'any number' meaning that the number of Columns in that
dimension depends on the other dimension.

@serial
@see #getColumns()
@see #setColumns(int)

"
      end

      operation 6243202 "GridLayout"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a grid layout with a default of one column per component,
in a single row.
@since JDK1.1
"
      end

      operation 6243330 "GridLayout"
	public explicit_return_type ""
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "cols" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a grid layout with the specified number of rows and
columns. All components in the layout are given equal size.
<p>
One, but not both, of <code>rows</code> and <code>cols</code> can
be zero, which means that any number of objects can be placed in a
row or in a column.
@param     rows   the rows, with the value zero meaning
                  any number of rows.
@param     cols   the columns, with the value zero meaning
                  any number of columns.
"
      end

      operation 6243458 "GridLayout"
	public explicit_return_type ""
	nparams 4
	  param in name "rows" explicit_type "int"
	  param in name "cols" explicit_type "int"
	  param in name "hgap" explicit_type "int"
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a grid layout with the specified number of rows and
columns. All components in the layout are given equal size.
<p>
In addition, the horizontal and vertical gaps are set to the
specified values. Horizontal gaps are placed between each
of the columns. Vertical gaps are placed between each of
the rows.
<p>
One, but not both, of <code>rows</code> and <code>cols</code> can
be zero, which means that any number of objects can be placed in a
row or in a column.
<p>
All <code>GridLayout</code> constructors defer to this one.
@param     rows   the rows, with the value zero meaning
                  any number of rows
@param     cols   the columns, with the value zero meaning
                  any number of columns
@param     hgap   the horizontal gap
@param     vgap   the vertical gap
@exception   IllegalArgumentException  if the value of both
                 <code>rows</code> and <code>cols</code> is
                 set to zero
"
      end

      operation 6243586 "getRows"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of rows in this layout.
@return    the number of rows in this layout
@since     JDK1.1
"
      end

      operation 6243714 "setRows"
	public explicit_return_type "void"
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of rows in this layout to the specified value.
@param        rows   the number of rows in this layout
@exception    IllegalArgumentException  if the value of both
              <code>rows</code> and <code>cols</code> is set to zero
@since        JDK1.1
"
      end

      operation 6243842 "getColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of columns in this layout.
@return     the number of columns in this layout
@since      JDK1.1
"
      end

      operation 6243970 "setColumns"
	public explicit_return_type "void"
	nparams 1
	  param in name "cols" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of columns in this layout to the specified value.
Setting the number of columns has no affect on the layout
if the number of rows specified by a constructor or by
the <tt>setRows</tt> method is non-zero. In that case, the number
of columns displayed in the layout is determined by the total
number of components and the number of rows specified.
@param        cols   the number of columns in this layout
@exception    IllegalArgumentException  if the value of both
              <code>rows</code> and <code>cols</code> is set to zero
@since        JDK1.1
"
      end

      operation 6244098 "getHgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the horizontal gap between components.
@return       the horizontal gap between components
@since        JDK1.1
"
      end

      operation 6244226 "setHgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "hgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the horizontal gap between components to the specified value.
@param        hgap   the horizontal gap between components
@since        JDK1.1
"
      end

      operation 6244354 "getVgap"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the vertical gap between components.
@return       the vertical gap between components
@since        JDK1.1
"
      end

      operation 6244482 "setVgap"
	public explicit_return_type "void"
	nparams 1
	  param in name "vgap" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the vertical gap between components to the specified value.
@param         vgap  the vertical gap between components
@since        JDK1.1
"
      end

      operation 6244610 "addLayoutComponent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component with the specified name to the layout.
@param name the name of the component
@param comp the component to be added
"
      end

      operation 6244738 "removeLayoutComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified component from the layout.
@param comp the component to be removed
"
      end

      operation 6244866 "preferredLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of the container argument using
this grid layout.
<p>
The preferred width of a grid layout is the largest preferred
width of all of the components in the container times the number of
columns, plus the horizontal padding times the number of columns
minus one, plus the left and right insets of the target container.
<p>
The preferred height of a grid layout is the largest preferred
height of all of the components in the container times the number of
rows, plus the vertical padding times the number of rows minus one,
plus the top and bottom insets of the target container.

@param     parent   the container in which to do the layout
@return    the preferred dimensions to lay out the
                     subcomponents of the specified container
@see       java.awt.GridLayout#minimumLayoutSize
@see       java.awt.Container#getPreferredSize()
"
      end

      operation 6244994 "minimumLayoutSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of the container argument using this
grid layout.
<p>
The minimum width of a grid layout is the largest minimum width
of all of the components in the container times the number of columns,
plus the horizontal padding times the number of columns minus one,
plus the left and right insets of the target container.
<p>
The minimum height of a grid layout is the largest minimum height
of all of the components in the container times the number of rows,
plus the vertical padding times the number of rows minus one, plus
the top and bottom insets of the target container.

@param       parent   the container in which to do the layout
@return      the minimum dimensions needed to lay out the
                     subcomponents of the specified container
@see         java.awt.GridLayout#preferredLayoutSize
@see         java.awt.Container#doLayout
"
      end

      operation 6245122 "layoutContainer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 338690 // Container
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out the specified container using this layout.
<p>
This method reshapes the components in the specified target
container in order to satisfy the constraints of the
<code>GridLayout</code> object.
<p>
The grid layout manager determines the size of individual
components by dividing the free space in the container into
equal-sized portions according to the number of rows and columns
in the layout. The container's free space equals the container's
size minus any insets and any specified horizontal or vertical
gap. All components in a grid layout are given the same size.

@param      parent   the container in which to do the layout
@see        java.awt.Container
@see        java.awt.Container#doLayout
"
      end

      operation 6245250 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this grid layout's values.
@return     a string representation of this grid layout
"
      end
    end

    class 869890 "JobAttributes"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A set of attributes which control a print job.
<p>
Instances of this class control the number of copies, default selection,
destination, print dialog, file and printer names, page ranges, multiple
document handling (including collation), and multi-page imposition (such
as duplex) of every print job which uses the instance. Attribute names are
compliant with the Internet Printing Protocol (IPP) 1.1 where possible.
Attribute values are partially compliant where possible.
<p>
To use a method which takes an inner class type, pass a reference to
one of the constant fields of the inner class. Client code cannot create
new instances of the inner class types because none of those classes
has a public constructor. For example, to set the print dialog type to
the cross-platform, pure Java print dialog, use the following code:
<pre>
import java.awt.JobAttributes;

public class PureJavaPrintDialogExample {
    public void setPureJavaPrintDialog(JobAttributes jobAttributes) {
        jobAttributes.setDialog(JobAttributes.DialogType.COMMON);
    }
}
</pre>
<p>
Every IPP attribute which supports an <i>attributeName</i>-default value
has a corresponding <code>set<i>attributeName</i>ToDefault</code> method.
Default value fields are not provided.

@author      David Mendenhall
@since 1.3
"
      classrelation 2926850 // <realization>
	relation 2926850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2926850 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      class 870018 "DefaultSelectionType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2926978 // <generalisation>
	  relation 2926978 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2926978 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1392130 "I_ALL"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1392258 "I_RANGE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1392386 "I_SELECTION"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2927106 // NAMES (<unidirectional association>)
	  relation 2927106 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"all\", \"range\", \"selection\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2927106 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2927234 // ALL (<unidirectional association>)
	  relation 2927234 --->
	    a role_name "ALL" init_value "
           new DefaultSelectionType(I_ALL)" class_relation const_relation public
	      comment "
The <code>DefaultSelectionType</code> instance to use for
specifying that all pages of the job should be printed.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2927234 // ALL (<unidirectional association>)
	    b parent class_ref 870018 // DefaultSelectionType
	end

	classrelation 2927362 // RANGE (<unidirectional association>)
	  relation 2927362 --->
	    a role_name "RANGE" init_value "
           new DefaultSelectionType(I_RANGE)" class_relation const_relation public
	      comment "
The <code>DefaultSelectionType</code> instance to use for
specifying that a range of pages of the job should be printed.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2927362 // RANGE (<unidirectional association>)
	    b parent class_ref 870018 // DefaultSelectionType
	end

	classrelation 2927490 // SELECTION (<unidirectional association>)
	  relation 2927490 --->
	    a role_name "SELECTION" init_value "
           new DefaultSelectionType(I_SELECTION)" class_relation const_relation public
	      comment "
The <code>DefaultSelectionType</code> instance to use for
specifying that the current selection should be printed.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2927490 // SELECTION (<unidirectional association>)
	    b parent class_ref 870018 // DefaultSelectionType
	end

	operation 6249730 "DefaultSelectionType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 870146 "DestinationType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2927618 // <generalisation>
	  relation 2927618 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2927618 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1392514 "I_FILE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1392642 "I_PRINTER"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2927746 // NAMES (<unidirectional association>)
	  relation 2927746 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"file\", \"printer\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2927746 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2927874 // FILE (<unidirectional association>)
	  relation 2927874 --->
	    a role_name "FILE" init_value "
            new DestinationType(I_FILE)" class_relation const_relation public
	      comment "
The <code>DestinationType</code> instance to use for
specifying print to file.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2927874 // FILE (<unidirectional association>)
	    b parent class_ref 870146 // DestinationType
	end

	classrelation 2928002 // PRINTER (<unidirectional association>)
	  relation 2928002 --->
	    a role_name "PRINTER" init_value "
            new DestinationType(I_PRINTER)" class_relation const_relation public
	      comment "
The <code>DestinationType</code> instance to use for
specifying print to printer.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2928002 // PRINTER (<unidirectional association>)
	    b parent class_ref 870146 // DestinationType
	end

	operation 6249858 "DestinationType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 870274 "DialogType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2928130 // <generalisation>
	  relation 2928130 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2928130 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1392770 "I_COMMON"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1392898 "I_NATIVE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1393026 "I_NONE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2928258 // NAMES (<unidirectional association>)
	  relation 2928258 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"common\", \"native\", \"none\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2928258 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2928386 // COMMON (<unidirectional association>)
	  relation 2928386 --->
	    a role_name "COMMON" init_value " new DialogType(I_COMMON)" class_relation const_relation public
	      comment "
The <code>DialogType</code> instance to use for
specifying the cross-platform, pure Java print dialog.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2928386 // COMMON (<unidirectional association>)
	    b parent class_ref 870274 // DialogType
	end

	classrelation 2928514 // NATIVE (<unidirectional association>)
	  relation 2928514 --->
	    a role_name "NATIVE" init_value " new DialogType(I_NATIVE)" class_relation const_relation public
	      comment "
The <code>DialogType</code> instance to use for
specifying the platform's native print dialog.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2928514 // NATIVE (<unidirectional association>)
	    b parent class_ref 870274 // DialogType
	end

	classrelation 2928642 // NONE (<unidirectional association>)
	  relation 2928642 --->
	    a role_name "NONE" init_value " new DialogType(I_NONE)" class_relation const_relation public
	      comment "
The <code>DialogType</code> instance to use for
specifying no print dialog.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2928642 // NONE (<unidirectional association>)
	    b parent class_ref 870274 // DialogType
	end

	operation 6249986 "DialogType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 870402 "MultipleDocumentHandlingType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2928770 // <generalisation>
	  relation 2928770 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2928770 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1393154 "I_SEPARATE_DOCUMENTS_COLLATED_COPIES"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1393282 "I_SEPARATE_DOCUMENTS_UNCOLLATED_COPIES"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2928898 // NAMES (<unidirectional association>)
	  relation 2928898 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"separate-documents-collated-copies\",
            \"separate-documents-uncollated-copies\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2928898 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2929026 // SEPARATE_DOCUMENTS_COLLATED_COPIES (<unidirectional association>)
	  relation 2929026 --->
	    a role_name "SEPARATE_DOCUMENTS_COLLATED_COPIES" init_value "
                new MultipleDocumentHandlingType(
                    I_SEPARATE_DOCUMENTS_COLLATED_COPIES)" class_relation const_relation public
	      comment "
The <code>MultipleDocumentHandlingType</code> instance to use for specifying
that the job should be divided into separate, collated copies.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2929026 // SEPARATE_DOCUMENTS_COLLATED_COPIES (<unidirectional association>)
	    b parent class_ref 870402 // MultipleDocumentHandlingType
	end

	classrelation 2929154 // SEPARATE_DOCUMENTS_UNCOLLATED_COPIES (<unidirectional association>)
	  relation 2929154 --->
	    a role_name "SEPARATE_DOCUMENTS_UNCOLLATED_COPIES" init_value "
                new MultipleDocumentHandlingType(
                    I_SEPARATE_DOCUMENTS_UNCOLLATED_COPIES)" class_relation const_relation public
	      comment "
The <code>MultipleDocumentHandlingType</code> instance to use for specifying
that the job should be divided into separate, uncollated copies.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2929154 // SEPARATE_DOCUMENTS_UNCOLLATED_COPIES (<unidirectional association>)
	    b parent class_ref 870402 // MultipleDocumentHandlingType
	end

	operation 6250114 "MultipleDocumentHandlingType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 870530 "SidesType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2929282 // <generalisation>
	  relation 2929282 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2929282 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1393410 "I_ONE_SIDED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1393538 "I_TWO_SIDED_LONG_EDGE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1393666 "I_TWO_SIDED_SHORT_EDGE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2929410 // NAMES (<unidirectional association>)
	  relation 2929410 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"one-sided\", \"two-sided-long-edge\", \"two-sided-short-edge\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2929410 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2929538 // ONE_SIDED (<unidirectional association>)
	  relation 2929538 --->
	    a role_name "ONE_SIDED" init_value " new SidesType(I_ONE_SIDED)" class_relation const_relation public
	      comment "
The <code>SidesType</code> instance to use for specifying that
consecutive job pages should be printed upon the same side of
consecutive media sheets.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2929538 // ONE_SIDED (<unidirectional association>)
	    b parent class_ref 870530 // SidesType
	end

	classrelation 2929666 // TWO_SIDED_LONG_EDGE (<unidirectional association>)
	  relation 2929666 --->
	    a role_name "TWO_SIDED_LONG_EDGE" init_value "
            new SidesType(I_TWO_SIDED_LONG_EDGE)" class_relation const_relation public
	      comment "
The <code>SidesType</code> instance to use for specifying that
consecutive job pages should be printed upon front and back sides
of consecutive media sheets, such that the orientation of each pair
of pages on the medium would be correct for the reader as if for
binding on the long edge.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2929666 // TWO_SIDED_LONG_EDGE (<unidirectional association>)
	    b parent class_ref 870530 // SidesType
	end

	classrelation 2929794 // TWO_SIDED_SHORT_EDGE (<unidirectional association>)
	  relation 2929794 --->
	    a role_name "TWO_SIDED_SHORT_EDGE" init_value "
            new SidesType(I_TWO_SIDED_SHORT_EDGE)" class_relation const_relation public
	      comment "
The <code>SidesType</code> instance to use for specifying that
consecutive job pages should be printed upon front and back sides
of consecutive media sheets, such that the orientation of each pair
of pages on the medium would be correct for the reader as if for
binding on the short edge.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2929794 // TWO_SIDED_SHORT_EDGE (<unidirectional association>)
	    b parent class_ref 870530 // SidesType
	end

	operation 6250242 "SidesType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 1393794 "copies"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2929922 // defaultSelection (<unidirectional association>)
	relation 2929922 --->
	  a role_name "defaultSelection" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2929922 // defaultSelection (<unidirectional association>)
	  b parent class_ref 870018 // DefaultSelectionType
      end

      classrelation 2930050 // destination (<unidirectional association>)
	relation 2930050 --->
	  a role_name "destination" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930050 // destination (<unidirectional association>)
	  b parent class_ref 870146 // DestinationType
      end

      classrelation 2930178 // dialog (<unidirectional association>)
	relation 2930178 --->
	  a role_name "dialog" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930178 // dialog (<unidirectional association>)
	  b parent class_ref 870274 // DialogType
      end

      classrelation 2930306 // fileName (<unidirectional association>)
	relation 2930306 --->
	  a role_name "fileName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930306 // fileName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1393922 "fromPage"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1394050 "maxPage"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1394178 "minPage"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2930434 // multipleDocumentHandling (<unidirectional association>)
	relation 2930434 --->
	  a role_name "multipleDocumentHandling" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930434 // multipleDocumentHandling (<unidirectional association>)
	  b parent class_ref 870402 // MultipleDocumentHandlingType
      end

      attribute 1394306 "pageRanges"
	private explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1394434 "prFirst"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1394562 "prLast"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2930562 // printer (<unidirectional association>)
	relation 2930562 --->
	  a role_name "printer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930562 // printer (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2930690 // sides (<unidirectional association>)
	relation 2930690 --->
	  a role_name "sides" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2930690 // sides (<unidirectional association>)
	  b parent class_ref 870530 // SidesType
      end

      attribute 1394690 "toPage"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6250370 "JobAttributes"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JobAttributes</code> instance with default
values for every attribute.  The dialog defaults to
<code>DialogType.NATIVE</code>.  Min page defaults to
<code>1</code>.  Max page defaults to <code>Integer.MAX_VALUE</code>.
Destination defaults to <code>DestinationType.PRINTER</code>.
Selection defaults to <code>DefaultSelectionType.ALL</code>.
Number of copies defaults to <code>1</code>. Multiple document handling defaults
to <code>MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES</code>.
Sides defaults to <code>SidesType.ONE_SIDED</code>. File name defaults
to <code>null</code>.
"
      end

      operation 6250498 "JobAttributes"
	public explicit_return_type ""
	nparams 1
	  param inout name "obj" type class_ref 869890 // JobAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JobAttributes</code> instance which is a copy
of the supplied <code>JobAttributes</code>.

@param   obj the <code>JobAttributes</code> to copy
"
      end

      operation 6250626 "JobAttributes"
	public explicit_return_type ""
	nparams 11
	  param in name "copies" explicit_type "int"
	  param inout name "defaultSelection" type class_ref 870018 // DefaultSelectionType
	  param inout name "destination" type class_ref 870146 // DestinationType
	  param inout name "dialog" type class_ref 870274 // DialogType
	  param inout name "fileName" type class_ref 128130 // String
	  param in name "maxPage" explicit_type "int"
	  param in name "minPage" explicit_type "int"
	  param inout name "multipleDocumentHandling" type class_ref 870402 // MultipleDocumentHandlingType
	  param inout name "pageRanges" explicit_type "int"
	multiplicity "[][]"
	  param inout name "printer" type class_ref 128130 // String
	  param inout name "sides" type class_ref 870530 // SidesType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[][] ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>JobAttributes</code> instance with the
specified values for every attribute.

@param   copies an integer greater than 0
@param   defaultSelection <code>DefaultSelectionType.ALL</code>,
         <code>DefaultSelectionType.RANGE</code>, or
         <code>DefaultSelectionType.SELECTION</code>
@param   destination <code>DesintationType.FILE</code> or
         <code>DesintationType.PRINTER</code>
@param   dialog <code>DialogType.COMMON</code>,
         <code>DialogType.NATIVE</code>, or
         <code>DialogType.NONE</code>
@param   fileName the possibly <code>null</code> file name
@param   maxPage an integer greater than zero and greater than or equal
         to <i>minPage</i>
@param   minPage an integer greater than zero and less than or equal
         to <i>maxPage</i>
@param   multipleDocumentHandling
    <code>MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES</code> or
    <code>MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES</code>
@param   pageRanges an array of integer arrays of two elements; an array
         is interpreted as a range spanning all pages including and
         between the specified pages; ranges must be in ascending
         order and must not overlap; specified page numbers cannot be
         less than <i>minPage</i> nor greater than <i>maxPage</i>;
         for example:
         <pre>
         (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 },
                        new int[] { 15, 19 } }),
         </pre>
         specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that
         (<code>new int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }</code>),
         is an invalid set of page ranges because the two ranges
         overlap
@param   printer the possibly <code>null</code> printer name
@param   sides <code>SidesType.ONE_SIDED</code>,
         <code>SidesType.TWO_SIDED_LONG_EDGE</code>, or
         <code>SidesType.TWO_SIDED_SHORT_EDGE</code>
@throws  IllegalArgumentException if one or more of the above
         conditions is violated
"
      end

      operation 6250754 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a copy of this <code>JobAttributes</code>.

@return  the newly created copy; it is safe to cast this Object into
         a <code>JobAttributes</code>
"
      end

      operation 6250882 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 869890 // JobAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all of the attributes of this <code>JobAttributes</code> to
the same values as the attributes of obj.

@param   obj the <code>JobAttributes</code> to copy
"
      end

      operation 6251010 "getCopies"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of copies the application should render for jobs
using these attributes. This attribute is updated to the value chosen
by the user.

@return  an integer greater than 0.
"
      end

      operation 6251138 "setCopies"
	public explicit_return_type "void"
	nparams 1
	  param in name "copies" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the number of copies the application should render for jobs
using these attributes. Not specifying this attribute is equivalent to
specifying <code>1</code>.

@param   copies an integer greater than 0
@throws  IllegalArgumentException if <code>copies</code> is less than
     or equal to 0
"
      end

      operation 6251266 "setCopiesToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of copies the application should render for jobs using
these attributes to the default. The default number of copies is 1.
"
      end

      operation 6251394 "getDefaultSelection"
	public return_type class_ref 870018 // DefaultSelectionType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether, for jobs using these attributes, the application
should print all pages, the range specified by the return value of
<code>getPageRanges</code>, or the current selection. This attribute
is updated to the value chosen by the user.

@return  DefaultSelectionType.ALL, DefaultSelectionType.RANGE, or
         DefaultSelectionType.SELECTION
"
      end

      operation 6251522 "setDefaultSelection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultSelection" type class_ref 870018 // DefaultSelectionType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether, for jobs using these attributes, the application
should print all pages, the range specified by the return value of
<code>getPageRanges</code>, or the current selection. Not specifying
this attribute is equivalent to specifying DefaultSelectionType.ALL.

@param   defaultSelection DefaultSelectionType.ALL,
         DefaultSelectionType.RANGE, or DefaultSelectionType.SELECTION.
@throws  IllegalArgumentException if defaultSelection is <code>null</code>
"
      end

      operation 6251650 "getDestination"
	public return_type class_ref 870146 // DestinationType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether output will be to a printer or a file for jobs using
these attributes. This attribute is updated to the value chosen by the
user.

@return  DesintationType.FILE or DesintationType.PRINTER
"
      end

      operation 6251778 "setDestination"
	public explicit_return_type "void"
	nparams 1
	  param inout name "destination" type class_ref 870146 // DestinationType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether output will be to a printer or a file for jobs using
these attributes. Not specifying this attribute is equivalent to
specifying DesintationType.PRINTER.

@param   destination DesintationType.FILE or DesintationType.PRINTER.
@throws  IllegalArgumentException if destination is null.
"
      end

      operation 6251906 "getDialog"
	public return_type class_ref 870274 // DialogType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether, for jobs using these attributes, the user should see
a print dialog in which to modify the print settings, and which type of
print dialog should be displayed. DialogType.COMMON denotes a cross-
platform, pure Java print dialog. DialogType.NATIVE denotes the
platform's native print dialog. If a platform does not support a native
print dialog, the pure Java print dialog is displayed instead.
DialogType.NONE specifies no print dialog (i.e., background printing).
This attribute cannot be modified by, and is not subject to any
limitations of, the implementation or the target printer.

@return  <code>DialogType.COMMON</code>, <code>DialogType.NATIVE</code>, or
         <code>DialogType.NONE</code>
"
      end

      operation 6252034 "setDialog"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dialog" type class_ref 870274 // DialogType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether, for jobs using these attributes, the user should see
a print dialog in which to modify the print settings, and which type of
print dialog should be displayed. DialogType.COMMON denotes a cross-
platform, pure Java print dialog. DialogType.NATIVE denotes the
platform's native print dialog. If a platform does not support a native
print dialog, the pure Java print dialog is displayed instead.
DialogType.NONE specifies no print dialog (i.e., background printing).
Not specifying this attribute is equivalent to specifying
DialogType.NATIVE.

@param   dialog DialogType.COMMON, DialogType.NATIVE, or
         DialogType.NONE.
@throws  IllegalArgumentException if dialog is null.
"
      end

      operation 6252162 "getFileName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the file name for the output file for jobs using these
attributes. This attribute is updated to the value chosen by the user.

@return  the possibly <code>null</code> file name
"
      end

      operation 6252290 "setFileName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the file name for the output file for jobs using these
attributes. Default is platform-dependent and implementation-defined.

@param   fileName the possibly null file name.
"
      end

      operation 6252418 "getFromPage"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns, for jobs using these attributes, the first page to be
printed, if a range of pages is to be printed. This attribute is
updated to the value chosen by the user. An application should ignore
this attribute on output, unless the return value of the <code>
getDefaultSelection</code> method is DefaultSelectionType.RANGE. An
application should honor the return value of <code>getPageRanges</code>
over the return value of this method, if possible.

@return  an integer greater than zero and less than or equal to
         <i>toPage</i> and greater than or equal to <i>minPage</i> and
         less than or equal to <i>maxPage</i>.
"
      end

      operation 6252546 "setFromPage"
	public explicit_return_type "void"
	nparams 1
	  param in name "fromPage" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies, for jobs using these attributes, the first page to be
printed, if a range of pages is to be printed. If this attribute is not
specified, then the values from the pageRanges attribute are used. If
pageRanges and either or both of fromPage and toPage are specified,
pageRanges takes precedence. Specifying none of pageRanges, fromPage,
or toPage is equivalent to calling
setPageRanges(new int[][] { new int[] { <i>minPage</i> } });

@param   fromPage an integer greater than zero and less than or equal to
         <i>toPage</i> and greater than or equal to <i>minPage</i> and
         less than or equal to <i>maxPage</i>.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6252674 "getMaxPage"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the maximum value the user can specify as the last page to
be printed for jobs using these attributes. This attribute cannot be
modified by, and is not subject to any limitations of, the
implementation or the target printer.

@return  an integer greater than zero and greater than or equal
         to <i>minPage</i>.
"
      end

      operation 6252802 "setMaxPage"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxPage" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the maximum value the user can specify as the last page to
be printed for jobs using these attributes. Not specifying this
attribute is equivalent to specifying <code>Integer.MAX_VALUE</code>.

@param   maxPage an integer greater than zero and greater than or equal
         to <i>minPage</i>
@throws  IllegalArgumentException if one or more of the above
         conditions is violated
"
      end

      operation 6252930 "getMinPage"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the minimum value the user can specify as the first page to
be printed for jobs using these attributes. This attribute cannot be
modified by, and is not subject to any limitations of, the
implementation or the target printer.

@return  an integer greater than zero and less than or equal
         to <i>maxPage</i>.
"
      end

      operation 6253058 "setMinPage"
	public explicit_return_type "void"
	nparams 1
	  param in name "minPage" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the minimum value the user can specify as the first page to
be printed for jobs using these attributes. Not specifying this
attribute is equivalent to specifying <code>1</code>.

@param   minPage an integer greater than zero and less than or equal
         to <i>maxPage</i>.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6253186 "getMultipleDocumentHandling"
	public return_type class_ref 870402 // MultipleDocumentHandlingType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the handling of multiple copies, including collation, for
jobs using these attributes. This attribute is updated to the value
chosen by the user.

@return
    MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES or
    MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.
"
      end

      operation 6253314 "setMultipleDocumentHandling"
	public explicit_return_type "void"
	nparams 1
	  param inout name "multipleDocumentHandling" type class_ref 870402 // MultipleDocumentHandlingType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the handling of multiple copies, including collation, for
jobs using these attributes. Not specifying this attribute is equivalent
to specifying
MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.

@param   multipleDocumentHandling
    MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES or
    MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.
@throws  IllegalArgumentException if multipleDocumentHandling is null.
"
      end

      operation 6253442 "setMultipleDocumentHandlingToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the handling of multiple copies, including collation, for jobs
using these attributes to the default. The default handling is
MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.
"
      end

      operation 6253570 "getPageRanges"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies, for jobs using these attributes, the ranges of pages to be
printed, if a range of pages is to be printed. All range numbers are
inclusive. This attribute is updated to the value chosen by the user.
An application should ignore this attribute on output, unless the
return value of the <code>getDefaultSelection</code> method is
DefaultSelectionType.RANGE.

@return  an array of integer arrays of 2 elements. An array
         is interpreted as a range spanning all pages including and
         between the specified pages. Ranges must be in ascending
         order and must not overlap. Specified page numbers cannot be
         less than <i>minPage</i> nor greater than <i>maxPage</i>.
         For example:
         (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 },
                        new int[] { 15, 19 } }),
         specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19.
"
      end

      operation 6253698 "setPageRanges"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pageRanges" explicit_type "int"
	multiplicity "[][]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies, for jobs using these attributes, the ranges of pages to be
printed, if a range of pages is to be printed. All range numbers are
inclusive. If this attribute is not specified, then the values from the
fromPage and toPages attributes are used. If pageRanges and either or
both of fromPage and toPage are specified, pageRanges takes precedence.
Specifying none of pageRanges, fromPage, or toPage is equivalent to
calling setPageRanges(new int[][] { new int[] { <i>minPage</i>,
                                                <i>minPage</i> } });

@param   pageRanges an array of integer arrays of 2 elements. An array
         is interpreted as a range spanning all pages including and
         between the specified pages. Ranges must be in ascending
         order and must not overlap. Specified page numbers cannot be
         less than <i>minPage</i> nor greater than <i>maxPage</i>.
         For example:
         (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 },
                        new int[] { 15, 19 } }),
         specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that
         (new int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }),
         is an invalid set of page ranges because the two ranges
         overlap.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6253826 "getPrinter"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the destination printer for jobs using these attributes. This
attribute is updated to the value chosen by the user.

@return  the possibly null printer name.
"
      end

      operation 6253954 "setPrinter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printer" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the destination printer for jobs using these attributes.
Default is platform-dependent and implementation-defined.

@param   printer the possibly null printer name.
"
      end

      operation 6254082 "getSides"
	public return_type class_ref 870530 // SidesType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns how consecutive pages should be imposed upon the sides of the
print medium for jobs using these attributes. SidesType.ONE_SIDED
imposes each consecutive page upon the same side of consecutive media
sheets. This imposition is sometimes called <i>simplex</i>.
SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages
upon front and back sides of consecutive media sheets, such that the
orientation of each pair of pages on the medium would be correct for
the reader as if for binding on the long edge. This imposition is
sometimes called <i>duplex</i>. SidesType.TWO_SIDED_SHORT_EDGE imposes
each consecutive pair of pages upon front and back sides of consecutive
media sheets, such that the orientation of each pair of pages on the
medium would be correct for the reader as if for binding on the short
edge. This imposition is sometimes called <i>tumble</i>. This attribute
is updated to the value chosen by the user.

@return  SidesType.ONE_SIDED, SidesType.TWO_SIDED_LONG_EDGE, or
         SidesType.TWO_SIDED_SHORT_EDGE.
"
      end

      operation 6254210 "setSides"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sides" type class_ref 870530 // SidesType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies how consecutive pages should be imposed upon the sides of the
print medium for jobs using these attributes. SidesType.ONE_SIDED
imposes each consecutive page upon the same side of consecutive media
sheets. This imposition is sometimes called <i>simplex</i>.
SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages
upon front and back sides of consecutive media sheets, such that the
orientation of each pair of pages on the medium would be correct for
the reader as if for binding on the long edge. This imposition is
sometimes called <i>duplex</i>. SidesType.TWO_SIDED_SHORT_EDGE imposes
each consecutive pair of pages upon front and back sides of consecutive
media sheets, such that the orientation of each pair of pages on the
medium would be correct for the reader as if for binding on the short
edge. This imposition is sometimes called <i>tumble</i>. Not specifying
this attribute is equivalent to specifying SidesType.ONE_SIDED.

@param   sides SidesType.ONE_SIDED, SidesType.TWO_SIDED_LONG_EDGE, or
         SidesType.TWO_SIDED_SHORT_EDGE.
@throws  IllegalArgumentException if sides is null.
"
      end

      operation 6254338 "setSidesToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets how consecutive pages should be imposed upon the sides of the
print medium for jobs using these attributes to the default. The
default imposition is SidesType.ONE_SIDED.
"
      end

      operation 6254466 "getToPage"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns, for jobs using these attributes, the last page (inclusive)
to be printed, if a range of pages is to be printed. This attribute is
updated to the value chosen by the user. An application should ignore
this attribute on output, unless the return value of the <code>
getDefaultSelection</code> method is DefaultSelectionType.RANGE. An
application should honor the return value of <code>getPageRanges</code>
over the return value of this method, if possible.

@return  an integer greater than zero and greater than or equal
         to <i>toPage</i> and greater than or equal to <i>minPage</i>
         and less than or equal to <i>maxPage</i>.
"
      end

      operation 6254594 "setToPage"
	public explicit_return_type "void"
	nparams 1
	  param in name "toPage" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies, for jobs using these attributes, the last page (inclusive)
to be printed, if a range of pages is to be printed.
If this attribute is not specified, then the values from the pageRanges
attribute are used. If pageRanges and either or both of fromPage and
toPage are specified, pageRanges takes precedence. Specifying none of
pageRanges, fromPage, or toPage is equivalent to calling
setPageRanges(new int[][] { new int[] { <i>minPage</i> } });

@param   toPage an integer greater than zero and greater than or equal
         to <i>fromPage</i> and greater than or equal to <i>minPage</i>
         and less than or equal to <i>maxPage</i>.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6254722 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether two JobAttributes are equal to each other.
<p>
Two JobAttributes are equal if and only if each of their attributes are
equal. Attributes of enumeration type are equal if and only if the
fields refer to the same unique enumeration object. A set of page
ranges is equal if and only if the sets are of equal length, each range
enumerates the same pages, and the ranges are in the same order.

@param   obj the object whose equality will be checked.
@return  whether obj is equal to this JobAttribute according to the
         above criteria.
"
      end

      operation 6254850 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this JobAttributes.

@return  the hash code.
"
      end

      operation 6254978 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this JobAttributes.

@return  the string representation.
"
      end
    end

    class 870658 "Label"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Label</code> object is a component for placing text in a
container. A label displays a single line of read-only text.
The text can be changed by the application, but a user cannot edit it
directly.
<p>
For example, the code&nbsp;.&nbsp;.&nbsp;.

<hr><blockquote><pre>
setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
add(new Label(\"Hi There!\"));
add(new Label(\"Another Label\"));
</pre></blockquote><hr>
<p>
produces the following labels:
<p>
<img src=\"doc-files/Label-1.gif\" alt=\"Two labels: 'Hi There!' and 'Another label'\"
style=\"float:center; margin: 7px 10px;\">

@author      Sami Shaio
@since       JDK1.0
"
      classrelation 2930818 // <generalisation>
	relation 2930818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2930818 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2930946 // <realization>
	relation 2930946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2930946 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 150530 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1394818 "LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the label should be left justified.

"
      end

      attribute 1394946 "CENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the label should be centered.

"
      end

      attribute 1395074 "RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates that the label should be right justified.
@since   JDK1.0t.

"
      end

      classrelation 2931074 // text (<unidirectional association>)
	relation 2931074 --->
	  a role_name "text" package
	    comment "
The text of this label.
This text can be modified by the program
but never by the user.

@serial
@see #getText()
@see #setText(String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2931074 // text (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1395202 "alignment"
	package explicit_type "int"
	init_value " LEFT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The label's alignment.  The default alignment is set
to be left justified.

@serial
@see #getAlignment()
@see #setAlignment(int)

"
      end

      classrelation 2931202 // base (<unidirectional association>)
	relation 2931202 --->
	  a role_name "base" init_value " \"label\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2931202 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1395330 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1395458 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3094126758329070636L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6255106 "Label"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty label.
The text of the label is the empty string <code>\"\"</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6255234 "Label"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new label with the specified string of text,
left justified.
@param text the string that the label presents.
       A <code>null</code> value
       will be accepted without causing a NullPointerException
       to be thrown.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6255362 "Label"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "alignment" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new label that presents the specified string of
text with the specified alignment.
Possible values for <code>alignment</code> are <code>Label.LEFT</code>,
<code>Label.RIGHT</code>, and <code>Label.CENTER</code>.
@param text the string that the label presents.
       A <code>null</code> value
       will be accepted without causing a NullPointerException
       to be thrown.
@param     alignment   the alignment value.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6255490 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a label from an object input stream.
@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@serial
@since 1.4
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6255618 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is <code>null</code>.
"
      end

      operation 6255746 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the peer for this label.  The peer allows us to
modify the appearance of the label without changing its
functionality.
"
      end

      operation 6255874 "getAlignment"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current alignment of this label. Possible values are
<code>Label.LEFT</code>, <code>Label.RIGHT</code>, and
<code>Label.CENTER</code>.
@see        java.awt.Label#setAlignment
"
      end

      operation 6256002 "setAlignment"
	public explicit_return_type "void"
	nparams 1
	  param in name "alignment" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the alignment for this label to the specified alignment.
Possible values are <code>Label.LEFT</code>,
<code>Label.RIGHT</code>, and <code>Label.CENTER</code>.
@param      alignment    the alignment to be set.
@exception  IllegalArgumentException if an improper value for
                         <code>alignment</code> is given.
@see        java.awt.Label#getAlignment
"
      end

      operation 6256130 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the text of this label.
@return     the text of this label, or <code>null</code> if
            the text has been set to <code>null</code>.
@see        java.awt.Label#setText
"
      end

      operation 6256258 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text for this label to the specified text.
@param      text the text that this label displays. If
            <code>text</code> is <code>null</code>, it is
            treated for display purposes like an empty
            string <code>\"\"</code>.
@see        java.awt.Label#getText
"
      end

      operation 6256386 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Label</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return     the parameter string of this label
"
      end

      operation 6256514 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6256642 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this Label.
For labels, the AccessibleContext takes the form of an
AccessibleAWTLabel.
A new AccessibleAWTLabel instance is created if necessary.

@return an AccessibleAWTLabel that serves as the
        AccessibleContext of this Label
@since 1.3
"
      end

      class 870786 "AccessibleAWTLabel"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2931330 // <generalisation>
	  relation 2931330 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2931330 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	attribute 1395586 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -3568967560160480438L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6256770 "AccessibleAWTLabel"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6256898 "getAccessibleName"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible name of this object.

@return the localized name of the object -- can be null if this
object does not have a name
@see AccessibleContext#setAccessibleName
"
	end

	operation 6257026 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the object
@see AccessibleRole
"
	end
      end
    end

    class 870914 "MultipleGradientPaint"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the superclass for Paints which use a multiple color
gradient to fill in their raster.  It provides storage for variables and
enumerated values common to
{@code LinearGradientPaint} and {@code RadialGradientPaint}.

@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
@since 1.6
"
      classrelation 2931458 // <realization>
	relation 2931458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2931458 // <realization>
	  b parent class_ref 860418 // Paint
      end

      class 871042 "CycleMethod"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1395714 "NO_CYCLE"
	  public type class_ref 871042 // CycleMethod
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Use the terminal colors to fill the remaining area.

"
	end

	attribute 1395842 "REFLECT"
	  public type class_ref 871042 // CycleMethod
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Cycle the gradient colors start-to-end, end-to-start
to fill the remaining area.

"
	end

	attribute 1395970 "REPEAT"
	  public type class_ref 871042 // CycleMethod
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Cycle the gradient colors start-to-end, start-to-end
to fill the remaining area.
"
	end
      end

      class 871170 "ColorSpaceType"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1396098 "SRGB"
	  public type class_ref 871170 // ColorSpaceType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that the color interpolation should occur in sRGB space.

"
	end

	attribute 1396226 "LINEAR_RGB"
	  public type class_ref 871170 // ColorSpaceType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Indicates that the color interpolation should occur in linearized
RGB space.
"
	end
      end

      attribute 1396354 "transparency"
	const_attribute package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The transparency of this paint object. 
"
      end

      attribute 1396482 "fractions"
	const_attribute package explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Gradient keyframe values in the range 0 to 1. 
"
      end

      classrelation 2931586 // colors (<unidirectional association>)
	relation 2931586 --->
	  a role_name "colors" multiplicity "[]" const_relation package
	    comment " Gradient colors. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2931586 // colors (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 2931714 // gradientTransform (<unidirectional association>)
	relation 2931714 --->
	  a role_name "gradientTransform" const_relation package
	    comment " Transform to apply to gradient. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2931714 // gradientTransform (<unidirectional association>)
	  b parent class_ref 381058 // AffineTransform
      end

      classrelation 2931842 // cycleMethod (<unidirectional association>)
	relation 2931842 --->
	  a role_name "cycleMethod" const_relation package
	    comment " The method to use when painting outside the gradient bounds. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2931842 // cycleMethod (<unidirectional association>)
	  b parent class_ref 871042 // CycleMethod
      end

      classrelation 2931970 // colorSpace (<unidirectional association>)
	relation 2931970 --->
	  a role_name "colorSpace" const_relation package
	    comment " The color space in which to perform the gradient interpolation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2931970 // colorSpace (<unidirectional association>)
	  b parent class_ref 871170 // ColorSpaceType
      end

      classrelation 2932098 // model (<unidirectional association>)
	relation 2932098 --->
	  a role_name "model" package
	    comment "
The following fields are used only by MultipleGradientPaintContext
to cache certain values that remain constant and do not need to be
recalculated for each context created from this paint instance.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2932098 // model (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      attribute 1396610 "normalizedIntervals"
	package explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1396738 "isSimpleLookup"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2932226 // gradients (<unidirectional association>)
	relation 2932226 --->
	  a role_name "gradients" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<int[][]> ${name}${value};
"
	    classrelation_ref 2932226 // gradients (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      classrelation 2932354 // gradient (<unidirectional association>)
	relation 2932354 --->
	  a role_name "gradient" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<int[]> ${name}${value};
"
	    classrelation_ref 2932354 // gradient (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      attribute 1396866 "fastGradientArraySize"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6257154 "MultipleGradientPaint"
	package explicit_return_type ""
	nparams 5
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	  param inout name "gradientTransform" type class_ref 381058 // AffineTransform
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-private constructor.

@param fractions numbers ranging from 0.0 to 1.0 specifying the
                 distribution of colors along the gradient
@param colors array of colors corresponding to each fractional value
@param cycleMethod either {@code NO_CYCLE}, {@code REFLECT},
                   or {@code REPEAT}
@param colorSpace which color space to use for interpolation,
                  either {@code SRGB} or {@code LINEAR_RGB}
@param gradientTransform transform to apply to the gradient

@throws NullPointerException
if {@code fractions} array is null,
or {@code colors} array is null,
or {@code gradientTransform} is null,
or {@code cycleMethod} is null,
or {@code colorSpace} is null
@throws IllegalArgumentException
if {@code fractions.length != colors.length},
or {@code colors} is less than 2 in size,
or a {@code fractions} value is less than 0.0 or greater than 1.0,
or the {@code fractions} are not provided in strictly increasing order
"
      end

      operation 6257282 "getFractions"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the array of floats used by this gradient
to calculate color distribution.
The returned array always has 0 as its first value and 1 as its
last value, with increasing values in between.

@return a copy of the array of floats used by this gradient to
calculate color distribution
"
      end

      operation 6257410 "getColors"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the array of colors used by this gradient.
The first color maps to the first value in the fractions array,
and the last color maps to the last value in the fractions array.

@return a copy of the array of colors used by this gradient
"
      end

      operation 6257538 "getCycleMethod"
	public return_type class_ref 871042 // CycleMethod
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the enumerated type which specifies cycling behavior.

@return the enumerated type which specifies cycling behavior
"
      end

      operation 6257666 "getColorSpace"
	public return_type class_ref 871170 // ColorSpaceType
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the enumerated type which specifies color space for
interpolation.

@return the enumerated type which specifies color space for
interpolation
"
      end

      operation 6257794 "getTransform"
	public return_type class_ref 381058 // AffineTransform
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the transform applied to the gradient.

<p>
Note that if no transform is applied to the gradient
when it is created, the identity transform is used.

@return a copy of the transform applied to the gradient
"
      end

      operation 6257922 "getTransparency"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the transparency mode for this {@code Paint} object.

@return {@code OPAQUE} if all colors used by this
        {@code Paint} object are opaque,
        {@code TRANSLUCENT} if at least one of the
        colors used by this {@code Paint} object is not opaque.
@see java.awt.Transparency
"
      end
    end

    class 871298 "LinearGradientPaintContext"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the actual implementation for the LinearGradientPaint.
This is where the pixel processing is done.

@see java.awt.LinearGradientPaint
@see java.awt.PaintContext
@see java.awt.Paint
@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
"
      classrelation 2933890 // <generalisation>
	relation 2933890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2933890 // <generalisation>
	  b parent class_ref 871426 // MultipleGradientPaintContext
      end

      attribute 1399298 "dgdX"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The following invariants are used to process the gradient value from
a device space coordinate, (X, Y):
    g(X, Y) = dgdX*X + dgdY*Y + gc

"
      end

      attribute 1399426 "dgdY"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The following invariants are used to process the gradient value from
a device space coordinate, (X, Y):
    g(X, Y) = dgdX*X + dgdY*Y + gc

"
      end

      attribute 1399554 "gc"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The following invariants are used to process the gradient value from
a device space coordinate, (X, Y):
    g(X, Y) = dgdX*X + dgdY*Y + gc

"
      end

      operation 6260994 "LinearGradientPaintContext"
	package explicit_return_type ""
	nparams 12
	  param inout name "paint" type class_ref 455554 // LinearGradientPaint
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "t" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	  param inout name "start" type class_ref 380802 // Point2D
	  param inout name "end" type class_ref 380802 // Point2D
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}, ${t9}[] ${p9}, ${t10} ${p10}, ${t11} ${p11}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for LinearGradientPaintContext.

@param paint the {@code LinearGradientPaint} from which this context
             is created
@param cm {@code ColorModel} that receives
          the <code>Paint</code> data. This is used only as a hint.
@param deviceBounds the device space bounding box of the
                    graphics primitive being rendered
@param userBounds the user space bounding box of the
                  graphics primitive being rendered
@param t the {@code AffineTransform} from user
         space into device space (gradientTransform should be
         concatenated with this)
@param hints the hints that the context object uses to choose
             between rendering alternatives
@param start gradient start point, in user space
@param end gradient end point, in user space
@param fractions the fractions specifying the gradient distribution
@param colors the gradient colors
@param cycleMethod either NO_CYCLE, REFLECT, or REPEAT
@param colorSpace which colorspace to use for interpolation,
                  either SRGB or LINEAR_RGB
"
      end

      operation 6261122 "fillRaster"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a Raster containing the colors generated for the graphics
operation.  This is where the area is filled with colors distributed
linearly.

@param x,y,w,h the area in device space for which colors are
generated.
"
      end
    end

    class 871426 "MultipleGradientPaintContext"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the superclass for all PaintContexts which use a multiple color
gradient to fill in their raster.  It provides the actual color
interpolation functionality.  Subclasses only have to deal with using
the gradient to fill pixels in a raster.

@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
"
      classrelation 2932866 // <realization>
	relation 2932866 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2932866 // <realization>
	  b parent class_ref 860674 // PaintContext
      end

      classrelation 2932994 // model (<unidirectional association>)
	relation 2932994 --->
	  a role_name "model" protected
	    comment "
The PaintContext's ColorModel.  This is ARGB if colors are not all
opaque, otherwise it is RGB.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2932994 // model (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2933122 // xrgbmodel (<unidirectional association>)
	relation 2933122 --->
	  a role_name "xrgbmodel" init_value "
        new DirectColorModel(24, 0x00ff0000, 0x0000ff00, 0x000000ff)" class_relation private
	    comment " Color model used if gradient colors are all opaque. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2933122 // xrgbmodel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2933250 // cachedModel (<unidirectional association>)
	relation 2933250 --->
	  a role_name "cachedModel" class_relation protected
	    comment " The cached ColorModel. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2933250 // cachedModel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2933378 // cached (<unidirectional association>)
	relation 2933378 --->
	  a role_name "cached" class_relation protected
	    comment " The cached raster, which is reusable among instances. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Raster> ${name}${value};
"
	    classrelation_ref 2933378 // cached (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 2933506 // saved (<unidirectional association>)
	relation 2933506 --->
	  a role_name "saved" protected
	    comment " Raster is reused whenever possible. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2933506 // saved (<unidirectional association>)
	  b parent class_ref 311682 // Raster
      end

      classrelation 2933634 // cycleMethod (<unidirectional association>)
	relation 2933634 --->
	  a role_name "cycleMethod" protected
	    comment " The method to use when painting out of the gradient bounds. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2933634 // cycleMethod (<unidirectional association>)
	  b parent class_ref 871042 // CycleMethod
      end

      classrelation 2933762 // colorSpace (<unidirectional association>)
	relation 2933762 --->
	  a role_name "colorSpace" protected
	    comment " The ColorSpace in which to perform the interpolation 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2933762 // colorSpace (<unidirectional association>)
	  b parent class_ref 871170 // ColorSpaceType
      end

      attribute 1396994 "a00"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397122 "a01"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397250 "a10"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397378 "a11"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397506 "a02"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397634 "a12"
	protected explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Elements of the inverse transform matrix. 
"
      end

      attribute 1397762 "isSimpleLookup"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This boolean specifies whether we are in simple lookup mode, where an
input value between 0 and 1 may be used to directly index into a single
array of gradient colors.  If this boolean value is false, then we have
to use a 2-step process where we have to determine which gradient array
we fall into, then determine the index into that array.

"
      end

      attribute 1397890 "fastGradientArraySize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Size of gradients array for scaling the 0-1 index when looking up
colors the fast way.

"
      end

      attribute 1398018 "gradient"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array which contains the interpolated color values for each interval,
used by calculateSingleArrayGradient().  It is protected for possible
direct access by subclasses.

"
      end

      attribute 1398146 "gradients"
	private explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Array of gradient arrays, one array for each interval.  Used by
calculateMultipleArrayGradient().

"
      end

      attribute 1398274 "normalizedIntervals"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Normalized intervals array. 
"
      end

      attribute 1398402 "fractions"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Fractions array. 
"
      end

      attribute 1398530 "transparencyTest"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to determine if gradient colors are all opaque. 
"
      end

      attribute 1398658 "SRGBtoLinearRGB"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[256]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Color space conversion lookup tables. 
"
      end

      attribute 1398786 "LinearRGBtoSRGB"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[256]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 150658 "initialization"
	
	cpp "" ""
	java "  static {
        // build the tables
        for (int k = 0; k < 256; k++) {
            SRGBtoLinearRGB[k] = convertSRGBtoLinearRGB(k);
            LinearRGBtoSRGB[k] = convertLinearRGBtoSRGB(k);
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1398914 "GRADIENT_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 256"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant number of max colors between any 2 arbitrary colors.
Used for creating and indexing gradients arrays.

"
      end

      attribute 1399042 "GRADIENT_SIZE_INDEX"
	class_attribute const_attribute protected explicit_type "int"
	init_value " GRADIENT_SIZE -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1399170 "MAX_GRADIENT_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum length of the fast single-array.  If the estimated array size
is greater than this, switch over to the slow lookup method.
No particular reason for choosing this number, but it seems to provide
satisfactory performance for the common case (fast lookup).

"
      end

      operation 6259074 "MultipleGradientPaintContext"
	protected explicit_return_type ""
	nparams 10
	  param inout name "mgp" type class_ref 870914 // MultipleGradientPaint
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "t" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7}[] ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for MultipleGradientPaintContext superclass.
"
      end

      operation 6259202 "calculateLookupData"
	private explicit_return_type "void"
	nparams 1
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is the meat of this class.  It calculates an array of
gradient colors based on an array of fractions and color values at
those fractions.
"
      end

      operation 6259330 "calculateSingleArrayGradient"
	private explicit_return_type "void"
	nparams 2
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param in name "Imin" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "FAST LOOKUP METHOD

This method calculates the gradient color values and places them in a
single int array, gradient[].  It does this by allocating space for
each interval based on its size relative to the smallest interval in
the array.  The smallest interval is allocated 255 interpolated values
(the maximum number of unique in-between colors in a 24 bit color
system), and all other intervals are allocated
size = (255 * the ratio of their size to the smallest interval).

This scheme expedites a speedy retrieval because the colors are
distributed along the array according to their user-specified
distribution.  All that is needed is a relative index from 0 to 1.

The only problem with this method is that the possibility exists for
the array size to balloon in the case where there is a
disproportionately small gradient interval.  In this case the other
intervals will be allocated huge space, but much of that data is
redundant.  We thus need to use the space conserving scheme below.

@param Imin the size of the smallest interval
"
      end

      operation 6259458 "calculateMultipleArrayGradient"
	private explicit_return_type "void"
	nparams 1
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SLOW LOOKUP METHOD

This method calculates the gradient color values for each interval and
places each into its own 255 size array.  The arrays are stored in
gradients[][].  (255 is used because this is the maximum number of
unique colors between 2 arbitrary colors in a 24 bit color system.)

This method uses the minimum amount of space (only 255 * number of
intervals), but it aggravates the lookup procedure, because now we
have to find out which interval to select, then calculate the index
within that interval.  This causes a significant performance hit,
because it requires this calculation be done for every point in
the rendering loop.

For those of you who are interested, this is a classic example of the
time-space tradeoff.
"
      end

      operation 6259586 "interpolate"
	private explicit_return_type "void"
	nparams 3
	  param in name "rgb1" explicit_type "int"
	  param in name "rgb2" explicit_type "int"
	  param inout name "output" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Yet another helper function.  This one linearly interpolates between
2 colors, filling up the output array.

@param rgb1 the start color
@param rgb2 the end color
@param output the output array of colors; must not be null
"
      end

      operation 6259714 "convertEntireColorLinearRGBtoSRGB"
	private explicit_return_type "int"
	nparams 1
	  param in name "rgb" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Yet another helper function.  This one extracts the color components
of an integer RGB triple, converts them from LinearRGB to SRGB, then
recompacts them into an int.
"
      end

      operation 6259842 "indexIntoGradientsArrays"
	protected explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "float"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper function to index into the gradients array.  This is necessary
because each interval has an array of colors with uniform size 255.
However, the color intervals are not necessarily of uniform length, so
a conversion is required.

@param position the unmanipulated position, which will be mapped
                into the range 0 to 1
@returns integer color to display
"
      end

      operation 6259970 "convertSRGBtoLinearRGB"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "color" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper function to convert a color component in sRGB space to linear
RGB space.  Used to build a static lookup table.
"
      end

      operation 6260098 "convertLinearRGBtoSRGB"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "color" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper function to convert a color component in linear RGB space to
SRGB space.  Used to build a static lookup table.
"
      end

      operation 6260226 "getRaster"
	public return_type class_ref 311682 // Raster
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6260354 "fillRaster"
	abstract protected explicit_return_type "void"
	nparams 7
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6260482 "getCachedRaster"
	class_operation private return_type class_ref 311682 // Raster
	nparams 3
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Took this cacheRaster code from GradientPaint. It appears to recycle
rasters for use by any other instance, as long as they are sufficiently
large.
"
      end

      operation 6260610 "putCachedRaster"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "ras" type class_ref 311682 // Raster
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Took this cacheRaster code from GradientPaint. It appears to recycle
rasters for use by any other instance, as long as they are sufficiently
large.
"
      end

      operation 6260738 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6260866 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end
    end

    class 871810 "MediaTracker"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>MediaTracker</code> class is a utility class to track
the status of a number of media objects. Media objects could
include audio clips as well as images, though currently only
images are supported.
<p>
To use a media tracker, create an instance of
<code>MediaTracker</code> and call its <code>addImage</code>
method for each image to be tracked. In addition, each image can
be assigned a unique identifier. This identifier controls the
priority order in which the images are fetched. It can also be used
to identify unique subsets of the images that can be waited on
independently. Images with a lower ID are loaded in preference to
those with a higher ID number.

<p>

Tracking an animated image
might not always be useful
due to the multi-part nature of animated image
loading and painting,
but it is supported.
<code>MediaTracker</code> treats an animated image
as completely loaded
when the first frame is completely loaded.
At that point, the <code>MediaTracker</code>
signals any waiters
that the image is completely loaded.
If no <code>ImageObserver</code>s are observing the image
when the first frame has finished loading,
the image might flush itself
to conserve resources
(see {@link Image#flush()}).

<p>
Here is an example of using <code>MediaTracker</code>:
<p>
<hr><blockquote><pre>{@code
import java.applet.Applet;
import java.awt.Color;
import java.awt.Image;
import java.awt.Graphics;
import java.awt.MediaTracker;

public class ImageBlaster extends Applet implements Runnable {
     MediaTracker tracker;
     Image bg;
     Image anim[] = new Image[5];
     int index;
     Thread animator;

     // Get the images for the background (id == 0)
     // and the animation frames (id == 1)
     // and add them to the MediaTracker
     public void init() {
         tracker = new MediaTracker(this);
         bg = getImage(getDocumentBase(),
                 \"images/background.gif\");
         tracker.addImage(bg, 0);
         for (int i = 0; i < 5; i++) {
             anim[i] = getImage(getDocumentBase(),
                     \"images/anim\"+i+\".gif\");
             tracker.addImage(anim[i], 1);
         }
     }

     // Start the animation thread.
     public void start() {
         animator = new Thread(this);
         animator.start();
     }

     // Stop the animation thread.
     public void stop() {
         animator = null;
     }

     // Run the animation thread.
     // First wait for the background image to fully load
     // and paint.  Then wait for all of the animation
     // frames to finish loading. Finally, loop and
     // increment the animation frame index.
     public void run() {
         try {
             tracker.waitForID(0);
             tracker.waitForID(1);
         } catch (InterruptedException e) {
             return;
         }
         Thread me = Thread.currentThread();
         while (animator == me) {
             try {
                 Thread.sleep(100);
             } catch (InterruptedException e) {
                 break;
             }
             synchronized (this) {
                 index++;
                 if (index >= anim.length) {
                     index = 0;
                 }
             }
             repaint();
         }
     }

     // The background image fills the frame so we
     // don't need to clear the applet on repaints.
     // Just call the paint method.
     public void update(Graphics g) {
         paint(g);
     }

     // Paint a large red rectangle if there are any errors
     // loading the images.  Otherwise always paint the
     // background so that it appears incrementally as it
     // is loading.  Finally, only paint the current animation
     // frame if all of the frames (id == 1) are done loading,
     // so that we don't get partial animations.
     public void paint(Graphics g) {
         if ((tracker.statusAll(false) & MediaTracker.ERRORED) != 0) {
             g.setColor(Color.red);
             g.fillRect(0, 0, size().width, size().height);
             return;
         }
         g.drawImage(bg, 0, 0, this);
         if (tracker.statusID(1, false) == MediaTracker.COMPLETE) {
             g.drawImage(anim[index], 10, 10, this);
         }
     }
}
} </pre></blockquote><hr>

@author      Jim Graham
@since       JDK1.0
"
      classrelation 2935810 // <realization>
	relation 2935810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2935810 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2935938 // target (<unidirectional association>)
	relation 2935938 --->
	  a role_name "target" package
	    comment "
A given <code>Component</code> that will be
tracked by a media tracker where the image will
eventually be drawn.

@serial
@see #MediaTracker(Component)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2935938 // target (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2936066 // head (<unidirectional association>)
	relation 2936066 --->
	  a role_name "head" package
	    comment "
The head of the list of <code>Images</code> that is being
tracked by the <code>MediaTracker</code>.

@serial
@see #addImage(Image, int)
@see #removeImage(Image)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2936066 // head (<unidirectional association>)
	  b parent class_ref 871938 // MediaEntry
      end

      attribute 1401090 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -483174189758638095L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6275586 "MediaTracker"
	public explicit_return_type ""
	nparams 1
	  param inout name "comp" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a media tracker to track images for a given component.
@param     comp the component on which the images
                    will eventually be drawn
"
      end

      operation 6275714 "addImage"
	public explicit_return_type "void"
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an image to the list of images being tracked by this media
tracker. The image will eventually be rendered at its default
(unscaled) size.
@param     image   the image to be tracked
@param     id      an identifier used to track this image
"
      end

      operation 6275842 "addImage"
	public explicit_return_type "void"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a scaled image to the list of images being tracked
by this media tracker. The image will eventually be
rendered at the indicated width and height.

@param     image   the image to be tracked
@param     id   an identifier that can be used to track this image
@param     w    the width at which the image is rendered
@param     h    the height at which the image is rendered
"
      end

      operation 6275970 "addImageImpl"
	private explicit_return_type "void"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1401218 "LOADING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating that media is currently being loaded.
@see         java.awt.MediaTracker#statusAll
@see         java.awt.MediaTracker#statusID

"
      end

      attribute 1401346 "ABORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating that the downloading of media was aborted.
@see         java.awt.MediaTracker#statusAll
@see         java.awt.MediaTracker#statusID

"
      end

      attribute 1401474 "ERRORED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating that the downloading of media encountered
an error.
@see         java.awt.MediaTracker#statusAll
@see         java.awt.MediaTracker#statusID

"
      end

      attribute 1401602 "COMPLETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating that the downloading of media was completed
successfully.
@see         java.awt.MediaTracker#statusAll
@see         java.awt.MediaTracker#statusID

"
      end

      attribute 1401730 "DONE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (ABORTED | ERRORED | COMPLETE)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6276098 "checkAll"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if all images being tracked by this media tracker
have finished loading.
<p>
This method does not start loading the images if they are not
already loading.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>isErrorAny</code> or <code>isErrorID</code> methods to
check for errors.
@return      <code>true</code> if all images have finished loading,
                      have been aborted, or have encountered
                      an error; <code>false</code> otherwise
@see         java.awt.MediaTracker#checkAll(boolean)
@see         java.awt.MediaTracker#checkID
@see         java.awt.MediaTracker#isErrorAny
@see         java.awt.MediaTracker#isErrorID
"
      end

      operation 6276226 "checkAll"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "load" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if all images being tracked by this media tracker
have finished loading.
<p>
If the value of the <code>load</code> flag is <code>true</code>,
then this method starts loading any images that are not yet
being loaded.
<p>
If there is an error while loading or scaling an image, that
image is considered to have finished loading. Use the
<code>isErrorAny</code> and <code>isErrorID</code> methods to
check for errors.
@param       load   if <code>true</code>, start loading any
                      images that are not yet being loaded
@return      <code>true</code> if all images have finished loading,
                      have been aborted, or have encountered
                      an error; <code>false</code> otherwise
@see         java.awt.MediaTracker#checkID
@see         java.awt.MediaTracker#checkAll()
@see         java.awt.MediaTracker#isErrorAny()
@see         java.awt.MediaTracker#isErrorID(int)
"
      end

      operation 6276354 "checkAll"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "load" explicit_type "boolean"
	  param inout name "verify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6276482 "isErrorAny"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the error status of all of the images.
@return   <code>true</code> if any of the images tracked
                 by this media tracker had an error during
                 loading; <code>false</code> otherwise
@see      java.awt.MediaTracker#isErrorID
@see      java.awt.MediaTracker#getErrorsAny
"
      end

      operation 6276610 "getErrorsAny"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of all media that have encountered an error.
@return       an array of media objects tracked by this
                       media tracker that have encountered
                       an error, or <code>null</code> if
                       there are none with errors
@see          java.awt.MediaTracker#isErrorAny
@see          java.awt.MediaTracker#getErrorsID
"
      end

      operation 6276738 "waitForAll"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts loading all images tracked by this media tracker. This
method waits until all the images being tracked have finished
loading.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>isErrorAny</code> or <code>isErrorID</code> methods to
check for errors.
@see         java.awt.MediaTracker#waitForID(int)
@see         java.awt.MediaTracker#waitForAll(long)
@see         java.awt.MediaTracker#isErrorAny
@see         java.awt.MediaTracker#isErrorID
@exception   InterruptedException  if any thread has
                                    interrupted this thread
"
      end

      operation 6276866 "waitForAll"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "ms" explicit_type "long"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts loading all images tracked by this media tracker. This
method waits until all the images being tracked have finished
loading, or until the length of time specified in milliseconds
by the <code>ms</code> argument has passed.
<p>
If there is an error while loading or scaling an image, then
that image is considered to have finished loading. Use the
<code>isErrorAny</code> or <code>isErrorID</code> methods to
check for errors.
@param       ms       the number of milliseconds to wait
                      for the loading to complete
@return      <code>true</code> if all images were successfully
                      loaded; <code>false</code> otherwise
@see         java.awt.MediaTracker#waitForID(int)
@see         java.awt.MediaTracker#waitForAll(long)
@see         java.awt.MediaTracker#isErrorAny
@see         java.awt.MediaTracker#isErrorID
@exception   InterruptedException  if any thread has
                                    interrupted this thread.
"
      end

      operation 6276994 "statusAll"
	public explicit_return_type "int"
	nparams 1
	  param inout name "load" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates and returns the bitwise inclusive <b>OR</b> of the
status of all media that are tracked by this media tracker.
<p>
Possible flags defined by the
<code>MediaTracker</code> class are <code>LOADING</code>,
<code>ABORTED</code>, <code>ERRORED</code>, and
<code>COMPLETE</code>. An image that hasn't started
loading has zero as its status.
<p>
If the value of <code>load</code> is <code>true</code>, then
this method starts loading any images that are not yet being loaded.

@param        load   if <code>true</code>, start loading
                           any images that are not yet being loaded
@return       the bitwise inclusive <b>OR</b> of the status of
                           all of the media being tracked
@see          java.awt.MediaTracker#statusID(int, boolean)
@see          java.awt.MediaTracker#LOADING
@see          java.awt.MediaTracker#ABORTED
@see          java.awt.MediaTracker#ERRORED
@see          java.awt.MediaTracker#COMPLETE
"
      end

      operation 6277122 "statusAll"
	private explicit_return_type "int"
	nparams 2
	  param inout name "load" explicit_type "boolean"
	  param inout name "verify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6277250 "checkID"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if all images tracked by this media tracker that
are tagged with the specified identifier have finished loading.
<p>
This method does not start loading the images if they are not
already loading.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>isErrorAny</code> or <code>isErrorID</code> methods to
check for errors.
@param       id   the identifier of the images to check
@return      <code>true</code> if all images have finished loading,
                      have been aborted, or have encountered
                      an error; <code>false</code> otherwise
@see         java.awt.MediaTracker#checkID(int, boolean)
@see         java.awt.MediaTracker#checkAll()
@see         java.awt.MediaTracker#isErrorAny()
@see         java.awt.MediaTracker#isErrorID(int)
"
      end

      operation 6277378 "checkID"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "load" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if all images tracked by this media tracker that
are tagged with the specified identifier have finished loading.
<p>
If the value of the <code>load</code> flag is <code>true</code>,
then this method starts loading any images that are not yet
being loaded.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>isErrorAny</code> or <code>isErrorID</code> methods to
check for errors.
@param       id       the identifier of the images to check
@param       load     if <code>true</code>, start loading any
                      images that are not yet being loaded
@return      <code>true</code> if all images have finished loading,
                      have been aborted, or have encountered
                      an error; <code>false</code> otherwise
@see         java.awt.MediaTracker#checkID(int, boolean)
@see         java.awt.MediaTracker#checkAll()
@see         java.awt.MediaTracker#isErrorAny()
@see         java.awt.MediaTracker#isErrorID(int)
"
      end

      operation 6277506 "checkID"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "load" explicit_type "boolean"
	  param inout name "verify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6277634 "isErrorID"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the error status of all of the images tracked by this
media tracker with the specified identifier.
@param        id   the identifier of the images to check
@return       <code>true</code> if any of the images with the
                         specified identifier had an error during
                         loading; <code>false</code> otherwise
@see          java.awt.MediaTracker#isErrorAny
@see          java.awt.MediaTracker#getErrorsID
"
      end

      operation 6277762 "getErrorsID"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of media with the specified ID that
have encountered an error.
@param       id   the identifier of the images to check
@return      an array of media objects tracked by this media
                      tracker with the specified identifier
                      that have encountered an error, or
                      <code>null</code> if there are none with errors
@see         java.awt.MediaTracker#isErrorID
@see         java.awt.MediaTracker#isErrorAny
@see         java.awt.MediaTracker#getErrorsAny
"
      end

      operation 6277890 "waitForID"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts loading all images tracked by this media tracker with the
specified identifier. This method waits until all the images with
the specified identifier have finished loading.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>isErrorAny</code> and <code>isErrorID</code> methods to
check for errors.
@param         id   the identifier of the images to check
@see           java.awt.MediaTracker#waitForAll
@see           java.awt.MediaTracker#isErrorAny()
@see           java.awt.MediaTracker#isErrorID(int)
@exception     InterruptedException  if any thread has
                         interrupted this thread.
"
      end

      operation 6278018 "waitForID"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "ms" explicit_type "long"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts loading all images tracked by this media tracker with the
specified identifier. This method waits until all the images with
the specified identifier have finished loading, or until the
length of time specified in milliseconds by the <code>ms</code>
argument has passed.
<p>
If there is an error while loading or scaling an image, then that
image is considered to have finished loading. Use the
<code>statusID</code>, <code>isErrorID</code>, and
<code>isErrorAny</code> methods to check for errors.
@param         id   the identifier of the images to check
@param         ms   the length of time, in milliseconds, to wait
                          for the loading to complete
@see           java.awt.MediaTracker#waitForAll
@see           java.awt.MediaTracker#waitForID(int)
@see           java.awt.MediaTracker#statusID
@see           java.awt.MediaTracker#isErrorAny()
@see           java.awt.MediaTracker#isErrorID(int)
@exception     InterruptedException  if any thread has
                         interrupted this thread.
"
      end

      operation 6278146 "statusID"
	public explicit_return_type "int"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "load" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates and returns the bitwise inclusive <b>OR</b> of the
status of all media with the specified identifier that are
tracked by this media tracker.
<p>
Possible flags defined by the
<code>MediaTracker</code> class are <code>LOADING</code>,
<code>ABORTED</code>, <code>ERRORED</code>, and
<code>COMPLETE</code>. An image that hasn't started
loading has zero as its status.
<p>
If the value of <code>load</code> is <code>true</code>, then
this method starts loading any images that are not yet being loaded.
@param        id   the identifier of the images to check
@param        load   if <code>true</code>, start loading
                           any images that are not yet being loaded
@return       the bitwise inclusive <b>OR</b> of the status of
                           all of the media with the specified
                           identifier that are being tracked
@see          java.awt.MediaTracker#statusAll(boolean)
@see          java.awt.MediaTracker#LOADING
@see          java.awt.MediaTracker#ABORTED
@see          java.awt.MediaTracker#ERRORED
@see          java.awt.MediaTracker#COMPLETE
"
      end

      operation 6278274 "statusID"
	private explicit_return_type "int"
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "load" explicit_type "boolean"
	  param inout name "verify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6278402 "removeImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified image from this media tracker.
All instances of the specified image are removed,
regardless of scale or ID.
@param   image     the image to be removed
@see     java.awt.MediaTracker#removeImage(java.awt.Image, int)
@see     java.awt.MediaTracker#removeImage(java.awt.Image, int, int, int)
@since   JDK1.1
"
      end

      operation 6278530 "removeImageImpl"
	private explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6278658 "removeImage"
	public explicit_return_type "void"
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified image from the specified tracking
ID of this media tracker.
All instances of <code>Image</code> being tracked
under the specified ID are removed regardless of scale.
@param      image the image to be removed
@param      id the tracking ID from which to remove the image
@see        java.awt.MediaTracker#removeImage(java.awt.Image)
@see        java.awt.MediaTracker#removeImage(java.awt.Image, int, int, int)
@since      JDK1.1
"
      end

      operation 6278786 "removeImageImpl"
	private explicit_return_type "void"
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6278914 "removeImage"
	public explicit_return_type "void"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified image with the specified
width, height, and ID from this media tracker.
Only the specified instance (with any duplicates) is removed.
@param   image the image to be removed
@param   id the tracking ID from which to remove the image
@param   width the width to remove (-1 for unscaled)
@param   height the height to remove (-1 for unscaled)
@see     java.awt.MediaTracker#removeImage(java.awt.Image)
@see     java.awt.MediaTracker#removeImage(java.awt.Image, int)
@since   JDK1.1
"
      end

      operation 6279042 "removeImageImpl"
	private explicit_return_type "void"
	nparams 4
	  param inout name "image" type class_ref 340098 // Image
	  param in name "id" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279170 "setDone"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279298 "getResolutionVariant"
	class_operation private return_type class_ref 340098 // Image
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 871938 "MediaEntry"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2936194 // tracker (<unidirectional association>)
	relation 2936194 --->
	  a role_name "tracker" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2936194 // tracker (<unidirectional association>)
	  b parent class_ref 871810 // MediaTracker
      end

      attribute 1401858 "ID"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2936322 // next (<unidirectional association>)
	relation 2936322 --->
	  a role_name "next" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2936322 // next (<unidirectional association>)
	  b parent class_ref 871938 // MediaEntry
      end

      attribute 1401986 "status"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402114 "cancelled"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6279426 "MediaEntry"
	package explicit_return_type ""
	nparams 2
	  param inout name "mt" type class_ref 871810 // MediaTracker
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279554 "getMedia"
	abstract package return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279682 "insert"
	class_operation package return_type class_ref 871938 // MediaEntry
	nparams 2
	  param inout name "head" type class_ref 871938 // MediaEntry
	  param inout name "me" type class_ref 871938 // MediaEntry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279810 "getID"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6279938 "startLoad"
	abstract package explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280066 "cancel"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1402242 "LOADING"
	class_attribute const_attribute package explicit_type "int"
	init_value " MediaTracker.LOADING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402370 "ABORTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " MediaTracker.ABORTED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402498 "ERRORED"
	class_attribute const_attribute package explicit_type "int"
	init_value " MediaTracker.ERRORED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402626 "COMPLETE"
	class_attribute const_attribute package explicit_type "int"
	init_value " MediaTracker.COMPLETE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402754 "LOADSTARTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " (LOADING | ERRORED | COMPLETE)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1402882 "DONE"
	class_attribute const_attribute package explicit_type "int"
	init_value " (ABORTED | ERRORED | COMPLETE)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6280194 "getStatus"
	package explicit_return_type "int"
	nparams 2
	  param inout name "doLoad" explicit_type "boolean"
	  param inout name "doVerify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280322 "setStatus"
	package explicit_return_type "void"
	nparams 1
	  param in name "flag" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 872066 "ImageMediaEntry"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2936450 // <generalisation>
	relation 2936450 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2936450 // <generalisation>
	  b parent class_ref 871938 // MediaEntry
      end

      classrelation 2936578 // <realization>
	relation 2936578 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2936578 // <realization>
	  b parent class_ref 339970 // ImageObserver
      end

      classrelation 2936706 // <realization>
	relation 2936706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2936706 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2936834 // image (<unidirectional association>)
	relation 2936834 --->
	  a role_name "image" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2936834 // image (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      attribute 1403010 "width"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1403138 "height"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1403266 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4739377000350280650L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6280450 "ImageMediaEntry"
	package explicit_return_type ""
	nparams 5
	  param inout name "mt" type class_ref 871810 // MediaTracker
	  param inout name "img" type class_ref 340098 // Image
	  param in name "c" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280578 "matches"
	package explicit_return_type "boolean"
	nparams 3
	  param inout name "img" type class_ref 340098 // Image
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280706 "getMedia"
	package return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280834 "getStatus"
	package explicit_return_type "int"
	nparams 2
	  param inout name "doLoad" explicit_type "boolean"
	  param inout name "doVerify" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6280962 "startLoad"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6281090 "parseflags"
	package explicit_return_type "int"
	nparams 1
	  param in name "infoflags" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6281218 "imageUpdate"
	public explicit_return_type "boolean"
	nparams 6
	  param inout name "img" type class_ref 340098 // Image
	  param in name "infoflags" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 872194 "Menu"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>Menu</code> object is a pull-down menu component
that is deployed from a menu bar.
<p>
A menu can optionally be a <i>tear-off</i> menu. A tear-off menu
can be opened and dragged away from its parent menu bar or menu.
It remains on the screen after the mouse button has been released.
The mechanism for tearing off a menu is platform dependent, since
the look and feel of the tear-off menu is determined by its peer.
On platforms that do not support tear-off menus, the tear-off
property is ignored.
<p>
Each item in a menu must belong to the <code>MenuItem</code>
class. It can be an instance of <code>MenuItem</code>, a submenu
(an instance of <code>Menu</code>), or a check box (an instance of
<code>CheckboxMenuItem</code>).

@author Sami Shaio
@see     java.awt.MenuItem
@see     java.awt.CheckboxMenuItem
@since   JDK1.0
"
      classrelation 2936962 // <generalisation>
	relation 2936962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2936962 // <generalisation>
	  b parent class_ref 859394 // MenuItem
      end

      classrelation 2937090 // <realization>
	relation 2937090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2937090 // <realization>
	  b parent class_ref 340226 // MenuContainer
      end

      classrelation 2937218 // <realization>
	relation 2937218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2937218 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      extra_member 150786 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setMenuAccessor(
            new AWTAccessor.MenuAccessor() {
                public Vector<MenuComponent> getItems(Menu menu) {
                    return menu.items;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 2937346 // items (<unidirectional association>)
	relation 2937346 --->
	  a role_name "items" init_value " new Vector<>()" package
	    comment "
A vector of the items that will be part of the Menu.

@serial
@see #countItems()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<MenuComponent> ${name}${value};
"
	    classrelation_ref 2937346 // items (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1403394 "tearOff"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field indicates whether the menu has the
tear of property or not.  It will be set to
<code>true</code> if the menu has the tear off
property and it will be set to <code>false</code>
if it does not.
A torn off menu can be deleted by a user when
it is no longer needed.

@serial
@see #isTearOff()

"
      end

      attribute 1403522 "isHelpMenu"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field will be set to <code>true</code>
if the Menu in question is actually a help
menu.  Otherwise it will be set to <code>
false</code>.

@serial

"
      end

      classrelation 2937474 // base (<unidirectional association>)
	relation 2937474 --->
	  a role_name "base" init_value " \"menu\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2937474 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1403650 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1403778 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8809584163345499784L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6281346 "Menu"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new menu with an empty label. This menu is not
a tear-off menu.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since      JDK1.1
"
      end

      operation 6281474 "Menu"
	public explicit_return_type ""
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new menu with the specified label. This menu is not
a tear-off menu.
@param       label the menu's label in the menu bar, or in
                  another menu of which this menu is a submenu.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6281602 "Menu"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" type class_ref 128130 // String
	  param inout name "tearOff" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new menu with the specified label,
indicating whether the menu can be torn off.
<p>
Tear-off functionality may not be supported by all
implementations of AWT.  If a particular implementation doesn't
support tear-off menus, this value is silently ignored.
@param       label the menu's label in the menu bar, or in
                  another menu of which this menu is a submenu.
@param       tearOff   if <code>true</code>, the menu
                  is a tear-off menu.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since       JDK1.0.
"
      end

      operation 6281730 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this MenuComponent.  Called by getName() when
the name is null.
"
      end

      operation 6281858 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the menu's peer.  The peer allows us to modify the
appearance of the menu without changing its functionality.
"
      end

      operation 6281986 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu's peer.  The peer allows us to modify the appearance
of the menu without changing its functionality.
"
      end

      operation 6282114 "isTearOff"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this menu is a tear-off menu.
<p>
Tear-off functionality may not be supported by all
implementations of AWT.  If a particular implementation doesn't
support tear-off menus, this value is silently ignored.
@return      <code>true</code> if this is a tear-off menu;
                        <code>false</code> otherwise.
"
      end

      operation 6282242 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of items in this menu.
@return     the number of items in this menu.
@since      JDK1.1
"
      end

      operation 6282370 "countItems"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getItemCount()</code>.
"
      end

      operation 6282498 "countItemsImpl"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 6282626 "getItem"
	public return_type class_ref 859394 // MenuItem
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the item located at the specified index of this menu.
@param     index the position of the item to be returned.
@return    the item located at the specified index.
"
      end

      operation 6282754 "getItemImpl"
	package return_type class_ref 859394 // MenuItem
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the native code, so client code can't
be called on the toolkit thread.
"
      end

      operation 6282882 "add"
	public return_type class_ref 859394 // MenuItem
	nparams 1
	  param inout name "mi" type class_ref 859394 // MenuItem
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified menu item to this menu. If the
menu item has been part of another menu, removes it
from that menu.

@param       mi   the menu item to be added
@return      the menu item added
@see         java.awt.Menu#insert(java.lang.String, int)
@see         java.awt.Menu#insert(java.awt.MenuItem, int)
"
      end

      operation 6283010 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an item with the specified label to this menu.

@param       label   the text on the item
@see         java.awt.Menu#insert(java.lang.String, int)
@see         java.awt.Menu#insert(java.awt.MenuItem, int)
"
      end

      operation 6283138 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "menuitem" type class_ref 859394 // MenuItem
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a menu item into this menu
at the specified position.

@param         menuitem  the menu item to be inserted.
@param         index     the position at which the menu
                         item should be inserted.
@see           java.awt.Menu#add(java.lang.String)
@see           java.awt.Menu#add(java.awt.MenuItem)
@exception     IllegalArgumentException if the value of
                   <code>index</code> is less than zero
@since         JDK1.1
"
      end

      operation 6283266 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "label" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a menu item with the specified label into this menu
at the specified position.  This is a convenience method for
<code>insert(menuItem, index)</code>.

@param       label the text on the item
@param       index the position at which the menu item
                     should be inserted
@see         java.awt.Menu#add(java.lang.String)
@see         java.awt.Menu#add(java.awt.MenuItem)
@exception     IllegalArgumentException if the value of
                   <code>index</code> is less than zero
@since       JDK1.1
"
      end

      operation 6283394 "addSeparator"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a separator line, or a hypen, to the menu at the current position.
@see         java.awt.Menu#insertSeparator(int)
"
      end

      operation 6283522 "insertSeparator"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a separator at the specified position.
@param       index the position at which the
                      menu separator should be inserted.
@exception   IllegalArgumentException if the value of
                      <code>index</code> is less than 0.
@see         java.awt.Menu#addSeparator
@since       JDK1.1
"
      end

      operation 6283650 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the menu item at the specified index from this menu.
@param       index the position of the item to be removed.
"
      end

      operation 6283778 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified menu item from this menu.
@param  item the item to be removed from the menu.
        If <code>item</code> is <code>null</code>
        or is not in this menu, this method does
        nothing.
"
      end

      operation 6283906 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all items from this menu.
@since       JDK1.0.
"
      end

      operation 6284034 "handleShortcut"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 346498 // KeyEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Post an ActionEvent to the target of the MenuPeer
associated with the specified keyboard event (on
keydown).  Returns true if there is an associated
keyboard event.
"
      end

      operation 6284162 "getShortcutMenuItem"
	package return_type class_ref 859394 // MenuItem
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6284290 "shortcuts"
	package return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<MenuShortcut> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6284418 "deleteShortcut"
	package explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 859778 // MenuShortcut
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1403906 "menuSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.  A MenuContainer is responsible for
restoring the parent fields of its children.


The menu serialized Data Version.

@serial

"
      end

      operation 6284546 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.

@param s the <code>ObjectOutputStream</code> to write
@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see #readObject(ObjectInputStream)
"
      end

      operation 6284674 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6284802 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Menu</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return the parameter string of this menu
"
      end

      operation 6284930 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      operation 6285058 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this Menu.
For menus, the AccessibleContext takes the form of an
AccessibleAWTMenu.
A new AccessibleAWTMenu instance is created if necessary.

@return an AccessibleAWTMenu that serves as the
        AccessibleContext of this Menu
@since 1.3
"
      end

      operation 6285186 "getAccessibleChildIndex"
	package explicit_return_type "int"
	nparams 1
	  param inout name "child" type class_ref 340482 // MenuComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defined in MenuComponent. Overridden here.
"
      end

      class 872322 "AccessibleAWTMenu"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2937602 // <generalisation>
	  relation 2937602 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2937602 // <generalisation>
	    b parent class_ref 859906 // AccessibleAWTMenuItem
	end

	attribute 1404034 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 5228160894980069094L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6285314 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end
      end
    end

    class 872962 "MouseInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>MouseInfo</code>  provides methods for getting information about the mouse,
such as mouse pointer location and the number of mouse buttons.

@author     Roman Poborchiy
@since 1.5
"
      operation 6291330 "MouseInfo"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private constructor to prevent instantiation.
"
      end

      operation 6291458 "getPointerInfo"
	class_operation public return_type class_ref 343426 // PointerInfo
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>PointerInfo</code> instance that represents the current
location of the mouse pointer.
The <code>GraphicsDevice</code> stored in this <code>PointerInfo</code>
contains the mouse pointer. The coordinate system used for the mouse position
depends on whether or not the <code>GraphicsDevice</code> is part of a virtual
screen device.
For virtual screen devices, the coordinates are given in the virtual
coordinate system, otherwise they are returned in the coordinate system
of the <code>GraphicsDevice</code>. See {@link GraphicsConfiguration}
for more information about the virtual screen devices.
On systems without a mouse, returns <code>null</code>.
<p>
If there is a security manager, its <code>checkPermission</code> method
is called with an <code>AWTPermission(\"watchMousePointer\")</code>
permission before creating and returning a <code>PointerInfo</code>
object. This may result in a <code>SecurityException</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless() returns true
@exception SecurityException if a security manager exists and its
           <code>checkPermission</code> method doesn't allow the operation
@see       GraphicsConfiguration
@see       SecurityManager#checkPermission
@see       java.awt.AWTPermission
@return    location of the mouse pointer
@since     1.5
"
      end

      operation 6291586 "areScreenDevicesIndependent"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "gds" type class_ref 868994 // GraphicsDevice
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6291714 "getNumberOfButtons"
	class_operation public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of buttons on the mouse.
On systems without a mouse, returns <code>-1</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless() returns true
@return number of buttons on the mouse
@since 1.5
"
      end
    end

    class 873090 "PageAttributes"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A set of attributes which control the output of a printed page.
<p>
Instances of this class control the color state, paper size (media type),
orientation, logical origin, print quality, and resolution of every
page which uses the instance. Attribute names are compliant with the
Internet Printing Protocol (IPP) 1.1 where possible. Attribute values
are partially compliant where possible.
<p>
To use a method which takes an inner class type, pass a reference to
one of the constant fields of the inner class. Client code cannot create
new instances of the inner class types because none of those classes
has a public constructor. For example, to set the color state to
monochrome, use the following code:
<pre>
import java.awt.PageAttributes;

public class MonochromeExample {
    public void setMonochrome(PageAttributes pageAttributes) {
        pageAttributes.setColor(PageAttributes.ColorType.MONOCHROME);
    }
}
</pre>
<p>
Every IPP attribute which supports an <i>attributeName</i>-default value
has a corresponding <code>set<i>attributeName</i>ToDefault</code> method.
Default value fields are not provided.

@author      David Mendenhall
@since 1.3
"
      classrelation 2939522 // <realization>
	relation 2939522 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2939522 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      class 873218 "ColorType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2939650 // <generalisation>
	  relation 2939650 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2939650 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1405442 "I_COLOR"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1405570 "I_MONOCHROME"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2939778 // NAMES (<unidirectional association>)
	  relation 2939778 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"color\", \"monochrome\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2939778 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2939906 // COLOR (<unidirectional association>)
	  relation 2939906 --->
	    a role_name "COLOR" init_value " new ColorType(I_COLOR)" class_relation const_relation public
	      comment "
The ColorType instance to use for specifying color printing.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2939906 // COLOR (<unidirectional association>)
	    b parent class_ref 873218 // ColorType
	end

	classrelation 2940034 // MONOCHROME (<unidirectional association>)
	  relation 2940034 --->
	    a role_name "MONOCHROME" init_value " new ColorType(I_MONOCHROME)" class_relation const_relation public
	      comment "
The ColorType instance to use for specifying monochrome printing.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940034 // MONOCHROME (<unidirectional association>)
	    b parent class_ref 873218 // ColorType
	end

	operation 6291842 "ColorType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 873346 "MediaType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2940162 // <generalisation>
	  relation 2940162 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2940162 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1405698 "I_ISO_4A0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1405826 "I_ISO_2A0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1405954 "I_ISO_A0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406082 "I_ISO_A1"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 3"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406210 "I_ISO_A2"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 4"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406338 "I_ISO_A3"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 5"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406466 "I_ISO_A4"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 6"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406594 "I_ISO_A5"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 7"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406722 "I_ISO_A6"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 8"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406850 "I_ISO_A7"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 9"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1406978 "I_ISO_A8"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407106 "I_ISO_A9"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 11"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407234 "I_ISO_A10"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 12"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407362 "I_ISO_B0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 13"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407490 "I_ISO_B1"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 14"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407618 "I_ISO_B2"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 15"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407746 "I_ISO_B3"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 16"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1407874 "I_ISO_B4"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 17"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408002 "I_ISO_B5"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 18"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408130 "I_ISO_B6"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 19"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408258 "I_ISO_B7"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408386 "I_ISO_B8"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 21"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408514 "I_ISO_B9"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 22"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408642 "I_ISO_B10"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 23"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408770 "I_JIS_B0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 24"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1408898 "I_JIS_B1"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 25"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409026 "I_JIS_B2"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 26"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409154 "I_JIS_B3"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 27"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409282 "I_JIS_B4"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 28"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409410 "I_JIS_B5"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 29"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409538 "I_JIS_B6"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 30"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409666 "I_JIS_B7"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 31"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409794 "I_JIS_B8"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 32"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1409922 "I_JIS_B9"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 33"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410050 "I_JIS_B10"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 34"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410178 "I_ISO_C0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 35"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410306 "I_ISO_C1"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 36"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410434 "I_ISO_C2"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 37"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410562 "I_ISO_C3"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 38"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410690 "I_ISO_C4"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 39"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410818 "I_ISO_C5"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 40"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1410946 "I_ISO_C6"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 41"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411074 "I_ISO_C7"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 42"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411202 "I_ISO_C8"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 43"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411330 "I_ISO_C9"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 44"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411458 "I_ISO_C10"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 45"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411586 "I_ISO_DESIGNATED_LONG"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 46"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411714 "I_EXECUTIVE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 47"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411842 "I_FOLIO"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 48"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1411970 "I_INVOICE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 49"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412098 "I_LEDGER"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 50"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412226 "I_NA_LETTER"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 51"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412354 "I_NA_LEGAL"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 52"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412482 "I_QUARTO"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 53"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412610 "I_A"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 54"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412738 "I_B"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 55"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412866 "I_C"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 56"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1412994 "I_D"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 57"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413122 "I_E"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 58"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413250 "I_NA_10X15_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 59"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413378 "I_NA_10X14_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 60"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413506 "I_NA_10X13_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 61"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413634 "I_NA_9X12_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 62"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413762 "I_NA_9X11_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 63"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1413890 "I_NA_7X9_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 64"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414018 "I_NA_6X9_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 65"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414146 "I_NA_NUMBER_9_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 66"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414274 "I_NA_NUMBER_10_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 67"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414402 "I_NA_NUMBER_11_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 68"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414530 "I_NA_NUMBER_12_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 69"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414658 "I_NA_NUMBER_14_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 70"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414786 "I_INVITE_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 71"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1414914 "I_ITALY_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 72"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1415042 "I_MONARCH_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 73"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1415170 "I_PERSONAL_ENVELOPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 74"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2940290 // NAMES (<unidirectional association>)
	  relation 2940290 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"iso-4a0\", \"iso-2a0\", \"iso-a0\", \"iso-a1\", \"iso-a2\", \"iso-a3\",
            \"iso-a4\", \"iso-a5\", \"iso-a6\", \"iso-a7\", \"iso-a8\", \"iso-a9\",
            \"iso-a10\", \"iso-b0\", \"iso-b1\", \"iso-b2\", \"iso-b3\", \"iso-b4\",
            \"iso-b5\", \"iso-b6\", \"iso-b7\", \"iso-b8\", \"iso-b9\", \"iso-b10\",
            \"jis-b0\", \"jis-b1\", \"jis-b2\", \"jis-b3\", \"jis-b4\", \"jis-b5\",
            \"jis-b6\", \"jis-b7\", \"jis-b8\", \"jis-b9\", \"jis-b10\", \"iso-c0\",
            \"iso-c1\", \"iso-c2\", \"iso-c3\", \"iso-c4\", \"iso-c5\", \"iso-c6\",
            \"iso-c7\", \"iso-c8\", \"iso-c9\", \"iso-c10\", \"iso-designated-long\",
            \"executive\", \"folio\", \"invoice\", \"ledger\", \"na-letter\", \"na-legal\",
            \"quarto\", \"a\", \"b\", \"c\", \"d\", \"e\", \"na-10x15-envelope\",
            \"na-10x14-envelope\", \"na-10x13-envelope\", \"na-9x12-envelope\",
            \"na-9x11-envelope\", \"na-7x9-envelope\", \"na-6x9-envelope\",
            \"na-number-9-envelope\", \"na-number-10-envelope\",
            \"na-number-11-envelope\", \"na-number-12-envelope\",
            \"na-number-14-envelope\", \"invite-envelope\", \"italy-envelope\",
            \"monarch-envelope\", \"personal-envelope\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2940290 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2940418 // ISO_4A0 (<unidirectional association>)
	  relation 2940418 --->
	    a role_name "ISO_4A0" init_value " new MediaType(I_ISO_4A0)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS 4A0, 1682 x 2378 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940418 // ISO_4A0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2940546 // ISO_2A0 (<unidirectional association>)
	  relation 2940546 --->
	    a role_name "ISO_2A0" init_value " new MediaType(I_ISO_2A0)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS 2A0, 1189 x 1682 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940546 // ISO_2A0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2940674 // ISO_A0 (<unidirectional association>)
	  relation 2940674 --->
	    a role_name "ISO_A0" init_value " new MediaType(I_ISO_A0)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A0, 841 x 1189 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940674 // ISO_A0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2940802 // ISO_A1 (<unidirectional association>)
	  relation 2940802 --->
	    a role_name "ISO_A1" init_value " new MediaType(I_ISO_A1)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A1, 594 x 841 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940802 // ISO_A1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2940930 // ISO_A2 (<unidirectional association>)
	  relation 2940930 --->
	    a role_name "ISO_A2" init_value " new MediaType(I_ISO_A2)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A2, 420 x 594 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2940930 // ISO_A2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941058 // ISO_A3 (<unidirectional association>)
	  relation 2941058 --->
	    a role_name "ISO_A3" init_value " new MediaType(I_ISO_A3)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A3, 297 x 420 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941058 // ISO_A3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941186 // ISO_A4 (<unidirectional association>)
	  relation 2941186 --->
	    a role_name "ISO_A4" init_value " new MediaType(I_ISO_A4)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A4, 210 x 297 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941186 // ISO_A4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941314 // ISO_A5 (<unidirectional association>)
	  relation 2941314 --->
	    a role_name "ISO_A5" init_value " new MediaType(I_ISO_A5)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A5, 148 x 210 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941314 // ISO_A5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941442 // ISO_A6 (<unidirectional association>)
	  relation 2941442 --->
	    a role_name "ISO_A6" init_value " new MediaType(I_ISO_A6)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A6, 105 x 148 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941442 // ISO_A6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941570 // ISO_A7 (<unidirectional association>)
	  relation 2941570 --->
	    a role_name "ISO_A7" init_value " new MediaType(I_ISO_A7)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A7, 74 x 105 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941570 // ISO_A7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941698 // ISO_A8 (<unidirectional association>)
	  relation 2941698 --->
	    a role_name "ISO_A8" init_value " new MediaType(I_ISO_A8)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A8, 52 x 74 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941698 // ISO_A8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941826 // ISO_A9 (<unidirectional association>)
	  relation 2941826 --->
	    a role_name "ISO_A9" init_value " new MediaType(I_ISO_A9)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A9, 37 x 52 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941826 // ISO_A9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2941954 // ISO_A10 (<unidirectional association>)
	  relation 2941954 --->
	    a role_name "ISO_A10" init_value " new MediaType(I_ISO_A10)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN and JIS A10, 26 x 37 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2941954 // ISO_A10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942082 // ISO_B0 (<unidirectional association>)
	  relation 2942082 --->
	    a role_name "ISO_B0" init_value " new MediaType(I_ISO_B0)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B0, 1000 x 1414 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942082 // ISO_B0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942210 // ISO_B1 (<unidirectional association>)
	  relation 2942210 --->
	    a role_name "ISO_B1" init_value " new MediaType(I_ISO_B1)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B1, 707 x 1000 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942210 // ISO_B1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942338 // ISO_B2 (<unidirectional association>)
	  relation 2942338 --->
	    a role_name "ISO_B2" init_value " new MediaType(I_ISO_B2)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B2, 500 x 707 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942338 // ISO_B2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942466 // ISO_B3 (<unidirectional association>)
	  relation 2942466 --->
	    a role_name "ISO_B3" init_value " new MediaType(I_ISO_B3)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B3, 353 x 500 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942466 // ISO_B3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942594 // ISO_B4 (<unidirectional association>)
	  relation 2942594 --->
	    a role_name "ISO_B4" init_value " new MediaType(I_ISO_B4)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B4, 250 x 353 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942594 // ISO_B4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942722 // ISO_B5 (<unidirectional association>)
	  relation 2942722 --->
	    a role_name "ISO_B5" init_value " new MediaType(I_ISO_B5)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B5, 176 x 250 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942722 // ISO_B5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942850 // ISO_B6 (<unidirectional association>)
	  relation 2942850 --->
	    a role_name "ISO_B6" init_value " new MediaType(I_ISO_B6)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B6, 125 x 176 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942850 // ISO_B6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2942978 // ISO_B7 (<unidirectional association>)
	  relation 2942978 --->
	    a role_name "ISO_B7" init_value " new MediaType(I_ISO_B7)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B7, 88 x 125 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2942978 // ISO_B7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943106 // ISO_B8 (<unidirectional association>)
	  relation 2943106 --->
	    a role_name "ISO_B8" init_value " new MediaType(I_ISO_B8)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B8, 62 x 88 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943106 // ISO_B8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943234 // ISO_B9 (<unidirectional association>)
	  relation 2943234 --->
	    a role_name "ISO_B9" init_value " new MediaType(I_ISO_B9)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B9, 44 x 62 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943234 // ISO_B9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943362 // ISO_B10 (<unidirectional association>)
	  relation 2943362 --->
	    a role_name "ISO_B10" init_value " new MediaType(I_ISO_B10)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN B10, 31 x 44 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943362 // ISO_B10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943490 // JIS_B0 (<unidirectional association>)
	  relation 2943490 --->
	    a role_name "JIS_B0" init_value " new MediaType(I_JIS_B0)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B0, 1030 x 1456 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943490 // JIS_B0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943618 // JIS_B1 (<unidirectional association>)
	  relation 2943618 --->
	    a role_name "JIS_B1" init_value " new MediaType(I_JIS_B1)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B1, 728 x 1030 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943618 // JIS_B1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943746 // JIS_B2 (<unidirectional association>)
	  relation 2943746 --->
	    a role_name "JIS_B2" init_value " new MediaType(I_JIS_B2)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B2, 515 x 728 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943746 // JIS_B2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2943874 // JIS_B3 (<unidirectional association>)
	  relation 2943874 --->
	    a role_name "JIS_B3" init_value " new MediaType(I_JIS_B3)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B3, 364 x 515 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2943874 // JIS_B3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944002 // JIS_B4 (<unidirectional association>)
	  relation 2944002 --->
	    a role_name "JIS_B4" init_value " new MediaType(I_JIS_B4)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B4, 257 x 364 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944002 // JIS_B4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944130 // JIS_B5 (<unidirectional association>)
	  relation 2944130 --->
	    a role_name "JIS_B5" init_value " new MediaType(I_JIS_B5)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B5, 182 x 257 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944130 // JIS_B5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944258 // JIS_B6 (<unidirectional association>)
	  relation 2944258 --->
	    a role_name "JIS_B6" init_value " new MediaType(I_JIS_B6)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B6, 128 x 182 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944258 // JIS_B6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944386 // JIS_B7 (<unidirectional association>)
	  relation 2944386 --->
	    a role_name "JIS_B7" init_value " new MediaType(I_JIS_B7)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B7, 91 x 128 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944386 // JIS_B7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944514 // JIS_B8 (<unidirectional association>)
	  relation 2944514 --->
	    a role_name "JIS_B8" init_value " new MediaType(I_JIS_B8)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B8, 64 x 91 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944514 // JIS_B8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944642 // JIS_B9 (<unidirectional association>)
	  relation 2944642 --->
	    a role_name "JIS_B9" init_value " new MediaType(I_JIS_B9)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B9, 45 x 64 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944642 // JIS_B9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944770 // JIS_B10 (<unidirectional association>)
	  relation 2944770 --->
	    a role_name "JIS_B10" init_value " new MediaType(I_JIS_B10)" class_relation const_relation public
	      comment "
The MediaType instance for JIS B10, 32 x 45 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944770 // JIS_B10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2944898 // ISO_C0 (<unidirectional association>)
	  relation 2944898 --->
	    a role_name "ISO_C0" init_value " new MediaType(I_ISO_C0)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C0, 917 x 1297 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2944898 // ISO_C0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945026 // ISO_C1 (<unidirectional association>)
	  relation 2945026 --->
	    a role_name "ISO_C1" init_value " new MediaType(I_ISO_C1)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C1, 648 x 917 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945026 // ISO_C1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945154 // ISO_C2 (<unidirectional association>)
	  relation 2945154 --->
	    a role_name "ISO_C2" init_value " new MediaType(I_ISO_C2)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C2, 458 x 648 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945154 // ISO_C2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945282 // ISO_C3 (<unidirectional association>)
	  relation 2945282 --->
	    a role_name "ISO_C3" init_value " new MediaType(I_ISO_C3)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C3, 324 x 458 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945282 // ISO_C3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945410 // ISO_C4 (<unidirectional association>)
	  relation 2945410 --->
	    a role_name "ISO_C4" init_value " new MediaType(I_ISO_C4)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C4, 229 x 324 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945410 // ISO_C4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945538 // ISO_C5 (<unidirectional association>)
	  relation 2945538 --->
	    a role_name "ISO_C5" init_value " new MediaType(I_ISO_C5)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C5, 162 x 229 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945538 // ISO_C5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945666 // ISO_C6 (<unidirectional association>)
	  relation 2945666 --->
	    a role_name "ISO_C6" init_value " new MediaType(I_ISO_C6)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C6, 114 x 162 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945666 // ISO_C6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945794 // ISO_C7 (<unidirectional association>)
	  relation 2945794 --->
	    a role_name "ISO_C7" init_value " new MediaType(I_ISO_C7)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C7, 81 x 114 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945794 // ISO_C7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2945922 // ISO_C8 (<unidirectional association>)
	  relation 2945922 --->
	    a role_name "ISO_C8" init_value " new MediaType(I_ISO_C8)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C8, 57 x 81 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2945922 // ISO_C8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946050 // ISO_C9 (<unidirectional association>)
	  relation 2946050 --->
	    a role_name "ISO_C9" init_value " new MediaType(I_ISO_C9)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C9, 40 x 57 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946050 // ISO_C9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946178 // ISO_C10 (<unidirectional association>)
	  relation 2946178 --->
	    a role_name "ISO_C10" init_value " new MediaType(I_ISO_C10)" class_relation const_relation public
	      comment "
The MediaType instance for ISO/DIN C10, 28 x 40 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946178 // ISO_C10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946306 // ISO_DESIGNATED_LONG (<unidirectional association>)
	  relation 2946306 --->
	    a role_name "ISO_DESIGNATED_LONG" init_value "
            new MediaType(I_ISO_DESIGNATED_LONG)" class_relation const_relation public
	      comment "
The MediaType instance for ISO Designated Long, 110 x 220 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946306 // ISO_DESIGNATED_LONG (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946434 // EXECUTIVE (<unidirectional association>)
	  relation 2946434 --->
	    a role_name "EXECUTIVE" init_value " new MediaType(I_EXECUTIVE)" class_relation const_relation public
	      comment "
The MediaType instance for Executive, 7 1/4 x 10 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946434 // EXECUTIVE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946562 // FOLIO (<unidirectional association>)
	  relation 2946562 --->
	    a role_name "FOLIO" init_value " new MediaType(I_FOLIO)" class_relation const_relation public
	      comment "
The MediaType instance for Folio, 8 1/2 x 13 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946562 // FOLIO (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946690 // INVOICE (<unidirectional association>)
	  relation 2946690 --->
	    a role_name "INVOICE" init_value " new MediaType(I_INVOICE)" class_relation const_relation public
	      comment "
The MediaType instance for Invoice, 5 1/2 x 8 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946690 // INVOICE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946818 // LEDGER (<unidirectional association>)
	  relation 2946818 --->
	    a role_name "LEDGER" init_value " new MediaType(I_LEDGER)" class_relation const_relation public
	      comment "
The MediaType instance for Ledger, 11 x 17 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946818 // LEDGER (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2946946 // NA_LETTER (<unidirectional association>)
	  relation 2946946 --->
	    a role_name "NA_LETTER" init_value " new MediaType(I_NA_LETTER)" class_relation const_relation public
	      comment "
The MediaType instance for North American Letter, 8 1/2 x 11 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2946946 // NA_LETTER (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947074 // NA_LEGAL (<unidirectional association>)
	  relation 2947074 --->
	    a role_name "NA_LEGAL" init_value " new MediaType(I_NA_LEGAL)" class_relation const_relation public
	      comment "
The MediaType instance for North American Legal, 8 1/2 x 14 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947074 // NA_LEGAL (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947202 // QUARTO (<unidirectional association>)
	  relation 2947202 --->
	    a role_name "QUARTO" init_value " new MediaType(I_QUARTO)" class_relation const_relation public
	      comment "
The MediaType instance for Quarto, 215 x 275 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947202 // QUARTO (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947330 // A (<unidirectional association>)
	  relation 2947330 --->
	    a role_name "A" init_value " new MediaType(I_A)" class_relation const_relation public
	      comment "
The MediaType instance for Engineering A, 8 1/2 x 11 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947330 // A (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947458 // B (<unidirectional association>)
	  relation 2947458 --->
	    a role_name "B" init_value " new MediaType(I_B)" class_relation const_relation public
	      comment "
The MediaType instance for Engineering B, 11 x 17 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947458 // B (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947586 // C (<unidirectional association>)
	  relation 2947586 --->
	    a role_name "C" init_value " new MediaType(I_C)" class_relation const_relation public
	      comment "
The MediaType instance for Engineering C, 17 x 22 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947586 // C (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947714 // D (<unidirectional association>)
	  relation 2947714 --->
	    a role_name "D" init_value " new MediaType(I_D)" class_relation const_relation public
	      comment "
The MediaType instance for Engineering D, 22 x 34 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947714 // D (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947842 // E (<unidirectional association>)
	  relation 2947842 --->
	    a role_name "E" init_value " new MediaType(I_E)" class_relation const_relation public
	      comment "
The MediaType instance for Engineering E, 34 x 44 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947842 // E (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2947970 // NA_10X15_ENVELOPE (<unidirectional association>)
	  relation 2947970 --->
	    a role_name "NA_10X15_ENVELOPE" init_value "
            new MediaType(I_NA_10X15_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 10 x 15 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2947970 // NA_10X15_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948098 // NA_10X14_ENVELOPE (<unidirectional association>)
	  relation 2948098 --->
	    a role_name "NA_10X14_ENVELOPE" init_value "
            new MediaType(I_NA_10X14_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 10 x 14 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948098 // NA_10X14_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948226 // NA_10X13_ENVELOPE (<unidirectional association>)
	  relation 2948226 --->
	    a role_name "NA_10X13_ENVELOPE" init_value "
            new MediaType(I_NA_10X13_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 10 x 13 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948226 // NA_10X13_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948354 // NA_9X12_ENVELOPE (<unidirectional association>)
	  relation 2948354 --->
	    a role_name "NA_9X12_ENVELOPE" init_value "
            new MediaType(I_NA_9X12_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 9 x 12 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948354 // NA_9X12_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948482 // NA_9X11_ENVELOPE (<unidirectional association>)
	  relation 2948482 --->
	    a role_name "NA_9X11_ENVELOPE" init_value "
            new MediaType(I_NA_9X11_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 9 x 11 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948482 // NA_9X11_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948610 // NA_7X9_ENVELOPE (<unidirectional association>)
	  relation 2948610 --->
	    a role_name "NA_7X9_ENVELOPE" init_value "
            new MediaType(I_NA_7X9_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 7 x 9 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948610 // NA_7X9_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948738 // NA_6X9_ENVELOPE (<unidirectional association>)
	  relation 2948738 --->
	    a role_name "NA_6X9_ENVELOPE" init_value "
            new MediaType(I_NA_6X9_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American 6 x 9 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948738 // NA_6X9_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948866 // NA_NUMBER_9_ENVELOPE (<unidirectional association>)
	  relation 2948866 --->
	    a role_name "NA_NUMBER_9_ENVELOPE" init_value "
            new MediaType(I_NA_NUMBER_9_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American #9 Business Envelope,
3 7/8 x 8 7/8 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948866 // NA_NUMBER_9_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2948994 // NA_NUMBER_10_ENVELOPE (<unidirectional association>)
	  relation 2948994 --->
	    a role_name "NA_NUMBER_10_ENVELOPE" init_value "
            new MediaType(I_NA_NUMBER_10_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American #10 Business Envelope,
4 1/8 x 9 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2948994 // NA_NUMBER_10_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949122 // NA_NUMBER_11_ENVELOPE (<unidirectional association>)
	  relation 2949122 --->
	    a role_name "NA_NUMBER_11_ENVELOPE" init_value "
            new MediaType(I_NA_NUMBER_11_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American #11 Business Envelope,
4 1/2 x 10 3/8 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949122 // NA_NUMBER_11_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949250 // NA_NUMBER_12_ENVELOPE (<unidirectional association>)
	  relation 2949250 --->
	    a role_name "NA_NUMBER_12_ENVELOPE" init_value "
            new MediaType(I_NA_NUMBER_12_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American #12 Business Envelope,
4 3/4 x 11 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949250 // NA_NUMBER_12_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949378 // NA_NUMBER_14_ENVELOPE (<unidirectional association>)
	  relation 2949378 --->
	    a role_name "NA_NUMBER_14_ENVELOPE" init_value "
            new MediaType(I_NA_NUMBER_14_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for North American #14 Business Envelope,
5 x 11 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949378 // NA_NUMBER_14_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949506 // INVITE_ENVELOPE (<unidirectional association>)
	  relation 2949506 --->
	    a role_name "INVITE_ENVELOPE" init_value "
            new MediaType(I_INVITE_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for Invitation Envelope, 220 x 220 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949506 // INVITE_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949634 // ITALY_ENVELOPE (<unidirectional association>)
	  relation 2949634 --->
	    a role_name "ITALY_ENVELOPE" init_value "
            new MediaType(I_ITALY_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for Italy Envelope, 110 x 230 mm.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949634 // ITALY_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949762 // MONARCH_ENVELOPE (<unidirectional association>)
	  relation 2949762 --->
	    a role_name "MONARCH_ENVELOPE" init_value "
            new MediaType(I_MONARCH_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for Monarch Envelope, 3 7/8 x 7 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949762 // MONARCH_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2949890 // PERSONAL_ENVELOPE (<unidirectional association>)
	  relation 2949890 --->
	    a role_name "PERSONAL_ENVELOPE" init_value "
            new MediaType(I_PERSONAL_ENVELOPE)" class_relation const_relation public
	      comment "
The MediaType instance for 6 3/4 envelope, 3 5/8 x 6 1/2 in.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2949890 // PERSONAL_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950018 // A0 (<unidirectional association>)
	  relation 2950018 --->
	    a role_name "A0" init_value " ISO_A0" class_relation const_relation public
	      comment "
An alias for ISO_A0.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950018 // A0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950146 // A1 (<unidirectional association>)
	  relation 2950146 --->
	    a role_name "A1" init_value " ISO_A1" class_relation const_relation public
	      comment "
An alias for ISO_A1.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950146 // A1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950274 // A2 (<unidirectional association>)
	  relation 2950274 --->
	    a role_name "A2" init_value " ISO_A2" class_relation const_relation public
	      comment "
An alias for ISO_A2.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950274 // A2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950402 // A3 (<unidirectional association>)
	  relation 2950402 --->
	    a role_name "A3" init_value " ISO_A3" class_relation const_relation public
	      comment "
An alias for ISO_A3.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950402 // A3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950530 // A4 (<unidirectional association>)
	  relation 2950530 --->
	    a role_name "A4" init_value " ISO_A4" class_relation const_relation public
	      comment "
An alias for ISO_A4.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950530 // A4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950658 // A5 (<unidirectional association>)
	  relation 2950658 --->
	    a role_name "A5" init_value " ISO_A5" class_relation const_relation public
	      comment "
An alias for ISO_A5.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950658 // A5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950786 // A6 (<unidirectional association>)
	  relation 2950786 --->
	    a role_name "A6" init_value " ISO_A6" class_relation const_relation public
	      comment "
An alias for ISO_A6.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950786 // A6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2950914 // A7 (<unidirectional association>)
	  relation 2950914 --->
	    a role_name "A7" init_value " ISO_A7" class_relation const_relation public
	      comment "
An alias for ISO_A7.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2950914 // A7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951042 // A8 (<unidirectional association>)
	  relation 2951042 --->
	    a role_name "A8" init_value " ISO_A8" class_relation const_relation public
	      comment "
An alias for ISO_A8.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951042 // A8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951170 // A9 (<unidirectional association>)
	  relation 2951170 --->
	    a role_name "A9" init_value " ISO_A9" class_relation const_relation public
	      comment "
An alias for ISO_A9.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951170 // A9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951298 // A10 (<unidirectional association>)
	  relation 2951298 --->
	    a role_name "A10" init_value " ISO_A10" class_relation const_relation public
	      comment "
An alias for ISO_A10.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951298 // A10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951426 // B0 (<unidirectional association>)
	  relation 2951426 --->
	    a role_name "B0" init_value " ISO_B0" class_relation const_relation public
	      comment "
An alias for ISO_B0.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951426 // B0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951554 // B1 (<unidirectional association>)
	  relation 2951554 --->
	    a role_name "B1" init_value " ISO_B1" class_relation const_relation public
	      comment "
An alias for ISO_B1.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951554 // B1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951682 // B2 (<unidirectional association>)
	  relation 2951682 --->
	    a role_name "B2" init_value " ISO_B2" class_relation const_relation public
	      comment "
An alias for ISO_B2.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951682 // B2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951810 // B3 (<unidirectional association>)
	  relation 2951810 --->
	    a role_name "B3" init_value " ISO_B3" class_relation const_relation public
	      comment "
An alias for ISO_B3.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951810 // B3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2951938 // B4 (<unidirectional association>)
	  relation 2951938 --->
	    a role_name "B4" init_value " ISO_B4" class_relation const_relation public
	      comment "
An alias for ISO_B4.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2951938 // B4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952066 // ISO_B4_ENVELOPE (<unidirectional association>)
	  relation 2952066 --->
	    a role_name "ISO_B4_ENVELOPE" init_value " ISO_B4" class_relation const_relation public
	      comment "
An alias for ISO_B4.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952066 // ISO_B4_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952194 // B5 (<unidirectional association>)
	  relation 2952194 --->
	    a role_name "B5" init_value " ISO_B5" class_relation const_relation public
	      comment "
An alias for ISO_B5.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952194 // B5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952322 // ISO_B5_ENVELOPE (<unidirectional association>)
	  relation 2952322 --->
	    a role_name "ISO_B5_ENVELOPE" init_value " ISO_B5" class_relation const_relation public
	      comment "
An alias for ISO_B5.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952322 // ISO_B5_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952450 // B6 (<unidirectional association>)
	  relation 2952450 --->
	    a role_name "B6" init_value " ISO_B6" class_relation const_relation public
	      comment "
An alias for ISO_B6.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952450 // B6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952578 // B7 (<unidirectional association>)
	  relation 2952578 --->
	    a role_name "B7" init_value " ISO_B7" class_relation const_relation public
	      comment "
An alias for ISO_B7.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952578 // B7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952706 // B8 (<unidirectional association>)
	  relation 2952706 --->
	    a role_name "B8" init_value " ISO_B8" class_relation const_relation public
	      comment "
An alias for ISO_B8.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952706 // B8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952834 // B9 (<unidirectional association>)
	  relation 2952834 --->
	    a role_name "B9" init_value " ISO_B9" class_relation const_relation public
	      comment "
An alias for ISO_B9.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952834 // B9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2952962 // B10 (<unidirectional association>)
	  relation 2952962 --->
	    a role_name "B10" init_value " ISO_B10" class_relation const_relation public
	      comment "
An alias for ISO_B10.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2952962 // B10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953090 // C0 (<unidirectional association>)
	  relation 2953090 --->
	    a role_name "C0" init_value " ISO_C0" class_relation const_relation public
	      comment "
An alias for ISO_C0.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953090 // C0 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953218 // ISO_C0_ENVELOPE (<unidirectional association>)
	  relation 2953218 --->
	    a role_name "ISO_C0_ENVELOPE" init_value " ISO_C0" class_relation const_relation public
	      comment "
An alias for ISO_C0.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953218 // ISO_C0_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953346 // C1 (<unidirectional association>)
	  relation 2953346 --->
	    a role_name "C1" init_value " ISO_C1" class_relation const_relation public
	      comment "
An alias for ISO_C1.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953346 // C1 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953474 // ISO_C1_ENVELOPE (<unidirectional association>)
	  relation 2953474 --->
	    a role_name "ISO_C1_ENVELOPE" init_value " ISO_C1" class_relation const_relation public
	      comment "
An alias for ISO_C1.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953474 // ISO_C1_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953602 // C2 (<unidirectional association>)
	  relation 2953602 --->
	    a role_name "C2" init_value " ISO_C2" class_relation const_relation public
	      comment "
An alias for ISO_C2.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953602 // C2 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953730 // ISO_C2_ENVELOPE (<unidirectional association>)
	  relation 2953730 --->
	    a role_name "ISO_C2_ENVELOPE" init_value " ISO_C2" class_relation const_relation public
	      comment "
An alias for ISO_C2.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953730 // ISO_C2_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953858 // C3 (<unidirectional association>)
	  relation 2953858 --->
	    a role_name "C3" init_value " ISO_C3" class_relation const_relation public
	      comment "
An alias for ISO_C3.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953858 // C3 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2953986 // ISO_C3_ENVELOPE (<unidirectional association>)
	  relation 2953986 --->
	    a role_name "ISO_C3_ENVELOPE" init_value " ISO_C3" class_relation const_relation public
	      comment "
An alias for ISO_C3.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2953986 // ISO_C3_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954114 // C4 (<unidirectional association>)
	  relation 2954114 --->
	    a role_name "C4" init_value " ISO_C4" class_relation const_relation public
	      comment "
An alias for ISO_C4.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954114 // C4 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954242 // ISO_C4_ENVELOPE (<unidirectional association>)
	  relation 2954242 --->
	    a role_name "ISO_C4_ENVELOPE" init_value " ISO_C4" class_relation const_relation public
	      comment "
An alias for ISO_C4.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954242 // ISO_C4_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954370 // C5 (<unidirectional association>)
	  relation 2954370 --->
	    a role_name "C5" init_value " ISO_C5" class_relation const_relation public
	      comment "
An alias for ISO_C5.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954370 // C5 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954498 // ISO_C5_ENVELOPE (<unidirectional association>)
	  relation 2954498 --->
	    a role_name "ISO_C5_ENVELOPE" init_value " ISO_C5" class_relation const_relation public
	      comment "
An alias for ISO_C5.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954498 // ISO_C5_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954626 // C6 (<unidirectional association>)
	  relation 2954626 --->
	    a role_name "C6" init_value " ISO_C6" class_relation const_relation public
	      comment "
An alias for ISO_C6.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954626 // C6 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954754 // ISO_C6_ENVELOPE (<unidirectional association>)
	  relation 2954754 --->
	    a role_name "ISO_C6_ENVELOPE" init_value " ISO_C6" class_relation const_relation public
	      comment "
An alias for ISO_C6.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954754 // ISO_C6_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2954882 // C7 (<unidirectional association>)
	  relation 2954882 --->
	    a role_name "C7" init_value " ISO_C7" class_relation const_relation public
	      comment "
An alias for ISO_C7.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2954882 // C7 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955010 // ISO_C7_ENVELOPE (<unidirectional association>)
	  relation 2955010 --->
	    a role_name "ISO_C7_ENVELOPE" init_value " ISO_C7" class_relation const_relation public
	      comment "
An alias for ISO_C7.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955010 // ISO_C7_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955138 // C8 (<unidirectional association>)
	  relation 2955138 --->
	    a role_name "C8" init_value " ISO_C8" class_relation const_relation public
	      comment "
An alias for ISO_C8.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955138 // C8 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955266 // ISO_C8_ENVELOPE (<unidirectional association>)
	  relation 2955266 --->
	    a role_name "ISO_C8_ENVELOPE" init_value " ISO_C8" class_relation const_relation public
	      comment "
An alias for ISO_C8.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955266 // ISO_C8_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955394 // C9 (<unidirectional association>)
	  relation 2955394 --->
	    a role_name "C9" init_value " ISO_C9" class_relation const_relation public
	      comment "
An alias for ISO_C9.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955394 // C9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955522 // ISO_C9_ENVELOPE (<unidirectional association>)
	  relation 2955522 --->
	    a role_name "ISO_C9_ENVELOPE" init_value " ISO_C9" class_relation const_relation public
	      comment "
An alias for ISO_C9.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955522 // ISO_C9_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955650 // C10 (<unidirectional association>)
	  relation 2955650 --->
	    a role_name "C10" init_value " ISO_C10" class_relation const_relation public
	      comment "
An alias for ISO_C10.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955650 // C10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955778 // ISO_C10_ENVELOPE (<unidirectional association>)
	  relation 2955778 --->
	    a role_name "ISO_C10_ENVELOPE" init_value " ISO_C10" class_relation const_relation public
	      comment "
An alias for ISO_C10.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955778 // ISO_C10_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2955906 // ISO_DESIGNATED_LONG_ENVELOPE (<unidirectional association>)
	  relation 2955906 --->
	    a role_name "ISO_DESIGNATED_LONG_ENVELOPE" init_value "
                ISO_DESIGNATED_LONG" class_relation const_relation public
	      comment "
An alias for ISO_DESIGNATED_LONG.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2955906 // ISO_DESIGNATED_LONG_ENVELOPE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956034 // STATEMENT (<unidirectional association>)
	  relation 2956034 --->
	    a role_name "STATEMENT" init_value " INVOICE" class_relation const_relation public
	      comment "
An alias for INVOICE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956034 // STATEMENT (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956162 // TABLOID (<unidirectional association>)
	  relation 2956162 --->
	    a role_name "TABLOID" init_value " LEDGER" class_relation const_relation public
	      comment "
An alias for LEDGER.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956162 // TABLOID (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956290 // LETTER (<unidirectional association>)
	  relation 2956290 --->
	    a role_name "LETTER" init_value " NA_LETTER" class_relation const_relation public
	      comment "
An alias for NA_LETTER.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956290 // LETTER (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956418 // NOTE (<unidirectional association>)
	  relation 2956418 --->
	    a role_name "NOTE" init_value " NA_LETTER" class_relation const_relation public
	      comment "
An alias for NA_LETTER.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956418 // NOTE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956546 // LEGAL (<unidirectional association>)
	  relation 2956546 --->
	    a role_name "LEGAL" init_value " NA_LEGAL" class_relation const_relation public
	      comment "
An alias for NA_LEGAL.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956546 // LEGAL (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956674 // ENV_10X15 (<unidirectional association>)
	  relation 2956674 --->
	    a role_name "ENV_10X15" init_value " NA_10X15_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_10X15_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956674 // ENV_10X15 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956802 // ENV_10X14 (<unidirectional association>)
	  relation 2956802 --->
	    a role_name "ENV_10X14" init_value " NA_10X14_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_10X14_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956802 // ENV_10X14 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2956930 // ENV_10X13 (<unidirectional association>)
	  relation 2956930 --->
	    a role_name "ENV_10X13" init_value " NA_10X13_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_10X13_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2956930 // ENV_10X13 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957058 // ENV_9X12 (<unidirectional association>)
	  relation 2957058 --->
	    a role_name "ENV_9X12" init_value " NA_9X12_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_9X12_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957058 // ENV_9X12 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957186 // ENV_9X11 (<unidirectional association>)
	  relation 2957186 --->
	    a role_name "ENV_9X11" init_value " NA_9X11_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_9X11_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957186 // ENV_9X11 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957314 // ENV_7X9 (<unidirectional association>)
	  relation 2957314 --->
	    a role_name "ENV_7X9" init_value " NA_7X9_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_7X9_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957314 // ENV_7X9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957442 // ENV_6X9 (<unidirectional association>)
	  relation 2957442 --->
	    a role_name "ENV_6X9" init_value " NA_6X9_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_6X9_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957442 // ENV_6X9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957570 // ENV_9 (<unidirectional association>)
	  relation 2957570 --->
	    a role_name "ENV_9" init_value " NA_NUMBER_9_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_NUMBER_9_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957570 // ENV_9 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957698 // ENV_10 (<unidirectional association>)
	  relation 2957698 --->
	    a role_name "ENV_10" init_value " NA_NUMBER_10_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_NUMBER_10_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957698 // ENV_10 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957826 // ENV_11 (<unidirectional association>)
	  relation 2957826 --->
	    a role_name "ENV_11" init_value " NA_NUMBER_11_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_NUMBER_11_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957826 // ENV_11 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2957954 // ENV_12 (<unidirectional association>)
	  relation 2957954 --->
	    a role_name "ENV_12" init_value " NA_NUMBER_12_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_NUMBER_12_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2957954 // ENV_12 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958082 // ENV_14 (<unidirectional association>)
	  relation 2958082 --->
	    a role_name "ENV_14" init_value " NA_NUMBER_14_ENVELOPE" class_relation const_relation public
	      comment "
An alias for NA_NUMBER_14_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958082 // ENV_14 (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958210 // ENV_INVITE (<unidirectional association>)
	  relation 2958210 --->
	    a role_name "ENV_INVITE" init_value " INVITE_ENVELOPE" class_relation const_relation public
	      comment "
An alias for INVITE_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958210 // ENV_INVITE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958338 // ENV_ITALY (<unidirectional association>)
	  relation 2958338 --->
	    a role_name "ENV_ITALY" init_value " ITALY_ENVELOPE" class_relation const_relation public
	      comment "
An alias for ITALY_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958338 // ENV_ITALY (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958466 // ENV_MONARCH (<unidirectional association>)
	  relation 2958466 --->
	    a role_name "ENV_MONARCH" init_value " MONARCH_ENVELOPE" class_relation const_relation public
	      comment "
An alias for MONARCH_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958466 // ENV_MONARCH (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958594 // ENV_PERSONAL (<unidirectional association>)
	  relation 2958594 --->
	    a role_name "ENV_PERSONAL" init_value " PERSONAL_ENVELOPE" class_relation const_relation public
	      comment "
An alias for PERSONAL_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958594 // ENV_PERSONAL (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958722 // INVITE (<unidirectional association>)
	  relation 2958722 --->
	    a role_name "INVITE" init_value " INVITE_ENVELOPE" class_relation const_relation public
	      comment "
An alias for INVITE_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958722 // INVITE (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958850 // ITALY (<unidirectional association>)
	  relation 2958850 --->
	    a role_name "ITALY" init_value " ITALY_ENVELOPE" class_relation const_relation public
	      comment "
An alias for ITALY_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958850 // ITALY (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2958978 // MONARCH (<unidirectional association>)
	  relation 2958978 --->
	    a role_name "MONARCH" init_value " MONARCH_ENVELOPE" class_relation const_relation public
	      comment "
An alias for MONARCH_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2958978 // MONARCH (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	classrelation 2959106 // PERSONAL (<unidirectional association>)
	  relation 2959106 --->
	    a role_name "PERSONAL" init_value " PERSONAL_ENVELOPE" class_relation const_relation public
	      comment "
An alias for PERSONAL_ENVELOPE.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2959106 // PERSONAL (<unidirectional association>)
	    b parent class_ref 873346 // MediaType
	end

	operation 6291970 "MediaType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 873474 "OrientationRequestedType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2959234 // <generalisation>
	  relation 2959234 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2959234 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1415298 "I_PORTRAIT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1415426 "I_LANDSCAPE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2959362 // NAMES (<unidirectional association>)
	  relation 2959362 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"portrait\", \"landscape\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2959362 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2959490 // PORTRAIT (<unidirectional association>)
	  relation 2959490 --->
	    a role_name "PORTRAIT" init_value "
            new OrientationRequestedType(I_PORTRAIT)" class_relation const_relation public
	      comment "
The OrientationRequestedType instance to use for specifying a
portrait orientation.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2959490 // PORTRAIT (<unidirectional association>)
	    b parent class_ref 873474 // OrientationRequestedType
	end

	classrelation 2959618 // LANDSCAPE (<unidirectional association>)
	  relation 2959618 --->
	    a role_name "LANDSCAPE" init_value "
            new OrientationRequestedType(I_LANDSCAPE)" class_relation const_relation public
	      comment "
The OrientationRequestedType instance to use for specifying a
landscape orientation.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2959618 // LANDSCAPE (<unidirectional association>)
	    b parent class_ref 873474 // OrientationRequestedType
	end

	operation 6292098 "OrientationRequestedType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 873602 "OriginType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2959746 // <generalisation>
	  relation 2959746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2959746 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1415554 "I_PHYSICAL"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1415682 "I_PRINTABLE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2959874 // NAMES (<unidirectional association>)
	  relation 2959874 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"physical\", \"printable\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2959874 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2960002 // PHYSICAL (<unidirectional association>)
	  relation 2960002 --->
	    a role_name "PHYSICAL" init_value " new OriginType(I_PHYSICAL)" class_relation const_relation public
	      comment "
The OriginType instance to use for specifying a physical origin.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2960002 // PHYSICAL (<unidirectional association>)
	    b parent class_ref 873602 // OriginType
	end

	classrelation 2960130 // PRINTABLE (<unidirectional association>)
	  relation 2960130 --->
	    a role_name "PRINTABLE" init_value " new OriginType(I_PRINTABLE)" class_relation const_relation public
	      comment "
The OriginType instance to use for specifying a printable origin.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2960130 // PRINTABLE (<unidirectional association>)
	    b parent class_ref 873602 // OriginType
	end

	operation 6292226 "OriginType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 873730 "PrintQualityType"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2960258 // <generalisation>
	  relation 2960258 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2960258 // <generalisation>
	    b parent class_ref 856706 // AttributeValue
	end

	attribute 1415810 "I_HIGH"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1415938 "I_NORMAL"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1416066 "I_DRAFT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2960386 // NAMES (<unidirectional association>)
	  relation 2960386 --->
	    a role_name "NAMES" multiplicity "[]" init_value " {
            \"high\", \"normal\", \"draft\"
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2960386 // NAMES (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 2960514 // HIGH (<unidirectional association>)
	  relation 2960514 --->
	    a role_name "HIGH" init_value "
            new PrintQualityType(I_HIGH)" class_relation const_relation public
	      comment "
The PrintQualityType instance to use for specifying a high print
quality.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2960514 // HIGH (<unidirectional association>)
	    b parent class_ref 873730 // PrintQualityType
	end

	classrelation 2960642 // NORMAL (<unidirectional association>)
	  relation 2960642 --->
	    a role_name "NORMAL" init_value "
            new PrintQualityType(I_NORMAL)" class_relation const_relation public
	      comment "
The PrintQualityType instance to use for specifying a normal print
quality.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2960642 // NORMAL (<unidirectional association>)
	    b parent class_ref 873730 // PrintQualityType
	end

	classrelation 2960770 // DRAFT (<unidirectional association>)
	  relation 2960770 --->
	    a role_name "DRAFT" init_value "
            new PrintQualityType(I_DRAFT)" class_relation const_relation public
	      comment "
The PrintQualityType instance to use for specifying a draft print
quality.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2960770 // DRAFT (<unidirectional association>)
	    b parent class_ref 873730 // PrintQualityType
	end

	operation 6292354 "PrintQualityType"
	  private explicit_return_type ""
	  nparams 1
	    param in name "type" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2960898 // color (<unidirectional association>)
	relation 2960898 --->
	  a role_name "color" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2960898 // color (<unidirectional association>)
	  b parent class_ref 873218 // ColorType
      end

      classrelation 2961026 // media (<unidirectional association>)
	relation 2961026 --->
	  a role_name "media" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2961026 // media (<unidirectional association>)
	  b parent class_ref 873346 // MediaType
      end

      classrelation 2961154 // orientationRequested (<unidirectional association>)
	relation 2961154 --->
	  a role_name "orientationRequested" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2961154 // orientationRequested (<unidirectional association>)
	  b parent class_ref 873474 // OrientationRequestedType
      end

      classrelation 2961282 // origin (<unidirectional association>)
	relation 2961282 --->
	  a role_name "origin" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2961282 // origin (<unidirectional association>)
	  b parent class_ref 873602 // OriginType
      end

      classrelation 2961410 // printQuality (<unidirectional association>)
	relation 2961410 --->
	  a role_name "printQuality" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2961410 // printQuality (<unidirectional association>)
	  b parent class_ref 873730 // PrintQualityType
      end

      attribute 1416194 "printerResolution"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6292482 "PageAttributes"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PageAttributes instance with default values for every
attribute.
"
      end

      operation 6292610 "PageAttributes"
	public explicit_return_type ""
	nparams 1
	  param inout name "obj" type class_ref 873090 // PageAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PageAttributes instance which is a copy of the supplied
PageAttributes.

@param   obj the PageAttributes to copy.
"
      end

      operation 6292738 "PageAttributes"
	public explicit_return_type ""
	nparams 6
	  param inout name "color" type class_ref 873218 // ColorType
	  param inout name "media" type class_ref 873346 // MediaType
	  param inout name "orientationRequested" type class_ref 873474 // OrientationRequestedType
	  param inout name "origin" type class_ref 873602 // OriginType
	  param inout name "printQuality" type class_ref 873730 // PrintQualityType
	  param inout name "printerResolution" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PageAttributes instance with the specified values for
every attribute.

@param   color ColorType.COLOR or ColorType.MONOCHROME.
@param   media one of the constant fields of the MediaType class.
@param   orientationRequested OrientationRequestedType.PORTRAIT or
         OrientationRequestedType.LANDSCAPE.
@param   origin OriginType.PHYSICAL or OriginType.PRINTABLE
@param   printQuality PrintQualityType.DRAFT, PrintQualityType.NORMAL,
         or PrintQualityType.HIGH
@param   printerResolution an integer array of 3 elements. The first
         element must be greater than 0. The second element must be
         must be greater than 0. The third element must be either
         <code>3</code> or <code>4</code>.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6292866 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a copy of this PageAttributes.

@return  the newly created copy. It is safe to cast this Object into
         a PageAttributes.
"
      end

      operation 6292994 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 873090 // PageAttributes
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all of the attributes of this PageAttributes to the same values as
the attributes of obj.

@param   obj the PageAttributes to copy.
"
      end

      operation 6293122 "getColor"
	public return_type class_ref 873218 // ColorType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether pages using these attributes will be rendered in
color or monochrome. This attribute is updated to the value chosen
by the user.

@return  ColorType.COLOR or ColorType.MONOCHROME.
"
      end

      operation 6293250 "setColor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "color" type class_ref 873218 // ColorType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether pages using these attributes will be rendered in
color or monochrome. Not specifying this attribute is equivalent to
specifying ColorType.MONOCHROME.

@param   color ColorType.COLOR or ColorType.MONOCHROME.
@throws  IllegalArgumentException if color is null.
"
      end

      operation 6293378 "getMedia"
	public return_type class_ref 873346 // MediaType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the paper size for pages using these attributes. This
attribute is updated to the value chosen by the user.

@return  one of the constant fields of the MediaType class.
"
      end

      operation 6293506 "setMedia"
	public explicit_return_type "void"
	nparams 1
	  param inout name "media" type class_ref 873346 // MediaType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the desired paper size for pages using these attributes. The
actual paper size will be determined by the limitations of the target
printer. If an exact match cannot be found, an implementation will
choose the closest possible match. Not specifying this attribute is
equivalent to specifying the default size for the default locale. The
default size for locales in the United States and Canada is
MediaType.NA_LETTER. The default size for all other locales is
MediaType.ISO_A4.

@param   media one of the constant fields of the MediaType class.
@throws  IllegalArgumentException if media is null.
"
      end

      operation 6293634 "setMediaToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the paper size for pages using these attributes to the default
size for the default locale. The default size for locales in the
United States and Canada is MediaType.NA_LETTER. The default size for
all other locales is MediaType.ISO_A4.
"
      end

      operation 6293762 "getOrientationRequested"
	public return_type class_ref 873474 // OrientationRequestedType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the print orientation for pages using these attributes. This
attribute is updated to the value chosen by the user.

@return  OrientationRequestedType.PORTRAIT or
         OrientationRequestedType.LANDSCAPE.
"
      end

      operation 6293890 "setOrientationRequested"
	public explicit_return_type "void"
	nparams 1
	  param inout name "orientationRequested" type class_ref 873474 // OrientationRequestedType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the print orientation for pages using these attributes. Not
specifying the property is equivalent to specifying
OrientationRequestedType.PORTRAIT.

@param   orientationRequested OrientationRequestedType.PORTRAIT or
         OrientationRequestedType.LANDSCAPE.
@throws  IllegalArgumentException if orientationRequested is null.
"
      end

      operation 6294018 "setOrientationRequested"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientationRequested" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the print orientation for pages using these attributes.
Specifying <code>3</code> denotes portrait. Specifying <code>4</code>
denotes landscape. Specifying any other value will generate an
IllegalArgumentException. Not specifying the property is equivalent
to calling setOrientationRequested(OrientationRequestedType.PORTRAIT).

@param   orientationRequested <code>3</code> or <code>4</code>
@throws  IllegalArgumentException if orientationRequested is not
         <code>3</code> or <code>4</code>
"
      end

      operation 6294146 "setOrientationRequestedToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the print orientation for pages using these attributes to the
default. The default orientation is portrait.
"
      end

      operation 6294274 "getOrigin"
	public return_type class_ref 873602 // OriginType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether drawing at (0, 0) to pages using these attributes
draws at the upper-left corner of the physical page, or at the
upper-left corner of the printable area. (Note that these locations
could be equivalent.) This attribute cannot be modified by,
and is not subject to any limitations of, the implementation or the
target printer.

@return  OriginType.PHYSICAL or OriginType.PRINTABLE
"
      end

      operation 6294402 "setOrigin"
	public explicit_return_type "void"
	nparams 1
	  param inout name "origin" type class_ref 873602 // OriginType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies whether drawing at (0, 0) to pages using these attributes
draws at the upper-left corner of the physical page, or at the
upper-left corner of the printable area. (Note that these locations
could be equivalent.) Not specifying the property is equivalent to
specifying OriginType.PHYSICAL.

@param   origin OriginType.PHYSICAL or OriginType.PRINTABLE
@throws  IllegalArgumentException if origin is null.
"
      end

      operation 6294530 "getPrintQuality"
	public return_type class_ref 873730 // PrintQualityType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the print quality for pages using these attributes. This
attribute is updated to the value chosen by the user.

@return  PrintQualityType.DRAFT, PrintQualityType.NORMAL, or
         PrintQualityType.HIGH
"
      end

      operation 6294658 "setPrintQuality"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printQuality" type class_ref 873730 // PrintQualityType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the print quality for pages using these attributes. Not
specifying the property is equivalent to specifying
PrintQualityType.NORMAL.

@param   printQuality PrintQualityType.DRAFT, PrintQualityType.NORMAL,
         or PrintQualityType.HIGH
@throws  IllegalArgumentException if printQuality is null.
"
      end

      operation 6294786 "setPrintQuality"
	public explicit_return_type "void"
	nparams 1
	  param in name "printQuality" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the print quality for pages using these attributes.
Specifying <code>3</code> denotes draft. Specifying <code>4</code>
denotes normal. Specifying <code>5</code> denotes high. Specifying
any other value will generate an IllegalArgumentException. Not
specifying the property is equivalent to calling
setPrintQuality(PrintQualityType.NORMAL).

@param   printQuality <code>3</code>, <code>4</code>, or <code>5</code>
@throws  IllegalArgumentException if printQuality is not <code>3
         </code>, <code>4</code>, or <code>5</code>
"
      end

      operation 6294914 "setPrintQualityToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the print quality for pages using these attributes to the default.
The default print quality is normal.
"
      end

      operation 6295042 "getPrinterResolution"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the print resolution for pages using these attributes.
Index 0 of the array specifies the cross feed direction resolution
(typically the horizontal resolution). Index 1 of the array specifies
the feed direction resolution (typically the vertical resolution).
Index 2 of the array specifies whether the resolutions are in dots per
inch or dots per centimeter. <code>3</code> denotes dots per inch.
<code>4</code> denotes dots per centimeter.

@return  an integer array of 3 elements. The first
         element must be greater than 0. The second element must be
         must be greater than 0. The third element must be either
         <code>3</code> or <code>4</code>.
"
      end

      operation 6295170 "setPrinterResolution"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printerResolution" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the desired print resolution for pages using these attributes.
The actual resolution will be determined by the limitations of the
implementation and the target printer. Index 0 of the array specifies
the cross feed direction resolution (typically the horizontal
resolution). Index 1 of the array specifies the feed direction
resolution (typically the vertical resolution). Index 2 of the array
specifies whether the resolutions are in dots per inch or dots per
centimeter. <code>3</code> denotes dots per inch. <code>4</code>
denotes dots per centimeter. Note that the 1.1 printing implementation
(Toolkit.getPrintJob) requires that the feed and cross feed resolutions
be the same. Not specifying the property is equivalent to calling
setPrinterResolution(72).

@param   printerResolution an integer array of 3 elements. The first
         element must be greater than 0. The second element must be
         must be greater than 0. The third element must be either
         <code>3</code> or <code>4</code>.
@throws  IllegalArgumentException if one or more of the above
         conditions is violated.
"
      end

      operation 6295298 "setPrinterResolution"
	public explicit_return_type "void"
	nparams 1
	  param in name "printerResolution" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the desired cross feed and feed print resolutions in dots per
inch for pages using these attributes. The same value is used for both
resolutions. The actual resolutions will be determined by the
limitations of the implementation and the target printer. Not
specifying the property is equivalent to specifying <code>72</code>.

@param   printerResolution an integer greater than 0.
@throws  IllegalArgumentException if printerResolution is less than or
         equal to 0.
"
      end

      operation 6295426 "setPrinterResolutionToDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the printer resolution for pages using these attributes to the
default. The default is 72 dpi for both the feed and cross feed
resolutions.
"
      end

      operation 6295554 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether two PageAttributes are equal to each other.
<p>
Two PageAttributes are equal if and only if each of their attributes are
equal. Attributes of enumeration type are equal if and only if the
fields refer to the same unique enumeration object. This means that
an aliased media is equal to its underlying unique media. Printer
resolutions are equal if and only if the feed resolution, cross feed
resolution, and units are equal.

@param   obj the object whose equality will be checked.
@return  whether obj is equal to this PageAttribute according to the
         above criteria.
"
      end

      operation 6295682 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this PageAttributes.

@return  the hash code.
"
      end

      operation 6295810 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this PageAttributes.

@return  the string representation.
"
      end
    end

    class 874242 "PrintGraphics"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class which provides a print graphics context for a page.

@author      Amy Fowler
"
      operation 6306178 "getPrintJob"
	public return_type class_ref 874370 // PrintJob
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the PrintJob object from which this PrintGraphics
object originated.
"
      end
    end

    class 874370 "PrintJob"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class which initiates and executes a print job.
It provides access to a print graphics object which renders
to an appropriate print device.

@see Toolkit#getPrintJob

@author      Amy Fowler
"
      operation 6306306 "getGraphics"
	abstract public return_type class_ref 343682 // Graphics
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a Graphics object that will draw to the next page.
The page is sent to the printer when the graphics
object is disposed.  This graphics object will also implement
the PrintGraphics interface.
@see PrintGraphics
"
      end

      operation 6306434 "getPageDimension"
	abstract public return_type class_ref 316802 // Dimension
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the dimensions of the page in pixels.
The resolution of the page is chosen so that it
is similar to the screen resolution.
"
      end

      operation 6306562 "getPageResolution"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resolution of the page in pixels per inch.
Note that this doesn't have to correspond to the physical
resolution of the printer.
"
      end

      operation 6306690 "lastPageFirst"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the last page will be printed first.
"
      end

      operation 6306818 "end"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ends the print job and does any necessary cleanup.
"
      end

      operation 6306946 "finalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ends this print job once it is no longer referenced.
@see #end
"
      end
    end

    class 874498 "RadialGradientPaintContext"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provides the actual implementation for the RadialGradientPaint.
This is where the pixel processing is done.  A RadialGradienPaint
only supports circular gradients, but it should be possible to scale
the circle to look approximately elliptical, by means of a
gradient transform passed into the RadialGradientPaint constructor.

@author Nicholas Talian, Vincent Hardy, Jim Graham, Jerry Evans
"
      classrelation 2964226 // <generalisation>
	relation 2964226 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2964226 // <generalisation>
	  b parent class_ref 871426 // MultipleGradientPaintContext
      end

      attribute 1418882 "isSimpleFocus"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True when (focus == center).  
"
      end

      attribute 1419010 "isNonCyclic"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True when (cycleMethod == NO_CYCLE). 
"
      end

      attribute 1419138 "radius"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Radius of the outermost circle defining the 100% gradient stop. 
"
      end

      attribute 1419266 "centerX"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Variables representing center and focus points. 
"
      end

      attribute 1419394 "centerY"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Variables representing center and focus points. 
"
      end

      attribute 1419522 "focusX"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Variables representing center and focus points. 
"
      end

      attribute 1419650 "focusY"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Variables representing center and focus points. 
"
      end

      attribute 1419778 "radiusSq"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Radius of the gradient circle squared. 
"
      end

      attribute 1419906 "constA"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant part of X, Y user space coordinates. 
"
      end

      attribute 1420034 "constB"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant part of X, Y user space coordinates. 
"
      end

      attribute 1420162 "gDeltaDelta"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constant second order delta for simple loop. 
"
      end

      attribute 1420290 "trivial"
	private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value represents the solution when focusX == X.  It is called
trivial because it is easier to calculate than the general case.

"
      end

      attribute 1420418 "SCALEBACK"
	class_attribute const_attribute private explicit_type "float"
	init_value " .99f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Amount for offset when clamping focus. 
"
      end

      operation 6308738 "RadialGradientPaintContext"
	package explicit_return_type ""
	nparams 15
	  param inout name "paint" type class_ref 455682 // RadialGradientPaint
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "t" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	  param in name "cx" explicit_type "float"
	  param in name "cy" explicit_type "float"
	  param in name "r" explicit_type "float"
	  param in name "fx" explicit_type "float"
	  param in name "fy" explicit_type "float"
	  param inout name "fractions" explicit_type "float"
	multiplicity "[]"
	  param inout name "colors" type class_ref 323458 // Color
	multiplicity "[]"
	  param inout name "cycleMethod" type class_ref 871042 // CycleMethod
	  param inout name "colorSpace" type class_ref 871170 // ColorSpaceType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11}[] ${p11}, ${t12}[] ${p12}, ${t13} ${p13}, ${t14} ${p14}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for RadialGradientPaintContext.

@param paint the {@code RadialGradientPaint} from which this context
             is created
@param cm the {@code ColorModel} that receives
          the {@code Paint} data (this is used only as a hint)
@param deviceBounds the device space bounding box of the
                    graphics primitive being rendered
@param userBounds the user space bounding box of the
                  graphics primitive being rendered
@param t the {@code AffineTransform} from user
         space into device space (gradientTransform should be
         concatenated with this)
@param hints the hints that the context object uses to choose
             between rendering alternatives
@param cx the center X coordinate in user space of the circle defining
          the gradient.  The last color of the gradient is mapped to
          the perimeter of this circle.
@param cy the center Y coordinate in user space of the circle defining
          the gradient.  The last color of the gradient is mapped to
          the perimeter of this circle.
@param r the radius of the circle defining the extents of the
         color gradient
@param fx the X coordinate in user space to which the first color
          is mapped
@param fy the Y coordinate in user space to which the first color
          is mapped
@param fractions the fractions specifying the gradient distribution
@param colors the gradient colors
@param cycleMethod either NO_CYCLE, REFLECT, or REPEAT
@param colorSpace which colorspace to use for interpolation,
                  either SRGB or LINEAR_RGB
"
      end

      operation 6308866 "fillRaster"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a Raster containing the colors generated for the graphics
operation.

@param x,y,w,h the area in device space for which colors are
generated.
"
      end

      operation 6308994 "simpleNonCyclicFillRaster"
	private explicit_return_type "void"
	nparams 7
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This code works in the simplest of cases, where the focus == center
point, the gradient is noncyclic, and the gradient lookup method is
fast (single array index, no conversion necessary).
"
      end

      attribute 1420546 "SQRT_LUT_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " (1 << 11)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " SQRT_LUT_SIZE must be a power of 2 for the test above to work.
"
      end

      attribute 1420674 "sqrtLut"
	class_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " new float[SQRT_LUT_SIZE+1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 151170 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = 0; i < sqrtLut.length; i++) {
            sqrtLut[i] = (float) Math.sqrt(i / ((float) SQRT_LUT_SIZE));
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6309122 "cyclicCircularGradientFillRaster"
	private explicit_return_type "void"
	nparams 7
	  param inout name "pixels" explicit_type "int"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "adjust" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fill the raster, cycling the gradient colors when a point falls outside
of the perimeter of the 100% stop circle.

This calculation first computes the intersection point of the line
from the focus through the current point in the raster, and the
perimeter of the gradient circle.

Then it determines the percentage distance of the current point along
that line (focus is 0%, perimeter is 100%).

Equation of a circle centered at (a,b) with radius r:
    (x-a)^2 + (y-b)^2 = r^2
Equation of a line with slope m and y-intercept b:
    y = mx + b
Replacing y in the circle equation and solving using the quadratic
formula produces the following set of equations.  Constant factors have
been extracted out of the inner loop.
"
      end
    end

    class 874626 "Robot"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to generate native system input events
for the purposes of test automation, self-running demos, and
other applications where control of the mouse and keyboard
is needed. The primary purpose of Robot is to facilitate
automated testing of Java platform implementations.
<p>
Using the class to generate input events differs from posting
events to the AWT event queue or AWT components in that the
events are generated in the platform's native input
queue. For example, <code>Robot.mouseMove</code> will actually move
the mouse cursor instead of just generating mouse move events.
<p>
Note that some platforms require special privileges or extensions
to access low-level input control. If the current platform configuration
does not allow input control, an <code>AWTException</code> will be thrown
when trying to construct Robot objects. For example, X-Window systems
will throw the exception if the XTEST 2.2 standard extension is not supported
(or not enabled) by the X server.
<p>
Applications that use Robot for purposes other than self-testing should
handle these error conditions gracefully.

@author      Robi Khan
@since       1.3
"
      attribute 1420930 "MAX_DELAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2970242 // peer (<unidirectional association>)
	relation 2970242 --->
	  a role_name "peer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2970242 // peer (<unidirectional association>)
	  b parent class_ref 874754 // RobotPeer
      end

      attribute 1421058 "isAutoWaitForIdle"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1421186 "autoDelay"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1421314 "LEGAL_BUTTON_MASK"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2970370 // screenCapCM (<unidirectional association>)
	relation 2970370 --->
	  a role_name "screenCapCM" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2970370 // screenCapCM (<unidirectional association>)
	  b parent class_ref 874882 // DirectColorModel
      end

      operation 6312578 "Robot"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Robot object in the coordinate system of the primary screen.
<p>

@throws  AWTException if the platform configuration does not allow
low-level input control.  This exception is always thrown when
GraphicsEnvironment.isHeadless() returns true
@throws  SecurityException if <code>createRobot</code> permission is not granted
@see     java.awt.GraphicsEnvironment#isHeadless
@see     SecurityManager#checkPermission
@see     AWTPermission
"
      end

      operation 6312706 "Robot"
	public explicit_return_type ""
	nparams 1
	  param inout name "screen" type class_ref 868994 // GraphicsDevice
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a Robot for the given screen device. Coordinates passed
to Robot method calls like mouseMove and createScreenCapture will
be interpreted as being in the same coordinate system as the
specified screen. Note that depending on the platform configuration,
multiple screens may either:
<ul>
<li>share the same coordinate system to form a combined virtual screen</li>
<li>use different coordinate systems to act as independent screens</li>
</ul>
This constructor is meant for the latter case.
<p>
If screen devices are reconfigured such that the coordinate system is
affected, the behavior of existing Robot objects is undefined.

@param screen    A screen GraphicsDevice indicating the coordinate
                 system the Robot will operate in.
@throws  AWTException if the platform configuration does not allow
low-level input control.  This exception is always thrown when
GraphicsEnvironment.isHeadless() returns true.
@throws  IllegalArgumentException if <code>screen</code> is not a screen
         GraphicsDevice.
@throws  SecurityException if <code>createRobot</code> permission is not granted
@see     java.awt.GraphicsEnvironment#isHeadless
@see     GraphicsDevice
@see     SecurityManager#checkPermission
@see     AWTPermission
"
      end

      operation 6312834 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "screen" type class_ref 868994 // GraphicsDevice
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6312962 "initLegalButtonMask"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6313090 "checkRobotAllowed"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " determine if the security policy allows Robot's to be created "
      end

      operation 6313218 "checkIsScreenDevice"
	private explicit_return_type "void"
	nparams 1
	  param inout name "device" type class_ref 868994 // GraphicsDevice
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " check if the given device is a screen device "
      end

      classrelation 2970498 // anchor (<unidirectional association>)
	relation 2970498 --->
	  a role_name "anchor" init_value " new Object()" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2970498 // anchor (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      class 875010 "RobotDisposer"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2970754 // peer (<unidirectional association>)
	  relation 2970754 --->
	    a role_name "peer" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2970754 // peer (<unidirectional association>)
	    b parent class_ref 874754 // RobotPeer
	end

	operation 6313346 "RobotDisposer"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "peer" type class_ref 874754 // RobotPeer
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6313474 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2970882 // disposer (<unidirectional association>)
	relation 2970882 --->
	  a role_name "disposer" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2970882 // disposer (<unidirectional association>)
	  b parent class_ref 875010 // RobotDisposer
      end

      operation 6313602 "mouseMove"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves mouse pointer to given screen coordinates.
@param x         X position
@param y         Y position
"
      end

      operation 6313730 "mousePress"
	public explicit_return_type "void"
	nparams 1
	  param in name "buttons" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Presses one or more mouse buttons.  The mouse buttons should
be released using the {@link #mouseRelease(int)} method.

@param buttons the Button mask; a combination of one or more
mouse button masks.
<p>
It is allowed to use only a combination of valid values as a {@code buttons} parameter.
A valid combination consists of {@code InputEvent.BUTTON1_DOWN_MASK},
{@code InputEvent.BUTTON2_DOWN_MASK}, {@code InputEvent.BUTTON3_DOWN_MASK}
and values returned by the
{@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)} method.

The valid combination also depends on a
{@link Toolkit#areExtraMouseButtonsEnabled() Toolkit.areExtraMouseButtonsEnabled()} value as follows:
<ul>
<li> If support for extended mouse buttons is
{@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
then it is allowed to use only the following standard button masks:
{@code InputEvent.BUTTON1_DOWN_MASK}, {@code InputEvent.BUTTON2_DOWN_MASK},
{@code InputEvent.BUTTON3_DOWN_MASK}.
<li> If support for extended mouse buttons is
{@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
then it is allowed to use the standard button masks
and masks for existing extended mouse buttons, if the mouse has more then three buttons.
In that way, it is allowed to use the button masks corresponding to the buttons
in the range from 1 to {@link java.awt.MouseInfo#getNumberOfButtons() MouseInfo.getNumberOfButtons()}.
<br>
It is recommended to use the {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)}
method to obtain the mask for any mouse button by its number.
</ul>
<p>
The following standard button masks are also accepted:
<ul>
<li>{@code InputEvent.BUTTON1_MASK}
<li>{@code InputEvent.BUTTON2_MASK}
<li>{@code InputEvent.BUTTON3_MASK}
</ul>
However, it is recommended to use {@code InputEvent.BUTTON1_DOWN_MASK},
{@code InputEvent.BUTTON2_DOWN_MASK},  {@code InputEvent.BUTTON3_DOWN_MASK} instead.
Either extended {@code _DOWN_MASK} or old {@code _MASK} values
should be used, but both those models should not be mixed.
@throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
        and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
@throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
        that does not exist on the mouse and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
@see #mouseRelease(int)
@see InputEvent#getMaskForButton(int)
@see Toolkit#areExtraMouseButtonsEnabled()
@see java.awt.MouseInfo#getNumberOfButtons()
@see java.awt.event.MouseEvent
"
      end

      operation 6313858 "mouseRelease"
	public explicit_return_type "void"
	nparams 1
	  param in name "buttons" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases one or more mouse buttons.

@param buttons the Button mask; a combination of one or more
mouse button masks.
<p>
It is allowed to use only a combination of valid values as a {@code buttons} parameter.
A valid combination consists of {@code InputEvent.BUTTON1_DOWN_MASK},
{@code InputEvent.BUTTON2_DOWN_MASK}, {@code InputEvent.BUTTON3_DOWN_MASK}
and values returned by the
{@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)} method.

The valid combination also depends on a
{@link Toolkit#areExtraMouseButtonsEnabled() Toolkit.areExtraMouseButtonsEnabled()} value as follows:
<ul>
<li> If the support for extended mouse buttons is
{@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
then it is allowed to use only the following standard button masks:
{@code InputEvent.BUTTON1_DOWN_MASK}, {@code InputEvent.BUTTON2_DOWN_MASK},
{@code InputEvent.BUTTON3_DOWN_MASK}.
<li> If the support for extended mouse buttons is
{@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
then it is allowed to use the standard button masks
and masks for existing extended mouse buttons, if the mouse has more then three buttons.
In that way, it is allowed to use the button masks corresponding to the buttons
in the range from 1 to {@link java.awt.MouseInfo#getNumberOfButtons() MouseInfo.getNumberOfButtons()}.
<br>
It is recommended to use the {@link InputEvent#getMaskForButton(int) InputEvent.getMaskForButton(button)}
method to obtain the mask for any mouse button by its number.
</ul>
<p>
The following standard button masks are also accepted:
<ul>
<li>{@code InputEvent.BUTTON1_MASK}
<li>{@code InputEvent.BUTTON2_MASK}
<li>{@code InputEvent.BUTTON3_MASK}
</ul>
However, it is recommended to use {@code InputEvent.BUTTON1_DOWN_MASK},
{@code InputEvent.BUTTON2_DOWN_MASK},  {@code InputEvent.BUTTON3_DOWN_MASK} instead.
Either extended {@code _DOWN_MASK} or old {@code _MASK} values
should be used, but both those models should not be mixed.
@throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
        and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java
@throws IllegalArgumentException if the {@code buttons} mask contains the mask for extra mouse button
        that does not exist on the mouse and support for extended mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled} by Java
@see #mousePress(int)
@see InputEvent#getMaskForButton(int)
@see Toolkit#areExtraMouseButtonsEnabled()
@see java.awt.MouseInfo#getNumberOfButtons()
@see java.awt.event.MouseEvent
"
      end

      operation 6313986 "checkButtonsArgument"
	private explicit_return_type "void"
	nparams 1
	  param in name "buttons" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6314114 "mouseWheel"
	public explicit_return_type "void"
	nparams 1
	  param in name "wheelAmt" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the scroll wheel on wheel-equipped mice.

@param wheelAmt  number of \"notches\" to move the mouse wheel
                 Negative values indicate movement up/away from the user,
                 positive values indicate movement down/towards the user.

@since 1.4
"
      end

      operation 6314242 "keyPress"
	public explicit_return_type "void"
	nparams 1
	  param in name "keycode" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Presses a given key.  The key should be released using the
<code>keyRelease</code> method.
<p>
Key codes that have more than one physical key associated with them
(e.g. <code>KeyEvent.VK_SHIFT</code> could mean either the
left or right shift key) will map to the left key.

@param   keycode Key to press (e.g. <code>KeyEvent.VK_A</code>)
@throws  IllegalArgumentException if <code>keycode</code> is not
         a valid key
@see     #keyRelease(int)
@see     java.awt.event.KeyEvent
"
      end

      operation 6314370 "keyRelease"
	public explicit_return_type "void"
	nparams 1
	  param in name "keycode" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases a given key.
<p>
Key codes that have more than one physical key associated with them
(e.g. <code>KeyEvent.VK_SHIFT</code> could mean either the
left or right shift key) will map to the left key.

@param   keycode Key to release (e.g. <code>KeyEvent.VK_A</code>)
@throws  IllegalArgumentException if <code>keycode</code> is not a
         valid key
@see  #keyPress(int)
@see     java.awt.event.KeyEvent
"
      end

      operation 6314498 "checkKeycodeArgument"
	private explicit_return_type "void"
	nparams 1
	  param in name "keycode" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6314626 "getPixelColor"
	public return_type class_ref 323458 // Color
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color of a pixel at the given screen coordinates.
@param   x       X position of pixel
@param   y       Y position of pixel
@return  Color of the pixel
"
      end

      operation 6314754 "createScreenCapture"
	public return_type class_ref 311554 // BufferedImage
	nparams 1
	  param inout name "screenRect" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an image containing pixels read from the screen.  This image does
not include the mouse cursor.
@param   screenRect      Rect to capture in screen coordinates
@return  The captured image
@throws  IllegalArgumentException if <code>screenRect</code> width and height are not greater than zero
@throws  SecurityException if <code>readDisplayPixels</code> permission is not granted
@see     SecurityManager#checkPermission
@see     AWTPermission
"
      end

      operation 6314882 "checkValidRect"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "rect" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6315010 "checkScreenCaptureAllowed"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6315138 "afterEvent"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called after an event is generated
"
      end

      operation 6315266 "isAutoWaitForIdle"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this Robot automatically invokes <code>waitForIdle</code>
after generating an event.
@return Whether <code>waitForIdle</code> is automatically called
"
      end

      operation 6315394 "setAutoWaitForIdle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isOn" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this Robot automatically invokes <code>waitForIdle</code>
after generating an event.
@param   isOn    Whether <code>waitForIdle</code> is automatically invoked
"
      end

      operation 6315522 "autoWaitForIdle"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls waitForIdle after every event if so desired.
"
      end

      operation 6315650 "getAutoDelay"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of milliseconds this Robot sleeps after generating an event.
"
      end

      operation 6315778 "setAutoDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "ms" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of milliseconds this Robot sleeps after generating an event.
@throws  IllegalArgumentException If <code>ms</code> is not between 0 and 60,000 milliseconds inclusive
"
      end

      operation 6315906 "autoDelay"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Automatically sleeps for the specified interval after event generated.
"
      end

      operation 6316034 "delay"
	public explicit_return_type "void"
	nparams 1
	  param in name "ms" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sleeps for the specified time.
To catch any <code>InterruptedException</code>s that occur,
<code>Thread.sleep()</code> may be used instead.
@param   ms      time to sleep in milliseconds
@throws  IllegalArgumentException if <code>ms</code> is not between 0 and 60,000 milliseconds inclusive
@see     java.lang.Thread#sleep
"
      end

      operation 6316162 "checkDelayArgument"
	private explicit_return_type "void"
	nparams 1
	  param in name "ms" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6316290 "waitForIdle"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits until all events currently on the event queue have been processed.
@throws  IllegalThreadStateException if called on the AWT event dispatching thread
"
      end

      operation 6316418 "checkNotDispatchThread"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6316546 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this Robot.

@return  the string representation.
"
      end
    end

    class 875138 "Scrollbar"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Scrollbar</code> class embodies a scroll bar, a
familiar user-interface object. A scroll bar provides a
convenient means for allowing a user to select from a
range of values. The following three vertical
scroll bars could be used as slider controls to pick
the red, green, and blue components of a color:
<p>
<img src=\"doc-files/Scrollbar-1.gif\" alt=\"Image shows 3 vertical sliders, side-by-side.\"
style=\"float:center; margin: 7px 10px;\">
<p>
Each scroll bar in this example could be created with
code similar to the following:

<hr><blockquote><pre>
redSlider=new Scrollbar(Scrollbar.VERTICAL, 0, 1, 0, 255);
add(redSlider);
</pre></blockquote><hr>
<p>
Alternatively, a scroll bar can represent a range of values. For
example, if a scroll bar is used for scrolling through text, the
width of the \"bubble\" (also called the \"thumb\" or \"scroll box\")
can be used to represent the amount of text that is visible.
Here is an example of a scroll bar that represents a range:
<p>
<img src=\"doc-files/Scrollbar-2.gif\"
alt=\"Image shows horizontal slider with starting range of 0 and ending range of 300. The slider thumb is labeled 60.\"
style=\"float:center; margin: 7px 10px;\">
<p>
The value range represented by the bubble in this example
is the <em>visible amount</em>. The horizontal scroll bar
in this example could be created with code like the following:

<hr><blockquote><pre>
ranger = new Scrollbar(Scrollbar.HORIZONTAL, 0, 60, 0, 300);
add(ranger);
</pre></blockquote><hr>
<p>
Note that the actual maximum value of the scroll bar is the
<code>maximum</code> minus the <code>visible amount</code>.
In the previous example, because the <code>maximum</code> is
300 and the <code>visible amount</code> is 60, the actual maximum
value is 240.  The range of the scrollbar track is 0 - 300.
The left side of the bubble indicates the value of the
scroll bar.
<p>
Normally, the user changes the value of the scroll bar by
making a gesture with the mouse. For example, the user can
drag the scroll bar's bubble up and down, or click in the
scroll bar's unit increment or block increment areas. Keyboard
gestures can also be mapped to the scroll bar. By convention,
the <b>Page&nbsp;Up</b> and <b>Page&nbsp;Down</b>
keys are equivalent to clicking in the scroll bar's block
increment and block decrement areas.
<p>
When the user changes the value of the scroll bar, the scroll bar
receives an instance of <code>AdjustmentEvent</code>.
The scroll bar processes this event, passing it along to
any registered listeners.
<p>
Any object that wishes to be notified of changes to the
scroll bar's value should implement
<code>AdjustmentListener</code>, an interface defined in
the package <code>java.awt.event</code>.
Listeners can be added and removed dynamically by calling
the methods <code>addAdjustmentListener</code> and
<code>removeAdjustmentListener</code>.
<p>
The <code>AdjustmentEvent</code> class defines five types
of adjustment event, listed here:

<ul>
<li><code>AdjustmentEvent.TRACK</code> is sent out when the
user drags the scroll bar's bubble.
<li><code>AdjustmentEvent.UNIT_INCREMENT</code> is sent out
when the user clicks in the left arrow of a horizontal scroll
bar, or the top arrow of a vertical scroll bar, or makes the
equivalent gesture from the keyboard.
<li><code>AdjustmentEvent.UNIT_DECREMENT</code> is sent out
when the user clicks in the right arrow of a horizontal scroll
bar, or the bottom arrow of a vertical scroll bar, or makes the
equivalent gesture from the keyboard.
<li><code>AdjustmentEvent.BLOCK_INCREMENT</code> is sent out
when the user clicks in the track, to the left of the bubble
on a horizontal scroll bar, or above the bubble on a vertical
scroll bar. By convention, the <b>Page&nbsp;Up</b>
key is equivalent, if the user is using a keyboard that
defines a <b>Page&nbsp;Up</b> key.
<li><code>AdjustmentEvent.BLOCK_DECREMENT</code> is sent out
when the user clicks in the track, to the right of the bubble
on a horizontal scroll bar, or below the bubble on a vertical
scroll bar. By convention, the <b>Page&nbsp;Down</b>
key is equivalent, if the user is using a keyboard that
defines a <b>Page&nbsp;Down</b> key.
</ul>
<p>
The JDK&nbsp;1.0 event system is supported for backwards
compatibility, but its use with newer versions of the platform is
discouraged. The five types of adjustment events introduced
with JDK&nbsp;1.1 correspond to the five event types
that are associated with scroll bars in previous platform versions.
The following list gives the adjustment event type,
and the corresponding JDK&nbsp;1.0 event type it replaces.

<ul>
<li><code>AdjustmentEvent.TRACK</code> replaces
<code>Event.SCROLL_ABSOLUTE</code>
<li><code>AdjustmentEvent.UNIT_INCREMENT</code> replaces
<code>Event.SCROLL_LINE_UP</code>
<li><code>AdjustmentEvent.UNIT_DECREMENT</code> replaces
<code>Event.SCROLL_LINE_DOWN</code>
<li><code>AdjustmentEvent.BLOCK_INCREMENT</code> replaces
<code>Event.SCROLL_PAGE_UP</code>
<li><code>AdjustmentEvent.BLOCK_DECREMENT</code> replaces
<code>Event.SCROLL_PAGE_DOWN</code>
</ul>
<p>
<b>Note</b>: We recommend using a <code>Scrollbar</code>
for value selection only.  If you want to implement
a scrollable component inside a container, we recommend you use
a {@link ScrollPane ScrollPane}. If you use a
<code>Scrollbar</code> for this purpose, you are likely to
encounter issues with painting, key handling, sizing and
positioning.

@author      Sami Shaio
@see         java.awt.event.AdjustmentEvent
@see         java.awt.event.AdjustmentListener
@since       JDK1.0
"
      classrelation 2971010 // <generalisation>
	relation 2971010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2971010 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2971138 // <realization>
	relation 2971138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2971138 // <realization>
	  b parent class_ref 855938 // Adjustable
      end

      classrelation 2971266 // <realization>
	relation 2971266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2971266 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      attribute 1421442 "HORIZONTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant that indicates a horizontal scroll bar.

"
      end

      attribute 1421570 "VERTICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant that indicates a vertical scroll bar.

"
      end

      attribute 1421698 "value"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the <code>Scrollbar</code>.
This property must be greater than or equal to <code>minimum</code>
and less than or equal to
<code>maximum - visibleAmount</code>

@serial
@see #getValue
@see #setValue

"
      end

      attribute 1421826 "maximum"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of the <code>Scrollbar</code>.
This value must be greater than the <code>minimum</code>
value.<br>

@serial
@see #getMaximum
@see #setMaximum

"
      end

      attribute 1421954 "minimum"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of the <code>Scrollbar</code>.
This value must be less than the <code>maximum</code>
value.<br>

@serial
@see #getMinimum
@see #setMinimum

"
      end

      attribute 1422082 "visibleAmount"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The size of the <code>Scrollbar</code>'s bubble.
When a scroll bar is used to select a range of values,
the visibleAmount represents the size of this range.
Depending on platform, this may be visually indicated
by the size of the bubble.

@serial
@see #getVisibleAmount
@see #setVisibleAmount

"
      end

      attribute 1422210 "orientation"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>Scrollbar</code>'s orientation--being either horizontal
or vertical.
This value should be specified when the scrollbar is created.<BR>
orientation can be either : <code>VERTICAL</code> or
<code>HORIZONTAL</code> only.

@serial
@see #getOrientation
@see #setOrientation

"
      end

      attribute 1422338 "lineIncrement"
	package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount by which the scrollbar value will change when going
up or down by a line.
This value must be greater than zero.

@serial
@see #getLineIncrement
@see #setLineIncrement

"
      end

      attribute 1422466 "pageIncrement"
	package explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount by which the scrollbar value will change when going
up or down by a page.
This value must be greater than zero.

@serial
@see #getPageIncrement
@see #setPageIncrement

"
      end

      attribute 1422594 "isAdjusting"
	package explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The adjusting status of the <code>Scrollbar</code>.
True if the value is in the process of changing as a result of
actions being taken by the user.

@see #getValueIsAdjusting
@see #setValueIsAdjusting
@since 1.4

"
      end

      classrelation 2971394 // adjustmentListener (<unidirectional association>)
	relation 2971394 --->
	  a role_name "adjustmentListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2971394 // adjustmentListener (<unidirectional association>)
	  b parent class_ref 856066 // AdjustmentListener
      end

      classrelation 2971522 // base (<unidirectional association>)
	relation 2971522 --->
	  a role_name "base" init_value " \"scrollbar\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2971522 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1422722 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1422850 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8451667562882310543L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6316674 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs.
"
      end

      extra_member 151298 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6316802 "Scrollbar"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new vertical scroll bar.
The default properties of the scroll bar are listed in
the following table:

<table border=1 summary=\"Scrollbar default properties\">
<tr>
  <th>Property</th>
  <th>Description</th>
  <th>Default Value</th>
</tr>
<tr>
  <td>orientation</td>
  <td>indicates whether the scroll bar is vertical
  <br>or horizontal</td>
  <td><code>Scrollbar.VERTICAL</code></td>
</tr>
<tr>
  <td>value</td>
  <td>value which controls the location
  <br>of the scroll bar's bubble</td>
  <td>0</td>
</tr>
<tr>
  <td>visible amount</td>
  <td>visible amount of the scroll bar's range,
  <br>typically represented by the size of the
  <br>scroll bar's bubble</td>
  <td>10</td>
</tr>
<tr>
  <td>minimum</td>
  <td>minimum value of the scroll bar</td>
  <td>0</td>
</tr>
<tr>
  <td>maximum</td>
  <td>maximum value of the scroll bar</td>
  <td>100</td>
</tr>
<tr>
  <td>unit increment</td>
  <td>amount the value changes when the
  <br>Line Up or Line Down key is pressed,
  <br>or when the end arrows of the scrollbar
  <br>are clicked </td>
  <td>1</td>
</tr>
<tr>
  <td>block increment</td>
  <td>amount the value changes when the
  <br>Page Up or Page Down key is pressed,
  <br>or when the scrollbar track is clicked
  <br>on either side of the bubble </td>
  <td>10</td>
</tr>
</table>

@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6316930 "Scrollbar"
	public explicit_return_type ""
	nparams 1
	  param in name "orientation" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new scroll bar with the specified orientation.
<p>
The <code>orientation</code> argument must take one of the two
values <code>Scrollbar.HORIZONTAL</code>,
or <code>Scrollbar.VERTICAL</code>,
indicating a horizontal or vertical scroll bar, respectively.

@param       orientation   indicates the orientation of the scroll bar
@exception   IllegalArgumentException    when an illegal value for
                   the <code>orientation</code> argument is supplied
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6317058 "Scrollbar"
	public explicit_return_type ""
	nparams 5
	  param in name "orientation" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param in name "visible" explicit_type "int"
	  param in name "minimum" explicit_type "int"
	  param in name "maximum" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new scroll bar with the specified orientation,
initial value, visible amount, and minimum and maximum values.
<p>
The <code>orientation</code> argument must take one of the two
values <code>Scrollbar.HORIZONTAL</code>,
or <code>Scrollbar.VERTICAL</code>,
indicating a horizontal or vertical scroll bar, respectively.
<p>
The parameters supplied to this constructor are subject to the
constraints described in {@link #setValues(int, int, int, int)}.

@param     orientation   indicates the orientation of the scroll bar.
@param     value     the initial value of the scroll bar
@param     visible   the visible amount of the scroll bar, typically
                     represented by the size of the bubble
@param     minimum   the minimum value of the scroll bar
@param     maximum   the maximum value of the scroll bar
@exception IllegalArgumentException    when an illegal value for
                   the <code>orientation</code> argument is supplied
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see #setValues
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6317186 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a name for this component.  Called by <code>getName</code>
when the name is <code>null</code>.
"
      end

      operation 6317314 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the <code>Scrollbar</code>'s peer.  The peer allows you to modify
the appearance of the <code>Scrollbar</code> without changing any of its
functionality.
"
      end

      operation 6317442 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation of this scroll bar.

@return    the orientation of this scroll bar, either
              <code>Scrollbar.HORIZONTAL</code> or
              <code>Scrollbar.VERTICAL</code>
@see       java.awt.Scrollbar#setOrientation
"
      end

      operation 6317570 "setOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the orientation for this scroll bar.

@param orientation  the orientation of this scroll bar, either
              <code>Scrollbar.HORIZONTAL</code> or
              <code>Scrollbar.VERTICAL</code>
@see       java.awt.Scrollbar#getOrientation
@exception   IllegalArgumentException  if the value supplied
                  for <code>orientation</code> is not a
                  legal value
@since     JDK1.1
"
      end

      operation 6317698 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current value of this scroll bar.

@return      the current value of this scroll bar
@see         java.awt.Scrollbar#getMinimum
@see         java.awt.Scrollbar#getMaximum
"
      end

      operation 6317826 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this scroll bar to the specified value.
<p>
If the value supplied is less than the current <code>minimum</code>
or greater than the current <code>maximum - visibleAmount</code>,
then either <code>minimum</code> or <code>maximum - visibleAmount</code>
is substituted, as appropriate.
<p>
Normally, a program should change a scroll bar's
value only by calling <code>setValues</code>.
The <code>setValues</code> method simultaneously
and synchronously sets the minimum, maximum, visible amount,
and value properties of a scroll bar, so that they are
mutually consistent.
<p>
Calling this method does not fire an
<code>AdjustmentEvent</code>.

@param       newValue   the new value of the scroll bar
@see         java.awt.Scrollbar#setValues
@see         java.awt.Scrollbar#getValue
@see         java.awt.Scrollbar#getMinimum
@see         java.awt.Scrollbar#getMaximum
"
      end

      operation 6317954 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum value of this scroll bar.

@return      the minimum value of this scroll bar
@see         java.awt.Scrollbar#getValue
@see         java.awt.Scrollbar#getMaximum
"
      end

      operation 6318082 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMinimum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the minimum value of this scroll bar.
<p>
When <code>setMinimum</code> is called, the minimum value
is changed, and other values (including the maximum, the
visible amount, and the current scroll bar value)
are changed to be consistent with the new minimum.
<p>
Normally, a program should change a scroll bar's minimum
value only by calling <code>setValues</code>.
The <code>setValues</code> method simultaneously
and synchronously sets the minimum, maximum, visible amount,
and value properties of a scroll bar, so that they are
mutually consistent.
<p>
Note that setting the minimum value to <code>Integer.MAX_VALUE</code>
will result in the new minimum value being set to
<code>Integer.MAX_VALUE - 1</code>.

@param       newMinimum   the new minimum value for this scroll bar
@see         java.awt.Scrollbar#setValues
@see         java.awt.Scrollbar#setMaximum
@since       JDK1.1
"
      end

      operation 6318210 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum value of this scroll bar.

@return      the maximum value of this scroll bar
@see         java.awt.Scrollbar#getValue
@see         java.awt.Scrollbar#getMinimum
"
      end

      operation 6318338 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMaximum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum value of this scroll bar.
<p>
When <code>setMaximum</code> is called, the maximum value
is changed, and other values (including the minimum, the
visible amount, and the current scroll bar value)
are changed to be consistent with the new maximum.
<p>
Normally, a program should change a scroll bar's maximum
value only by calling <code>setValues</code>.
The <code>setValues</code> method simultaneously
and synchronously sets the minimum, maximum, visible amount,
and value properties of a scroll bar, so that they are
mutually consistent.
<p>
Note that setting the maximum value to <code>Integer.MIN_VALUE</code>
will result in the new maximum value being set to
<code>Integer.MIN_VALUE + 1</code>.

@param       newMaximum   the new maximum value
                    for this scroll bar
@see         java.awt.Scrollbar#setValues
@see         java.awt.Scrollbar#setMinimum
@since       JDK1.1
"
      end

      operation 6318466 "getVisibleAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the visible amount of this scroll bar.
<p>
When a scroll bar is used to select a range of values,
the visible amount is used to represent the range of values
that are currently visible.  The size of the scroll bar's
bubble (also called a thumb or scroll box), usually gives a
visual representation of the relationship of the visible
amount to the range of the scroll bar.
Note that depending on platform, the value of the visible amount property
may not be visually indicated by the size of the bubble.
<p>
The scroll bar's bubble may not be displayed when it is not
moveable (e.g. when it takes up the entire length of the
scroll bar's track, or when the scroll bar is disabled).
Whether the bubble is displayed or not will not affect
the value returned by <code>getVisibleAmount</code>.

@return      the visible amount of this scroll bar
@see         java.awt.Scrollbar#setVisibleAmount
@since       JDK1.1
"
      end

      operation 6318594 "getVisible"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getVisibleAmount()</code>.
"
      end

      operation 6318722 "setVisibleAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "newAmount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the visible amount of this scroll bar.
<p>
When a scroll bar is used to select a range of values,
the visible amount is used to represent the range of values
that are currently visible.  The size of the scroll bar's
bubble (also called a thumb or scroll box), usually gives a
visual representation of the relationship of the visible
amount to the range of the scroll bar.
Note that depending on platform, the value of the visible amount property
may not be visually indicated by the size of the bubble.
<p>
The scroll bar's bubble may not be displayed when it is not
moveable (e.g. when it takes up the entire length of the
scroll bar's track, or when the scroll bar is disabled).
Whether the bubble is displayed or not will not affect
the value returned by <code>getVisibleAmount</code>.
<p>
If the visible amount supplied is less than <code>one</code>
or greater than the current <code>maximum - minimum</code>,
then either <code>one</code> or <code>maximum - minimum</code>
is substituted, as appropriate.
<p>
Normally, a program should change a scroll bar's
value only by calling <code>setValues</code>.
The <code>setValues</code> method simultaneously
and synchronously sets the minimum, maximum, visible amount,
and value properties of a scroll bar, so that they are
mutually consistent.

@param       newAmount the new visible amount
@see         java.awt.Scrollbar#getVisibleAmount
@see         java.awt.Scrollbar#setValues
@since       JDK1.1
"
      end

      operation 6318850 "setUnitIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the unit increment for this scroll bar.
<p>
The unit increment is the value that is added or subtracted
when the user activates the unit increment area of the
scroll bar, generally through a mouse or keyboard gesture
that the scroll bar receives as an adjustment event.
The unit increment must be greater than zero.
Attepts to set the unit increment to a value lower than 1
will result in a value of 1 being set.
<p>
In some operating systems, this property
can be ignored by the underlying controls.

@param        v  the amount by which to increment or decrement
                        the scroll bar's value
@see          java.awt.Scrollbar#getUnitIncrement
@since        JDK1.1
"
      end

      operation 6318978 "setLineIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setUnitIncrement(int)</code>.
"
      end

      operation 6319106 "getUnitIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the unit increment for this scrollbar.
<p>
The unit increment is the value that is added or subtracted
when the user activates the unit increment area of the
scroll bar, generally through a mouse or keyboard gesture
that the scroll bar receives as an adjustment event.
The unit increment must be greater than zero.
<p>
In some operating systems, this property
can be ignored by the underlying controls.

@return      the unit increment of this scroll bar
@see         java.awt.Scrollbar#setUnitIncrement
@since       JDK1.1
"
      end

      operation 6319234 "getLineIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getUnitIncrement()</code>.
"
      end

      operation 6319362 "setBlockIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the block increment for this scroll bar.
<p>
The block increment is the value that is added or subtracted
when the user activates the block increment area of the
scroll bar, generally through a mouse or keyboard gesture
that the scroll bar receives as an adjustment event.
The block increment must be greater than zero.
Attepts to set the block increment to a value lower than 1
will result in a value of 1 being set.

@param        v  the amount by which to increment or decrement
                        the scroll bar's value
@see          java.awt.Scrollbar#getBlockIncrement
@since        JDK1.1
"
      end

      operation 6319490 "setPageIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setBlockIncrement()</code>.
"
      end

      operation 6319618 "getBlockIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the block increment of this scroll bar.
<p>
The block increment is the value that is added or subtracted
when the user activates the block increment area of the
scroll bar, generally through a mouse or keyboard gesture
that the scroll bar receives as an adjustment event.
The block increment must be greater than zero.

@return      the block increment of this scroll bar
@see         java.awt.Scrollbar#setBlockIncrement
@since       JDK1.1
"
      end

      operation 6319746 "getPageIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getBlockIncrement()</code>.
"
      end

      operation 6319874 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "visible" explicit_type "int"
	  param in name "minimum" explicit_type "int"
	  param in name "maximum" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the values of four properties for this scroll bar:
<code>value</code>, <code>visibleAmount</code>,
<code>minimum</code>, and <code>maximum</code>.
If the values supplied for these properties are inconsistent
or incorrect, they will be changed to ensure consistency.
<p>
This method simultaneously and synchronously sets the values
of four scroll bar properties, assuring that the values of
these properties are mutually consistent. It enforces the
following constraints:
<code>maximum</code> must be greater than <code>minimum</code>,
<code>maximum - minimum</code> must not be greater
    than <code>Integer.MAX_VALUE</code>,
<code>visibleAmount</code> must be greater than zero.
<code>visibleAmount</code> must not be greater than
    <code>maximum - minimum</code>,
<code>value</code> must not be less than <code>minimum</code>,
and <code>value</code> must not be greater than
    <code>maximum - visibleAmount</code>
<p>
Calling this method does not fire an
<code>AdjustmentEvent</code>.

@param      value is the position in the current window
@param      visible is the visible amount of the scroll bar
@param      minimum is the minimum value of the scroll bar
@param      maximum is the maximum value of the scroll bar
@see        #setMinimum
@see        #setMaximum
@see        #setVisibleAmount
@see        #setValue
"
      end

      operation 6320002 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the value is in the process of changing as a
result of actions being taken by the user.

@return the value of the <code>valueIsAdjusting</code> property
@see #setValueIsAdjusting
@since 1.4
"
      end

      operation 6320130 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>valueIsAdjusting</code> property.

@param b new adjustment-in-progress status
@see #getValueIsAdjusting
@since 1.4
"
      end

      operation 6320258 "addAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified adjustment listener to receive instances of
<code>AdjustmentEvent</code> from this scroll bar.
If l is <code>null</code>, no exception is thrown and no
action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param        l the adjustment listener
@see          #removeAdjustmentListener
@see          #getAdjustmentListeners
@see          java.awt.event.AdjustmentEvent
@see          java.awt.event.AdjustmentListener
@since        JDK1.1
"
      end

      operation 6320386 "removeAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified adjustment listener so that it no longer
receives instances of <code>AdjustmentEvent</code> from this scroll bar.
If l is <code>null</code>, no exception is thrown and no action
is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l    the adjustment listener
@see             #addAdjustmentListener
@see             #getAdjustmentListeners
@see             java.awt.event.AdjustmentEvent
@see             java.awt.event.AdjustmentListener
@since           JDK1.1
"
      end

      operation 6320514 "getAdjustmentListeners"
	public return_type class_ref 856066 // AdjustmentListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the adjustment listeners
registered on this scrollbar.

@return all of this scrollbar's <code>AdjustmentListener</code>s
        or an empty array if no adjustment
        listeners are currently registered
@see             #addAdjustmentListener
@see             #removeAdjustmentListener
@see             java.awt.event.AdjustmentEvent
@see             java.awt.event.AdjustmentListener
@since 1.4
"
      end

      operation 6320642 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>Scrollbar</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.
<p>
You can specify the <code>listenerType</code> argument
with a class literal,  such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>Scrollbar</code> <code>c</code>
for its mouse listeners with the following code:

<pre>MouseListener[] mls = (MouseListener[])(c.getListeners(MouseListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this component,
         or an empty array if no such listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@since 1.3
"
      end

      operation 6320770 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6320898 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this scroll bar. If the event is an
instance of <code>AdjustmentEvent</code>, it invokes the
<code>processAdjustmentEvent</code> method.
Otherwise, it invokes its superclass's
<code>processEvent</code> method.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param        e the event
@see          java.awt.event.AdjustmentEvent
@see          java.awt.Scrollbar#processAdjustmentEvent
@since        JDK1.1
"
      end

      operation 6321026 "processAdjustmentEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 857090 // AdjustmentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes adjustment events occurring on this
scrollbar by dispatching them to any registered
<code>AdjustmentListener</code> objects.
<p>
This method is not called unless adjustment events are
enabled for this component. Adjustment events are enabled
when one of the following occurs:
<ul>
<li>An <code>AdjustmentListener</code> object is registered
via <code>addAdjustmentListener</code>.
<li>Adjustment events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the adjustment event
@see         java.awt.event.AdjustmentEvent
@see         java.awt.event.AdjustmentListener
@see         java.awt.Scrollbar#addAdjustmentListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6321154 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>Scrollbar</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return      the parameter string of this scroll bar
"
      end

      attribute 1422978 "scrollbarSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization support.


The scroll bar's serialized Data Version.

@serial

"
      end

      operation 6321282 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable <code>AdjustmentListeners</code>
as optional data. The non-serializable listeners are
detected and no attempt is made to serialize them.

@param s the <code>ObjectOutputStream</code> to write
@serialData <code>null</code> terminated sequence of 0
  or more pairs; the pair consists of a <code>String</code>
  and an <code>Object</code>; the <code>String</code> indicates
  the type of object and is one of the following:
  <code>adjustmentListenerK</code> indicating an
    <code>AdjustmentListener</code> object

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#adjustmentListenerK
@see #readObject(ObjectInputStream)
"
      end

      operation 6321410 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the <code>ObjectInputStream</code> and if
it isn't <code>null</code> adds a listener to
receive adjustment events fired by the
<code>Scrollbar</code>.
Unrecognized keys or values will be ignored.

@param s the <code>ObjectInputStream</code> to read
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns
  <code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
@see #writeObject(ObjectOutputStream)
"
      end

      operation 6321538 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the <code>AccessibleContext</code> associated with this
<code>Scrollbar</code>. For scrollbars, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleAWTScrollBar</code>. A new
<code>AccessibleAWTScrollBar</code> instance is created if necessary.

@return an <code>AccessibleAWTScrollBar</code> that serves as the
        <code>AccessibleContext</code> of this <code>ScrollBar</code>
@since 1.3
"
      end

      class 875266 "AccessibleAWTScrollBar"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2971650 // <generalisation>
	  relation 2971650 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2971650 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2971778 // <realization>
	  relation 2971778 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2971778 // <realization>
	    b parent class_ref 349058 // AccessibleValue
	end

	attribute 1423106 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -344337268523697807L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6321666 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state set of this object.

@return an instance of <code>AccessibleState</code>
    containing the current state of the object
@see AccessibleState
"
	end

	operation 6321794 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of <code>AccessibleRole</code>
    describing the role of the object
"
	end

	operation 6321922 "getAccessibleValue"
	  public return_type class_ref 349058 // AccessibleValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the <code>AccessibleValue</code> associated with this
object.  In the implementation of the Java Accessibility
API for this class, return this object, which is
responsible for implementing the
<code>AccessibleValue</code> interface on behalf of itself.

@return this object
"
	end

	operation 6322050 "getCurrentAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the accessible value of this object.

@return The current value of this object.
"
	end

	operation 6322178 "setCurrentAccessibleValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "n" type class_ref 398210 // Number
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value of this object as a Number.

@return True if the value was set.
"
	end

	operation 6322306 "getMinimumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the minimum accessible value of this object.

@return The minimum value of this object.
"
	end

	operation 6322434 "getMaximumAccessibleValue"
	  public return_type class_ref 398210 // Number
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the maximum accessible value of this object.

@return The maximum value of this object.
"
	end
      end
    end

    class 875394 "ScrollPane"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A container class which implements automatic horizontal and/or
vertical scrolling for a single child component.  The display
policy for the scrollbars can be set to:
<OL>
<LI>as needed: scrollbars created and shown only when needed by scrollpane
<LI>always: scrollbars created and always shown by the scrollpane
<LI>never: scrollbars never created or shown by the scrollpane
</OL>
<P>
The state of the horizontal and vertical scrollbars is represented
by two <code>ScrollPaneAdjustable</code> objects (one for each
dimension) which implement the <code>Adjustable</code> interface.
The API provides methods to access those objects such that the
attributes on the Adjustable object (such as unitIncrement, value,
etc.) can be manipulated.
<P>
Certain adjustable properties (minimum, maximum, blockIncrement,
and visibleAmount) are set internally by the scrollpane in accordance
with the geometry of the scrollpane and its child and these should
not be set by programs using the scrollpane.
<P>
If the scrollbar display policy is defined as \"never\", then the
scrollpane can still be programmatically scrolled using the
setScrollPosition() method and the scrollpane will move and clip
the child's contents appropriately.  This policy is useful if the
program needs to create and manage its own adjustable controls.
<P>
The placement of the scrollbars is controlled by platform-specific
properties set by the user outside of the program.
<P>
The initial size of this container is set to 100x100, but can
be reset using setSize().
<P>
Scrolling with the wheel on a wheel-equipped mouse is enabled by default.
This can be disabled using <code>setWheelScrollingEnabled</code>.
Wheel scrolling can be customized by setting the block and
unit increment of the horizontal and vertical Adjustables.
For information on how mouse wheel events are dispatched, see
the class description for {@link MouseWheelEvent}.
<P>
Insets are used to define any space used by scrollbars and any
borders created by the scroll pane. getInsets() can be used
to get the current value for the insets.  If the value of
scrollbarsAlwaysVisible is false, then the value of the insets
will change dynamically depending on whether the scrollbars are
currently visible or not.

@author      Tom Ball
@author      Amy Fowler
@author      Tim Prinzing
"
      classrelation 2971906 // <generalisation>
	relation 2971906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2971906 // <generalisation>
	  b parent class_ref 338690 // Container
      end

      classrelation 2972034 // <realization>
	relation 2972034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2972034 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      operation 6322562 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method IDs
"
      end

      extra_member 151426 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1423234 "SCROLLBARS_AS_NEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that horizontal/vertical scrollbar should be shown
only when the size of the child exceeds the size of the scrollpane
in the horizontal/vertical dimension.

"
      end

      attribute 1423362 "SCROLLBARS_ALWAYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that horizontal/vertical scrollbars should always be
shown regardless of the respective sizes of the scrollpane and child.

"
      end

      attribute 1423490 "SCROLLBARS_NEVER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Specifies that horizontal/vertical scrollbars should never be shown
regardless of the respective sizes of the scrollpane and child.

"
      end

      attribute 1423618 "scrollbarDisplayPolicy"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "There are 3 ways in which a scroll bar can be displayed.
This integer will represent one of these 3 displays -
(SCROLLBARS_ALWAYS, SCROLLBARS_AS_NEEDED, SCROLLBARS_NEVER)

@serial
@see #getScrollbarDisplayPolicy

"
      end

      classrelation 2972162 // vAdjustable (<unidirectional association>)
	relation 2972162 --->
	  a role_name "vAdjustable" private
	    comment "
An adjustable vertical scrollbar.
It is important to note that you must <em>NOT</em> call 3
<code>Adjustable</code> methods, namely:
<code>setMinimum()</code>, <code>setMaximum()</code>,
<code>setVisibleAmount()</code>.

@serial
@see #getVAdjustable

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2972162 // vAdjustable (<unidirectional association>)
	  b parent class_ref 875522 // ScrollPaneAdjustable
      end

      classrelation 2972290 // hAdjustable (<unidirectional association>)
	relation 2972290 --->
	  a role_name "hAdjustable" private
	    comment "
An adjustable horizontal scrollbar.
It is important to note that you must <em>NOT</em> call 3
<code>Adjustable</code> methods, namely:
<code>setMinimum()</code>, <code>setMaximum()</code>,
<code>setVisibleAmount()</code>.

@serial
@see #getHAdjustable

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2972290 // hAdjustable (<unidirectional association>)
	  b parent class_ref 875522 // ScrollPaneAdjustable
      end

      classrelation 2972418 // base (<unidirectional association>)
	relation 2972418 --->
	  a role_name "base" init_value " \"scrollpane\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2972418 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1423746 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1423874 "defaultWheelScroll"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1424002 "wheelScrollingEnabled"
	private explicit_type "boolean"
	init_value " defaultWheelScroll"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether or not scrolling should take place when a
MouseWheelEvent is received.

@serial
@since 1.4

"
      end

      attribute 1424130 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7956609840827222915L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6322690 "ScrollPane"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new scrollpane container with a scrollbar display
policy of \"as needed\".
@throws HeadlessException if GraphicsEnvironment.isHeadless()
    returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6322818 "ScrollPane"
	public explicit_return_type ""
	nparams 1
	  param in name "scrollbarDisplayPolicy" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ConstructorProperties({\"scrollbarDisplayPolicy\"})
"
	
	
	
	comment "Create a new scrollpane container.
@param scrollbarDisplayPolicy policy for when scrollbars should be shown
@throws IllegalArgumentException if the specified scrollbar
    display policy is invalid
@throws HeadlessException if GraphicsEnvironment.isHeadless()
    returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6322946 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6323074 "addToPanel"
	private explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The scrollpane won't work with a windowless child... it assumes
 it is moving a child window around so the windowless child is
 wrapped with a window."
      end

      operation 6323202 "addImpl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "comp" type class_ref 338818 // Component
	  param inout name "constraints" type class_ref 129538 // Object
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified component to this scroll pane container.
If the scroll pane has an existing child component, that
component is removed and the new one is added.
@param comp the component to be added
@param constraints  not applicable
@param index position of child component (must be &lt;= 0)
"
      end

      operation 6323330 "getScrollbarDisplayPolicy"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the display policy for the scrollbars.
@return the display policy for the scrollbars
"
      end

      operation 6323458 "getViewportSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current size of the scroll pane's view port.
@return the size of the view port in pixels
"
      end

      operation 6323586 "getHScrollbarHeight"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the height that would be occupied by a horizontal
scrollbar, which is independent of whether it is currently
displayed by the scroll pane or not.
@return the height of a horizontal scrollbar in pixels
"
      end

      operation 6323714 "getVScrollbarWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width that would be occupied by a vertical
scrollbar, which is independent of whether it is currently
displayed by the scroll pane or not.
@return the width of a vertical scrollbar in pixels
"
      end

      operation 6323842 "getVAdjustable"
	public return_type class_ref 855938 // Adjustable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ScrollPaneAdjustable</code> object which
represents the state of the vertical scrollbar.
The declared return type of this method is
<code>Adjustable</code> to maintain backward compatibility.
@see java.awt.ScrollPaneAdjustable
"
      end

      operation 6323970 "getHAdjustable"
	public return_type class_ref 855938 // Adjustable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ScrollPaneAdjustable</code> object which
represents the state of the horizontal scrollbar.
The declared return type of this method is
<code>Adjustable</code> to maintain backward compatibility.
@see java.awt.ScrollPaneAdjustable
"
      end

      operation 6324098 "setScrollPosition"
	public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scrolls to the specified position within the child component.
A call to this method is only valid if the scroll pane contains
a child.  Specifying a position outside of the legal scrolling bounds
of the child will scroll to the closest legal position.
Legal bounds are defined to be the rectangle:
x = 0, y = 0, width = (child width - view port width),
height = (child height - view port height).
This is a convenience method which interfaces with the Adjustable
objects which represent the state of the scrollbars.
@param x the x position to scroll to
@param y the y position to scroll to
@throws NullPointerException if the scrollpane does not contain
    a child
"
      end

      operation 6324226 "setScrollPosition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scrolls to the specified position within the child component.
A call to this method is only valid if the scroll pane contains
a child and the specified position is within legal scrolling bounds
of the child.  Specifying a position outside of the legal scrolling
bounds of the child will scroll to the closest legal position.
Legal bounds are defined to be the rectangle:
x = 0, y = 0, width = (child width - view port width),
height = (child height - view port height).
This is a convenience method which interfaces with the Adjustable
objects which represent the state of the scrollbars.
@param p the Point representing the position to scroll to
@throws NullPointerException if {@code p} is {@code null}
"
      end

      operation 6324354 "getScrollPosition"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the current x,y position within the child which is displayed
at the 0,0 location of the scrolled panel's view port.
This is a convenience method which interfaces with the adjustable
objects which represent the state of the scrollbars.
@return the coordinate position for the current scroll position
@throws NullPointerException if the scrollpane does not contain
    a child
"
      end

      operation 6324482 "setLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 349698 // LayoutManager
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the layout manager for this container.  This method is
overridden to prevent the layout mgr from being set.
@param mgr the specified layout manager
"
      end

      operation 6324610 "doLayout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lays out this container by resizing its child to its preferred size.
If the new preferred size of the child causes the current scroll
position to be invalid, the scroll position is set to the closest
valid position.

@see Component#validate
"
      end

      operation 6324738 "calculateChildSize"
	package return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the size to allocate the child component.
If the viewport area is bigger than the preferred size
of the child then the child is allocated enough
to fill the viewport, otherwise the child is given
it's preferred size.
"
      end

      operation 6324866 "layout"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>doLayout()</code>.
"
      end

      operation 6324994 "printComponents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 343682 // Graphics
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the component in this scroll pane.
@param g the specified Graphics window
@see Component#print
@see Component#printAll
"
      end

      operation 6325122 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the scroll pane's peer.
"
      end

      operation 6325250 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this
<code>ScrollPane</code>. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return the parameter string of this scroll pane
"
      end

      operation 6325378 "autoProcessMouseWheel"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6325506 "processMouseWheelEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 345858 // MouseWheelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process mouse wheel events that are delivered to this
<code>ScrollPane</code> by scrolling an appropriate amount.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e  the mouse wheel event
@since 1.4
"
      end

      operation 6325634 "eventTypeEnabled"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If wheel scrolling is enabled, we return true for MouseWheelEvents
@since 1.4
"
      end

      operation 6325762 "setWheelScrollingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handleWheel" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables/disables scrolling in response to movement of the mouse wheel.
Wheel scrolling is enabled by default.

@param handleWheel   <code>true</code> if scrolling should be done
                     automatically for a MouseWheelEvent,
                     <code>false</code> otherwise.
@see #isWheelScrollingEnabled
@see java.awt.event.MouseWheelEvent
@see java.awt.event.MouseWheelListener
@since 1.4
"
      end

      operation 6325890 "isWheelScrollingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not scrolling will take place in response to
the mouse wheel.  Wheel scrolling is enabled by default.

@see #setWheelScrollingEnabled(boolean)
@since 1.4
"
      end

      operation 6326018 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.
"
      end

      operation 6326146 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads default serializable fields to stream.
@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      class 875650 "PeerFixer"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2972546 // <realization>
	  relation 2972546 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2972546 // <realization>
	    b parent class_ref 856066 // AdjustmentListener
	end

	classrelation 2972674 // <realization>
	  relation 2972674 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2972674 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 1424258 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 1043664721353696630L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6326274 "PeerFixer"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "scroller" type class_ref 875394 // ScrollPane
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6326402 "adjustmentValueChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 857090 // AdjustmentEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoked when the value of the adjustable has changed.
"
	end

	classrelation 2972802 // scroller (<unidirectional association>)
	  relation 2972802 --->
	    a role_name "scroller" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2972802 // scroller (<unidirectional association>)
	    b parent class_ref 875394 // ScrollPane
	end
      end

      operation 6326530 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this ScrollPane.
For scroll panes, the AccessibleContext takes the form of an
AccessibleAWTScrollPane.
A new AccessibleAWTScrollPane instance is created if necessary.

@return an AccessibleAWTScrollPane that serves as the
        AccessibleContext of this ScrollPane
@since 1.3
"
      end

      class 875778 "AccessibleAWTScrollPane"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2972930 // <generalisation>
	  relation 2972930 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2972930 // <generalisation>
	    b parent class_ref 350978 // AccessibleAWTContainer
	end

	attribute 1424386 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 6100703663886637L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6326658 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end
      end
    end

    class 875522 "ScrollPaneAdjustable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents the state of a horizontal or vertical
scrollbar of a <code>ScrollPane</code>.  Objects of this class are
returned by <code>ScrollPane</code> methods.

@since       1.4
"
      classrelation 2973442 // <realization>
	relation 2973442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2973442 // <realization>
	  b parent class_ref 855938 // Adjustable
      end

      classrelation 2973570 // <realization>
	relation 2973570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2973570 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2973698 // sp (<unidirectional association>)
	relation 2973698 --->
	  a role_name "sp" private
	    comment "
The <code>ScrollPane</code> this object is a scrollbar of.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2973698 // sp (<unidirectional association>)
	  b parent class_ref 875394 // ScrollPane
      end

      attribute 1424642 "orientation"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Orientation of this scrollbar.

@serial
@see #getOrientation
@see java.awt.Adjustable#HORIZONTAL
@see java.awt.Adjustable#VERTICAL

"
      end

      attribute 1424770 "value"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of this scrollbar.
<code>value</code> should be greater than <code>minimum</code>
and less than <code>maximum</code>

@serial
@see #getValue
@see #setValue

"
      end

      attribute 1424898 "minimum"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of this scrollbar.
This value can only be set by the <code>ScrollPane</code>.
<p>
<strong>ATTN:</strong> In current implementation
<code>minimum</code> is always <code>0</code>.  This field can
only be altered via <code>setSpan</code> method and
<code>ScrollPane</code> always calls that method with
<code>0</code> for the minimum.  <code>getMinimum</code> method
always returns <code>0</code> without checking this field.

@serial
@see #getMinimum
@see #setSpan(int, int, int)

"
      end

      attribute 1425026 "maximum"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of this scrollbar.
This value can only be set by the <code>ScrollPane</code>.

@serial
@see #getMaximum
@see #setSpan(int, int, int)

"
      end

      attribute 1425154 "visibleAmount"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The size of the visible portion of this scrollbar.
This value can only be set by the <code>ScrollPane</code>.

@serial
@see #getVisibleAmount
@see #setSpan(int, int, int)

"
      end

      attribute 1425282 "isAdjusting"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The adjusting status of the <code>Scrollbar</code>.
True if the value is in the process of changing as a result of
actions being taken by the user.

@see #getValueIsAdjusting
@see #setValueIsAdjusting
@since 1.4

"
      end

      attribute 1425410 "unitIncrement"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount by which the scrollbar value will change when going
up or down by a line.
This value should be a non negative integer.

@serial
@see #getUnitIncrement
@see #setUnitIncrement

"
      end

      attribute 1425538 "blockIncrement"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount by which the scrollbar value will change when going
up or down by a page.
This value should be a non negative integer.

@serial
@see #getBlockIncrement
@see #setBlockIncrement

"
      end

      classrelation 2973826 // adjustmentListener (<unidirectional association>)
	relation 2973826 --->
	  a role_name "adjustmentListener" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2973826 // adjustmentListener (<unidirectional association>)
	  b parent class_ref 856066 // AdjustmentListener
      end

      classrelation 2973954 // SCROLLPANE_ONLY (<unidirectional association>)
	relation 2973954 --->
	  a role_name "SCROLLPANE_ONLY" init_value "
        \"Can be set by scrollpane only\"" class_relation const_relation private
	    comment "
Error message for <code>AWTError</code> reported when one of
the public but unsupported methods is called.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2973954 // SCROLLPANE_ONLY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6327042 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method ids.
"
      end

      extra_member 151554 "initialization"
	
	cpp "" ""
	java "  static {
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
        AWTAccessor.setScrollPaneAdjustableAccessor(new AWTAccessor.ScrollPaneAdjustableAccessor() {
            public void setTypedValue(final ScrollPaneAdjustable adj,
                                      final int v, final int type) {
                adj.setTypedValue(v, type);
            }
        });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      attribute 1425666 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3359745691033257079L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID.

"
      end

      operation 6327170 "ScrollPaneAdjustable"
	package explicit_return_type ""
	nparams 3
	  param inout name "sp" type class_ref 875394 // ScrollPane
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	  param in name "orientation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new object to represent specified scrollabar
of the specified <code>ScrollPane</code>.
Only ScrollPane creates instances of this class.
@param sp           <code>ScrollPane</code>
@param l            <code>AdjustmentListener</code> to add upon creation.
@param orientation  specifies which scrollbar this object represents,
                    can be either  <code>Adjustable.HORIZONTAL</code>
                    or <code>Adjustable.VERTICAL</code>.
"
      end

      operation 6327298 "setSpan"
	package explicit_return_type "void"
	nparams 3
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	  param in name "visible" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called by the scrollpane itself to update the
<code>minimum</code>, <code>maximum</code> and
<code>visible</code> values.  The scrollpane is the only one
that should be changing these since it is the source of these
values.
"
      end

      operation 6327426 "getOrientation"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the orientation of this scrollbar.
@return    the orientation of this scrollbar, either
           <code>Adjustable.HORIZONTAL</code> or
           <code>Adjustable.VERTICAL</code>
"
      end

      operation 6327554 "setMinimum"
	public explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should <strong>NOT</strong> be called by user code.
This method is public for this class to properly implement
<code>Adjustable</code> interface.

@throws AWTError Always throws an error when called.
"
      end

      operation 6327682 "getMinimum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6327810 "setMaximum"
	public explicit_return_type "void"
	nparams 1
	  param in name "max" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should <strong>NOT</strong> be called by user code.
This method is public for this class to properly implement
<code>Adjustable</code> interface.

@throws AWTError Always throws an error when called.
"
      end

      operation 6327938 "getMaximum"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328066 "setUnitIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "u" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328194 "getUnitIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328322 "setBlockIncrement"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328450 "getBlockIncrement"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328578 "setVisibleAmount"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should <strong>NOT</strong> be called by user code.
This method is public for this class to properly implement
<code>Adjustable</code> interface.

@throws AWTError Always throws an error when called.
"
      end

      operation 6328706 "getVisibleAmount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6328834 "setValueIsAdjusting"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>valueIsAdjusting</code> property.

@param b new adjustment-in-progress status
@see #getValueIsAdjusting
@since 1.4
"
      end

      operation 6328962 "getValueIsAdjusting"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the value is in the process of changing as a
result of actions being taken by the user.

@return the value of the <code>valueIsAdjusting</code> property
@see #setValueIsAdjusting
"
      end

      operation 6329090 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this scrollbar to the specified value.
<p>
If the value supplied is less than the current minimum or
greater than the current maximum, then one of those values is
substituted, as appropriate.

@param v the new value of the scrollbar
"
      end

      operation 6329218 "setTypedValue"
	private explicit_return_type "void"
	nparams 2
	  param in name "v" explicit_type "int"
	  param in name "type" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this scrollbar to the specified value.
<p>
If the value supplied is less than the current minimum or
greater than the current maximum, then one of those values is
substituted, as appropriate. Also, creates and dispatches
the AdjustementEvent with specified type and value.

@param v the new value of the scrollbar
@param type the type of the scrolling operation occurred
"
      end

      operation 6329346 "getValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6329474 "addAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified adjustment listener to receive adjustment
events from this <code>ScrollPaneAdjustable</code>.
If <code>l</code> is <code>null</code>, no exception is thrown
and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    l   the adjustment listener.
@see      #removeAdjustmentListener
@see      #getAdjustmentListeners
@see      java.awt.event.AdjustmentListener
@see      java.awt.event.AdjustmentEvent
"
      end

      operation 6329602 "removeAdjustmentListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 856066 // AdjustmentListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified adjustment listener so that it no longer
receives adjustment events from this <code>ScrollPaneAdjustable</code>.
If <code>l</code> is <code>null</code>, no exception is thrown
and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         l     the adjustment listener.
@see           #addAdjustmentListener
@see           #getAdjustmentListeners
@see           java.awt.event.AdjustmentListener
@see           java.awt.event.AdjustmentEvent
@since         JDK1.1
"
      end

      operation 6329730 "getAdjustmentListeners"
	public return_type class_ref 856066 // AdjustmentListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the adjustment listeners
registered on this <code>ScrollPaneAdjustable</code>.

@return all of this <code>ScrollPaneAdjustable</code>'s
        <code>AdjustmentListener</code>s
        or an empty array if no adjustment
        listeners are currently registered

@see           #addAdjustmentListener
@see           #removeAdjustmentListener
@see           java.awt.event.AdjustmentListener
@see           java.awt.event.AdjustmentEvent
@since 1.4
"
      end

      operation 6329858 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this scrollbar and its values.
@return    a string representation of this scrollbar.
"
      end

      operation 6329986 "paramString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this scrollbar.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary
between implementations.  The returned string may be empty but
may not be <code>null</code>.

@return      the parameter string of this scrollbar.
"
      end
    end

    class 875906 "PeerFixer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " class AccessibleAWTScrollPane

In JDK 1.1.1, the pkg private class java.awt.PeerFixer was moved to
become an inner class of ScrollPane, which broke serialization
for ScrollPane objects using JDK 1.1.
Instead of moving it back out here, which would break all JDK 1.1.x
releases, we keep PeerFixer in both places. Because of the scoping rules,
the PeerFixer that is used in ScrollPane will be the one that is the
inner class. This pkg private PeerFixer class below will only be used
if the Java 2 platform is used to deserialize ScrollPane objects that were serialized
using JDK1.1
"
      classrelation 2973058 // <realization>
	relation 2973058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2973058 // <realization>
	  b parent class_ref 856066 // AdjustmentListener
      end

      classrelation 2973186 // <realization>
	relation 2973186 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2973186 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1424514 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7051237413532574756L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "serialVersionUID

"
      end

      operation 6326786 "PeerFixer"
	package explicit_return_type ""
	nparams 1
	  param inout name "scroller" type class_ref 875394 // ScrollPane
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6326914 "adjustmentValueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 857090 // AdjustmentEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the value of the adjustable has changed.
"
      end

      classrelation 2973314 // scroller (<unidirectional association>)
	relation 2973314 --->
	  a role_name "scroller" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2973314 // scroller (<unidirectional association>)
	  b parent class_ref 875394 // ScrollPane
      end
    end

    class 876034 "SplashScreen"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The splash screen can be displayed at application startup, before the
Java Virtual Machine (JVM) starts. The splash screen is displayed as an
undecorated window containing an image. You can use GIF, JPEG, or PNG files
for the image. Animation is supported for the GIF format, while transparency
is supported both for GIF and PNG.  The window is positioned at the center
of the screen. The position on multi-monitor systems is not specified. It is
platform and implementation dependent.  The splash screen window is closed
automatically as soon as the first window is displayed by Swing/AWT (may be
also closed manually using the Java API, see below).
<P>
If your application is packaged in a jar file, you can use the
\"SplashScreen-Image\" option in a manifest file to show a splash screen.
Place the image in the jar archive and specify the path in the option.
The path should not have a leading slash.
<BR>
For example, in the <code>manifest.mf</code> file:
<PRE>
Manifest-Version: 1.0
Main-Class: Test
SplashScreen-Image: filename.gif
</PRE>
<P>
If the Java implementation provides the command-line interface and you run
your application by using the command line or a shortcut, use the Java
application launcher option to show a splash screen. The Oracle reference
implementation allows you to specify the splash screen image location with
the {@code -splash:} option.
<BR>
For example:
<PRE>
java -splash:filename.gif Test
</PRE>
The command line interface has higher precedence over the manifest
setting.
<p>
The splash screen will be displayed as faithfully as possible to present the
whole splash screen image given the limitations of the target platform and
display.
<p>
It is implied that the specified image is presented on the screen \"as is\",
i.e. preserving the exact color values as specified in the image file. Under
certain circumstances, though, the presented image may differ, e.g. when
applying color dithering to present a 32 bits per pixel (bpp) image on a 16
or 8 bpp screen. The native platform display configuration may also affect
the colors of the displayed image (e.g.  color profiles, etc.)
<p>
The {@code SplashScreen} class provides the API for controlling the splash
screen. This class may be used to close the splash screen, change the splash
screen image, get the splash screen native window position/size, and paint
in the splash screen. It cannot be used to create the splash screen. You
should use the options provided by the Java implementation for that.
<p>
This class cannot be instantiated. Only a single instance of this class
can exist, and it may be obtained by using the {@link #getSplashScreen()}
static method. In case the splash screen has not been created at
application startup via the command line or manifest file option,
the <code>getSplashScreen</code> method returns <code>null</code>.

@author Oleg Semenov
@since 1.6
"
      operation 6331266 "SplashScreen"
	package explicit_return_type ""
	nparams 1
	  param in name "ptr" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6331394 "getSplashScreen"
	class_operation public return_type class_ref 876034 // SplashScreen
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code SplashScreen} object used for
Java startup splash screen control on systems that support display.

@throws UnsupportedOperationException if the splash screen feature is not
        supported by the current toolkit
@throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}
        returns true
@return the {@link SplashScreen} instance, or <code>null</code> if there is
        none or it has already been closed
"
      end

      operation 6331522 "setImageURL"
	public explicit_return_type "void"
	nparams 1
	  param inout name "imageURL" type class_ref 243458 // URL
	nexceptions 3
	  exception class_ref 521346 // NullPointerException
	  exception class_ref 146818 // IOException
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the splash screen image. The new image is loaded from the
specified URL; GIF, JPEG and PNG image formats are supported.
The method returns after the image has finished loading and the window
has been updated.
The splash screen window is resized according to the size of
the image and is centered on the screen.

@param imageURL the non-<code>null</code> URL for the new
       splash screen image
@throws NullPointerException if {@code imageURL} is <code>null</code>
@throws IOException if there was an error while loading the image
@throws IllegalStateException if the splash screen has already been
        closed
"
      end

      operation 6331650 "checkVisible"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6331778 "getImageURL"
	public return_type class_ref 243458 // URL
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current splash screen image.

@return URL for the current splash screen image file
@throws IllegalStateException if the splash screen has already been closed
"
      end

      operation 6331906 "getBounds"
	public return_type class_ref 314114 // Rectangle
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bounds of the splash screen window as a {@link Rectangle}.
This may be useful if, for example, you want to replace the splash
screen with your window at the same location.
<p>
You cannot control the size or position of the splash screen.
The splash screen size is adjusted automatically when the image changes.
<p>
The image may contain transparent areas, and thus the reported bounds may
be larger than the visible splash screen image on the screen.

@return a {@code Rectangle} containing the splash screen bounds
@throws IllegalStateException if the splash screen has already been closed
"
      end

      operation 6332034 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the splash screen window as a {@link Dimension}.
This may be useful if, for example,
you want to draw on the splash screen overlay surface.
<p>
You cannot control the size or position of the splash screen.
The splash screen size is adjusted automatically when the image changes.
<p>
The image may contain transparent areas, and thus the reported size may
be larger than the visible splash screen image on the screen.

@return a {@link Dimension} object indicating the splash screen size
@throws IllegalStateException if the splash screen has already been closed
"
      end

      operation 6332162 "createGraphics"
	public return_type class_ref 338178 // Graphics2D
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a graphics context (as a {@link Graphics2D} object) for the splash
screen overlay image, which allows you to draw over the splash screen.
Note that you do not draw on the main image but on the image that is
displayed over the main image using alpha blending. Also note that drawing
on the overlay image does not necessarily update the contents of splash
screen window. You should call {@code update()} on the
<code>SplashScreen</code> when you want the splash screen to be
updated immediately.
<p>
The pixel (0, 0) in the coordinate space of the graphics context
corresponds to the origin of the splash screen native window bounds (see
{@link #getBounds()}).

@return graphics context for the splash screen overlay surface
@throws IllegalStateException if the splash screen has already been closed
"
      end

      operation 6332290 "update"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the splash window with current contents of the overlay image.

@throws IllegalStateException if the overlay image does not exist;
        for example, if {@code createGraphics} has never been called,
        or if the splash screen has already been closed
"
      end

      operation 6332418 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 254850 // IllegalStateException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hides the splash screen, closes the window, and releases all associated
resources.

@throws IllegalStateException if the splash screen has already been closed
"
      end

      operation 6332546 "markClosed"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6332674 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the splash screen is visible. The splash screen may
be hidden using {@link #close()}, it is also hidden automatically when
the first AWT/Swing window is made visible.
<p>
Note that the native platform may delay presenting the splash screen
native window on the screen. The return value of {@code true} for this
method only guarantees that the conditions to hide the splash screen
window have not occurred yet.

@return true if the splash screen is visible (has not been closed yet),
        false otherwise
"
      end

      classrelation 2974594 // image (<unidirectional association>)
	relation 2974594 --->
	  a role_name "image" private
	    comment " overlay image"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2974594 // image (<unidirectional association>)
	  b parent class_ref 311554 // BufferedImage
      end

      attribute 1426306 "splashPtr"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " pointer to native Splash structure"
      end

      attribute 1426434 "wasClosed"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2974722 // imageURL (<unidirectional association>)
	relation 2974722 --->
	  a role_name "imageURL" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2974722 // imageURL (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 2974850 // theInstance (<unidirectional association>)
	relation 2974850 --->
	  a role_name "theInstance" init_value " null" class_relation private
	    comment "
The instance reference for the singleton.
(<code>null</code> if no instance exists yet.)

@see #getSplashScreen
@see #close

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2974850 // theInstance (<unidirectional association>)
	  b parent class_ref 876034 // SplashScreen
      end

      attribute 1426562 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value " PlatformLogger.getLogger(\"java.awt.SplashScreen\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6332802 "_update"
	class_operation private explicit_return_type "void"
	nparams 7
	  param in name "splashPtr" explicit_type "long"
	  param inout name "data" explicit_type "int"
	multiplicity "[]"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "scanlineStride" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws};
s"
	
	
	
      end

      operation 6332930 "_isVisible"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "splashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6333058 "_getBounds"
	class_operation private return_type class_ref 314114 // Rectangle
	nparams 1
	  param in name "splashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6333186 "_getInstance"
	class_operation private explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 6333314 "_close"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "splashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6333442 "_getImageFileName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "splashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6333570 "_getImageJarName"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "SplashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 6333698 "_setImageData"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "SplashPtr" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws};
s"
	
	
	
      end

      operation 6333826 "_getScaleFactor"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "SplashPtr" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 876162 "SystemColor"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class to encapsulate symbolic colors representing the color of
native GUI objects on a system.  For systems which support the dynamic
update of the system colors (when the user changes the colors)
the actual RGB values of these symbolic colors will also change
dynamically.  In order to compare the \"current\" RGB value of a
<code>SystemColor</code> object with a non-symbolic Color object,
<code>getRGB</code> should be used rather than <code>equals</code>.
<p>
Note that the way in which these system colors are applied to GUI objects
may vary slightly from platform to platform since GUI objects may be
rendered differently on each platform.
<p>
System color values may also be available through the <code>getDesktopProperty</code>
method on <code>java.awt.Toolkit</code>.

@see Toolkit#getDesktopProperty

@author      Carl Quinn
@author      Amy Fowler
"
      classrelation 2974978 // <generalisation>
	relation 2974978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2974978 // <generalisation>
	  b parent class_ref 323458 // Color
      end

      classrelation 2975106 // <realization>
	relation 2975106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2975106 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1426690 "DESKTOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #desktop} system color.
@see SystemColor#desktop

"
      end

      attribute 1426818 "ACTIVE_CAPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #activeCaption} system color.
@see SystemColor#activeCaption

"
      end

      attribute 1426946 "ACTIVE_CAPTION_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #activeCaptionText} system color.
@see SystemColor#activeCaptionText

"
      end

      attribute 1427074 "ACTIVE_CAPTION_BORDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #activeCaptionBorder} system color.
@see SystemColor#activeCaptionBorder

"
      end

      attribute 1427202 "INACTIVE_CAPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #inactiveCaption} system color.
@see SystemColor#inactiveCaption

"
      end

      attribute 1427330 "INACTIVE_CAPTION_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #inactiveCaptionText} system color.
@see SystemColor#inactiveCaptionText

"
      end

      attribute 1427458 "INACTIVE_CAPTION_BORDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #inactiveCaptionBorder} system color.
@see SystemColor#inactiveCaptionBorder

"
      end

      attribute 1427586 "WINDOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #window} system color.
@see SystemColor#window

"
      end

      attribute 1427714 "WINDOW_BORDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #windowBorder} system color.
@see SystemColor#windowBorder

"
      end

      attribute 1427842 "WINDOW_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #windowText} system color.
@see SystemColor#windowText

"
      end

      attribute 1427970 "MENU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #menu} system color.
@see SystemColor#menu

"
      end

      attribute 1428098 "MENU_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #menuText} system color.
@see SystemColor#menuText

"
      end

      attribute 1428226 "TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #text} system color.
@see SystemColor#text

"
      end

      attribute 1428354 "TEXT_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #textText} system color.
@see SystemColor#textText

"
      end

      attribute 1428482 "TEXT_HIGHLIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #textHighlight} system color.
@see SystemColor#textHighlight

"
      end

      attribute 1428610 "TEXT_HIGHLIGHT_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #textHighlightText} system color.
@see SystemColor#textHighlightText

"
      end

      attribute 1428738 "TEXT_INACTIVE_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #textInactiveText} system color.
@see SystemColor#textInactiveText

"
      end

      attribute 1428866 "CONTROL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #control} system color.
@see SystemColor#control

"
      end

      attribute 1428994 "CONTROL_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #controlText} system color.
@see SystemColor#controlText

"
      end

      attribute 1429122 "CONTROL_HIGHLIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #controlHighlight} system color.
@see SystemColor#controlHighlight

"
      end

      attribute 1429250 "CONTROL_LT_HIGHLIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #controlLtHighlight} system color.
@see SystemColor#controlLtHighlight

"
      end

      attribute 1429378 "CONTROL_SHADOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #controlShadow} system color.
@see SystemColor#controlShadow

"
      end

      attribute 1429506 "CONTROL_DK_SHADOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #controlDkShadow} system color.
@see SystemColor#controlDkShadow

"
      end

      attribute 1429634 "SCROLLBAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #scrollbar} system color.
@see SystemColor#scrollbar

"
      end

      attribute 1429762 "INFO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #info} system color.
@see SystemColor#info

"
      end

      attribute 1429890 "INFO_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The array index for the
{@link #infoText} system color.
@see SystemColor#infoText

"
      end

      attribute 1430018 "NUM_COLORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of system colors in the array.

"
      end

      attribute 1430146 "systemColors"
	class_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        0xFF005C5C,  // desktop = new Color(0,92,92);
        0xFF000080,  // activeCaption = new Color(0,0,128);
        0xFFFFFFFF,  // activeCaptionText = Color.white;
        0xFFC0C0C0,  // activeCaptionBorder = Color.lightGray;
        0xFF808080,  // inactiveCaption = Color.gray;
        0xFFC0C0C0,  // inactiveCaptionText = Color.lightGray;
        0xFFC0C0C0,  // inactiveCaptionBorder = Color.lightGray;
        0xFFFFFFFF,  // window = Color.white;
        0xFF000000,  // windowBorder = Color.black;
        0xFF000000,  // windowText = Color.black;
        0xFFC0C0C0,  // menu = Color.lightGray;
        0xFF000000,  // menuText = Color.black;
        0xFFC0C0C0,  // text = Color.lightGray;
        0xFF000000,  // textText = Color.black;
        0xFF000080,  // textHighlight = new Color(0,0,128);
        0xFFFFFFFF,  // textHighlightText = Color.white;
        0xFF808080,  // textInactiveText = Color.gray;
        0xFFC0C0C0,  // control = Color.lightGray;
        0xFF000000,  // controlText = Color.black;
        0xFFFFFFFF,  // controlHighlight = Color.white;
        0xFFE0E0E0,  // controlLtHighlight = new Color(224,224,224);
        0xFF808080,  // controlShadow = Color.gray;
        0xFF000000,  // controlDkShadow = Color.black;
        0xFFE0E0E0,  // scrollbar = new Color(224,224,224);
        0xFFE0E000,  // info = new Color(224,224,0);
        0xFF000000,  // infoText = Color.black;
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "System colors with default initial values, overwritten by toolkit if
system values differ and are available.
Should put array initialization above first field that is using
SystemColor constructor to initialize.

"
      end

      classrelation 2975234 // desktop (<unidirectional association>)
	relation 2975234 --->
	  a role_name "desktop" init_value " new SystemColor((byte)DESKTOP)" class_relation const_relation public
	    comment "
The color rendered for the background of the desktop.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975234 // desktop (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2975362 // activeCaption (<unidirectional association>)
	relation 2975362 --->
	  a role_name "activeCaption" init_value " new SystemColor((byte)ACTIVE_CAPTION)" class_relation const_relation public
	    comment "
The color rendered for the window-title background of the currently active window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975362 // activeCaption (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2975490 // activeCaptionText (<unidirectional association>)
	relation 2975490 --->
	  a role_name "activeCaptionText" init_value " new SystemColor((byte)ACTIVE_CAPTION_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the window-title text of the currently active window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975490 // activeCaptionText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2975618 // activeCaptionBorder (<unidirectional association>)
	relation 2975618 --->
	  a role_name "activeCaptionBorder" init_value " new SystemColor((byte)ACTIVE_CAPTION_BORDER)" class_relation const_relation public
	    comment "
The color rendered for the border around the currently active window.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975618 // activeCaptionBorder (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2975746 // inactiveCaption (<unidirectional association>)
	relation 2975746 --->
	  a role_name "inactiveCaption" init_value " new SystemColor((byte)INACTIVE_CAPTION)" class_relation const_relation public
	    comment "
The color rendered for the window-title background of inactive windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975746 // inactiveCaption (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2975874 // inactiveCaptionText (<unidirectional association>)
	relation 2975874 --->
	  a role_name "inactiveCaptionText" init_value " new SystemColor((byte)INACTIVE_CAPTION_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the window-title text of inactive windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2975874 // inactiveCaptionText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976002 // inactiveCaptionBorder (<unidirectional association>)
	relation 2976002 --->
	  a role_name "inactiveCaptionBorder" init_value " new SystemColor((byte)INACTIVE_CAPTION_BORDER)" class_relation const_relation public
	    comment "
The color rendered for the border around inactive windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976002 // inactiveCaptionBorder (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976130 // window (<unidirectional association>)
	relation 2976130 --->
	  a role_name "window" init_value " new SystemColor((byte)WINDOW)" class_relation const_relation public
	    comment "
The color rendered for the background of interior regions inside windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976130 // window (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976258 // windowBorder (<unidirectional association>)
	relation 2976258 --->
	  a role_name "windowBorder" init_value " new SystemColor((byte)WINDOW_BORDER)" class_relation const_relation public
	    comment "
The color rendered for the border around interior regions inside windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976258 // windowBorder (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976386 // windowText (<unidirectional association>)
	relation 2976386 --->
	  a role_name "windowText" init_value " new SystemColor((byte)WINDOW_TEXT)" class_relation const_relation public
	    comment "
The color rendered for text of interior regions inside windows.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976386 // windowText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976514 // menu (<unidirectional association>)
	relation 2976514 --->
	  a role_name "menu" init_value " new SystemColor((byte)MENU)" class_relation const_relation public
	    comment "
The color rendered for the background of menus.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976514 // menu (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976642 // menuText (<unidirectional association>)
	relation 2976642 --->
	  a role_name "menuText" init_value " new SystemColor((byte)MENU_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of menus.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976642 // menuText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976770 // text (<unidirectional association>)
	relation 2976770 --->
	  a role_name "text" init_value " new SystemColor((byte)TEXT)" class_relation const_relation public
	    comment "
The color rendered for the background of text control objects, such as
textfields and comboboxes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976770 // text (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2976898 // textText (<unidirectional association>)
	relation 2976898 --->
	  a role_name "textText" init_value " new SystemColor((byte)TEXT_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of text control objects, such as textfields
and comboboxes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2976898 // textText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977026 // textHighlight (<unidirectional association>)
	relation 2977026 --->
	  a role_name "textHighlight" init_value " new SystemColor((byte)TEXT_HIGHLIGHT)" class_relation const_relation public
	    comment "
The color rendered for the background of selected items, such as in menus,
comboboxes, and text.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977026 // textHighlight (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977154 // textHighlightText (<unidirectional association>)
	relation 2977154 --->
	  a role_name "textHighlightText" init_value " new SystemColor((byte)TEXT_HIGHLIGHT_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of selected items, such as in menus, comboboxes,
and text.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977154 // textHighlightText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977282 // textInactiveText (<unidirectional association>)
	relation 2977282 --->
	  a role_name "textInactiveText" init_value " new SystemColor((byte)TEXT_INACTIVE_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of inactive items, such as in menus.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977282 // textInactiveText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977410 // control (<unidirectional association>)
	relation 2977410 --->
	  a role_name "control" init_value " new SystemColor((byte)CONTROL)" class_relation const_relation public
	    comment "
The color rendered for the background of control panels and control objects,
such as pushbuttons.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977410 // control (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977538 // controlText (<unidirectional association>)
	relation 2977538 --->
	  a role_name "controlText" init_value " new SystemColor((byte)CONTROL_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of control panels and control objects,
such as pushbuttons.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977538 // controlText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977666 // controlHighlight (<unidirectional association>)
	relation 2977666 --->
	  a role_name "controlHighlight" init_value " new SystemColor((byte)CONTROL_HIGHLIGHT)" class_relation const_relation public
	    comment "
The color rendered for light areas of 3D control objects, such as pushbuttons.
This color is typically derived from the <code>control</code> background color
to provide a 3D effect.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977666 // controlHighlight (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977794 // controlLtHighlight (<unidirectional association>)
	relation 2977794 --->
	  a role_name "controlLtHighlight" init_value " new SystemColor((byte)CONTROL_LT_HIGHLIGHT)" class_relation const_relation public
	    comment "
The color rendered for highlight areas of 3D control objects, such as pushbuttons.
This color is typically derived from the <code>control</code> background color
to provide a 3D effect.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977794 // controlLtHighlight (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2977922 // controlShadow (<unidirectional association>)
	relation 2977922 --->
	  a role_name "controlShadow" init_value " new SystemColor((byte)CONTROL_SHADOW)" class_relation const_relation public
	    comment "
The color rendered for shadow areas of 3D control objects, such as pushbuttons.
This color is typically derived from the <code>control</code> background color
to provide a 3D effect.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2977922 // controlShadow (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2978050 // controlDkShadow (<unidirectional association>)
	relation 2978050 --->
	  a role_name "controlDkShadow" init_value " new SystemColor((byte)CONTROL_DK_SHADOW)" class_relation const_relation public
	    comment "
The color rendered for dark shadow areas on 3D control objects, such as pushbuttons.
This color is typically derived from the <code>control</code> background color
to provide a 3D effect.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978050 // controlDkShadow (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2978178 // scrollbar (<unidirectional association>)
	relation 2978178 --->
	  a role_name "scrollbar" init_value " new SystemColor((byte)SCROLLBAR)" class_relation const_relation public
	    comment "
The color rendered for the background of scrollbars.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978178 // scrollbar (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2978306 // info (<unidirectional association>)
	relation 2978306 --->
	  a role_name "info" init_value " new SystemColor((byte)INFO)" class_relation const_relation public
	    comment "
The color rendered for the background of tooltips or spot help.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978306 // info (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      classrelation 2978434 // infoText (<unidirectional association>)
	relation 2978434 --->
	  a role_name "infoText" init_value " new SystemColor((byte)INFO_TEXT)" class_relation const_relation public
	    comment "
The color rendered for the text of tooltips or spot help.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978434 // infoText (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      attribute 1430274 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4503142729533789064L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID.

"
      end

      attribute 1430402 "index"
	private explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An index into either array of SystemColor objects or values.

"
      end

      classrelation 2978562 // systemColorObjects (<unidirectional association>)
	relation 2978562 --->
	  a role_name "systemColorObjects" multiplicity "[]" init_value " {
        SystemColor.desktop,
        SystemColor.activeCaption,
        SystemColor.activeCaptionText,
        SystemColor.activeCaptionBorder,
        SystemColor.inactiveCaption,
        SystemColor.inactiveCaptionText,
        SystemColor.inactiveCaptionBorder,
        SystemColor.window,
        SystemColor.windowBorder,
        SystemColor.windowText,
        SystemColor.menu,
        SystemColor.menuText,
        SystemColor.text,
        SystemColor.textText,
        SystemColor.textHighlight,
        SystemColor.textHighlightText,
        SystemColor.textInactiveText,
        SystemColor.control,
        SystemColor.controlText,
        SystemColor.controlHighlight,
        SystemColor.controlLtHighlight,
        SystemColor.controlShadow,
        SystemColor.controlDkShadow,
        SystemColor.scrollbar,
        SystemColor.info,
        SystemColor.infoText
    }" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2978562 // systemColorObjects (<unidirectional association>)
	  b parent class_ref 876162 // SystemColor
      end

      extra_member 151810 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setSystemColorAccessor(SystemColor::updateSystemColors);
        updateSystemColors();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6333954 "updateSystemColors"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from {@code <init>} and toolkit to update the above systemColors cache.
"
      end

      operation 6334082 "SystemColor"
	private explicit_return_type ""
	nparams 1
	  param in name "index" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a symbolic color that represents an indexed entry into system
color cache. Used by above static system colors.
"
      end

      operation 6334210 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>Color</code>'s values.
This method is intended to be used only for debugging purposes,
and the content and format of the returned string may vary between
implementations.
The returned string may be empty but may not be <code>null</code>.

@return  a string representation of this <code>Color</code>
"
      end

      operation 6334338 "readResolve"
	private return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The design of the {@code SystemColor} class assumes that
the {@code SystemColor} object instances stored in the
static final fields above are the only instances that can
be used by developers.
This method helps maintain those limits on instantiation
by using the index stored in the value field of the
serialized form of the object to replace the serialized
object with the equivalent static object constant field
of {@code SystemColor}.
See the {@link #writeReplace} method for more information
on the serialized form of these objects.
@return one of the {@code SystemColor} static object
        fields that refers to the same system color.
"
      end

      operation 6334466 "writeReplace"
	private return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 261506 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a specialized version of the {@code SystemColor}
object for writing to the serialized stream.
@serialData
The value field of a serialized {@code SystemColor} object
contains the array index of the system color instead of the
rgb data for the system color.
This index is used by the {@link #readResolve} method to
resolve the deserialized objects back to the original
static constant versions to ensure unique instances of
each {@code SystemColor} object.
@return a proxy {@code SystemColor} object with its value
        replaced by the corresponding system color index.
"
      end
    end

    class 876290 "SystemTray"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>SystemTray</code> class represents the system tray for a
desktop.  On Microsoft Windows it is referred to as the \"Taskbar
Status Area\", on Gnome it is referred to as the \"Notification
Area\", on KDE it is referred to as the \"System Tray\".  The system
tray is shared by all applications running on the desktop.

<p> On some platforms the system tray may not be present or may not
be supported, in this case {@link SystemTray#getSystemTray()}
throws {@link UnsupportedOperationException}.  To detect whether the
system tray is supported, use {@link SystemTray#isSupported}.

<p>The <code>SystemTray</code> may contain one or more {@link
TrayIcon TrayIcons}, which are added to the tray using the {@link
#add} method, and removed when no longer needed, using the
{@link #remove}.  <code>TrayIcon</code> consists of an
image, a popup menu and a set of associated listeners.  Please see
the {@link TrayIcon} class for details.

<p>Every Java application has a single <code>SystemTray</code>
instance that allows the app to interface with the system tray of
the desktop while the app is running.  The <code>SystemTray</code>
instance can be obtained from the {@link #getSystemTray} method.
An application may not create its own instance of
<code>SystemTray</code>.

<p>The following code snippet demonstrates how to access
and customize the system tray:
<pre>
<code>
    {@link TrayIcon} trayIcon = null;
    if (SystemTray.isSupported()) {
        // get the SystemTray instance
        SystemTray tray = SystemTray.{@link #getSystemTray};
        // load an image
        {@link java.awt.Image} image = {@link java.awt.Toolkit#getImage(String) Toolkit.getDefaultToolkit().getImage}(...);
        // create a action listener to listen for default action executed on the tray icon
        {@link java.awt.event.ActionListener} listener = new {@link java.awt.event.ActionListener ActionListener}() {
            public void {@link java.awt.event.ActionListener#actionPerformed actionPerformed}({@link java.awt.event.ActionEvent} e) {
                // execute default action of the application
                // ...
            }
        };
        // create a popup menu
        {@link java.awt.PopupMenu} popup = new {@link java.awt.PopupMenu#PopupMenu PopupMenu}();
        // create menu item for the default action
        MenuItem defaultItem = new MenuItem(...);
        defaultItem.addActionListener(listener);
        popup.add(defaultItem);
        /// ... add other items
        // construct a TrayIcon
        trayIcon = new {@link TrayIcon#TrayIcon(java.awt.Image, String, java.awt.PopupMenu) TrayIcon}(image, \"Tray Demo\", popup);
        // set the TrayIcon properties
        trayIcon.{@link TrayIcon#addActionListener(java.awt.event.ActionListener) addActionListener}(listener);
        // ...
        // add the tray image
        try {
            tray.{@link SystemTray#add(TrayIcon) add}(trayIcon);
        } catch (AWTException e) {
            System.err.println(e);
        }
        // ...
    } else {
        // disable tray option in your application or
        // perform other actions
        ...
    }
    // ...
    // some time later
    // the application state has changed - update the image
    if (trayIcon != null) {
        trayIcon.{@link TrayIcon#setImage(java.awt.Image) setImage}(updatedImage);
    }
    // ...
</code>
</pre>

@since 1.6
@see TrayIcon

@author Bino George
@author Denis Mikhalkin
@author Sharon Zakhour
@author Anton Tarasov
"
      classrelation 2978690 // systemTray (<unidirectional association>)
	relation 2978690 --->
	  a role_name "systemTray" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978690 // systemTray (<unidirectional association>)
	  b parent class_ref 876290 // SystemTray
      end

      attribute 1430530 "currentIconID"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " each TrayIcon added gets a unique ID"
      end

      classrelation 2978818 // peer (<unidirectional association>)
	relation 2978818 --->
	  a role_name "peer" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2978818 // peer (<unidirectional association>)
	  b parent class_ref 876418 // SystemTrayPeer
      end

      classrelation 2978946 // EMPTY_TRAY_ARRAY (<unidirectional association>)
	relation 2978946 --->
	  a role_name "EMPTY_TRAY_ARRAY" multiplicity "[]" init_value " new TrayIcon[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2978946 // EMPTY_TRAY_ARRAY (<unidirectional association>)
	  b parent class_ref 876546 // TrayIcon
      end

      extra_member 151938 "initialization"
	
	cpp "" ""
	java "  static {
        AWTAccessor.setSystemTrayAccessor(
            new AWTAccessor.SystemTrayAccessor() {
                public void firePropertyChange(SystemTray tray,
                                               String propertyName,
                                               Object oldValue,
                                               Object newValue) {
                    tray.firePropertyChange(propertyName, oldValue, newValue);
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6334594 "SystemTray"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private <code>SystemTray</code> constructor.

"
      end

      operation 6334722 "getSystemTray"
	class_operation public return_type class_ref 876290 // SystemTray
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>SystemTray</code> instance that represents the
desktop's tray area.  This always returns the same instance per
application.  On some platforms the system tray may not be
supported.  You may use the {@link #isSupported} method to
check if the system tray is supported.

<p>If a SecurityManager is installed, the AWTPermission
{@code accessSystemTray} must be granted in order to get the
{@code SystemTray} instance. Otherwise this method will throw a
SecurityException.

@return the <code>SystemTray</code> instance that represents
the desktop's tray area
@throws UnsupportedOperationException if the system tray isn't
supported by the current platform
@throws HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>
@throws SecurityException if {@code accessSystemTray} permission
is not granted
@see #add(TrayIcon)
@see TrayIcon
@see #isSupported
@see SecurityManager#checkPermission
@see AWTPermission
"
      end

      operation 6334850 "isSupported"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the system tray is supported on the current
platform.  In addition to displaying the tray icon, minimal
system tray support includes either a popup menu (see {@link
TrayIcon#setPopupMenu(PopupMenu)}) or an action event (see
{@link TrayIcon#addActionListener(ActionListener)}).

<p>Developers should not assume that all of the system tray
functionality is supported.  To guarantee that the tray icon's
default action is always accessible, add the default action to
both the action listener and the popup menu.  See the {@link
SystemTray example} for an example of how to do this.

<p><b>Note</b>: When implementing <code>SystemTray</code> and
<code>TrayIcon</code> it is <em>strongly recommended</em> that
you assign different gestures to the popup menu and an action
event.  Overloading a gesture for both purposes is confusing
and may prevent the user from accessing one or the other.

@see #getSystemTray
@return <code>false</code> if no system tray access is supported; this
method returns <code>true</code> if the minimal system tray access is
supported but does not guarantee that all system tray
functionality is supported for the current platform
"
      end

      operation 6334978 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "trayIcon" type class_ref 876546 // TrayIcon
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a <code>TrayIcon</code> to the <code>SystemTray</code>.
The tray icon becomes visible in the system tray once it is
added.  The order in which icons are displayed in a tray is not
specified - it is platform and implementation-dependent.

<p> All icons added by the application are automatically
removed from the <code>SystemTray</code> upon application exit
and also when the desktop system tray becomes unavailable.

@param trayIcon the <code>TrayIcon</code> to be added
@throws NullPointerException if <code>trayIcon</code> is
<code>null</code>
@throws IllegalArgumentException if the same instance of
a <code>TrayIcon</code> is added more than once
@throws AWTException if the desktop system tray is missing
@see #remove(TrayIcon)
@see #getSystemTray
@see TrayIcon
@see java.awt.Image
"
      end

      operation 6335106 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "trayIcon" type class_ref 876546 // TrayIcon
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>TrayIcon</code> from the
<code>SystemTray</code>.

<p> All icons added by the application are automatically
removed from the <code>SystemTray</code> upon application exit
and also when the desktop system tray becomes unavailable.

<p> If <code>trayIcon</code> is <code>null</code> or was not
added to the system tray, no exception is thrown and no action
is performed.

@param trayIcon the <code>TrayIcon</code> to be removed
@see #add(TrayIcon)
@see TrayIcon
"
      end

      operation 6335234 "getTrayIcons"
	public return_type class_ref 876546 // TrayIcon
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all icons added to the tray by this
application.  You can't access the icons added by another
application.  Some browsers partition applets in different
code bases into separate contexts, and establish walls between
these contexts.  In such a scenario, only the tray icons added
from this context will be returned.

<p> The returned array is a copy of the actual array and may be
modified in any way without affecting the system tray.  To
remove a <code>TrayIcon</code> from the
<code>SystemTray</code>, use the {@link
#remove(TrayIcon)} method.

@return an array of all tray icons added to this tray, or an
empty array if none has been added
@see #add(TrayIcon)
@see TrayIcon
"
      end

      operation 6335362 "getTrayIconSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size, in pixels, of the space that a tray icon will
occupy in the system tray.  Developers may use this methods to
acquire the preferred size for the image property of a tray icon
before it is created.  For convenience, there is a similar
method {@link TrayIcon#getSize} in the <code>TrayIcon</code> class.

@return the default size of a tray icon, in pixels
@see TrayIcon#setImageAutoSize(boolean)
@see java.awt.Image
@see TrayIcon#getSize()
"
      end

      operation 6335490 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@code PropertyChangeListener} to the list of listeners for the
specific property. The following properties are currently supported:

<table border=1 summary=\"SystemTray properties\">
<tr>
   <th>Property</th>
   <th>Description</th>
</tr>
<tr>
   <td>{@code trayIcons}</td>
   <td>The {@code SystemTray}'s array of {@code TrayIcon} objects.
       The array is accessed via the {@link #getTrayIcons} method.<br>
       This property is changed when a tray icon is added to (or removed
       from) the system tray.<br> For example, this property is changed
       when the system tray becomes unavailable on the desktop<br>
       and the tray icons are automatically removed.</td>
</tr>
<tr>
   <td>{@code systemTray}</td>
   <td>This property contains {@code SystemTray} instance when the system tray
       is available or <code>null</code> otherwise.<br> This property is changed
       when the system tray becomes available or unavailable on the desktop.<br>
       The property is accessed by the {@link #getSystemTray} method.</td>
</tr>
</table>
<p>
The {@code listener} listens to property changes only in this context.
<p>
If {@code listener} is {@code null}, no exception is thrown
and no action is performed.

@param propertyName the specified property
@param listener the property change listener to be added

@see #removePropertyChangeListener
@see #getPropertyChangeListeners
"
      end

      operation 6335618 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a {@code PropertyChangeListener} from the listener list
for a specific property.
<p>
The {@code PropertyChangeListener} must be from this context.
<p>
If {@code propertyName} or {@code listener} is {@code null} or invalid,
no exception is thrown and no action is taken.

@param propertyName the specified property
@param listener the PropertyChangeListener to be removed

@see #addPropertyChangeListener
@see #getPropertyChangeListeners
"
      end

      operation 6335746 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 1
	  param inout name "propertyName" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the listeners that have been associated
with the named property.
<p>
Only the listeners in this context are returned.

@param propertyName the specified property
@return all of the {@code PropertyChangeListener}s associated with
        the named property; if no such listeners have been added or
        if {@code propertyName} is {@code null} or invalid, an empty
        array is returned

@see #addPropertyChangeListener
@see #removePropertyChangeListener
"
      end

      operation 6335874 "firePropertyChange"
	private explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ***************************************************************
 ***************************************************************

Support for reporting bound property changes for Object properties.
This method can be called when a bound property has changed and it will
send the appropriate PropertyChangeEvent to any registered
PropertyChangeListeners.

@param propertyName the property whose value has changed
@param oldValue the property's previous value
@param newValue the property's new value
"
      end

      operation 6336002 "getCurrentChangeSupport"
	private return_type class_ref 343042 // PropertyChangeSupport
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current PropertyChangeSupport instance for the
calling thread's context.

@return this thread's context's PropertyChangeSupport
"
      end

      operation 6336130 "addNotify"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6336258 "checkSystemTrayAllowed"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6336386 "initializeSystemTrayIfNeeded"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 876546 "TrayIcon"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>TrayIcon</code> object represents a tray icon that can be
added to the {@link SystemTray system tray}. A
<code>TrayIcon</code> can have a tooltip (text), an image, a popup
menu, and a set of listeners associated with it.

<p>A <code>TrayIcon</code> can generate various {@link MouseEvent
MouseEvents} and supports adding corresponding listeners to receive
notification of these events.  <code>TrayIcon</code> processes some
of the events by itself.  For example, by default, when the
right-mouse click is performed on the <code>TrayIcon</code> it
displays the specified popup menu.  When the mouse hovers
over the <code>TrayIcon</code> the tooltip is displayed.

<p><strong>Note:</strong> When the <code>MouseEvent</code> is
dispatched to its registered listeners its <code>component</code>
property will be set to <code>null</code>.  (See {@link
java.awt.event.ComponentEvent#getComponent}) The
<code>source</code> property will be set to this
<code>TrayIcon</code>. (See {@link
java.util.EventObject#getSource})

<p><b>Note:</b> A well-behaved {@link TrayIcon} implementation
will assign different gestures to showing a popup menu and
selecting a tray icon.

<p>A <code>TrayIcon</code> can generate an {@link ActionEvent
ActionEvent}.  On some platforms, this occurs when the user selects
the tray icon using either the mouse or keyboard.

<p>If a SecurityManager is installed, the AWTPermission
{@code accessSystemTray} must be granted in order to create
a {@code TrayIcon}. Otherwise the constructor will throw a
SecurityException.

<p> See the {@link SystemTray} class overview for an example on how
to use the <code>TrayIcon</code> API.

@since 1.6
@see SystemTray#add
@see java.awt.event.ComponentEvent#getComponent
@see java.util.EventObject#getSource

@author Bino George
@author Denis Mikhalkin
@author Sharon Zakhour
@author Anton Tarasov
"
      classrelation 2985986 // image (<unidirectional association>)
	relation 2985986 --->
	  a role_name "image" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2985986 // image (<unidirectional association>)
	  b parent class_ref 340098 // Image
      end

      classrelation 2986114 // tooltip (<unidirectional association>)
	relation 2986114 --->
	  a role_name "tooltip" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986114 // tooltip (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2986242 // popup (<unidirectional association>)
	relation 2986242 --->
	  a role_name "popup" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986242 // popup (<unidirectional association>)
	  b parent class_ref 341378 // PopupMenu
      end

      attribute 1440770 "autosize"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1440898 "id"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2986370 // actionCommand (<unidirectional association>)
	relation 2986370 --->
	  a role_name "actionCommand" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986370 // actionCommand (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2986498 // peer (<unidirectional association>)
	relation 2986498 --->
	  a role_name "peer" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986498 // peer (<unidirectional association>)
	  b parent class_ref 882306 // TrayIconPeer
      end

      classrelation 2986626 // mouseListener (<unidirectional association>)
	relation 2986626 --->
	  a role_name "mouseListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986626 // mouseListener (<unidirectional association>)
	  b parent class_ref 342530 // MouseListener
      end

      classrelation 2986754 // mouseMotionListener (<unidirectional association>)
	relation 2986754 --->
	  a role_name "mouseMotionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986754 // mouseMotionListener (<unidirectional association>)
	  b parent class_ref 342658 // MouseMotionListener
      end

      classrelation 2986882 // actionListener (<unidirectional association>)
	relation 2986882 --->
	  a role_name "actionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2986882 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2987010 // acc (<unidirectional association>)
	relation 2987010 --->
	  a role_name "acc" init_value " AccessController.getContext()" const_relation private
	    comment "
The tray icon's AccessControlContext.

Unlike the acc in Component, this field is made final
because TrayIcon is not serializable.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987010 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      operation 6374146 "getAccessControlContext"
	package return_type class_ref 129154 // AccessControlContext
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the acc this tray icon was constructed with.
"
      end

      extra_member 152450 "initialization"
	
	cpp "" ""
	java "  static {
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }

        AWTAccessor.setTrayIconAccessor(
            new AWTAccessor.TrayIconAccessor() {
                public void addNotify(TrayIcon trayIcon) throws AWTException {
                    trayIcon.addNotify();
                }
                public void removeNotify(TrayIcon trayIcon) {
                    trayIcon.removeNotify();
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6374274 "TrayIcon"
	private explicit_return_type ""
	nparams 0
	nexceptions 3
	  exception class_ref 193538 // UnsupportedOperationException
	  exception class_ref 343554 // HeadlessException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6374402 "TrayIcon"
	public explicit_return_type ""
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>TrayIcon</code> with the specified image.

@param image the <code>Image</code> to be used
@throws IllegalArgumentException if <code>image</code> is
<code>null</code>
@throws UnsupportedOperationException if the system tray isn't
supported by the current platform
@throws HeadlessException if
{@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException if {@code accessSystemTray} permission
is not granted
@see SystemTray#add(TrayIcon)
@see TrayIcon#TrayIcon(Image, String, PopupMenu)
@see TrayIcon#TrayIcon(Image, String)
@see SecurityManager#checkPermission
@see AWTPermission
"
      end

      operation 6374530 "TrayIcon"
	public explicit_return_type ""
	nparams 2
	  param inout name "image" type class_ref 340098 // Image
	  param inout name "tooltip" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>TrayIcon</code> with the specified image and
tooltip text.

@param image the <code>Image</code> to be used
@param tooltip the string to be used as tooltip text; if the
value is <code>null</code> no tooltip is shown
@throws IllegalArgumentException if <code>image</code> is
<code>null</code>
@throws UnsupportedOperationException if the system tray isn't
supported by the current platform
@throws HeadlessException if
{@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException if {@code accessSystemTray} permission
is not granted
@see SystemTray#add(TrayIcon)
@see TrayIcon#TrayIcon(Image)
@see TrayIcon#TrayIcon(Image, String, PopupMenu)
@see SecurityManager#checkPermission
@see AWTPermission
"
      end

      operation 6374658 "TrayIcon"
	public explicit_return_type ""
	nparams 3
	  param inout name "image" type class_ref 340098 // Image
	  param inout name "tooltip" type class_ref 128130 // String
	  param inout name "popup" type class_ref 341378 // PopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>TrayIcon</code> with the specified image,
tooltip and popup menu.

@param image the <code>Image</code> to be used
@param tooltip the string to be used as tooltip text; if the
value is <code>null</code> no tooltip is shown
@param popup the menu to be used for the tray icon's popup
menu; if the value is <code>null</code> no popup menu is shown
@throws IllegalArgumentException if <code>image</code> is <code>null</code>
@throws UnsupportedOperationException if the system tray isn't
supported by the current platform
@throws HeadlessException if
{@code GraphicsEnvironment.isHeadless()} returns {@code true}
@throws SecurityException if {@code accessSystemTray} permission
is not granted
@see SystemTray#add(TrayIcon)
@see TrayIcon#TrayIcon(Image, String)
@see TrayIcon#TrayIcon(Image)
@see PopupMenu
@see MouseListener
@see #addMouseListener(MouseListener)
@see SecurityManager#checkPermission
@see AWTPermission
"
      end

      operation 6374786 "setImage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 340098 // Image
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the image for this <code>TrayIcon</code>.  The previous
tray icon image is discarded without calling the {@link
java.awt.Image#flush} method &#151; you will need to call it
manually.

<p> If the image represents an animated image, it will be
animated automatically.

<p> See the {@link #setImageAutoSize(boolean)} property for
details on the size of the displayed image.

<p> Calling this method with the same image that is currently
being used has no effect.

@throws NullPointerException if <code>image</code> is <code>null</code>
@param image the non-null <code>Image</code> to be used
@see #getImage
@see Image
@see SystemTray#add(TrayIcon)
@see TrayIcon#TrayIcon(Image, String)
"
      end

      operation 6374914 "getImage"
	public return_type class_ref 340098 // Image
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current image used for this <code>TrayIcon</code>.

@return the image
@see #setImage(Image)
@see Image
"
      end

      operation 6375042 "setPopupMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "popup" type class_ref 341378 // PopupMenu
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the popup menu for this <code>TrayIcon</code>.  If
<code>popup</code> is <code>null</code>, no popup menu will be
associated with this <code>TrayIcon</code>.

<p>Note that this <code>popup</code> must not be added to any
parent before or after it is set on the tray icon.  If you add
it to some parent, the <code>popup</code> may be removed from
that parent.

<p>The {@code popup} can be set on one {@code TrayIcon} only.
Setting the same popup on multiple {@code TrayIcon}s will cause
an {@code IllegalArgumentException}.

<p><strong>Note:</strong> Some platforms may not support
showing the user-specified popup menu component when the user
right-clicks the tray icon.  In this situation, either no menu
will be displayed or, on some systems, a native version of the
menu may be displayed.

@throws IllegalArgumentException if the {@code popup} is already
set for another {@code TrayIcon}
@param popup a <code>PopupMenu</code> or <code>null</code> to
remove any popup menu
@see #getPopupMenu
"
      end

      operation 6375170 "getPopupMenu"
	public return_type class_ref 341378 // PopupMenu
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the popup menu associated with this <code>TrayIcon</code>.

@return the popup menu or <code>null</code> if none exists
@see #setPopupMenu(PopupMenu)
"
      end

      operation 6375298 "setToolTip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "tooltip" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the tooltip string for this <code>TrayIcon</code>. The
tooltip is displayed automatically when the mouse hovers over
the icon.  Setting the tooltip to <code>null</code> removes any
tooltip text.

When displayed, the tooltip string may be truncated on some platforms;
the number of characters that may be displayed is platform-dependent.

@param tooltip the string for the tooltip; if the value is
<code>null</code> no tooltip is shown
@see #getToolTip
"
      end

      operation 6375426 "getToolTip"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the tooltip string associated with this
<code>TrayIcon</code>.

@return the tooltip string or <code>null</code> if none exists
@see #setToolTip(String)
"
      end

      operation 6375554 "setImageAutoSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "autosize" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the auto-size property.  Auto-size determines whether the
tray image is automatically sized to fit the space allocated
for the image on the tray.  By default, the auto-size property
is set to <code>false</code>.

<p> If auto-size is <code>false</code>, and the image size
doesn't match the tray icon space, the image is painted as-is
inside that space &#151; if larger than the allocated space, it will
be cropped.

<p> If auto-size is <code>true</code>, the image is stretched or shrunk to
fit the tray icon space.

@param autosize <code>true</code> to auto-size the image,
<code>false</code> otherwise
@see #isImageAutoSize
"
      end

      operation 6375682 "isImageAutoSize"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the auto-size property.

@return <code>true</code> if the image will be auto-sized,
<code>false</code> otherwise
@see #setImageAutoSize(boolean)
"
      end

      operation 6375810 "addMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified mouse listener to receive mouse events from
this <code>TrayIcon</code>.  Calling this method with a
<code>null</code> value has no effect.

<p><b>Note</b>: The {@code MouseEvent}'s coordinates (received
from the {@code TrayIcon}) are relative to the screen, not the
{@code TrayIcon}.

<p> <b>Note: </b>The <code>MOUSE_ENTERED</code> and
<code>MOUSE_EXITED</code> mouse events are not supported.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    listener the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseListener
@see      #removeMouseListener(MouseListener)
@see      #getMouseListeners
"
      end

      operation 6375938 "removeMouseListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 342530 // MouseListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified mouse listener.  Calling this method with
<code>null</code> or an invalid value has no effect.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    listener   the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseListener
@see      #addMouseListener(MouseListener)
@see      #getMouseListeners
"
      end

      operation 6376066 "getMouseListeners"
	public return_type class_ref 342530 // MouseListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the mouse listeners
registered on this <code>TrayIcon</code>.

@return all of the <code>MouseListeners</code> registered on
this <code>TrayIcon</code> or an empty array if no mouse
listeners are currently registered

@see      #addMouseListener(MouseListener)
@see      #removeMouseListener(MouseListener)
@see      java.awt.event.MouseListener
"
      end

      operation 6376194 "addMouseMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified mouse listener to receive mouse-motion
events from this <code>TrayIcon</code>.  Calling this method
with a <code>null</code> value has no effect.

<p><b>Note</b>: The {@code MouseEvent}'s coordinates (received
from the {@code TrayIcon}) are relative to the screen, not the
{@code TrayIcon}.

<p> <b>Note: </b>The <code>MOUSE_DRAGGED</code> mouse event is not supported.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    listener   the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseMotionListener
@see      #removeMouseMotionListener(MouseMotionListener)
@see      #getMouseMotionListeners
"
      end

      operation 6376322 "removeMouseMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 342658 // MouseMotionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified mouse-motion listener.  Calling this method with
<code>null</code> or an invalid value has no effect.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    listener   the mouse listener
@see      java.awt.event.MouseEvent
@see      java.awt.event.MouseMotionListener
@see      #addMouseMotionListener(MouseMotionListener)
@see      #getMouseMotionListeners
"
      end

      operation 6376450 "getMouseMotionListeners"
	public return_type class_ref 342658 // MouseMotionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the mouse-motion listeners
registered on this <code>TrayIcon</code>.

@return all of the <code>MouseInputListeners</code> registered on
this <code>TrayIcon</code> or an empty array if no mouse
listeners are currently registered

@see      #addMouseMotionListener(MouseMotionListener)
@see      #removeMouseMotionListener(MouseMotionListener)
@see      java.awt.event.MouseMotionListener
"
      end

      operation 6376578 "getActionCommand"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the command name of the action event fired by this tray icon.

@return the action command name, or <code>null</code> if none exists
@see #addActionListener(ActionListener)
@see #setActionCommand(String)
"
      end

      operation 6376706 "setActionCommand"
	public explicit_return_type "void"
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the command name for the action event fired by this tray
icon.  By default, this action command is set to
<code>null</code>.

@param command  a string used to set the tray icon's
                action command.
@see java.awt.event.ActionEvent
@see #addActionListener(ActionListener)
@see #getActionCommand
"
      end

      operation 6376834 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive
<code>ActionEvent</code>s from this <code>TrayIcon</code>.
Action events usually occur when a user selects the tray icon,
using either the mouse or keyboard.  The conditions in which
action events are generated are platform-dependent.

<p>Calling this method with a <code>null</code> value has no
effect.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param         listener the action listener
@see           #removeActionListener
@see           #getActionListeners
@see           java.awt.event.ActionListener
@see #setActionCommand(String)
"
      end

      operation 6376962 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener.  Calling this method with
<code>null</code> or an invalid value has no effect.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param    listener   the action listener
@see      java.awt.event.ActionEvent
@see      java.awt.event.ActionListener
@see      #addActionListener(ActionListener)
@see      #getActionListeners
@see #setActionCommand(String)
"
      end

      operation 6377090 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this <code>TrayIcon</code>.

@return all of the <code>ActionListeners</code> registered on
this <code>TrayIcon</code> or an empty array if no action
listeners are currently registered

@see      #addActionListener(ActionListener)
@see      #removeActionListener(ActionListener)
@see      java.awt.event.ActionListener
"
      end

      class 882434 "MessageType"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1441026 "ERROR"
	  public type class_ref 882434 // MessageType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " An error message 
"
	end

	attribute 1441154 "WARNING"
	  public type class_ref 882434 // MessageType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " A warning message 
"
	end

	attribute 1441282 "INFO"
	  public type class_ref 882434 // MessageType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " An information message 
"
	end

	attribute 1441410 "NONE"
	  public type class_ref 882434 // MessageType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Simple message "
	end
      end

      operation 6377218 "displayMessage"
	public explicit_return_type "void"
	nparams 3
	  param inout name "caption" type class_ref 128130 // String
	  param inout name "text" type class_ref 128130 // String
	  param inout name "messageType" type class_ref 882434 // MessageType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Displays a popup message near the tray icon.  The message will
disappear after a time or if the user clicks on it.  Clicking
on the message may trigger an {@code ActionEvent}.

<p>Either the caption or the text may be <code>null</code>, but an
<code>NullPointerException</code> is thrown if both are
<code>null</code>.

When displayed, the caption or text strings may be truncated on
some platforms; the number of characters that may be displayed is
platform-dependent.

<p><strong>Note:</strong> Some platforms may not support
showing a message.

@param caption the caption displayed above the text, usually in
bold; may be <code>null</code>
@param text the text displayed for the particular message; may be
<code>null</code>
@param messageType an enum indicating the message type
@throws NullPointerException if both <code>caption</code>
and <code>text</code> are <code>null</code>
"
      end

      operation 6377346 "getSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size, in pixels, of the space that the tray icon
occupies in the system tray.  For the tray icon that is not yet
added to the system tray, the returned size is equal to the
result of the {@link SystemTray#getTrayIconSize}.

@return the size of the tray icon, in pixels
@see TrayIcon#setImageAutoSize(boolean)
@see java.awt.Image
@see TrayIcon#getSize()
"
      end

      operation 6377474 "addNotify"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 344450 // AWTException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ****************************************************************
 ****************************************************************"
      end

      operation 6377602 "removeNotify"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6377730 "setID"
	package explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6377858 "getID"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6377986 "dispatchEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378114 "processEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378242 "processMouseEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378370 "processMouseMotionEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378498 "processActionEvent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378626 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end
    end

    class 876674 "TextArea"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>TextArea</code> object is a multi-line region
that displays text. It can be set to allow editing or
to be read-only.
<p>
The following image shows the appearance of a text area:
<p>
<img src=\"doc-files/TextArea-1.gif\" alt=\"A TextArea showing the word 'Hello!'\"
style=\"float:center; margin: 7px 10px;\">
<p>
This text area could be created by the following line of code:

<hr><blockquote><pre>
new TextArea(\"Hello\", 5, 40);
</pre></blockquote><hr>
<p>
@author      Sami Shaio
@since       JDK1.0
"
      classrelation 2979970 // <generalisation>
	relation 2979970 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2979970 // <generalisation>
	  b parent class_ref 876802 // TextComponent
      end

      attribute 1431938 "rows"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of rows in the <code>TextArea</code>.
This parameter will determine the text area's height.
Guaranteed to be non-negative.

@serial
@see #getRows()
@see #setRows(int)

"
      end

      attribute 1432066 "columns"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of columns in the <code>TextArea</code>.
A column is an approximate average character
width that is platform-dependent.
This parameter will determine the text area's width.
Guaranteed to be non-negative.

@serial
@see  #setColumns(int)
@see  #getColumns()

"
      end

      classrelation 2980098 // base (<unidirectional association>)
	relation 2980098 --->
	  a role_name "base" init_value " \"text\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2980098 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1432194 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1432322 "SCROLLBARS_BOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Create and display both vertical and horizontal scrollbars.
@since JDK1.1

"
      end

      attribute 1432450 "SCROLLBARS_VERTICAL_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Create and display vertical scrollbar only.
@since JDK1.1

"
      end

      attribute 1432578 "SCROLLBARS_HORIZONTAL_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Create and display horizontal scrollbar only.
@since JDK1.1

"
      end

      attribute 1432706 "SCROLLBARS_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Do not create or display any scrollbars for the text area.
@since JDK1.1

"
      end

      attribute 1432834 "scrollbarVisibility"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Determines which scrollbars are created for the
text area. It can be one of four values :
<code>SCROLLBARS_BOTH</code> = both scrollbars.<BR>
<code>SCROLLBARS_HORIZONTAL_ONLY</code> = Horizontal bar only.<BR>
<code>SCROLLBARS_VERTICAL_ONLY</code> = Vertical bar only.<BR>
<code>SCROLLBARS_NONE</code> = No scrollbars.<BR>

@serial
@see #getScrollbarVisibility()

"
      end

      classrelation 2980226 // forwardTraversalKeys (<unidirectional association>)
	relation 2980226 --->
	  a role_name "forwardTraversalKeys" class_relation private
	    comment "
Cache the Sets of forward and backward traversal keys so we need not
look them up each time.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTKeyStroke> ${name}${value};
"
	    classrelation_ref 2980226 // forwardTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 2980354 // backwardTraversalKeys (<unidirectional association>)
	relation 2980354 --->
	  a role_name "backwardTraversalKeys" class_relation private
	    comment "
Cache the Sets of forward and backward traversal keys so we need not
look them up each time.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AWTKeyStroke> ${name}${value};
"
	    classrelation_ref 2980354 // backwardTraversalKeys (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 1432962 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3692302836626095722L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6343042 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method ids
"
      end

      extra_member 152066 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
        forwardTraversalKeys = KeyboardFocusManager.initFocusTraversalKeysSet(
            \"ctrl TAB\",
            new HashSet<AWTKeyStroke>());
        backwardTraversalKeys = KeyboardFocusManager.initFocusTraversalKeysSet(
            \"ctrl shift TAB\",
            new HashSet<AWTKeyStroke>());
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6343170 "TextArea"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text area with the empty string as text.
This text area is created with scrollbar visibility equal to
{@link #SCROLLBARS_BOTH}, so both vertical and horizontal
scrollbars will be visible for this text area.
@exception HeadlessException if
   <code>GraphicsEnvironment.isHeadless</code> returns true
@see java.awt.GraphicsEnvironment#isHeadless()
"
      end

      operation 6343298 "TextArea"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text area with the specified text.
This text area is created with scrollbar visibility equal to
{@link #SCROLLBARS_BOTH}, so both vertical and horizontal
scrollbars will be visible for this text area.
@param      text       the text to be displayed; if
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed
@exception HeadlessException if
       <code>GraphicsEnvironment.isHeadless</code> returns true
@see java.awt.GraphicsEnvironment#isHeadless()
"
      end

      operation 6343426 "TextArea"
	public explicit_return_type ""
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text area with the specified number of
rows and columns and the empty string as text.
A column is an approximate average character
width that is platform-dependent.  The text area is created with
scrollbar visibility equal to {@link #SCROLLBARS_BOTH}, so both
vertical and horizontal scrollbars will be visible for this
text area.
@param rows the number of rows
@param columns the number of columns
@exception HeadlessException if
    <code>GraphicsEnvironment.isHeadless</code> returns true
@see java.awt.GraphicsEnvironment#isHeadless()
"
      end

      operation 6343554 "TextArea"
	public explicit_return_type ""
	nparams 3
	  param inout name "text" type class_ref 128130 // String
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text area with the specified text,
and with the specified number of rows and columns.
A column is an approximate average character
width that is platform-dependent.  The text area is created with
scrollbar visibility equal to {@link #SCROLLBARS_BOTH}, so both
vertical and horizontal scrollbars will be visible for this
text area.
@param      text       the text to be displayed; if
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed
@param     rows      the number of rows
@param     columns   the number of columns
@exception HeadlessException if
  <code>GraphicsEnvironment.isHeadless</code> returns true
@see java.awt.GraphicsEnvironment#isHeadless()
"
      end

      operation 6343682 "TextArea"
	public explicit_return_type ""
	nparams 4
	  param inout name "text" type class_ref 128130 // String
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	  param in name "scrollbars" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text area with the specified text,
and with the rows, columns, and scroll bar visibility
as specified.  All <code>TextArea</code> constructors defer to
this one.
<p>
The <code>TextArea</code> class defines several constants
that can be supplied as values for the
<code>scrollbars</code> argument:
<ul>
<li><code>SCROLLBARS_BOTH</code>,
<li><code>SCROLLBARS_VERTICAL_ONLY</code>,
<li><code>SCROLLBARS_HORIZONTAL_ONLY</code>,
<li><code>SCROLLBARS_NONE</code>.
</ul>
Any other value for the
<code>scrollbars</code> argument is invalid and will result in
this text area being created with scrollbar visibility equal to
the default value of {@link #SCROLLBARS_BOTH}.
@param      text       the text to be displayed; if
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed
@param      rows       the number of rows; if
            <code>rows</code> is less than <code>0</code>,
            <code>rows</code> is set to <code>0</code>
@param      columns    the number of columns; if
            <code>columns</code> is less than <code>0</code>,
            <code>columns</code> is set to <code>0</code>
@param      scrollbars  a constant that determines what
            scrollbars are created to view the text area
@since      JDK1.1
@exception HeadlessException if
   <code>GraphicsEnvironment.isHeadless</code> returns true
@see java.awt.GraphicsEnvironment#isHeadless()
"
      end

      operation 6343810 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by <code>getName</code>
when the name is <code>null</code>.
"
      end

      operation 6343938 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the <code>TextArea</code>'s peer.  The peer allows us to modify
the appearance of the <code>TextArea</code> without changing any of its
functionality.
"
      end

      operation 6344066 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified text at the specified position
in this text area.
<p>Note that passing <code>null</code> or inconsistent
parameters is invalid and will result in unspecified
behavior.

@param      str the non-<code>null</code> text to insert
@param      pos the position at which to insert
@see        java.awt.TextComponent#setText
@see        java.awt.TextArea#replaceRange
@see        java.awt.TextArea#append
@since      JDK1.1
"
      end

      operation 6344194 "insertText"
	public explicit_return_type "void"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>insert(String, int)</code>.
"
      end

      operation 6344322 "append"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given text to the text area's current text.
<p>Note that passing <code>null</code> or inconsistent
parameters is invalid and will result in unspecified
behavior.

@param     str the non-<code>null</code> text to append
@see       java.awt.TextArea#insert
@since     JDK1.1
"
      end

      operation 6344450 "appendText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>append(String)</code>.
"
      end

      operation 6344578 "replaceRange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces text between the indicated start and end positions
with the specified replacement text.  The text at the end
position will not be replaced.  The text at the start
position will be replaced (unless the start position is the
same as the end position).
The text position is zero-based.  The inserted substring may be
of a different length than the text it replaces.
<p>Note that passing <code>null</code> or inconsistent
parameters is invalid and will result in unspecified
behavior.

@param     str      the non-<code>null</code> text to use as
                    the replacement
@param     start    the start position
@param     end      the end position
@see       java.awt.TextArea#insert
@since     JDK1.1
"
      end

      operation 6344706 "replaceText"
	public explicit_return_type "void"
	nparams 3
	  param inout name "str" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>replaceRange(String, int, int)</code>.
"
      end

      operation 6344834 "getRows"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the text area.
@return    the number of rows in the text area
@see       #setRows(int)
@see       #getColumns()
@since     JDK1
"
      end

      operation 6344962 "setRows"
	public explicit_return_type "void"
	nparams 1
	  param in name "rows" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of rows for this text area.
@param       rows   the number of rows
@see         #getRows()
@see         #setColumns(int)
@exception   IllegalArgumentException   if the value
                supplied for <code>rows</code>
                is less than <code>0</code>
@since       JDK1.1
"
      end

      operation 6345090 "getColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in this text area.
@return    the number of columns in the text area
@see       #setColumns(int)
@see       #getRows()
"
      end

      operation 6345218 "setColumns"
	public explicit_return_type "void"
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of columns for this text area.
@param       columns   the number of columns
@see         #getColumns()
@see         #setRows(int)
@exception   IllegalArgumentException   if the value
                supplied for <code>columns</code>
                is less than <code>0</code>
@since       JDK1.1
"
      end

      operation 6345346 "getScrollbarVisibility"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumerated value that indicates which scroll bars
the text area uses.
<p>
The <code>TextArea</code> class defines four integer constants
that are used to specify which scroll bars are available.
<code>TextArea</code> has one constructor that gives the
application discretion over scroll bars.

@return     an integer that indicates which scroll bars are used
@see        java.awt.TextArea#SCROLLBARS_BOTH
@see        java.awt.TextArea#SCROLLBARS_VERTICAL_ONLY
@see        java.awt.TextArea#SCROLLBARS_HORIZONTAL_ONLY
@see        java.awt.TextArea#SCROLLBARS_NONE
@see        java.awt.TextArea#TextArea(java.lang.String, int, int, int)
@since      JDK1.1
"
      end

      operation 6345474 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of a text area with the specified
number of rows and columns.
@param     rows   the number of rows
@param     columns   the number of columns
@return    the preferred dimensions required to display
                      the text area with the specified
                      number of rows and columns
@see       java.awt.Component#getPreferredSize
@since     JDK1.1
"
      end

      operation 6345602 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize(int, int)</code>.
"
      end

      operation 6345730 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the preferred size of this text area.
@return    the preferred dimensions needed for this text area
@see       java.awt.Component#getPreferredSize
@since     JDK1.1
"
      end

      operation 6345858 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize()</code>.
"
      end

      operation 6345986 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of a text area with the specified
number of rows and columns.
@param     rows   the number of rows
@param     columns   the number of columns
@return    the minimum dimensions required to display
                      the text area with the specified
                      number of rows and columns
@see       java.awt.Component#getMinimumSize
@since     JDK1.1
"
      end

      operation 6346114 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize(int, int)</code>.
"
      end

      operation 6346242 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the minimum size of this text area.
@return    the preferred dimensions needed for this text area
@see       java.awt.Component#getPreferredSize
@since     JDK1.1
"
      end

      operation 6346370 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize()</code>.
"
      end

      operation 6346498 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>TextArea</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return      the parameter string of this text area
"
      end

      attribute 1433090 "textAreaSerializedDataVersion"
	private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization support.


The textArea Serialized Data Version.

@serial

"
      end

      operation 6346626 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the ObjectInputStream.
@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6346754 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Returns the <code>AccessibleContext</code> associated with
this <code>TextArea</code>. For text areas, the
<code>AccessibleContext</code> takes the form of an
<code>AccessibleAWTTextArea</code>.
A new <code>AccessibleAWTTextArea</code> instance is created if necessary.

@return an <code>AccessibleAWTTextArea</code> that serves as the
        <code>AccessibleContext</code> of this <code>TextArea</code>
@since 1.3
"
      end

      class 877186 "AccessibleAWTTextArea"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2980482 // <generalisation>
	  relation 2980482 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2980482 // <generalisation>
	    b parent class_ref 876930 // AccessibleAWTTextComponent
	end

	attribute 1433218 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3472827823632144419L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6346882 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleStateSet describing the states
of the object
@see AccessibleStateSet
"
	end
      end
    end

    class 876802 "TextComponent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>TextComponent</code> class is the superclass of
any component that allows the editing of some text.
<p>
A text component embodies a string of text.  The
<code>TextComponent</code> class defines a set of methods
that determine whether or not this text is editable. If the
component is editable, it defines another set of methods
that supports a text insertion caret.
<p>
In addition, the class defines methods that are used
to maintain a current <em>selection</em> from the text.
The text selection, a substring of the component's text,
is the target of editing operations. It is also referred
to as the <em>selected text</em>.

@author      Sami Shaio
@author      Arthur van Hoff
@since       JDK1.0
"
      classrelation 2979074 // <generalisation>
	relation 2979074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2979074 // <generalisation>
	  b parent class_ref 338818 // Component
      end

      classrelation 2979202 // <realization>
	relation 2979202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2979202 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 2979330 // text (<unidirectional association>)
	relation 2979330 --->
	  a role_name "text" package
	    comment "
The value of the text.
A <code>null</code> value is the same as \"\".

@serial
@see #setText(String)
@see #getText()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2979330 // text (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1430658 "editable"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A boolean indicating whether or not this
<code>TextComponent</code> is editable.
It will be <code>true</code> if the text component
is editable and <code>false</code> if not.

@serial
@see #isEditable()

"
      end

      attribute 1430786 "selectionStart"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The selection refers to the selected text, and the
<code>selectionStart</code> is the start position
of the selected text.

@serial
@see #getSelectionStart()
@see #setSelectionStart(int)

"
      end

      attribute 1430914 "selectionEnd"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The selection refers to the selected text, and the
<code>selectionEnd</code>
is the end position of the selected text.

@serial
@see #getSelectionEnd()
@see #setSelectionEnd(int)

"
      end

      attribute 1431042 "backgroundSetByClientCode"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A flag used to tell whether the background has been set by
 developer code (as opposed to AWT code).  Used to determine
 the background color of non-editable TextComponents.
"
      end

      classrelation 2979458 // textListener (<unidirectional association>)
	relation 2979458 --->
	  a role_name "textListener" protected
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2979458 // textListener (<unidirectional association>)
	  b parent class_ref 857218 // TextListener
      end

      attribute 1431170 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2214773872412987419L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6336514 "TextComponent"
	package explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text component initialized with the
specified text. Sets the value of the cursor to
<code>Cursor.TEXT_CURSOR</code>.
@param      text       the text to be displayed; if
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed
@exception  HeadlessException if
            <code>GraphicsEnvironment.isHeadless</code>
            returns true
@see        java.awt.GraphicsEnvironment#isHeadless
@see        java.awt.Cursor
"
      end

      operation 6336642 "enableInputMethodsIfNecessary"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6336770 "enableInputMethods"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables input method support for this text component. If input
method support is enabled and the text component also processes key events,
incoming events are offered to the current input method and will only be
processed by the component or dispatched to its listeners if the input method
does not consume them. Whether and how input method support for this text
component is enabled or disabled by default is implementation dependent.

@param enable true to enable, false to disable
@see #processKeyEvent
@since 1.2
"
      end

      operation 6336898 "areInputMethodsEnabled"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6337026 "getInputMethodRequests"
	public return_type class_ref 345986 // InputMethodRequests
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6337154 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this Component displayable by connecting it to a
native screen resource.
This method is called internally by the toolkit and should
not be called directly by programs.
@see       java.awt.TextComponent#removeNotify
"
      end

      operation 6337282 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the <code>TextComponent</code>'s peer.
The peer allows us to modify the appearance of the
<code>TextComponent</code> without changing its
functionality.
"
      end

      operation 6337410 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text that is presented by this
text component to be the specified text.
@param       t   the new text;
                 if this parameter is <code>null</code> then
                 the text is set to the empty string \"\"
@see         java.awt.TextComponent#getText
"
      end

      operation 6337538 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the text that is presented by this text component.
By default, this is an empty string.

@return the value of this <code>TextComponent</code>
@see     java.awt.TextComponent#setText
"
      end

      operation 6337666 "getSelectedText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the selected text from the text that is
presented by this text component.
@return      the selected text of this text component
@see         java.awt.TextComponent#select
"
      end

      operation 6337794 "isEditable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this text component is editable.
@return     <code>true</code> if this text component is
                 editable; <code>false</code> otherwise.
@see        java.awt.TextComponent#setEditable
@since      JDK1.0
"
      end

      operation 6337922 "setEditable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag that determines whether or not this
text component is editable.
<p>
If the flag is set to <code>true</code>, this text component
becomes user editable. If the flag is set to <code>false</code>,
the user cannot change the text of this text component.
By default, non-editable text components have a background color
of SystemColor.control.  This default can be overridden by
calling setBackground.

@param     b   a flag indicating whether this text component
                     is user editable.
@see       java.awt.TextComponent#isEditable
@since     JDK1.0
"
      end

      operation 6338050 "getBackground"
	public return_type class_ref 323458 // Color
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the background color of this text component.

By default, non-editable text components have a background color
of SystemColor.control.  This default can be overridden by
calling setBackground.

@return This text component's background color.
        If this text component does not have a background color,
        the background color of its parent is returned.
@see #setBackground(Color)
@since JDK1.0
"
      end

      operation 6338178 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the background color of this text component.

@param c The color to become this text component's color.
       If this parameter is null then this text component
       will inherit the background color of its parent.
@see #getBackground()
@since JDK1.0
"
      end

      operation 6338306 "getSelectionStart"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the start position of the selected text in
this text component.
@return      the start position of the selected text
@see         java.awt.TextComponent#setSelectionStart
@see         java.awt.TextComponent#getSelectionEnd
"
      end

      operation 6338434 "setSelectionStart"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectionStart" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selection start for this text component to
the specified position. The new start point is constrained
to be at or before the current selection end. It also
cannot be set to less than zero, the beginning of the
component's text.
If the caller supplies a value for <code>selectionStart</code>
that is out of bounds, the method enforces these constraints
silently, and without failure.
@param       selectionStart   the start position of the
                       selected text
@see         java.awt.TextComponent#getSelectionStart
@see         java.awt.TextComponent#setSelectionEnd
@since       JDK1.1
"
      end

      operation 6338562 "getSelectionEnd"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the end position of the selected text in
this text component.
@return      the end position of the selected text
@see         java.awt.TextComponent#setSelectionEnd
@see         java.awt.TextComponent#getSelectionStart
"
      end

      operation 6338690 "setSelectionEnd"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectionEnd" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selection end for this text component to
the specified position. The new end point is constrained
to be at or after the current selection start. It also
cannot be set beyond the end of the component's text.
If the caller supplies a value for <code>selectionEnd</code>
that is out of bounds, the method enforces these constraints
silently, and without failure.
@param       selectionEnd   the end position of the
                       selected text
@see         java.awt.TextComponent#getSelectionEnd
@see         java.awt.TextComponent#setSelectionStart
@since       JDK1.1
"
      end

      operation 6338818 "select"
	public explicit_return_type "void"
	nparams 2
	  param in name "selectionStart" explicit_type "int"
	  param in name "selectionEnd" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects the text between the specified start and end positions.
<p>
This method sets the start and end positions of the
selected text, enforcing the restriction that the start position
must be greater than or equal to zero.  The end position must be
greater than or equal to the start position, and less than or
equal to the length of the text component's text.  The
character positions are indexed starting with zero.
The length of the selection is
<code>endPosition</code> - <code>startPosition</code>, so the
character at <code>endPosition</code> is not selected.
If the start and end positions of the selected text are equal,
all text is deselected.
<p>
If the caller supplies values that are inconsistent or out of
bounds, the method enforces these constraints silently, and
without failure. Specifically, if the start position or end
position is greater than the length of the text, it is reset to
equal the text length. If the start position is less than zero,
it is reset to zero, and if the end position is less than the
start position, it is reset to the start position.

@param        selectionStart the zero-based index of the first
character (<code>char</code> value) to be selected
@param        selectionEnd the zero-based end position of the
text to be selected; the character (<code>char</code> value) at
<code>selectionEnd</code> is not selected
@see          java.awt.TextComponent#setSelectionStart
@see          java.awt.TextComponent#setSelectionEnd
@see          java.awt.TextComponent#selectAll
"
      end

      operation 6338946 "selectAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Selects all the text in this text component.
@see        java.awt.TextComponent#select
"
      end

      operation 6339074 "setCaretPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the position of the text insertion caret.
The caret position is constrained to be between 0
and the last character of the text, inclusive.
If the passed-in value is greater than this range,
the value is set to the last character (or 0 if
the <code>TextComponent</code> contains no text)
and no error is returned.  If the passed-in value is
less than 0, an <code>IllegalArgumentException</code>
is thrown.

@param        position the position of the text insertion caret
@exception    IllegalArgumentException if <code>position</code>
              is less than zero
@since        JDK1.1
"
      end

      operation 6339202 "getCaretPosition"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position of the text insertion caret.
The caret position is constrained to be between 0
and the last character of the text, inclusive.
If the text or caret have not been set, the default
caret position is 0.

@return       the position of the text insertion caret
@see #setCaretPosition(int)
@since        JDK1.1
"
      end

      operation 6339330 "addTextListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 857218 // TextListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified text event listener to receive text events
from this text component.
If <code>l</code> is <code>null</code>, no exception is
thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param l the text event listener
@see             #removeTextListener
@see             #getTextListeners
@see             java.awt.event.TextListener
"
      end

      operation 6339458 "removeTextListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 857218 // TextListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified text event listener so that it no longer
receives text events from this text component
If <code>l</code> is <code>null</code>, no exception is
thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l     the text listener
@see             #addTextListener
@see             #getTextListeners
@see             java.awt.event.TextListener
@since           JDK1.1
"
      end

      operation 6339586 "getTextListeners"
	public return_type class_ref 857218 // TextListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the text listeners
registered on this text component.

@return all of this text component's <code>TextListener</code>s
        or an empty array if no text
        listeners are currently registered


@see #addTextListener
@see #removeTextListener
@since 1.4
"
      end

      operation 6339714 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>TextComponent</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>TextComponent</code> <code>t</code>
for its text listeners with the following code:

<pre>TextListener[] tls = (TextListener[])(t.getListeners(TextListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this text component,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getTextListeners
@since 1.3
"
      end

      operation 6339842 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6339970 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this text component. If the event is a
<code>TextEvent</code>, it invokes the <code>processTextEvent</code>
method else it invokes its superclass's <code>processEvent</code>.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e the event
"
      end

      operation 6340098 "processTextEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 857346 // TextEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes text events occurring on this text component by
dispatching them to any registered <code>TextListener</code> objects.
<p>
NOTE: This method will not be called unless text events
are enabled for this component. This happens when one of the
following occurs:
<ul>
<li>A <code>TextListener</code> object is registered
via <code>addTextListener</code>
<li>Text events are enabled via <code>enableEvents</code>
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param e the text event
@see Component#enableEvents
"
      end

      operation 6340226 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this
<code>TextComponent</code>. This
method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return      the parameter string of this text component
"
      end

      operation 6340354 "canAccessClipboard"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assigns a valid value to the canAccessClipboard instance variable.
"
      end

      attribute 1431298 "textComponentSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization support.


The textComponent SerializedDataVersion.

@serial

"
      end

      operation 6340482 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable TextListener(s) as optional data.
The non-serializable TextListener(s) are detected and
no attempt is made to serialize them.

@serialData Null terminated sequence of zero or more pairs.
            A pair consists of a String and Object.
            The String indicates the type of object and
            is one of the following :
            textListenerK indicating and TextListener object.

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#textListenerK
"
      end

      operation 6340610 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the ObjectInputStream, and if it isn't null,
add a listener to receive text events fired by the
TextComponent.  Unrecognized keys or values will be
ignored.

@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@see #removeTextListener
@see #addTextListener
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6340738 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this TextComponent.
For text components, the AccessibleContext takes the form of an
AccessibleAWTTextComponent.
A new AccessibleAWTTextComponent instance is created if necessary.

@return an AccessibleAWTTextComponent that serves as the
        AccessibleContext of this TextComponent
@since 1.3
"
      end

      class 876930 "AccessibleAWTTextComponent"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2979586 // <generalisation>
	  relation 2979586 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2979586 // <generalisation>
	    b parent class_ref 347650 // AccessibleAWTComponent
	end

	classrelation 2979714 // <realization>
	  relation 2979714 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2979714 // <realization>
	    b parent class_ref 348802 // AccessibleText
	end

	classrelation 2979842 // <realization>
	  relation 2979842 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2979842 // <realization>
	    b parent class_ref 857218 // TextListener
	end

	attribute 1431426 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3631432373506317811L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6340866 "AccessibleAWTTextComponent"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an AccessibleAWTTextComponent.  Adds a listener to track
caret change.
"
	end

	operation 6340994 "textValueChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "textEvent" type class_ref 857346 // TextEvent
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "TextListener notification of a text value change.
"
	end

	operation 6341122 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of the TextComponent.
The AccessibleStateSet of an object is composed of a set of
unique AccessibleStates.  A change in the AccessibleStateSet
of an object will cause a PropertyChangeEvent to be fired
for the AccessibleContext.ACCESSIBLE_STATE_PROPERTY property.

@return an instance of AccessibleStateSet containing the
current state set of the object
@see AccessibleStateSet
@see AccessibleState
@see #addPropertyChangeListener
"
	end

	operation 6341250 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the role of this object.

@return an instance of AccessibleRole describing the role of the
object (AccessibleRole.TEXT)
@see AccessibleRole
"
	end

	operation 6341378 "getAccessibleText"
	  public return_type class_ref 348802 // AccessibleText
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the AccessibleText associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleText interface on behalf of itself.

@return this object
"
	end

	operation 6341506 "getIndexAtPoint"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " --- interface AccessibleText methods ------------------------

Many of these methods are just convenience methods; they
just call the equivalent on the parent


Given a point in local coordinates, return the zero-based index
of the character under that Point.  If the point is invalid,
this method returns -1.

@param p the Point in local coordinates
@return the zero-based index of the character under Point p.
"
	end

	operation 6341634 "getCharacterBounds"
	  public return_type class_ref 314114 // Rectangle
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determines the bounding box of the character at the given
index into the string.  The bounds are returned in local
coordinates.  If the index is invalid a null rectangle
is returned.

@param i the index into the String &gt;= 0
@return the screen coordinates of the character's bounding box
"
	end

	operation 6341762 "getCharCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of characters (valid indicies)

@return the number of characters &gt;= 0
"
	end

	operation 6341890 "getCaretPosition"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the zero-based offset of the caret.

Note: The character to the right of the caret will have the
same index value as the offset (the caret is between
two characters).

@return the zero-based offset of the caret.
"
	end

	operation 6342018 "getCharacterAttribute"
	  public return_type class_ref 361218 // AttributeSet
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the AttributeSet for a given character (at a given index).

@param i the zero-based index into the text
@return the AttributeSet of the character
"
	end

	operation 6342146 "getSelectionStart"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the start offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.
Return 0 if the text is empty, or the caret position
if no selection.

@return the index into the text of the start of the selection &gt;= 0
"
	end

	operation 6342274 "getSelectionEnd"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the end offset within the selected text.
If there is no selection, but there is
a caret, the start and end offsets will be the same.
Return 0 if the text is empty, or the caret position
if no selection.

@return the index into the text of the end of the selection &gt;= 0
"
	end

	operation 6342402 "getSelectedText"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the portion of the text that is selected.

@return the text, null if no selection
"
	end

	operation 6342530 "getAtIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String at a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence,
  null for an invalid index or part
"
	end

	attribute 1431554 "NEXT"
	  class_attribute const_attribute private explicit_type "boolean"
	  init_value " true"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1431682 "PREVIOUS"
	  class_attribute const_attribute private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6342658 "findWordLimit"
	  private explicit_return_type "int"
	  nparams 4
	    param in name "index" explicit_type "int"
	    param inout name "words" type class_ref 877058 // BreakIterator
	    param inout name "direction" explicit_type "boolean"
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Needed to unify forward and backward searching.
The method assumes that s is the text assigned to words.
"
	end

	operation 6342786 "getAfterIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String after a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid
 index or part
"
	end

	operation 6342914 "getBeforeIndex"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param in name "part" explicit_type "int"
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the String before a given index.

@param part the AccessibleText.CHARACTER, AccessibleText.WORD,
  or AccessibleText.SENTENCE to retrieve
@param index an index within the text &gt;= 0
@return the letter, word, or sentence, null for an invalid index
 or part
"
	end
      end

      attribute 1431810 "checkForEnableIM"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " end of AccessibleAWTTextComponent
"
      end
    end

    class 877314 "TextField"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>TextField</code> object is a text component
that allows for the editing of a single line of text.
<p>
For example, the following image depicts a frame with four
text fields of varying widths. Two of these text fields
display the predefined text <code>\"Hello\"</code>.
<p>
<img src=\"doc-files/TextField-1.gif\" alt=\"The preceding text describes this image.\"
style=\"float:center; margin: 7px 10px;\">
<p>
Here is the code that produces these four text fields:

<hr><blockquote><pre>
TextField tf1, tf2, tf3, tf4;
// a blank text field
tf1 = new TextField();
// blank field of 20 columns
tf2 = new TextField(\"\", 20);
// predefined text displayed
tf3 = new TextField(\"Hello!\");
// predefined text in 30 columns
tf4 = new TextField(\"Hello\", 30);
</pre></blockquote><hr>
<p>
Every time the user types a key in the text field, one or
more key events are sent to the text field.  A <code>KeyEvent</code>
may be one of three types: keyPressed, keyReleased, or keyTyped.
The properties of a key event indicate which of these types
it is, as well as additional information about the event,
such as what modifiers are applied to the key event and the
time at which the event occurred.
<p>
The key event is passed to every <code>KeyListener</code>
or <code>KeyAdapter</code> object which registered to receive such
events using the component's <code>addKeyListener</code> method.
(<code>KeyAdapter</code> objects implement the
<code>KeyListener</code> interface.)
<p>
It is also possible to fire an <code>ActionEvent</code>.
If action events are enabled for the text field, they may
be fired by pressing the <code>Return</code> key.
<p>
The <code>TextField</code> class's <code>processEvent</code>
method examines the action event and passes it along to
<code>processActionEvent</code>. The latter method redirects the
event to any <code>ActionListener</code> objects that have
registered to receive action events generated by this
text field.

@author      Sami Shaio
@see         java.awt.event.KeyEvent
@see         java.awt.event.KeyAdapter
@see         java.awt.event.KeyListener
@see         java.awt.event.ActionEvent
@see         java.awt.Component#addKeyListener
@see         java.awt.TextField#processEvent
@see         java.awt.TextField#processActionEvent
@see         java.awt.TextField#addActionListener
@since       JDK1.0
"
      classrelation 2980610 // <generalisation>
	relation 2980610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2980610 // <generalisation>
	  b parent class_ref 876802 // TextComponent
      end

      attribute 1433346 "columns"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of columns in the text field.
A column is an approximate average character
width that is platform-dependent.
Guaranteed to be non-negative.

@serial
@see #setColumns(int)
@see #getColumns()

"
      end

      attribute 1433474 "echoChar"
	package explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The echo character, which is used when
the user wishes to disguise the characters
typed into the text field.
The disguises are removed if echoChar = <code>0</code>.

@serial
@see #getEchoChar()
@see #setEchoChar(char)
@see #echoCharIsSet()

"
      end

      classrelation 2980738 // actionListener (<unidirectional association>)
	relation 2980738 --->
	  a role_name "actionListener" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2980738 // actionListener (<unidirectional association>)
	  b parent class_ref 354306 // ActionListener
      end

      classrelation 2980866 // base (<unidirectional association>)
	relation 2980866 --->
	  a role_name "base" init_value " \"textfield\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2980866 // base (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1433602 "nameCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1433730 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2966288784432217853L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JDK 1.1 serialVersionUID

"
      end

      operation 6347010 "initIDs"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Initialize JNI field and method ids
"
      end

      extra_member 152194 "initialization"
	
	cpp "" ""
	java "  static {
        /* ensure that the necessary native libraries are loaded */
        Toolkit.loadLibraries();
        if (!GraphicsEnvironment.isHeadless()) {
            initIDs();
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6347138 "TextField"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text field.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6347266 "TextField"
	public explicit_return_type ""
	nparams 1
	  param inout name "text" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text field initialized with the specified text.
@param      text       the text to be displayed. If
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6347394 "TextField"
	public explicit_return_type ""
	nparams 1
	  param in name "columns" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new empty text field with the specified number
of columns.  A column is an approximate average character
width that is platform-dependent.
@param      columns     the number of columns.  If
            <code>columns</code> is less than <code>0</code>,
            <code>columns</code> is set to <code>0</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6347522 "TextField"
	public explicit_return_type ""
	nparams 2
	  param inout name "text" type class_ref 128130 // String
	  param in name "columns" explicit_type "int"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new text field initialized with the specified text
to be displayed, and wide enough to hold the specified
number of columns. A column is an approximate average character
width that is platform-dependent.
@param      text       the text to be displayed. If
            <code>text</code> is <code>null</code>, the empty
            string <code>\"\"</code> will be displayed.
@param      columns     the number of columns.  If
            <code>columns</code> is less than <code>0</code>,
            <code>columns</code> is set to <code>0</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6347650 "constructComponentName"
	package return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a name for this component.  Called by getName() when the
name is null.
"
      end

      operation 6347778 "addNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the TextField's peer.  The peer allows us to modify the
appearance of the TextField without changing its functionality.
"
      end

      operation 6347906 "getEchoChar"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the character that is to be used for echoing.
<p>
An echo character is useful for text fields where
user input should not be echoed to the screen, as in
the case of a text field for entering a password.
If <code>echoChar</code> = <code>0</code>, user
input is echoed to the screen unchanged.
<p>
A Java platform implementation may support only a limited,
non-empty set of echo characters. This function returns the
echo character originally requested via setEchoChar(). The echo
character actually used by the TextField implementation might be
different.
@return      the echo character for this text field.
@see         java.awt.TextField#echoCharIsSet
@see         java.awt.TextField#setEchoChar
"
      end

      operation 6348034 "setEchoChar"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the echo character for this text field.
<p>
An echo character is useful for text fields where
user input should not be echoed to the screen, as in
the case of a text field for entering a password.
Setting <code>echoChar</code> = <code>0</code> allows
user input to be echoed to the screen again.
<p>
A Java platform implementation may support only a limited,
non-empty set of echo characters. Attempts to set an
unsupported echo character will cause the default echo
character to be used instead. Subsequent calls to getEchoChar()
will return the echo character originally requested. This might
or might not be identical to the echo character actually
used by the TextField implementation.
@param       c   the echo character for this text field.
@see         java.awt.TextField#echoCharIsSet
@see         java.awt.TextField#getEchoChar
@since       JDK1.1
"
      end

      operation 6348162 "setEchoCharacter"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>setEchoChar(char)</code>.
"
      end

      operation 6348290 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the text that is presented by this
text component to be the specified text.
@param       t   the new text.
@see         java.awt.TextComponent#getText
"
      end

      operation 6348418 "echoCharIsSet"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this text field has a
character set for echoing.
<p>
An echo character is useful for text fields where
user input should not be echoed to the screen, as in
the case of a text field for entering a password.
@return     <code>true</code> if this text field has
                a character set for echoing;
                <code>false</code> otherwise.
@see        java.awt.TextField#setEchoChar
@see        java.awt.TextField#getEchoChar
"
      end

      operation 6348546 "getColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of columns in this text field. A column is an
approximate average character width that is platform-dependent.
@return     the number of columns.
@see        java.awt.TextField#setColumns
@since      JDK1.1
"
      end

      operation 6348674 "setColumns"
	public explicit_return_type "void"
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the number of columns in this text field. A column is an
approximate average character width that is platform-dependent.
@param      columns   the number of columns.
@see        java.awt.TextField#getColumns
@exception  IllegalArgumentException   if the value
                supplied for <code>columns</code>
                is less than <code>0</code>.
@since      JDK1.1
"
      end

      operation 6348802 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred size of this text field
with the specified number of columns.
@param     columns the number of columns
                in this text field.
@return    the preferred dimensions for
                displaying this text field.
@since     JDK1.1
"
      end

      operation 6348930 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize(int)</code>.
"
      end

      operation 6349058 "getPreferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred size of this text field.
@return     the preferred dimensions for
                        displaying this text field.
@since      JDK1.1
"
      end

      operation 6349186 "preferredSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getPreferredSize()</code>.
"
      end

      operation 6349314 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum dimensions for a text field with
the specified number of columns.
@param    columns   the number of columns in
                         this text field.
@since    JDK1.1
"
      end

      operation 6349442 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 1
	  param in name "columns" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize(int)</code>.
"
      end

      operation 6349570 "getMinimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum dimensions for this text field.
@return     the minimum dimensions for
                 displaying this text field.
@since      JDK1.1
"
      end

      operation 6349698 "minimumSize"
	public return_type class_ref 316802 // Dimension
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated As of JDK version 1.1,
replaced by <code>getMinimumSize()</code>.
"
      end

      operation 6349826 "addActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified action listener to receive
action events from this text field.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param      l the action listener.
@see        #removeActionListener
@see        #getActionListeners
@see        java.awt.event.ActionListener
@since      JDK1.1
"
      end

      operation 6349954 "removeActionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 354306 // ActionListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified action listener so that it no longer
receives action events from this text field.
If l is null, no exception is thrown and no action is performed.
<p>Refer to <a href=\"doc-files/AWTThreadIssues.html#ListenersThreads\"
>AWT Threading Issues</a> for details on AWT's threading model.

@param           l the action listener.
@see             #addActionListener
@see             #getActionListeners
@see             java.awt.event.ActionListener
@since           JDK1.1
"
      end

      operation 6350082 "getActionListeners"
	public return_type class_ref 354306 // ActionListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the action listeners
registered on this textfield.

@return all of this textfield's <code>ActionListener</code>s
        or an empty array if no action
        listeners are currently registered

@see #addActionListener
@see #removeActionListener
@see java.awt.event.ActionListener
@since 1.4
"
      end

      operation 6350210 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>TextField</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>
You can specify the <code>listenerType</code> argument
with a class literal, such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>TextField</code> <code>t</code>
for its action listeners with the following code:

<pre>ActionListener[] als = (ActionListener[])(t.getListeners(ActionListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this textfield,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getActionListeners
@since 1.3
"
      end

      operation 6350338 "eventEnabled"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REMIND: remove when filtering is done at lower level"
      end

      operation 6350466 "processEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 339202 // AWTEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes events on this text field. If the event
is an instance of <code>ActionEvent</code>,
it invokes the <code>processActionEvent</code>
method. Otherwise, it invokes <code>processEvent</code>
on the superclass.
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param      e the event
@see        java.awt.event.ActionEvent
@see        java.awt.TextField#processActionEvent
@since      JDK1.1
"
      end

      operation 6350594 "processActionEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 354434 // ActionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes action events occurring on this text field by
dispatching them to any registered
<code>ActionListener</code> objects.
<p>
This method is not called unless action events are
enabled for this component. Action events are enabled
when one of the following occurs:
<ul>
<li>An <code>ActionListener</code> object is registered
via <code>addActionListener</code>.
<li>Action events are enabled via <code>enableEvents</code>.
</ul>
<p>Note that if the event parameter is <code>null</code>
the behavior is unspecified and may result in an
exception.

@param       e the action event
@see         java.awt.event.ActionListener
@see         java.awt.TextField#addActionListener
@see         java.awt.Component#enableEvents
@since       JDK1.1
"
      end

      operation 6350722 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the state of this <code>TextField</code>.
This method is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not be
<code>null</code>.

@return      the parameter string of this text field
"
      end

      attribute 1433858 "textFieldSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization support.


The textField Serialized Data Version.

@serial

"
      end

      operation 6350850 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to stream.  Writes
a list of serializable ActionListener(s) as optional data.
The non-serializable ActionListener(s) are detected and
no attempt is made to serialize them.

@serialData Null terminated sequence of zero or more pairs.
            A pair consists of a String and Object.
            The String indicates the type of object and
            is one of the following :
            ActionListenerK indicating and ActionListener object.

@see AWTEventMulticaster#save(ObjectOutputStream, String, EventListener)
@see java.awt.Component#actionListenerK
"
      end

      operation 6350978 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the ObjectInputStream and if it isn't null,
add a listener to receive action events fired by the
TextField.  Unrecognized keys or values will be
ignored.

@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@see #removeActionListener(ActionListener)
@see #addActionListener(ActionListener)
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6351106 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this TextField.
For text fields, the AccessibleContext takes the form of an
AccessibleAWTTextField.
A new AccessibleAWTTextField instance is created if necessary.

@return an AccessibleAWTTextField that serves as the
        AccessibleContext of this TextField
@since 1.3
"
      end

      class 877442 "AccessibleAWTTextField"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2980994 // <generalisation>
	  relation 2980994 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2980994 // <generalisation>
	    b parent class_ref 876930 // AccessibleAWTTextComponent
	end

	attribute 1433986 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 6219164359235943158L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "JDK 1.3 serialVersionUID

"
	end

	operation 6351234 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state set of this object.

@return an instance of AccessibleStateSet describing the states
of the object
@see AccessibleState
"
	end
      end
    end

    class 877570 "TexturePaint"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>TexturePaint</code> class provides a way to fill a
{@link Shape} with a texture that is specified as
a {@link BufferedImage}. The size of the <code>BufferedImage</code>
object should be small because the <code>BufferedImage</code> data
is copied by the <code>TexturePaint</code> object.
At construction time, the texture is anchored to the upper
left corner of a {@link Rectangle2D} that is
specified in user space.  Texture is computed for
locations in the device space by conceptually replicating the
specified <code>Rectangle2D</code> infinitely in all directions
in user space and mapping the <code>BufferedImage</code> to each
replicated <code>Rectangle2D</code>.
@see Paint
@see Graphics2D#setPaint
@version 1.48, 06/05/07
"
      classrelation 2981122 // <realization>
	relation 2981122 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2981122 // <realization>
	  b parent class_ref 860418 // Paint
      end

      classrelation 2981250 // bufImg (<unidirectional association>)
	relation 2981250 --->
	  a role_name "bufImg" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2981250 // bufImg (<unidirectional association>)
	  b parent class_ref 311554 // BufferedImage
      end

      attribute 1434114 "tx"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1434242 "ty"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1434370 "sx"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1434498 "sy"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6351362 "TexturePaint"
	public explicit_return_type ""
	nparams 2
	  param inout name "txtr" type class_ref 311554 // BufferedImage
	  param inout name "anchor" type class_ref 380674 // Rectangle2D
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>TexturePaint</code> object.
@param txtr the <code>BufferedImage</code> object with the texture
used for painting
@param anchor the <code>Rectangle2D</code> in user space used to
anchor and replicate the texture
"
      end

      operation 6351490 "getImage"
	public return_type class_ref 311554 // BufferedImage
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>BufferedImage</code> texture used to
fill the shapes.
@return a <code>BufferedImage</code>.
"
      end

      operation 6351618 "getAnchorRect"
	public return_type class_ref 380674 // Rectangle2D
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the anchor rectangle which positions and
sizes the textured image.
@return the <code>Rectangle2D</code> used to anchor and
size this <code>TexturePaint</code>.
"
      end

      operation 6351746 "createContext"
	public return_type class_ref 860674 // PaintContext
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "deviceBounds" type class_ref 314114 // Rectangle
	  param inout name "userBounds" type class_ref 380674 // Rectangle2D
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates and returns a {@link PaintContext} used to
generate a tiled image pattern.
See the {@link Paint#createContext specification} of the
method in the {@link Paint} interface for information
on null parameter handling.

@param cm the preferred {@link ColorModel} which represents the most convenient
          format for the caller to receive the pixel data, or {@code null}
          if there is no preference.
@param deviceBounds the device space bounding box
                    of the graphics primitive being rendered.
@param userBounds the user space bounding box
                  of the graphics primitive being rendered.
@param xform the {@link AffineTransform} from user
             space into device space.
@param hints the set of hints that the context object can use to
             choose between rendering alternatives.
@return the {@code PaintContext} for
        generating color patterns.
@see Paint
@see PaintContext
@see ColorModel
@see Rectangle
@see Rectangle2D
@see AffineTransform
@see RenderingHints
"
      end

      operation 6351874 "getTransparency"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the transparency mode for this <code>TexturePaint</code>.
@return the transparency mode for this <code>TexturePaint</code>
as an integer value.
@see Transparency
"
      end
    end

    class 877698 "TexturePaintContext"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2981378 // <realization>
	relation 2981378 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2981378 // <realization>
	  b parent class_ref 860674 // PaintContext
      end

      classrelation 2981506 // xrgbmodel (<unidirectional association>)
	relation 2981506 --->
	  a role_name "xrgbmodel" init_value "
        new DirectColorModel(24, 0xff0000, 0xff00, 0xff)" class_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2981506 // xrgbmodel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2981634 // argbmodel (<unidirectional association>)
	relation 2981634 --->
	  a role_name "argbmodel" init_value " ColorModel.getRGBdefault()" class_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2981634 // argbmodel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      classrelation 2981762 // colorModel (<unidirectional association>)
	relation 2981762 --->
	  a role_name "colorModel" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2981762 // colorModel (<unidirectional association>)
	  b parent class_ref 312066 // ColorModel
      end

      attribute 1434626 "bWidth"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1434754 "bHeight"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1434882 "maxWidth"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2981890 // outRas (<unidirectional association>)
	relation 2981890 --->
	  a role_name "outRas" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2981890 // outRas (<unidirectional association>)
	  b parent class_ref 322690 // WritableRaster
      end

      attribute 1435010 "xOrg"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435138 "yOrg"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435266 "incXAcross"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435394 "incYAcross"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435522 "incXDown"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435650 "incYDown"
	package explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435778 "colincx"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1435906 "colincy"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436034 "colincxerr"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436162 "colincyerr"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436290 "rowincx"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436418 "rowincy"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436546 "rowincxerr"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1436674 "rowincyerr"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6352002 "getContext"
	class_operation public return_type class_ref 860674 // PaintContext
	nparams 4
	  param inout name "bufImg" type class_ref 311554 // BufferedImage
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param inout name "hints" type class_ref 856578 // RenderingHints
	  param inout name "devBounds" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352130 "isFilterableICM"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "cm" type class_ref 312066 // ColorModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352258 "isFilterableDCM"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "cm" type class_ref 312066 // ColorModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352386 "isMaskOK"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "mask" explicit_type "int"
	  param inout name "canbezero" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352514 "getInternedColorModel"
	class_operation public return_type class_ref 312066 // ColorModel
	nparams 1
	  param inout name "cm" type class_ref 312066 // ColorModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352642 "TexturePaintContext"
	package explicit_return_type ""
	nparams 5
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "xform" type class_ref 381058 // AffineTransform
	  param in name "bWidth" explicit_type "int"
	  param in name "bHeight" explicit_type "int"
	  param in name "maxw" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352770 "fractAsInt"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6352898 "mod"
	class_operation package explicit_return_type "double"
	nparams 2
	  param in name "num" explicit_type "double"
	  param in name "den" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6353026 "dispose"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release the resources allocated for the operation.
"
      end

      operation 6353154 "getColorModel"
	public return_type class_ref 312066 // ColorModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ColorModel of the output.
"
      end

      operation 6353282 "getRaster"
	public return_type class_ref 311682 // Raster
	nparams 4
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a Raster containing the colors generated for the graphics
operation.
@param x,y,w,h The area in device space for which colors are
generated.
"
      end

      classrelation 2982018 // xrgbRasRef (<unidirectional association>)
	relation 2982018 --->
	  a role_name "xrgbRasRef" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Raster> ${name}${value};
"
	    classrelation_ref 2982018 // xrgbRasRef (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 2982146 // argbRasRef (<unidirectional association>)
	relation 2982146 --->
	  a role_name "argbRasRef" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Raster> ${name}${value};
"
	    classrelation_ref 2982146 // argbRasRef (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      operation 6353410 "makeRaster"
	class_operation package return_type class_ref 322690 // WritableRaster
	nparams 4
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "srcRas" type class_ref 311682 // Raster
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6353538 "dropRaster"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "cm" type class_ref 312066 // ColorModel
	  param inout name "outRas" type class_ref 311682 // Raster
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2982274 // byteRasRef (<unidirectional association>)
	relation 2982274 --->
	  a role_name "byteRasRef" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Raster> ${name}${value};
"
	    classrelation_ref 2982274 // byteRasRef (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      operation 6353666 "makeByteRaster"
	class_operation package return_type class_ref 322690 // WritableRaster
	nparams 3
	  param inout name "srcRas" type class_ref 311682 // Raster
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6353794 "dropByteRaster"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "outRas" type class_ref 311682 // Raster
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6353922 "makeRaster"
	abstract public return_type class_ref 322690 // WritableRaster
	nparams 2
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6354050 "setRaster"
	abstract public explicit_return_type "void"
	nparams 16
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "xerr" explicit_type "int"
	  param in name "yerr" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "bWidth" explicit_type "int"
	  param in name "bHeight" explicit_type "int"
	  param in name "colincx" explicit_type "int"
	  param in name "colincxerr" explicit_type "int"
	  param in name "colincy" explicit_type "int"
	  param in name "colincyerr" explicit_type "int"
	  param in name "rowincx" explicit_type "int"
	  param in name "rowincxerr" explicit_type "int"
	  param in name "rowincy" explicit_type "int"
	  param in name "rowincyerr" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6354178 "blend"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "rgbs" explicit_type "int"
	multiplicity "[]"
	  param in name "xmul" explicit_type "int"
	  param in name "ymul" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Blends the four ARGB values in the rgbs array using the factors
described by xmul and ymul in the following ratio:

    rgbs[0] * (1-xmul) * (1-ymul) +
    rgbs[1] * (  xmul) * (1-ymul) +
    rgbs[2] * (1-xmul) * (  ymul) +
    rgbs[3] * (  xmul) * (  ymul)

xmul and ymul are integer values in the half-open range [0, 2^31)
where 0 == 0.0 and 2^31 == 1.0.

Note that since the range is half-open, the values are always
logically less than 1.0.  This makes sense because while choosing
pixels to blend, when the error values reach 1.0 we move to the
next pixel and reset them to 0.0.
"
      end

      class 877826 "Int"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2982402 // <generalisation>
	  relation 2982402 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2982402 // <generalisation>
	    b parent class_ref 877698 // TexturePaintContext
	end

	attribute 1436802 "srcRas"
	  package explicit_type "IntegerInterleavedRaster"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1436930 "inData"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437058 "inOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437186 "inSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437314 "outData"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437442 "outOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437570 "outSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437698 "filter"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6354306 "Int"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "srcRas" explicit_type "IntegerInterleavedRaster"
	    param inout name "cm" type class_ref 312066 // ColorModel
	    param inout name "xform" type class_ref 381058 // AffineTransform
	    param in name "maxw" explicit_type "int"
	    param inout name "filter" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6354434 "makeRaster"
	  public return_type class_ref 322690 // WritableRaster
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6354562 "setRaster"
	  public explicit_return_type "void"
	  nparams 16
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "xerr" explicit_type "int"
	    param in name "yerr" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	    param in name "bWidth" explicit_type "int"
	    param in name "bHeight" explicit_type "int"
	    param in name "colincx" explicit_type "int"
	    param in name "colincxerr" explicit_type "int"
	    param in name "colincy" explicit_type "int"
	    param in name "colincyerr" explicit_type "int"
	    param in name "rowincx" explicit_type "int"
	    param in name "rowincxerr" explicit_type "int"
	    param in name "rowincy" explicit_type "int"
	    param in name "rowincyerr" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 877954 "Byte"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2982530 // <generalisation>
	  relation 2982530 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2982530 // <generalisation>
	    b parent class_ref 877698 // TexturePaintContext
	end

	attribute 1437826 "srcRas"
	  package explicit_type "ByteInterleavedRaster"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1437954 "inData"
	  package explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438082 "inOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438210 "inSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438338 "outData"
	  package explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438466 "outOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438594 "outSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6354690 "Byte"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "srcRas" explicit_type "ByteInterleavedRaster"
	    param inout name "cm" type class_ref 312066 // ColorModel
	    param inout name "xform" type class_ref 381058 // AffineTransform
	    param in name "maxw" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6354818 "makeRaster"
	  public return_type class_ref 322690 // WritableRaster
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6354946 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6355074 "setRaster"
	  public explicit_return_type "void"
	  nparams 16
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "xerr" explicit_type "int"
	    param in name "yerr" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	    param in name "bWidth" explicit_type "int"
	    param in name "bHeight" explicit_type "int"
	    param in name "colincx" explicit_type "int"
	    param in name "colincxerr" explicit_type "int"
	    param in name "colincy" explicit_type "int"
	    param in name "colincyerr" explicit_type "int"
	    param in name "rowincx" explicit_type "int"
	    param in name "rowincxerr" explicit_type "int"
	    param in name "rowincy" explicit_type "int"
	    param in name "rowincyerr" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 878082 "ByteFilter"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2982658 // <generalisation>
	  relation 2982658 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2982658 // <generalisation>
	    b parent class_ref 877698 // TexturePaintContext
	end

	attribute 1438722 "srcRas"
	  package explicit_type "ByteInterleavedRaster"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438850 "inPalette"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1438978 "inData"
	  package explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1439106 "inOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1439234 "inSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1439362 "outData"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1439490 "outOff"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1439618 "outSpan"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6355202 "ByteFilter"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "srcRas" explicit_type "ByteInterleavedRaster"
	    param inout name "cm" type class_ref 312066 // ColorModel
	    param inout name "xform" type class_ref 381058 // AffineTransform
	    param in name "maxw" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6355330 "makeRaster"
	  public return_type class_ref 322690 // WritableRaster
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6355458 "setRaster"
	  public explicit_return_type "void"
	  nparams 16
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "xerr" explicit_type "int"
	    param in name "yerr" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	    param in name "bWidth" explicit_type "int"
	    param in name "bHeight" explicit_type "int"
	    param in name "colincx" explicit_type "int"
	    param in name "colincxerr" explicit_type "int"
	    param in name "colincy" explicit_type "int"
	    param in name "colincyerr" explicit_type "int"
	    param in name "rowincx" explicit_type "int"
	    param in name "rowincxerr" explicit_type "int"
	    param in name "rowincy" explicit_type "int"
	    param in name "rowincyerr" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 878210 "Any"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2982786 // <generalisation>
	  relation 2982786 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2982786 // <generalisation>
	    b parent class_ref 877698 // TexturePaintContext
	end

	classrelation 2982914 // srcRas (<unidirectional association>)
	  relation 2982914 --->
	    a role_name "srcRas" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2982914 // srcRas (<unidirectional association>)
	    b parent class_ref 322690 // WritableRaster
	end

	attribute 1439746 "filter"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6355586 "Any"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "srcRas" type class_ref 322690 // WritableRaster
	    param inout name "cm" type class_ref 312066 // ColorModel
	    param inout name "xform" type class_ref 381058 // AffineTransform
	    param in name "maxw" explicit_type "int"
	    param inout name "filter" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6355714 "makeRaster"
	  public return_type class_ref 322690 // WritableRaster
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6355842 "setRaster"
	  public explicit_return_type "void"
	  nparams 16
	    param in name "x" explicit_type "int"
	    param in name "y" explicit_type "int"
	    param in name "xerr" explicit_type "int"
	    param in name "yerr" explicit_type "int"
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	    param in name "bWidth" explicit_type "int"
	    param in name "bHeight" explicit_type "int"
	    param in name "colincx" explicit_type "int"
	    param in name "colincxerr" explicit_type "int"
	    param in name "colincy" explicit_type "int"
	    param in name "colincyerr" explicit_type "int"
	    param in name "rowincx" explicit_type "int"
	    param in name "rowincxerr" explicit_type "int"
	    param in name "rowincy" explicit_type "int"
	    param in name "rowincyerr" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 882562 "WaitDispatchSupport"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This utility class is used to suspend execution on a thread
while still allowing {@code EventDispatchThread} to dispatch events.
The API methods of the class are thread-safe.

@author Anton Tarasov, Artem Ananiev

@since 1.7
"
      classrelation 2987138 // <realization>
	relation 2987138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2987138 // <realization>
	  b parent class_ref 863618 // SecondaryLoop
      end

      attribute 1441538 "log"
	class_attribute const_attribute private explicit_type "PlatformLogger"
	init_value "
        PlatformLogger.getLogger(\"java.awt.event.WaitDispatchSupport\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2987266 // dispatchThread (<unidirectional association>)
	relation 2987266 --->
	  a role_name "dispatchThread" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987266 // dispatchThread (<unidirectional association>)
	  b parent class_ref 864002 // EventDispatchThread
      end

      classrelation 2987394 // filter (<unidirectional association>)
	relation 2987394 --->
	  a role_name "filter" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987394 // filter (<unidirectional association>)
	  b parent class_ref 864130 // EventFilter
      end

      classrelation 2987522 // extCondition (<unidirectional association>)
	relation 2987522 --->
	  a role_name "extCondition" volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987522 // extCondition (<unidirectional association>)
	  b parent class_ref 860930 // Conditional
      end

      classrelation 2987650 // condition (<unidirectional association>)
	relation 2987650 --->
	  a role_name "condition" volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987650 // condition (<unidirectional association>)
	  b parent class_ref 860930 // Conditional
      end

      attribute 1441666 "interval"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2987778 // timer (<unidirectional association>)
	relation 2987778 --->
	  a role_name "timer" class_relation private
	    comment " Use a shared daemon timer to serve all the WaitDispatchSupports
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987778 // timer (<unidirectional association>)
	  b parent class_ref 882690 // Timer
      end

      classrelation 2987906 // timerTask (<unidirectional association>)
	relation 2987906 --->
	  a role_name "timerTask" private
	    comment " When this WDS expires, we cancel the timer task leaving the
 shared timer up and running
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2987906 // timerTask (<unidirectional association>)
	  b parent class_ref 882818 // TimerTask
      end

      classrelation 2988034 // keepBlockingEDT (<unidirectional association>)
	relation 2988034 --->
	  a role_name "keepBlockingEDT" init_value " new AtomicBoolean(false)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2988034 // keepBlockingEDT (<unidirectional association>)
	  b parent class_ref 357506 // AtomicBoolean
      end

      classrelation 2988162 // keepBlockingCT (<unidirectional association>)
	relation 2988162 --->
	  a role_name "keepBlockingCT" init_value " new AtomicBoolean(false)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2988162 // keepBlockingCT (<unidirectional association>)
	  b parent class_ref 357506 // AtomicBoolean
      end

      operation 6378754 "initializeTimer"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6378882 "WaitDispatchSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "dispatchThread" type class_ref 864002 // EventDispatchThread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code WaitDispatchSupport} instance to
serve the given event dispatch thread.

@param dispatchThread An event dispatch thread that
       should not stop dispatching events while waiting

@since 1.7
"
      end

      operation 6379010 "WaitDispatchSupport"
	public explicit_return_type ""
	nparams 2
	  param inout name "dispatchThread" type class_ref 864002 // EventDispatchThread
	  param inout name "extCond" type class_ref 860930 // Conditional
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code WaitDispatchSupport} instance to
serve the given event dispatch thread.

@param dispatchThread An event dispatch thread that
       should not stop dispatching events while waiting
@param extCond A conditional object used to determine
       if the loop should be terminated

@since 1.7
"
      end

      operation 6379138 "WaitDispatchSupport"
	public explicit_return_type ""
	nparams 4
	  param inout name "dispatchThread" type class_ref 864002 // EventDispatchThread
	  param inout name "extCondition" type class_ref 860930 // Conditional
	  param inout name "filter" type class_ref 864130 // EventFilter
	  param in name "interval" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code WaitDispatchSupport} instance to
serve the given event dispatch thread.
<p>
The {@link EventFilter} is set on the {@code dispatchThread}
while waiting. The filter is removed on completion of the
waiting process.
<p>


@param dispatchThread An event dispatch thread that
       should not stop dispatching events while waiting
@param filter {@code EventFilter} to be set
@param interval A time interval to wait for. Note that
       when the waiting process takes place on EDT
       there is no guarantee to stop it in the given time

@since 1.7
"
      end

      operation 6379266 "enter"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6379394 "exit"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
"
      end

      operation 6379522 "getTreeLock"
	class_operation private return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2988290 // wakingRunnable (<unidirectional association>)
	relation 2988290 --->
	  a role_name "wakingRunnable" init_value " new Runnable() {
        public void run() {
            log.fine(\"Wake up EDT\");
            synchronized (getTreeLock()) {
                keepBlockingCT.set(false);
                getTreeLock().notifyAll();
            }
            log.fine(\"Wake up EDT done\");
        }
    }" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2988290 // wakingRunnable (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      operation 6379650 "wakeupEDT"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  package_ref 148482 // color

  deploymentview 141698 "awt"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 271106 "MenuContainer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 340226 // MenuContainer
      end
      comment "Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 271874 "Component"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.Objects;
import java.util.Vector;
import java.util.Locale;
import java.util.EventListener;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.Collections;
import java.awt.peer.ComponentPeer;
import java.awt.peer.ContainerPeer;
import java.awt.peer.LightweightPeer;
import java.awt.image.BufferStrategy;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.awt.image.ColorModel;
import java.awt.image.VolatileImage;
import java.awt.event.*;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.Transient;
import java.awt.im.InputContext;
import java.awt.im.InputMethodRequests;
import java.awt.dnd.DropTarget;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.AccessControlContext;
import javax.accessibility.*;
import java.applet.Applet;
import sun.security.action.GetPropertyAction;
import sun.awt.AppContext;
import sun.awt.AWTAccessor;
import sun.awt.ConstrainableGraphics;
import sun.awt.SubRegionShowable;
import sun.awt.SunToolkit;
import sun.awt.WindowClosingListener;
import sun.awt.CausedFocusEvent;
import sun.awt.EmbeddedFrame;
import sun.awt.dnd.SunDropTargetEvent;
import sun.awt.im.CompositionArea;
import sun.font.FontManager;
import sun.font.FontManagerFactory;
import sun.font.SunFontManager;
import sun.java2d.SunGraphics2D;
import sun.java2d.pipe.Region;
import sun.awt.image.VSyncedBSManager;
import sun.java2d.pipe.hw.ExtendedBufferCapabilities;
import sun.awt.RequestFocusController;
import sun.java2d.SunGraphicsEnvironment;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 338818 // Component
      end
      comment "Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 272130 "Container"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.dnd.DropTarget;
import java.awt.event.*;
import java.awt.peer.ContainerPeer;
import java.awt.peer.ComponentPeer;
import java.awt.peer.LightweightPeer;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.lang.ref.WeakReference;
import java.security.AccessController;
import java.util.ArrayList;
import java.util.EventListener;
import java.util.HashSet;
import java.util.Set;
import javax.accessibility.*;
import sun.util.logging.PlatformLogger;
import sun.awt.AppContext;
import sun.awt.AWTAccessor;
import sun.awt.CausedFocusEvent;
import sun.awt.PeerEvent;
import sun.awt.SunToolkit;
import sun.awt.dnd.SunDropTargetEvent;
import sun.java2d.pipe.Region;
import sun.security.action.GetBooleanAction;
${definition}"
      associated_elems
	class_ref 338690 // Container
	class_ref 349826 // LightweightDispatcher
      end
      comment "Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 280706 "LayoutManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 349698 // LayoutManager
      end
      comment "Copyright (c) 1995, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 280962 "Shape"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
${definition}"
      associated_elems
	class_ref 379394 // Shape
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 285826 "ItemSelectable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
${definition}"
      associated_elems
	class_ref 391298 // ItemSelectable
      end
      comment "Copyright (c) 1996, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 289410 "Rectangle"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Rectangle2D;
import java.beans.Transient;
${definition}"
      associated_elems
	class_ref 314114 // Rectangle
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 290562 "Cursor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileInputStream;
import java.beans.ConstructorProperties;
import java.util.Hashtable;
import java.util.Properties;
import java.util.StringTokenizer;
import java.security.AccessController;
import sun.util.logging.PlatformLogger;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 340866 // Cursor
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 290818 "LayoutManager2"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 406402 // LayoutManager2
      end
      comment "Copyright (c) 1996, 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 312706 "Window"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.geom.Path2D;
import java.awt.geom.Point2D;
import java.awt.im.InputContext;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.awt.peer.ComponentPeer;
import java.awt.peer.WindowPeer;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OptionalDataException;
import java.io.Serializable;
import java.lang.ref.WeakReference;
import java.lang.reflect.InvocationTargetException;
import java.security.AccessController;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.EventListener;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.Vector;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.accessibility.*;
import sun.awt.AWTAccessor;
import sun.awt.AppContext;
import sun.awt.CausedFocusEvent;
import sun.awt.SunToolkit;
import sun.awt.util.IdentityArrayList;
import sun.java2d.Disposer;
import sun.java2d.pipe.Region;
import sun.security.action.GetPropertyAction;
import sun.security.util.SecurityConstants;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 347394 // Window
	class_ref 469506 // FocusManager
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 314114 "KeyEventPostProcessor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.KeyEvent;
${definition}"
      associated_elems
	class_ref 471170 // KeyEventPostProcessor
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615170 "Panel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 855042 // Panel
      end
      comment "Copyright (c) 1995, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615810 "ActiveEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 855810 // ActiveEvent
      end
      comment "Copyright (c) 1997, 2002, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615938 "Adjustable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 855938 // Adjustable
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 616066 "Composite"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ColorModel;
${definition}"
      associated_elems
	class_ref 856322 // Composite
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 616194 "AlphaComposite"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ColorModel;
import java.lang.annotation.Native;
import sun.java2d.SunCompositeContext;
${definition}"
      associated_elems
	class_ref 856194 // AlphaComposite
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 616322 "AttributeValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 856706 // AttributeValue
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 616450 "AWTError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 856834 // AWTError
      end
      comment "Copyright (c) 1995, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 616578 "AWTEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import java.awt.event.*;
import java.awt.peer.ComponentPeer;
import java.awt.peer.LightweightPeer;
import java.lang.reflect.Field;
import sun.awt.AWTAccessor;
import sun.util.logging.PlatformLogger;
import java.security.AccessControlContext;
import java.security.AccessController;
${definition}"
      associated_elems
	class_ref 339202 // AWTEvent
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617218 "AWTEventMulticaster"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.lang.reflect.Array;
import java.util.EventListener;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 856962 // AWTEventMulticaster
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617346 "AWTException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 344450 // AWTException
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617474 "AWTKeyStroke"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.KeyEvent;
import sun.awt.AppContext;
import java.awt.event.InputEvent;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;
import java.io.Serializable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Modifier;
import java.lang.reflect.Field;
${definition}"
      associated_elems
	class_ref 341506 // AWTKeyStroke
	class_ref 857474 // VKCollection
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617602 "AWTPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
${definition}"
      associated_elems
	class_ref 857602 // AWTPermission
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617730 "Stroke"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 857858 // Stroke
      end
      comment "Copyright (c) 1996, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617858 "BasicStroke"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.ConstructorProperties;
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 857730 // BasicStroke
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 617986 "BorderLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Hashtable;
${definition}"
      associated_elems
	class_ref 857986 // BorderLayout
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618114 "BufferCapabilities"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 344578 // BufferCapabilities
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618242 "Button"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.ButtonPeer;
import java.util.EventListener;
import java.awt.event.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 858114 // Button
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618370 "Canvas"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.BufferStrategy;
import java.awt.peer.CanvasPeer;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 858370 // Canvas
      end
      comment "Copyright (c) 1995, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618498 "CardLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;
import java.io.Serializable;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 858626 // CardLayout
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618626 "Checkbox"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.CheckboxPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 858882 // Checkbox
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618754 "CheckboxGroup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 859010 // CheckboxGroup
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 618882 "MenuComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.MenuComponentPeer;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import sun.awt.AppContext;
import sun.awt.AWTAccessor;
import javax.accessibility.*;
import java.security.AccessControlContext;
import java.security.AccessController;
${definition}"
      associated_elems
	class_ref 340482 // MenuComponent
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619010 "MenuItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.MenuItemPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 859394 // MenuItem
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619138 "CheckboxMenuItem"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.CheckboxMenuItemPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 859266 // CheckboxMenuItem
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619266 "Choice"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.awt.peer.ChoicePeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 860162 // Choice
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619394 "Transparency"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 860546 // Transparency
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619522 "Paint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ColorModel;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
${definition}"
      associated_elems
	class_ref 860418 // Paint
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619650 "Color"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.ConstructorProperties;
import java.awt.image.ColorModel;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.color.ColorSpace;
${definition}"
      associated_elems
	class_ref 323458 // Color
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619778 "PaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.Raster;
import java.awt.image.ColorModel;
${definition}"
      associated_elems
	class_ref 860674 // PaintContext
      end
      comment "Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 619906 "ColorPaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ColorModel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import sun.awt.image.IntegerComponentRaster;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 860802 // ColorPaintContext
      end
      comment "Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620034 "ComponentOrientation"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 341762 // ComponentOrientation
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















(C) Copyright IBM Corp. 1998 - All Rights Reserved

The original version of this source code and documentation is copyrighted
and owned by IBM, Inc. These materials are provided under terms of a
License Agreement between IBM and Sun. This technology is protected by
multiple US and International patents. This notice and attribution to IBM
may not be removed.

"
    end

    artifact 620162 "CompositeContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
${definition}"
      associated_elems
	class_ref 856450 // CompositeContext
      end
      comment "Copyright (c) 1997, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620290 "Conditional"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 860930 // Conditional
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620418 "FocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 349954 // FocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620546 "ContainerOrderFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import java.util.ArrayList;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 861058 // ContainerOrderFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620674 "DefaultFocusTraversalPolicy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.ComponentPeer;
${definition}"
      associated_elems
	class_ref 861314 // DefaultFocusTraversalPolicy
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620802 "KeyEventDispatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.KeyEvent;
${definition}"
      associated_elems
	class_ref 861698 // KeyEventDispatcher
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 620930 "KeyboardFocusManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.FocusEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.peer.KeyboardFocusManagerPeer;
import java.awt.peer.LightweightPeer;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeSupport;
import java.lang.ref.WeakReference;
import java.lang.reflect.Field;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.WeakHashMap;
import sun.util.logging.PlatformLogger;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.CausedFocusEvent;
import sun.awt.KeyboardFocusManagerPeerProvider;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 861570 // KeyboardFocusManager
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621058 "SentEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.AppContext;
import sun.awt.SunToolkit;
${definition}"
      associated_elems
	class_ref 862850 // SentEvent
      end
      comment "Copyright (c) 2000, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621186 "DefaultKeyboardFocusManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.peer.ComponentPeer;
import java.awt.peer.LightweightPeer;
import java.lang.ref.WeakReference;
import java.util.LinkedList;
import java.util.Iterator;
import java.util.ListIterator;
import java.util.Set;
import sun.util.logging.PlatformLogger;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.AWTAccessor;
import sun.awt.CausedFocusEvent;
import sun.awt.TimedWindowEvent;
${definition}"
      associated_elems
	class_ref 861442 // DefaultKeyboardFocusManager
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621314 "Desktop"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URI;
import java.net.URL;
import java.net.MalformedURLException;
import java.awt.AWTPermission;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.peer.DesktopPeer;
import sun.awt.SunToolkit;
import sun.awt.HeadlessToolkit;
import java.io.FilePermission;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 862978 // Desktop
      end
      comment "Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621442 "Dialog"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.DialogPeer;
import java.awt.event.*;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Iterator;
import java.util.concurrent.atomic.AtomicLong;
import java.security.AccessController;
import java.security.PrivilegedAction;
import javax.accessibility.*;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.PeerEvent;
import sun.awt.util.IdentityArrayList;
import sun.awt.util.IdentityLinkedList;
import sun.security.util.SecurityConstants;
import java.security.AccessControlException;
${definition}"
      associated_elems
	class_ref 469122 // Dialog
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621698 "Dimension"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Dimension2D;
import java.beans.Transient;
${definition}"
      associated_elems
	class_ref 316802 // Dimension
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621826 "DisplayMode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 863874 // DisplayMode
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 621954 "Event"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.io.*;
${definition}"
      associated_elems
	class_ref 340610 // Event
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622082 "EventFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 864130 // EventFilter
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622210 "EventDispatchThread"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.MouseEvent;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import sun.util.logging.PlatformLogger;
import sun.awt.dnd.SunDragSourceContextPeer;
import sun.awt.EventQueueDelegate;
${definition}"
      associated_elems
	class_ref 864002 // EventDispatchThread
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622338 "EventQueue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.peer.ComponentPeer;
import java.lang.ref.WeakReference;
import java.lang.reflect.InvocationTargetException;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.EmptyStackException;
import sun.awt.*;
import sun.awt.dnd.SunDropTargetEvent;
import sun.util.logging.PlatformLogger;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.atomic.AtomicInteger;
import java.security.AccessControlContext;
import sun.misc.SharedSecrets;
import sun.misc.JavaSecurityAccess;
${definition}"
      associated_elems
	class_ref 339458 // EventQueue
	class_ref 864514 // Queue
      end
      comment "Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622466 "FileDialog"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.FileDialogPeer;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.File;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 865154 // FileDialog
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622594 "FlowLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 865282 // FlowLayout
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622722 "Font"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.font.FontRenderContext;
import java.awt.font.GlyphVector;
import java.awt.font.LineMetrics;
import java.awt.font.TextAttribute;
import java.awt.font.TextLayout;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.peer.FontPeer;
import java.io.*;
import java.lang.ref.SoftReference;
import java.nio.file.Files;
import java.security.AccessController;
import java.security.PrivilegedExceptionAction;
import java.text.AttributedCharacterIterator.Attribute;
import java.text.CharacterIterator;
import java.text.StringCharacterIterator;
import java.util.Hashtable;
import java.util.Locale;
import java.util.Map;
import sun.font.StandardGlyphVector;
import sun.font.AttributeMap;
import sun.font.AttributeValues;
import sun.font.CompositeFont;
import sun.font.CreatedFontTracker;
import sun.font.Font2D;
import sun.font.Font2DHandle;
import sun.font.FontAccess;
import sun.font.FontManager;
import sun.font.FontManagerFactory;
import sun.font.FontUtilities;
import sun.font.GlyphLayout;
import sun.font.FontLineMetrics;
import sun.font.CoreMetrics;
import static sun.font.EAttribute.*;
${definition}"
      associated_elems
	class_ref 340354 // Font
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622850 "FontFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 865794 // FontFormatException
      end
      comment "Copyright (c) 1999, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 622978 "FontMetrics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.font.LineMetrics;
import java.awt.geom.Rectangle2D;
import java.text.CharacterIterator;
${definition}"
      associated_elems
	class_ref 343810 // FontMetrics
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623106 "Frame"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.FramePeer;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;
import java.io.Serializable;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.AWTAccessor;
import java.lang.ref.WeakReference;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 393346 // Frame
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623234 "GradientPaint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.AffineTransform;
import java.awt.image.ColorModel;
import java.beans.ConstructorProperties;
${definition}"
      associated_elems
	class_ref 866818 // GradientPaint
      end
      comment "Copyright (c) 1997, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623362 "GradientPaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.Raster;
import sun.awt.image.IntegerComponentRaster;
import java.awt.image.ColorModel;
import java.awt.image.DirectColorModel;
import java.awt.geom.Point2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.NoninvertibleTransformException;
import java.lang.ref.WeakReference;
${definition}"
      associated_elems
	class_ref 867074 // GradientPaintContext
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623490 "Graphics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.*;
import java.util.*;
import java.awt.image.ImageObserver;
import java.text.AttributedCharacterIterator;
${definition}"
      associated_elems
	class_ref 343682 // Graphics
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623618 "Graphics2D"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.RenderingHints.Key;
import java.awt.geom.AffineTransform;
import java.awt.image.ImageObserver;
import java.awt.image.BufferedImageOp;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.awt.image.renderable.RenderableImage;
import java.awt.font.GlyphVector;
import java.awt.font.FontRenderContext;
import java.awt.font.TextAttribute;
import java.text.AttributedCharacterIterator;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 338178 // Graphics2D
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623746 "GraphicsCallback"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.LightweightPeer;
import sun.awt.SunGraphicsCallback;
${definition}"
      associated_elems
	class_ref 867586 // GraphicsCallback
      end
      comment "Copyright (c) 1999, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 623874 "GraphicsConfigTemplate"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
${definition}"
      associated_elems
	class_ref 868866 // GraphicsConfigTemplate
      end
      comment "Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624002 "GraphicsConfiguration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.VolatileImage;
import java.awt.image.WritableRaster;
import sun.awt.image.SunVolatileImage;
${definition}"
      associated_elems
	class_ref 340994 // GraphicsConfiguration
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624130 "GraphicsDevice"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ColorModel;
import sun.awt.AWTAccessor;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
${definition}"
      associated_elems
	class_ref 868994 // GraphicsDevice
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624258 "GraphicsEnvironment"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.BufferedImage;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Locale;
import sun.font.FontManager;
import sun.font.FontManagerFactory;
import sun.java2d.HeadlessGraphicsEnvironment;
import sun.java2d.SunGraphicsEnvironment;
import sun.security.action.GetPropertyAction;
${definition}"
      associated_elems
	class_ref 869378 // GraphicsEnvironment
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624386 "GridBagConstraints"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 426882 // GridBagConstraints
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624514 "GridBagLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Hashtable;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 869506 // GridBagLayout
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624642 "GridBagLayoutInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 869634 // GridBagLayoutInfo
      end
      comment "Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624770 "GridLayout"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 869762 // GridLayout
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625026 "HeadlessException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 343554 // HeadlessException
      end
      comment "Copyright (c) 2000, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625282 "IllegalComponentStateException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 348290 // IllegalComponentStateException
      end
      comment "Copyright (c) 1996, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625410 "Image"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.ImageProducer;
import java.awt.image.ImageObserver;
import java.awt.image.ImageFilter;
import java.awt.image.FilteredImageSource;
import java.awt.image.AreaAveragingScaleFilter;
import java.awt.image.ReplicateScaleFilter;
import sun.awt.image.SurfaceManager;
${definition}"
      associated_elems
	class_ref 340098 // Image
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625538 "ImageCapabilities"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 344322 // ImageCapabilities
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625666 "Insets"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 343938 // Insets
      end
      comment "Copyright (c) 1995, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625794 "JobAttributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 869890 // JobAttributes
      end
      comment "Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625922 "Label"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.LabelPeer;
import java.io.IOException;
import java.io.ObjectInputStream;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 870658 // Label
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626050 "MultipleGradientPaint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.image.ColorModel;
import java.lang.ref.SoftReference;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 870914 // MultipleGradientPaint
      end
      comment "Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626178 "LinearGradientPaint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
import java.beans.ConstructorProperties;
${definition}"
      associated_elems
	class_ref 455554 // LinearGradientPaint
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626306 "MultipleGradientPaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.MultipleGradientPaint.CycleMethod;
import java.awt.MultipleGradientPaint.ColorSpaceType;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.geom.NoninvertibleTransformException;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferInt;
import java.awt.image.DirectColorModel;
import java.awt.image.Raster;
import java.awt.image.SinglePixelPackedSampleModel;
import java.awt.image.WritableRaster;
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 871426 // MultipleGradientPaintContext
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626434 "LinearGradientPaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.MultipleGradientPaint.CycleMethod;
import java.awt.MultipleGradientPaint.ColorSpaceType;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
${definition}"
      associated_elems
	class_ref 871298 // LinearGradientPaintContext
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626562 "List"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.util.Locale;
import java.util.EventListener;
import java.awt.peer.ListPeer;
import java.awt.event.*;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 861186 // List
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626690 "MediaTracker"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Image;
import java.awt.image.ImageObserver;
import sun.awt.image.MultiResolutionToolkitImage;
${definition}"
      associated_elems
	class_ref 871810 // MediaTracker
	class_ref 871938 // MediaEntry
	class_ref 872066 // ImageMediaEntry
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626818 "Menu"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.Vector;
import java.util.Enumeration;
import java.awt.peer.MenuPeer;
import java.awt.event.KeyEvent;
import javax.accessibility.*;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 872194 // Menu
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 626946 "MenuBar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.Vector;
import java.util.Enumeration;
import sun.awt.AWTAccessor;
import java.awt.peer.MenuBarPeer;
import java.awt.event.KeyEvent;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 866562 // MenuBar
      end
      comment "Copyright (c) 1995, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627074 "MenuShortcut"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.KeyEvent;
${definition}"
      associated_elems
	class_ref 859778 // MenuShortcut
      end
      comment "Copyright (c) 1996, 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627202 "ModalEventFilter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import sun.awt.AppContext;
${definition}"
      associated_elems
	class_ref 863490 // ModalEventFilter
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627330 "MouseInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 872962 // MouseInfo
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627458 "PageAttributes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 873090 // PageAttributes
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627714 "Point"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Point2D;
import java.beans.Transient;
${definition}"
      associated_elems
	class_ref 323714 // Point
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627842 "PointerInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 343426 // PointerInfo
      end
      comment "Copyright (c) 2003, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 627970 "Polygon"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import sun.awt.geom.Crossings;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 444674 // Polygon
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628098 "PopupMenu"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.PopupMenuPeer;
import javax.accessibility.*;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 341378 // PopupMenu
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628226 "PrintGraphics"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 874242 // PrintGraphics
      end
      comment "Copyright (c) 1996, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628354 "PrintJob"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 874370 // PrintJob
      end
      comment "Copyright (c) 1996, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628482 "RadialGradientPaint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
import java.beans.ConstructorProperties;
${definition}"
      associated_elems
	class_ref 455682 // RadialGradientPaint
      end
      comment "Copyright (c) 2006, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628610 "RadialGradientPaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.MultipleGradientPaint.CycleMethod;
import java.awt.MultipleGradientPaint.ColorSpaceType;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
${definition}"
      associated_elems
	class_ref 874498 // RadialGradientPaintContext
      end
      comment "Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628738 "RenderingHints"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.Set;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import sun.awt.SunHints;
import java.lang.ref.WeakReference;
${definition}"
      associated_elems
	class_ref 856578 // RenderingHints
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628866 "Robot"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferInt;
import java.awt.image.DirectColorModel;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.awt.peer.RobotPeer;
import java.lang.reflect.InvocationTargetException;
import sun.awt.ComponentFactory;
import sun.awt.SunToolkit;
import sun.awt.image.SunWritableRaster;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 874626 // Robot
      end
      comment "Copyright (c) 1999, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 628994 "Scrollbar"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.ScrollbarPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 875138 // Scrollbar
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629122 "ScrollPane"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.LightweightPeer;
import java.awt.peer.ScrollPanePeer;
import java.awt.event.*;
import javax.accessibility.*;
import sun.awt.ScrollPaneWheelScroller;
import sun.awt.SunToolkit;
import java.beans.ConstructorProperties;
import java.beans.Transient;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 875394 // ScrollPane
	class_ref 875906 // PeerFixer
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629250 "ScrollPaneAdjustable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.AWTAccessor;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.peer.ScrollPanePeer;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 875522 // ScrollPaneAdjustable
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629378 "SecondaryLoop"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 863618 // SecondaryLoop
      end
      comment "Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629506 "SequencedEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.LinkedList;
import sun.awt.AWTAccessor;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
${definition}"
      associated_elems
	class_ref 861954 // SequencedEvent
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629634 "SplashScreen"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.awt.image.*;
import java.net.URL;
import java.net.URLConnection;
import java.io.File;
import sun.util.logging.PlatformLogger;
import sun.awt.image.SunWritableRaster;
${definition}"
      associated_elems
	class_ref 876034 // SplashScreen
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629762 "SystemColor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.awt.AWTAccessor;
import java.io.ObjectStreamException;
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 876162 // SystemColor
      end
      comment "Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 629890 "SystemTray"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import java.awt.peer.SystemTrayPeer;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.HeadlessToolkit;
import sun.security.util.SecurityConstants;
import sun.awt.AWTAccessor;
${definition}"
      associated_elems
	class_ref 876290 // SystemTray
      end
      comment "Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630018 "TextComponent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.TextComponentPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import sun.awt.InputMethodSupport;
import java.text.BreakIterator;
import javax.swing.text.AttributeSet;
import javax.accessibility.*;
import java.awt.im.InputMethodRequests;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 876802 // TextComponent
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630146 "TextArea"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.peer.TextAreaPeer;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 876674 // TextArea
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630274 "TextField"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.peer.TextFieldPeer;
import java.awt.event.*;
import java.util.EventListener;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 877314 // TextField
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630402 "TexturePaint"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.geom.Rectangle2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
${definition}"
      associated_elems
	class_ref 877570 // TexturePaint
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630530 "TexturePaintContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.image.BufferedImage;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.awt.image.ColorModel;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.geom.AffineTransform;
import java.awt.geom.NoninvertibleTransformException;
import java.lang.ref.WeakReference;
import sun.awt.image.SunWritableRaster;
import sun.awt.image.IntegerInterleavedRaster;
import sun.awt.image.ByteInterleavedRaster;
${definition}"
      associated_elems
	class_ref 877698 // TexturePaintContext
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 630914 "Toolkit"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.awt.event.*;
import java.awt.peer.*;
import java.awt.im.InputMethodHighlight;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.awt.image.ColorModel;
import java.awt.datatransfer.Clipboard;
import java.awt.dnd.DragSource;
import java.awt.dnd.DragGestureRecognizer;
import java.awt.dnd.DragGestureEvent;
import java.awt.dnd.DragGestureListener;
import java.awt.dnd.InvalidDnDOperationException;
import java.awt.dnd.peer.DragSourceContextPeer;
import java.net.URL;
import java.io.File;
import java.io.FileInputStream;
import java.util.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import sun.awt.AppContext;
import sun.awt.HeadlessToolkit;
import sun.awt.NullComponentPeer;
import sun.awt.PeerEvent;
import sun.awt.SunToolkit;
import sun.awt.AWTAccessor;
import sun.security.util.SecurityConstants;
import sun.util.CoreResourceBundleControl;
${definition}"
      associated_elems
	class_ref 343298 // Toolkit
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 631042 "TrayIcon"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.*;
import java.awt.peer.TrayIconPeer;
import sun.awt.AppContext;
import sun.awt.SunToolkit;
import sun.awt.AWTAccessor;
import sun.awt.HeadlessToolkit;
import java.util.EventObject;
import java.security.AccessControlContext;
import java.security.AccessController;
${definition}"
      associated_elems
	class_ref 876546 // TrayIcon
      end
      comment "Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 631170 "WaitDispatchSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.atomic.AtomicBoolean;
import java.security.PrivilegedAction;
import java.security.AccessController;
import sun.awt.PeerEvent;
import sun.util.logging.PlatformLogger;
${definition}"
      associated_elems
	class_ref 882562 // WaitDispatchSupport
      end
      comment "Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 150658 // peer

  package_ref 150786 // dnd

  package_ref 150914 // event

  package_ref 151170 // im

  package_ref 151426 // datatransfer

  package_ref 153346 // geom

  package_ref 154498 // print

  package_ref 180482 // font
end
