class RadialGradientPaint
!!!6307074.java!!!	RadialGradientPaint(in cx : float, in cy : float, in radius : float, inout fractions : float [[]], inout colors : Color [[]])
        this(cx, cy,
             radius,
             cx, cy,
             fractions,
             colors,
             CycleMethod.NO_CYCLE);
!!!6307202.java!!!	RadialGradientPaint(inout center : Point2D, in radius : float, inout fractions : float [[]], inout colors : Color [[]])
        this(center,
             radius,
             center,
             fractions,
             colors,
             CycleMethod.NO_CYCLE);
!!!6307330.java!!!	RadialGradientPaint(in cx : float, in cy : float, in radius : float, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod)
        this(cx, cy,
             radius,
             cx, cy,
             fractions,
             colors,
             cycleMethod);
!!!6307458.java!!!	RadialGradientPaint(inout center : Point2D, in radius : float, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod)
        this(center,
             radius,
             center,
             fractions,
             colors,
             cycleMethod);
!!!6307586.java!!!	RadialGradientPaint(in cx : float, in cy : float, in radius : float, in fx : float, in fy : float, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod)
        this(new Point2D.Float(cx, cy),
             radius,
             new Point2D.Float(fx, fy),
             fractions,
             colors,
             cycleMethod);
!!!6307714.java!!!	RadialGradientPaint(inout center : Point2D, in radius : float, inout focus : Point2D, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod)
        this(center,
             radius,
             focus,
             fractions,
             colors,
             cycleMethod,
             ColorSpaceType.SRGB,
             new AffineTransform());
!!!6307842.java!!!	RadialGradientPaint(inout center : Point2D, in radius : float, inout focus : Point2D, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod, inout colorSpace : MultipleGradientPaint::ColorSpaceType, inout gradientTransform : AffineTransform)
        super(fractions, colors, cycleMethod, colorSpace, gradientTransform);

        // check input arguments
        if (center == null) {
            throw new NullPointerException("Center point must be non-null");
        }

        if (focus == null) {
            throw new NullPointerException("Focus point must be non-null");
        }

        if (radius <= 0) {
            throw new IllegalArgumentException("Radius must be greater " +
                                               "than zero");
        }

        // copy parameters
        this.center = new Point2D.Double(center.getX(), center.getY());
        this.focus = new Point2D.Double(focus.getX(), focus.getY());
        this.radius = radius;
!!!6307970.java!!!	RadialGradientPaint(inout gradientBounds : Rectangle2D, inout fractions : float [[]], inout colors : Color [[]], inout cycleMethod : MultipleGradientPaint::CycleMethod)
        // gradient center/focal point is the center of the bounding box,
        // radius is set to 1.0, and then we set a scale transform
        // to achieve an elliptical gradient defined by the bounding box
        this(new Point2D.Double(gradientBounds.getCenterX(),
                                gradientBounds.getCenterY()),
             1.0f,
             new Point2D.Double(gradientBounds.getCenterX(),
                                gradientBounds.getCenterY()),
             fractions,
             colors,
             cycleMethod,
             ColorSpaceType.SRGB,
             createGradientTransform(gradientBounds));

        if (gradientBounds.isEmpty()) {
            throw new IllegalArgumentException("Gradient bounds must be " +
                                               "non-empty");
        }
!!!6308098.java!!!	createGradientTransform(inout r : Rectangle2D) : AffineTransform
        double cx = r.getCenterX();
        double cy = r.getCenterY();
        AffineTransform xform = AffineTransform.getTranslateInstance(cx, cy);
        xform.scale(r.getWidth()/2, r.getHeight()/2);
        xform.translate(-cx, -cy);
        return xform;
!!!6308226.java!!!	createContext(inout cm : ColorModel, inout deviceBounds : Rectangle, inout userBounds : Rectangle2D, inout transform : AffineTransform, inout hints : RenderingHints) : PaintContext
        // avoid modifying the user's transform...
        transform = new AffineTransform(transform);
        // incorporate the gradient transform
        transform.concatenate(gradientTransform);

        return new RadialGradientPaintContext(this, cm,
                                              deviceBounds, userBounds,
                                              transform, hints,
                                              (float)center.getX(),
                                              (float)center.getY(),
                                              radius,
                                              (float)focus.getX(),
                                              (float)focus.getY(),
                                              fractions, colors,
                                              cycleMethod, colorSpace);
!!!6308354.java!!!	getCenterPoint() : Point2D
        return new Point2D.Double(center.getX(), center.getY());
!!!6308482.java!!!	getFocusPoint() : Point2D
        return new Point2D.Double(focus.getX(), focus.getY());
!!!6308610.java!!!	getRadius() : float
        return radius;
