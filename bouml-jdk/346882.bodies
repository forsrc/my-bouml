class HierarchyEvent
!!!6436354.java!!!	HierarchyEvent(inout source : Component, in id : int, inout changed : Component, inout changedParent : Container)
        super(source, id);
        this.changed = changed;
        this.changedParent = changedParent;
!!!6436482.java!!!	HierarchyEvent(inout source : Component, in id : int, inout changed : Component, inout changedParent : Container, in changeFlags : long)
        super(source, id);
        this.changed = changed;
        this.changedParent = changedParent;
        this.changeFlags = changeFlags;
!!!6436610.java!!!	getComponent() : Component
        return (source instanceof Component) ? (Component)source : null;
!!!6436738.java!!!	getChanged() : Component
        return changed;
!!!6436866.java!!!	getChangedParent() : Container
        return changedParent;
!!!6436994.java!!!	getChangeFlags() : long
        return changeFlags;
!!!6437122.java!!!	paramString() : String
        String typeStr;
        switch(id) {
          case ANCESTOR_MOVED:
              typeStr = "ANCESTOR_MOVED ("+changed+","+changedParent+")";
              break;
          case ANCESTOR_RESIZED:
              typeStr = "ANCESTOR_RESIZED ("+changed+","+changedParent+")";
              break;
          case HIERARCHY_CHANGED: {
              typeStr = "HIERARCHY_CHANGED (";
              boolean first = true;
              if ((changeFlags & PARENT_CHANGED) != 0) {
                  first = false;
                  typeStr += "PARENT_CHANGED";
              }
              if ((changeFlags & DISPLAYABILITY_CHANGED) != 0) {
                  if (first) {
                      first = false;
                  } else {
                      typeStr += ",";
                  }
                  typeStr += "DISPLAYABILITY_CHANGED";
              }
              if ((changeFlags & SHOWING_CHANGED) != 0) {
                  if (first) {
                      first = false;
                  } else {
                      typeStr += ",";
                  }
                  typeStr += "SHOWING_CHANGED";
              }
              if (!first) {
                  typeStr += ",";
              }
              typeStr += changed + "," + changedParent + ")";
              break;
          }
          default:
              typeStr = "unknown type";
        }
        return typeStr;
