class CompositeInvocationHandlerImpl
!!!1325186.java!!!	addInvocationHandler(inout interf : Class, inout handler : InvocationHandler) : void
        checkAccess();
        classToInvocationHandler.put( interf, handler ) ;
!!!1325314.java!!!	setDefaultHandler(inout handler : InvocationHandler) : void
        checkAccess();
        defaultHandler = handler ;
!!!1325442.java!!!	invoke(inout proxy : Object, inout method : Method, inout args : Object [[]]) : Object
        // Note that the declaring class in method is the interface
        // in which the method was defined, not the proxy class.
        Class cls = method.getDeclaringClass() ;
        InvocationHandler handler =
            (InvocationHandler)classToInvocationHandler.get( cls ) ;

        if (handler == null) {
            if (defaultHandler != null)
                handler = defaultHandler ;
            else {
                ORBUtilSystemException wrapper = ORBUtilSystemException.get(
                    CORBALogDomains.UTIL ) ;
                throw wrapper.noInvocationHandler( "\"" + method.toString() +
                    "\"" ) ;
            }
        }

        // handler should never be null here.

        return handler.invoke( proxy, method, args ) ;
!!!1325570.java!!!	checkAccess() : void
        final SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            sm.checkPermission(perm);
}
