class FunctionOneArg
!!!5891074.java!!!	getArg0() : Expression
    return m_arg0;
!!!5891202.java!!!	setArg(inout arg : Expression, in argNum : int) : void

    if (0 == argNum)
    {
      m_arg0 = arg;
      arg.exprSetParent(this);
    }
    else
      reportWrongNumberArgs();
!!!5891330.java!!!	checkNumberArgs(in argNum : int) : void
    if (argNum != 1)
      reportWrongNumberArgs();
!!!5891458.java!!!	reportWrongNumberArgs() : void
      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("one", null));
!!!5891586.java!!!	canTraverseOutsideSubtree() : boolean
    return m_arg0.canTraverseOutsideSubtree();
!!!5891714.java!!!	fixupVariables(inout vars : Vector, in globalsSize : int) : void
    if(null != m_arg0)
      m_arg0.fixupVariables(vars, globalsSize);
!!!5891842.java!!!	callArgVisitors(inout visitor : XPathVisitor) : void
        if(null != m_arg0)
                m_arg0.callVisitors(this, visitor);
!!!5891970.java!!!	getExpression() : Expression
    return m_arg0;
!!!5892098.java!!!	setExpression(inout exp : Expression) : void
        exp.exprSetParent(this);
        m_arg0 = exp;
!!!5892226.java!!!	deepEquals(inout expr : Expression) : boolean
        if(!super.deepEquals(expr))
                return false;

        if(null != m_arg0)
        {
                if(null == ((FunctionOneArg)expr).m_arg0)
                        return false;

                if(!m_arg0.deepEquals(((FunctionOneArg)expr).m_arg0))
                        return false;
        }
        else if(null != ((FunctionOneArg)expr).m_arg0)
                return false;

        return true;
