format 222
"getopt" // jdk1.8::com::sun::org::apache::xalan::internal::xsltc::cmdline::getopt
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xalan/internal/xsltc/cmdline/getopt/"
  java_package "com.sun.org.apache.xalan.internal.xsltc.cmdline.getopt"
  classview 158210 "getopt"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 591490 "GetOpt"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "GetOpt is a Java equivalent to the C getopt() library function
discussed in man page getopt(3C). It provides command line
parsing for Java applications. It supports the most rules of the
command line standard (see man page intro(1)) including stacked
options such as '-sxm' (which is equivalent to -s -x -m); it
handles special '--' option that signifies the end of options.
Additionally this implementation of getopt will check for
mandatory arguments to options such as in the case of
'-d <file>' it will throw a MissingOptArgException if the
option argument '<file>' is not included on the commandline.
getopt(3C) does not check for this.
@author G Todd Miller
"
      operation 3683458 "GetOpt"
	public explicit_return_type ""
	nparams 2
	  param inout name "args" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "optString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3683586 "printOptions"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "debugging routine to print out all options collected
"
      end

      operation 3683714 "getNextOption"
	public explicit_return_type "int"
	nparams 0
	nexceptions 2
	  exception class_ref 591618 // IllegalArgumentException
	  exception class_ref 591746 // MissingOptArgException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "gets the next option found in the commandline. Distinguishes
between two bad cases, one case is when an illegal option
is found, and then other case is when an option takes an
argument but no argument was found for that option.
If the option found was not declared in the optString, then
an IllegalArgumentException will be thrown (case 1).
If the next option found has been declared to take an argument,
and no such argument exists, then a MissingOptArgException
is thrown (case 2).
@param none
@return int - the next option found.
@throws IllegalArgumentException, MissingOptArgException.
"
      end

      operation 3683842 "getOptionArg"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "gets the argument for the current parsed option. For example,
in case of '-d <file>', if current option parsed is 'd' then
getOptionArg() would return '<file>'.
@return String - argument for current parsed option.
@param none
"
      end

      operation 3683970 "getCmdArgs"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "gets list of the commandline arguments. For example, in command
such as 'cmd -s -d file file2 file3 file4'  with the usage
'cmd [-s] [-d <file>] <file>...', getCmdArgs() would return
the list {file2, file3, file4}.
@return String[] - list of command arguments that may appear
                   after options and option arguments.
@params none
"
      end

      class 591874 "Option"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 804610 "theArgLetter"
	  private explicit_type "char"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1578370 // theArgument (<unidirectional association>)
	  relation 1578370 --->
	    a role_name "theArgument" init_value " null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1578370 // theArgument (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 3684098 "Option"
	  public explicit_return_type ""
	  nparams 1
	    param in name "argLetter" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684226 "setArg"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "arg" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684354 "hasArg"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684482 "getArgLetter"
	  public explicit_return_type "char"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684610 "getArgument"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1577730 // theCurrentOption (<unidirectional association>)
	relation 1577730 --->
	  a role_name "theCurrentOption" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1577730 // theCurrentOption (<unidirectional association>)
	  b parent class_ref 591874 // Option
      end

      classrelation 1577858 // theOptionsIterator (<unidirectional association>)
	relation 1577858 --->
	  a role_name "theOptionsIterator" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1577858 // theOptionsIterator (<unidirectional association>)
	  b parent class_ref 185090 // ListIterator
      end

      classrelation 1577986 // theOptions (<unidirectional association>)
	relation 1577986 --->
	  a role_name "theOptions" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1577986 // theOptions (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 1578114 // theCmdArgs (<unidirectional association>)
	relation 1578114 --->
	  a role_name "theCmdArgs" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1578114 // theCmdArgs (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      class 592002 "OptionMatcher"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 3684738 "OptionMatcher"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "optString" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684866 "match"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3684994 "hasArg"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1578498 // theOptString (<unidirectional association>)
	  relation 1578498 --->
	    a role_name "theOptString" init_value " null" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1578498 // theOptString (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      classrelation 1578242 // theOptionMatcher (<unidirectional association>)
	relation 1578242 --->
	  a role_name "theOptionMatcher" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1578242 // theOptionMatcher (<unidirectional association>)
	  b parent class_ref 592002 // OptionMatcher
      end
    end

    class 591618 "IllegalArgumentException"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 1578754 // <generalisation>
	relation 1578754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1578754 // <generalisation>
	  b parent class_ref 592130 // GetOptsException
      end

      attribute 804866 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8642122427294793651L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3685250 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 591746 "MissingOptArgException"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author G Todd Miller
"
      classrelation 1578882 // <generalisation>
	relation 1578882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1578882 // <generalisation>
	  b parent class_ref 592130 // GetOptsException
      end

      attribute 804994 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1972471465394544822L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3685378 "MissingOptArgException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 592130 "GetOptsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@author G Todd Miller
"
      classrelation 1578626 // <generalisation>
	relation 1578626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1578626 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 804738 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8736874967183039804L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3685122 "GetOptsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 151426 "getopt"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 406530 "GetOpt"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg;
${definition}"
      associated_elems
	class_ref 591490 // GetOpt
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: GetOpt.java,v 1.2.4.1 2005/08/31 11:46:04 pvedula Exp $
"
    end

    artifact 406658 "GetOptsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 592130 // GetOptsException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: GetOptsException.java,v 1.2.4.1 2005/08/31 11:47:06 pvedula Exp $
"
    end

    artifact 406786 "IllegalArgumentException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 591618 // IllegalArgumentException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: IllegalArgumentException.java,v 1.2.4.1 2005/08/31 11:47:56 pvedula Exp $
"
    end

    artifact 406914 "MissingOptArgException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 591746 // MissingOptArgException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: MissingOptArgException.java,v 1.2.4.1 2005/08/31 11:49:21 pvedula Exp $
"
    end
  end
end
