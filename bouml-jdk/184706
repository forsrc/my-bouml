format 222
"rmi" // jdk1.8::javax::management::remote::rmi
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/management/remote/rmi/"
  java_package "javax.management.remote.rmi"
  classview 177538 "rmi"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1204098 "NoCallStackClassLoader"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A class loader that only knows how to define a limited number
of classes, and load a limited number of other classes through
delegation to another loader.  It is used to get around a problem
with Serialization, in particular as used by RMI (including
RMI/IIOP).  The JMX Remote API defines exactly what class loader
must be used to deserialize arguments on the server, and return
values on the client.  We communicate this class loader to RMI by
setting it as the context class loader.  RMI uses the context
class loader to load classes as it deserializes, which is what we
want.  However, before consulting the context class loader, it
looks up the call stack for a class with a non-null class loader,
and uses that if it finds one.  So, in the standalone version of
javax.management.remote, if the class you're looking for is known
to the loader of jmxremote.jar (typically the system class loader)
then that loader will load it.  This contradicts the class-loading
semantics required.

<p>We get around the problem by ensuring that the search up the
call stack will find a non-null class loader that doesn't load any
classes of interest, namely this one.  So even though this loader
is indeed consulted during deserialization, it never finds the
class being deserialized.  RMI then proceeds to use the context
class loader, as we require.

<p>This loader is constructed with the name and byte-code of one
or more classes that it defines, and a class-loader to which it
will delegate certain other classes required by that byte-code.
We construct the byte-code somewhat painstakingly, by compiling
the Java code directly, converting into a string, copying that
string into the class that needs this loader, and using the
stringToBytes method to convert it into the byte array.  We
compile with -g:none because there's not much point in having
line-number information and the like in these directly-encoded
classes.

<p>The referencedClassNames should contain the names of all
classes that are referenced by the classes defined by this loader.
It is not necessary to include standard J2SE classes, however.
Here, a class is referenced if it is the superclass or a
superinterface of a defined class, or if it is the type of a
field, parameter, or return value.  A class is not referenced if
it only appears in the throws clause of a method or constructor.
Of course, referencedClassNames should not contain any classes
that the user might want to deserialize, because the whole point
of this loader is that it does not find such classes.
"
      classrelation 3861250 // <generalisation>
	relation 3861250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3861250 // <generalisation>
	  b parent class_ref 129026 // ClassLoader
      end

      operation 9953026 "NoCallStackClassLoader"
	public explicit_return_type ""
	nparams 5
	  param inout name "className" type class_ref 128130 // String
	  param inout name "byteCode" explicit_type "byte"
	multiplicity "[]"
	  param inout name "referencedClassNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "referencedClassLoader" type class_ref 129026 // ClassLoader
	  param inout name "protectionDomain" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Simplified constructor when this loader only defines one class.  "
      end

      operation 9953154 "NoCallStackClassLoader"
	public explicit_return_type ""
	nparams 5
	  param inout name "classNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "byteCodes" explicit_type "byte"
	multiplicity "[][]"
	  param inout name "referencedClassNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "referencedClassLoader" type class_ref 129026 // ClassLoader
	  param inout name "protectionDomain" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[][] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9953282 "findClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " This method is called at most once per name.  Define the name
if it is one of the classes whose byte code we have, or
delegate the load if it is one of the referenced classes.
"
      end

      classrelation 3861378 // classNames (<unidirectional association>)
	relation 3861378 --->
	  a role_name "classNames" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3861378 // classNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2300930 "byteCodes"
	const_attribute private explicit_type "byte"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3861506 // referencedClassNames (<unidirectional association>)
	relation 3861506 --->
	  a role_name "referencedClassNames" multiplicity "[]" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3861506 // referencedClassNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3861634 // referencedClassLoader (<unidirectional association>)
	relation 3861634 --->
	  a role_name "referencedClassLoader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3861634 // referencedClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3861762 // protectionDomain (<unidirectional association>)
	relation 3861762 --->
	  a role_name "protectionDomain" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3861762 // protectionDomain (<unidirectional association>)
	  b parent class_ref 319618 // ProtectionDomain
      end

      operation 9953410 "stringToBytes"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Construct a <code>byte[]</code> using the characters of the
given <code>String</code>.  Only the low-order byte of each
character is used.  This method is useful to reduce the
footprint of classes that include big byte arrays (e.g. the
byte code of other classes), because a string takes up much
less space in a class file than the byte code to initialize a
<code>byte[]</code> with the same number of bytes.</p>

<p>We use just one byte per character even though characters
contain two bytes.  The resultant output length is much the
same: using one byte per character is shorter because it has
more characters in the optimal 1-127 range but longer because
it has more zero bytes (which are frequent, and are encoded as
two bytes in classfile UTF-8).  But one byte per character has
two key advantages: (1) you can see the string constants, which
is reassuring, (2) you don't need to know whether the class
file length is odd.</p>

<p>This method differs from {@link String#getBytes()} in that
it does not use any encoding.  So it is guaranteed that each
byte of the result is numerically identical (mod 256) to the
corresponding character of the input.
"
      end
    end

    class 1204226 "RMIConnection"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@SuppressWarnings(\"rawtypes\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>RMI object used to forward an MBeanServer request from a client
to its MBeanServer implementation on the server side.  There is one
Remote object implementing this interface for each remote client
connected to an RMI connector.</p>

<p>User code does not usually refer to this interface.  It is
specified as part of the public API so that different
implementations of that API will interoperate.</p>

<p>To ensure that client parameters will be deserialized at the
server side with the correct classloader, client parameters such as
parameters used to invoke a method are wrapped in a {@link
MarshalledObject}.  An implementation of this interface must first
get the appropriate class loader for the operation and its target,
then deserialize the marshalled parameters with this classloader.
Except as noted, a parameter that is a
<code>MarshalledObject</code> or <code>MarshalledObject[]</code>
must not be null; the behavior is unspecified if it is.</p>

<p>Class loading aspects are detailed in the
<a href=\"{@docRoot}/../technotes/guides/jmx/JMX_1_4_specification.pdf\">
JMX Specification, version 1.4</a> PDF document.</p>

<p>Most methods in this interface parallel methods in the {@link
MBeanServerConnection} interface.  Where an aspect of the behavior
of a method is not specified here, it is the same as in the
corresponding <code>MBeanServerConnection</code> method.

@since 1.5


Notice that we omit the type parameter from MarshalledObject everywhere,
even though it would add useful information to the documentation.  The
reason is that it was only added in Mustang (Java SE 6), whereas versions
1.4 and 2.0 of the JMX API must be implementable on Tiger per our
commitments for JSR 255.  This is also why we suppress rawtypes warnings.
"
      classrelation 3861890 // <generalisation>
	relation 3861890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3861890 // <generalisation>
	  b parent class_ref 146562 // Closeable
      end

      classrelation 3862018 // <generalisation>
	relation 3862018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3862018 // <generalisation>
	  b parent class_ref 207106 // Remote
      end

      operation 9953538 "getConnectionId"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the connection ID.  This string is different for
every open connection to a given RMI connector server.</p>

@return the connection ID

@see RMIConnector#connect RMIConnector.connect

@throws IOException if a general communication exception occurred.
"
      end

      operation 9953666 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes this connection.  On return from this method, the RMI
object implementing this interface is unexported, so further
remote calls to it will fail.</p>

@throws IOException if the connection could not be closed,
or the Remote object could not be unexported, or there was a
communication failure when transmitting the remote close
request.
"
      end

      operation 9953794 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName)}.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred
when trying to invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9953922 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, ObjectName)}.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param loaderName The object name of the class loader to be used.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954050 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 5
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, Object[], String[])}.  The <code>Object[]</code>
parameter is wrapped in a <code>MarshalledObject</code>.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param params An array containing the parameters of the
constructor to be invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
constructor to be invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern, or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954178 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 6
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#createMBean(String,
ObjectName, ObjectName, Object[], String[])}.  The
<code>Object[]</code> parameter is wrapped in a
<code>MarshalledObject</code>.

@param className The class name of the MBean to be instantiated.
@param name The object name of the MBean. May be null.
@param loaderName The object name of the class loader to be used.
@param params An array containing the parameters of the
constructor to be invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
constructor to be invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An <code>ObjectInstance</code>, containing the
<code>ObjectName</code> and the Java class name of the newly
instantiated MBean.  If the contained <code>ObjectName</code>
is <code>n</code>, the contained Java class name is
<code>{@link #getMBeanInfo getMBeanInfo(n)}.getClassName()</code>.

@throws ReflectionException Wraps a
<code>java.lang.ClassNotFoundException</code> or a
<code>java.lang.Exception</code> that occurred when trying to
invoke the MBean's constructor.
@throws InstanceAlreadyExistsException The MBean is already
under the control of the MBean server.
@throws MBeanRegistrationException The
<code>preRegister</code> (<code>MBeanRegistration</code>
interface) method of the MBean has thrown an exception. The
MBean will not be registered.
@throws MBeanException The constructor of the MBean has
thrown an exception.
@throws NotCompliantMBeanException This class is not a JMX
compliant MBean.
@throws InstanceNotFoundException The specified class loader
is not registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The className
passed in parameter is null, the <code>ObjectName</code> passed
in parameter contains a pattern, or no <code>ObjectName</code>
is specified for the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954306 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#unregisterMBean(ObjectName)}.

@param name The object name of the MBean to be unregistered.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws MBeanRegistrationException The preDeregister
((<code>MBeanRegistration</code> interface) method of the MBean
has thrown an exception.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the MBean you are when trying to
unregister is the {@link javax.management.MBeanServerDelegate
MBeanServerDelegate} MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954434 "getObjectInstance"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getObjectInstance(ObjectName)}.

@param name The object name of the MBean.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The <code>ObjectInstance</code> associated with the MBean
specified by <var>name</var>.  The contained <code>ObjectName</code>
is <code>name</code> and the contained class name is
<code>{@link #getMBeanInfo getMBeanInfo(name)}.getClassName()</code>.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954562 "queryMBeans"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#queryMBeans(ObjectName,
QueryExp)}.  The <code>QueryExp</code> is wrapped in a
<code>MarshalledObject</code>.

@param name The object name pattern identifying the MBeans to
be retrieved. If null or no domain and key properties are
specified, all the MBeans registered will be retrieved.
@param query The query expression to be applied for selecting
MBeans, encapsulated into a <code>MarshalledObject</code>. If
the <code>MarshalledObject</code> encapsulates a null value no
query expression will be applied for selecting MBeans.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return A set containing the <code>ObjectInstance</code>
objects for the selected MBeans.  If no MBean satisfies the
query an empty list is returned.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954690 "queryNames"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#queryNames(ObjectName,
QueryExp)}.  The <code>QueryExp</code> is wrapped in a
<code>MarshalledObject</code>.

@param name The object name pattern identifying the MBean names
to be retrieved. If null or no domain and key properties are
specified, the name of all registered MBeans will be retrieved.
@param query The query expression to be applied for selecting
MBeans, encapsulated into a <code>MarshalledObject</code>. If
the <code>MarshalledObject</code> encapsulates a null value no
query expression will be applied for selecting MBeans.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return A set containing the ObjectNames for the MBeans
selected.  If no MBean satisfies the query, an empty list is
returned.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954818 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#isRegistered(ObjectName)}.

@param name The object name of the MBean to be checked.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return True if the MBean is already registered in the MBean
server, false otherwise.

@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9954946 "getMBeanCount"
	public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getMBeanCount()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the number of MBeans registered.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9955074 "getAttribute"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 128130 // String
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 5
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#getAttribute(ObjectName,
String)}.

@param name The object name of the MBean from which the
attribute is to be retrieved.
@param attribute A String specifying the name of the attribute
to be retrieved.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return  The value of the retrieved attribute.

@throws AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@throws MBeanException Wraps an exception thrown by the
MBean's getter.
@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown when trying to invoke
the getter.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the attribute in parameter is
null.
@throws RuntimeMBeanException Wraps a runtime exception thrown
by the MBean's getter.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #setAttribute
"
      end

      operation 9955202 "getAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#getAttributes(ObjectName,
String[])}.

@param name The object name of the MBean from which the
attributes are retrieved.
@param attributes A list of the attributes to be retrieved.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The list of the retrieved attributes.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@throws RuntimeOperationsException Wrap a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or attributes in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #setAttributes
"
      end

      operation 9955330 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486914 // InvalidAttributeValueException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#setAttribute(ObjectName,
Attribute)}.  The <code>Attribute</code> parameter is wrapped
in a <code>MarshalledObject</code>.

@param name The name of the MBean within which the attribute is
to be set.
@param attribute The identification of the attribute to be set
and the value it is to be set to, encapsulated into a
<code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws AttributeNotFoundException The attribute specified
is not accessible in the MBean.
@throws InvalidAttributeValueException The value specified
for the attribute is not valid.
@throws MBeanException Wraps an exception thrown by the
MBean's setter.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown when trying to invoke
the setter.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or the attribute in parameter is
null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #getAttribute
"
      end

      operation 9955458 "setAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#setAttributes(ObjectName,
AttributeList)}.  The <code>AttributeList</code> parameter is
wrapped in a <code>MarshalledObject</code>.

@param name The object name of the MBean within which the
attributes are to be set.
@param attributes A list of attributes: The identification of
the attributes to be set and the values they are to be set to,
encapsulated into a <code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The list of attributes that were set, with their new
values.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws ReflectionException An exception occurred when
trying to invoke the getAttributes method of a Dynamic MBean.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null or attributes in parameter is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #getAttributes
"
      end

      operation 9955586 "invoke"
	public return_type class_ref 129538 // Object
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "operationName" type class_ref 128130 // String
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#invoke(ObjectName,
String, Object[], String[])}.  The <code>Object[]</code>
parameter is wrapped in a <code>MarshalledObject</code>.

@param name The object name of the MBean on which the method is
to be invoked.
@param operationName The name of the operation to be invoked.
@param params An array containing the parameters to be set when
the operation is invoked, encapsulated into a
<code>MarshalledObject</code>.  The encapsulated array can be
null, equivalent to an empty array.
@param signature An array containing the signature of the
operation. The class objects will be loaded using the same
class loader as the one used for loading the MBean on which the
operation was invoked.  Can be null, equivalent to an empty
array.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return The object returned by the operation, which represents
the result of invoking the operation on the MBean specified.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws MBeanException Wraps an exception thrown by the
MBean's invoked method.
@throws ReflectionException Wraps a
<code>java.lang.Exception</code> thrown while trying to invoke
the method.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>operationName</code> is null.
"
      end

      operation 9955714 "getDefaultDomain"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getDefaultDomain()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the default domain.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9955842 "getDomains"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getDomains()}.

@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return the list of domains.

@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9955970 "getMBeanInfo"
	public return_type class_ref 487426 // MBeanInfo
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487554 // IntrospectionException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method
{@link javax.management.MBeanServerConnection#getMBeanInfo(ObjectName)}.

@param name The name of the MBean to analyze
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return An instance of <code>MBeanInfo</code> allowing the
retrieval of all attributes and operations of this MBean.

@throws IntrospectionException An exception occurred during
introspection.
@throws InstanceNotFoundException The MBean specified was
not found.
@throws ReflectionException An exception occurred when
trying to invoke the getMBeanInfo of a Dynamic MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
"
      end

      operation 9956098 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "className" type class_ref 128130 // String
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#isInstanceOf(ObjectName,
String)}.

@param name The <code>ObjectName</code> of the MBean.
@param className The name of the class.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@return true if the MBean specified is an instance of the
specified class according to the rules above, false otherwise.

@throws InstanceNotFoundException The MBean specified is not
registered in the MBean server.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps a
<code>java.lang.IllegalArgumentException</code>: The object
name in parameter is null.
"
      end

      operation 9956226 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 505986 // MarshalledObject
	  param inout name "handback" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#addNotificationListener(ObjectName,
ObjectName, NotificationFilter, Object)}.  The
<code>NotificationFilter</code> parameter is wrapped in a
<code>MarshalledObject</code>.  The <code>Object</code>
(handback) parameter is also wrapped in a
<code>MarshalledObject</code>.

@param name The name of the MBean on which the listener should
be added.
@param listener The object name of the listener which will
handle the notifications emitted by the registered MBean.
@param filter The filter object, encapsulated into a
<code>MarshalledObject</code>. If filter encapsulated in the
<code>MarshalledObject</code> has a null value, no filtering
will be performed before handling notifications.
@param handback The context to be sent to the listener when a
notification is emitted, encapsulated into a
<code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name of the
notification listener or of the notification broadcaster does
not match any of the registered MBeans.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException}.  The MBean named by
<code>listener</code> exists but does not implement the
{@link javax.management.NotificationListener} interface,
or <code>name</code> or <code>listener</code> is null.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.

@see #removeNotificationListener(ObjectName, ObjectName, Subject)
@see #removeNotificationListener(ObjectName, ObjectName,
MarshalledObject, MarshalledObject, Subject)
"
      end

      operation 9956354 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,
ObjectName)}.

@param name The name of the MBean on which the listener should
be removed.
@param listener The object name of the listener to be removed.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@throws ListenerNotFoundException The listener is not
registered in the MBean.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>listener</code> is null.

@see #addNotificationListener
"
      end

      operation 9956482 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 505986 // MarshalledObject
	  param inout name "handback" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the method {@link
javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,
ObjectName, NotificationFilter, Object)}.  The
<code>NotificationFilter</code> parameter is wrapped in a
<code>MarshalledObject</code>.  The <code>Object</code>
parameter is also wrapped in a <code>MarshalledObject</code>.

@param name The name of the MBean on which the listener should
be removed.
@param listener A listener that was previously added to this
MBean.
@param filter The filter that was specified when the listener
was added, encapsulated into a <code>MarshalledObject</code>.
@param handback The handback that was specified when the
listener was added, encapsulated into a <code>MarshalledObject</code>.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException The MBean name provided
does not match any of the registered MBeans.
@throws ListenerNotFoundException The listener is not
registered in the MBean, or it is not registered with the given
filter and handback.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to perform this operation.
@throws IOException if a general communication exception occurred.
@throws RuntimeOperationsException Wraps an {@link
IllegalArgumentException} when <code>name</code> or
<code>listener</code> is null.

@see #addNotificationListener
"
      end

      operation 9956610 "addNotificationListeners"
	public return_type class_ref 137602 // Integer
	nparams 3
	  param inout name "names" type class_ref 485506 // ObjectName
	multiplicity "[]"
	  param inout name "filters" type class_ref 505986 // MarshalledObject
	multiplicity "[]"
	  param inout name "delegationSubjects" type class_ref 503042 // Subject
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Special Handling of Notifications -------------------------------------

<p>Handles the method {@link
javax.management.MBeanServerConnection#addNotificationListener(ObjectName,
NotificationListener, NotificationFilter, Object)}.</p>

<p>Register for notifications from the given MBeans that match
the given filters.  The remote client can subsequently retrieve
the notifications using the {@link #fetchNotifications
fetchNotifications} method.</p>

<p>For each listener, the original
<code>NotificationListener</code> and <code>handback</code> are
kept on the client side; in order for the client to be able to
identify them, the server generates and returns a unique
<code>listenerID</code>.  This <code>listenerID</code> is
forwarded with the <code>Notifications</code> to the remote
client.</p>

<p>If any one of the given (name, filter) pairs cannot be
registered, then the operation fails with an exception, and no
names or filters are registered.</p>

@param names the <code>ObjectNames</code> identifying the
MBeans emitting the Notifications.
@param filters an array of marshalled representations of the
<code>NotificationFilters</code>.  Elements of this array can
be null.
@param delegationSubjects the <code>Subjects</code> on behalf
of which the listeners are being added.  Elements of this array
can be null.  Also, the <code>delegationSubjects</code>
parameter itself can be null, which is equivalent to an array
of null values with the same size as the <code>names</code> and
<code>filters</code> arrays.

@return an array of <code>listenerIDs</code> identifying the
local listeners.  This array has the same number of elements as
the parameters.

@throws IllegalArgumentException if <code>names</code> or
<code>filters</code> is null, or if <code>names</code> contains
a null element, or if the three arrays do not all have the same
size.
@throws ClassCastException if one of the elements of
<code>filters</code> unmarshalls as a non-null object that is
not a <code>NotificationFilter</code>.
@throws InstanceNotFoundException if one of the
<code>names</code> does not correspond to any registered MBean.
@throws SecurityException if, for one of the MBeans, the
client, or the delegated Subject if any, does not have
permission to add a listener.
@throws IOException if a general communication exception occurred.
"
      end

      operation 9956738 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listenerIDs" type class_ref 137602 // Integer
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Handles the
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener)
removeNotificationListener(ObjectName, NotificationListener)} and
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener,NotificationFilter,Object)
removeNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)} methods.</p>

<p>This method removes one or more
<code>NotificationListener</code>s from a given MBean in the
MBean server.</p>

<p>The <code>NotificationListeners</code> are identified by the
IDs which were returned by the {@link
#addNotificationListeners(ObjectName[], MarshalledObject[],
Subject[])} method.</p>

@param name the <code>ObjectName</code> identifying the MBean
emitting the Notifications.
@param listenerIDs the list of the IDs corresponding to the
listeners to remove.
@param delegationSubject The <code>Subject</code> containing the
delegation principals or <code>null</code> if the authentication
principal is used instead.

@throws InstanceNotFoundException if the given
<code>name</code> does not correspond to any registered MBean.
@throws ListenerNotFoundException if one of the listeners was
not found on the server side.  This exception can happen if the
MBean discarded a listener for some reason other than a call to
<code>MBeanServer.removeNotificationListener</code>.
@throws SecurityException if the client, or the delegated Subject
if any, does not have permission to remove the listeners.
@throws IOException if a general communication exception occurred.
@throws IllegalArgumentException if <code>ObjectName</code> or
<code>listenerIds</code> is null or if <code>listenerIds</code>
contains a null element.
"
      end

      operation 9956866 "fetchNotifications"
	public return_type class_ref 500866 // NotificationResult
	nparams 3
	  param in name "clientSequenceNumber" explicit_type "long"
	  param in name "maxNotifications" explicit_type "int"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Retrieves notifications from the connector server.  This
method can block until there is at least one notification or
until the specified timeout is reached.  The method can also
return at any time with zero notifications.</p>

<p>A notification can be included in the result if its sequence
number is no less than <code>clientSequenceNumber</code> and
this client has registered at least one listener for the MBean
generating the notification, with a filter that accepts the
notification.  Each listener that is interested in the
notification is identified by an Integer ID that was returned
by {@link #addNotificationListeners(ObjectName[],
MarshalledObject[], Subject[])}.</p>

@param clientSequenceNumber the first sequence number that the
client is interested in.  If negative, it is interpreted as
meaning the sequence number that the next notification will
have.

@param maxNotifications the maximum number of different
notifications to return.  The <code>TargetedNotification</code>
array in the returned <code>NotificationResult</code> can have
more elements than this if the same notification appears more
than once.  The behavior is unspecified if this parameter is
negative.

@param timeout the maximum time in milliseconds to wait for a
notification to arrive.  This can be 0 to indicate that the
method should not wait if there are no notifications, but
should return at once.  It can be <code>Long.MAX_VALUE</code>
to indicate that there is no timeout.  The behavior is
unspecified if this parameter is negative.

@return A <code>NotificationResult</code>.

@throws IOException if a general communication exception occurred.
"
      end
    end

    class 1204354 "RMIConnectionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Implementation of the {@link RMIConnection} interface.  User
code will not usually reference this class.</p>

@since 1.5


Notice that we omit the type parameter from MarshalledObject everywhere,
even though it would add useful information to the documentation.  The
reason is that it was only added in Mustang (Java SE 6), whereas versions
1.4 and 2.0 of the JMX API must be implementable on Tiger per our
commitments for JSR 255.
"
      classrelation 3862146 // <realization>
	relation 3862146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3862146 // <realization>
	  b parent class_ref 1204226 // RMIConnection
      end

      classrelation 3862274 // <realization>
	relation 3862274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3862274 // <realization>
	  b parent class_ref 1012866 // Unreferenced
      end

      operation 9956994 "RMIConnectionImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "rmiServer" type class_ref 1204482 // RMIServerImpl
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "defaultClassLoader" type class_ref 129026 // ClassLoader
	  param inout name "subject" type class_ref 503042 // Subject
	  param inout name "env" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<String,?> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@link RMIConnection}. This connection can be
used with either the JRMP or IIOP transport. This object does
not export itself: it is the responsibility of the caller to
export it appropriately (see {@link
RMIJRMPServerImpl#makeClient(String,Subject)} and {@link
RMIIIOPServerImpl#makeClient(String,Subject)}.

@param rmiServer The RMIServerImpl object for which this
connection is created.  The behavior is unspecified if this
parameter is null.
@param connectionId The ID for this connection.  The behavior
is unspecified if this parameter is null.
@param defaultClassLoader The default ClassLoader to be used
when deserializing marshalled objects.  Can be null, to signify
the bootstrap class loader.
@param subject the authenticated subject to be used for
authorization.  Can be null, to signify that no subject has
been authenticated.
@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, equivalent to an
empty map.
"
      end

      operation 9957122 "withPermissions"
	class_operation private return_type class_ref 129154 // AccessControlContext
	nparams 1
	  param inout name "perms" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ... ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9957250 "getServerNotifFwd"
	private return_type class_ref 505346 // ServerNotifForwarder
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9957378 "getConnectionId"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9957506 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9957634 "unreferenced"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9957762 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "-------------------------------------------------------------------------
 MBeanServerConnection Wrapper
-------------------------------------------------------------------------"
      end

      operation 9957890 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9958018 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 5
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9958146 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 6
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9958274 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9958402 "getObjectInstance"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9958530 "queryMBeans"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9958658 "queryNames"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9958786 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9958914 "getMBeanCount"
	public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9959042 "getAttribute"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 128130 // String
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 5
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9959170 "getAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9959298 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486914 // InvalidAttributeValueException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9959426 "setAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9959554 "invoke"
	public return_type class_ref 129538 // Object
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "operationName" type class_ref 128130 // String
	  param inout name "params" type class_ref 505986 // MarshalledObject
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9959682 "getDefaultDomain"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9959810 "getDomains"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9959938 "getMBeanInfo"
	public return_type class_ref 487426 // MBeanInfo
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487554 // IntrospectionException
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9960066 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "className" type class_ref 128130 // String
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9960194 "addNotificationListeners"
	public return_type class_ref 137602 // Integer
	nparams 3
	  param inout name "names" type class_ref 485506 // ObjectName
	multiplicity "[]"
	  param inout name "filters" type class_ref 505986 // MarshalledObject
	multiplicity "[]"
	  param inout name "delegationSubjects" type class_ref 503042 // Subject
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9960322 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 505986 // MarshalledObject
	  param inout name "handback" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9960450 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listenerIDs" type class_ref 137602 // Integer
	multiplicity "[]"
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9960578 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9960706 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 505986 // MarshalledObject
	  param inout name "handback" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
      end

      operation 9960834 "fetchNotifications"
	public return_type class_ref 500866 // NotificationResult
	nparams 3
	  param in name "clientSequenceNumber" explicit_type "long"
	  param in name "maxNotifications" explicit_type "int"
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9960962 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Returns a string representation of this object.  In general,
the <code>toString</code> method returns a string that
\"textually represents\" this object. The result should be a
concise but informative representation that is easy for a
person to read.</p>

@return a String representation of this object.
"
      end

      class 1204610 "PrivilegedOperation"
	visibility private 
	nactuals 1
	actual class class_ref 320514 // PrivilegedExceptionAction
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3862402 // <realization>
	  relation 3862402 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3862402 // <realization>
	    b parent class_ref 320514 // PrivilegedExceptionAction
	end

	operation 9961090 "PrivilegedOperation"
	  public explicit_return_type ""
	  nparams 2
	    param in name "operation" explicit_type "int"
	    param inout name "params" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9961218 "run"
	  public return_type class_ref 129538 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 132226 // Exception
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2301058 "operation"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3862530 // params (<unidirectional association>)
	  relation 3862530 --->
	    a role_name "params" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3862530 // params (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end
      end

      class 1204738 "RMIServerCommunicatorAdmin"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3862658 // <generalisation>
	  relation 3862658 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3862658 // <generalisation>
	    b parent class_ref 505090 // ServerCommunicatorAdmin
	end

	operation 9961346 "RMIServerCommunicatorAdmin"
	  public explicit_return_type ""
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9961474 "doStop"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9961602 "getClassLoader"
	private return_type class_ref 129026 // ClassLoader
	nparams 1
	  param in name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "------------------------------------------------------------------------
 private methods
------------------------------------------------------------------------"
      end

      operation 9961730 "getClassLoaderFor"
	private return_type class_ref 129026 // ClassLoader
	nparams 1
	  param in name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9961858 "doPrivilegedOperation"
	private return_type class_ref 129538 // Object
	nparams 3
	  param in name "operation" explicit_type "int"
	  param in name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 189826 // PrivilegedActionException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9961986 "doOperation"
	private return_type class_ref 129538 // Object
	nparams 2
	  param in name "operation" explicit_type "int"
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1204866 "SetCcl"
	visibility private 
	nactuals 1
	actual class class_ref 320514 // PrivilegedExceptionAction
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3862786 // <realization>
	  relation 3862786 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3862786 // <realization>
	    b parent class_ref 320514 // PrivilegedExceptionAction
	end

	classrelation 3862914 // classLoader (<unidirectional association>)
	  relation 3862914 --->
	    a role_name "classLoader" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3862914 // classLoader (<unidirectional association>)
	    b parent class_ref 129026 // ClassLoader
	end

	operation 9962114 "SetCcl"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "classLoader" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9962242 "run"
	  public return_type class_ref 129026 // ClassLoader
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9962370 "unwrap"
	private explicit_return_type "T"
	nparams 4
	  param in name "mo" type class_ref 505986 // MarshalledObject
	  param in name "cl" type class_ref 129026 // ClassLoader
	  param in name "wrappedClass" type class_ref 130818 // Class
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0}<?> ${p0}, final ${t1} ${p1}, final ${t2}<T> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9962498 "unwrap"
	private explicit_return_type "T"
	nparams 5
	  param in name "mo" type class_ref 505986 // MarshalledObject
	  param in name "cl1" type class_ref 129026 // ClassLoader
	  param in name "cl2" type class_ref 129026 // ClassLoader
	  param in name "wrappedClass" type class_ref 130818 // Class
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0}<?> ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3}<T> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9962626 "newIOException"
	class_operation private return_type class_ref 146818 // IOException
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new IOException with a nested exception.
The nested exception is set only if JDK {@literal >= 1.4}
"
      end

      operation 9962754 "extractException"
	class_operation private return_type class_ref 132226 // Exception
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterate until we extract the real exception
from a stack of PrivilegedActionExceptions.
"
      end

      classrelation 3863042 // NO_OBJECTS (<unidirectional association>)
	relation 3863042 --->
	  a role_name "NO_OBJECTS" multiplicity "[]" init_value " new Object[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3863042 // NO_OBJECTS (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3863170 // NO_STRINGS (<unidirectional association>)
	relation 3863170 --->
	  a role_name "NO_STRINGS" multiplicity "[]" init_value " new String[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3863170 // NO_STRINGS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 9962882 "nullIsEmpty"
	class_operation private return_type class_ref 129538 // Object
	nparams 1
	  param inout name "array" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The JMX spec doesn't explicitly say that a null Object[] or
String[] in e.g. MBeanServer.invoke is equivalent to an empty
array, but the RI behaves that way.  In the interests of
maximal interoperability, we make it so even when we're
connected to some other JMX implementation that might not do
that.  This should be clarified in the next version of JMX.
"
      end

      operation 9963010 "nullIsEmpty"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "array" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9963138 "checkNonNull"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "what" type class_ref 128130 // String
	  param inout name "x" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similarly, the JMX spec says for some but not all methods in
MBeanServer that take an ObjectName target, that if it's null
you get this exception.  We specify it for all of them, and
make it so for the ones where it's not specified in JMX even if
the JMX implementation doesn't do so.
"
      end

      classrelation 3863298 // subject (<unidirectional association>)
	relation 3863298 --->
	  a role_name "subject" const_relation private
	    comment "------------------------------------------------------------------------
 private variables
------------------------------------------------------------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863298 // subject (<unidirectional association>)
	  b parent class_ref 503042 // Subject
      end

      classrelation 3863426 // subjectDelegator (<unidirectional association>)
	relation 3863426 --->
	  a role_name "subjectDelegator" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863426 // subjectDelegator (<unidirectional association>)
	  b parent class_ref 511490 // SubjectDelegator
      end

      attribute 2301186 "removeCallerContext"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3863554 // acc (<unidirectional association>)
	relation 3863554 --->
	  a role_name "acc" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863554 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      classrelation 3863682 // rmiServer (<unidirectional association>)
	relation 3863682 --->
	  a role_name "rmiServer" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863682 // rmiServer (<unidirectional association>)
	  b parent class_ref 1204482 // RMIServerImpl
      end

      classrelation 3863810 // mbeanServer (<unidirectional association>)
	relation 3863810 --->
	  a role_name "mbeanServer" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863810 // mbeanServer (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 3863938 // defaultClassLoader (<unidirectional association>)
	relation 3863938 --->
	  a role_name "defaultClassLoader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3863938 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3864066 // defaultContextClassLoader (<unidirectional association>)
	relation 3864066 --->
	  a role_name "defaultContextClassLoader" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864066 // defaultContextClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3864194 // classLoaderWithRepository (<unidirectional association>)
	relation 3864194 --->
	  a role_name "classLoaderWithRepository" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864194 // classLoaderWithRepository (<unidirectional association>)
	  b parent class_ref 511618 // ClassLoaderWithRepository
      end

      attribute 2301314 "terminated"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3864322 // connectionId (<unidirectional association>)
	relation 3864322 --->
	  a role_name "connectionId" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864322 // connectionId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3864450 // serverCommunicatorAdmin (<unidirectional association>)
	relation 3864450 --->
	  a role_name "serverCommunicatorAdmin" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864450 // serverCommunicatorAdmin (<unidirectional association>)
	  b parent class_ref 505090 // ServerCommunicatorAdmin
      end

      attribute 2301442 "ADD_NOTIFICATION_LISTENERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Method IDs for doOperation
---------------------------
"
      end

      attribute 2301570 "ADD_NOTIFICATION_LISTENER_OBJECTNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2301698 "CREATE_MBEAN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2301826 "CREATE_MBEAN_PARAMS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2301954 "CREATE_MBEAN_LOADER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302082 "CREATE_MBEAN_LOADER_PARAMS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302210 "GET_ATTRIBUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302338 "GET_ATTRIBUTES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302466 "GET_DEFAULT_DOMAIN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302594 "GET_DOMAINS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302722 "GET_MBEAN_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302850 "GET_MBEAN_INFO"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2302978 "GET_OBJECT_INSTANCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303106 "INVOKE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303234 "IS_INSTANCE_OF"
	class_attribute const_attribute private explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303362 "IS_REGISTERED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303490 "QUERY_MBEANS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303618 "QUERY_NAMES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303746 "REMOVE_NOTIFICATION_LISTENER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2303874 "REMOVE_NOTIFICATION_LISTENER_OBJECTNAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2304002 "REMOVE_NOTIFICATION_LISTENER_OBJECTNAME_FILTER_HANDBACK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2304130 "SET_ATTRIBUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2304258 "SET_ATTRIBUTES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2304386 "UNREGISTER_MBEAN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3864578 // serverNotifForwarder (<unidirectional association>)
	relation 3864578 --->
	  a role_name "serverNotifForwarder" private
	    comment " SERVER NOTIFICATION
--------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864578 // serverNotifForwarder (<unidirectional association>)
	  b parent class_ref 505346 // ServerNotifForwarder
      end

      classrelation 3864706 // env (<unidirectional association>)
	relation 3864706 --->
	  a role_name "env" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 3864706 // env (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 9963266 "objects"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "objs" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 9963394 "strings"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "strs" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3864834 // logger (<unidirectional association>)
	relation 3864834 --->
	  a role_name "logger" init_value "
        new ClassLogger(\"javax.management.remote.rmi\", \"RMIConnectionImpl\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3864834 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      class 1204994 "CombinedClassLoader"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3864962 // <generalisation>
	  relation 3864962 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3864962 // <generalisation>
	    b parent class_ref 129026 // ClassLoader
	end

	class 1205122 "ClassLoaderWrapper"
	  visibility private 
	  cpp_decl ""
	  final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3865090 // <generalisation>
	    relation 3865090 ---|>
	      a public
		java "${type}"
		classrelation_ref 3865090 // <generalisation>
	      b parent class_ref 129026 // ClassLoader
	  end

	  operation 9963522 "ClassLoaderWrapper"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "cl" type class_ref 129026 // ClassLoader
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 9963650 "loadClass"
	    protected return_type class_ref 130818 // Class
	    nparams 2
	      param inout name "name" type class_ref 128130 // String
	      param inout name "resolve" explicit_type "boolean"
	    nexceptions 1
	      exception class_ref 169730 // ClassNotFoundException
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 3865218 // defaultCL (<unidirectional association>)
	  relation 3865218 --->
	    a role_name "defaultCL" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3865218 // defaultCL (<unidirectional association>)
	    b parent class_ref 1205122 // ClassLoaderWrapper
	end

	operation 9963778 "CombinedClassLoader"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "parent" type class_ref 129026 // ClassLoader
	    param inout name "defaultCL" type class_ref 129026 // ClassLoader
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9963906 "loadClass"
	  protected return_type class_ref 130818 // Class
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "resolve" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1204482 "RMIServerImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An RMI object representing a connector server.  Remote clients
can make connections using the {@link #newClient(Object)} method.  This
method returns an RMI object representing the connection.</p>

<p>User code does not usually reference this class directly.
RMI connection servers are usually created with the class {@link
RMIConnectorServer}.  Remote clients usually create connections
either with {@link javax.management.remote.JMXConnectorFactory}
or by instantiating {@link RMIConnector}.</p>

<p>This is an abstract class.  Concrete subclasses define the
details of the client connection objects, such as whether they use
JRMP or IIOP.</p>

@since 1.5
"
      classrelation 3874818 // <realization>
	relation 3874818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3874818 // <realization>
	  b parent class_ref 146562 // Closeable
      end

      classrelation 3875074 // <realization>
	relation 3875074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3875074 // <realization>
	  b parent class_ref 1205506 // RMIServer
      end

      operation 9981570 "RMIServerImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "env" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs a new <code>RMIServerImpl</code>.</p>

@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, which is equivalent
to an empty Map.
"
      end

      operation 9981698 "setRMIConnectorServer"
	package explicit_return_type "void"
	nparams 1
	  param inout name "connServer" type class_ref 1206146 // RMIConnectorServer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9981826 "export"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Exports this RMI object.</p>

@exception IOException if this RMI object cannot be exported.
"
      end

      operation 9981954 "toStub"
	abstract public return_type class_ref 207106 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a remotable stub for this server object.
@return a remotable stub.
@exception IOException if the stub cannot be obtained - e.g the
           RMIServerImpl has not been exported yet.
"
      end

      operation 9982082 "setDefaultClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the default <code>ClassLoader</code> for this connector
server. New client connections will use this classloader.
Existing client connections are unaffected.</p>

@param cl the new <code>ClassLoader</code> to be used by this
connector server.

@see #getDefaultClassLoader
"
      end

      operation 9982210 "getDefaultClassLoader"
	public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Gets the default <code>ClassLoader</code> used by this connector
server.</p>

@return the default <code>ClassLoader</code> used by this
connector server.

@see #setDefaultClassLoader
"
      end

      operation 9982338 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 485122 // MBeanServer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the <code>MBeanServer</code> to which this connector
server is attached. New client connections will interact
with this <code>MBeanServer</code>. Existing client connections are
unaffected.</p>

@param mbs the new <code>MBeanServer</code>.  Can be null, but
new client connections will be refused as long as it is.

@see #getMBeanServer
"
      end

      operation 9982466 "getMBeanServer"
	public return_type class_ref 485122 // MBeanServer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The <code>MBeanServer</code> to which this connector server
is attached.  This is the last value passed to {@link
#setMBeanServer} on this object, or null if that method has
never been called.</p>

@return the <code>MBeanServer</code> to which this connector
is attached.

@see #setMBeanServer
"
      end

      operation 9982594 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9982722 "newClient"
	public return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "credentials" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection.  This method calls {@link
#makeClient makeClient} and adds the returned client connection
object to an internal list.  When this
<code>RMIServerImpl</code> is shut down via its {@link
#close()} method, the {@link RMIConnection#close() close()}
method of each object remaining in the list is called.</p>

<p>The fact that a client connection object is in this internal
list does not prevent it from being garbage collected.</p>

@param credentials this object specifies the user-defined
credentials to be passed in to the server in order to
authenticate the caller before creating the
<code>RMIConnection</code>.  Can be null.

@return the newly-created <code>RMIConnection</code>.  This is
usually the object created by <code>makeClient</code>, though
an implementation may choose to wrap that object in another
object implementing <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported.

@exception SecurityException if the given credentials do not allow
the server to authenticate the user successfully.

@exception IllegalStateException if {@link #getMBeanServer()}
is null.
"
      end

      operation 9982850 "doNewClient"
	package return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "credentials" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method could be overridden by subclasses defined in this package
to perform additional operations specific to the underlying transport
before creating the new client connection.
"
      end

      operation 9982978 "makeClient"
	abstract protected return_type class_ref 1204226 // RMIConnection
	nparams 2
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection.  This method is called by
the public method {@link #newClient(Object)}.</p>

@param connectionId the ID of the new connection.  Every
connection opened by this connector server will have a
different ID.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported.
"
      end

      operation 9983106 "closeClient"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1204226 // RMIConnection
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes a client connection made by {@link #makeClient makeClient}.

@param client a connection previously returned by
<code>makeClient</code> on which the <code>closeClient</code>
method has not previously been called.  The behavior is
unspecified if these conditions are violated, including the
case where <code>client</code> is null.

@exception IOException if the client connection cannot be
closed.
"
      end

      operation 9983234 "getProtocol"
	abstract protected return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the protocol string for this object.  The string is
<code>rmi</code> for RMI/JRMP and <code>iiop</code> for RMI/IIOP.

@return the protocol string for this object.
"
      end

      operation 9983362 "clientClosed"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1204226 // RMIConnection
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Method called when a client connection created by {@link
#makeClient makeClient} is closed.  A subclass that defines
<code>makeClient</code> must arrange for this method to be
called when the resultant object's {@link RMIConnection#close()
close} method is called.  This enables it to be removed from
the <code>RMIServerImpl</code>'s list of connections.  It is
not an error for <code>client</code> not to be in that
list.</p>

<p>After removing <code>client</code> from the list of
connections, this method calls {@link #closeClient
closeClient(client)}.</p>

@param client the client connection that has been closed.

@exception IOException if {@link #closeClient} throws this
exception.

@exception NullPointerException if <code>client</code> is null.
"
      end

      operation 9983490 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Closes this connection server.  This method first calls the
{@link #closeServer()} method so that no new client connections
will be accepted.  Then, for each remaining {@link
RMIConnection} object returned by {@link #makeClient
makeClient}, its {@link RMIConnection#close() close} method is
called.</p>

<p>The behavior when this method is called more than once is
unspecified.</p>

<p>If {@link #closeServer()} throws an
<code>IOException</code>, the individual connections are
nevertheless closed, and then the <code>IOException</code> is
thrown from this method.</p>

<p>If {@link #closeServer()} returns normally but one or more
of the individual connections throws an
<code>IOException</code>, then, after closing all the
connections, one of those <code>IOException</code>s is thrown
from this method.  If more than one connection throws an
<code>IOException</code>, it is unspecified which one is thrown
from this method.</p>

@exception IOException if {@link #closeServer()} or one of the
{@link RMIConnection#close()} calls threw
<code>IOException</code>.
"
      end

      operation 9983618 "closeServer"
	abstract protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server.
After returning from this method, the connector server must
not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed.
"
      end

      operation 9983746 "makeConnectionId"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param inout name "protocol" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9983874 "dropDeadReferences"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9984002 "getNotifBuffer"
	package return_type class_ref 500738 // NotificationBuffer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3875202 // logger (<unidirectional association>)
	relation 3875202 --->
	  a role_name "logger" init_value "
        new ClassLogger(\"javax.management.remote.rmi\", \"RMIServerImpl\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3875202 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      classrelation 3875330 // clientList (<unidirectional association>)
	relation 3875330 --->
	  a role_name "clientList" init_value "
            new ArrayList<WeakReference<RMIConnection>>()" const_relation private
	    comment " List of WeakReference values.  Each one references an
RMIConnection created by this object, or null if the
RMIConnection has been garbage-collected.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WeakReference<RMIConnection>> ${name}${value};
"
	    classrelation_ref 3875330 // clientList (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3875458 // cl (<unidirectional association>)
	relation 3875458 --->
	  a role_name "cl" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3875458 // cl (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3875586 // mbeanServer (<unidirectional association>)
	relation 3875586 --->
	  a role_name "mbeanServer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3875586 // mbeanServer (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end

      classrelation 3875714 // env (<unidirectional association>)
	relation 3875714 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 3875714 // env (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3875842 // connServer (<unidirectional association>)
	relation 3875842 --->
	  a role_name "connServer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3875842 // connServer (<unidirectional association>)
	  b parent class_ref 1206146 // RMIConnectorServer
      end

      attribute 2306050 "connectionIdNumber"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3875970 // notifBuffer (<unidirectional association>)
	relation 3875970 --->
	  a role_name "notifBuffer" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3875970 // notifBuffer (<unidirectional association>)
	  b parent class_ref 500738 // NotificationBuffer
      end
    end

    class 1205250 "RMIConnectionImpl_Stub"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3865346 // <generalisation>
	relation 3865346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3865346 // <generalisation>
	  b parent class_ref 1009026 // RemoteStub
      end

      classrelation 3865474 // <realization>
	relation 3865474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3865474 // <realization>
	  b parent class_ref 1204226 // RMIConnection
      end

      attribute 2304514 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3865602 // $method_addNotificationListener_0 (<unidirectional association>)
	relation 3865602 --->
	  a role_name "$method_addNotificationListener_0" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3865602 // $method_addNotificationListener_0 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3865730 // $method_addNotificationListeners_1 (<unidirectional association>)
	relation 3865730 --->
	  a role_name "$method_addNotificationListeners_1" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3865730 // $method_addNotificationListeners_1 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3865858 // $method_close_2 (<unidirectional association>)
	relation 3865858 --->
	  a role_name "$method_close_2" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3865858 // $method_close_2 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3865986 // $method_createMBean_3 (<unidirectional association>)
	relation 3865986 --->
	  a role_name "$method_createMBean_3" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3865986 // $method_createMBean_3 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866114 // $method_createMBean_4 (<unidirectional association>)
	relation 3866114 --->
	  a role_name "$method_createMBean_4" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866114 // $method_createMBean_4 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866242 // $method_createMBean_5 (<unidirectional association>)
	relation 3866242 --->
	  a role_name "$method_createMBean_5" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866242 // $method_createMBean_5 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866370 // $method_createMBean_6 (<unidirectional association>)
	relation 3866370 --->
	  a role_name "$method_createMBean_6" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866370 // $method_createMBean_6 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866498 // $method_fetchNotifications_7 (<unidirectional association>)
	relation 3866498 --->
	  a role_name "$method_fetchNotifications_7" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866498 // $method_fetchNotifications_7 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866626 // $method_getAttribute_8 (<unidirectional association>)
	relation 3866626 --->
	  a role_name "$method_getAttribute_8" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866626 // $method_getAttribute_8 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866754 // $method_getAttributes_9 (<unidirectional association>)
	relation 3866754 --->
	  a role_name "$method_getAttributes_9" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866754 // $method_getAttributes_9 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3866882 // $method_getConnectionId_10 (<unidirectional association>)
	relation 3866882 --->
	  a role_name "$method_getConnectionId_10" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3866882 // $method_getConnectionId_10 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867010 // $method_getDefaultDomain_11 (<unidirectional association>)
	relation 3867010 --->
	  a role_name "$method_getDefaultDomain_11" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867010 // $method_getDefaultDomain_11 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867138 // $method_getDomains_12 (<unidirectional association>)
	relation 3867138 --->
	  a role_name "$method_getDomains_12" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867138 // $method_getDomains_12 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867266 // $method_getMBeanCount_13 (<unidirectional association>)
	relation 3867266 --->
	  a role_name "$method_getMBeanCount_13" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867266 // $method_getMBeanCount_13 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867394 // $method_getMBeanInfo_14 (<unidirectional association>)
	relation 3867394 --->
	  a role_name "$method_getMBeanInfo_14" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867394 // $method_getMBeanInfo_14 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867522 // $method_getObjectInstance_15 (<unidirectional association>)
	relation 3867522 --->
	  a role_name "$method_getObjectInstance_15" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867522 // $method_getObjectInstance_15 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867650 // $method_invoke_16 (<unidirectional association>)
	relation 3867650 --->
	  a role_name "$method_invoke_16" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867650 // $method_invoke_16 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867778 // $method_isInstanceOf_17 (<unidirectional association>)
	relation 3867778 --->
	  a role_name "$method_isInstanceOf_17" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867778 // $method_isInstanceOf_17 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3867906 // $method_isRegistered_18 (<unidirectional association>)
	relation 3867906 --->
	  a role_name "$method_isRegistered_18" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3867906 // $method_isRegistered_18 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868034 // $method_queryMBeans_19 (<unidirectional association>)
	relation 3868034 --->
	  a role_name "$method_queryMBeans_19" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868034 // $method_queryMBeans_19 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868162 // $method_queryNames_20 (<unidirectional association>)
	relation 3868162 --->
	  a role_name "$method_queryNames_20" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868162 // $method_queryNames_20 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868290 // $method_removeNotificationListener_21 (<unidirectional association>)
	relation 3868290 --->
	  a role_name "$method_removeNotificationListener_21" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868290 // $method_removeNotificationListener_21 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868418 // $method_removeNotificationListener_22 (<unidirectional association>)
	relation 3868418 --->
	  a role_name "$method_removeNotificationListener_22" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868418 // $method_removeNotificationListener_22 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868546 // $method_removeNotificationListeners_23 (<unidirectional association>)
	relation 3868546 --->
	  a role_name "$method_removeNotificationListeners_23" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868546 // $method_removeNotificationListeners_23 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868674 // $method_setAttribute_24 (<unidirectional association>)
	relation 3868674 --->
	  a role_name "$method_setAttribute_24" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868674 // $method_setAttribute_24 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868802 // $method_setAttributes_25 (<unidirectional association>)
	relation 3868802 --->
	  a role_name "$method_setAttributes_25" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868802 // $method_setAttributes_25 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3868930 // $method_unregisterMBean_26 (<unidirectional association>)
	relation 3868930 --->
	  a role_name "$method_unregisterMBean_26" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3868930 // $method_unregisterMBean_26 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      extra_member 182914 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    $method_addNotificationListener_0 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"addNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_addNotificationListeners_1 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"addNotificationListeners\", new java.lang.Class[] {javax.management.ObjectName[].class, java.rmi.MarshalledObject[].class, javax.security.auth.Subject[].class});
	    $method_close_2 = java.lang.AutoCloseable.class.getMethod(\"close\", new java.lang.Class[] {});
	    $method_createMBean_3 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_createMBean_4 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_createMBean_5 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_createMBean_6 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"createMBean\", new java.lang.Class[] {java.lang.String.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_fetchNotifications_7 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"fetchNotifications\", new java.lang.Class[] {long.class, int.class, long.class});
	    $method_getAttribute_8 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getAttribute\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, javax.security.auth.Subject.class});
	    $method_getAttributes_9 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getAttributes\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_getConnectionId_10 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getConnectionId\", new java.lang.Class[] {});
	    $method_getDefaultDomain_11 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getDefaultDomain\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getDomains_12 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getDomains\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getMBeanCount_13 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getMBeanCount\", new java.lang.Class[] {javax.security.auth.Subject.class});
	    $method_getMBeanInfo_14 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getMBeanInfo\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_getObjectInstance_15 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"getObjectInstance\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_invoke_16 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"invoke\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, java.rmi.MarshalledObject.class, java.lang.String[].class, javax.security.auth.Subject.class});
	    $method_isInstanceOf_17 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"isInstanceOf\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.String.class, javax.security.auth.Subject.class});
	    $method_isRegistered_18 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"isRegistered\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_queryMBeans_19 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"queryMBeans\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_queryNames_20 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"queryNames\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListener_21 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, java.rmi.MarshalledObject.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListener_22 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListener\", new java.lang.Class[] {javax.management.ObjectName.class, javax.management.ObjectName.class, javax.security.auth.Subject.class});
	    $method_removeNotificationListeners_23 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"removeNotificationListeners\", new java.lang.Class[] {javax.management.ObjectName.class, java.lang.Integer[].class, javax.security.auth.Subject.class});
	    $method_setAttribute_24 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"setAttribute\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_setAttributes_25 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"setAttributes\", new java.lang.Class[] {javax.management.ObjectName.class, java.rmi.MarshalledObject.class, javax.security.auth.Subject.class});
	    $method_unregisterMBean_26 = javax.management.remote.rmi.RMIConnection.class.getMethod(\"unregisterMBean\", new java.lang.Class[] {javax.management.ObjectName.class, javax.security.auth.Subject.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		\"stub class initialization failed\");
	}
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9964034 "RMIConnectionImpl_Stub"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 504194 // RemoteRef
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructors"
      end

      operation 9964162 "addNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 505986 // MarshalledObject
	  param inout name "$param_MarshalledObject_4" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_5" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " methods from remote interfaces
 implementation of addNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)"
      end

      operation 9964290 "addNotificationListeners"
	public return_type class_ref 137602 // Integer
	nparams 3
	  param inout name "$param_arrayOf_ObjectName_1" type class_ref 485506 // ObjectName
	multiplicity "[]"
	  param inout name "$param_arrayOf_MarshalledObject_2" type class_ref 505986 // MarshalledObject
	multiplicity "[]"
	  param inout name "$param_arrayOf_Subject_3" type class_ref 503042 // Subject
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])"
      end

      operation 9964418 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of close()"
      end

      operation 9964546 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 5
	  param inout name "$param_String_1" type class_ref 128130 // String
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 505986 // MarshalledObject
	  param inout name "$param_arrayOf_String_4" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "$param_Subject_5" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, MarshalledObject, String[], Subject)"
      end

      operation 9964674 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 6
	  param inout name "$param_String_1" type class_ref 128130 // String
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_ObjectName_3" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_4" type class_ref 505986 // MarshalledObject
	  param inout name "$param_arrayOf_String_5" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "$param_Subject_6" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 146818 // IOException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, ObjectName, MarshalledObject, String[], Subject)"
      end

      operation 9964802 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 4
	  param inout name "$param_String_1" type class_ref 128130 // String
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_ObjectName_3" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_4" type class_ref 503042 // Subject
	nexceptions 7
	  exception class_ref 146818 // IOException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, ObjectName, Subject)"
      end

      operation 9964930 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "$param_String_1" type class_ref 128130 // String
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of createMBean(String, ObjectName, Subject)"
      end

      operation 9965058 "fetchNotifications"
	public return_type class_ref 500866 // NotificationResult
	nparams 3
	  param in name "$param_long_1" explicit_type "long"
	  param in name "$param_int_2" explicit_type "int"
	  param in name "$param_long_3" explicit_type "long"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of fetchNotifications(long, int, long)"
      end

      operation 9965186 "getAttribute"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_String_2" type class_ref 128130 // String
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 5
	  exception class_ref 146818 // IOException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getAttribute(ObjectName, String, Subject)"
      end

      operation 9965314 "getAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_arrayOf_String_2" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getAttributes(ObjectName, String[], Subject)"
      end

      operation 9965442 "getConnectionId"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getConnectionId()"
      end

      operation 9965570 "getDefaultDomain"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getDefaultDomain(Subject)"
      end

      operation 9965698 "getDomains"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getDomains(Subject)"
      end

      operation 9965826 "getMBeanCount"
	public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "$param_Subject_1" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getMBeanCount(Subject)"
      end

      operation 9965954 "getMBeanInfo"
	public return_type class_ref 487426 // MBeanInfo
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487554 // IntrospectionException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getMBeanInfo(ObjectName, Subject)"
      end

      operation 9966082 "getObjectInstance"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of getObjectInstance(ObjectName, Subject)"
      end

      operation 9966210 "invoke"
	public return_type class_ref 129538 // Object
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_String_2" type class_ref 128130 // String
	  param inout name "$param_MarshalledObject_3" type class_ref 505986 // MarshalledObject
	  param inout name "$param_arrayOf_String_4" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "$param_Subject_5" type class_ref 503042 // Subject
	nexceptions 4
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of invoke(ObjectName, String, MarshalledObject, String[], Subject)"
      end

      operation 9966338 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_String_2" type class_ref 128130 // String
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of isInstanceOf(ObjectName, String, Subject)"
      end

      operation 9966466 "isRegistered"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of isRegistered(ObjectName, Subject)"
      end

      operation 9966594 "queryMBeans"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of queryMBeans(ObjectName, MarshalledObject, Subject)"
      end

      operation 9966722 "queryNames"
	public return_type class_ref 192258 // Set
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of queryNames(ObjectName, MarshalledObject, Subject)"
      end

      operation 9966850 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 5
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_3" type class_ref 505986 // MarshalledObject
	  param inout name "$param_MarshalledObject_4" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_5" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListener(ObjectName, ObjectName, MarshalledObject, MarshalledObject, Subject)"
      end

      operation 9966978 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_ObjectName_2" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListener(ObjectName, ObjectName, Subject)"
      end

      operation 9967106 "removeNotificationListeners"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_arrayOf_Integer_2" type class_ref 137602 // Integer
	multiplicity "[]"
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of removeNotificationListeners(ObjectName, Integer[], Subject)"
      end

      operation 9967234 "setAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 6
	  exception class_ref 146818 // IOException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486914 // InvalidAttributeValueException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of setAttribute(ObjectName, MarshalledObject, Subject)"
      end

      operation 9967362 "setAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 3
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_MarshalledObject_2" type class_ref 505986 // MarshalledObject
	  param inout name "$param_Subject_3" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of setAttributes(ObjectName, MarshalledObject, Subject)"
      end

      operation 9967490 "unregisterMBean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "$param_ObjectName_1" type class_ref 485506 // ObjectName
	  param inout name "$param_Subject_2" type class_ref 503042 // Subject
	nexceptions 3
	  exception class_ref 146818 // IOException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of unregisterMBean(ObjectName, Subject)"
      end
    end

    class 1205378 "RMIConnector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A connection to a remote RMI connector.  Usually, such
connections are made using {@link
javax.management.remote.JMXConnectorFactory JMXConnectorFactory}.
However, specialized applications can use this class directly, for
example with an {@link RMIServer} stub obtained without going
through JNDI.</p>

@since 1.5
"
      classrelation 3869058 // <realization>
	relation 3869058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3869058 // <realization>
	  b parent class_ref 506370 // JMXConnector
      end

      classrelation 3869186 // <realization>
	relation 3869186 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3869186 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3869314 // <realization>
	relation 3869314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3869314 // <realization>
	  b parent class_ref 1203074 // JMXAddressable
      end

      classrelation 3869442 // logger (<unidirectional association>)
	relation 3869442 --->
	  a role_name "logger" init_value "
            new ClassLogger(\"javax.management.remote.rmi\", \"RMIConnector\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3869442 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      attribute 2304642 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 817323035842634473L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 9967618 "RMIConnector"
	private explicit_return_type ""
	nparams 3
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "address" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String, ?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9967746 "RMIConnector"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an <code>RMIConnector</code> that will connect
the RMI connector server with the given address.</p>

<p>The address can refer directly to the connector server,
using one of the following syntaxes:</p>

<pre>
service:jmx:rmi://<em>[host[:port]]</em>/stub/<em>encoded-stub</em>
service:jmx:iiop://<em>[host[:port]]</em>/ior/<em>encoded-IOR</em>
</pre>

<p>(Here, the square brackets <code>[]</code> are not part of the
address but indicate that the host and port are optional.)</p>

<p>The address can instead indicate where to find an RMI stub
through JNDI, using one of the following syntaxes:</p>

<pre>
service:jmx:rmi://<em>[host[:port]]</em>/jndi/<em>jndi-name</em>
service:jmx:iiop://<em>[host[:port]]</em>/jndi/<em>jndi-name</em>
</pre>

<p>An implementation may also recognize additional address
syntaxes, for example:</p>

<pre>
service:jmx:iiop://<em>[host[:port]]</em>/stub/<em>encoded-stub</em>
</pre>

@param url the address of the RMI connector server.

@param environment additional attributes specifying how to make
the connection.  For JNDI-based addresses, these attributes can
usefully include JNDI attributes recognized by {@link
InitialContext#InitialContext(Hashtable) InitialContext}.  This
parameter can be null, which is equivalent to an empty Map.

@exception IllegalArgumentException if <code>url</code>
is null.
"
      end

      operation 9967874 "RMIConnector"
	public explicit_return_type ""
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "environment" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructs an <code>RMIConnector</code> using the given RMI stub.

@param rmiServer an RMI stub representing the RMI connector server.
@param environment additional attributes specifying how to make
the connection.  This parameter can be null, which is
equivalent to an empty Map.

@exception IllegalArgumentException if <code>rmiServer</code>
is null.
"
      end

      operation 9968002 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "<p>Returns a string representation of this object.  In general,
the <code>toString</code> method returns a string that
\"textually represents\" this object. The result should be a
concise but informative representation that is easy for a
person to read.</p>

@return a String representation of this object.
"
      end

      operation 9968130 "getAddress"
	public return_type class_ref 506498 // JMXServiceURL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The address of this connector.</p>

@return the address of this connector, or null if it
does not have one.

@since 1.6
"
      end

      operation 9968258 "connect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 implements JMXConnector interface
--------------------------------------------------------------------

@throws IOException if the connection could not be made because of a
  communication problem, or in the case of the {@code iiop} protocol,
  that RMI/IIOP is not supported
"
      end

      operation 9968386 "connect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "environment" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws IOException if the connection could not be made because of a
  communication problem, or in the case of the {@code iiop} protocol,
  that RMI/IIOP is not supported
"
      end

      operation 9968514 "getConnectionId"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9968642 "getMBeanServerConnection"
	public return_type class_ref 485250 // MBeanServerConnection
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9968770 "getMBeanServerConnection"
	public return_type class_ref 485250 // MBeanServerConnection
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9968898 "addConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9969026 "removeConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9969154 "removeConnectionNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9969282 "sendNotification"
	private explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 488706 // Notification
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9969410 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9969538 "close"
	private explicit_return_type "void"
	nparams 1
	  param inout name "intern" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " allows to do close after setting the flag \"terminated\" to true.
 It is necessary to avoid a deadlock, see 6296324"
      end

      operation 9969666 "addListenerWithSubject"
	private return_type class_ref 137602 // Integer
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 505986 // MarshalledObject
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	  param inout name "reconnect" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<NotificationFilter> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " added for re-connection"
      end

      operation 9969794 "addListenersWithSubjects"
	private return_type class_ref 137602 // Integer
	nparams 4
	  param inout name "names" type class_ref 485506 // ObjectName
	multiplicity "[]"
	  param inout name "filters" type class_ref 505986 // MarshalledObject
	multiplicity "[]"
	  param inout name "delegationSubjects" type class_ref 503042 // Subject
	multiplicity "[]"
	  param inout name "reconnect" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}<NotificationFilter>[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " added for re-connection"
      end

      class 1205634 "RemoteMBeanServerConnection"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3869570 // <realization>
	  relation 3869570 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3869570 // <realization>
	    b parent class_ref 485250 // MBeanServerConnection
	end

	classrelation 3869698 // delegationSubject (<unidirectional association>)
	  relation 3869698 --->
	    a role_name "delegationSubject" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3869698 // delegationSubject (<unidirectional association>)
	    b parent class_ref 503042 // Subject
	end

	operation 9969922 "RemoteMBeanServerConnection"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970050 "RemoteMBeanServerConnection"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "delegationSubject" type class_ref 503042 // Subject
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970178 "createMBean"
	  public return_type class_ref 485378 // ObjectInstance
	  nparams 2
	    param inout name "className" type class_ref 128130 // String
	    param inout name "name" type class_ref 485506 // ObjectName
	  nexceptions 6
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 485762 // InstanceAlreadyExistsException
	    exception class_ref 485890 // MBeanRegistrationException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 486146 // NotCompliantMBeanException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970306 "createMBean"
	  public return_type class_ref 485378 // ObjectInstance
	  nparams 3
	    param inout name "className" type class_ref 128130 // String
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "loaderName" type class_ref 485506 // ObjectName
	  nexceptions 7
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 485762 // InstanceAlreadyExistsException
	    exception class_ref 485890 // MBeanRegistrationException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 486146 // NotCompliantMBeanException
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970434 "createMBean"
	  public return_type class_ref 485378 // ObjectInstance
	  nparams 4
	    param inout name "className" type class_ref 128130 // String
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "params" type class_ref 129538 // Object
	  multiplicity "[]"
	    param inout name "signature" type class_ref 128130 // String
	  multiplicity "[]"
	  nexceptions 6
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 485762 // InstanceAlreadyExistsException
	    exception class_ref 485890 // MBeanRegistrationException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 486146 // NotCompliantMBeanException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970562 "createMBean"
	  public return_type class_ref 485378 // ObjectInstance
	  nparams 5
	    param inout name "className" type class_ref 128130 // String
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "loaderName" type class_ref 485506 // ObjectName
	    param inout name "params" type class_ref 129538 // Object
	  multiplicity "[]"
	    param inout name "signature" type class_ref 128130 // String
	  multiplicity "[]"
	  nexceptions 7
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 485762 // InstanceAlreadyExistsException
	    exception class_ref 485890 // MBeanRegistrationException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 486146 // NotCompliantMBeanException
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970690 "unregisterMBean"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "name" type class_ref 485506 // ObjectName
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 485890 // MBeanRegistrationException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970818 "getObjectInstance"
	  public return_type class_ref 485378 // ObjectInstance
	  nparams 1
	    param inout name "name" type class_ref 485506 // ObjectName
	  nexceptions 2
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9970946 "queryMBeans"
	  public return_type class_ref 192258 // Set
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "query" type class_ref 486402 // QueryExp
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971074 "queryNames"
	  public return_type class_ref 192258 // Set
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "query" type class_ref 486402 // QueryExp
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971202 "isRegistered"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "name" type class_ref 485506 // ObjectName
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971330 "getMBeanCount"
	  public return_type class_ref 137602 // Integer
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971458 "getAttribute"
	  public return_type class_ref 129538 // Object
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "attribute" type class_ref 128130 // String
	  nexceptions 5
	    exception class_ref 486018 // MBeanException
	    exception class_ref 486530 // AttributeNotFoundException
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971586 "getAttributes"
	  public return_type class_ref 486658 // AttributeList
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "attributes" type class_ref 128130 // String
	  multiplicity "[]"
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971714 "setAttribute"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "attribute" type class_ref 486786 // Attribute
	  nexceptions 6
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 486530 // AttributeNotFoundException
	    exception class_ref 486914 // InvalidAttributeValueException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971842 "setAttributes"
	  public return_type class_ref 486658 // AttributeList
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "attributes" type class_ref 486658 // AttributeList
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9971970 "invoke"
	  public return_type class_ref 129538 // Object
	  nparams 4
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "operationName" type class_ref 128130 // String
	    param inout name "params" type class_ref 129538 // Object
	  multiplicity "[]"
	    param inout name "signature" type class_ref 128130 // String
	  multiplicity "[]"
	  nexceptions 4
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 486018 // MBeanException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972098 "getDefaultDomain"
	  public return_type class_ref 128130 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972226 "getDomains"
	  public return_type class_ref 128130 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972354 "getMBeanInfo"
	  public return_type class_ref 487426 // MBeanInfo
	  nparams 1
	    param inout name "name" type class_ref 485506 // ObjectName
	  nexceptions 4
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487554 // IntrospectionException
	    exception class_ref 485634 // ReflectionException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972482 "isInstanceOf"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "className" type class_ref 128130 // String
	  nexceptions 2
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972610 "addNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 485506 // ObjectName
	    param inout name "filter" type class_ref 487170 // NotificationFilter
	    param inout name "handback" type class_ref 129538 // Object
	  nexceptions 2
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972738 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 485506 // ObjectName
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487298 // ListenerNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972866 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 485506 // ObjectName
	    param inout name "filter" type class_ref 487170 // NotificationFilter
	    param inout name "handback" type class_ref 129538 // Object
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487298 // ListenerNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9972994 "addNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 487042 // NotificationListener
	    param inout name "filter" type class_ref 487170 // NotificationFilter
	    param inout name "handback" type class_ref 129538 // Object
	  nexceptions 2
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Specific Notification Handle ----------------------------------"
	end

	operation 9973122 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 487042 // NotificationListener
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487298 // ListenerNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9973250 "removeNotificationListener"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "name" type class_ref 485506 // ObjectName
	    param inout name "listener" type class_ref 487042 // NotificationListener
	    param inout name "filter" type class_ref 487170 // NotificationFilter
	    param inout name "handback" type class_ref 129538 // Object
	  nexceptions 3
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487298 // ListenerNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1205762 "RMINotifClient"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3869826 // <generalisation>
	  relation 3869826 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3869826 // <generalisation>
	    b parent class_ref 503170 // ClientNotifForwarder
	end

	operation 9973378 "RMINotifClient"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "cl" type class_ref 129026 // ClassLoader
	    param inout name "env" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9973506 "fetchNotifs"
	  protected return_type class_ref 500866 // NotificationResult
	  nparams 3
	    param in name "clientSequenceNumber" explicit_type "long"
	    param in name "maxNotifications" explicit_type "int"
	    param in name "timeout" explicit_type "long"
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9973634 "rethrowDeserializationException"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "ioe" type class_ref 146818 // IOException
	  nexceptions 2
	    exception class_ref 169730 // ClassNotFoundException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9973762 "addListenerForMBeanRemovedNotif"
	  protected return_type class_ref 137602 // Integer
	  nparams 0
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 486274 // InstanceNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9973890 "removeListenerForMBeanRemovedNotif"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "id" type class_ref 137602 // Integer
	  nexceptions 3
	    exception class_ref 146818 // IOException
	    exception class_ref 486274 // InstanceNotFoundException
	    exception class_ref 487298 // ListenerNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9974018 "lostNotifs"
	  protected explicit_return_type "void"
	  nparams 2
	    param inout name "message" type class_ref 128130 // String
	    param in name "number" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1205890 "RMIClientCommunicatorAdmin"
	visibility private 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3869954 // <generalisation>
	  relation 3869954 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3869954 // <generalisation>
	    b parent class_ref 502658 // ClientCommunicatorAdmin
	end

	operation 9974146 "RMIClientCommunicatorAdmin"
	  public explicit_return_type ""
	  nparams 1
	    param in name "period" explicit_type "long"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9974274 "gotIOException"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ioe" type class_ref 146818 // IOException
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 9974402 "reconnectNotificationListeners"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "old" type class_ref 502914 // ClientListenerInfo
	  multiplicity "[]"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9974530 "checkConnection"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9974658 "doStart"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9974786 "doStop"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9974914 "connectStub"
	class_operation package return_type class_ref 1205506 // RMIServer
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "environment" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - Serialization
--------------------------------------------------------------------

<p>In order to be usable, an IIOP stub must be connected to an ORB.
The stub is automatically connected to the ORB if:
<ul>
    <li> It was returned by the COS naming</li>
    <li> Its server counterpart has been registered in COS naming
         through JNDI.</li>
</ul>
Otherwise, it is not connected. A stub which is deserialized
from Jini is not connected. A stub which is obtained from a
non registered RMIIIOPServerImpl is not a connected.<br>
A stub which is not connected can't be serialized, and thus
can't be registered in Jini. A stub which is not connected can't
be used to invoke methods on the server.
<p>
In order to palliate this, this method will connect the
given stub if it is not yet connected. If the given
<var>RMIServer</var> is not an instance of
{@link javax.rmi.CORBA.Stub javax.rmi.CORBA.Stub}, then the
method do nothing and simply returns that stub. Otherwise,
this method will attempt to connect the stub to an ORB as
follows:
<ul>
<li>This method looks in the provided <var>environment</var> for
the \"java.naming.corba.orb\" property. If it is found, the
referenced object (an {@link org.omg.CORBA.ORB ORB}) is used to
connect the stub. Otherwise, a new org.omg.CORBA.ORB is created
by calling {@link
org.omg.CORBA.ORB#init(String[], Properties)
org.omg.CORBA.ORB.init((String[])null,(Properties)null)}</li>
<li>The new created ORB is kept in a static
{@link WeakReference} and can be reused for connecting other
stubs. However, no reference is ever kept on the ORB provided
in the <var>environment</var> map, if any.</li>
</ul>
@param rmiServer A RMI Server Stub.
@param environment An environment map, possibly containing an ORB.
@return the given stub.
@exception IllegalArgumentException if the
     <tt>java.naming.corba.orb</tt> property is specified and
     does not point to an {@link org.omg.CORBA.ORB ORB}.
@exception IOException if the connection to the ORB failed.
"
      end

      operation 9975042 "resolveOrb"
	class_operation package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "environment" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ORB specified by <var>environment</var>, or create a
new one.
<p>This method looks in the provided <var>environment</var> for
the \"java.naming.corba.orb\" property. If it is found, the
referenced object (an {@link org.omg.CORBA.ORB ORB}) is
returned. Otherwise, a new org.omg.CORBA.ORB is created
by calling {@link
org.omg.CORBA.ORB#init(String[], java.util.Properties)
org.omg.CORBA.ORB.init((String[])null,(Properties)null)}
<p>The new created ORB is kept in a static
{@link WeakReference} and can be reused for connecting other
stubs. However, no reference is ever kept on the ORB provided
in the <var>environment</var> map, if any.
@param environment An environment map, possibly containing an ORB.
@return An ORB.
@exception IllegalArgumentException if the
     <tt>java.naming.corba.orb</tt> property is specified and
     does not point to an {@link org.omg.CORBA.ORB ORB}.
@exception IOException if the ORB initialization failed.
"
      end

      operation 9975170 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read RMIConnector fields from an {@link java.io.ObjectInputStream
ObjectInputStream}.
Calls <code>s.defaultReadObject()</code> and then initializes
all transient variables that need initializing.
@param s The ObjectInputStream to read from.
@exception InvalidObjectException if none of <var>rmiServer</var> stub
   or <var>jmxServiceURL</var> are set.
@see #RMIConnector(JMXServiceURL,Map)
@see #RMIConnector(RMIServer,Map)
"
      end

      operation 9975298 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the RMIConnector fields to an {@link java.io.ObjectOutputStream
ObjectOutputStream}.
<p>Connects the underlying RMIServer stub to an ORB, if needed,
before serializing it. This is done using the environment
map that was provided to the constructor, if any, and as documented
in {@link javax.management.remote.rmi}.</p>
<p>This method then calls <code>s.defaultWriteObject()</code>.
Usually, <var>rmiServer</var> is null if this object
was constructed with a JMXServiceURL, and <var>jmxServiceURL</var>
is null if this object is constructed with a RMIServer stub.
<p>Note that the environment Map is not serialized, since the objects
it contains are assumed to be contextual and relevant only
with respect to the local environment (class loader, ORB, etc...).</p>
<p>After an RMIConnector is deserialized, it is assumed that the
user will call {@link #connect(Map)}, providing a new Map that
can contain values which are contextually relevant to the new
local environment.</p>
<p>Since connection to the ORB is needed prior to serializing, and
since the ORB to connect to is one of those contextual parameters,
it is not recommended to re-serialize a just de-serialized object -
as the de-serialized object has no map. Thus, when an RMIConnector
object is needed for serialization or transmission to a remote
application, it is recommended to obtain a new RMIConnector stub
by calling {@link RMIConnectorServer#toJMXConnector(Map)}.</p>
@param s The ObjectOutputStream to write to.
@exception InvalidObjectException if none of <var>rmiServer</var> stub
   or <var>jmxServiceURL</var> are set.
@see #RMIConnector(JMXServiceURL,Map)
@see #RMIConnector(RMIServer,Map)
"
      end

      operation 9975426 "initTransients"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialization of transient variables."
      end

      operation 9975554 "checkStub"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stub" type class_ref 207106 // Remote
	  param inout name "stubClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - Check if stub can be trusted.
--------------------------------------------------------------------"
      end

      operation 9975682 "findRMIServer"
	private return_type class_ref 1205506 // RMIServer
	nparams 2
	  param inout name "directoryURL" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	nexceptions 2
	  exception class_ref 262146 // NamingException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, Object> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - RMIServer creation
--------------------------------------------------------------------"
      end

      operation 9975810 "findRMIServerJNDI"
	private return_type class_ref 1205506 // RMIServer
	nparams 3
	  param inout name "jndiURL" type class_ref 128130 // String
	  param inout name "env" type class_ref 130178 // Map
	  param inout name "isIiop" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 262146 // NamingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lookup the RMIServer stub in a directory.
@param jndiURL A JNDI URL indicating the location of the Stub
               (see {@link javax.management.remote.rmi}), e.g.:
  <ul><li><tt>rmi://registry-host:port/rmi-stub-name</tt></li>
      <li>or <tt>iiop://cosnaming-host:port/iiop-stub-name</tt></li>
      <li>or <tt>ldap://ldap-host:port/java-container-dn</tt></li>
  </ul>
@param env the environment Map passed to the connector.
@param isIiop true if the stub is expected to be an IIOP stub.
@return The retrieved RMIServer stub.
@exception NamingException if the stub couldn't be found.
"
      end

      operation 9975938 "narrowJRMPServer"
	class_operation private return_type class_ref 1205506 // RMIServer
	nparams 1
	  param inout name "objref" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9976066 "narrowIIOPServer"
	class_operation private return_type class_ref 1205506 // RMIServer
	nparams 1
	  param inout name "objref" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9976194 "findRMIServerIIOP"
	private return_type class_ref 1205506 // RMIServer
	nparams 3
	  param inout name "ior" type class_ref 128130 // String
	  param inout name "env" type class_ref 130178 // Map
	  param inout name "isIiop" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9976322 "findRMIServerJRMP"
	private return_type class_ref 1205506 // RMIServer
	nparams 3
	  param inout name "base64" type class_ref 128130 // String
	  param inout name "env" type class_ref 130178 // Map
	  param inout name "isIiop" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1206018 "ObjectInputStreamWithLoader"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3870082 // <generalisation>
	  relation 3870082 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3870082 // <generalisation>
	    b parent class_ref 168962 // ObjectInputStream
	end

	operation 9976450 "ObjectInputStreamWithLoader"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 146434 // InputStream
	    param inout name "cl" type class_ref 129026 // ClassLoader
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9976578 "resolveClass"
	  protected return_type class_ref 130818 // Class
	  nparams 1
	    param inout name "classDesc" type class_ref 170242 // ObjectStreamClass
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 3870210 // loader (<unidirectional association>)
	  relation 3870210 --->
	    a role_name "loader" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3870210 // loader (<unidirectional association>)
	    b parent class_ref 129026 // ClassLoader
	end
      end

      operation 9976706 "getConnectionWithSubject"
	private return_type class_ref 485250 // MBeanServerConnection
	nparams 1
	  param inout name "delegationSubject" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3870338 // rmiServerImplStubClassName (<unidirectional association>)
	relation 3870338 --->
	  a role_name "rmiServerImplStubClassName" init_value "
        RMIServer.class.getName() + \"Impl_Stub\"" class_relation const_relation private
	    comment "
The following section of code avoids a class loading problem
with RMI.  The problem is that an RMI stub, when deserializing
a remote method return value or exception, will first of all
consult the first non-bootstrap class loader it finds in the
call stack.  This can lead to behavior that is not portable
between implementations of the JMX Remote API.  Notably, an
implementation on J2SE 1.4 will find the RMI stub's loader on
the stack.  But in J2SE 5, this stub is loaded by the
bootstrap loader, so RMI will find the loader of the user code
that called an MBeanServerConnection method.

To avoid this problem, we take advantage of what the RMI stub
is doing internally.  Each remote call will end up calling
ref.invoke(...), where ref is the RemoteRef parameter given to
the RMI stub's constructor.  It is within this call that the
deserialization will happen.  So we fabricate our own RemoteRef
that delegates everything to the \"real\" one but that is loaded
by a class loader that knows no other classes.  The class
loader NoCallStackClassLoader does this: the RemoteRef is an
instance of the class named by proxyRefClassName, which is
fabricated by the class loader using byte code that is defined
by the string below.

The call stack when the deserialization happens is thus this:
MBeanServerConnection.getAttribute (or whatever)
-> RMIConnectionImpl_Stub.getAttribute
-> ProxyRef.invoke(...getAttribute...)
-> UnicastRef.invoke(...getAttribute...)
-> internal RMI stuff

Here UnicastRef is the RemoteRef created when the stub was
deserialized (which is of some RMI internal class).  It and the
\"internal RMI stuff\" are loaded by the bootstrap loader, so are
transparent to the stack search.  The first non-bootstrap
loader found is our ProxyRefLoader, as required.

In a future version of this code as integrated into J2SE 5,
this workaround could be replaced by direct access to the
internals of RMI.  For now, we use the same code base for J2SE
and for the standalone Reference Implementation.

The byte code below encodes the following class, compiled using
J2SE 1.4.2 with the -g:none option.

package com.sun.jmx.remote.internal;

import java.lang.reflect.Method;
import java.rmi.Remote;
import java.rmi.server.RemoteRef;
import com.sun.jmx.remote.internal.ProxyRef;

public class PRef extends ProxyRef {
public PRef(RemoteRef ref) {
super(ref);
}

public Object invoke(Remote obj, Method method,
Object[] params, long opnum)
throws Exception {
return ref.invoke(obj, method, params, opnum);
}
}

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3870338 // rmiServerImplStubClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3870466 // rmiServerImplStubClass (<unidirectional association>)
	relation 3870466 --->
	  a role_name "rmiServerImplStubClass" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3870466 // rmiServerImplStubClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3870594 // rmiConnectionImplStubClassName (<unidirectional association>)
	relation 3870594 --->
	  a role_name "rmiConnectionImplStubClassName" init_value "
            RMIConnection.class.getName() + \"Impl_Stub\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3870594 // rmiConnectionImplStubClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3870722 // rmiConnectionImplStubClass (<unidirectional association>)
	relation 3870722 --->
	  a role_name "rmiConnectionImplStubClass" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3870722 // rmiConnectionImplStubClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3870850 // pRefClassName (<unidirectional association>)
	relation 3870850 --->
	  a role_name "pRefClassName" init_value "
        \"com.sun.jmx.remote.internal.PRef\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3870850 // pRefClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3870978 // proxyRefConstructor (<unidirectional association>)
	relation 3870978 --->
	  a role_name "proxyRefConstructor" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3870978 // proxyRefConstructor (<unidirectional association>)
	  b parent class_ref 189186 // Constructor
      end

      extra_member 183042 "initialization"
	
	cpp "" ""
	java "  static {
        final String pRefByteCodeString =
                \"\\312\\376\\272\\276\\0\\0\\0.\\0\\27\\12\\0\\5\\0\\15\\11\\0\\4\\0\\16\\13\\0\\17\\0\"+
                \"\\20\\7\\0\\21\\7\\0\\22\\1\\0\\6<init>\\1\\0\\36(Ljava/rmi/server/RemoteRef;\"+
                \")V\\1\\0\\4Code\\1\\0\\6invoke\\1\\0S(Ljava/rmi/Remote;Ljava/lang/reflec\"+
                \"t/Method;[Ljava/lang/Object;J)Ljava/lang/Object;\\1\\0\\12Exception\"+
                \"s\\7\\0\\23\\14\\0\\6\\0\\7\\14\\0\\24\\0\\25\\7\\0\\26\\14\\0\\11\\0\\12\\1\\0\\40com/\"+
                \"sun/jmx/remote/internal/PRef\\1\\0$com/sun/jmx/remote/internal/Pr\"+
                \"oxyRef\\1\\0\\23java/lang/Exception\\1\\0\\3ref\\1\\0\\33Ljava/rmi/serve\"+
                \"r/RemoteRef;\\1\\0\\31java/rmi/server/RemoteRef\\0!\\0\\4\\0\\5\\0\\0\\0\\0\"+
                \"\\0\\2\\0\\1\\0\\6\\0\\7\\0\\1\\0\\10\\0\\0\\0\\22\\0\\2\\0\\2\\0\\0\\0\\6*+\\267\\0\\1\\261\"+
                \"\\0\\0\\0\\0\\0\\1\\0\\11\\0\\12\\0\\2\\0\\10\\0\\0\\0\\33\\0\\6\\0\\6\\0\\0\\0\\17*\\264\\0\"+
                \"\\2+,-\\26\\4\\271\\0\\3\\6\\0\\260\\0\\0\\0\\0\\0\\13\\0\\0\\0\\4\\0\\1\\0\\14\\0\\0\";
        final byte[] pRefByteCode =
                NoCallStackClassLoader.stringToBytes(pRefByteCodeString);
        PrivilegedExceptionAction<Constructor<?>> action =
                new PrivilegedExceptionAction<Constructor<?>>() {
            public Constructor<?> run() throws Exception {
                Class thisClass = RMIConnector.class;
                ClassLoader thisLoader = thisClass.getClassLoader();
                ProtectionDomain thisProtectionDomain =
                        thisClass.getProtectionDomain();
                String[] otherClassNames = {ProxyRef.class.getName()};
                ClassLoader cl =
                        new NoCallStackClassLoader(pRefClassName,
                        pRefByteCode,
                        otherClassNames,
                        thisLoader,
                        thisProtectionDomain);
                Class<?> c = cl.loadClass(pRefClassName);
                return c.getConstructor(RemoteRef.class);
            }
        };

        Class<?> serverStubClass;
        try {
            serverStubClass = Class.forName(rmiServerImplStubClassName);
        } catch (Exception e) {
            logger.error(\"<clinit>\",
                    \"Failed to instantiate \" +
                    rmiServerImplStubClassName + \": \" + e);
            logger.debug(\"<clinit>\",e);
            serverStubClass = null;
        }
        rmiServerImplStubClass = serverStubClass;

        Class<?> stubClass;
        Constructor<?> constr;
        try {
            stubClass = Class.forName(rmiConnectionImplStubClassName);
            constr = (Constructor<?>) AccessController.doPrivileged(action);
        } catch (Exception e) {
            logger.error(\"<clinit>\",
                    \"Failed to initialize proxy reference constructor \"+
                    \"for \" + rmiConnectionImplStubClassName + \": \" + e);
            logger.debug(\"<clinit>\",e);
            stubClass = null;
            constr = null;
        }
        rmiConnectionImplStubClass = stubClass;
        proxyRefConstructor = constr;
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9976834 "shadowJrmpStub"
	class_operation private return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "stub" type class_ref 504450 // RemoteObject
	nexceptions 5
	  exception class_ref 193282 // InstantiationException
	  exception class_ref 321538 // IllegalAccessException
	  exception class_ref 193410 // InvocationTargetException
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 742530 // NoSuchMethodException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3871106 // iiopConnectionStubClassName (<unidirectional association>)
	relation 3871106 --->
	  a role_name "iiopConnectionStubClassName" init_value "
        \"org.omg.stub.javax.management.remote.rmi._RMIConnection_Stub\"" class_relation const_relation private
	    comment "
The following code performs a similar trick for RMI/IIOP to the
one described above for RMI/JRMP.  Unlike JRMP, though, we
can't easily insert an object between the RMIConnection stub
and the RMI/IIOP deserialization code, as explained below.

A method in an RMI/IIOP stub does the following.  It makes an
org.omg.CORBA_2_3.portable.OutputStream for each request, and
writes the parameters to it.  Then it calls
_invoke(OutputStream) which it inherits from CORBA's
ObjectImpl.  That returns an
org.omg.CORBA_2_3.portable.InputStream.  The return value is
read from this InputStream.  So the stack during
deserialization looks like this:

MBeanServerConnection.getAttribute (or whatever)
-> _RMIConnection_Stub.getAttribute
-> Util.readAny (a CORBA method)
-> InputStream.read_any
-> internal CORBA stuff

What we would have *liked* to have done would be the same thing
as for RMI/JRMP.  We create a \"ProxyDelegate\" that is an
org.omg.CORBA.portable.Delegate that simply forwards every
operation to the real original Delegate from the RMIConnection
stub, except that the InputStream returned by _invoke is
wrapped by a \"ProxyInputStream\" that is loaded by our
NoCallStackClassLoader.

Unfortunately, this doesn't work, at least with Sun's J2SE
1.4.2, because the CORBA code is not designed to allow you to
change Delegates arbitrarily.  You get a ClassCastException
from code that expects the Delegate to implement an internal
interface.

So instead we do the following.  We create a subclass of the
stub that overrides the _invoke method so as to wrap the
returned InputStream in a ProxyInputStream.  We create a
subclass of ProxyInputStream using the NoCallStackClassLoader
and override its read_any and read_value(Class) methods.
(These are the only methods called during deserialization of
MBeanServerConnection return values.)  We extract the Delegate
from the original stub and insert it into our subclass stub,
and away we go.  The state of a stub consists solely of its
Delegate.

We also need to catch ApplicationException, which will encode
any exceptions declared in the throws clause of the called
method.  Its InputStream needs to be wrapped in a
ProxyInputSteam too.

We override _releaseReply in the stub subclass so that it
replaces a ProxyInputStream argument with the original
InputStream.  This avoids problems if the implementation of
_releaseReply ends up casting this InputStream to an
implementation-specific interface (which in Sun's J2SE 5 it
does).

It is not strictly necessary for the stub subclass to be loaded
by a NoCallStackClassLoader, since the call-stack search stops
at the ProxyInputStream subclass.  However, it is convenient
for two reasons.  One is that it means that the
ProxyInputStream subclass can be accessed directly, without
using reflection.  The other is that it avoids build problems,
since usually stubs are created after other classes are
compiled, so we can't access them from this class without,
again, using reflection.

The strings below encode the following two Java classes,
compiled using javac -g:none.

package com.sun.jmx.remote.protocol.iiop;

import org.omg.stub.javax.management.remote.rmi._RMIConnection_Stub;

import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;

public class ProxyStub extends _RMIConnection_Stub {
public InputStream _invoke(OutputStream out)
throws ApplicationException, RemarshalException {
try {
return new PInputStream(super._invoke(out));
} catch (ApplicationException e) {
InputStream pis = new PInputStream(e.getInputStream());
throw new ApplicationException(e.getId(), pis);
}
}

public void _releaseReply(InputStream in) {
if (in != null)
in = ((PInputStream)in).getProxiedInputStream();
super._releaseReply(in);
}
}

package com.sun.jmx.remote.protocol.iiop;

public class PInputStream extends ProxyInputStream {
public PInputStream(org.omg.CORBA.portable.InputStream in) {
super(in);
}

public org.omg.CORBA.Any read_any() {
return in.read_any();
}

public java.io.Serializable read_value(Class clz) {
return narrow().read_value(clz);
}
}



"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871106 // iiopConnectionStubClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3871234 // proxyStubClassName (<unidirectional association>)
	relation 3871234 --->
	  a role_name "proxyStubClassName" init_value "
        \"com.sun.jmx.remote.protocol.iiop.ProxyStub\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871234 // proxyStubClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3871362 // ProxyInputStreamClassName (<unidirectional association>)
	relation 3871362 --->
	  a role_name "ProxyInputStreamClassName" init_value "
        \"com.sun.jmx.remote.protocol.iiop.ProxyInputStream\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871362 // ProxyInputStreamClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3871490 // pInputStreamClassName (<unidirectional association>)
	relation 3871490 --->
	  a role_name "pInputStreamClassName" init_value "
        \"com.sun.jmx.remote.protocol.iiop.PInputStream\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871490 // pInputStreamClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3871618 // proxyStubClass (<unidirectional association>)
	relation 3871618 --->
	  a role_name "proxyStubClass" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3871618 // proxyStubClass (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      extra_member 183170 "initialization"
	
	cpp "" ""
	java "  static {
        final String proxyStubByteCodeString =
                \"\\312\\376\\272\\276\\0\\0\\0\\63\\0+\\12\\0\\14\\0\\30\\7\\0\\31\\12\\0\\14\\0\\32\\12\"+
                \"\\0\\2\\0\\33\\7\\0\\34\\12\\0\\5\\0\\35\\12\\0\\5\\0\\36\\12\\0\\5\\0\\37\\12\\0\\2\\0 \"+
                \"\\12\\0\\14\\0!\\7\\0\\\"\\7\\0#\\1\\0\\6<init>\\1\\0\\3()V\\1\\0\\4Code\\1\\0\\7_in\"+
                \"voke\\1\\0K(Lorg/omg/CORBA/portable/OutputStream;)Lorg/omg/CORBA\"+
                \"/portable/InputStream;\\1\\0\\15StackMapTable\\7\\0\\34\\1\\0\\12Except\"+
                \"ions\\7\\0$\\1\\0\\15_releaseReply\\1\\0'(Lorg/omg/CORBA/portable/Inp\"+
                \"utStream;)V\\14\\0\\15\\0\\16\\1\\0-com/sun/jmx/remote/protocol/iiop/\"+
                \"PInputStream\\14\\0\\20\\0\\21\\14\\0\\15\\0\\27\\1\\0+org/omg/CORBA/porta\"+
                \"ble/ApplicationException\\14\\0%\\0&\\14\\0'\\0(\\14\\0\\15\\0)\\14\\0*\\0&\"+
                \"\\14\\0\\26\\0\\27\\1\\0*com/sun/jmx/remote/protocol/iiop/ProxyStub\\1\"+
                \"\\0<org/omg/stub/javax/management/remote/rmi/_RMIConnection_Stu\"+
                \"b\\1\\0)org/omg/CORBA/portable/RemarshalException\\1\\0\\16getInput\"+
                \"Stream\\1\\0&()Lorg/omg/CORBA/portable/InputStream;\\1\\0\\5getId\\1\"+
                \"\\0\\24()Ljava/lang/String;\\1\\09(Ljava/lang/String;Lorg/omg/CORB\"+
                \"A/portable/InputStream;)V\\1\\0\\25getProxiedInputStream\\0!\\0\\13\\0\"+
                \"\\14\\0\\0\\0\\0\\0\\3\\0\\1\\0\\15\\0\\16\\0\\1\\0\\17\\0\\0\\0\\21\\0\\1\\0\\1\\0\\0\\0\\5\"+
                \"*\\267\\0\\1\\261\\0\\0\\0\\0\\0\\1\\0\\20\\0\\21\\0\\2\\0\\17\\0\\0\\0G\\0\\4\\0\\4\\0\\0\"+
                \"\\0'\\273\\0\\2Y*+\\267\\0\\3\\267\\0\\4\\260M\\273\\0\\2Y,\\266\\0\\6\\267\\0\\4N\"+
                \"\\273\\0\\5Y,\\266\\0\\7-\\267\\0\\10\\277\\0\\1\\0\\0\\0\\14\\0\\15\\0\\5\\0\\1\\0\\22\"+
                \"\\0\\0\\0\\6\\0\\1M\\7\\0\\23\\0\\24\\0\\0\\0\\6\\0\\2\\0\\5\\0\\25\\0\\1\\0\\26\\0\\27\\0\"+
                \"\\1\\0\\17\\0\\0\\0'\\0\\2\\0\\2\\0\\0\\0\\22+\\306\\0\\13+\\300\\0\\2\\266\\0\\11L*+\"+
                \"\\267\\0\\12\\261\\0\\0\\0\\1\\0\\22\\0\\0\\0\\3\\0\\1\\14\\0\\0\";
        final String pInputStreamByteCodeString =
                \"\\312\\376\\272\\276\\0\\0\\0\\63\\0\\36\\12\\0\\7\\0\\17\\11\\0\\6\\0\\20\\12\\0\\21\"+
                \"\\0\\22\\12\\0\\6\\0\\23\\12\\0\\24\\0\\25\\7\\0\\26\\7\\0\\27\\1\\0\\6<init>\\1\\0'(\"+
                \"Lorg/omg/CORBA/portable/InputStream;)V\\1\\0\\4Code\\1\\0\\10read_an\"+
                \"y\\1\\0\\25()Lorg/omg/CORBA/Any;\\1\\0\\12read_value\\1\\0)(Ljava/lang\"+
                \"/Class;)Ljava/io/Serializable;\\14\\0\\10\\0\\11\\14\\0\\30\\0\\31\\7\\0\\32\"+
                \"\\14\\0\\13\\0\\14\\14\\0\\33\\0\\34\\7\\0\\35\\14\\0\\15\\0\\16\\1\\0-com/sun/jmx\"+
                \"/remote/protocol/iiop/PInputStream\\1\\0\\61com/sun/jmx/remote/pr\"+
                \"otocol/iiop/ProxyInputStream\\1\\0\\2in\\1\\0$Lorg/omg/CORBA/portab\"+
                \"le/InputStream;\\1\\0\\\"org/omg/CORBA/portable/InputStream\\1\\0\\6n\"+
                \"arrow\\1\\0*()Lorg/omg/CORBA_2_3/portable/InputStream;\\1\\0&org/o\"+
                \"mg/CORBA_2_3/portable/InputStream\\0!\\0\\6\\0\\7\\0\\0\\0\\0\\0\\3\\0\\1\\0\"+
                \"\\10\\0\\11\\0\\1\\0\\12\\0\\0\\0\\22\\0\\2\\0\\2\\0\\0\\0\\6*+\\267\\0\\1\\261\\0\\0\\0\"+
                \"\\0\\0\\1\\0\\13\\0\\14\\0\\1\\0\\12\\0\\0\\0\\24\\0\\1\\0\\1\\0\\0\\0\\10*\\264\\0\\2\\266\"+
                \"\\0\\3\\260\\0\\0\\0\\0\\0\\1\\0\\15\\0\\16\\0\\1\\0\\12\\0\\0\\0\\25\\0\\2\\0\\2\\0\\0\\0\"+
                \"\\11*\\266\\0\\4+\\266\\0\\5\\260\\0\\0\\0\\0\\0\\0\";
        final byte[] proxyStubByteCode =
                NoCallStackClassLoader.stringToBytes(proxyStubByteCodeString);
        final byte[] pInputStreamByteCode =
                NoCallStackClassLoader.stringToBytes(pInputStreamByteCodeString);
        final String[] classNames={proxyStubClassName, pInputStreamClassName};
        final byte[][] byteCodes = {proxyStubByteCode, pInputStreamByteCode};
        final String[] otherClassNames = {
            iiopConnectionStubClassName,
            ProxyInputStreamClassName,
        };
        if (IIOPHelper.isAvailable()) {
            PrivilegedExceptionAction<Class<?>> action =
                new PrivilegedExceptionAction<Class<?>>() {
              public Class<?> run() throws Exception {
                Class thisClass = RMIConnector.class;
                ClassLoader thisLoader = thisClass.getClassLoader();
                ProtectionDomain thisProtectionDomain =
                        thisClass.getProtectionDomain();
                ClassLoader cl =
                        new NoCallStackClassLoader(classNames,
                        byteCodes,
                        otherClassNames,
                        thisLoader,
                        thisProtectionDomain);
                return cl.loadClass(proxyStubClassName);
              }
            };
            Class<?> stubClass;
            try {
                stubClass = AccessController.doPrivileged(action);
            } catch (Exception e) {
                logger.error(\"<clinit>\",
                        \"Unexpected exception making shadow IIOP stub class: \"+e);
                logger.debug(\"<clinit>\",e);
                stubClass = null;
            }
            proxyStubClass = stubClass;
        } else {
            proxyStubClass = null;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9976962 "shadowIiopStub"
	class_operation private return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "stub" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 193282 // InstantiationException
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9977090 "getConnection"
	class_operation private return_type class_ref 1204226 // RMIConnection
	nparams 3
	  param inout name "server" type class_ref 1205506 // RMIServer
	  param inout name "credentials" type class_ref 129538 // Object
	  param inout name "checkStub" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9977218 "base64ToByteArray"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9977346 "base64toInt"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Translates the specified character, which is assumed to be in the
\"Base 64 Alphabet\" into its equivalent 6-bit positive integer.

@throws IllegalArgumentException if
       c is not in the Base64 Alphabet.
"
      end

      attribute 2304770 "base64ToInt"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54,
        55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4,
        5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
        24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This array is a lookup table that translates unicode characters
drawn from the \"Base64 Alphabet\" (as specified in Table 1 of RFC 2045)
into their 6-bit positive integer equivalents.  Characters that
are not in the Base64 alphabet but fall within the bounds of the
array are translated to -1.

"
      end

      operation 9977474 "pushDefaultClassLoader"
	private return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------
 Private stuff - Find / Set default class loader
--------------------------------------------------------------------"
      end

      operation 9977602 "popDefaultClassLoader"
	private explicit_return_type "void"
	nparams 1
	  param in name "old" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3871746 // rmiServer (<unidirectional association>)
	relation 3871746 --->
	  a role_name "rmiServer" const_relation private
	    comment "--------------------------------------------------------------------
 Private variables
--------------------------------------------------------------------

@serial The RMIServer stub of the RMI JMX Connector server to
which this client connector is (or will be) connected. This
field can be null when <var>jmxServiceURL</var> is not
null. This includes the case where <var>jmxServiceURL</var>
contains a serialized RMIServer stub. If both
<var>rmiServer</var> and <var>jmxServiceURL</var> are null then
serialization will fail.

@see #RMIConnector(RMIServer,Map)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871746 // rmiServer (<unidirectional association>)
	  b parent class_ref 1205506 // RMIServer
      end

      classrelation 3871874 // jmxServiceURL (<unidirectional association>)
	relation 3871874 --->
	  a role_name "jmxServiceURL" const_relation private
	    comment "
@serial The JMXServiceURL of the RMI JMX Connector server to
which this client connector will be connected. This field can
be null when <var>rmiServer</var> is not null. If both
<var>rmiServer</var> and <var>jmxServiceURL</var> are null then
serialization will fail.

@see #RMIConnector(JMXServiceURL,Map)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3871874 // jmxServiceURL (<unidirectional association>)
	  b parent class_ref 506498 // JMXServiceURL
      end

      classrelation 3872002 // env (<unidirectional association>)
	relation 3872002 --->
	  a role_name "env" private
	    comment " ---------------------------------------------------------
 WARNING - WARNING - WARNING - WARNING - WARNING - WARNING
 ---------------------------------------------------------
 Any transient variable which needs to be initialized should
 be initialized in the method initTransient()
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 3872002 // env (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3872130 // defaultClassLoader (<unidirectional association>)
	relation 3872130 --->
	  a role_name "defaultClassLoader" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3872130 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3872258 // connection (<unidirectional association>)
	relation 3872258 --->
	  a role_name "connection" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3872258 // connection (<unidirectional association>)
	  b parent class_ref 1204226 // RMIConnection
      end

      classrelation 3872386 // connectionId (<unidirectional association>)
	relation 3872386 --->
	  a role_name "connectionId" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3872386 // connectionId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2304898 "clientNotifSeqNo"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3872514 // rmbscMap (<unidirectional association>)
	relation 3872514 --->
	  a role_name "rmbscMap" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Subject, WeakReference<MBeanServerConnection>> ${name}${value};
"
	    classrelation_ref 3872514 // rmbscMap (<unidirectional association>)
	  b parent class_ref 192002 // WeakHashMap
      end

      classrelation 3872642 // nullSubjectConnRef (<unidirectional association>)
	relation 3872642 --->
	  a role_name "nullSubjectConnRef" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<MBeanServerConnection> ${name}${value};
"
	    classrelation_ref 3872642 // nullSubjectConnRef (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      classrelation 3872770 // rmiNotifClient (<unidirectional association>)
	relation 3872770 --->
	  a role_name "rmiNotifClient" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3872770 // rmiNotifClient (<unidirectional association>)
	  b parent class_ref 1205762 // RMINotifClient
      end

      attribute 2305026 "clientNotifCounter"
	private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " = new RMINotifClient(new Integer(0));
"
      end

      attribute 2305154 "connected"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2305282 "terminated"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " = false;
"
      end

      classrelation 3872898 // closeException (<unidirectional association>)
	relation 3872898 --->
	  a role_name "closeException" private
	    comment " = false;
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3872898 // closeException (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      classrelation 3873026 // connectionBroadcaster (<unidirectional association>)
	relation 3873026 --->
	  a role_name "connectionBroadcaster" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873026 // connectionBroadcaster (<unidirectional association>)
	  b parent class_ref 497922 // NotificationBroadcasterSupport
      end

      classrelation 3873154 // communicatorAdmin (<unidirectional association>)
	relation 3873154 --->
	  a role_name "communicatorAdmin" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873154 // communicatorAdmin (<unidirectional association>)
	  b parent class_ref 502658 // ClientCommunicatorAdmin
      end

      classrelation 3873282 // orb (<unidirectional association>)
	relation 3873282 --->
	  a role_name "orb" init_value " null" class_relation volatile private
	    comment "
A static WeakReference to an {@link org.omg.CORBA.ORB ORB} to
connect unconnected stubs.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 3873282 // orb (<unidirectional association>)
	  b parent class_ref 131330 // WeakReference
      end

      operation 9977730 "objects"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "objs" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TRACES & DEBUG
---------------"
      end

      operation 9977858 "strings"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "strs" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9977986 "getAttributesNames"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param inout name "attributes" type class_ref 486658 // AttributeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1205506 "RMIServer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>RMI object used to establish connections to an RMI connector.
There is one Remote object implementing this interface for each RMI
connector.</p>

<p>User code does not usually refer to this interface.  It is
specified as part of the public API so that different
implementations of that API will interoperate.</p>

@since 1.5
"
      classrelation 3874946 // <generalisation>
	relation 3874946 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3874946 // <generalisation>
	  b parent class_ref 207106 // Remote
      end

      operation 9981314 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 207234 // RemoteException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>The version of the RMI Connector Protocol understood by this
connector server.  This is a string with the following format:</p>

<pre>
<em>protocol-version</em> <em>implementation-name</em>
</pre>

<p>The <code><em>protocol-version</em></code> is a series of
two or more non-negative integers separated by periods
(<code>.</code>).  An implementation of the version described
by this documentation must use the string <code>1.0</code>
here.</p>

<p>After the protocol version there must be a space, followed
by the implementation name.  The format of the implementation
name is unspecified.  It is recommended that it include an
implementation version number.  An implementation can use an
empty string as its implementation name, for example for
security reasons.</p>

@return a string with the format described here.

@exception RemoteException if there is a communication
exception during the remote method call.
"
      end

      operation 9981442 "newClient"
	public return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "credentials" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes a new connection through this RMI connector.  Each
remote client calls this method to obtain a new RMI object
representing its connection.</p>

@param credentials this object specifies the user-defined credentials
to be passed in to the server in order to authenticate the user before
creating the <code>RMIConnection</code>.  Can be null.

@return the newly-created connection object.

@exception IOException if the new client object cannot be
created or exported, or if there is a communication exception
during the remote method call.

@exception SecurityException if the given credentials do not
allow the server to authenticate the caller successfully.
"
      end
    end

    class 1206146 "RMIConnectorServer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>A JMX API connector server that creates RMI-based connections
from remote clients.  Usually, such connector servers are made
using {@link javax.management.remote.JMXConnectorServerFactory
JMXConnectorServerFactory}.  However, specialized applications can
use this class directly, for example with an {@link RMIServerImpl}
object.</p>

@since 1.5
"
      classrelation 3873410 // <generalisation>
	relation 3873410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3873410 // <generalisation>
	  b parent class_ref 507138 // JMXConnectorServer
      end

      classrelation 3873538 // JNDI_REBIND_ATTRIBUTE (<unidirectional association>)
	relation 3873538 --->
	  a role_name "JNDI_REBIND_ATTRIBUTE" init_value "
        \"jmx.remote.jndi.rebind\"" class_relation const_relation public
	    comment "
<p>Name of the attribute that specifies whether the {@link
RMIServer} stub that represents an RMI connector server should
override an existing stub at the same address.  The value
associated with this attribute, if any, should be a string that
is equal, ignoring case, to <code>\"true\"</code> or
<code>\"false\"</code>.  The default value is false.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873538 // JNDI_REBIND_ATTRIBUTE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3873666 // RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE (<unidirectional association>)
	relation 3873666 --->
	  a role_name "RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE" init_value "
        \"jmx.remote.rmi.client.socket.factory\"" class_relation const_relation public
	    comment "
<p>Name of the attribute that specifies the {@link
RMIClientSocketFactory} for the RMI objects created in
conjunction with this connector. The value associated with this
attribute must be of type <code>RMIClientSocketFactory</code> and can
only be specified in the <code>Map</code> argument supplied when
creating a connector server.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873666 // RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3873794 // RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE (<unidirectional association>)
	relation 3873794 --->
	  a role_name "RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE" init_value "
        \"jmx.remote.rmi.server.socket.factory\"" class_relation const_relation public
	    comment "
<p>Name of the attribute that specifies the {@link
RMIServerSocketFactory} for the RMI objects created in
conjunction with this connector. The value associated with this
attribute must be of type <code>RMIServerSocketFactory</code> and can
only be specified in the <code>Map</code> argument supplied when
creating a connector server.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873794 // RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 9978114 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 2
	  param inout name "url" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code>.
This is equivalent to calling {@link #RMIConnectorServer(
JMXServiceURL,Map,RMIServerImpl,MBeanServer)
RMIConnectorServer(directoryURL,environment,null,null)}</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"iiop\"
are valid when this constructor is used.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail.
"
      end

      operation 9978242 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 3
	  param inout name "url" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	  param inout name "mbeanServer" type class_ref 485122 // MBeanServer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code> for the given MBean
server.
This is equivalent to calling {@link #RMIConnectorServer(
JMXServiceURL,Map,RMIServerImpl,MBeanServer)
RMIConnectorServer(directoryURL,environment,null,mbeanServer)}</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@param mbeanServer the MBean server to which the new connector
server is attached, or null if it will be attached by being
registered as an MBean in the MBean server.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"iiop\"
are valid when this constructor is used.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail.
"
      end

      operation 9978370 "RMIConnectorServer"
	public explicit_return_type ""
	nparams 4
	  param inout name "url" type class_ref 506498 // JMXServiceURL
	  param inout name "environment" type class_ref 130178 // Map
	  param inout name "rmiServerImpl" type class_ref 1204482 // RMIServerImpl
	  param inout name "mbeanServer" type class_ref 485122 // MBeanServer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String,?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Makes an <code>RMIConnectorServer</code> for the given MBean
server.</p>

@param url the URL defining how to create the connector server.
Cannot be null.

@param environment attributes governing the creation and
storing of the RMI object.  Can be null, which is equivalent to
an empty Map.

@param rmiServerImpl An implementation of the RMIServer interface,
 consistent with the protocol type specified in <var>url</var>.
 If this parameter is non null, the protocol type specified by
 <var>url</var> is not constrained, and is assumed to be valid.
 Otherwise, only \"rmi\" and \"iiop\" will be recognized.

@param mbeanServer the MBean server to which the new connector
server is attached, or null if it will be attached by being
registered as an MBean in the MBean server.

@exception IllegalArgumentException if <code>url</code> is null.

@exception MalformedURLException if <code>url</code> does not
conform to the syntax for an RMI connector, or if its protocol
is not recognized by this implementation. Only \"rmi\" and \"iiop\"
are recognized when <var>rmiServerImpl</var> is null.

@exception IOException if the connector server cannot be created
for some reason or if it is inevitable that its {@link #start()
start} method will fail.

@see #start
"
      end

      operation 9978498 "toJMXConnector"
	public return_type class_ref 506370 // JMXConnector
	nparams 1
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a client stub for this connector server.  A client
stub is a serializable object whose {@link
JMXConnector#connect(Map) connect} method can be used to make
one new connection to this connector server.</p>

@param env client connection parameters of the same sort that
could be provided to {@link JMXConnector#connect(Map)
JMXConnector.connect(Map)}.  Can be null, which is equivalent
to an empty map.

@return a client stub that can be used to make a new connection
to this connector server.

@exception UnsupportedOperationException if this connector
server does not support the generation of client stubs.

@exception IllegalStateException if the JMXConnectorServer is
not started (see {@link #isActive()}).

@exception IOException if a communications problem means that a
stub cannot be created.
"
      end

      operation 9978626 "start"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Activates the connector server, that is starts listening for
client connections.  Calling this method when the connector
server is already active has no effect.  Calling this method
when the connector server has been stopped will generate an
<code>IOException</code>.</p>

<p>The behavior of this method when called for the first time
depends on the parameters that were supplied at construction,
as described below.</p>

<p>First, an object of a subclass of {@link RMIServerImpl} is
required, to export the connector server through RMI:</p>

<ul>

<li>If an <code>RMIServerImpl</code> was supplied to the
constructor, it is used.

<li>Otherwise, if the protocol part of the
<code>JMXServiceURL</code> supplied to the constructor was
<code>iiop</code>, an object of type {@link RMIIIOPServerImpl}
is created.

<li>Otherwise, if the <code>JMXServiceURL</code>
was null, or its protocol part was <code>rmi</code>, an object
of type {@link RMIJRMPServerImpl} is created.

<li>Otherwise, the implementation can create an
implementation-specific {@link RMIServerImpl} or it can throw
{@link MalformedURLException}.

</ul>

<p>If the given address includes a JNDI directory URL as
specified in the package documentation for {@link
javax.management.remote.rmi}, then this
<code>RMIConnectorServer</code> will bootstrap by binding the
<code>RMIServerImpl</code> to the given address.</p>

<p>If the URL path part of the <code>JMXServiceURL</code> was
empty or a single slash (<code>/</code>), then the RMI object
will not be bound to a directory.  Instead, a reference to it
will be encoded in the URL path of the RMIConnectorServer
address (returned by {@link #getAddress()}).  The encodings for
<code>rmi</code> and <code>iiop</code> are described in the
package documentation for {@link
javax.management.remote.rmi}.</p>

<p>The behavior when the URL path is neither empty nor a JNDI
directory URL, or when the protocol is neither <code>rmi</code>
nor <code>iiop</code>, is implementation defined, and may
include throwing {@link MalformedURLException} when the
connector server is created or when it is started.</p>

@exception IllegalStateException if the connector server has
not been attached to an MBean server.
@exception IOException if the connector server cannot be
started, or in the case of the {@code iiop} protocol, that
RMI/IIOP is not supported.
"
      end

      operation 9978754 "stop"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Deactivates the connector server, that is, stops listening for
client connections.  Calling this method will also close all
client connections that were made by this server.  After this
method returns, whether normally or with an exception, the
connector server will not create any new client
connections.</p>

<p>Once a connector server has been stopped, it cannot be started
again.</p>

<p>Calling this method when the connector server has already
been stopped has no effect.  Calling this method when the
connector server has not yet been started will disable the
connector server object permanently.</p>

<p>If closing a client connection produces an exception, that
exception is not thrown from this method.  A {@link
JMXConnectionNotification} is emitted from this MBean with the
connection ID of the connection that could not be closed.</p>

<p>Closing a connector server is a potentially slow operation.
For example, if a client machine with an open connection has
crashed, the close operation might have to wait for a network
protocol timeout.  Callers that do not want to block in a close
operation should do it in a separate thread.</p>

<p>This method calls the method {@link RMIServerImpl#close()
close} on the connector server's <code>RMIServerImpl</code>
object.</p>

<p>If the <code>RMIServerImpl</code> was bound to a JNDI
directory by the {@link #start() start} method, it is unbound
from the directory by this method.</p>

@exception IOException if the server cannot be closed cleanly,
or if the <code>RMIServerImpl</code> cannot be unbound from the
directory.  When this exception is thrown, the server has
already attempted to close all client connections, if
appropriate; to call {@link RMIServerImpl#close()}; and to
unbind the <code>RMIServerImpl</code> from its directory, if
appropriate.  All client connections are closed except possibly
those that generated exceptions when the server attempted to
close them.
"
      end

      operation 9978882 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9979010 "getAddress"
	public return_type class_ref 506498 // JMXServiceURL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9979138 "getAttributes"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9979266 "setMBeanServerForwarder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mbsf" type class_ref 510850 // MBeanServerForwarder
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9979394 "connectionOpened"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " We repeat the definitions of connection{Opened,Closed,Failed}
here so that they are accessible to other classes in this package
even though they have protected access.  "
      end

      operation 9979522 "connectionClosed"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9979650 "connectionFailed"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "userData" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9979778 "bind"
	package explicit_return_type "void"
	nparams 4
	  param inout name "jndiUrl" type class_ref 128130 // String
	  param inout name "attributes" type class_ref 137090 // Hashtable
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "rebind" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 262146 // NamingException
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?, ?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bind a stub to a registry.
@param jndiUrl URL of the stub in the registry, extracted
       from the <code>JMXServiceURL</code>.
@param attributes A Hashtable containing environment parameters,
       built from the Map specified at this object creation.
@param rmiServer The object to bind in the registry
@param rebind true if the object must be rebound.
"
      end

      operation 9979906 "newServer"
	package return_type class_ref 1204482 // RMIServerImpl
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RMIServerImpl.
"
      end

      operation 9980034 "encodeStubInAddress"
	private explicit_return_type "void"
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "attributes" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encode a stub into the JMXServiceURL.
@param rmiServer The stub object to encode in the URL
@param attributes A Map containing environment parameters,
       built from the Map specified at this object creation.
"
      end

      operation 9980162 "isIiopURL"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "directoryURL" type class_ref 506498 // JMXServiceURL
	  param inout name "strict" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9980290 "encodeStub"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the IOR of the given rmiServer.
"
      end

      operation 9980418 "encodeJRMPStub"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9980546 "encodeIIOPStub"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param inout name "rmiServer" type class_ref 1205506 // RMIServer
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9980674 "objectToBind"
	class_operation private return_type class_ref 1205506 // RMIServer
	nparams 2
	  param inout name "rmiServer" type class_ref 1204482 // RMIServerImpl
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Object that we will bind to the registry.
This object is a stub connected to our RMIServerImpl.
"
      end

      operation 9980802 "newJRMPServer"
	class_operation private return_type class_ref 1204482 // RMIServerImpl
	nparams 2
	  param inout name "env" type class_ref 130178 // Map
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, ?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9980930 "newIIOPServer"
	class_operation private return_type class_ref 1204482 // RMIServerImpl
	nparams 1
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9981058 "byteArrayToBase64"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "a" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2305410 "intToAlpha"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This array is a lookup table that translates 6-bit positive integer
index values into their \"Base64 Alphabet\" equivalents as specified
in Table 1 of RFC 2045.

"
      end

      operation 9981186 "newIOException"
	class_operation private return_type class_ref 146818 // IOException
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new IOException with a nested exception.
The nested exception is set only if JDK {@literal >= 1.4}
"
      end

      classrelation 3873922 // logger (<unidirectional association>)
	relation 3873922 --->
	  a role_name "logger" init_value "
        new ClassLogger(\"javax.management.remote.rmi\", \"RMIConnectorServer\")" class_relation private
	    comment " Private variables
 -----------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3873922 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      classrelation 3874050 // address (<unidirectional association>)
	relation 3874050 --->
	  a role_name "address" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3874050 // address (<unidirectional association>)
	  b parent class_ref 506498 // JMXServiceURL
      end

      classrelation 3874178 // rmiServerImpl (<unidirectional association>)
	relation 3874178 --->
	  a role_name "rmiServerImpl" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3874178 // rmiServerImpl (<unidirectional association>)
	  b parent class_ref 1204482 // RMIServerImpl
      end

      classrelation 3874306 // attributes (<unidirectional association>)
	relation 3874306 --->
	  a role_name "attributes" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 3874306 // attributes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3874434 // defaultClassLoader (<unidirectional association>)
	relation 3874434 --->
	  a role_name "defaultClassLoader" init_value " null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3874434 // defaultClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3874562 // boundJndiUrl (<unidirectional association>)
	relation 3874562 --->
	  a role_name "boundJndiUrl" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3874562 // boundJndiUrl (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2305538 "CREATED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " state
"
      end

      attribute 2305666 "STARTED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2305794 "STOPPED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2305922 "state"
	private explicit_type "int"
	init_value " CREATED"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3874690 // openedServers (<unidirectional association>)
	relation 3874690 --->
	  a role_name "openedServers" init_value "
            new HashSet<RMIConnectorServer>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RMIConnectorServer> ${name}${value};
"
	    classrelation_ref 3874690 // openedServers (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end
    end

    class 1206274 "RMIIIOPServerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An {@link RMIServerImpl} that is exported through IIOP and that
creates client connections as RMI objects exported through IIOP.
User code does not usually reference this class directly.</p>

@see RMIServerImpl

@since 1.5
"
      classrelation 3876098 // <generalisation>
	relation 3876098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3876098 // <generalisation>
	  b parent class_ref 1204482 // RMIServerImpl
      end

      operation 9984130 "RMIIIOPServerImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link RMIServerImpl}.</p>

@param env the environment containing attributes for the new
<code>RMIServerImpl</code>.  Can be null, which is equivalent
to an empty Map.

@exception IOException if the RMI object cannot be created.
"
      end

      operation 9984258 "export"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9984386 "getProtocol"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9984514 "toStub"
	public return_type class_ref 207106 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns an IIOP stub.</p>
The stub might not yet be connected to the ORB. The stub will
be serializable only if it is connected to the ORB.
@return an IIOP stub.
@exception IOException if the stub cannot be created - e.g the
           RMIIIOPServerImpl has not been exported yet.
"
      end

      operation 9984642 "makeClient"
	protected return_type class_ref 1204226 // RMIConnection
	nparams 2
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection as an RMI object exported
through IIOP.

@param connectionId the ID of the new connection.  Every
connection opened by this connector server will have a
different ID.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new client object cannot be
created or exported.
"
      end

      operation 9984770 "closeClient"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1204226 // RMIConnection
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9984898 "closeServer"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server by
unexporting this object.  After returning from this method, the
connector server must not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed.
"
      end

      operation 9985026 "doNewClient"
	package return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param in name "credentials" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9985154 "superDoNewClient"
	package return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "credentials" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3876226 // env (<unidirectional association>)
	relation 3876226 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 3876226 // env (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3876354 // callerACC (<unidirectional association>)
	relation 3876354 --->
	  a role_name "callerACC" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3876354 // callerACC (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end
    end

    class 1206402 "RMIJRMPServerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An {@link RMIServer} object that is exported through JRMP and that
creates client connections as RMI objects exported through JRMP.
User code does not usually reference this class directly.</p>

@see RMIServerImpl

@since 1.5
"
      classrelation 3876482 // <generalisation>
	relation 3876482 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3876482 // <generalisation>
	  b parent class_ref 1204482 // RMIServerImpl
      end

      class 1206530 "ExportedWrapper"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3877122 // <realization>
	  relation 3877122 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3877122 // <realization>
	    b parent class_ref 1205506 // RMIServer
	end

	classrelation 3877378 // impl (<unidirectional association>)
	  relation 3877378 --->
	    a role_name "impl" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3877378 // impl (<unidirectional association>)
	    b parent class_ref 1205506 // RMIServer
	end

	classrelation 3877506 // allowedTypes (<unidirectional association>)
	  relation 3877506 --->
	    a role_name "allowedTypes" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 3877506 // allowedTypes (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	operation 9986434 "ExportedWrapper"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "impl" type class_ref 1205506 // RMIServer
	    param inout name "credentialsTypes" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9986562 "getVersion"
	  public return_type class_ref 128130 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 207234 // RemoteException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 9986690 "newClient"
	  public return_type class_ref 1204226 // RMIConnection
	  nparams 1
	    param inout name "credentials" type class_ref 129538 // Object
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 9986818 "check"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "method" type class_ref 137858 // Method
	    param inout name "descriptor" type class_ref 170242 // ObjectStreamClass
	    param in name "paramIndex" explicit_type "int"
	    param in name "callID" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 9986946 "checkProxyClass"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "method" type class_ref 137858 // Method
	    param inout name "ifaces" type class_ref 128130 // String
	  multiplicity "[]"
	    param in name "paramIndex" explicit_type "int"
	    param in name "callID" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3876610 // exportedWrapper (<unidirectional association>)
	relation 3876610 --->
	  a role_name "exportedWrapper" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3876610 // exportedWrapper (<unidirectional association>)
	  b parent class_ref 1206530 // ExportedWrapper
      end

      operation 9985282 "RMIJRMPServerImpl"
	public explicit_return_type ""
	nparams 4
	  param in name "port" explicit_type "int"
	  param inout name "csf" type class_ref 504834 // RMIClientSocketFactory
	  param inout name "ssf" type class_ref 504962 // RMIServerSocketFactory
	  param inout name "env" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String,?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new {@link RMIServer} object that will be exported
on the given port using the given socket factories.</p>

@param port the port on which this object and the {@link
RMIConnectionImpl} objects it creates will be exported.  Can be
zero, to indicate any available port.

@param csf the client socket factory for the created RMI
objects.  Can be null.

@param ssf the server socket factory for the created RMI
objects.  Can be null.

@param env the environment map.  Can be null.

@exception IOException if the {@link RMIServer} object
cannot be created.

@exception IllegalArgumentException if <code>port</code> is
negative.
"
      end

      operation 9985410 "export"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9985538 "export"
	private explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 207106 // Remote
	nexceptions 1
	  exception class_ref 207234 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9985666 "unexport"
	private explicit_return_type "void"
	nparams 2
	  param inout name "obj" type class_ref 207106 // Remote
	  param inout name "force" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 207362 // NoSuchObjectException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9985794 "getProtocol"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9985922 "toStub"
	public return_type class_ref 207106 // Remote
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a serializable stub for this {@link RMIServer} object.</p>

@return a serializable stub.

@exception IOException if the stub cannot be obtained - e.g the
           RMIJRMPServerImpl has not been exported yet.
"
      end

      operation 9986050 "makeClient"
	protected return_type class_ref 1204226 // RMIConnection
	nparams 2
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new client connection as an RMI object exported
through JRMP. The port and socket factories for the new
{@link RMIConnection} object are the ones supplied
to the <code>RMIJRMPServerImpl</code> constructor.</p>

@param connectionId the ID of the new connection. Every
connection opened by this connector server will have a
different id.  The behavior is unspecified if this parameter is
null.

@param subject the authenticated subject.  Can be null.

@return the newly-created <code>RMIConnection</code>.

@exception IOException if the new {@link RMIConnection}
object cannot be created or exported.
"
      end

      operation 9986178 "closeClient"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 1204226 // RMIConnection
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9986306 "closeServer"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called by {@link #close()} to close the connector server by
unexporting this object.  After returning from this method, the
connector server must not accept any new connections.</p>

@exception IOException if the attempt to close the connector
server failed.
"
      end

      attribute 2306178 "port"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3876738 // csf (<unidirectional association>)
	relation 3876738 --->
	  a role_name "csf" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3876738 // csf (<unidirectional association>)
	  b parent class_ref 504834 // RMIClientSocketFactory
      end

      classrelation 3876866 // ssf (<unidirectional association>)
	relation 3876866 --->
	  a role_name "ssf" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3876866 // ssf (<unidirectional association>)
	  b parent class_ref 504962 // RMIServerSocketFactory
      end

      classrelation 3876994 // env (<unidirectional association>)
	relation 3876994 --->
	  a role_name "env" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 3876994 // env (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end
    end

    class 1206786 "RMIServerImpl_Stub"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3877634 // <generalisation>
	relation 3877634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3877634 // <generalisation>
	  b parent class_ref 1009026 // RemoteStub
      end

      classrelation 3877762 // <realization>
	relation 3877762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3877762 // <realization>
	  b parent class_ref 1205506 // RMIServer
      end

      attribute 2306306 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3877890 // $method_getVersion_0 (<unidirectional association>)
	relation 3877890 --->
	  a role_name "$method_getVersion_0" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3877890 // $method_getVersion_0 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      classrelation 3878018 // $method_newClient_1 (<unidirectional association>)
	relation 3878018 --->
	  a role_name "$method_newClient_1" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878018 // $method_newClient_1 (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      extra_member 183298 "initialization"
	
	cpp "" ""
	java "  static {
	try {
	    $method_getVersion_0 = javax.management.remote.rmi.RMIServer.class.getMethod(\"getVersion\", new java.lang.Class[] {});
	    $method_newClient_1 = javax.management.remote.rmi.RMIServer.class.getMethod(\"newClient\", new java.lang.Class[] {java.lang.Object.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		\"stub class initialization failed\");
	}
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 9987074 "RMIServerImpl_Stub"
	public explicit_return_type ""
	nparams 1
	  param inout name "ref" type class_ref 504194 // RemoteRef
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " constructors"
      end

      operation 9987202 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 207234 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " methods from remote interfaces
 implementation of getVersion()"
      end

      operation 9987330 "newClient"
	public return_type class_ref 1204226 // RMIConnection
	nparams 1
	  param inout name "$param_Object_1" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implementation of newClient(Object)"
      end
    end
  end

  deploymentview 173314 "rmi"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 870658 "NoCallStackClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.ProtectionDomain;
${definition}"
      associated_elems
	class_ref 1204098 // NoCallStackClassLoader
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 870786 "RMIConnection"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Closeable;
import java.io.IOException;
import java.rmi.MarshalledObject;
import java.rmi.Remote;
import java.util.Set;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServerConnection;
import javax.management.NotCompliantMBeanException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.RuntimeMBeanException;
import javax.management.RuntimeOperationsException;
import javax.management.remote.NotificationResult;
import javax.security.auth.Subject;
${definition}"
      associated_elems
	class_ref 1204226 // RMIConnection
      end
      comment "Copyright (c) 2002, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 870914 "RMIConnectionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.MarshalledObject;
import java.rmi.UnmarshalException;
import java.rmi.server.Unreferenced;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.Permission;
import java.security.Permissions;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.security.ProtectionDomain;
import java.util.Arrays;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import javax.management.*;
import javax.management.remote.JMXServerErrorException;
import javax.management.remote.NotificationResult;
import javax.management.remote.TargetedNotification;
import javax.security.auth.Subject;
import sun.reflect.misc.ReflectUtil;
import com.sun.jmx.remote.internal.ServerCommunicatorAdmin;
import com.sun.jmx.remote.internal.ServerNotifForwarder;
import com.sun.jmx.remote.security.JMXSubjectDomainCombiner;
import com.sun.jmx.remote.security.SubjectDelegator;
import com.sun.jmx.remote.util.ClassLoaderWithRepository;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import com.sun.jmx.remote.util.OrderClassLoaders;
import javax.management.loading.ClassLoaderRepository;
import static com.sun.jmx.mbeanserver.Util.cast;
${definition}"
      associated_elems
	class_ref 1204354 // RMIConnectionImpl
      end
      comment "Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871042 "RMIConnectionImpl_Stub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1205250 // RMIConnectionImpl_Stub
      end
      comment " Stub class generated by rmic, do not edit.
 Contents subject to change without notice."
    end

    artifact 871170 "RMIConnector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.Util;
import com.sun.jmx.remote.internal.ClientCommunicatorAdmin;
import com.sun.jmx.remote.internal.ClientListenerInfo;
import com.sun.jmx.remote.internal.ClientNotifForwarder;
import com.sun.jmx.remote.internal.ProxyRef;
import com.sun.jmx.remote.internal.IIOPHelper;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InvalidObjectException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectStreamClass;
import java.io.Serializable;
import java.lang.ref.WeakReference;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Proxy;
import java.net.MalformedURLException;
import java.rmi.MarshalException;
import java.rmi.MarshalledObject;
import java.rmi.NoSuchObjectException;
import java.rmi.Remote;
import java.rmi.ServerException;
import java.rmi.UnmarshalException;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RemoteObject;
import java.rmi.server.RemoteObjectInvocationHandler;
import java.rmi.server.RemoteRef;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.PrivilegedActionException;
import java.security.ProtectionDomain;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.WeakHashMap;
import java.util.stream.Collectors;
import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServerConnection;
import javax.management.MBeanServerDelegate;
import javax.management.MBeanServerNotification;
import javax.management.NotCompliantMBeanException;
import javax.management.Notification;
import javax.management.NotificationBroadcasterSupport;
import javax.management.NotificationFilter;
import javax.management.NotificationFilterSupport;
import javax.management.NotificationListener;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.remote.JMXConnectionNotification;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;
import javax.management.remote.NotificationResult;
import javax.management.remote.JMXAddressable;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.rmi.ssl.SslRMIClientSocketFactory;
import javax.security.auth.Subject;
import sun.reflect.misc.ReflectUtil;
import sun.rmi.server.UnicastRef2;
import sun.rmi.transport.LiveRef;
${definition}"
      associated_elems
	class_ref 1205378 // RMIConnector
      end
      comment "Copyright (c) 2002, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871298 "RMIConnectorServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.remote.security.MBeanServerFileAccessController;
import com.sun.jmx.remote.internal.IIOPHelper;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.MalformedURLException;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Map;
import java.util.Set;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanServer;
import javax.management.remote.JMXConnectionNotification;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorServer;
import javax.management.remote.JMXServiceURL;
import javax.management.remote.MBeanServerForwarder;
import javax.naming.InitialContext;
import javax.naming.NamingException;
${definition}"
      associated_elems
	class_ref 1206146 // RMIConnectorServer
      end
      comment "Copyright (c) 2002, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871426 "RMIServer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.Remote;
import java.rmi.RemoteException;
${definition}"
      associated_elems
	class_ref 1205506 // RMIServer
      end
      comment "Copyright (c) 2002, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871554 "RMIServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.remote.internal.ArrayNotificationBuffer;
import com.sun.jmx.remote.internal.NotificationBuffer;
import com.sun.jmx.remote.security.JMXPluggableAuthenticator;
import com.sun.jmx.remote.util.ClassLogger;
import java.io.Closeable;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.rmi.Remote;
import java.rmi.server.RemoteServer;
import java.rmi.server.ServerNotActiveException;
import java.security.Principal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.management.MBeanServer;
import javax.management.remote.JMXAuthenticator;
import javax.management.remote.JMXConnectorServer;
import javax.security.auth.Subject;
${definition}"
      associated_elems
	class_ref 1204482 // RMIServerImpl
      end
      comment "Copyright (c) 2002, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871682 "RMIIIOPServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.Remote;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Map;
import java.util.Collections;
import javax.security.auth.Subject;
import com.sun.jmx.remote.internal.IIOPHelper;
${definition}"
      associated_elems
	class_ref 1206274 // RMIIIOPServerImpl
      end
      comment "Copyright (c) 2003, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871810 "RMIJRMPServerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.rmi.NoSuchObjectException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.rmi.server.UnicastRemoteObject;
import java.rmi.server.RemoteObject;
import java.util.Map;
import java.util.Collections;
import javax.security.auth.Subject;
import com.sun.jmx.remote.internal.RMIExporter;
import com.sun.jmx.remote.util.EnvHelp;
import java.io.ObjectStreamClass;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import sun.reflect.misc.ReflectUtil;
import sun.rmi.server.DeserializationChecker;
import sun.rmi.server.UnicastServerRef;
import sun.rmi.server.UnicastServerRef2;
${definition}"
      associated_elems
	class_ref 1206402 // RMIJRMPServerImpl
      end
      comment "Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 871938 "RMIServerImpl_Stub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1206786 // RMIServerImpl_Stub
      end
      comment " Stub class generated by rmic, do not edit.
 Contents subject to change without notice."
    end
  end
end
