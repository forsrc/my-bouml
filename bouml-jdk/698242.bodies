class CharArrayTarget
!!!4612354.java!!!	CharArrayTarget(inout target : char [[]])
            this.target = target;
!!!4612482.java!!!	resetTarget(inout target : char [[]]) : void
            this.target = target;
!!!4612610.java!!!	charAt(in index : int) : char
            return target[index];
!!!4612738.java!!!	regionMatches(inout ignoreCase : boolean, in offset : int, in limit : int, inout part : String, in partlen : int) : boolean
            if (offset < 0 || limit-offset < partlen)  {
                return false;
            }
            return (ignoreCase) ? regionMatchesIgnoreCase(offset, limit, part, partlen)
                                : regionMatches(offset, limit, part, partlen);
!!!4612866.java!!!	regionMatches(in offset : int, in limit : int, inout part : String, in partlen : int) : boolean
            int i = 0;
            while (partlen-- > 0) {
                if (target[offset++] != part.charAt(i++)) {
                    return false;
                }
            }
            return true;
!!!4612994.java!!!	regionMatchesIgnoreCase(in offset : int, in limit : int, inout part : String, in partlen : int) : boolean
            int i = 0;
            while (partlen-- > 0) {
                final char ch1 = target[offset++] ;
                final char ch2 = part.charAt(i++);
                if (ch1 == ch2) {
                    continue;
                }
                final char uch1 = Character.toUpperCase(ch1);
                final char uch2 = Character.toUpperCase(ch2);
                if (uch1 == uch2) {
                    continue;
                }
                if (Character.toLowerCase(uch1) != Character.toLowerCase(uch2)) {
                    return false;
                }
            }
            return true;
!!!4613122.java!!!	regionMatches(inout ignoreCase : boolean, in offset : int, in limit : int, in offset2 : int, in partlen : int) : boolean
            if (offset < 0 || limit-offset < partlen) {
                return false;
            }
            return (ignoreCase) ? regionMatchesIgnoreCase(offset, limit, offset2, partlen)
                                : regionMatches(offset, limit, offset2, partlen);
!!!4613250.java!!!	regionMatches(in offset : int, in limit : int, in offset2 : int, in partlen : int) : boolean
            int i = offset2;
            while (partlen-- > 0) {
                if ( target [  offset++ ]  !=  target [  i++ ] )
                    return false;
            }
            return true;
!!!4613378.java!!!	regionMatchesIgnoreCase(in offset : int, in limit : int, in offset2 : int, in partlen : int) : boolean
            int i = offset2;
            while (partlen-- > 0) {
                final char ch1 =  target[offset++] ;
                final char ch2 =  target[i++] ;
                if (ch1 == ch2) {
                    continue;
                }
                final char uch1 = Character.toUpperCase(ch1);
                final char uch2 = Character.toUpperCase(ch2);
                if (uch1 == uch2) {
                    continue;
                }
                if (Character.toLowerCase(uch1) != Character.toLowerCase(uch2)) {
                    return false;
                }
            }
            return true;
