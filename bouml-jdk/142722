format 222
"applet" // jdk1.8::java::applet
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/applet/"
  java_package "java.applet"
  classview 140034 "applet"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 240258 "Applet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An applet is a small program that is intended not to be run on
its own, but rather to be embedded inside another application.
<p>
The <code>Applet</code> class must be the superclass of any
applet that is to be embedded in a Web page or viewed by the Java
Applet Viewer. The <code>Applet</code> class provides a standard
interface between applets and their environment.

@author      Arthur van Hoff
@author      Chris Warth
@since       JDK1.0
"
      classrelation 2879362 // <generalisation>
	relation 2879362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2879362 // <generalisation>
	  b parent class_ref 855042 // Panel
      end

      operation 6064898 "Applet"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new Applet.
<p>
Note: Many methods in <code>java.applet.Applet</code>
may be invoked by the applet only after the applet is
fully constructed; applet should avoid calling methods
in <code>java.applet.Applet</code> in the constructor.

@exception HeadlessException if GraphicsEnvironment.isHeadless()
returns true.
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.4
"
      end

      classrelation 2879490 // stub (<unidirectional association>)
	relation 2879490 --->
	  a role_name "stub" private
	    comment "
Applets can be serialized but the following conventions MUST be followed:

Before Serialization:
An applet must be in STOPPED state.

After Deserialization:
The applet will be restored in STOPPED state (and most clients will
likely move it into RUNNING state).
The stub field will be restored by the reader.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2879490 // stub (<unidirectional association>)
	  b parent class_ref 855298 // AppletStub
      end

      attribute 1329154 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5836846270535785031L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " version ID for serialized form. 
"
      end

      operation 6065026 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 3
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an applet from an object input stream.
@exception HeadlessException if
<code>GraphicsEnvironment.isHeadless()</code> returns
<code>true</code>
@serial
@see java.awt.GraphicsEnvironment#isHeadless
@since 1.4
"
      end

      operation 6065154 "setStub"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stub" type class_ref 855298 // AppletStub
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this applet's stub. This is done automatically by the system.
<p>If there is a security manager, its <code> checkPermission </code>
method is called with the
<code>AWTPermission(\"setAppletStub\")</code>
permission if a stub has already been set.
@param   stub   the new stub.
@exception SecurityException if the caller cannot set the stub
"
      end

      operation 6065282 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this applet is active. An applet is marked active
just before its <code>start</code> method is called. It becomes
inactive just before its <code>stop</code> method is called.

@return  <code>true</code> if the applet is active;
         <code>false</code> otherwise.
@see     java.applet.Applet#start()
@see     java.applet.Applet#stop()
"
      end

      operation 6065410 "getDocumentBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the URL of the document in which this applet is embedded.
For example, suppose an applet is contained
within the document:
<blockquote><pre>
   http://www.oracle.com/technetwork/java/index.html
</pre></blockquote>
The document base is:
<blockquote><pre>
   http://www.oracle.com/technetwork/java/index.html
</pre></blockquote>

@return  the {@link java.net.URL} of the document that contains this
         applet.
@see     java.applet.Applet#getCodeBase()
"
      end

      operation 6065538 "getCodeBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the base URL. This is the URL of the directory which contains this applet.

@return  the base {@link java.net.URL} of
         the directory which contains this applet.
@see     java.applet.Applet#getDocumentBase()
"
      end

      operation 6065666 "getParameter"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named parameter in the HTML tag. For
example, if this applet is specified as
<blockquote><pre>
&lt;applet code=\"Clock\" width=50 height=50&gt;
&lt;param name=Color value=\"blue\"&gt;
&lt;/applet&gt;
</pre></blockquote>
<p>
then a call to <code>getParameter(\"Color\")</code> returns the
value <code>\"blue\"</code>.
<p>
The <code>name</code> argument is case insensitive.

@param   name   a parameter name.
@return  the value of the named parameter,
         or <code>null</code> if not set.
"
      end

      operation 6065794 "getAppletContext"
	public return_type class_ref 855426 // AppletContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines this applet's context, which allows the applet to
query and affect the environment in which it runs.
<p>
This environment of an applet represents the document that
contains the applet.

@return  the applet's context.
"
      end

      operation 6065922 "resize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Requests that this applet be resized.

@param   width    the new requested width for the applet.
@param   height   the new requested height for the applet.
"
      end

      operation 6066050 "resize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 316802 // Dimension
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Requests that this applet be resized.

@param   d   an object giving the new width and height.
"
      end

      operation 6066178 "isValidateRoot"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Indicates if this container is a validate root.
<p>
{@code Applet} objects are the validate roots, and, therefore, they
override this method to return {@code true}.

@return {@code true}
@since 1.7
@see java.awt.Container#isValidateRoot
"
      end

      operation 6066306 "showStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that the argument string be displayed in the
\"status window\". Many browsers and applet viewers
provide such a window, where the application can inform users of
its current state.

@param   msg   a string to display in the status window.
"
      end

      operation 6066434 "getImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Image</code> object that can then be painted on
the screen. The <code>url</code> that is passed as an argument
must specify an absolute URL.
<p>
This method always returns immediately, whether or not the image
exists. When this applet attempts to draw the image on the screen,
the data will be loaded. The graphics primitives that draw the
image will incrementally paint on the screen.

@param   url   an absolute URL giving the location of the image.
@return  the image at the specified URL.
@see     java.awt.Image
"
      end

      operation 6066562 "getImage"
	public return_type class_ref 340098 // Image
	nparams 2
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Image</code> object that can then be painted on
the screen. The <code>url</code> argument must specify an absolute
URL. The <code>name</code> argument is a specifier that is
relative to the <code>url</code> argument.
<p>
This method always returns immediately, whether or not the image
exists. When this applet attempts to draw the image on the screen,
the data will be loaded. The graphics primitives that draw the
image will incrementally paint on the screen.

@param   url    an absolute URL giving the base location of the image.
@param   name   the location of the image, relative to the
                <code>url</code> argument.
@return  the image at the specified URL.
@see     java.awt.Image
"
      end

      operation 6066690 "newAudioClip"
	class_operation public return_type class_ref 855554 // AudioClip
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an audio clip from the given URL.

@param url points to the audio clip
@return the audio clip at the specified URL.

@since       1.2
"
      end

      operation 6066818 "getAudioClip"
	public return_type class_ref 855554 // AudioClip
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>AudioClip</code> object specified by the
<code>URL</code> argument.
<p>
This method always returns immediately, whether or not the audio
clip exists. When this applet attempts to play the audio clip, the
data will be loaded.

@param   url  an absolute URL giving the location of the audio clip.
@return  the audio clip at the specified URL.
@see     java.applet.AudioClip
"
      end

      operation 6066946 "getAudioClip"
	public return_type class_ref 855554 // AudioClip
	nparams 2
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>AudioClip</code> object specified by the
<code>URL</code> and <code>name</code> arguments.
<p>
This method always returns immediately, whether or not the audio
clip exists. When this applet attempts to play the audio clip, the
data will be loaded.

@param   url    an absolute URL giving the base location of the
                audio clip.
@param   name   the location of the audio clip, relative to the
                <code>url</code> argument.
@return  the audio clip at the specified URL.
@see     java.applet.AudioClip
"
      end

      operation 6067074 "getAppletInfo"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns information about this applet. An applet should override
this method to return a <code>String</code> containing information
about the author, version, and copyright of the applet.
<p>
The implementation of this method provided by the
<code>Applet</code> class returns <code>null</code>.

@return  a string containing information about the author, version, and
         copyright of the applet.
"
      end

      operation 6067202 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locale of the applet. It allows the applet
to maintain its own locale separated from the locale
of the browser or appletviewer.

@return  the locale of the applet; if no locale has
         been set, the default locale is returned.
@since   JDK1.1
"
      end

      operation 6067330 "getParameterInfo"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns information about the parameters that are understood by
this applet. An applet should override this method to return an
array of <code>Strings</code> describing these parameters.
<p>
Each element of the array should be a set of three
<code>Strings</code> containing the name, the type, and a
description. For example:
<blockquote><pre>
String pinfo[][] = {
  {\"fps\",    \"1-10\",    \"frames per second\"},
  {\"repeat\", \"boolean\", \"repeat image loop\"},
  {\"imgs\",   \"url\",     \"images directory\"}
};
</pre></blockquote>
<p>
The implementation of this method provided by the
<code>Applet</code> class returns <code>null</code>.

@return  an array describing the parameters this applet looks for.
"
      end

      operation 6067458 "play"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Plays the audio clip at the specified absolute URL. Nothing
happens if the audio clip cannot be found.

@param   url   an absolute URL giving the location of the audio clip.
"
      end

      operation 6067586 "play"
	public explicit_return_type "void"
	nparams 2
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Plays the audio clip given the URL and a specifier that is
relative to it. Nothing happens if the audio clip cannot be found.

@param   url    an absolute URL giving the base location of the
                audio clip.
@param   name   the location of the audio clip, relative to the
                <code>url</code> argument.
"
      end

      operation 6067714 "init"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the browser or applet viewer to inform
this applet that it has been loaded into the system. It is always
called before the first time that the <code>start</code> method is
called.
<p>
A subclass of <code>Applet</code> should override this method if
it has initialization to perform. For example, an applet with
threads would use the <code>init</code> method to create the
threads and the <code>destroy</code> method to kill them.
<p>
The implementation of this method provided by the
<code>Applet</code> class does nothing.

@see     java.applet.Applet#destroy()
@see     java.applet.Applet#start()
@see     java.applet.Applet#stop()
"
      end

      operation 6067842 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the browser or applet viewer to inform
this applet that it should start its execution. It is called after
the <code>init</code> method and each time the applet is revisited
in a Web page.
<p>
A subclass of <code>Applet</code> should override this method if
it has any operation that it wants to perform each time the Web
page containing it is visited. For example, an applet with
animation might want to use the <code>start</code> method to
resume animation, and the <code>stop</code> method to suspend the
animation.
<p>
Note: some methods, such as <code>getLocationOnScreen</code>, can only
provide meaningful results if the applet is showing.  Because
<code>isShowing</code> returns <code>false</code> when the applet's
<code>start</code> is first called, methods requiring
<code>isShowing</code> to return <code>true</code> should be called from
a <code>ComponentListener</code>.
<p>
The implementation of this method provided by the
<code>Applet</code> class does nothing.

@see     java.applet.Applet#destroy()
@see     java.applet.Applet#init()
@see     java.applet.Applet#stop()
@see     java.awt.Component#isShowing()
@see     java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
"
      end

      operation 6067970 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the browser or applet viewer to inform
this applet that it should stop its execution. It is called when
the Web page that contains this applet has been replaced by
another page, and also just before the applet is to be destroyed.
<p>
A subclass of <code>Applet</code> should override this method if
it has any operation that it wants to perform each time the Web
page containing it is no longer visible. For example, an applet
with animation might want to use the <code>start</code> method to
resume animation, and the <code>stop</code> method to suspend the
animation.
<p>
The implementation of this method provided by the
<code>Applet</code> class does nothing.

@see     java.applet.Applet#destroy()
@see     java.applet.Applet#init()
"
      end

      operation 6068098 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the browser or applet viewer to inform
this applet that it is being reclaimed and that it should destroy
any resources that it has allocated. The <code>stop</code> method
will always be called before <code>destroy</code>.
<p>
A subclass of <code>Applet</code> should override this method if
it has any operation that it wants to perform before it is
destroyed. For example, an applet with threads would use the
<code>init</code> method to create the threads and the
<code>destroy</code> method to kill them.
<p>
The implementation of this method provided by the
<code>Applet</code> class does nothing.

@see     java.applet.Applet#init()
@see     java.applet.Applet#start()
@see     java.applet.Applet#stop()
"
      end

      classrelation 2879618 // accessibleContext (<unidirectional association>)
	relation 2879618 --->
	  a role_name "accessibleContext" init_value " null" package
	    comment " Accessibility support

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2879618 // accessibleContext (<unidirectional association>)
	  b parent class_ref 347522 // AccessibleContext
      end

      operation 6068226 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the AccessibleContext associated with this Applet.
For applets, the AccessibleContext takes the form of an
AccessibleApplet.
A new AccessibleApplet instance is created if necessary.

@return an AccessibleApplet that serves as the
        AccessibleContext of this Applet
@since 1.3
"
      end

      class 855682 "AccessibleApplet"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2879746 // <generalisation>
	  relation 2879746 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2879746 // <generalisation>
	    b parent class_ref 855170 // AccessibleAWTPanel
	end

	attribute 1329282 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8127374778187708896L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6068354 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
"
	end

	operation 6068482 "getAccessibleStateSet"
	  public return_type class_ref 348162 // AccessibleStateSet
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the state of this object.

@return an instance of AccessibleStateSet containing the current
state set of the object
@see AccessibleState
"
	end
      end
    end

    class 855298 "AppletStub"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "When an applet is first created, an applet stub is attached to it
using the applet's <code>setStub</code> method. This stub
serves as the interface between the applet and the browser
environment or applet viewer environment in which the application
is running.

@author      Arthur van Hoff
@see         java.applet.Applet#setStub(java.applet.AppletStub)
@since       JDK1.0
"
      operation 6069890 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the applet is active. An applet is active just
before its <code>start</code> method is called. It becomes
inactive just before its <code>stop</code> method is called.

@return  <code>true</code> if the applet is active;
         <code>false</code> otherwise.
"
      end

      operation 6070018 "getDocumentBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the URL of the document in which the applet is embedded.
For example, suppose an applet is contained
within the document:
<blockquote><pre>
   http://www.oracle.com/technetwork/java/index.html
</pre></blockquote>
The document base is:
<blockquote><pre>
   http://www.oracle.com/technetwork/java/index.html
</pre></blockquote>

@return  the {@link java.net.URL} of the document that contains the
         applet.
@see     java.applet.AppletStub#getCodeBase()
"
      end

      operation 6070146 "getCodeBase"
	public return_type class_ref 243458 // URL
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the base URL. This is the URL of the directory which contains the applet.

@return  the base {@link java.net.URL} of
         the directory which contains the applet.
@see     java.applet.AppletStub#getDocumentBase()
"
      end

      operation 6070274 "getParameter"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the named parameter in the HTML tag. For
example, if an applet is specified as
<blockquote><pre>
&lt;applet code=\"Clock\" width=50 height=50&gt;
&lt;param name=Color value=\"blue\"&gt;
&lt;/applet&gt;
</pre></blockquote>
<p>
then a call to <code>getParameter(\"Color\")</code> returns the
value <code>\"blue\"</code>.

@param   name   a parameter name.
@return  the value of the named parameter,
or <tt>null</tt> if not set.
"
      end

      operation 6070402 "getAppletContext"
	public return_type class_ref 855426 // AppletContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the applet's context.

@return  the applet's context.
"
      end

      operation 6070530 "appletResize"
	public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the applet wants to be resized.

@param   width    the new requested width for the applet.
@param   height   the new requested height for the applet.
"
      end
    end

    class 855426 "AppletContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface corresponds to an applet's environment: the
document containing the applet and the other applets in the same
document.
<p>
The methods in this interface can be used by an applet to obtain
information about its environment.

@author      Arthur van Hoff
@since       JDK1.0
"
      operation 6068610 "getAudioClip"
	public return_type class_ref 855554 // AudioClip
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an audio clip.

@param   url   an absolute URL giving the location of the audio clip.
@return  the audio clip at the specified URL.
"
      end

      operation 6068738 "getImage"
	public return_type class_ref 340098 // Image
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Image</code> object that can then be painted on
the screen. The <code>url</code> argument that is
passed as an argument must specify an absolute URL.
<p>
This method always returns immediately, whether or not the image
exists. When the applet attempts to draw the image on the screen,
the data will be loaded. The graphics primitives that draw the
image will incrementally paint on the screen.

@param   url   an absolute URL giving the location of the image.
@return  the image at the specified URL.
@see     java.awt.Image
"
      end

      operation 6068866 "getApplet"
	public return_type class_ref 240258 // Applet
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds and returns the applet in the document represented by this
applet context with the given name. The name can be set in the
HTML tag by setting the <code>name</code> attribute.

@param   name   an applet name.
@return  the applet with the given name, or <code>null</code> if
         not found.
"
      end

      operation 6068994 "getApplets"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Applet> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all the applets in the document represented by this applet
context.

@return  an enumeration of all applets in the document represented by
         this applet context.
"
      end

      operation 6069122 "showDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that the browser or applet viewer show the Web page
indicated by the <code>url</code> argument. The browser or
applet viewer determines which window or frame to display the
Web page. This method may be ignored by applet contexts that
are not browsers.

@param   url   an absolute URL giving the location of the document.
"
      end

      operation 6069250 "showDocument"
	public explicit_return_type "void"
	nparams 2
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "target" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that the browser or applet viewer show the Web page
indicated by the <code>url</code> argument. The
<code>target</code> argument indicates in which HTML frame the
document is to be displayed.
The target argument is interpreted as follows:

<center><table border=\"3\" summary=\"Target arguments and their descriptions\">
<tr><th>Target Argument</th><th>Description</th></tr>
<tr><td><code>\"_self\"</code>  <td>Show in the window and frame that
                                  contain the applet.</tr>
<tr><td><code>\"_parent\"</code><td>Show in the applet's parent frame. If
                                  the applet's frame has no parent frame,
                                  acts the same as \"_self\".</tr>
<tr><td><code>\"_top\"</code>   <td>Show in the top-level frame of the applet's
                                  window. If the applet's frame is the
                                  top-level frame, acts the same as \"_self\".</tr>
<tr><td><code>\"_blank\"</code> <td>Show in a new, unnamed
                                  top-level window.</tr>
<tr><td><i>name</i><td>Show in the frame or window named <i>name</i>. If
                       a target named <i>name</i> does not already exist, a
                       new top-level window with the specified name is created,
                       and the document is shown there.</tr>
</table> </center>
<p>
An applet viewer or browser is free to ignore <code>showDocument</code>.

@param   url   an absolute URL giving the location of the document.
@param   target   a <code>String</code> indicating where to display
                  the page.
"
      end

      operation 6069378 "showStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "status" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests that the argument string be displayed in the
\"status window\". Many browsers and applet viewers
provide such a window, where the application can inform users of
its current state.

@param   status   a string to display in the status window.
"
      end

      operation 6069506 "setStream"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "stream" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates the specified stream with the specified key in this
applet context. If the applet context previously contained a mapping
for this key, the old value is replaced.
<p>
For security reasons, mapping of streams and keys exists for each
codebase. In other words, applet from one codebase cannot access
the streams created by an applet from a different codebase
<p>
@param key key with which the specified value is to be associated.
@param stream stream to be associated with the specified key. If this
              parameter is <code>null</code>, the specified key is removed
              in this applet context.
@throws IOException if the stream size exceeds a certain
        size limit. Size limit is decided by the implementor of this
        interface.
@since 1.4
"
      end

      operation 6069634 "getStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the stream to which specified key is associated within this
applet context. Returns <tt>null</tt> if the applet context contains
no stream for this key.
<p>
For security reasons, mapping of streams and keys exists for each
codebase. In other words, applet from one codebase cannot access
the streams created by an applet from a different codebase
<p>
@return the stream to which this applet context maps the key
@param key key whose associated stream is to be returned.
@since 1.4
"
      end

      operation 6069762 "getStreamKeys"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all the keys of the streams in this applet context.
<p>
For security reasons, mapping of streams and keys exists for each
codebase. In other words, applet from one codebase cannot access
the streams created by an applet from a different codebase
<p>
@return  an Iterator of all the names of the streams in this applet
         context.
@since 1.4
"
      end
    end

    class 855554 "AudioClip"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>AudioClip</code> interface is a simple abstraction for
playing a sound clip. Multiple <code>AudioClip</code> items can be
playing at the same time, and the resulting sound is mixed
together to produce a composite.

@author      Arthur van Hoff
@since       JDK1.0
"
      operation 6070658 "play"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts playing this audio clip. Each time this method is called,
the clip is restarted from the beginning.
"
      end

      operation 6070786 "loop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts playing this audio clip in a loop.
"
      end

      operation 6070914 "stop"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops playing this audio clip.
"
      end
    end
  end

  deploymentview 165762 "applet"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 615298 "Applet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.*;
import java.awt.image.ColorModel;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.URL;
import java.net.MalformedURLException;
import java.util.Hashtable;
import java.util.Locale;
import javax.accessibility.*;
${definition}"
      associated_elems
	class_ref 240258 // Applet
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615426 "AppletContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Image;
import java.awt.Graphics;
import java.awt.image.ColorModel;
import java.net.URL;
import java.util.Enumeration;
import java.io.InputStream;
import java.io.IOException;
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 855426 // AppletContext
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615554 "AppletStub"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.net.URL;
${definition}"
      associated_elems
	class_ref 855298 // AppletStub
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 615682 "AudioClip"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 855554 // AudioClip
      end
      comment "Copyright (c) 1995, 1997, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
