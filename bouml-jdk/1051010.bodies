class ValueRange
!!!8562050.java!!!	of(in min : long, in max : long) : ValueRange
        if (min > max) {
            throw new IllegalArgumentException("Minimum value must be less than maximum value");
        }
        return new ValueRange(min, min, max, max);
!!!8562178.java!!!	of(in min : long, in maxSmallest : long, in maxLargest : long) : ValueRange
        return of(min, min, maxSmallest, maxLargest);
!!!8562306.java!!!	of(in minSmallest : long, in minLargest : long, in maxSmallest : long, in maxLargest : long) : ValueRange
        if (minSmallest > minLargest) {
            throw new IllegalArgumentException("Smallest minimum value must be less than largest minimum value");
        }
        if (maxSmallest > maxLargest) {
            throw new IllegalArgumentException("Smallest maximum value must be less than largest maximum value");
        }
        if (minLargest > maxLargest) {
            throw new IllegalArgumentException("Minimum value must be less than maximum value");
        }
        return new ValueRange(minSmallest, minLargest, maxSmallest, maxLargest);
!!!8562434.java!!!	ValueRange(in minSmallest : long, in minLargest : long, in maxSmallest : long, in maxLargest : long)
        this.minSmallest = minSmallest;
        this.minLargest = minLargest;
        this.maxSmallest = maxSmallest;
        this.maxLargest = maxLargest;
!!!8562562.java!!!	isFixed() : boolean
        return minSmallest == minLargest && maxSmallest == maxLargest;
!!!8562690.java!!!	getMinimum() : long
        return minSmallest;
!!!8562818.java!!!	getLargestMinimum() : long
        return minLargest;
!!!8562946.java!!!	getSmallestMaximum() : long
        return maxSmallest;
!!!8563074.java!!!	getMaximum() : long
        return maxLargest;
!!!8563202.java!!!	isIntValue() : boolean
        return getMinimum() >= Integer.MIN_VALUE && getMaximum() <= Integer.MAX_VALUE;
!!!8563330.java!!!	isValidValue(in value : long) : boolean
        return (value >= getMinimum() && value <= getMaximum());
!!!8563458.java!!!	isValidIntValue(in value : long) : boolean
        return isIntValue() && isValidValue(value);
!!!8563586.java!!!	checkValidValue(in value : long, inout field : TemporalField) : long
        if (isValidValue(value) == false) {
            throw new DateTimeException(genInvalidFieldMessage(field, value));
        }
        return value;
!!!8563714.java!!!	checkValidIntValue(in value : long, inout field : TemporalField) : int
        if (isValidIntValue(value) == false) {
            throw new DateTimeException(genInvalidFieldMessage(field, value));
        }
        return (int) value;
!!!8563842.java!!!	genInvalidFieldMessage(inout field : TemporalField, in value : long) : String
        if (field != null) {
            return "Invalid value for " + field + " (valid values " + this + "): " + value;
        } else {
            return "Invalid value (valid values " + this + "): " + value;
        }
!!!8563970.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();
        if (minSmallest > minLargest) {
            throw new InvalidObjectException("Smallest minimum value must be less than largest minimum value");
        }
        if (maxSmallest > maxLargest) {
            throw new InvalidObjectException("Smallest maximum value must be less than largest maximum value");
        }
        if (minLargest > maxLargest) {
            throw new InvalidObjectException("Minimum value must be less than maximum value");
        }
!!!8564098.java!!!	equals(inout obj : Object) : boolean
        if (obj == this) {
            return true;
        }
        if (obj instanceof ValueRange) {
            ValueRange other = (ValueRange) obj;
           return minSmallest == other.minSmallest && minLargest == other.minLargest &&
                   maxSmallest == other.maxSmallest && maxLargest == other.maxLargest;
        }
        return false;
!!!8564226.java!!!	hashCode() : int
        long hash = minSmallest + minLargest << 16 + minLargest >> 48 + maxSmallest << 32 +
            maxSmallest >> 32 + maxLargest << 48 + maxLargest >> 16;
        return (int) (hash ^ (hash >>> 32));
!!!8564354.java!!!	toString() : String
        StringBuilder buf = new StringBuilder();
        buf.append(minSmallest);
        if (minSmallest != minLargest) {
            buf.append('/').append(minLargest);
        }
        buf.append(" - ").append(maxSmallest);
        if (maxSmallest != maxLargest) {
            buf.append('/').append(maxLargest);
        }
        return buf.toString();
