class InputEvent
!!!6437250.java!!!	getButtonDownMasks() : int
        return Arrays.copyOf(BUTTON_DOWN_MASK, BUTTON_DOWN_MASK.length);
!!!6437378.java!!!	getMaskForButton(in button : int) : int
        if (button <= 0 || button > BUTTON_DOWN_MASK.length) {
            throw new IllegalArgumentException("button doesn\'t exist " + button);
        }
        return BUTTON_DOWN_MASK[button - 1];
!!!6437634.java!!!	InputEvent(inout source : Component, in id : int, in when : long, in modifiers : int)
        super(source, id);
        this.when = when;
        this.modifiers = modifiers;
        canAccessSystemClipboard = canAccessSystemClipboard();
!!!6437762.java!!!	canAccessSystemClipboard() : boolean
        boolean b = false;

        if (!GraphicsEnvironment.isHeadless()) {
            SecurityManager sm = System.getSecurityManager();
            if (sm != null) {
                try {
                    sm.checkPermission(SecurityConstants.AWT.ACCESS_CLIPBOARD_PERMISSION);
                    b = true;
                } catch (SecurityException se) {
                    if (logger.isLoggable(PlatformLogger.Level.FINE)) {
                        logger.fine("InputEvent.canAccessSystemClipboard() got SecurityException ", se);
                    }
                }
            } else {
                b = true;
            }
        }

        return b;
!!!6437890.java!!!	isShiftDown() : boolean
        return (modifiers & SHIFT_MASK) != 0;
!!!6438018.java!!!	isControlDown() : boolean
        return (modifiers & CTRL_MASK) != 0;
!!!6438146.java!!!	isMetaDown() : boolean
        return (modifiers & META_MASK) != 0;
!!!6438274.java!!!	isAltDown() : boolean
        return (modifiers & ALT_MASK) != 0;
!!!6438402.java!!!	isAltGraphDown() : boolean
        return (modifiers & ALT_GRAPH_MASK) != 0;
!!!6438530.java!!!	getWhen() : long
        return when;
!!!6438658.java!!!	getModifiers() : int
        return modifiers & (JDK_1_3_MODIFIERS | HIGH_MODIFIERS);
!!!6438786.java!!!	getModifiersEx() : int
        return modifiers & ~JDK_1_3_MODIFIERS;
!!!6438914.java!!!	consume() : void
        consumed = true;
!!!6439042.java!!!	isConsumed() : boolean
        return consumed;
!!!6439170.java!!!	getModifiersExText(in modifiers : int) : String
        StringBuilder buf = new StringBuilder();
        if ((modifiers & InputEvent.META_DOWN_MASK) != 0) {
            buf.append(Toolkit.getProperty("AWT.meta", "Meta"));
            buf.append("+");
        }
        if ((modifiers & InputEvent.CTRL_DOWN_MASK) != 0) {
            buf.append(Toolkit.getProperty("AWT.control", "Ctrl"));
            buf.append("+");
        }
        if ((modifiers & InputEvent.ALT_DOWN_MASK) != 0) {
            buf.append(Toolkit.getProperty("AWT.alt", "Alt"));
            buf.append("+");
        }
        if ((modifiers & InputEvent.SHIFT_DOWN_MASK) != 0) {
            buf.append(Toolkit.getProperty("AWT.shift", "Shift"));
            buf.append("+");
        }
        if ((modifiers & InputEvent.ALT_GRAPH_DOWN_MASK) != 0) {
            buf.append(Toolkit.getProperty("AWT.altGraph", "Alt Graph"));
            buf.append("+");
        }

        int buttonNumber = 1;
        for (int mask : InputEvent.BUTTON_DOWN_MASK){
            if ((modifiers & mask) != 0) {
                buf.append(Toolkit.getProperty("AWT.button"+buttonNumber, "Button"+buttonNumber));
                buf.append("+");
            }
            buttonNumber++;
        }
        if (buf.length() > 0) {
            buf.setLength(buf.length()-1); // remove trailing '+'
        }
        return buf.toString();
