class CMNodeFactory
!!!4746498.java!!!	reset(inout componentManager : XMLComponentManager) : void
        fErrorReporter = (XMLErrorReporter)componentManager.getProperty(ERROR_REPORTER);
        try {
            fSecurityManager = (XMLSecurityManager)componentManager.getProperty(SECURITY_MANAGER);
            //we are setting the limit of number of nodes to 3times the maxOccur value..
            if(fSecurityManager != null){
                maxNodeLimit = fSecurityManager.getLimit(XMLSecurityManager.Limit.MAX_OCCUR_NODE_LIMIT) * MULTIPLICITY ;
            }
        }
        catch (XMLConfigurationException e) {
            fSecurityManager = null;
        }

!!!4746626.java!!!	getCMLeafNode(in type : int, inout leaf : Object, in id : int, in position : int) : CMNode
        return new XSCMLeaf(type, leaf, id, position) ;
!!!4746754.java!!!	getCMRepeatingLeafNode(in type : int, inout leaf : Object, in minOccurs : int, in maxOccurs : int, in id : int, in position : int) : CMNode
        nodeCountCheck();
        return new XSCMRepeatingLeaf(type, leaf, minOccurs, maxOccurs, id, position);
!!!4746882.java!!!	getCMUniOpNode(in type : int, inout childNode : CMNode) : CMNode
        nodeCountCheck();
        return new XSCMUniOp(type, childNode) ;
!!!4747010.java!!!	getCMBinOpNode(in type : int, inout leftNode : CMNode, inout rightNode : CMNode) : CMNode
        return new XSCMBinOp(type, leftNode, rightNode) ;
!!!4747138.java!!!	nodeCountCheck() : void
        if( fSecurityManager != null && !fSecurityManager.isNoLimit(maxNodeLimit) &&
                nodeCount++ > maxNodeLimit){
            if(DEBUG){
                System.out.println("nodeCount = " + nodeCount ) ;
                System.out.println("nodeLimit = " + maxNodeLimit ) ;
            }
            fErrorReporter.reportError(XSMessageFormatter.SCHEMA_DOMAIN, "MaxOccurLimit", new Object[]{ new Integer(maxNodeLimit) }, XMLErrorReporter.SEVERITY_FATAL_ERROR);
            // similarly to entity manager behaviour, take into accont
            // behaviour if continue-after-fatal-error is set.
            nodeCount = 0;
        }

!!!4747266.java!!!	resetNodeCount() : void
        nodeCount = 0 ;
!!!4747394.java!!!	setProperty(inout propertyId : String, inout value : Object) : void

        // Xerces properties
        if (propertyId.startsWith(Constants.XERCES_PROPERTY_PREFIX)) {
                final int suffixLength = propertyId.length() - Constants.XERCES_PROPERTY_PREFIX.length();

            if (suffixLength == Constants.SECURITY_MANAGER_PROPERTY.length() &&
                propertyId.endsWith(Constants.SECURITY_MANAGER_PROPERTY)) {
                fSecurityManager = (XMLSecurityManager)value;
                maxNodeLimit = (fSecurityManager != null) ?
                        fSecurityManager.getLimit(XMLSecurityManager.Limit.MAX_OCCUR_NODE_LIMIT) * MULTIPLICITY : 0 ;
                return;
            }
            if (suffixLength == Constants.ERROR_REPORTER_PROPERTY.length() &&
                propertyId.endsWith(Constants.ERROR_REPORTER_PROPERTY)) {
                fErrorReporter = (XMLErrorReporter)value;
                return;
            }
        }

