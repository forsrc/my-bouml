class RSAKeyValueResolver
!!!5422850.java!!!	engineLookupAndResolvePublicKey(inout element : Element, inout BaseURI : String, inout storage : StorageResolver) : PublicKey
        if (log.isLoggable(java.util.logging.Level.FINE)) {
            log.log(java.util.logging.Level.FINE, "Can I resolve " + element.getTagName());
        }
        if (element == null) {
            return null;
        }

        boolean isKeyValue = XMLUtils.elementIsInSignatureSpace(element, Constants._TAG_KEYVALUE);
        Element rsaKeyElement = null;
        if (isKeyValue) {
            rsaKeyElement =
                XMLUtils.selectDsNode(element.getFirstChild(), Constants._TAG_RSAKEYVALUE, 0);
        } else if (XMLUtils.elementIsInSignatureSpace(element, Constants._TAG_RSAKEYVALUE)) {
            // this trick is needed to allow the RetrievalMethodResolver to eat a
            // ds:RSAKeyValue directly (without KeyValue)
            rsaKeyElement = element;
        }

        if (rsaKeyElement == null) {
            return null;
        }

        try {
            RSAKeyValue rsaKeyValue = new RSAKeyValue(rsaKeyElement, BaseURI);

            return rsaKeyValue.getPublicKey();
        } catch (XMLSecurityException ex) {
            if (log.isLoggable(java.util.logging.Level.FINE)) {
                log.log(java.util.logging.Level.FINE, "XMLSecurityException", ex);
            }
        }

        return null;
!!!5422978.java!!!	engineLookupResolveX509Certificate(inout element : Element, inout BaseURI : String, inout storage : StorageResolver) : X509Certificate
        return null;
!!!5423106.java!!!	engineLookupAndResolveSecretKey(inout element : Element, inout BaseURI : String, inout storage : StorageResolver) : javax.crypto.SecretKey
        return null;
