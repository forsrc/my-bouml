class MarkVector
!!!11654402.java!!!	MarkVector()
            super();
!!!11654530.java!!!	MarkVector(in size : int)
            super(size);
!!!11654658.java!!!	allocateArray(in len : int) : Object
            return new MarkData[len];
!!!11654786.java!!!	getArrayLength() : int
            MarkData[] marks = (MarkData[]) getArray();
            return marks.length;
!!!11654914.java!!!	size() : int
            int len = getArrayLength() - (getGapEnd() - getGapStart());
            return len;
!!!11655042.java!!!	insertElementAt(inout m : GapContent::MarkData, in index : int) : void
            oneMark[0] = m;
            replace(index, 0, oneMark, 1);
!!!11655170.java!!!	addElement(inout m : GapContent::MarkData) : void
            insertElementAt(m, size());
!!!11655298.java!!!	elementAt(in index : int) : GapContent::MarkData
            int g0 = getGapStart();
            int g1 = getGapEnd();
            MarkData[] array = (MarkData[]) getArray();
            if (index < g0) {
                // below gap
                return array[index];
            } else {
                // above gap
                index += g1 - g0;
                return array[index];
            }
!!!11655426.java!!!	replaceRange(in start : int, in end : int, inout marks : Object [[]]) : void
            int g0 = getGapStart();
            int g1 = getGapEnd();
            int index = start;
            int newIndex = 0;
            Object[] array = (Object[]) getArray();
            if (start >= g0) {
                // Completely passed gap
                index += (g1 - g0);
                end += (g1 - g0);
            }
            else if (end >= g0) {
                // straddles gap
                end += (g1 - g0);
                while (index < g0) {
                    array[index++] = marks[newIndex++];
                }
                index = g1;
            }
            else {
                // below gap
                while (index < end) {
                    array[index++] = marks[newIndex++];
                }
            }
            while (index < end) {
                array[index++] = marks[newIndex++];
            }
