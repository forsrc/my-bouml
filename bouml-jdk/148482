format 222
"color" // jdk1.8::java::awt::color
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/awt/color/"
  java_package "java.awt.color"
  classview 144898 "color"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 322178 "ColorSpace"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This abstract class is used to serve as a color space tag to identify the
specific color space of a Color object or, via a ColorModel object,
of an Image, a BufferedImage, or a GraphicsDevice.  It contains
methods that transform colors in a specific color space to/from sRGB
and to/from a well-defined CIEXYZ color space.
<p>
For purposes of the methods in this class, colors are represented as
arrays of color components represented as floats in a normalized range
defined by each ColorSpace.  For many ColorSpaces (e.g. sRGB), this
range is 0.0 to 1.0.  However, some ColorSpaces have components whose
values have a different range.  Methods are provided to inquire per
component minimum and maximum normalized values.
<p>
Several variables are defined for purposes of referring to color
space types (e.g. TYPE_RGB, TYPE_XYZ, etc.) and to refer to specific
color spaces (e.g. CS_sRGB and CS_CIEXYZ).
sRGB is a proposed standard RGB color space.  For more information,
see <A href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">
http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html
</A>.
<p>
The purpose of the methods to transform to/from the well-defined
CIEXYZ color space is to support conversions between any two color
spaces at a reasonably high degree of accuracy.  It is expected that
particular implementations of subclasses of ColorSpace (e.g.
ICC_ColorSpace) will support high performance conversion based on
underlying platform color management systems.
<p>
The CS_CIEXYZ space used by the toCIEXYZ/fromCIEXYZ methods can be
described as follows:
<pre>

&nbsp;     CIEXYZ
&nbsp;     viewing illuminance: 200 lux
&nbsp;     viewing white point: CIE D50
&nbsp;     media white point: \"that of a perfectly reflecting diffuser\" -- D50
&nbsp;     media black point: 0 lux or 0 Reflectance
&nbsp;     flare: 1 percent
&nbsp;     surround: 20percent of the media white point
&nbsp;     media description: reflection print (i.e., RLAB, Hunt viewing media)
&nbsp;     note: For developers creating an ICC profile for this conversion
&nbsp;           space, the following is applicable.  Use a simple Von Kries
&nbsp;           white point adaptation folded into the 3X3 matrix parameters
&nbsp;           and fold the flare and surround effects into the three
&nbsp;           one-dimensional lookup tables (assuming one uses the minimal
&nbsp;           model for monitors).

</pre>

@see ICC_ColorSpace
"
      classrelation 545154 // <realization>
	relation 545154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 545154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 371970 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -409452704308689724L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 372098 "type"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 372226 "numComponents"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 545282 // compName (<unidirectional association>)
	relation 545282 --->
	  a role_name "compName" multiplicity "[]" init_value " null" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 545282 // compName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 545410 // sRGBspace (<unidirectional association>)
	relation 545410 --->
	  a role_name "sRGBspace" class_relation private
	    comment " Cache of singletons for the predefined color spaces.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 545410 // sRGBspace (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      classrelation 545538 // XYZspace (<unidirectional association>)
	relation 545538 --->
	  a role_name "XYZspace" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 545538 // XYZspace (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      classrelation 545666 // PYCCspace (<unidirectional association>)
	relation 545666 --->
	  a role_name "PYCCspace" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 545666 // PYCCspace (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      classrelation 545794 // GRAYspace (<unidirectional association>)
	relation 545794 --->
	  a role_name "GRAYspace" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 545794 // GRAYspace (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      classrelation 545922 // LINEAR_RGBspace (<unidirectional association>)
	relation 545922 --->
	  a role_name "LINEAR_RGBspace" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 545922 // LINEAR_RGBspace (<unidirectional association>)
	  b parent class_ref 322178 // ColorSpace
      end

      attribute 372354 "TYPE_XYZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of XYZ color spaces.

"
      end

      attribute 372482 "TYPE_Lab"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of Lab color spaces.

"
      end

      attribute 372610 "TYPE_Luv"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of Luv color spaces.

"
      end

      attribute 372738 "TYPE_YCbCr"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of YCbCr color spaces.

"
      end

      attribute 372866 "TYPE_Yxy"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of Yxy color spaces.

"
      end

      attribute 372994 "TYPE_RGB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of RGB color spaces.

"
      end

      attribute 373122 "TYPE_GRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of GRAY color spaces.

"
      end

      attribute 373250 "TYPE_HSV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of HSV color spaces.

"
      end

      attribute 373378 "TYPE_HLS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of HLS color spaces.

"
      end

      attribute 373506 "TYPE_CMYK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of CMYK color spaces.

"
      end

      attribute 373634 "TYPE_CMY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Any of the family of CMY color spaces.

"
      end

      attribute 373762 "TYPE_2CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 2 component color spaces.

"
      end

      attribute 373890 "TYPE_3CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 3 component color spaces.

"
      end

      attribute 374018 "TYPE_4CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 4 component color spaces.

"
      end

      attribute 374146 "TYPE_5CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 5 component color spaces.

"
      end

      attribute 374274 "TYPE_6CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 6 component color spaces.

"
      end

      attribute 374402 "TYPE_7CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 7 component color spaces.

"
      end

      attribute 374530 "TYPE_8CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 8 component color spaces.

"
      end

      attribute 374658 "TYPE_9CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 9 component color spaces.

"
      end

      attribute 374786 "TYPE_ACLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 10 component color spaces.

"
      end

      attribute 374914 "TYPE_BCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 11 component color spaces.

"
      end

      attribute 375042 "TYPE_CCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 12 component color spaces.

"
      end

      attribute 375170 "TYPE_DCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 13 component color spaces.

"
      end

      attribute 375298 "TYPE_ECLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 14 component color spaces.

"
      end

      attribute 375426 "TYPE_FCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Generic 15 component color spaces.

"
      end

      attribute 375554 "CS_sRGB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The sRGB color space defined at
<A href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">
http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html
</A>.

"
      end

      attribute 375682 "CS_LINEAR_RGB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1004"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A built-in linear RGB color space.  This space is based on the
same RGB primaries as CS_sRGB, but has a linear tone reproduction curve.

"
      end

      attribute 375810 "CS_CIEXYZ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1001"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The CIEXYZ conversion color space defined above.

"
      end

      attribute 375938 "CS_PYCC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1002"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The Photo YCC conversion color space.

"
      end

      attribute 376066 "CS_GRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1003"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The built-in linear gray scale color space.

"
      end

      operation 1740930 "ColorSpace"
	protected explicit_return_type ""
	nparams 2
	  param in name "type" explicit_type "int"
	  param in name "numcomponents" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a ColorSpace object given a color space type
and the number of components.
@param type one of the <CODE>ColorSpace</CODE> type constants
@param numcomponents the number of components in the color space
"
      end

      operation 1741058 "getInstance"
	class_operation public return_type class_ref 322178 // ColorSpace
	nparams 1
	  param in name "colorspace" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a ColorSpace representing one of the specific
predefined color spaces.
@param colorspace a specific color space identified by one of
       the predefined class constants (e.g. CS_sRGB, CS_LINEAR_RGB,
       CS_CIEXYZ, CS_GRAY, or CS_PYCC)
@return the requested <CODE>ColorSpace</CODE> object

 NOTE: This method may be called by privileged threads.
       DO NOT INVOKE CLIENT CODE ON THIS THREAD!"
      end

      operation 1741186 "isCS_sRGB"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the ColorSpace is CS_sRGB.
@return <CODE>true</CODE> if this is a <CODE>CS_sRGB</CODE> color
        space, <code>false</code> if it is not
"
      end

      operation 1741314 "toRGB"
	abstract public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in this ColorSpace
into a value in the default CS_sRGB color space.
<p>
This method transforms color values using algorithms designed
to produce the best perceptual match between input and output
colors.  In order to do colorimetric conversion of color values,
you should use the <code>toCIEXYZ</code>
method of this color space to first convert from the input
color space to the CS_CIEXYZ color space, and then use the
<code>fromCIEXYZ</code> method of the CS_sRGB color space to
convert from CS_CIEXYZ to the output color space.
See {@link #toCIEXYZ(float[]) toCIEXYZ} and
{@link #fromCIEXYZ(float[]) fromCIEXYZ} for further information.
<p>
@param colorvalue a float array with length of at least the number
       of components in this ColorSpace
@return a float array of length 3
@throws ArrayIndexOutOfBoundsException if array length is not
        at least the number of components in this ColorSpace
"
      end

      operation 1741442 "fromRGB"
	abstract public explicit_return_type "float"
	nparams 1
	  param inout name "rgbvalue" explicit_type "float"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in the default CS_sRGB
color space into this ColorSpace.
<p>
This method transforms color values using algorithms designed
to produce the best perceptual match between input and output
colors.  In order to do colorimetric conversion of color values,
you should use the <code>toCIEXYZ</code>
method of the CS_sRGB color space to first convert from the input
color space to the CS_CIEXYZ color space, and then use the
<code>fromCIEXYZ</code> method of this color space to
convert from CS_CIEXYZ to the output color space.
See {@link #toCIEXYZ(float[]) toCIEXYZ} and
{@link #fromCIEXYZ(float[]) fromCIEXYZ} for further information.
<p>
@param rgbvalue a float array with length of at least 3
@return a float array with length equal to the number of
        components in this ColorSpace
@throws ArrayIndexOutOfBoundsException if array length is not
        at least 3
"
      end

      operation 1741570 "toCIEXYZ"
	abstract public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in this ColorSpace
into the CS_CIEXYZ conversion color space.
<p>
This method transforms color values using relative colorimetry,
as defined by the International Color Consortium standard.  This
means that the XYZ values returned by this method are represented
relative to the D50 white point of the CS_CIEXYZ color space.
This representation is useful in a two-step color conversion
process in which colors are transformed from an input color
space to CS_CIEXYZ and then to an output color space.  This
representation is not the same as the XYZ values that would
be measured from the given color value by a colorimeter.
A further transformation is necessary to compute the XYZ values
that would be measured using current CIE recommended practices.
See the {@link ICC_ColorSpace#toCIEXYZ(float[]) toCIEXYZ} method of
<code>ICC_ColorSpace</code> for further information.
<p>
@param colorvalue a float array with length of at least the number
       of components in this ColorSpace
@return a float array of length 3
@throws ArrayIndexOutOfBoundsException if array length is not
        at least the number of components in this ColorSpace.
"
      end

      operation 1741698 "fromCIEXYZ"
	abstract public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in the CS_CIEXYZ conversion
color space into this ColorSpace.
<p>
This method transforms color values using relative colorimetry,
as defined by the International Color Consortium standard.  This
means that the XYZ argument values taken by this method are represented
relative to the D50 white point of the CS_CIEXYZ color space.
This representation is useful in a two-step color conversion
process in which colors are transformed from an input color
space to CS_CIEXYZ and then to an output color space.  The color
values returned by this method are not those that would produce
the XYZ value passed to the method when measured by a colorimeter.
If you have XYZ values corresponding to measurements made using
current CIE recommended practices, they must be converted to D50
relative values before being passed to this method.
See the {@link ICC_ColorSpace#fromCIEXYZ(float[]) fromCIEXYZ} method of
<code>ICC_ColorSpace</code> for further information.
<p>
@param colorvalue a float array with length of at least 3
@return a float array with length equal to the number of
        components in this ColorSpace
@throws ArrayIndexOutOfBoundsException if array length is not
        at least 3
"
      end

      operation 1741826 "getType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color space type of this ColorSpace (for example
TYPE_RGB, TYPE_XYZ, ...).  The type defines the
number of components of the color space and the interpretation,
e.g. TYPE_RGB identifies a color space with three components - red,
green, and blue.  It does not define the particular color
characteristics of the space, e.g. the chromaticities of the
primaries.

@return the type constant that represents the type of this
        <CODE>ColorSpace</CODE>
"
      end

      operation 1741954 "getNumComponents"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of components of this ColorSpace.
@return The number of components in this <CODE>ColorSpace</CODE>.
"
      end

      operation 1742082 "getName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "idx" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the component given the component index.

@param idx the component index
@return the name of the component at the specified index
@throws IllegalArgumentException if <code>idx</code> is
        less than 0 or greater than numComponents - 1
"
      end

      operation 1742210 "getMinValue"
	public explicit_return_type "float"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum normalized color component value for the
specified component.  The default implementation in this abstract
class returns 0.0 for all components.  Subclasses should override
this method if necessary.

@param component the component index
@return the minimum normalized component value
@throws IllegalArgumentException if component is less than 0 or
        greater than numComponents - 1
@since 1.4
"
      end

      operation 1742338 "getMaxValue"
	public explicit_return_type "float"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum normalized color component value for the
specified component.  The default implementation in this abstract
class returns 1.0 for all components.  Subclasses should override
this method if necessary.

@param component the component index
@return the maximum normalized component value
@throws IllegalArgumentException if component is less than 0 or
        greater than numComponents - 1
@since 1.4
"
      end

      operation 1742466 "isCS_CIEXYZ"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "cspace" type class_ref 322178 // ColorSpace
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if cspace is the XYZspace.
"
      end
    end

    class 328706 "ICC_ColorSpace"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
The ICC_ColorSpace class is an implementation of the abstract
ColorSpace class.  This representation of
device independent and device dependent color spaces is based on the
International Color Consortium Specification ICC.1:2001-12, File Format for
Color Profiles (see <A href=\"http://www.color.org\">http://www.color.org</A>).
<p>
Typically, a Color or ColorModel would be associated with an ICC
Profile which is either an input, display, or output profile (see
the ICC specification).  There are other types of ICC Profiles, e.g.
abstract profiles, device link profiles, and named color profiles,
which do not contain information appropriate for representing the color
space of a color, image, or device (see ICC_Profile).
Attempting to create an ICC_ColorSpace object from an inappropriate ICC
Profile is an error.
<p>
ICC Profiles represent transformations from the color space of
the profile (e.g. a monitor) to a Profile Connection Space (PCS).
Profiles of interest for tagging images or colors have a
PCS which is one of the device independent
spaces (one CIEXYZ space and two CIELab spaces) defined in the
ICC Profile Format Specification.  Most profiles of interest
either have invertible transformations or explicitly specify
transformations going both directions.  Should an ICC_ColorSpace
object be used in a way requiring a conversion from PCS to
the profile's native space and there is inadequate data to
correctly perform the conversion, the ICC_ColorSpace object will
produce output in the specified type of color space (e.g. TYPE_RGB,
TYPE_CMYK, etc.), but the specific color values of the output data
will be undefined.
<p>
The details of this class are not important for simple applets,
which draw in a default color space or manipulate and display
imported images with a known color space.  At most, such applets
would need to get one of the default color spaces via
ColorSpace.getInstance().
@see ColorSpace
@see ICC_Profile
"
      classrelation 2988546 // <generalisation>
	relation 2988546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2988546 // <generalisation>
	  b parent class_ref 322178 // ColorSpace
      end

      attribute 1441794 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3455889114070431483L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2988674 // thisProfile (<unidirectional association>)
	relation 2988674 --->
	  a role_name "thisProfile" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2988674 // thisProfile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      attribute 1441922 "minVal"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442050 "maxVal"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442178 "diffMinMax"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442306 "invDiffMinMax"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442434 "needScaleInit"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442562 "this2srgb"
	private explicit_type "ColorTransform"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " {to,from}{RGB,CIEXYZ} methods create and cache these when needed
"
      end

      attribute 1442690 "srgb2this"
	private explicit_type "ColorTransform"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442818 "this2xyz"
	private explicit_type "ColorTransform"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1442946 "xyz2this"
	private explicit_type "ColorTransform"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6379906 "ICC_ColorSpace"
	public explicit_return_type ""
	nparams 1
	  param inout name "profile" type class_ref 329218 // ICC_Profile
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new ICC_ColorSpace from an ICC_Profile object.
@param profile the specified ICC_Profile object
@exception IllegalArgumentException if profile is inappropriate for
           representing a ColorSpace.
"
      end

      operation 6380034 "getProfile"
	public return_type class_ref 329218 // ICC_Profile
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ICC_Profile for this ICC_ColorSpace.
@return the ICC_Profile for this ICC_ColorSpace.
"
      end

      operation 6380162 "toRGB"
	public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in this ColorSpace
into a value in the default CS_sRGB color space.
<p>
This method transforms color values using algorithms designed
to produce the best perceptual match between input and output
colors.  In order to do colorimetric conversion of color values,
you should use the <code>toCIEXYZ</code>
method of this color space to first convert from the input
color space to the CS_CIEXYZ color space, and then use the
<code>fromCIEXYZ</code> method of the CS_sRGB color space to
convert from CS_CIEXYZ to the output color space.
See {@link #toCIEXYZ(float[]) toCIEXYZ} and
{@link #fromCIEXYZ(float[]) fromCIEXYZ} for further information.
<p>
@param colorvalue a float array with length of at least the number
     of components in this ColorSpace.
@return a float array of length 3.
@throws ArrayIndexOutOfBoundsException if array length is not
at least the number of components in this ColorSpace.
"
      end

      operation 6380290 "fromRGB"
	public explicit_return_type "float"
	nparams 1
	  param inout name "rgbvalue" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in the default CS_sRGB
color space into this ColorSpace.
<p>
This method transforms color values using algorithms designed
to produce the best perceptual match between input and output
colors.  In order to do colorimetric conversion of color values,
you should use the <code>toCIEXYZ</code>
method of the CS_sRGB color space to first convert from the input
color space to the CS_CIEXYZ color space, and then use the
<code>fromCIEXYZ</code> method of this color space to
convert from CS_CIEXYZ to the output color space.
See {@link #toCIEXYZ(float[]) toCIEXYZ} and
{@link #fromCIEXYZ(float[]) fromCIEXYZ} for further information.
<p>
@param rgbvalue a float array with length of at least 3.
@return a float array with length equal to the number of
      components in this ColorSpace.
@throws ArrayIndexOutOfBoundsException if array length is not
at least 3.
"
      end

      operation 6380418 "toCIEXYZ"
	public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in this ColorSpace
into the CS_CIEXYZ conversion color space.
<p>
This method transforms color values using relative colorimetry,
as defined by the ICC Specification.  This
means that the XYZ values returned by this method are represented
relative to the D50 white point of the CS_CIEXYZ color space.
This representation is useful in a two-step color conversion
process in which colors are transformed from an input color
space to CS_CIEXYZ and then to an output color space.  This
representation is not the same as the XYZ values that would
be measured from the given color value by a colorimeter.
A further transformation is necessary to compute the XYZ values
that would be measured using current CIE recommended practices.
The paragraphs below explain this in more detail.
<p>
The ICC standard uses a device independent color space (DICS) as the
mechanism for converting color from one device to another device.  In
this architecture, colors are converted from the source device's color
space to the ICC DICS and then from the ICC DICS to the destination
device's color space.  The ICC standard defines device profiles which
contain transforms which will convert between a device's color space
and the ICC DICS.  The overall conversion of colors from a source
device to colors of a destination device is done by connecting the
device-to-DICS transform of the profile for the source device to the
DICS-to-device transform of the profile for the destination device.
For this reason, the ICC DICS is commonly referred to as the profile
connection space (PCS).  The color space used in the methods
toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC
Specification.  This is also the color space represented by
ColorSpace.CS_CIEXYZ.
<p>
The XYZ values of a color are often represented as relative to some
white point, so the actual meaning of the XYZ values cannot be known
without knowing the white point of those values.  This is known as
relative colorimetry.  The PCS uses a white point of D50, so the XYZ
values of the PCS are relative to D50.  For example, white in the PCS
will have the XYZ values of D50, which is defined to be X=.9642,
Y=1.000, and Z=0.8249.  This white point is commonly used for graphic
arts applications, but others are often used in other applications.
<p>
To quantify the color characteristics of a device such as a printer
or monitor, measurements of XYZ values for particular device colors
are typically made.  For purposes of this discussion, the term
device XYZ values is used to mean the XYZ values that would be
measured from device colors using current CIE recommended practices.
<p>
Converting between device XYZ values and the PCS XYZ values returned
by this method corresponds to converting between the device's color
space, as represented by CIE colorimetric values, and the PCS.  There
are many factors involved in this process, some of which are quite
subtle.  The most important, however, is the adjustment made to account
for differences between the device's white point and the white point of
the PCS.  There are many techniques for doing this and it is the
subject of much current research and controversy.  Some commonly used
methods are XYZ scaling, the von Kries transform, and the Bradford
transform.  The proper method to use depends upon each particular
application.
<p>
The simplest method is XYZ scaling.  In this method each device XYZ
value is  converted to a PCS XYZ value by multiplying it by the ratio
of the PCS white point (D50) to the device white point.
<pre>

Xd, Yd, Zd are the device XYZ values
Xdw, Ydw, Zdw are the device XYZ white point values
Xp, Yp, Zp are the PCS XYZ values
Xd50, Yd50, Zd50 are the PCS XYZ white point values

Xp = Xd * (Xd50 / Xdw)
Yp = Yd * (Yd50 / Ydw)
Zp = Zd * (Zd50 / Zdw)

</pre>
<p>
Conversion from the PCS to the device would be done by inverting these
equations:
<pre>

Xd = Xp * (Xdw / Xd50)
Yd = Yp * (Ydw / Yd50)
Zd = Zp * (Zdw / Zd50)

</pre>
<p>
Note that the media white point tag in an ICC profile is not the same
as the device white point.  The media white point tag is expressed in
PCS values and is used to represent the difference between the XYZ of
device illuminant and the XYZ of the device media when measured under
that illuminant.  The device white point is expressed as the device
XYZ values corresponding to white displayed on the device.  For
example, displaying the RGB color (1.0, 1.0, 1.0) on an sRGB device
will result in a measured device XYZ value of D65.  This will not
be the same as the media white point tag XYZ value in the ICC
profile for an sRGB device.
<p>
@param colorvalue a float array with length of at least the number
       of components in this ColorSpace.
@return a float array of length 3.
@throws ArrayIndexOutOfBoundsException if array length is not
at least the number of components in this ColorSpace.
"
      end

      operation 6380546 "fromCIEXYZ"
	public explicit_return_type "float"
	nparams 1
	  param inout name "colorvalue" explicit_type "float"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transforms a color value assumed to be in the CS_CIEXYZ conversion
color space into this ColorSpace.
<p>
This method transforms color values using relative colorimetry,
as defined by the ICC Specification.  This
means that the XYZ argument values taken by this method are represented
relative to the D50 white point of the CS_CIEXYZ color space.
This representation is useful in a two-step color conversion
process in which colors are transformed from an input color
space to CS_CIEXYZ and then to an output color space.  The color
values returned by this method are not those that would produce
the XYZ value passed to the method when measured by a colorimeter.
If you have XYZ values corresponding to measurements made using
current CIE recommended practices, they must be converted to D50
relative values before being passed to this method.
The paragraphs below explain this in more detail.
<p>
The ICC standard uses a device independent color space (DICS) as the
mechanism for converting color from one device to another device.  In
this architecture, colors are converted from the source device's color
space to the ICC DICS and then from the ICC DICS to the destination
device's color space.  The ICC standard defines device profiles which
contain transforms which will convert between a device's color space
and the ICC DICS.  The overall conversion of colors from a source
device to colors of a destination device is done by connecting the
device-to-DICS transform of the profile for the source device to the
DICS-to-device transform of the profile for the destination device.
For this reason, the ICC DICS is commonly referred to as the profile
connection space (PCS).  The color space used in the methods
toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC
Specification.  This is also the color space represented by
ColorSpace.CS_CIEXYZ.
<p>
The XYZ values of a color are often represented as relative to some
white point, so the actual meaning of the XYZ values cannot be known
without knowing the white point of those values.  This is known as
relative colorimetry.  The PCS uses a white point of D50, so the XYZ
values of the PCS are relative to D50.  For example, white in the PCS
will have the XYZ values of D50, which is defined to be X=.9642,
Y=1.000, and Z=0.8249.  This white point is commonly used for graphic
arts applications, but others are often used in other applications.
<p>
To quantify the color characteristics of a device such as a printer
or monitor, measurements of XYZ values for particular device colors
are typically made.  For purposes of this discussion, the term
device XYZ values is used to mean the XYZ values that would be
measured from device colors using current CIE recommended practices.
<p>
Converting between device XYZ values and the PCS XYZ values taken as
arguments by this method corresponds to converting between the device's
color space, as represented by CIE colorimetric values, and the PCS.
There are many factors involved in this process, some of which are quite
subtle.  The most important, however, is the adjustment made to account
for differences between the device's white point and the white point of
the PCS.  There are many techniques for doing this and it is the
subject of much current research and controversy.  Some commonly used
methods are XYZ scaling, the von Kries transform, and the Bradford
transform.  The proper method to use depends upon each particular
application.
<p>
The simplest method is XYZ scaling.  In this method each device XYZ
value is  converted to a PCS XYZ value by multiplying it by the ratio
of the PCS white point (D50) to the device white point.
<pre>

Xd, Yd, Zd are the device XYZ values
Xdw, Ydw, Zdw are the device XYZ white point values
Xp, Yp, Zp are the PCS XYZ values
Xd50, Yd50, Zd50 are the PCS XYZ white point values

Xp = Xd * (Xd50 / Xdw)
Yp = Yd * (Yd50 / Ydw)
Zp = Zd * (Zd50 / Zdw)

</pre>
<p>
Conversion from the PCS to the device would be done by inverting these
equations:
<pre>

Xd = Xp * (Xdw / Xd50)
Yd = Yp * (Ydw / Yd50)
Zd = Zp * (Zdw / Zd50)

</pre>
<p>
Note that the media white point tag in an ICC profile is not the same
as the device white point.  The media white point tag is expressed in
PCS values and is used to represent the difference between the XYZ of
device illuminant and the XYZ of the device media when measured under
that illuminant.  The device white point is expressed as the device
XYZ values corresponding to white displayed on the device.  For
example, displaying the RGB color (1.0, 1.0, 1.0) on an sRGB device
will result in a measured device XYZ value of D65.  This will not
be the same as the media white point tag XYZ value in the ICC
profile for an sRGB device.
<p>
@param colorvalue a float array with length of at least 3.
@return a float array with length equal to the number of
        components in this ColorSpace.
@throws ArrayIndexOutOfBoundsException if array length is not
at least 3.
"
      end

      operation 6380674 "getMinValue"
	public explicit_return_type "float"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum normalized color component value for the
specified component.  For TYPE_XYZ spaces, this method returns
minimum values of 0.0 for all components.  For TYPE_Lab spaces,
this method returns 0.0 for L and -128.0 for a and b components.
This is consistent with the encoding of the XYZ and Lab Profile
Connection Spaces in the ICC specification.  For all other types, this
method returns 0.0 for all components.  When using an ICC_ColorSpace
with a profile that requires different minimum component values,
it is necessary to subclass this class and override this method.
@param component The component index.
@return The minimum normalized component value.
@throws IllegalArgumentException if component is less than 0 or
        greater than numComponents - 1.
@since 1.4
"
      end

      operation 6380802 "getMaxValue"
	public explicit_return_type "float"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum normalized color component value for the
specified component.  For TYPE_XYZ spaces, this method returns
maximum values of 1.0 + (32767.0 / 32768.0) for all components.
For TYPE_Lab spaces,
this method returns 100.0 for L and 127.0 for a and b components.
This is consistent with the encoding of the XYZ and Lab Profile
Connection Spaces in the ICC specification.  For all other types, this
method returns 1.0 for all components.  When using an ICC_ColorSpace
with a profile that requires different maximum component values,
it is necessary to subclass this class and override this method.
@param component The component index.
@return The maximum normalized component value.
@throws IllegalArgumentException if component is less than 0 or
        greater than numComponents - 1.
@since 1.4
"
      end

      operation 6380930 "setMinMax"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6381058 "setComponentScaling"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 329218 "ICC_Profile"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of color profile data for device independent and
device dependent color spaces based on the International Color
Consortium Specification ICC.1:2001-12, File Format for Color Profiles,
(see <A href=\"http://www.color.org\"> http://www.color.org</A>).
<p>
An ICC_ColorSpace object can be constructed from an appropriate
ICC_Profile.
Typically, an ICC_ColorSpace would be associated with an ICC
Profile which is either an input, display, or output profile (see
the ICC specification).  There are also device link, abstract,
color space conversion, and named color profiles.  These are less
useful for tagging a color or image, but are useful for other
purposes (in particular device link profiles can provide improved
performance for converting from one device's color space to
another's).
<p>
ICC Profiles represent transformations from the color space of
the profile (e.g. a monitor) to a Profile Connection Space (PCS).
Profiles of interest for tagging images or colors have a PCS
which is one of the two specific device independent
spaces (one CIEXYZ space and one CIELab space) defined in the
ICC Profile Format Specification.  Most profiles of interest
either have invertible transformations or explicitly specify
transformations going both directions.
@see ICC_ColorSpace
"
      classrelation 2988802 // <realization>
	relation 2988802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2988802 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1443074 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3938515861990936766L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1443202 "cmmProfile"
	private explicit_type "Profile"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1443330 "deferralInfo"
	private explicit_type "ProfileDeferralInfo"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1443458 "profileActivator"
	private explicit_type "ProfileActivator"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2988930 // sRGBprofile (<unidirectional association>)
	relation 2988930 --->
	  a role_name "sRGBprofile" class_relation private
	    comment " Registry of singleton profile objects for specific color spaces
 defined in the ColorSpace class (e.g. CS_sRGB), see
 getInstance(int cspace) factory method.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2988930 // sRGBprofile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      classrelation 2989058 // XYZprofile (<unidirectional association>)
	relation 2989058 --->
	  a role_name "XYZprofile" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2989058 // XYZprofile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      classrelation 2989186 // PYCCprofile (<unidirectional association>)
	relation 2989186 --->
	  a role_name "PYCCprofile" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2989186 // PYCCprofile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      classrelation 2989314 // GRAYprofile (<unidirectional association>)
	relation 2989314 --->
	  a role_name "GRAYprofile" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2989314 // GRAYprofile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      classrelation 2989442 // LINEAR_RGBprofile (<unidirectional association>)
	relation 2989442 --->
	  a role_name "LINEAR_RGBprofile" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2989442 // LINEAR_RGBprofile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      attribute 1443586 "CLASS_INPUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is input.

"
      end

      attribute 1443714 "CLASS_DISPLAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is display.

"
      end

      attribute 1443842 "CLASS_OUTPUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is output.

"
      end

      attribute 1443970 "CLASS_DEVICELINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is device link.

"
      end

      attribute 1444098 "CLASS_COLORSPACECONVERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is color space conversion.

"
      end

      attribute 1444226 "CLASS_ABSTRACT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is abstract.

"
      end

      attribute 1444354 "CLASS_NAMEDCOLOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Profile class is named color.

"
      end

      attribute 1444482 "icSigXYZData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x58595A20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'XYZ '.

 'XYZ ' "
      end

      attribute 1444610 "icSigLabData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4C616220"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'Lab '.

 'Lab ' "
      end

      attribute 1444738 "icSigLuvData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4C757620"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'Luv '.

 'Luv ' "
      end

      attribute 1444866 "icSigYCbCrData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x59436272"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'YCbr'.

 'YCbr' "
      end

      attribute 1444994 "icSigYxyData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x59787920"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'Yxy '.

 'Yxy ' "
      end

      attribute 1445122 "icSigRgbData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x52474220"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'RGB '.

 'RGB ' "
      end

      attribute 1445250 "icSigGrayData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x47524159"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'GRAY'.

 'GRAY' "
      end

      attribute 1445378 "icSigHsvData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x48535620"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'HSV'.

 'HSV ' "
      end

      attribute 1445506 "icSigHlsData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x484C5320"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'HLS'.

 'HLS ' "
      end

      attribute 1445634 "icSigCmykData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x434D594B"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'CMYK'.

 'CMYK' "
      end

      attribute 1445762 "icSigCmyData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x434D5920"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'CMY '.

 'CMY ' "
      end

      attribute 1445890 "icSigSpace2CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x32434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '2CLR'.

 '2CLR' "
      end

      attribute 1446018 "icSigSpace3CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x33434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '3CLR'.

 '3CLR' "
      end

      attribute 1446146 "icSigSpace4CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x34434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '4CLR'.

 '4CLR' "
      end

      attribute 1446274 "icSigSpace5CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x35434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '5CLR'.

 '5CLR' "
      end

      attribute 1446402 "icSigSpace6CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x36434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '6CLR'.

 '6CLR' "
      end

      attribute 1446530 "icSigSpace7CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x37434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '7CLR'.

 '7CLR' "
      end

      attribute 1446658 "icSigSpace8CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x38434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '8CLR'.

 '8CLR' "
      end

      attribute 1446786 "icSigSpace9CLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x39434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: '9CLR'.

 '9CLR' "
      end

      attribute 1446914 "icSigSpaceACLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x41434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'ACLR'.

 'ACLR' "
      end

      attribute 1447042 "icSigSpaceBCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'BCLR'.

 'BCLR' "
      end

      attribute 1447170 "icSigSpaceCCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x43434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'CCLR'.

 'CCLR' "
      end

      attribute 1447298 "icSigSpaceDCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x44434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'DCLR'.

 'DCLR' "
      end

      attribute 1447426 "icSigSpaceECLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x45434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'ECLR'.

 'ECLR' "
      end

      attribute 1447554 "icSigSpaceFCLR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x46434C52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Color Space Type Signature: 'FCLR'.

 'FCLR' "
      end

      attribute 1447682 "icSigInputClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x73636E72"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'scnr'.

 'scnr' "
      end

      attribute 1447810 "icSigDisplayClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6D6E7472"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'mntr'.

 'mntr' "
      end

      attribute 1447938 "icSigOutputClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70727472"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'prtr'.

 'prtr' "
      end

      attribute 1448066 "icSigLinkClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6C696E6B"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'link'.

 'link' "
      end

      attribute 1448194 "icSigAbstractClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x61627374"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'abst'.

 'abst' "
      end

      attribute 1448322 "icSigColorSpaceClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x73706163"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'spac'.

 'spac' "
      end

      attribute 1448450 "icSigNamedColorClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6e6d636c"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Class Signature: 'nmcl'.

 'nmcl' "
      end

      attribute 1448578 "icPerceptual"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: Perceptual.

"
      end

      attribute 1448706 "icRelativeColorimetric"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: RelativeColorimetric.

"
      end

      attribute 1448834 "icMediaRelativeColorimetric"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: Media-RelativeColorimetric.
@since 1.5

"
      end

      attribute 1448962 "icSaturation"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: Saturation.

"
      end

      attribute 1449090 "icAbsoluteColorimetric"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: AbsoluteColorimetric.

"
      end

      attribute 1449218 "icICCAbsoluteColorimetric"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Rendering Intent: ICC-AbsoluteColorimetric.
@since 1.5

"
      end

      attribute 1449346 "icSigHead"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x68656164"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'head' - special.

 'head' - special "
      end

      attribute 1449474 "icSigAToB0Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x41324230"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'A2B0'.

 'A2B0' "
      end

      attribute 1449602 "icSigAToB1Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x41324231"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'A2B1'.

 'A2B1' "
      end

      attribute 1449730 "icSigAToB2Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x41324232"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'A2B2'.

 'A2B2' "
      end

      attribute 1449858 "icSigBlueColorantTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6258595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'bXYZ'.

 'bXYZ' "
      end

      attribute 1449986 "icSigBlueMatrixColumnTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6258595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'bXYZ'.
@since 1.5

 'bXYZ' "
      end

      attribute 1450114 "icSigBlueTRCTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x62545243"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'bTRC'.

 'bTRC' "
      end

      attribute 1450242 "icSigBToA0Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42324130"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'B2A0'.

 'B2A0' "
      end

      attribute 1450370 "icSigBToA1Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42324131"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'B2A1'.

 'B2A1' "
      end

      attribute 1450498 "icSigBToA2Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42324132"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'B2A2'.

 'B2A2' "
      end

      attribute 1450626 "icSigCalibrationDateTimeTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x63616C74"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'calt'.

"
      end

      attribute 1450754 "icSigCharTargetTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x74617267"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 'calt' 

ICC Profile Tag Signature: 'targ'.

 'targ' "
      end

      attribute 1450882 "icSigCopyrightTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x63707274"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'cprt'.

 'cprt' "
      end

      attribute 1451010 "icSigCrdInfoTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x63726469"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'crdi'.

 'crdi' "
      end

      attribute 1451138 "icSigDeviceMfgDescTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x646D6E64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'dmnd'.

 'dmnd' "
      end

      attribute 1451266 "icSigDeviceModelDescTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x646D6464"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'dmdd'.

 'dmdd' "
      end

      attribute 1451394 "icSigDeviceSettingsTag"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0x64657673"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'devs'.

 'devs' "
      end

      attribute 1451522 "icSigGamutTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x67616D74"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'gamt'.

 'gamt' "
      end

      attribute 1451650 "icSigGrayTRCTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6b545243"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'kTRC'.

 'kTRC' "
      end

      attribute 1451778 "icSigGreenColorantTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6758595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'gXYZ'.

 'gXYZ' "
      end

      attribute 1451906 "icSigGreenMatrixColumnTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6758595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'gXYZ'.
@since 1.5

 'gXYZ' "
      end

      attribute 1452034 "icSigGreenTRCTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x67545243"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'gTRC'.

 'gTRC' "
      end

      attribute 1452162 "icSigLuminanceTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6C756d69"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'lumi'.

 'lumi' "
      end

      attribute 1452290 "icSigMeasurementTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6D656173"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'meas'.

 'meas' "
      end

      attribute 1452418 "icSigMediaBlackPointTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x626B7074"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'bkpt'.

 'bkpt' "
      end

      attribute 1452546 "icSigMediaWhitePointTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x77747074"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'wtpt'.

 'wtpt' "
      end

      attribute 1452674 "icSigNamedColor2Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6E636C32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'ncl2'.

 'ncl2' "
      end

      attribute 1452802 "icSigOutputResponseTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x72657370"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'resp'.

 'resp' "
      end

      attribute 1452930 "icSigPreview0Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70726530"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'pre0'.

 'pre0' "
      end

      attribute 1453058 "icSigPreview1Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70726531"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'pre1'.

 'pre1' "
      end

      attribute 1453186 "icSigPreview2Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70726532"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'pre2'.

 'pre2' "
      end

      attribute 1453314 "icSigProfileDescriptionTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x64657363"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'desc'.

"
      end

      attribute 1453442 "icSigProfileSequenceDescTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70736571"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 'desc' 

ICC Profile Tag Signature: 'pseq'.

"
      end

      attribute 1453570 "icSigPs2CRD0Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70736430"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 'pseq' 

ICC Profile Tag Signature: 'psd0'.

 'psd0' "
      end

      attribute 1453698 "icSigPs2CRD1Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70736431"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'psd1'.

 'psd1' "
      end

      attribute 1453826 "icSigPs2CRD2Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70736432"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'psd2'.

 'psd2' "
      end

      attribute 1453954 "icSigPs2CRD3Tag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70736433"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'psd3'.

 'psd3' "
      end

      attribute 1454082 "icSigPs2CSATag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70733273"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'ps2s'.

 'ps2s' "
      end

      attribute 1454210 "icSigPs2RenderingIntentTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70733269"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'ps2i'.

"
      end

      attribute 1454338 "icSigRedColorantTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7258595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 'ps2i' 

ICC Profile Tag Signature: 'rXYZ'.

 'rXYZ' "
      end

      attribute 1454466 "icSigRedMatrixColumnTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7258595A"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'rXYZ'.
@since 1.5

 'rXYZ' "
      end

      attribute 1454594 "icSigRedTRCTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x72545243"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'rTRC'.

 'rTRC' "
      end

      attribute 1454722 "icSigScreeningDescTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x73637264"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'scrd'.

 'scrd' "
      end

      attribute 1454850 "icSigScreeningTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7363726E"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'scrn'.

 'scrn' "
      end

      attribute 1454978 "icSigTechnologyTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x74656368"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'tech'.

 'tech' "
      end

      attribute 1455106 "icSigUcrBgTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x62666420"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'bfd '.

 'bfd ' "
      end

      attribute 1455234 "icSigViewingCondDescTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x76756564"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'vued'.

 'vued' "
      end

      attribute 1455362 "icSigViewingConditionsTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x76696577"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'view'.

 'view' "
      end

      attribute 1455490 "icSigChromaticityTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6368726d"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'chrm'.

 'chrm' "
      end

      attribute 1455618 "icSigChromaticAdaptationTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x63686164"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'chad'.
@since 1.5

 'chad' "
      end

      attribute 1455746 "icSigColorantOrderTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x636C726F"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'clro'.
@since 1.5

 'clro' "
      end

      attribute 1455874 "icSigColorantTableTag"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x636C7274"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Tag Signature: 'clrt'.
@since 1.5

 'clrt' "
      end

      attribute 1456002 "icHdrSize"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: profile size in bytes.

 Profile size in bytes "
      end

      attribute 1456130 "icHdrCmmId"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: CMM for this profile.

 CMM for this profile "
      end

      attribute 1456258 "icHdrVersion"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: format version number.

 Format version number "
      end

      attribute 1456386 "icHdrDeviceClass"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: type of profile.

 Type of profile "
      end

      attribute 1456514 "icHdrColorSpace"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: color space of data.

 Color space of data "
      end

      attribute 1456642 "icHdrPcs"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: PCS - XYZ or Lab only.

 PCS - XYZ or Lab only "
      end

      attribute 1456770 "icHdrDate"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: date profile was created.

 Date profile was created "
      end

      attribute 1456898 "icHdrMagic"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: icMagicNumber.

 icMagicNumber "
      end

      attribute 1457026 "icHdrPlatform"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: primary platform.

 Primary Platform "
      end

      attribute 1457154 "icHdrFlags"
	class_attribute const_attribute public explicit_type "int"
	init_value " 44"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: various bit settings.

 Various bit settings "
      end

      attribute 1457282 "icHdrManufacturer"
	class_attribute const_attribute public explicit_type "int"
	init_value " 48"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: device manufacturer.

 Device manufacturer "
      end

      attribute 1457410 "icHdrModel"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: device model number.

 Device model number "
      end

      attribute 1457538 "icHdrAttributes"
	class_attribute const_attribute public explicit_type "int"
	init_value " 56"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: device attributes.

 Device attributes "
      end

      attribute 1457666 "icHdrRenderingIntent"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: rendering intent.

 Rendering intent "
      end

      attribute 1457794 "icHdrIlluminant"
	class_attribute const_attribute public explicit_type "int"
	init_value " 68"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: profile illuminant.

 Profile illuminant "
      end

      attribute 1457922 "icHdrCreator"
	class_attribute const_attribute public explicit_type "int"
	init_value " 80"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: profile creator.

 Profile creator "
      end

      attribute 1458050 "icHdrProfileID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 84"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Header Location: profile's ID.
@since 1.5

 Profile's ID "
      end

      attribute 1458178 "icTagType"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Constant: tag type signaturE.

 tag type signature "
      end

      attribute 1458306 "icTagReserved"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Constant: reserved.

 reserved "
      end

      attribute 1458434 "icCurveCount"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Constant: curveType count.

 curveType count "
      end

      attribute 1458562 "icCurveData"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Constant: curveType data.

 curveType data "
      end

      attribute 1458690 "icXYZNumberX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ICC Profile Constant: XYZNumber X.

 XYZNumber X "
      end

      operation 6381186 "ICC_Profile"
	package explicit_return_type ""
	nparams 1
	  param inout name "p" explicit_type "Profile"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile object with a given ID.
"
      end

      operation 6381314 "ICC_Profile"
	package explicit_return_type ""
	nparams 1
	  param inout name "pdi" explicit_type "ProfileDeferralInfo"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile object whose loading will be deferred.
The ID will be 0 until the profile is loaded.
"
      end

      operation 6381442 "finalize"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Frees the resources associated with an ICC_Profile object.
"
      end

      operation 6381570 "getInstance"
	class_operation public return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile object corresponding to the data in
a byte array.  Throws an IllegalArgumentException if the data
does not correspond to a valid ICC Profile.
@param data the specified ICC Profile data
@return an <code>ICC_Profile</code> object corresponding to
         the data in the specified <code>data</code> array.
"
      end

      operation 6381698 "getInstance"
	class_operation public return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param in name "cspace" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile corresponding to one of the specific color
spaces defined by the ColorSpace class (for example CS_sRGB).
Throws an IllegalArgumentException if cspace is not one of the
defined color spaces.

@param cspace the type of color space to create a profile for.
The specified type is one of the color
space constants defined in the  <CODE>ColorSpace</CODE> class.

@return an <code>ICC_Profile</code> object corresponding to
         the specified <code>ColorSpace</code> type.
@exception IllegalArgumentException If <CODE>cspace</CODE> is not
one of the predefined color space types.
"
      end

      operation 6381826 "getStandardProfile"
	class_operation private return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param in name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This asserts system privileges, so is used only for the
standard profiles.
"
      end

      operation 6381954 "getInstance"
	class_operation public return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile corresponding to the data in a file.
fileName may be an absolute or a relative file specification.
Relative file names are looked for in several places: first, relative
to any directories specified by the java.iccprofile.path property;
second, relative to any directories specified by the java.class.path
property; finally, in a directory used to store profiles always
available, such as the profile for sRGB.  Built-in profiles use .pf as
the file name extension for profiles, e.g. sRGB.pf.
This method throws an IOException if the specified file cannot be
opened or if an I/O error occurs while reading the file.  It throws
an IllegalArgumentException if the file does not contain valid ICC
Profile data.
@param fileName The file that contains the data for the profile.

@return an <code>ICC_Profile</code> object corresponding to
         the data in the specified file.
@exception IOException If the specified file cannot be opened or
an I/O error occurs while reading the file.

@exception IllegalArgumentException If the file does not
contain valid ICC Profile data.

@exception SecurityException If a security manager is installed
and it does not permit read access to the given file.
"
      end

      operation 6382082 "getInstance"
	class_operation public return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param inout name "s" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile corresponding to the data in an InputStream.
This method throws an IllegalArgumentException if the stream does not
contain valid ICC Profile data.  It throws an IOException if an I/O
error occurs while reading the stream.
@param s The input stream from which to read the profile data.

@return an <CODE>ICC_Profile</CODE> object corresponding to the
    data in the specified <code>InputStream</code>.

@exception IOException If an I/O error occurs while reading the stream.

@exception IllegalArgumentException If the stream does not
contain valid ICC Profile data.
"
      end

      operation 6382210 "getProfileDataFromStream"
	class_operation package explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 146434 // InputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6382338 "getDeferredInstance"
	class_operation package return_type class_ref 329218 // ICC_Profile
	nparams 1
	  param inout name "pdi" explicit_type "ProfileDeferralInfo"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ICC_Profile for which the actual loading of the
profile data from a file and the initialization of the CMM should
be deferred as long as possible.
Deferral is only used for standard profiles.
If deferring is disabled, then getStandardProfile() ensures
that all of the appropriate access privileges are granted
when loading this profile.
If deferring is enabled, then the deferred activation
code will take care of access privileges.
@see activateDeferredProfile()
"
      end

      operation 6382466 "activateDeferredProfile"
	package explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 883074 // ProfileDataException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6382594 "getMajorVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns profile major version.
@return  The major version of the profile.
"
      end

      operation 6382722 "getMinorVersion"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns profile minor version.
@return The minor version of the profile.
"
      end

      operation 6382850 "getProfileClass"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the profile class.
@return One of the predefined profile class constants.
"
      end

      operation 6382978 "getColorSpaceType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color space type.  Returns one of the color space type
constants defined by the ColorSpace class.  This is the
\"input\" color space of the profile.  The type defines the
number of components of the color space and the interpretation,
e.g. TYPE_RGB identifies a color space with three components - red,
green, and blue.  It does not define the particular color
characteristics of the space, e.g. the chromaticities of the
primaries.
@return One of the color space type constants defined in the
<CODE>ColorSpace</CODE> class.
"
      end

      operation 6383106 "getColorSpaceType"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "p" explicit_type "Profile"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6383234 "getPCSType"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the color space type of the Profile Connection Space (PCS).
Returns one of the color space type constants defined by the
ColorSpace class.  This is the \"output\" color space of the
profile.  For an input, display, or output profile useful
for tagging colors or images, this will be either TYPE_XYZ or
TYPE_Lab and should be interpreted as the corresponding specific
color space defined in the ICC specification.  For a device
link profile, this could be any of the color space type constants.
@return One of the color space type constants defined in the
<CODE>ColorSpace</CODE> class.
"
      end

      operation 6383362 "getPCSType"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "p" explicit_type "Profile"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6383490 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write this ICC_Profile to a file.

@param fileName The file to write the profile data to.

@exception IOException If the file cannot be opened for writing
or an I/O error occurs while writing to the file.
"
      end

      operation 6383618 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 151298 // OutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write this ICC_Profile to an OutputStream.

@param s The stream to write the profile data to.

@exception IOException If an I/O error occurs while writing to the
stream.
"
      end

      operation 6383746 "getData"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a byte array corresponding to the data of this ICC_Profile.
@return A byte array that contains the profile data.
@see #setData(int, byte[])
"
      end

      operation 6383874 "getData"
	public explicit_return_type "byte"
	nparams 1
	  param in name "tagSignature" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a particular tagged data element from the profile as
a byte array.  Elements are identified by signatures
as defined in the ICC specification.  The signature
icSigHead can be used to get the header.  This method is useful
for advanced applets or applications which need to access
profile data directly.

@param tagSignature The ICC tag signature for the data element you
want to get.

@return A byte array that contains the tagged data element. Returns
<code>null</code> if the specified tag doesn't exist.
@see #setData(int, byte[])
"
      end

      operation 6384002 "getData"
	class_operation package explicit_return_type "byte"
	nparams 2
	  param inout name "p" explicit_type "Profile"
	  param in name "tagSignature" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6384130 "setData"
	public explicit_return_type "void"
	nparams 2
	  param in name "tagSignature" explicit_type "int"
	  param inout name "tagData" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a particular tagged data element in the profile from
a byte array. The array should contain data in a format, corresponded
to the {@code tagSignature} as defined in the ICC specification, section 10.
This method is useful for advanced applets or applications which need to
access profile data directly.

@param tagSignature The ICC tag signature for the data element
you want to set.
@param tagData the data to set for the specified tag signature
@throws IllegalArgumentException if {@code tagSignature} is not a signature
        as defined in the ICC specification.
@throws IllegalArgumentException if a content of the {@code tagData}
        array can not be interpreted as valid tag data, corresponding
        to the {@code tagSignature}.
@see #getData
"
      end

      operation 6384258 "setRenderingIntent"
	package explicit_return_type "void"
	nparams 1
	  param in name "renderingIntent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the rendering intent of the profile.
This is used to select the proper transform from a profile that
has multiple transforms.
"
      end

      operation 6384386 "getRenderingIntent"
	package explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rendering intent of the profile.
This is used to select the proper transform from a profile that
has multiple transforms.  It is typically set in a source profile
to select a transform from an output profile.
"
      end

      operation 6384514 "getNumComponents"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of color components in the \"input\" color
space of this profile.  For example if the color space type
of this profile is TYPE_RGB, then this method will return 3.

@return The number of color components in the profile's input
color space.

@throws ProfileDataException if color space is in the profile
        is invalid
"
      end

      operation 6384642 "getMediaWhitePoint"
	package explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a float array of length 3 containing the X, Y, and Z
components of the mediaWhitePointTag in the ICC profile.
"
      end

      operation 6384770 "getXYZTag"
	package explicit_return_type "float"
	nparams 1
	  param in name "theTagSignature" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a float array of length 3 containing the X, Y, and Z
components encoded in an XYZType tag.
"
      end

      operation 6384898 "getGamma"
	package explicit_return_type "float"
	nparams 1
	  param in name "theTagSignature" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a gamma value representing a tone reproduction
curve (TRC).  If the profile represents the TRC as a table rather
than a single gamma value, then an exception is thrown.  In this
case the actual table can be obtained via getTRC().
theTagSignature should be one of icSigGrayTRCTag, icSigRedTRCTag,
icSigGreenTRCTag, or icSigBlueTRCTag.
@return the gamma value as a float.
@exception ProfileDataException if the profile does not specify
           the TRC as a single gamma value.
"
      end

      operation 6385026 "getTRC"
	package explicit_return_type "short"
	nparams 1
	  param in name "theTagSignature" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the TRC as an array of shorts.  If the profile has
specified the TRC as linear (gamma = 1.0) or as a simple gamma
value, this method throws an exception, and the getGamma() method
should be used to get the gamma value.  Otherwise the short array
returned here represents a lookup table where the input Gray value
is conceptually in the range [0.0, 1.0].  Value 0.0 maps
to array index 0 and value 1.0 maps to array index length-1.
Interpolation may be used to generate output values for
input values which do not map exactly to an index in the
array.  Output values also map linearly to the range [0.0, 1.0].
Value 0.0 is represented by an array value of 0x0000 and
value 1.0 by 0xFFFF, i.e. the values are really unsigned
short values, although they are returned in a short array.
theTagSignature should be one of icSigGrayTRCTag, icSigRedTRCTag,
icSigGreenTRCTag, or icSigBlueTRCTag.
@return a short array representing the TRC.
@exception ProfileDataException if the profile does not specify
           the TRC as a table.
"
      end

      operation 6385154 "iccCStoJCS"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "theColorSpaceSig" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " convert an ICC color space signature into a Java color space type "
      end

      operation 6385282 "intFromBigEndian"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6385410 "intToBigEndian"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "value" explicit_type "int"
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6385538 "shortFromBigEndian"
	class_operation package explicit_return_type "short"
	nparams 2
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6385666 "shortToBigEndian"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "value" explicit_type "short"
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6385794 "getProfileFile"
	class_operation private return_type class_ref 131970 // File
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "fileName may be an absolute or a relative file specification.
Relative file names are looked for in several places: first, relative
to any directories specified by the java.iccprofile.path property;
second, relative to any directories specified by the java.class.path
property; finally, in a directory used to store profiles always
available, such as a profile for sRGB.  Built-in profiles use .pf as
the file name extension for profiles, e.g. sRGB.pf.
"
      end

      operation 6385922 "getStandardProfileFile"
	class_operation private return_type class_ref 131970 // File
	nparams 1
	  param inout name "fileName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a file object corresponding to a built-in profile
specified by fileName.
If there is no built-in profile with such name, then the method
returns null.
"
      end

      operation 6386050 "isChildOf"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "f" type class_ref 131970 // File
	  param inout name "dirName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether given file resides inside give directory.
"
      end

      operation 6386178 "standardProfileExists"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "fileName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether built-in profile specified by fileName exists.
"
      end

      attribute 1458818 "iccProfileSerializedDataVersion"
	private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Serialization support.

Directly deserialized profiles are useless since they are not
registered with CMM.  We don't allow constructor to be called
directly and instead have clients to call one of getInstance
factory methods that will register the profile with CMM.  For
deserialization we implement readResolve method that will
resolve the bogus deserialized profile object with one obtained
with getInstance as well.

There're two primary factory methods for construction of ICC
profiles: getInstance(int cspace) and getInstance(byte[] data).
This implementation of ICC_Profile uses the former to return a
cached singleton profile object, other implementations will
likely use this technique too.  To preserve the singleton
pattern across serialization we serialize cached singleton
profiles in such a way that deserializing VM could call
getInstance(int cspace) method that will resolve deserialized
object into the corresponding singleton as well.

Since the singletons are private to ICC_Profile the readResolve
method have to be `protected' instead of `private' so that
singletons that are instances of subclasses of ICC_Profile
could be correctly deserialized.


Version of the format of additional serialized data in the
stream.  Version&nbsp;<code>1</code> corresponds to Java&nbsp;2
Platform,&nbsp;v1.3.
@since 1.3
@serial

"
      end

      operation 6386306 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes default serializable fields to the stream.  Writes a
string and an array of bytes to the stream as additional data.

@param s stream used for serialization.
@throws IOException
    thrown by <code>ObjectInputStream</code>.
@serialData
    The <code>String</code> is the name of one of
    <code>CS_<var>*</var></code> constants defined in the
    {@link ColorSpace} class if the profile object is a profile
    for a predefined color space (for example
    <code>\"CS_sRGB\"</code>).  The string is <code>null</code>
    otherwise.
    <p>
    The <code>byte[]</code> array is the profile data for the
    profile.  For predefined color spaces <code>null</code> is
    written instead of the profile data.  If in the future
    versions of Java API new predefined color spaces will be
    added, future versions of this class may choose to write
    for new predefined color spaces not only the color space
    name, but the profile data as well so that older versions
    could still deserialize the object.
"
      end

      classrelation 2989570 // resolvedDeserializedProfile (<unidirectional association>)
	relation 2989570 --->
	  a role_name "resolvedDeserializedProfile" private
	    comment " Temporary storage used by readObject to store resolved profile
 (obtained with getInstance) for readResolve to return.
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2989570 // resolvedDeserializedProfile (<unidirectional association>)
	  b parent class_ref 329218 // ICC_Profile
      end

      operation 6386434 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads default serializable fields from the stream.  Reads from
the stream a string and an array of bytes as additional data.

@param s stream used for deserialization.
@throws IOException
    thrown by <code>ObjectInputStream</code>.
@throws ClassNotFoundException
    thrown by <code>ObjectInputStream</code>.
@serialData
    The <code>String</code> is the name of one of
    <code>CS_<var>*</var></code> constants defined in the
    {@link ColorSpace} class if the profile object is a profile
    for a predefined color space (for example
    <code>\"CS_sRGB\"</code>).  The string is <code>null</code>
    otherwise.
    <p>
    The <code>byte[]</code> array is the profile data for the
    profile.  It will usually be <code>null</code> for the
    predefined profiles.
    <p>
    If the string is recognized as a constant name for
    predefined color space the object will be resolved into
    profile obtained with
    <code>getInstance(int&nbsp;cspace)</code> and the profile
    data are ignored.  Otherwise the object will be resolved
    into profile obtained with
    <code>getInstance(byte[]&nbsp;data)</code>.
@see #readResolve()
@see #getInstance(int)
@see #getInstance(byte[])
"
      end

      operation 6386562 "readResolve"
	protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 261506 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves instances being deserialized into instances registered
with CMM.
@return ICC_Profile object for profile registered with CMM.
@throws ObjectStreamException
    never thrown, but mandated by the serialization spec.
@since 1.3
"
      end
    end

    class 882946 "CMMException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown if the native CMM returns an error.
"
      classrelation 2988418 // <generalisation>
	relation 2988418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2988418 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 6379778 "CMMException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a CMMException with the specified detail message.
 @param s the specified detail message
"
      end
    end

    class 883074 "ProfileDataException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown when an error occurs in accessing or
processing an ICC_Profile object.
"
      classrelation 2989954 // <generalisation>
	relation 2989954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2989954 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 6388098 "ProfileDataException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a ProfileDataException with the specified detail message.
 @param s the specified detail message
"
      end
    end

    class 883202 "ICC_ProfileGray"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
A subclass of the ICC_Profile class which represents profiles
which meet the following criteria: the color space type of the
profile is TYPE_GRAY and the profile includes the grayTRCTag and
mediaWhitePointTag tags.  Examples of this kind of profile are
monochrome input profiles, monochrome display profiles, and
monochrome output profiles.  The getInstance methods in the
ICC_Profile class will
return an ICC_ProfileGray object when the above conditions are
met.  The advantage of this class is that it provides a lookup
table that Java or native methods may be able to use directly to
optimize color conversion in some cases.
<p>
To transform from a GRAY device profile color space to the CIEXYZ Profile
Connection Space, the device gray component is transformed by
a lookup through the tone reproduction curve (TRC).  The result is
treated as the achromatic component of the PCS.
<pre>

&nbsp;               PCSY = grayTRC[deviceGray]

</pre>
The inverse transform is done by converting the PCS Y components to
device Gray via the inverse of the grayTRC.
"
      classrelation 2989698 // <generalisation>
	relation 2989698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2989698 // <generalisation>
	  b parent class_ref 329218 // ICC_Profile
      end

      attribute 1458946 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1124721290732002649L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6386690 "ICC_ProfileGray"
	package explicit_return_type ""
	nparams 1
	  param inout name "p" explicit_type "Profile"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new ICC_ProfileGray from a CMM ID.
"
      end

      operation 6386818 "ICC_ProfileGray"
	package explicit_return_type ""
	nparams 1
	  param inout name "pdi" explicit_type "ProfileDeferralInfo"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new ICC_ProfileGray from a ProfileDeferralInfo object.
"
      end

      operation 6386946 "getMediaWhitePoint"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a float array of length 3 containing the X, Y, and Z
components of the mediaWhitePointTag in the ICC profile.
@return an array containing the components of the
mediaWhitePointTag in the ICC profile.
"
      end

      operation 6387074 "getGamma"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a gamma value representing the tone reproduction
curve (TRC).  If the profile represents the TRC as a table rather
than a single gamma value, then an exception is thrown.  In this
case the actual table can be obtained via getTRC().  When
using a gamma value, the PCS Y component is computed as follows:
<pre>

&nbsp;                         gamma
&nbsp;        PCSY = deviceGray

</pre>
@return the gamma value as a float.
@exception ProfileDataException if the profile does not specify
           the TRC as a single gamma value.
"
      end

      operation 6387202 "getTRC"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the TRC as an array of shorts.  If the profile has
specified the TRC as linear (gamma = 1.0) or as a simple gamma
value, this method throws an exception, and the getGamma() method
should be used to get the gamma value.  Otherwise the short array
returned here represents a lookup table where the input Gray value
is conceptually in the range [0.0, 1.0].  Value 0.0 maps
to array index 0 and value 1.0 maps to array index length-1.
Interpolation may be used to generate output values for
input values which do not map exactly to an index in the
array.  Output values also map linearly to the range [0.0, 1.0].
Value 0.0 is represented by an array value of 0x0000 and
value 1.0 by 0xFFFF, i.e. the values are really unsigned
short values, although they are returned in a short array.
@return a short array representing the TRC.
@exception ProfileDataException if the profile does not specify
           the TRC as a table.
"
      end
    end

    class 883330 "ICC_ProfileRGB"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
The ICC_ProfileRGB class is a subclass of the ICC_Profile class
that represents profiles which meet the following criteria:
<ul>
<li>The profile's color space type is RGB.</li>
<li>The profile includes the <code>redColorantTag</code>,
<code>greenColorantTag</code>, <code>blueColorantTag</code>,
<code>redTRCTag</code>, <code>greenTRCTag</code>,
<code>blueTRCTag</code>, and <code>mediaWhitePointTag</code> tags.</li>
</ul>
The <code>ICC_Profile</code> <code>getInstance</code> method will
return an <code>ICC_ProfileRGB</code> object when these conditions are met.
Three-component, matrix-based input profiles and RGB display profiles are
examples of this type of profile.
<p>
This profile class provides color transform matrices and lookup tables
that Java or native methods can use directly to
optimize color conversion in some cases.
<p>
To transform from a device profile color space to the CIEXYZ Profile
Connection Space, each device color component is first linearized by
a lookup through the corresponding tone reproduction curve (TRC).
The resulting linear RGB components are converted to the CIEXYZ PCS
using a a 3x3 matrix constructed from the RGB colorants.
<pre>

&nbsp;               linearR = redTRC[deviceR]

&nbsp;               linearG = greenTRC[deviceG]

&nbsp;               linearB = blueTRC[deviceB]

&nbsp; _      _       _                                             _   _         _
&nbsp;[  PCSX  ]     [  redColorantX  greenColorantX  blueColorantX  ] [  linearR  ]
&nbsp;[        ]     [                                               ] [           ]
&nbsp;[  PCSY  ]  =  [  redColorantY  greenColorantY  blueColorantY  ] [  linearG  ]
&nbsp;[        ]     [                                               ] [           ]
&nbsp;[_ PCSZ _]     [_ redColorantZ  greenColorantZ  blueColorantZ _] [_ linearB _]

</pre>
The inverse transform is performed by converting PCS XYZ components to linear
RGB components through the inverse of the above 3x3 matrix, and then converting
linear RGB to device RGB through inverses of the TRCs.
"
      classrelation 2989826 // <generalisation>
	relation 2989826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2989826 // <generalisation>
	  b parent class_ref 329218 // ICC_Profile
      end

      attribute 1459074 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8505067385152579334L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1459202 "REDCOMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to get a gamma value or TRC for the red component.

"
      end

      attribute 1459330 "GREENCOMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to get a gamma value or TRC for the green component.

"
      end

      attribute 1459458 "BLUECOMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Used to get a gamma value or TRC for the blue component.

"
      end

      operation 6387330 "ICC_ProfileRGB"
	package explicit_return_type ""
	nparams 1
	  param inout name "p" explicit_type "Profile"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an new <code>ICC_ProfileRGB</code> from a CMM ID.

@param p The CMM ID for the profile.

"
      end

      operation 6387458 "ICC_ProfileRGB"
	package explicit_return_type ""
	nparams 1
	  param inout name "pdi" explicit_type "ProfileDeferralInfo"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>ICC_ProfileRGB</code> from a
ProfileDeferralInfo object.

@param pdi
"
      end

      operation 6387586 "getMediaWhitePoint"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array that contains the components of the profile's
<CODE>mediaWhitePointTag</CODE>.

@return A 3-element <CODE>float</CODE> array containing the x, y,
and z components of the profile's <CODE>mediaWhitePointTag</CODE>.
"
      end

      operation 6387714 "getMatrix"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a 3x3 <CODE>float</CODE> matrix constructed from the
X, Y, and Z components of the profile's <CODE>redColorantTag</CODE>,
<CODE>greenColorantTag</CODE>, and <CODE>blueColorantTag</CODE>.
<p>
This matrix can be used for color transforms in the forward
direction of the profile--from the profile color space
to the CIEXYZ PCS.

@return A 3x3 <CODE>float</CODE> array that contains the x, y, and z
components of the profile's <CODE>redColorantTag</CODE>,
<CODE>greenColorantTag</CODE>, and <CODE>blueColorantTag</CODE>.
"
      end

      operation 6387842 "getGamma"
	public explicit_return_type "float"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a gamma value representing the tone reproduction curve
(TRC) for a particular component.  The component parameter
must be one of REDCOMPONENT, GREENCOMPONENT, or BLUECOMPONENT.
<p>
If the profile
represents the TRC for the corresponding component
as a table rather than a single gamma value, an
exception is thrown.  In this case the actual table
can be obtained through the {@link #getTRC(int)} method.
When using a gamma value,
the linear component (R, G, or B) is computed as follows:
<pre>

&nbsp;                                         gamma
&nbsp;        linearComponent = deviceComponent

</pre>
@param component The <CODE>ICC_ProfileRGB</CODE> constant that
represents the component whose TRC you want to retrieve
@return the gamma value as a float.
@exception ProfileDataException if the profile does not specify
           the corresponding TRC as a single gamma value.
"
      end

      operation 6387970 "getTRC"
	public explicit_return_type "short"
	nparams 1
	  param in name "component" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the TRC for a particular component as an array.
Component must be <code>REDCOMPONENT</code>,
<code>GREENCOMPONENT</code>, or <code>BLUECOMPONENT</code>.
Otherwise the returned array
represents a lookup table where the input component value
is conceptually in the range [0.0, 1.0].  Value 0.0 maps
to array index 0 and value 1.0 maps to array index length-1.
Interpolation might be used to generate output values for
input values that do not map exactly to an index in the
array.  Output values also map linearly to the range [0.0, 1.0].
Value 0.0 is represented by an array value of 0x0000 and
value 1.0 by 0xFFFF.  In other words, the values are really unsigned
<code>short</code> values even though they are returned in a
<code>short</code> array.

If the profile has specified the corresponding TRC
as linear (gamma = 1.0) or as a simple gamma value, this method
throws an exception.  In this case, the {@link #getGamma(int)}
method should be used to get the gamma value.

@param component The <CODE>ICC_ProfileRGB</CODE> constant that
represents the component whose TRC you want to retrieve:
<CODE>REDCOMPONENT</CODE>, <CODE>GREENCOMPONENT</CODE>, or
<CODE>BLUECOMPONENT</CODE>.

@return a short array representing the TRC.
@exception ProfileDataException if the profile does not specify
           the corresponding TRC as a table.
"
      end
    end
  end

  deploymentview 140290 "color"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 260226 "ColorSpace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
import sun.java2d.cmm.PCMM;
import sun.java2d.cmm.CMSManager;
${definition}"
      associated_elems
	class_ref 322178 // ColorSpace
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631298 "CMMException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 882946 // CMMException
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Created by gbp, October 25, 1997




*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631426 "ICC_ColorSpace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.java2d.cmm.ColorTransform;
import sun.java2d.cmm.CMSManager;
import sun.java2d.cmm.PCMM;
${definition}"
      associated_elems
	class_ref 328706 // ICC_ColorSpace
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631554 "ICC_Profile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.java2d.cmm.PCMM;
import sun.java2d.cmm.CMSManager;
import sun.java2d.cmm.Profile;
import sun.java2d.cmm.ProfileDataVerifier;
import sun.java2d.cmm.ProfileDeferralMgr;
import sun.java2d.cmm.ProfileDeferralInfo;
import sun.java2d.cmm.ProfileActivator;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamException;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.StringTokenizer;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_elems
	class_ref 329218 // ICC_Profile
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631682 "ICC_ProfileGray"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.java2d.cmm.Profile;
import sun.java2d.cmm.ProfileDeferralInfo;
${definition}"
      associated_elems
	class_ref 883202 // ICC_ProfileGray
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631810 "ICC_ProfileRGB"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.java2d.cmm.Profile;
import sun.java2d.cmm.ProfileDeferralInfo;
${definition}"
      associated_elems
	class_ref 883330 // ICC_ProfileRGB
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















*********************************************************************
*********************************************************************
*********************************************************************
** COPYRIGHT (c) Eastman Kodak Company, 1997                      ***
** As  an unpublished  work pursuant to Title 17 of the United    ***
** States Code.  All rights reserved.                             ***
*********************************************************************
*********************************************************************
********************************************************************"
    end

    artifact 631938 "ProfileDataException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 883074 // ProfileDataException
      end
      comment "Copyright (c) 1997, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
