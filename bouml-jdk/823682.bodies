class XStringForChars
!!!5938562.java!!!	XStringForChars(inout val : char [[]], in start : int, in length : int)
    super(val);
    m_start = start;
    m_length = length;
    if(null == val)
      throw new IllegalArgumentException(
                          XSLMessages.createXPATHMessage(XPATHErrorResources.ER_FASTSTRINGBUFFER_CANNOT_BE_NULL, null)); //"The FastStringBuffer argument can not be null!!");
!!!5938690.java!!!	XStringForChars(inout val : String)
    super(val);
    throw new IllegalArgumentException(
                      XSLMessages.createXPATHMessage(XPATHErrorResources.ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING, null)); //"XStringForChars can not take a string for an argument!");
!!!5938818.java!!!	fsb() : FastStringBuffer
    throw new RuntimeException(XSLMessages.createXPATHMessage(XPATHErrorResources.ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS, null)); //"fsb() not supported for XStringForChars!");
!!!5938946.java!!!	appendToFsb(inout fsb : FastStringBuffer) : void
    fsb.append((char[])m_obj, m_start, m_length);
!!!5939074.java!!!	hasString() : boolean
    return (null != m_strCache);
!!!5939202.java!!!	str() : String
    if(null == m_strCache)
      m_strCache = new String((char[])m_obj, m_start, m_length);

    return m_strCache;
!!!5939330.java!!!	object() : Object
    return str();
!!!5939458.java!!!	dispatchCharactersEvents(inout ch : ContentHandler) : void
    ch.characters((char[])m_obj, m_start, m_length);
!!!5939586.java!!!	dispatchAsComment(inout lh : LexicalHandler) : void
    lh.comment((char[])m_obj, m_start, m_length);
!!!5939714.java!!!	length() : int
    return m_length;
!!!5939842.java!!!	charAt(in index : int) : char
    return ((char[])m_obj)[index+m_start];
!!!5939970.java!!!	getChars(in srcBegin : int, in srcEnd : int, inout dst : char [[]], in dstBegin : int) : void
    System.arraycopy((char[])m_obj, m_start+srcBegin, dst, dstBegin, srcEnd);
