class AscendingSubMap
!!!8962690.java!!!	AscendingSubMap(inout m : TreeMap, inout fromStart : boolean, inout lo : K, inout loInclusive : boolean, inout toEnd : boolean, inout hi : K, inout hiInclusive : boolean)
            super(m, fromStart, lo, loInclusive, toEnd, hi, hiInclusive);
!!!8962818.java!!!	comparator() : Comparator
            return m.comparator();
!!!8962946.java!!!	subMap(inout fromKey : K, inout fromInclusive : boolean, inout toKey : K, inout toInclusive : boolean) : NavigableMap
            if (!inRange(fromKey, fromInclusive))
                throw new IllegalArgumentException("fromKey out of range");
            if (!inRange(toKey, toInclusive))
                throw new IllegalArgumentException("toKey out of range");
            return new AscendingSubMap<>(m,
                                         false, fromKey, fromInclusive,
                                         false, toKey,   toInclusive);
!!!8963074.java!!!	headMap(inout toKey : K, inout inclusive : boolean) : NavigableMap
            if (!inRange(toKey, inclusive))
                throw new IllegalArgumentException("toKey out of range");
            return new AscendingSubMap<>(m,
                                         fromStart, lo,    loInclusive,
                                         false,     toKey, inclusive);
!!!8963202.java!!!	tailMap(inout fromKey : K, inout inclusive : boolean) : NavigableMap
            if (!inRange(fromKey, inclusive))
                throw new IllegalArgumentException("fromKey out of range");
            return new AscendingSubMap<>(m,
                                         false, fromKey, inclusive,
                                         toEnd, hi,      hiInclusive);
!!!8963330.java!!!	descendingMap() : NavigableMap
            NavigableMap<K,V> mv = descendingMapView;
            return (mv != null) ? mv :
                (descendingMapView =
                 new DescendingSubMap<>(m,
                                        fromStart, lo, loInclusive,
                                        toEnd,     hi, hiInclusive));
!!!8963458.java!!!	keyIterator() : Iterator
            return new SubMapKeyIterator(absLowest(), absHighFence());
!!!8963586.java!!!	keySpliterator() : Spliterator
            return new SubMapKeyIterator(absLowest(), absHighFence());
!!!8963714.java!!!	descendingKeyIterator() : Iterator
            return new DescendingSubMapKeyIterator(absHighest(), absLowFence());
!!!8963970.java!!!	entrySet() : Set
            EntrySetView es = entrySetView;
            return (es != null) ? es : (entrySetView = new AscendingEntrySetView());
!!!8964098.java!!!	subLowest() : Map::Entry
 return absLowest();
!!!8964226.java!!!	subHighest() : Map::Entry
 return absHighest();
!!!8964354.java!!!	subCeiling(inout key : K) : Map::Entry
 return absCeiling(key);
!!!8964482.java!!!	subHigher(inout key : K) : Map::Entry
 return absHigher(key);
!!!8964610.java!!!	subFloor(inout key : K) : Map::Entry
 return absFloor(key);
!!!8964738.java!!!	subLower(inout key : K) : Map::Entry
 return absLower(key);
