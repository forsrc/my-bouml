class Float
!!!2312834.java!!!	Float(in x : float, in y : float, in w : float, in h : float)
            setRect(x, y, w, h);
!!!2312962.java!!!	getX() : double
            return (double) x;
!!!2313090.java!!!	getY() : double
            return (double) y;
!!!2313218.java!!!	getWidth() : double
            return (double) width;
!!!2313346.java!!!	getHeight() : double
            return (double) height;
!!!2313474.java!!!	isEmpty() : boolean
            return (width <= 0.0f) || (height <= 0.0f);
!!!2313602.java!!!	setRect(in x : float, in y : float, in w : float, in h : float) : void
            this.x = x;
            this.y = y;
            this.width = w;
            this.height = h;
!!!2313730.java!!!	setRect(in x : double, in y : double, in w : double, in h : double) : void
            this.x = (float) x;
            this.y = (float) y;
            this.width = (float) w;
            this.height = (float) h;
!!!2313858.java!!!	setRect(inout r : Rectangle2D) : void
            this.x = (float) r.getX();
            this.y = (float) r.getY();
            this.width = (float) r.getWidth();
            this.height = (float) r.getHeight();
!!!2313986.java!!!	outcode(in x : double, in y : double) : int
            /*
             * Note on casts to double below.  If the arithmetic of
             * x+w or y+h is done in float, then some bits may be
             * lost if the binary exponents of x/y and w/h are not
             * similar.  By converting to double before the addition
             * we force the addition to be carried out in double to
             * avoid rounding error in the comparison.
             *
             * See bug 4320890 for problems that this inaccuracy causes.
             */
            int out = 0;
            if (this.width <= 0) {
                out |= OUT_LEFT | OUT_RIGHT;
            } else if (x < this.x) {
                out |= OUT_LEFT;
            } else if (x > this.x + (double) this.width) {
                out |= OUT_RIGHT;
            }
            if (this.height <= 0) {
                out |= OUT_TOP | OUT_BOTTOM;
            } else if (y < this.y) {
                out |= OUT_TOP;
            } else if (y > this.y + (double) this.height) {
                out |= OUT_BOTTOM;
            }
            return out;
!!!2314114.java!!!	getBounds2D() : Rectangle2D
            return new Float(x, y, width, height);
!!!2314242.java!!!	createIntersection(inout r : Rectangle2D) : Rectangle2D
            Rectangle2D dest;
            if (r instanceof Float) {
                dest = new Rectangle2D.Float();
            } else {
                dest = new Rectangle2D.Double();
            }
            Rectangle2D.intersect(this, r, dest);
            return dest;
!!!2314370.java!!!	createUnion(inout r : Rectangle2D) : Rectangle2D
            Rectangle2D dest;
            if (r instanceof Float) {
                dest = new Rectangle2D.Float();
            } else {
                dest = new Rectangle2D.Double();
            }
            Rectangle2D.union(this, r, dest);
            return dest;
!!!2314498.java!!!	toString() : String
            return getClass().getName()
                + "[x=" + x +
                ",y=" + y +
                ",w=" + width +
                ",h=" + height + "]";
