class LongArraySpliterator
!!!8915202.java!!!	LongArraySpliterator(inout array : long [[]], in additionalCharacteristics : int)
            this(array, 0, array.length, additionalCharacteristics);
!!!8915330.java!!!	LongArraySpliterator(inout array : long [[]], in origin : int, in fence : int, in additionalCharacteristics : int)
            this.array = array;
            this.index = origin;
            this.fence = fence;
            this.characteristics = additionalCharacteristics | Spliterator.SIZED | Spliterator.SUBSIZED;
!!!8915458.java!!!	trySplit() : Spliterator::OfLong
            int lo = index, mid = (lo + fence) >>> 1;
            return (lo >= mid)
                   ? null
                   : new LongArraySpliterator(array, lo, index = mid, characteristics);
!!!8915586.java!!!	forEachRemaining(inout action : LongConsumer) : void
            long[] a; int i, hi; // hoist accesses and checks from loop
            if (action == null)
                throw new NullPointerException();
            if ((a = array).length >= (hi = fence) &&
                (i = index) >= 0 && i < (index = hi)) {
                do { action.accept(a[i]); } while (++i < hi);
            }
!!!8915714.java!!!	tryAdvance(inout action : LongConsumer) : boolean
            if (action == null)
                throw new NullPointerException();
            if (index >= 0 && index < fence) {
                action.accept(array[index++]);
                return true;
            }
            return false;
!!!8915842.java!!!	estimateSize() : long
 return (long)(fence - index);
!!!8915970.java!!!	characteristics() : int
            return characteristics;
!!!8916098.java!!!	getComparator() : Comparator
            if (hasCharacteristics(Spliterator.SORTED))
                return null;
            throw new IllegalStateException();
