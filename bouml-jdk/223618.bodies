class NamingUtils
!!!1075970.java!!!	dprint(inout msg : String) : void
        if (debug && debugStream != null)
            debugStream.println(msg);
!!!1076098.java!!!	errprint(inout msg : String) : void
        if (errStream != null)
            errStream.println(msg);
        else
            System.err.println(msg);
!!!1076226.java!!!	printException(inout e : Exception) : void
        if (errStream != null)
            e.printStackTrace(errStream);
        else
            e.printStackTrace();
!!!1076354.java!!!	makeDebugStream(inout logFile : File) : void
        // Create an outputstream for debugging
        java.io.OutputStream logOStream =
            new java.io.FileOutputStream(logFile);
        java.io.DataOutputStream logDStream =
            new java.io.DataOutputStream(logOStream);
        debugStream = new java.io.PrintStream(logDStream);

        // Emit first message
        debugStream.println("Debug Stream Enabled.");
!!!1076482.java!!!	makeErrStream(inout errFile : File) : void
        if (debug) {
            // Create an outputstream for errors
            java.io.OutputStream errOStream =
                new java.io.FileOutputStream(errFile);
            java.io.DataOutputStream errDStream =
                new java.io.DataOutputStream(errOStream);
            errStream = new java.io.PrintStream(errDStream);
            dprint("Error stream setup completed.");
        }
!!!1076610.java!!!	getDirectoryStructuredName(inout name : NameComponent [[]]) : String
        StringBuffer directoryStructuredName = new StringBuffer("/");
        for( int i = 0; i < name.length; i++ ) {
            directoryStructuredName.append( name[i].id + "." + name[i].kind );
        }
        return directoryStructuredName.toString( );
