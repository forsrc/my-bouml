class DeferredCloseInputStream
!!!7143426.java!!!	DeferredCloseInputStream(inout fd : FileDescriptor)
            super(fd);
!!!7143554.java!!!	raise() : void
            synchronized (lock) {
                useCount++;
            }
!!!7143682.java!!!	lower() : void
            synchronized (lock) {
                useCount--;
                if (useCount == 0 && closePending) {
                    streamToClose.close();
                }
            }
!!!7143810.java!!!	closeDeferred(inout stc : InputStream) : void
            synchronized (lock) {
                if (useCount == 0) {
                    stc.close();
                } else {
                    closePending = true;
                    streamToClose = stc;
                }
            }
!!!7143938.java!!!	close() : void
            synchronized (lock) {
                useCount = 0;
                closePending = false;
            }
            super.close();
!!!7144066.java!!!	read() : int
            raise();
            try {
                return super.read();
            } finally {
                lower();
            }
!!!7144194.java!!!	read(inout b : byte [[]]) : int
            raise();
            try {
                return super.read(b);
            } finally {
                lower();
            }
!!!7144322.java!!!	read(inout b : byte [[]], in off : int, in len : int) : int
            raise();
            try {
                return super.read(b, off, len);
            } finally {
                lower();
            }
!!!7144450.java!!!	skip(in n : long) : long
            raise();
            try {
                return super.skip(n);
            } finally {
                lower();
            }
!!!7144578.java!!!	available() : int
            raise();
            try {
                return super.available();
            } finally {
                lower();
            }
