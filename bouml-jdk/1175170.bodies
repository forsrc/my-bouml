class SubRegistry
!!!9650178.java!!!	SubRegistry(inout registry : ServiceRegistry, inout category : Class)
        this.registry = registry;
        this.category = category;
!!!9650306.java!!!	registerServiceProvider(inout provider : Object) : boolean
        Object oprovider = map.get(provider.getClass());
        boolean present =  oprovider != null;

        if (present) {
            deregisterServiceProvider(oprovider);
        }
        map.put(provider.getClass(), provider);
        accMap.put(provider.getClass(), AccessController.getContext());
        poset.add(provider);
        if (provider instanceof RegisterableService) {
            RegisterableService rs = (RegisterableService)provider;
            rs.onRegistration(registry, category);
        }

        return !present;
!!!9650434.java!!!	deregisterServiceProvider(inout provider : Object) : boolean
        Object oprovider = map.get(provider.getClass());

        if (provider == oprovider) {
            map.remove(provider.getClass());
            accMap.remove(provider.getClass());
            poset.remove(provider);
            if (provider instanceof RegisterableService) {
                RegisterableService rs = (RegisterableService)provider;
                rs.onDeregistration(registry, category);
            }

            return true;
        }
        return false;
!!!9650562.java!!!	contains(inout provider : Object) : boolean
        Object oprovider = map.get(provider.getClass());
        return oprovider == provider;
!!!9650690.java!!!	setOrdering(inout firstProvider : Object, inout secondProvider : Object) : boolean
        return poset.setOrdering(firstProvider, secondProvider);
!!!9650818.java!!!	unsetOrdering(inout firstProvider : Object, inout secondProvider : Object) : boolean
        return poset.unsetOrdering(firstProvider, secondProvider);
!!!9650946.java!!!	getServiceProviders(inout useOrdering : boolean) : Iterator
        if (useOrdering) {
            return poset.iterator();
        } else {
            return map.values().iterator();
        }
!!!9651074.java!!!	getServiceProviderByClass(inout providerClass : Class) : T
        return (T)map.get(providerClass);
!!!9651202.java!!!	clear() : void
        Iterator iter = map.values().iterator();
        while (iter.hasNext()) {
            Object provider = iter.next();
            iter.remove();

            if (provider instanceof RegisterableService) {
                RegisterableService rs = (RegisterableService)provider;
                AccessControlContext acc = accMap.get(provider.getClass());
                if (acc != null || System.getSecurityManager() == null) {
                    AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
                    rs.onDeregistration(registry, category);
                        return null;
                    }, acc);
                }
            }
        }
        poset.clear();
        accMap.clear();
!!!9651330.java!!!	finalize() : void
        clear();
