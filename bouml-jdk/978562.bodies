class DirectByteBufferR
!!!7676034.java!!!	DirectByteBufferR(in cap : int)
                   // package-private
























        super(cap);

!!!7676162.java!!!	DirectByteBufferR(in cap : int, in addr : long, inout fd : FileDescriptor, inout unmapper : Runnable)






        super(cap, addr, fd, unmapper);

!!!7676290.java!!!	DirectByteBufferR(inout db : DirectBuffer, in mark : int, in pos : int, in lim : int, in cap : int, in off : int)








        super(db, mark, pos, lim, cap, off);

!!!7676418.java!!!	slice() : ByteBuffer
        int pos = this.position();
        int lim = this.limit();
        assert (pos <= lim);
        int rem = (pos <= lim ? lim - pos : 0);
        int off = (pos << 0);
        assert (off >= 0);
        return new DirectByteBufferR(this, -1, 0, rem, rem, off);
!!!7676546.java!!!	duplicate() : ByteBuffer
        return new DirectByteBufferR(this,
                                              this.markValue(),
                                              this.position(),
                                              this.limit(),
                                              this.capacity(),
                                              0);
!!!7676674.java!!!	asReadOnlyBuffer() : ByteBuffer








        return duplicate();

!!!7676802.java!!!	put(in x : byte) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7676930.java!!!	put(in i : int, in x : byte) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7677058.java!!!	put(inout src : ByteBuffer) : ByteBuffer




































        throw new ReadOnlyBufferException();

!!!7677186.java!!!	put(inout src : byte [[]], in offset : int, in length : int) : ByteBuffer




























        throw new ReadOnlyBufferException();

!!!7677314.java!!!	compact() : ByteBuffer












        throw new ReadOnlyBufferException();

!!!7677442.java!!!	isDirect() : boolean
        return true;
!!!7677570.java!!!	isReadOnly() : boolean
        return true;
!!!7677698.java!!!	_get(in i : int) : byte
                          // package-private
        return unsafe.getByte(address + i);
!!!7677826.java!!!	_put(in i : int, in b : byte) : void
                  // package-private



        throw new ReadOnlyBufferException();

!!!7677954.java!!!	putChar(in a : long, in x : char) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7678082.java!!!	putChar(in x : char) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7678210.java!!!	putChar(in i : int, in x : char) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7678338.java!!!	asCharBuffer() : CharBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 1;
        if (!unaligned && ((address + off) % (1 << 1) != 0)) {
            return (bigEndian
                    ? (CharBuffer)(new ByteBufferAsCharBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (CharBuffer)(new ByteBufferAsCharBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (CharBuffer)(new DirectCharBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (CharBuffer)(new DirectCharBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
!!!7678466.java!!!	putShort(in a : long, in x : short) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7678594.java!!!	putShort(in x : short) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7678722.java!!!	putShort(in i : int, in x : short) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7678850.java!!!	asShortBuffer() : ShortBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 1;
        if (!unaligned && ((address + off) % (1 << 1) != 0)) {
            return (bigEndian
                    ? (ShortBuffer)(new ByteBufferAsShortBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (ShortBuffer)(new ByteBufferAsShortBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (ShortBuffer)(new DirectShortBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (ShortBuffer)(new DirectShortBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
!!!7678978.java!!!	putInt(in a : long, in x : int) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7679106.java!!!	putInt(in x : int) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7679234.java!!!	putInt(in i : int, in x : int) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7679362.java!!!	asIntBuffer() : IntBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 2;
        if (!unaligned && ((address + off) % (1 << 2) != 0)) {
            return (bigEndian
                    ? (IntBuffer)(new ByteBufferAsIntBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (IntBuffer)(new ByteBufferAsIntBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (IntBuffer)(new DirectIntBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (IntBuffer)(new DirectIntBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
!!!7679490.java!!!	putLong(in a : long, in x : long) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7679618.java!!!	putLong(in x : long) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7679746.java!!!	putLong(in i : int, in x : long) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7679874.java!!!	asLongBuffer() : LongBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 3;
        if (!unaligned && ((address + off) % (1 << 3) != 0)) {
            return (bigEndian
                    ? (LongBuffer)(new ByteBufferAsLongBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (LongBuffer)(new ByteBufferAsLongBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (LongBuffer)(new DirectLongBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (LongBuffer)(new DirectLongBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
!!!7680002.java!!!	putFloat(in a : long, in x : float) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7680130.java!!!	putFloat(in x : float) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7680258.java!!!	putFloat(in i : int, in x : float) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7680386.java!!!	asFloatBuffer() : FloatBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 2;
        if (!unaligned && ((address + off) % (1 << 2) != 0)) {
            return (bigEndian
                    ? (FloatBuffer)(new ByteBufferAsFloatBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (FloatBuffer)(new ByteBufferAsFloatBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (FloatBuffer)(new DirectFloatBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (FloatBuffer)(new DirectFloatBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
!!!7680514.java!!!	putDouble(in a : long, in x : double) : ByteBuffer









        throw new ReadOnlyBufferException();

!!!7680642.java!!!	putDouble(in x : double) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7680770.java!!!	putDouble(in i : int, in x : double) : ByteBuffer




        throw new ReadOnlyBufferException();

!!!7680898.java!!!	asDoubleBuffer() : DoubleBuffer
        int off = this.position();
        int lim = this.limit();
        assert (off <= lim);
        int rem = (off <= lim ? lim - off : 0);

        int size = rem >> 3;
        if (!unaligned && ((address + off) % (1 << 3) != 0)) {
            return (bigEndian
                    ? (DoubleBuffer)(new ByteBufferAsDoubleBufferRB(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off))
                    : (DoubleBuffer)(new ByteBufferAsDoubleBufferRL(this,
                                                                       -1,
                                                                       0,
                                                                       size,
                                                                       size,
                                                                       off)));
        } else {
            return (nativeByteOrder
                    ? (DoubleBuffer)(new DirectDoubleBufferRU(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off))
                    : (DoubleBuffer)(new DirectDoubleBufferRS(this,
                                                                 -1,
                                                                 0,
                                                                 size,
                                                                 size,
                                                                 off)));
        }
