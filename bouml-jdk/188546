format 222
"keyinfo" // jdk1.8::javax::xml::crypto::dsig::keyinfo
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/crypto/dsig/keyinfo/"
  java_package "javax.xml.crypto.dsig.keyinfo"
  classview 181506 "keyinfo"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1418242 "KeyInfo"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>KeyInfo</code> element as defined in
the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
A <code>KeyInfo</code> contains a list of {@link XMLStructure}s, each of
which contain information that enables the recipient(s) to obtain the key
needed to validate an XML signature. The XML Schema Definition is defined as:

<pre>
&lt;element name=\"KeyInfo\" type=\"ds:KeyInfoType\"/&gt;
&lt;complexType name=\"KeyInfoType\" mixed=\"true\"&gt;
  &lt;choice maxOccurs=\"unbounded\"&gt;
    &lt;element ref=\"ds:KeyName\"/&gt;
    &lt;element ref=\"ds:KeyValue\"/&gt;
    &lt;element ref=\"ds:RetrievalMethod\"/&gt;
    &lt;element ref=\"ds:X509Data\"/&gt;
    &lt;element ref=\"ds:PGPData\"/&gt;
    &lt;element ref=\"ds:SPKIData\"/&gt;
    &lt;element ref=\"ds:MgmtData\"/&gt;
    &lt;any processContents=\"lax\" namespace=\"##other\"/&gt;
    &lt;!-- (1,1) elements from (0,unbounded) namespaces --&gt;
  &lt;/choice&gt;
  &lt;attribute name=\"Id\" type=\"ID\" use=\"optional\"/&gt;
&lt;/complexType&gt;
</pre>

A <code>KeyInfo</code> instance may be created by invoking one of the
{@link KeyInfoFactory#newKeyInfo newKeyInfo} methods of the
{@link KeyInfoFactory} class, and passing it a list of one or more
<code>XMLStructure</code>s and an optional id parameter;
for example:
<pre>
  KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
  KeyInfo keyInfo = factory.newKeyInfo
     (Collections.singletonList(factory.newKeyName(\"Alice\"), \"keyinfo-1\"));
</pre>

<p><code>KeyInfo</code> objects can also be marshalled to XML by invoking
the {@link #marshal marshal} method.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newKeyInfo(List)
@see KeyInfoFactory#newKeyInfo(List, String)
"
      classrelation 4777090 // <generalisation>
	relation 4777090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4777090 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12037762 "getContent"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} containing the key information. Each entry of the list is
an {@link XMLStructure}.

<p>If there is a public subclass representing the type of
<code>XMLStructure</code>, it is returned as an instance of that
class (ex: an <code>X509Data</code> element would be returned as an
instance of {@link javax.xml.crypto.dsig.keyinfo.X509Data}).

@return an unmodifiable list of one or more <code>XMLStructure</code>s
   in this <code>KeyInfo</code>. Never returns <code>null</code> or an
   empty list.
"
      end

      operation 12037890 "getId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the optional Id attribute of this <code>KeyInfo</code>, which
may be useful for referencing this <code>KeyInfo</code> from other
XML structures.

@return the Id attribute of this <code>KeyInfo</code> (may be
   <code>null</code> if not specified)
"
      end

      operation 12038018 "marshal"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parent" type class_ref 1419650 // XMLStructure
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1418754 // MarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marshals the key info to XML.

@param parent a mechanism-specific structure containing the parent node
   that the marshalled key info will be appended to
@param context the <code>XMLCryptoContext</code> containing additional
   context (may be null if not applicable)
@throws ClassCastException if the type of <code>parent</code> or
   <code>context</code> is not compatible with this key info
@throws MarshalException if the key info cannot be marshalled
@throws NullPointerException if <code>parent</code> is <code>null</code>
"
      end
    end

    class 1423106 "KeyInfoFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A factory for creating {@link KeyInfo} objects from scratch or for
unmarshalling a <code>KeyInfo</code> object from a corresponding XML
representation.

<p>Each instance of <code>KeyInfoFactory</code> supports a specific
XML mechanism type. To create a <code>KeyInfoFactory</code>, call one of the
static {@link #getInstance getInstance} methods, passing in the XML
mechanism type desired, for example:

<blockquote><code>
  KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
</code></blockquote>

<p>The objects that this factory produces will be based
on DOM and abide by the DOM interoperability requirements as defined in the
<a href=\"../../../../../../technotes/guides/security/xmldsig/overview.html#DOM Mechanism Requirements\">
DOM Mechanism Requirements</a> section of the API overview. See the
<a href=\"../../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
Service Providers</a> section of the API overview for a list of standard
mechanism types.

<p><code>KeyInfoFactory</code> implementations are registered and loaded
using the {@link java.security.Provider} mechanism.
For example, a service provider that supports the
DOM mechanism would be specified in the <code>Provider</code> subclass as:
<pre>
    put(\"KeyInfoFactory.DOM\", \"org.example.DOMKeyInfoFactory\");
</pre>

<p>Also, the <code>XMLStructure</code>s that are created by this factory
may contain state specific to the <code>KeyInfo</code> and are not
intended to be reusable.

<p>An implementation MUST minimally support the default mechanism type: DOM.

<p>Note that a caller must use the same <code>KeyInfoFactory</code>
instance to create the <code>XMLStructure</code>s of a particular
<code>KeyInfo</code> object. The behavior is undefined if
<code>XMLStructure</code>s from different providers or different mechanism
types are used together.

<p><b>Concurrent Access</b>
<p>The static methods of this class are guaranteed to be thread-safe.
Multiple threads may concurrently invoke the static methods defined in this
class with no ill effects.

<p>However, this is not true for the non-static methods defined by this
class. Unless otherwise documented by a specific provider, threads that
need to access a single <code>KeyInfoFactory</code> instance concurrently
should synchronize amongst themselves and provide the necessary locking.
Multiple threads each manipulating a different <code>KeyInfoFactory</code>
instance need not synchronize.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
"
      classrelation 4777218 // mechanismType (<unidirectional association>)
	relation 4777218 --->
	  a role_name "mechanismType" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4777218 // mechanismType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4777346 // provider (<unidirectional association>)
	relation 4777346 --->
	  a role_name "provider" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4777346 // provider (<unidirectional association>)
	  b parent class_ref 509570 // Provider
      end

      operation 12038146 "KeyInfoFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor, for invocation by subclasses.
"
      end

      operation 12038274 "getInstance"
	class_operation public return_type class_ref 1423106 // KeyInfoFactory
	nparams 1
	  param inout name "mechanismType" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeyInfoFactory</code> that supports the
specified XML processing mechanism and representation type (ex: \"DOM\").

<p>This method uses the standard JCA provider lookup mechanism to
locate and instantiate a <code>KeyInfoFactory</code> implementation of
the desired mechanism type. It traverses the list of registered security
<code>Provider</code>s, starting with the most preferred
<code>Provider</code>. A new <code>KeyInfoFactory</code> object
from the first <code>Provider</code> that supports the specified
mechanism is returned.

<p> Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@return a new <code>KeyInfoFactory</code>
@throws NullPointerException if <code>mechanismType</code> is
   <code>null</code>
@throws NoSuchMechanismException if no <code>Provider</code> supports a
   <code>KeyInfoFactory</code> implementation for the specified mechanism
@see Provider
"
      end

      operation 12038402 "getInstance"
	class_operation public return_type class_ref 1423106 // KeyInfoFactory
	nparams 2
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 509570 // Provider
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeyInfoFactory</code> that supports the
requested XML processing mechanism and representation type (ex: \"DOM\"),
as supplied by the specified provider. Note that the specified
<code>Provider</code> object does not have to be registered in the
provider list.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@param provider the <code>Provider</code> object
@return a new <code>KeyInfoFactory</code>
@throws NullPointerException if <code>mechanismType</code> or
   <code>provider</code> are <code>null</code>
@throws NoSuchMechanismException if a <code>KeyInfoFactory</code>
   implementation for the specified mechanism is not available from the
   specified <code>Provider</code> object
@see Provider
"
      end

      operation 12038530 "getInstance"
	class_operation public return_type class_ref 1423106 // KeyInfoFactory
	nparams 2
	  param inout name "mechanismType" type class_ref 128130 // String
	  param inout name "provider" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 509442 // NoSuchProviderException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeyInfoFactory</code> that supports the
requested XML processing mechanism and representation type (ex: \"DOM\"),
as supplied by the specified provider. The specified provider must be
registered in the security provider list.

<p>Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@param mechanismType the type of the XML processing mechanism and
   representation. See the <a
   href=\"../../../../../../technotes/guides/security/xmldsig/overview.html#Service Provider\">
   Service Providers</a> section of the API overview for a list of
   standard mechanism types.
@param provider the string name of the provider
@return a new <code>KeyInfoFactory</code>
@throws NoSuchProviderException if the specified provider is not
   registered in the security provider list
@throws NullPointerException if <code>mechanismType</code> or
   <code>provider</code> are <code>null</code>
@throws NoSuchMechanismException if a <code>KeyInfoFactory</code>
   implementation for the specified mechanism is not available from the
   specified provider
@see Provider
"
      end

      operation 12038658 "getInstance"
	class_operation public return_type class_ref 1423106 // KeyInfoFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>KeyInfoFactory</code> that supports the
default XML processing mechanism and representation type (\"DOM\").

<p>This method uses the standard JCA provider lookup mechanism to
locate and instantiate a <code>KeyInfoFactory</code> implementation of
the default mechanism type. It traverses the list of registered security
<code>Provider</code>s, starting with the most preferred
<code>Provider</code>.  A new <code>KeyInfoFactory</code> object
from the first <code>Provider</code> that supports the DOM mechanism is
returned.

<p> Note that the list of registered providers may be retrieved via
the {@link Security#getProviders() Security.getProviders()} method.

@return a new <code>KeyInfoFactory</code>
@throws NoSuchMechanismException if no <code>Provider</code> supports a
   <code>KeyInfoFactory</code> implementation for the DOM mechanism
@see Provider
"
      end

      operation 12038786 "getMechanismType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the XML processing mechanism and representation
supported by this <code>KeyInfoFactory</code> (ex: \"DOM\")

@return the XML processing mechanism type supported by this
   <code>KeyInfoFactory</code>
"
      end

      operation 12038914 "getProvider"
	public return_type class_ref 509570 // Provider
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this <code>KeyInfoFactory</code>.

@return the provider of this <code>KeyInfoFactory</code>
"
      end

      operation 12039042 "newKeyInfo"
	abstract public return_type class_ref 1418242 // KeyInfo
	nparams 1
	  param inout name "content" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>KeyInfo</code> containing the specified list of
key information types.

@param content a list of one or more {@link XMLStructure}s representing
   key information types. The list is defensively copied to protect
   against subsequent modification.
@return a <code>KeyInfo</code>
@throws NullPointerException if <code>content</code> is <code>null</code>
@throws IllegalArgumentException if <code>content</code> is empty
@throws ClassCastException if <code>content</code> contains any entries
   that are not of type {@link XMLStructure}
"
      end

      operation 12039170 "newKeyInfo"
	abstract public return_type class_ref 1418242 // KeyInfo
	nparams 2
	  param inout name "content" type class_ref 175362 // List
	  param inout name "id" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>KeyInfo</code> containing the specified list of key
information types and optional id. The
<code>id</code> parameter represents the value of an XML
<code>ID</code> attribute and is useful for referencing
the <code>KeyInfo</code> from other XML structures.

@param content a list of one or more {@link XMLStructure}s representing
   key information types. The list is defensively copied to protect
   against subsequent modification.
@param id the value of an XML <code>ID</code> (may be <code>null</code>)
@return a <code>KeyInfo</code>
@throws NullPointerException if <code>content</code> is <code>null</code>
@throws IllegalArgumentException if <code>content</code> is empty
@throws ClassCastException if <code>content</code> contains any entries
   that are not of type {@link XMLStructure}
"
      end

      operation 12039298 "newKeyName"
	abstract public return_type class_ref 1423490 // KeyName
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyName</code> from the specified name.

@param name the name that identifies the key
@return a <code>KeyName</code>
@throws NullPointerException if <code>name</code> is <code>null</code>
"
      end

      operation 12039426 "newKeyValue"
	abstract public return_type class_ref 1423618 // KeyValue
	nparams 1
	  param inout name "key" type class_ref 765826 // PublicKey
	nexceptions 1
	  exception class_ref 1015426 // KeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>KeyValue</code> from the specified public key.

@param key the public key
@return a <code>KeyValue</code>
@throws KeyException if the <code>key</code>'s algorithm is not
   recognized or supported by this <code>KeyInfoFactory</code>
@throws NullPointerException if <code>key</code> is <code>null</code>
"
      end

      operation 12039554 "newPGPData"
	abstract public return_type class_ref 1423746 // PGPData
	nparams 1
	  param inout name "keyId" explicit_type "byte"
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>PGPData</code> from the specified PGP public key
identifier.

@param keyId a PGP public key identifier as defined in <a href=
   \"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>, section 11.2.
   The array is cloned to protect against subsequent modification.
@return a <code>PGPData</code>
@throws NullPointerException if <code>keyId</code> is <code>null</code>
@throws IllegalArgumentException if the key id is not in the correct
   format
"
      end

      operation 12039682 "newPGPData"
	abstract public return_type class_ref 1423746 // PGPData
	nparams 3
	  param inout name "keyId" explicit_type "byte"
	multiplicity "[]"
	  param inout name "keyPacket" explicit_type "byte"
	multiplicity "[]"
	  param inout name "other" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>PGPData</code> from the specified PGP public key
identifier, and optional key material packet and list of external
elements.

@param keyId a PGP public key identifier as defined in <a href=
   \"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>, section 11.2.
   The array is cloned to protect against subsequent modification.
@param keyPacket a PGP key material packet as defined in <a href=
   \"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>, section 5.5.
   The array is cloned to protect against subsequent modification. May
   be <code>null</code>.
@param other a list of {@link XMLStructure}s representing elements from
   an external namespace. The list is defensively copied to protect
   against subsequent modification. May be <code>null</code> or empty.
@return a <code>PGPData</code>
@throws NullPointerException if <code>keyId</code> is <code>null</code>
@throws IllegalArgumentException if the <code>keyId</code> or
   <code>keyPacket</code> is not in the correct format. For
   <code>keyPacket</code>, the format of the packet header is
   checked and the tag is verified that it is of type key material. The
   contents and format of the packet body are not checked.
@throws ClassCastException if <code>other</code> contains any
   entries that are not of type {@link XMLStructure}
"
      end

      operation 12039810 "newPGPData"
	abstract public return_type class_ref 1423746 // PGPData
	nparams 2
	  param inout name "keyPacket" explicit_type "byte"
	multiplicity "[]"
	  param inout name "other" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>PGPData</code> from the specified PGP key material
packet and optional list of external elements.

@param keyPacket a PGP key material packet as defined in <a href=
   \"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>, section 5.5.
   The array is cloned to protect against subsequent modification.
@param other a list of {@link XMLStructure}s representing elements from
   an external namespace. The list is defensively copied to protect
   against subsequent modification. May be <code>null</code> or empty.
@return a <code>PGPData</code>
@throws NullPointerException if <code>keyPacket</code> is
   <code>null</code>
@throws IllegalArgumentException if <code>keyPacket</code> is not in the
   correct format. For <code>keyPacket</code>, the format of the packet
   header is checked and the tag is verified that it is of type key
   material. The contents and format of the packet body are not checked.
@throws ClassCastException if <code>other</code> contains any
   entries that are not of type {@link XMLStructure}
"
      end

      operation 12039938 "newRetrievalMethod"
	abstract public return_type class_ref 1423874 // RetrievalMethod
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>RetrievalMethod</code> from the specified URI.

@param uri the URI that identifies the <code>KeyInfo</code> information
   to be retrieved
@return a <code>RetrievalMethod</code>
@throws NullPointerException if <code>uri</code> is <code>null</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant
"
      end

      operation 12040066 "newRetrievalMethod"
	abstract public return_type class_ref 1423874 // RetrievalMethod
	nparams 3
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "type" type class_ref 128130 // String
	  param inout name "transforms" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>RetrievalMethod</code> from the specified parameters.

@param uri the URI that identifies the <code>KeyInfo</code> information
   to be retrieved
@param type a URI that identifies the type of <code>KeyInfo</code>
   information to be retrieved (may be <code>null</code>)
@param transforms a list of {@link Transform}s. The list is defensively
   copied to protect against subsequent modification. May be
   <code>null</code> or empty.
@return a <code>RetrievalMethod</code>
@throws NullPointerException if <code>uri</code> is <code>null</code>
@throws IllegalArgumentException if <code>uri</code> is not RFC 2396
   compliant
@throws ClassCastException if <code>transforms</code> contains any
   entries that are not of type {@link Transform}
"
      end

      operation 12040194 "newX509Data"
	abstract public return_type class_ref 1424002 // X509Data
	nparams 1
	  param inout name "content" type class_ref 175362 // List
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Creates a <code>X509Data</code> containing the specified list of
X.509 content.

@param content a list of one or more X.509 content types. Valid types are
   {@link String} (subject names), <code>byte[]</code> (subject key ids),
   {@link java.security.cert.X509Certificate}, {@link X509CRL},
   or {@link XMLStructure} ({@link X509IssuerSerial}
   objects or elements from an external namespace). Subject names are
   distinguished names in RFC 2253 String format. Implementations MUST
   support the attribute type keywords defined in RFC 2253 (CN, L, ST,
   O, OU, C, STREET, DC and UID). Implementations MAY support additional
   keywords. The list is defensively copied to protect against
   subsequent modification.
@return a <code>X509Data</code>
@throws NullPointerException if <code>content</code> is <code>null</code>
@throws IllegalArgumentException if <code>content</code> is empty, or
   if a subject name is not RFC 2253 compliant or one of the attribute
   type keywords is not recognized.
@throws ClassCastException if <code>content</code> contains any entries
   that are not of one of the valid types mentioned above
"
      end

      operation 12040322 "newX509IssuerSerial"
	abstract public return_type class_ref 1424130 // X509IssuerSerial
	nparams 2
	  param inout name "issuerName" type class_ref 128130 // String
	  param inout name "serialNumber" type class_ref 686338 // BigInteger
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>X509IssuerSerial</code> from the specified X.500 issuer
distinguished name and serial number.

@param issuerName the issuer's distinguished name in RFC 2253 String
   format. Implementations MUST support the attribute type keywords
   defined in RFC 2253 (CN, L, ST, O, OU, C, STREET, DC and UID).
   Implementations MAY support additional keywords.
@param serialNumber the serial number
@return an <code>X509IssuerSerial</code>
@throws NullPointerException if <code>issuerName</code> or
   <code>serialNumber</code> are <code>null</code>
@throws IllegalArgumentException if the issuer name is not RFC 2253
   compliant or one of the attribute type keywords is not recognized.
"
      end

      operation 12040450 "isFeatureSupported"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "feature" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a specified feature is supported.

@param feature the feature name (as an absolute URI)
@return <code>true</code> if the specified feature is supported,
   <code>false</code> otherwise
@throws NullPointerException if <code>feature</code> is <code>null</code>
"
      end

      operation 12040578 "getURIDereferencer"
	abstract public return_type class_ref 1419266 // URIDereferencer
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to the <code>URIDereferencer</code> that is used by
default to dereference URIs in {@link RetrievalMethod} objects.

@return a reference to the default <code>URIDereferencer</code>
"
      end

      operation 12040706 "unmarshalKeyInfo"
	abstract public return_type class_ref 1418242 // KeyInfo
	nparams 1
	  param inout name "xmlStructure" type class_ref 1419650 // XMLStructure
	nexceptions 1
	  exception class_ref 1418754 // MarshalException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unmarshals a new <code>KeyInfo</code> instance from a
mechanism-specific <code>XMLStructure</code> (ex: {@link DOMStructure})
instance.

@param xmlStructure a mechanism-specific XML structure from which to
  unmarshal the keyinfo from
@return the <code>KeyInfo</code>
@throws NullPointerException if <code>xmlStructure</code> is
  <code>null</code>
@throws ClassCastException if the type of <code>xmlStructure</code> is
  inappropriate for this factory
@throws MarshalException if an unrecoverable exception occurs during
  unmarshalling
"
      end
    end

    class 1423490 "KeyName"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>KeyName</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
A <code>KeyName</code> object contains a string value which may be used
by the signer to communicate a key identifier to the recipient. The
XML Schema Definition is defined as:

<pre>
&lt;element name=\"KeyName\" type=\"string\"/&gt;
</pre>

A <code>KeyName</code> instance may be created by invoking the
{@link KeyInfoFactory#newKeyName newKeyName} method of the
{@link KeyInfoFactory} class, and passing it a <code>String</code>
representing the name of the key; for example:
<pre>
KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
KeyName keyName = factory.newKeyName(\"Alice\");
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newKeyName(String)
"
      classrelation 4777474 // <generalisation>
	relation 4777474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4777474 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12040834 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this <code>KeyName</code>.

@return the name of this <code>KeyName</code> (never
   <code>null</code>)
"
      end
    end

    class 1423618 "KeyValue"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>KeyValue</code> element as defined
in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>. A
<code>KeyValue</code> object contains a single public key that may be
useful in validating the signature. The XML schema definition is defined as:

<pre>
   &lt;element name=\"KeyValue\" type=\"ds:KeyValueType\"/&gt;
   &lt;complexType name=\"KeyValueType\" mixed=\"true\"&gt;
     &lt;choice&gt;
       &lt;element ref=\"ds:DSAKeyValue\"/&gt;
       &lt;element ref=\"ds:RSAKeyValue\"/&gt;
       &lt;any namespace=\"##other\" processContents=\"lax\"/&gt;
     &lt;/choice&gt;
   &lt;/complexType&gt;

   &lt;element name=\"DSAKeyValue\" type=\"ds:DSAKeyValueType\"/&gt;
   &lt;complexType name=\"DSAKeyValueType\"&gt;
     &lt;sequence&gt;
       &lt;sequence minOccurs=\"0\"&gt;
         &lt;element name=\"P\" type=\"ds:CryptoBinary\"/&gt;
         &lt;element name=\"Q\" type=\"ds:CryptoBinary\"/&gt;
       &lt;/sequence&gt;
       &lt;element name=\"G\" type=\"ds:CryptoBinary\" minOccurs=\"0\"/&gt;
       &lt;element name=\"Y\" type=\"ds:CryptoBinary\"/&gt;
       &lt;element name=\"J\" type=\"ds:CryptoBinary\" minOccurs=\"0\"/&gt;
       &lt;sequence minOccurs=\"0\"&gt;
         &lt;element name=\"Seed\" type=\"ds:CryptoBinary\"/&gt;
         &lt;element name=\"PgenCounter\" type=\"ds:CryptoBinary\"/&gt;
       &lt;/sequence&gt;
     &lt;/sequence&gt;
   &lt;/complexType&gt;

   &lt;element name=\"RSAKeyValue\" type=\"ds:RSAKeyValueType\"/&gt;
   &lt;complexType name=\"RSAKeyValueType\"&gt;
     &lt;sequence&gt;
       &lt;element name=\"Modulus\" type=\"ds:CryptoBinary\"/&gt;
       &lt;element name=\"Exponent\" type=\"ds:CryptoBinary\"/&gt;
     &lt;/sequence&gt;
   &lt;/complexType&gt;
</pre>
A <code>KeyValue</code> instance may be created by invoking the
{@link KeyInfoFactory#newKeyValue newKeyValue} method of the
{@link KeyInfoFactory} class, and passing it a {@link
java.security.PublicKey} representing the value of the public key. Here is
an example of creating a <code>KeyValue</code> from a {@link DSAPublicKey}
of a {@link java.security.cert.Certificate} stored in a
{@link java.security.KeyStore}:
<pre>
KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
PublicKey dsaPublicKey = keyStore.getCertificate(\"myDSASigningCert\").getPublicKey();
KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
KeyValue keyValue = factory.newKeyValue(dsaPublicKey);
</pre>

This class returns the <code>DSAKeyValue</code> and
<code>RSAKeyValue</code> elements as objects of type
{@link DSAPublicKey} and {@link RSAPublicKey}, respectively. Note that not
all of the fields in the schema are accessible as parameters of these
types.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newKeyValue(PublicKey)
"
      classrelation 4777602 // <generalisation>
	relation 4777602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4777602 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4777730 // DSA_TYPE (<unidirectional association>)
	relation 4777730 --->
	  a role_name "DSA_TYPE" init_value "
        \"http://www.w3.org/2000/09/xmldsig#DSAKeyValue\"" class_relation const_relation public
	    comment "
URI identifying the DSA KeyValue KeyInfo type:
http://www.w3.org/2000/09/xmldsig#DSAKeyValue. This can be specified as
the value of the <code>type</code> parameter of the
{@link RetrievalMethod} class to describe a remote
<code>DSAKeyValue</code> structure.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4777730 // DSA_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4777858 // RSA_TYPE (<unidirectional association>)
	relation 4777858 --->
	  a role_name "RSA_TYPE" init_value "
        \"http://www.w3.org/2000/09/xmldsig#RSAKeyValue\"" class_relation const_relation public
	    comment "
URI identifying the RSA KeyValue KeyInfo type:
http://www.w3.org/2000/09/xmldsig#RSAKeyValue. This can be specified as
the value of the <code>type</code> parameter of the
{@link RetrievalMethod} class to describe a remote
<code>RSAKeyValue</code> structure.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4777858 // RSA_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12040962 "getPublicKey"
	public return_type class_ref 765826 // PublicKey
	nparams 0
	nexceptions 1
	  exception class_ref 1015426 // KeyException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key of this <code>KeyValue</code>.

@return the public key of this <code>KeyValue</code>
@throws KeyException if this <code>KeyValue</code> cannot be converted
   to a <code>PublicKey</code>
"
      end
    end

    class 1423746 "PGPData"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>PGPData</code> element as defined in
the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>. A
<code>PGPData</code> object is used to convey information related to
PGP public key pairs and signatures on such keys. The XML Schema Definition
is defined as:

<pre>
   &lt;element name=\"PGPData\" type=\"ds:PGPDataType\"/&gt;
   &lt;complexType name=\"PGPDataType\"&gt;
     &lt;choice&gt;
       &lt;sequence&gt;
         &lt;element name=\"PGPKeyID\" type=\"base64Binary\"/&gt;
         &lt;element name=\"PGPKeyPacket\" type=\"base64Binary\" minOccurs=\"0\"/&gt;
         &lt;any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"
          maxOccurs=\"unbounded\"/&gt;
       &lt;/sequence&gt;
       &lt;sequence&gt;
         &lt;element name=\"PGPKeyPacket\" type=\"base64Binary\"/&gt;
         &lt;any namespace=\"##other\" processContents=\"lax\" minOccurs=\"0\"
          maxOccurs=\"unbounded\"/&gt;
       &lt;/sequence&gt;
     &lt;/choice&gt;
   &lt;/complexType&gt;
</pre>

A <code>PGPData</code> instance may be created by invoking one of the
{@link KeyInfoFactory#newPGPData newPGPData} methods of the {@link
KeyInfoFactory} class, and passing it
<code>byte</code> arrays representing the contents of the PGP public key
identifier and/or PGP key material packet, and an optional list of
elements from an external namespace.

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newPGPData(byte[])
@see KeyInfoFactory#newPGPData(byte[], byte[], List)
@see KeyInfoFactory#newPGPData(byte[], List)
"
      classrelation 4777986 // <generalisation>
	relation 4777986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4777986 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4778114 // TYPE (<unidirectional association>)
	relation 4778114 --->
	  a role_name "TYPE" init_value " \"http://www.w3.org/2000/09/xmldsig#PGPData\"" class_relation const_relation public
	    comment "
URI identifying the PGPData KeyInfo type:
http://www.w3.org/2000/09/xmldsig#PGPData. This can be specified as the
value of the <code>type</code> parameter of the {@link RetrievalMethod}
class to describe a remote <code>PGPData</code> structure.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4778114 // TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12041090 "getKeyId"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the PGP public key identifier of this <code>PGPData</code> as
defined in <a href=\"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>,
section 11.2.

@return the PGP public key identifier (may be <code>null</code> if
   not specified). Each invocation of this method returns a new clone
   to protect against subsequent modification.
"
      end

      operation 12041218 "getKeyPacket"
	public explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the PGP key material packet of this <code>PGPData</code> as
defined in <a href=\"http://www.ietf.org/rfc/rfc2440.txt\">RFC 2440</a>,
section 5.5.

@return the PGP key material packet (may be <code>null</code> if not
   specified). Each invocation of this method returns a new clone to
   protect against subsequent modification.
"
      end

      operation 12041346 "getExternalElements"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link Collections#unmodifiableList unmodifiable list}
of {@link XMLStructure}s representing elements from an external
namespace.

@return an unmodifiable list of <code>XMLStructure</code>s (may be
   empty, but never <code>null</code>)
"
      end
    end

    class 1423874 "RetrievalMethod"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>RetrievalMethod</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
A <code>RetrievalMethod</code> object is used to convey a reference to
<code>KeyInfo</code> information that is stored at another location.
The XML schema definition is defined as:

<pre>
  &lt;element name=\"RetrievalMethod\" type=\"ds:RetrievalMethodType\"/&gt;
  &lt;complexType name=\"RetrievalMethodType\"&gt;
    &lt;sequence&gt;
      &lt;element name=\"Transforms\" type=\"ds:TransformsType\" minOccurs=\"0\"/&gt;
    &lt;/sequence&gt;
    &lt;attribute name=\"URI\" type=\"anyURI\"/&gt;
    &lt;attribute name=\"Type\" type=\"anyURI\" use=\"optional\"/&gt;
  &lt;/complexType&gt;
</pre>

A <code>RetrievalMethod</code> instance may be created by invoking one of the
{@link KeyInfoFactory#newRetrievalMethod newRetrievalMethod} methods
of the {@link KeyInfoFactory} class, and passing it the URI
identifying the location of the KeyInfo, an optional type URI identifying
the type of KeyInfo, and an optional list of {@link Transform}s; for example:
<pre>
  KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
  RetrievalMethod rm = factory.newRetrievalMethod
     (\"#KeyValue-1\", KeyValue.DSA_TYPE, Collections.singletonList(Transform.BASE64));
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newRetrievalMethod(String)
@see KeyInfoFactory#newRetrievalMethod(String, String, List)
"
      classrelation 4778242 // <generalisation>
	relation 4778242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4778242 // <generalisation>
	  b parent class_ref 1419394 // URIReference
      end

      classrelation 4778370 // <generalisation>
	relation 4778370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4778370 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12041474 "getTransforms"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of {@link Transform}s of this <code>RetrievalMethod</code>.

@return an unmodifiable list of <code>Transform</code> objects (may be
   empty but never <code>null</code>).
"
      end

      operation 12041602 "getURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of the referenced <code>KeyInfo</code> information.

@return the URI of the referenced <code>KeyInfo</code> information in
   RFC 2396 format (never <code>null</code>)
"
      end

      operation 12041730 "dereference"
	public return_type class_ref 1417730 // Data
	nparams 1
	  param inout name "context" type class_ref 1418370 // XMLCryptoContext
	nexceptions 1
	  exception class_ref 1419522 // URIReferenceException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dereferences the <code>KeyInfo</code> information referenced by this
<code>RetrievalMethod</code> and applies the specified
<code>Transform</code>s.

@param context an <code>XMLCryptoContext</code> that may contain
   additional useful information for dereferencing the URI. The
   context's <code>baseURI</code> and <code>dereferencer</code>
   parameters (if specified) are used to resolve and dereference this
   <code>RetrievalMethod</code>
@return a <code>Data</code> object representing the raw contents of the
   <code>KeyInfo</code> information referenced by this
   <code>RetrievalMethod</code>. It is the caller's responsibility to
   convert the returned data to an appropriate
   <code>KeyInfo</code> object.
@throws NullPointerException if <code>context</code> is <code>null</code>
@throws URIReferenceException if there is an error while dereferencing
"
      end
    end

    class 1424002 "X509Data"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>X509Data</code> element as defined in
the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>. An
<code>X509Data</code> object contains one or more identifers of keys
or X.509 certificates (or certificates' identifiers or a revocation list).
The XML Schema Definition is defined as:

<pre>
   &lt;element name=\"X509Data\" type=\"ds:X509DataType\"/&gt;
   &lt;complexType name=\"X509DataType\"&gt;
       &lt;sequence maxOccurs=\"unbounded\"&gt;
         &lt;choice&gt;
           &lt;element name=\"X509IssuerSerial\" type=\"ds:X509IssuerSerialType\"/&gt;
           &lt;element name=\"X509SKI\" type=\"base64Binary\"/&gt;
           &lt;element name=\"X509SubjectName\" type=\"string\"/&gt;
           &lt;element name=\"X509Certificate\" type=\"base64Binary\"/&gt;
           &lt;element name=\"X509CRL\" type=\"base64Binary\"/&gt;
           &lt;any namespace=\"##other\" processContents=\"lax\"/&gt;
         &lt;/choice&gt;
       &lt;/sequence&gt;
   &lt;/complexType&gt;

   &lt;complexType name=\"X509IssuerSerialType\"&gt;
     &lt;sequence&gt;
       &lt;element name=\"X509IssuerName\" type=\"string\"/&gt;
       &lt;element name=\"X509SerialNumber\" type=\"integer\"/&gt;
     &lt;/sequence&gt;
   &lt;/complexType&gt;
</pre>

An <code>X509Data</code> instance may be created by invoking the
{@link KeyInfoFactory#newX509Data newX509Data} methods of the
{@link KeyInfoFactory} class and passing it a list of one or more
{@link XMLStructure}s representing X.509 content; for example:
<pre>
  KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
  X509Data x509Data = factory.newX509Data
      (Collections.singletonList(\"cn=Alice\"));
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see KeyInfoFactory#newX509Data(List)

@@@ check for illegal combinations of data violating MUSTs in W3c spec"
      classrelation 4778498 // <generalisation>
	relation 4778498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4778498 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      classrelation 4778626 // TYPE (<unidirectional association>)
	relation 4778626 --->
	  a role_name "TYPE" init_value " \"http://www.w3.org/2000/09/xmldsig#X509Data\"" class_relation const_relation public
	    comment "
URI identifying the X509Data KeyInfo type:
http://www.w3.org/2000/09/xmldsig#X509Data. This can be specified as
the value of the <code>type</code> parameter of the
{@link RetrievalMethod} class to describe a remote
<code>X509Data</code> structure.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4778626 // TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4778754 // RAW_X509_CERTIFICATE_TYPE (<unidirectional association>)
	relation 4778754 --->
	  a role_name "RAW_X509_CERTIFICATE_TYPE" init_value "
        \"http://www.w3.org/2000/09/xmldsig#rawX509Certificate\"" class_relation const_relation public
	    comment "
URI identifying the binary (ASN.1 DER) X.509 Certificate KeyInfo type:
http://www.w3.org/2000/09/xmldsig#rawX509Certificate. This can be
specified as the value of the <code>type</code> parameter of the
{@link RetrievalMethod} class to describe a remote X509 Certificate.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4778754 // RAW_X509_CERTIFICATE_TYPE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12041858 "getContent"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"rawtypes\")
"
	
	
	
	comment "Returns an {@link java.util.Collections#unmodifiableList unmodifiable
list} of the content in this <code>X509Data</code>. Valid types are
{@link String} (subject names), <code>byte[]</code> (subject key ids),
{@link java.security.cert.X509Certificate}, {@link X509CRL},
or {@link XMLStructure} ({@link X509IssuerSerial}
objects or elements from an external namespace).

@return an unmodifiable list of the content in this <code>X509Data</code>
   (never <code>null</code> or empty)
"
      end
    end

    class 1424130 "X509IssuerSerial"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A representation of the XML <code>X509IssuerSerial</code> element as
defined in the <a href=\"http://www.w3.org/TR/xmldsig-core/\">
W3C Recommendation for XML-Signature Syntax and Processing</a>.
An <code>X509IssuerSerial</code> object contains an X.509 issuer
distinguished name (DN) and serial number pair. The XML schema definition is
defined as:

<pre>
  &lt;element name=\"X509IssuerSerial\" type=\"ds:X509IssuerSerialType\"/&gt;
  &lt;complexType name=\"X509IssuerSerialType\"&gt;
    &lt;sequence&gt;
      &lt;element name=\"X509IssuerName\" type=\"string\"/&gt;
      &lt;element name=\"X509SerialNumber\" type=\"integer\"/&gt;
    &lt;/sequence&gt;
  &lt;/complexType&gt;
</pre>

An <code>X509IssuerSerial</code> instance may be created by invoking the
{@link KeyInfoFactory#newX509IssuerSerial newX509IssuerSerial} method
of the {@link KeyInfoFactory} class, and passing it a
<code>String</code> and <code>BigInteger</code> representing the X.500
DN and serial number. Here is an example of creating an
<code>X509IssuerSerial</code> from the issuer DN and serial number of an
existing {@link X509Certificate}:
<pre>
KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");
X509IssuerSerial issuer = factory.newX509IssuerSerial
    (cert.getIssuerX500Principal().getName(), cert.getSerialNumber());
</pre>

@author Sean Mullan
@author JSR 105 Expert Group
@since 1.6
@see X509Data#getContent
@see KeyInfoFactory#newX509IssuerSerial(String, BigInteger)
"
      classrelation 4778882 // <generalisation>
	relation 4778882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4778882 // <generalisation>
	  b parent class_ref 1419650 // XMLStructure
      end

      operation 12041986 "getIssuerName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the X.500 distinguished name of this
<code>X509IssuerSerial</code> in
<a href=\"http://www.ietf.org/rfc/rfc2253.txt\">RFC 2253</a> String format.

@return the X.500 distinguished name in RFC 2253 String format (never
   <code>null</code>)
"
      end

      operation 12042114 "getSerialNumber"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the serial number of this <code>X509IssuerSerial</code>.

@return the serial number (never <code>null</code>)
"
      end
    end
  end

  deploymentview 178306 "keyinfo"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1011970 "KeyInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.XMLCryptoContext;
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1418242 // KeyInfo
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeyInfo.java,v 1.7 2005/05/10 16:35:34 mullan Exp $
"
    end

    artifact 1012098 "KeyInfoFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.KeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.PublicKey;
import java.security.Security;
import java.security.cert.X509CRL;
import java.util.List;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.NoSuchMechanismException;
import javax.xml.crypto.URIDereferencer;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dom.DOMStructure;
import javax.xml.crypto.dsig.*;
import sun.security.jca.*;
import sun.security.jca.GetInstance.Instance;
${definition}"
      associated_elems
	class_ref 1423106 // KeyInfoFactory
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeyInfoFactory.java,v 1.12 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012226 "KeyName"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1423490 // KeyName
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeyName.java,v 1.4 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012354 "KeyValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.KeyException;
import java.security.KeyStore;
import java.security.PublicKey;
import java.security.interfaces.DSAPublicKey;
import java.security.interfaces.RSAPublicKey;
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1423618 // KeyValue
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: KeyValue.java,v 1.4 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012482 "PGPData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collections;
import java.util.List;
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1423746 // PGPData
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: PGPData.java,v 1.4 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012610 "RetrievalMethod"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.Data;
import javax.xml.crypto.URIReference;
import javax.xml.crypto.URIReferenceException;
import javax.xml.crypto.XMLCryptoContext;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.Transform;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1423874 // RetrievalMethod
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: RetrievalMethod.java,v 1.8 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012738 "X509Data"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.crypto.XMLStructure;
import java.security.cert.X509CRL;
import java.util.List;
${definition}"
      associated_elems
	class_ref 1424002 // X509Data
      end
      comment "Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: X509Data.java,v 1.4 2005/05/10 16:35:35 mullan Exp $
"
    end

    artifact 1012866 "X509IssuerSerial"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.cert.X509Certificate;
import javax.xml.crypto.XMLStructure;
${definition}"
      associated_elems
	class_ref 1424130 // X509IssuerSerial
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















$Id: X509IssuerSerial.java,v 1.4 2005/05/10 16:35:35 mullan Exp $
"
    end
  end
end
