class LineBorder
!!!2758018.java!!!	createBlackLineBorder() : Border
        if (blackLine == null) {
            blackLine = new LineBorder(Color.black, 1);
        }
        return blackLine;
!!!2758146.java!!!	createGrayLineBorder() : Border
        if (grayLine == null) {
            grayLine = new LineBorder(Color.gray, 1);
        }
        return grayLine;
!!!2758274.java!!!	LineBorder(inout color : Color)
        this(color, 1, false);
!!!2758402.java!!!	LineBorder(inout color : Color, in thickness : int)
        this(color, thickness, false);
!!!2758530.java!!!	LineBorder(inout color : Color, in thickness : int, inout roundedCorners : boolean)
        lineColor = color;
        this.thickness = thickness;
        this.roundedCorners = roundedCorners;
!!!2758658.java!!!	paintBorder(inout c : Component, inout g : Graphics, in x : int, in y : int, in width : int, in height : int) : void
        if ((this.thickness > 0) && (g instanceof Graphics2D)) {
            Graphics2D g2d = (Graphics2D) g;

            Color oldColor = g2d.getColor();
            g2d.setColor(this.lineColor);

            Shape outer;
            Shape inner;

            int offs = this.thickness;
            int size = offs + offs;
            if (this.roundedCorners) {
                float arc = .2f * offs;
                outer = new RoundRectangle2D.Float(x, y, width, height, offs, offs);
                inner = new RoundRectangle2D.Float(x + offs, y + offs, width - size, height - size, arc, arc);
            }
            else {
                outer = new Rectangle2D.Float(x, y, width, height);
                inner = new Rectangle2D.Float(x + offs, y + offs, width - size, height - size);
            }
            Path2D path = new Path2D.Float(Path2D.WIND_EVEN_ODD);
            path.append(outer, false);
            path.append(inner, false);
            g2d.fill(path);
            g2d.setColor(oldColor);
        }
!!!2758786.java!!!	getBorderInsets(inout c : Component, inout insets : Insets) : Insets
        insets.set(thickness, thickness, thickness, thickness);
        return insets;
!!!2758914.java!!!	getLineColor() : Color
        return lineColor;
!!!2759042.java!!!	getThickness() : int
        return thickness;
!!!2759170.java!!!	getRoundedCorners() : boolean
        return roundedCorners;
!!!2759298.java!!!	isBorderOpaque() : boolean
        return !roundedCorners;
