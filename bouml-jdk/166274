format 222
"events" // jdk1.8::javax::xml::stream::events
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/stream/events/"
  java_package "javax.xml.stream.events"
  classview 159874 "events"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 642050 "Namespace"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that contains information about a namespace.
Namespaces are accessed from a StartElement.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@see StartElement
@since 1.6
"
      classrelation 4798210 // <generalisation>
	relation 4798210 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798210 // <generalisation>
	  b parent class_ref 1430018 // Attribute
      end

      operation 12107394 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the prefix, returns \"\" if this is a default
namespace declaration.
"
      end

      operation 12107522 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the uri bound to the prefix of this namespace
"
      end

      operation 12107650 "isDefaultNamespaceDeclaration"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns true if this attribute declares the default namespace
"
      end
    end

    class 643842 "XMLEvent"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the base event interface for handling markup events.
Events are value objects that are used to communicate the
XML 1.0 InfoSet to the Application.  Events may be cached
and referenced after the parse has completed.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@see javax.xml.stream.XMLEventReader
@see Characters
@see ProcessingInstruction
@see StartElement
@see EndElement
@see StartDocument
@see EndDocument
@see EntityReference
@see EntityDeclaration
@see NotationDeclaration
@since 1.6
"
      classrelation 4797058 // <generalisation>
	relation 4797058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797058 // <generalisation>
	  b parent class_ref 673538 // XMLStreamConstants
      end

      operation 12102402 "getEventType"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer code for this event.
@see #START_ELEMENT
@see #END_ELEMENT
@see #CHARACTERS
@see #ATTRIBUTE
@see #NAMESPACE
@see #PROCESSING_INSTRUCTION
@see #COMMENT
@see #START_DOCUMENT
@see #END_DOCUMENT
@see #DTD
"
      end

      operation 12102530 "getLocation"
	public return_type class_ref 641538 // Location
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the location of this event.  The Location
returned from this method is non-volatile and
will retain its information.
@see javax.xml.stream.Location
"
      end

      operation 12102658 "isStartElement"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is a StartElement.
@see StartElement
"
      end

      operation 12102786 "isAttribute"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is an Attribute.
@see Attribute
"
      end

      operation 12102914 "isNamespace"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is a Namespace.
@see Namespace
"
      end

      operation 12103042 "isEndElement"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is a EndElement.
@see EndElement
"
      end

      operation 12103170 "isEntityReference"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is an EntityReference.
@see EntityReference
"
      end

      operation 12103298 "isProcessingInstruction"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is a ProcessingInstruction.
@see ProcessingInstruction
"
      end

      operation 12103426 "isCharacters"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is Characters.
@see Characters
"
      end

      operation 12103554 "isStartDocument"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is a StartDocument.
@see StartDocument
"
      end

      operation 12103682 "isEndDocument"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility function to check if this event is an EndDocument.
@see EndDocument
"
      end

      operation 12103810 "asStartElement"
	public return_type class_ref 644354 // StartElement
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this event as a start element event, may result in
a class cast exception if this event is not a start element.
"
      end

      operation 12103938 "asEndElement"
	public return_type class_ref 644226 // EndElement
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this event as an end  element event, may result in
a class cast exception if this event is not a end element.
"
      end

      operation 12104066 "asCharacters"
	public return_type class_ref 644098 // Characters
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this event as Characters, may result in
a class cast exception if this event is not Characters.
"
      end

      operation 12104194 "getSchemaType"
	public return_type class_ref 673666 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is provided for implementations to provide
optional type information about the associated event.
It is optional and will return null if no information
is available.
"
      end

      operation 12104322 "writeAsEncodedUnicode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	nexceptions 1
	  exception class_ref 643714 // XMLStreamException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters.
No indentation or whitespace should be outputted.

Any user defined event type SHALL have this method
called when being written to on an output stream.
Built in Event types MUST implement this method,
but implementations MAY choose not call these methods
for optimizations reasons when writing out built in
Events to an output stream.
The output generated MUST be equivalent in terms of the
infoset expressed.

@param writer The writer that will output the data
@throws XMLStreamException if there is a fatal error writing the event
"
      end
    end

    class 643970 "ProcessingInstruction"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that describes the data found in processing instructions

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4798466 // <generalisation>
	relation 4798466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798466 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12108162 "getTarget"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The target section of the processing instruction

@return the String value of the PI or null
"
      end

      operation 12108290 "getData"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The data section of the processing instruction

@return the String value of the PI's data or null
"
      end
    end

    class 644098 "Characters"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This describes the interface to Characters events.
All text events get reported as Characters events.
Content, CData and whitespace are all reported as
Characters events.  IgnorableWhitespace, in most cases,
will be set to false unless an element declaration of element
content is present for the current element.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4797314 // <generalisation>
	relation 4797314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797314 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12104962 "getData"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character data of this event
"
      end

      operation 12105090 "isWhiteSpace"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this set of Characters
is all whitespace.  Whitespace inside a document
is reported as CHARACTERS.  This method allows
checking of CHARACTERS events to see if they
are composed of only whitespace characters
"
      end

      operation 12105218 "isCData"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this is a CData section.  If this
event is CData its event type will be CDATA

If javax.xml.stream.isCoalescing is set to true CDATA Sections
that are surrounded by non CDATA characters will be reported
as a single Characters event. This method will return false
in this case.
"
      end

      operation 12105346 "isIgnorableWhiteSpace"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this is ignorableWhiteSpace.  If
this event is ignorableWhiteSpace its event type will
be SPACE.
"
      end
    end

    class 644226 "EndElement"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for the end element event.  An EndElement is reported
for each End Tag in the document.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@see XMLEvent
@since 1.6
"
      classrelation 4797826 // <generalisation>
	relation 4797826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797826 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12106114 "getName"
	public return_type class_ref 673666 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the name of this event
@return the qualified name of this event
"
      end

      operation 12106242 "getNamespaces"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Iterator of namespaces that have gone out
of scope.  Returns an empty iterator if no namespaces have gone
out of scope.
@return an Iterator over Namespace interfaces, or an
empty iterator
"
      end
    end

    class 644354 "StartElement"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The StartElement interface provides access to information about
start elements.  A StartElement is reported for each Start Tag
in the document.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4798722 // <generalisation>
	relation 4798722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798722 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12109186 "getName"
	public return_type class_ref 673666 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the name of this event
@return the qualified name of this event
"
      end

      operation 12109314 "getAttributes"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Iterator of non-namespace declared attributes declared on
this START_ELEMENT,
returns an empty iterator if there are no attributes.  The
iterator must contain only implementations of the javax.xml.stream.Attribute
interface.   Attributes are fundamentally unordered and may not be reported
in any order.

@return a readonly Iterator over Attribute interfaces, or an
empty iterator
"
      end

      operation 12109442 "getNamespaces"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an Iterator of namespaces declared on this element.
This Iterator does not contain previously declared namespaces
unless they appear on the current START_ELEMENT.
Therefore this list may contain redeclared namespaces and duplicate namespace
declarations. Use the getNamespaceContext() method to get the
current context of namespace declarations.

<p>The iterator must contain only implementations of the
javax.xml.stream.Namespace interface.

<p>A Namespace isA Attribute.  One
can iterate over a list of namespaces as a list of attributes.
However this method returns only the list of namespaces
declared on this START_ELEMENT and does not
include the attributes declared on this START_ELEMENT.

Returns an empty iterator if there are no namespaces.

@return a readonly Iterator over Namespace interfaces, or an
empty iterator

"
      end

      operation 12109570 "getAttributeByName"
	public return_type class_ref 1430018 // Attribute
	nparams 1
	  param inout name "name" type class_ref 673666 // QName
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the attribute referred to by this name
@param name the qname of the desired name
@return the attribute corresponding to the name value or null
"
      end

      operation 12109698 "getNamespaceContext"
	public return_type class_ref 673794 // NamespaceContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a read-only namespace context. If no context is
available this method will return an empty namespace context.
The NamespaceContext contains information about all namespaces
in scope for this StartElement.

@return the current namespace context
"
      end

      operation 12109826 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value that the prefix is bound to in the
context of this element.  Returns null if
the prefix is not bound in this context
@param prefix the prefix to lookup
@return the uri bound to the prefix or null
"
      end
    end

    class 1430018 "Attribute"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface that contains information about an attribute.  Attributes are reported
as a set of events accessible from a StartElement.  Other applications may report
Attributes as first-order events, for example as the results of an XPath expression.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@see StartElement
@since 1.6
"
      classrelation 4797186 // <generalisation>
	relation 4797186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797186 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12104450 "getName"
	public return_type class_ref 673666 // QName
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the QName for this attribute
"
      end

      operation 12104578 "getValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the normalized value of this attribute
"
      end

      operation 12104706 "getDTDType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type of this attribute, default is
the String \"CDATA\"
@return the type as a String, default is \"CDATA\"
"
      end

      operation 12104834 "isSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A flag indicating whether this attribute was actually
specified in the start-tag of its element, or was defaulted from the schema.
@return returns true if this was specified in the start element
"
      end
    end

    class 1430146 "StartDocument"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for the start document event

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4798594 // <generalisation>
	relation 4798594 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798594 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12108418 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system ID of the XML data
@return the system ID, defaults to \"\"
"
      end

      operation 12108546 "getCharacterEncodingScheme"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoding style of the XML data
@return the character encoding, defaults to \"UTF-8\"
"
      end

      operation 12108674 "encodingSet"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if CharacterEncodingScheme was set in
the encoding declaration of the document
"
      end

      operation 12108802 "isStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this XML is standalone
@return the standalone state of XML, defaults to \"no\"
"
      end

      operation 12108930 "standaloneSet"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the standalone attribute was set in
the encoding declaration of the document.
"
      end

      operation 12109058 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of XML of this XML stream
@return the version of XML, defaults to \"1.0\"
"
      end
    end

    class 1430274 "EndDocument"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A marker interface for the end of the document

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4797698 // <generalisation>
	relation 4797698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797698 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end
    end

    class 1430402 "EntityReference"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for handling Entity events.

This event reports entities that have not been resolved
and reports their replacement text unprocessed (if
available).  This event will be reported if javax.xml.stream.isReplacingEntityReferences
is set to false.  If javax.xml.stream.isReplacingEntityReferences is set to true
entity references will be resolved transparently.

Entities are handled in two possible ways:

(1) If javax.xml.stream.isReplacingEntityReferences is set to true
all entity references are resolved and reported as markup transparently.
(2) If javax.xml.stream.isReplacingEntityReferences is set to false
Entity references are reported as an EntityReference Event.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4798082 // <generalisation>
	relation 4798082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798082 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12107138 "getDeclaration"
	public return_type class_ref 1430530 // EntityDeclaration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the declaration of this entity.
"
      end

      operation 12107266 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The name of the entity
@return the entity's name, may not be null
"
      end
    end

    class 1430530 "EntityDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for handling Entity Declarations

This interface is used to record and report unparsed entity declarations.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4797954 // <generalisation>
	relation 4797954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797954 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12106370 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The entity's public identifier, or null if none was given
@return the public ID for this declaration or null
"
      end

      operation 12106498 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The entity's system identifier.
@return the system ID for this declaration or null
"
      end

      operation 12106626 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The entity's name
@return the name, may not be null
"
      end

      operation 12106754 "getNotationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The name of the associated notation.
@return the notation name
"
      end

      operation 12106882 "getReplacementText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The replacement text of the entity.
This method will only return non-null
if this is an internal entity.
@return null or the replacment text
"
      end

      operation 12107010 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base URI for this reference
or null if this information is not available
@return the base URI or null
"
      end
    end

    class 1430658 "Comment"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for comment events

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4797442 // <generalisation>
	relation 4797442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797442 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12105474 "getText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string data of the comment, returns empty string if it
does not exist
"
      end
    end

    class 1430786 "DTD"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the top level interface for events dealing with DTDs

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4797570 // <generalisation>
	relation 4797570 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4797570 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12105602 "getDocumentTypeDeclaration"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entire Document Type Declaration as a string, including
the internal DTD subset.
This may be null if there is not an internal subset.
If it is not null it must return the entire
Document Type Declaration which matches the doctypedecl
production in the XML 1.0 specification
"
      end

      operation 12105730 "getProcessedDTD"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an implementation defined representation of the DTD.
This method may return null if no representation is available.
"
      end

      operation 12105858 "getNotations"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a List containing the notations declared in the DTD.
This list must contain NotationDeclaration events.
@see NotationDeclaration
@return an unordered list of NotationDeclaration events
"
      end

      operation 12105986 "getEntities"
	public return_type class_ref 175362 // List
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a List containing the general entities,
both external and internal, declared in the DTD.
This list must contain EntityDeclaration events.
@see EntityDeclaration
@return an unordered list of EntityDeclaration events
"
      end
    end

    class 1431554 "NotationDeclaration"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for handling Notation Declarations

Receive notification of a notation declaration event.
It is up to the application to record the notation for later reference,
At least one of publicId and systemId must be non-null.
There is no guarantee that the notation declaration
will be reported before any unparsed entities that use it.

@version 1.0
@author Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
@since 1.6
"
      classrelation 4798338 // <generalisation>
	relation 4798338 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4798338 // <generalisation>
	  b parent class_ref 643842 // XMLEvent
      end

      operation 12107778 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The notation name.
"
      end

      operation 12107906 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The notation's public identifier, or null if none was given.
"
      end

      operation 12108034 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The notation's system identifier, or null if none was given.
"
      end
    end
  end

  deploymentview 178946 "events"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1021058 "XMLEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Writer;
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 643842 // XMLEvent
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021186 "Attribute"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 1430018 // Attribute
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021314 "Characters"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 644098 // Characters
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021442 "Comment"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1430658 // Comment
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021570 "DTD"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_elems
	class_ref 1430786 // DTD
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021698 "EndDocument"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1430274 // EndDocument
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021826 "EndElement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 644226 // EndElement
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1021954 "EntityDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1430530 // EntityDeclaration
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022082 "EntityReference"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1430402 // EntityReference
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022210 "Namespace"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 642050 // Namespace
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022338 "NotationDeclaration"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1431554 // NotationDeclaration
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022466 "ProcessingInstruction"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 643970 // ProcessingInstruction
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022594 "StartDocument"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1430146 // StartDocument
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end

    artifact 1022722 "StartElement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
import javax.xml.namespace.NamespaceContext;
import java.util.Map;
import java.util.Iterator;
${definition}"
      associated_elems
	class_ref 644354 // StartElement
      end
      comment "ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.






















Copyright (c) 2009 by Oracle Corporation. All Rights Reserved.
"
    end
  end
end
