format 222
"internal" // jdk1.8::com::sun::org::apache::xpath::internal
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/"
  java_package "com.sun.org.apache.xpath.internal"
  package_ref 162690 // objects

  classview 156674 "internal"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 583682 "XPathContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default class for the runtime execution context for XPath.

<p>This class extends DTMManager but does not directly implement it.</p>
@xsl.usage advanced
"
      classrelation 2574082 // <generalisation>
	relation 2574082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2574082 // <generalisation>
	  b parent class_ref 619266 // DTMManager
      end

      classrelation 2574210 // m_last_pushed_rtfdtm (<unidirectional association>)
	relation 2574210 --->
	  a role_name "m_last_pushed_rtfdtm" init_value "new IntStack()" package
	    comment " implements ExpressionContext
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574210 // m_last_pushed_rtfdtm (<unidirectional association>)
	  b parent class_ref 633858 // IntStack
      end

      classrelation 2574338 // m_rtfdtm_stack (<unidirectional association>)
	relation 2574338 --->
	  a role_name "m_rtfdtm_stack" init_value "null" private
	    comment "
Stack of cached \"reusable\" DTMs for Result Tree Fragments.
This is a kluge to handle the problem of starting an RTF before
the old one is complete.

%REVIEW% I'm using a Vector rather than Stack so we can reuse
the DTMs if the problem occurs multiple times. I'm not sure that's
really a net win versus discarding the DTM and starting a new one...
but the retained RTF DTM will have been tail-pruned so should be small.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574338 // m_rtfdtm_stack (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      attribute 1248514 "m_which_rtfdtm"
	private explicit_type "int"
	init_value "-1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Index of currently active RTF DTM in m_rtfdtm_stack 
"
      end

      classrelation 2574466 // m_global_rtfdtm (<unidirectional association>)
	relation 2574466 --->
	  a role_name "m_global_rtfdtm" init_value "null" private
	    comment "
Most recent \"reusable\" DTM for Global Result Tree Fragments. No stack is
required since we're never going to pop these.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574466 // m_global_rtfdtm (<unidirectional association>)
	  b parent class_ref 745730 // SAX2RTFDTM
      end

      classrelation 2574594 // m_DTMXRTreeFrags (<unidirectional association>)
	relation 2574594 --->
	  a role_name "m_DTMXRTreeFrags" init_value " null" private
	    comment "
HashMap of cached the DTMXRTreeFrag objects, which are identified by DTM IDs.
The object are just wrappers for DTMs which are used in  XRTreeFrag.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574594 // m_DTMXRTreeFrags (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      attribute 1248642 "m_isSecureProcessing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "state of the secure processing feature.

"
      end

      attribute 1248770 "m_useServicesMechanism"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2574722 // m_dtmManager (<unidirectional association>)
	relation 2574722 --->
	  a role_name "m_dtmManager" init_value " null" protected
	    comment "
Though XPathContext context extends
the DTMManager, it really is a proxy for this object, which
is the real DTMManager.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574722 // m_dtmManager (<unidirectional association>)
	  b parent class_ref 619266 // DTMManager
      end

      operation 5785218 "getDTMManager"
	public return_type class_ref 619266 // DTMManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the DTMManager object.  Though XPathContext context extends
the DTMManager, it really is a proxy for the real DTMManager.  If a
caller needs to make a lot of calls to the DTMManager, it is faster
if it gets the real one from this function.
"
      end

      operation 5785346 "setSecureProcessing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the state of the secure processing feature
"
      end

      operation 5785474 "isSecureProcessing"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the state of the secure processing feature
"
      end

      operation 5785602 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 5
	  param inout name "source" type class_ref 627202 // Source
	  param inout name "unique" explicit_type "boolean"
	  param inout name "wsfilter" type class_ref 620162 // DTMWSFilter
	  param inout name "incremental" explicit_type "boolean"
	  param inout name "doIndexing" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of a DTM, loaded with the content from the
specified source.  If the unique flag is true, a new instance will
always be returned.  Otherwise it is up to the DTMManager to return a
new instance or an instance that it already created and may be being used
by someone else.
(I think more parameters will need to be added for error handling, and entity
resolution).

@param source the specification of the source object, which may be null,
              in which case it is assumed that node construction will take
              by some other means.
@param unique true if the returned DTM must be unique, probably because it
is going to be mutated.
@param wsfilter Enables filtering of whitespace nodes, and may be null.
@param incremental true if the construction should try and be incremental.
@param doIndexing true if the caller considers it worth it to use
                  indexing schemes.

@return a non-null DTM reference.
"
      end

      operation 5785730 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 1
	  param in name "nodeHandle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of a DTM that \"owns\" a node handle.

@param nodeHandle the nodeHandle.

@return a non-null DTM reference.
"
      end

      operation 5785858 "getDTMHandleFromNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a W3C DOM node, try and return a DTM handle.
Note: calling this may be non-optimal.

@param node Non-null reference to a DOM node.

@return a valid DTM handle.
"
      end

      operation 5785986 "getDTMIdentity"
	public explicit_return_type "int"
	nparams 1
	  param inout name "dtm" type class_ref 618754 // DTM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "%TBD% Doc
"
      end

      operation 5786114 "createDocumentFragment"
	public return_type class_ref 618754 // DTM
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>DocumentFragment</code> object.
@return A new <code>DocumentFragment handle</code>.
"
      end

      operation 5786242 "release"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "dtm" type class_ref 618754 // DTM
	  param inout name "shouldHardDelete" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release a DTM either to a lru pool, or completely remove reference.
DTMs without system IDs are always hard deleted.
State: experimental.

@param dtm The DTM to be released.
@param shouldHardDelete True if the DTM should be removed no matter what.
@return true if the DTM was removed, false if it was put back in a lru pool.
"
      end

      operation 5786370 "createDTMIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 2
	  param inout name "xpathCompiler" type class_ref 129538 // Object
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DTMIterator</code> based on an XPath
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath>LocationPath</a> or
a <a href=\"http://www.w3.org/TR/xpath#NT-UnionExpr\">UnionExpr</a>.

@param xpathCompiler ??? Somehow we need to pass in a subpart of the
expression.  I hate to do this with strings, since the larger expression
has already been parsed.

@param pos The position in the expression.
@return The newly created <code>DTMIterator</code>.
"
      end

      operation 5786498 "createDTMIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 2
	  param inout name "xpathString" type class_ref 128130 // String
	  param inout name "presolver" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DTMIterator</code> based on an XPath
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath>LocationPath</a> or
a <a href=\"http://www.w3.org/TR/xpath#NT-UnionExpr\">UnionExpr</a>.

@param xpathString Must be a valid string expressing a
<a href=\"http://www.w3.org/TR/xpath#NT-LocationPath>LocationPath</a> or
a <a href=\"http://www.w3.org/TR/xpath#NT-UnionExpr\">UnionExpr</a>.

@param presolver An object that can resolve prefixes to namespace URLs.

@return The newly created <code>DTMIterator</code>.
"
      end

      operation 5786626 "createDTMIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 3
	  param in name "whatToShow" explicit_type "int"
	  param inout name "filter" type class_ref 623362 // DTMFilter
	  param inout name "entityReferenceExpansion" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DTMIterator</code> based only on a whatToShow and
a DTMFilter.  The traversal semantics are defined as the descendant
access.

@param whatToShow This flag specifies which node types may appear in
  the logical view of the tree presented by the iterator. See the
  description of <code>NodeFilter</code> for the set of possible
  <code>SHOW_</code> values.These flags can be combined using
  <code>OR</code>.
@param filter The <code>NodeFilter</code> to be used with this
  <code>TreeWalker</code>, or <code>null</code> to indicate no filter.
@param entityReferenceExpansion The value of this flag determines
  whether entity reference nodes are expanded.

@return The newly created <code>NodeIterator</code>.
"
      end

      operation 5786754 "createDTMIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 1
	  param in name "node" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>DTMIterator</code> that holds exactly one node.

@param node The node handle that the DTMIterator will iterate to.

@return The newly created <code>DTMIterator</code>.
"
      end

      operation 5786882 "XPathContext"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathContext instance.
"
      end

      operation 5787010 "XPathContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "useServicesMechanism" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5787138 "XPathContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*This constructor doesn't seem to be used anywhere -- huizhe wang**
Create an XPathContext instance.
@param owner Value that can be retrieved via the getOwnerObject() method.
@see #getOwnerObject
"
      end

      operation 5787266 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "useServicesMechanism" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5787394 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset for new run.
"
      end

      classrelation 2574850 // m_saxLocations (<unidirectional association>)
	relation 2574850 --->
	  a role_name "m_saxLocations" init_value " new ObjectStack(RECURSIONLIMIT)" package
	    comment " The current stylesheet locator. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574850 // m_saxLocations (<unidirectional association>)
	  b parent class_ref 797826 // ObjectStack
      end

      operation 5787522 "setSAXLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "location" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current locater in the stylesheet.

@param location The location within the stylesheet.
"
      end

      operation 5787650 "pushSAXLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "location" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current locater in the stylesheet.

@param location The location within the stylesheet.
"
      end

      operation 5787778 "pushSAXLocatorNull"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a slot on the locations stack so that setSAXLocator can be
repeatedly called.

"
      end

      operation 5787906 "popSAXLocator"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current locater.
"
      end

      operation 5788034 "getSAXLocator"
	public return_type class_ref 617346 // SourceLocator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current locater in the stylesheet.

@return The location within the stylesheet, or null if not known.
"
      end

      classrelation 2574978 // m_owner (<unidirectional association>)
	relation 2574978 --->
	  a role_name "m_owner" private
	    comment " The owner context of this XPathContext.  In the case of XSLT, this will be a
 Transformer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2574978 // m_owner (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 2575106 // m_ownerGetErrorListener (<unidirectional association>)
	relation 2575106 --->
	  a role_name "m_ownerGetErrorListener" private
	    comment " The owner context of this XPathContext.  In the case of XSLT, this will be a
 Transformer object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575106 // m_ownerGetErrorListener (<unidirectional association>)
	  b parent class_ref 137858 // Method
      end

      operation 5788162 "getOwnerObject"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the \"owner\" context of this context, which should be,
in the case of XSLT, the Transformer object.  This is needed
so that XSLT functions can get the Transformer.
@return The owner object passed into the constructor, or null.
"
      end

      classrelation 2575234 // m_variableStacks (<unidirectional association>)
	relation 2575234 --->
	  a role_name "m_variableStacks" init_value " new VariableStack()" private
	    comment " ================ VarStack ===================

The stack of Variable stacks.  A VariableStack will be
pushed onto this stack for each template invocation.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575234 // m_variableStacks (<unidirectional association>)
	  b parent class_ref 805378 // VariableStack
      end

      operation 5788290 "getVarStack"
	public return_type class_ref 805378 // VariableStack
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the variable stack, which is in charge of variables and
parameters.

@return the variable stack, which should not be null.
"
      end

      operation 5788418 "setVarStack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "varStack" type class_ref 805378 // VariableStack
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the variable stack, which is in charge of variables and
parameters.

@param varStack non-null reference to the variable stack.
"
      end

      classrelation 2575362 // m_sourceTreeManager (<unidirectional association>)
	relation 2575362 --->
	  a role_name "m_sourceTreeManager" init_value " new SourceTreeManager()" private
	    comment " ================ SourceTreeManager ===================
 The source tree manager, which associates Source objects to source
 tree nodes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575362 // m_sourceTreeManager (<unidirectional association>)
	  b parent class_ref 805250 // SourceTreeManager
      end

      operation 5788546 "getSourceTreeManager"
	public return_type class_ref 805250 // SourceTreeManager
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the SourceTreeManager associated with this execution context.

@return the SourceTreeManager associated with this execution context.
"
      end

      operation 5788674 "setSourceTreeManager"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mgr" type class_ref 805250 // SourceTreeManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SourceTreeManager associated with this execution context.

@param mgr the SourceTreeManager to be associated with this
       execution context.
"
      end

      classrelation 2575490 // m_errorListener (<unidirectional association>)
	relation 2575490 --->
	  a role_name "m_errorListener" private
	    comment " =================================================
 The ErrorListener where errors and warnings are to be reported.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575490 // m_errorListener (<unidirectional association>)
	  b parent class_ref 583170 // ErrorListener
      end

      classrelation 2575618 // m_defaultErrorListener (<unidirectional association>)
	relation 2575618 --->
	  a role_name "m_defaultErrorListener" private
	    comment " A default ErrorListener in case our m_errorListener was not specified and our
 owner either does not have an ErrorListener or has a null one.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575618 // m_defaultErrorListener (<unidirectional association>)
	  b parent class_ref 583170 // ErrorListener
      end

      operation 5788802 "getErrorListener"
	public return_type class_ref 583170 // ErrorListener
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ErrorListener where errors and warnings are to be reported.

@return A non-null ErrorListener reference.
"
      end

      operation 5788930 "setErrorListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 583170 // ErrorListener
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the ErrorListener where errors and warnings are to be reported.

@param listener A non-null ErrorListener reference.
"
      end

      classrelation 2575746 // m_uriResolver (<unidirectional association>)
	relation 2575746 --->
	  a role_name "m_uriResolver" private
	    comment " =================================================
 The TrAX URI Resolver for resolving URIs from the document(...)
 function to source tree nodes.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575746 // m_uriResolver (<unidirectional association>)
	  b parent class_ref 642946 // URIResolver
      end

      operation 5789058 "getURIResolver"
	public return_type class_ref 642946 // URIResolver
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the URIResolver associated with this execution context.

@return a URI resolver, which may be null.
"
      end

      operation 5789186 "setURIResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 642946 // URIResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the URIResolver associated with this execution context.

@param resolver the URIResolver to be associated with this
       execution context, may be null to clear an already set resolver.
"
      end

      classrelation 2575874 // m_primaryReader (<unidirectional association>)
	relation 2575874 --->
	  a role_name "m_primaryReader" public
	    comment " =================================================
 The reader of the primary source tree.    
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2575874 // m_primaryReader (<unidirectional association>)
	  b parent class_ref 606466 // XMLReader
      end

      operation 5789314 "getPrimaryReader"
	public return_type class_ref 606466 // XMLReader
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get primary XMLReader associated with this execution context.

@return The reader of the primary source tree.
"
      end

      operation 5789442 "setPrimaryReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 606466 // XMLReader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set primary XMLReader associated with this execution context.

@param reader The reader of the primary source tree.
"
      end

      classrelation 2576002 // m_contextNodeLists (<unidirectional association>)
	relation 2576002 --->
	  a role_name "m_contextNodeLists" init_value " new Stack()" private
	    comment " =================================================
 Misnamed string manager for XPath messages.  
 private static XSLMessages m_XSLMessages = new XSLMessages();
==========================================================
 SECTION: Execution context state tracking
==========================================================

The current context node list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576002 // m_contextNodeLists (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      operation 5789570 "getContextNodeListsStack"
	public return_type class_ref 183810 // Stack
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5789698 "setContextNodeListsStack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 183810 // Stack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5789826 "getContextNodeList"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current context node list.

@return  the <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>,
also referred to here as a <term>context node list</term>.
"
      end

      operation 5789954 "pushContextNodeList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nl" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current context node list.

@param nl the <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>,
also referred to here as a <term>context node list</term>.
@xsl.usage internal
"
      end

      operation 5790082 "popContextNodeList"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current context node list.
@xsl.usage internal
"
      end

      attribute 1248898 "RECURSIONLIMIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1024*4)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The amount to use for stacks that record information during the
recursive execution.

"
      end

      classrelation 2576130 // m_currentNodes (<unidirectional association>)
	relation 2576130 --->
	  a role_name "m_currentNodes" init_value " new IntStack(RECURSIONLIMIT)" private
	    comment " The stack of <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a> objects.
 Not to be confused with the current node list.  %REVIEW% Note that there
 are no bounds check and resize for this stack, so if it is blown, it's all
 over.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576130 // m_currentNodes (<unidirectional association>)
	  b parent class_ref 633858 // IntStack
      end

      operation 5790210 "getCurrentNodeStack"
	public return_type class_ref 633858 // IntStack
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  private NodeVector m_currentNodes = new NodeVector();"
      end

      operation 5790338 "setCurrentNodeStack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nv" type class_ref 633858 // IntStack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5790466 "getCurrentNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current context node.

@return the <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>.
"
      end

      operation 5790594 "pushCurrentNodeAndExpression"
	public explicit_return_type "void"
	nparams 2
	  param in name "cn" explicit_type "int"
	  param in name "en" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current context node and expression node.

@param cn the <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>.
@param en the sub-expression context node.
"
      end

      operation 5790722 "popCurrentNodeAndExpression"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current context node.
"
      end

      operation 5790850 "pushExpressionState"
	public explicit_return_type "void"
	nparams 3
	  param in name "cn" explicit_type "int"
	  param in name "en" explicit_type "int"
	  param inout name "nc" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push the current context node, expression node, and prefix resolver.

@param cn the <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>.
@param en the sub-expression context node.
@param nc the namespace context (prefix resolver.
"
      end

      operation 5790978 "popExpressionState"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current context node, expression node, and prefix resolver.
"
      end

      operation 5791106 "pushCurrentNode"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current context node.

@param n the <a href=\"http://www.w3.org/TR/xslt#dt-current-node\">current node</a>.
"
      end

      operation 5791234 "popCurrentNode"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current context node.
"
      end

      operation 5791362 "pushPredicateRoot"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current predicate root.
"
      end

      operation 5791490 "popPredicateRoot"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current predicate root.
"
      end

      operation 5791618 "getPredicateRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current predicate root.
"
      end

      operation 5791746 "pushIteratorRoot"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current location path iterator root.
"
      end

      operation 5791874 "popIteratorRoot"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current location path iterator root.
"
      end

      operation 5792002 "getIteratorRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current location path iterator root.
"
      end

      classrelation 2576258 // m_iteratorRoots (<unidirectional association>)
	relation 2576258 --->
	  a role_name "m_iteratorRoots" init_value " new NodeVector()" private
	    comment " A stack of the current sub-expression nodes.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576258 // m_iteratorRoots (<unidirectional association>)
	  b parent class_ref 632706 // NodeVector
      end

      classrelation 2576386 // m_predicateRoots (<unidirectional association>)
	relation 2576386 --->
	  a role_name "m_predicateRoots" init_value " new NodeVector()" private
	    comment " A stack of the current sub-expression nodes.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576386 // m_predicateRoots (<unidirectional association>)
	  b parent class_ref 632706 // NodeVector
      end

      classrelation 2576514 // m_currentExpressionNodes (<unidirectional association>)
	relation 2576514 --->
	  a role_name "m_currentExpressionNodes" init_value " new IntStack(RECURSIONLIMIT)" private
	    comment " A stack of the current sub-expression nodes.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576514 // m_currentExpressionNodes (<unidirectional association>)
	  b parent class_ref 633858 // IntStack
      end

      operation 5792130 "getCurrentExpressionNodeStack"
	public return_type class_ref 633858 // IntStack
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5792258 "setCurrentExpressionNodeStack"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nv" type class_ref 633858 // IntStack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 2576642 // m_predicatePos (<unidirectional association>)
	relation 2576642 --->
	  a role_name "m_predicatePos" init_value " new IntStack()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576642 // m_predicatePos (<unidirectional association>)
	  b parent class_ref 633858 // IntStack
      end

      operation 5792386 "getPredicatePos"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5792514 "pushPredicatePos"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5792642 "popPredicatePos"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5792770 "getCurrentExpressionNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current node that is the expression's context (i.e. for current() support).

@return The current sub-expression node.
"
      end

      operation 5792898 "pushCurrentExpressionNode"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current node that is the expression's context (i.e. for current() support).

@param n The sub-expression node to be current.
"
      end

      operation 5793026 "popCurrentExpressionNode"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current node that is the expression's context
(i.e. for current() support).
"
      end

      classrelation 2576770 // m_prefixResolvers (<unidirectional association>)
	relation 2576770 --->
	  a role_name "m_prefixResolvers" init_value " new ObjectStack(RECURSIONLIMIT)" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576770 // m_prefixResolvers (<unidirectional association>)
	  b parent class_ref 797826 // ObjectStack
      end

      operation 5793154 "getNamespaceContext"
	public return_type class_ref 635650 // PrefixResolver
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current namespace context for the xpath.

@return the current prefix resolver for resolving prefixes to
        namespace URLs.
"
      end

      operation 5793282 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pr" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current namespace context for the xpath.

@param pr the prefix resolver to be used for resolving prefixes to
        namespace URLs.
"
      end

      operation 5793410 "pushNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pr" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a current namespace context for the xpath.

@param pr the prefix resolver to be used for resolving prefixes to
        namespace URLs.
"
      end

      operation 5793538 "pushNamespaceContextNull"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Just increment the namespace contest stack, so that setNamespaceContext
can be used on the slot.
"
      end

      operation 5793666 "popNamespaceContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the current namespace context for the xpath.
"
      end

      classrelation 2576898 // m_axesIteratorStack (<unidirectional association>)
	relation 2576898 --->
	  a role_name "m_axesIteratorStack" init_value " new Stack()" private
	    comment "==========================================================
 SECTION: Current TreeWalker contexts (for internal use)
==========================================================

Stack of AxesIterators.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2576898 // m_axesIteratorStack (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      operation 5793794 "getAxesIteratorStackStacks"
	public return_type class_ref 183810 // Stack
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5793922 "setAxesIteratorStackStacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 183810 // Stack
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5794050 "pushSubContextList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iter" type class_ref 805762 // SubContextList
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a TreeWalker on the stack.

@param iter A sub-context AxesWalker.
@xsl.usage internal
"
      end

      operation 5794178 "popSubContextList"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop the last pushed axes iterator.
@xsl.usage internal
"
      end

      operation 5794306 "getSubContextList"
	public return_type class_ref 805762 // SubContextList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current axes iterator, or return null if none.

@return the sub-context node list.
@xsl.usage internal
"
      end

      operation 5794434 "getCurrentNodeList"
	public return_type class_ref 805762 // SubContextList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>
as defined by the XSLT spec.

@return the <a href=\"http://www.w3.org/TR/xslt#dt-current-node-list\">current node list</a>.
@xsl.usage internal
"
      end

      operation 5794562 "getContextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "==========================================================
 SECTION: Implementation of ExpressionContext interface
==========================================================

Get the current context node.
@return The current context node.
"
      end

      operation 5794690 "getContextNodes"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current context node list.
@return An iterator for the current context list, as
defined in XSLT.
"
      end

      class 805890 "XPathExpressionContext"
	visibility public 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2577154 // <realization>
	  relation 2577154 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 2577154 // <realization>
	    b parent class_ref 582914 // ExpressionContext
	end

	operation 5794946 "getXPathContext"
	  public return_type class_ref 583682 // XPathContext
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the XPathContext associated with this XPathExpressionContext.
Extensions should use this judiciously and only when special processing
requirements cannot be met another way.  Consider requesting an enhancement
to the ExpressionContext interface to avoid having to call this method.
@return the XPathContext associated with this XPathExpressionContext.
"
	end

	operation 5795074 "getDTMManager"
	  public return_type class_ref 619266 // DTMManager
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the DTMManager object.  Though XPathContext context extends
the DTMManager, it really is a proxy for the real DTMManager.  If a
caller needs to make a lot of calls to the DTMManager, it is faster
if it gets the real one from this function.
"
	end

	operation 5795202 "getContextNode"
	  public return_type class_ref 317570 // Node
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the current context node.
@return The current context node.
"
	end

	operation 5795330 "getContextNodes"
	  public return_type class_ref 583042 // NodeIterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the current context node list.
@return An iterator for the current context list, as
defined in XSLT.
"
	end

	operation 5795458 "getErrorListener"
	  public return_type class_ref 583170 // ErrorListener
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the error listener.
@return The registered error listener.
"
	end

	operation 5795586 "useServicesMechnism"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the state of the services mechanism feature.
"
	end

	operation 5795714 "setServicesMechnism"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "flag" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the state of the services mechanism feature.
"
	end

	operation 5795842 "toNumber"
	  public explicit_return_type "double"
	  nparams 1
	    param inout name "n" type class_ref 317570 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of a node as a number.
@param n Node to be converted to a number.  May be null.
@return value of n as a number.
"
	end

	operation 5795970 "toString"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "n" type class_ref 317570 // Node
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the value of a node as a string.
@param n Node to be converted to a string.  May be null.
@return value of n as a string, or an empty string if n is null.
"
	end

	operation 5796098 "getVariableOrParam"
	  public return_type class_ref 583298 // XObject
	  nparams 1
	    param inout name "qname" type class_ref 583426 // QName
	  nexceptions 1
	    exception class_ref 583554 // TransformerException
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get a variable based on it's qualified name.
@param qname The qualified name of the variable.
@return The evaluated value of the variable.
@throws javax.xml.transform.TransformerException
"
	end
      end

      classrelation 2577026 // expressionContext (<unidirectional association>)
	relation 2577026 --->
	  a role_name "expressionContext" init_value " new XPathExpressionContext()" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2577026 // expressionContext (<unidirectional association>)
	  b parent class_ref 805890 // XPathExpressionContext
      end

      operation 5794818 "getExpressionContext"
	public return_type class_ref 582914 // ExpressionContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The the expression context for extensions for this context.

@return An object that implements the ExpressionContext.
"
      end

      operation 5796226 "getGlobalRTFDTM"
	public return_type class_ref 618754 // DTM
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a DTM to be used as a container for a global Result Tree
Fragment. This will always be an instance of (derived from? equivalent to?)
SAX2DTM, since each RTF is constructed by temporarily redirecting our SAX
output to it. It may be a single DTM containing for multiple fragments,
if the implementation supports that.

Note: The distinction between this method and getRTFDTM() is that the latter
allocates space from the dynamic variable stack (m_rtfdtm_stack), which may
be pruned away again as the templates which defined those variables are exited.
Global variables may be bound late (see XUnresolvedVariable), and never want to
be discarded, hence we need to allocate them separately and don't actually need
a stack to track them.

@return a non-null DTM reference.
"
      end

      operation 5796354 "getRTFDTM"
	public return_type class_ref 618754 // DTM
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a DTM to be used as a container for a dynamic Result Tree
Fragment. This will always be an instance of (derived from? equivalent to?)
SAX2DTM, since each RTF is constructed by temporarily redirecting our SAX
output to it. It may be a single DTM containing for multiple fragments,
if the implementation supports that.

@return a non-null DTM reference.
"
      end

      operation 5796482 "pushRTFContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Push the RTFDTM's context mark, to allows discarding RTFs added after this
point. (If it doesn't exist we don't push, since we might still be able to
get away with not creating it. That requires that excessive pops be harmless.)
"
      end

      operation 5796610 "popRTFContext"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Pop the RTFDTM's context mark. This discards any RTFs added after the last
mark was set.

If there is no RTF DTM, there's nothing to pop so this
becomes a no-op. If pushes were issued before this was called, we count on
the fact that popRewindMark is defined such that overpopping just resets
to empty.

Complicating factor: We need to handle the case of popping back to a previous
RTF DTM, if one of the weird produce-an-RTF-to-build-an-RTF cases arose.
Basically: If pop says this DTM is now empty, then return to the previous
if one exists, in whatever state we left it in. UGLY, but hopefully the
situation which forces us to consider this will arise exceedingly rarely.
"
      end

      operation 5796738 "getDTMXRTreeFrag"
	public return_type class_ref 806018 // DTMXRTreeFrag
	nparams 1
	  param in name "dtmIdentity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets DTMXRTreeFrag object if one has already been created.
Creates new DTMXRTreeFrag object and adds to m_DTMXRTreeFrags  HashMap,
otherwise.
@param dtmIdentity
@return DTMXRTreeFrag
"
      end

      operation 5796866 "releaseDTMXRTreeFrags"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cleans DTMXRTreeFrag objects by removing references
to DTM and XPathContext objects.
"
      end
    end

    class 584066 "NodeSet"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>The NodeSet class can act as either a NodeVector,
NodeList, or NodeIterator.  However, in order for it to
act as a NodeVector or NodeList, it's required that
setShouldCacheNodes(true) be called before the first
nextNode() is called, in order that nodes can be added
as they are fetched.  Derived classes that implement iterators
must override runTo(int index), in order that they may
run the iteration to the given index. </p>

<p>Note that we directly implement the DOM's NodeIterator
interface. We do not emulate all the behavior of the
standard NodeIterator. In particular, we do not guarantee
to present a \"live view\" of the document ... but in XSLT,
the source document should never be mutated, so this should
never be an issue.</p>

<p>Thought: Should NodeSet really implement NodeList and NodeIterator,
or should there be specific subclasses of it which do so? The
advantage of doing it all here is that all NodeSets will respond
to the same calls; the disadvantage is that some of them may return
less-than-enlightening results when you do so.</p>
@xsl.usage advanced
"
      classrelation 2571522 // <realization>
	relation 2571522 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2571522 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 2571650 // <realization>
	relation 2571650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2571650 // <realization>
	  b parent class_ref 583042 // NodeIterator
      end

      classrelation 2571778 // <realization>
	relation 2571778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2571778 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 2571906 // <realization>
	relation 2571906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2571906 // <realization>
	  b parent class_ref 804866 // ContextNodeList
      end

      operation 5762178 "NodeSet"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty nodelist.
"
      end

      operation 5762306 "NodeSet"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty, using the given block size.

@param blocksize Size of blocks to allocate
"
      end

      operation 5762434 "NodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodelist" type class_ref 333058 // NodeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSet, and copy the members of the
given nodelist into it.

@param nodelist List of Nodes to be made members of the new set.
"
      end

      operation 5762562 "NodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodelist" type class_ref 584066 // NodeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSet, and copy the members of the
given NodeSet into it.

@param nodelist Set of Nodes to be made members of the new set.
"
      end

      operation 5762690 "NodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "ni" type class_ref 583042 // NodeIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSet, and copy the members of the
given NodeIterator into it.

@param ni Iterator which yields Nodes to be made members of the new set.
"
      end

      operation 5762818 "NodeSet"
	public explicit_return_type ""
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSet which contains the given Node.

@param node Single node to be added to the new set.
"
      end

      operation 5762946 "getRoot"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The root node of the Iterator, as specified when it was created.
For non-Iterator NodeSets, this will be null.
"
      end

      operation 5763074 "cloneWithReset"
	public return_type class_ref 583042 // NodeIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned Iterator, and reset its state to the beginning of the
iteration.

@return a new NodeSet of the same type, having the same state...
except that the reset() operation has been called.

@throws CloneNotSupportedException if this subclass of NodeSet
does not support the clone() operation.
"
      end

      operation 5763202 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator. May have no effect on non-iterator Nodesets.
"
      end

      operation 5763330 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute determines which node types are presented via the
iterator. The available set of constants is defined in the
<code>NodeFilter</code> interface. For NodeSets, the mask has been
hardcoded to show all nodes except EntityReference nodes, which have
no equivalent in the XPath data model.

@return integer used as a bit-array, containing flags defined in
the DOM's NodeFilter class. The value will be
<code>SHOW_ALL & ~SHOW_ENTITY_REFERENCE</code>, meaning that
only entity references are suppressed.
"
      end

      operation 5763458 "getFilter"
	public return_type class_ref 653442 // NodeFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The filter object used to screen nodes. Filters are applied to
further reduce (and restructure) the NodeIterator's view of the
document. In our case, we will be using hardcoded filters built
into our iterators... but getFilter() is part of the DOM's
NodeIterator interface, so we have to support it.

@return null, which is slightly misleading. True, there is no
user-written filter object, but in fact we are doing some very
sophisticated custom filtering. A DOM purist might suggest
returning a placeholder object just to indicate that this is
not going to return all nodes selected by whatToShow.
"
      end

      operation 5763586 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The value of this flag determines whether the children of entity
reference nodes are visible to the iterator. If false, they will be
skipped over.
<br> To produce a view of the document that has entity references
expanded and does not expose the entity reference node itself, use the
whatToShow flags to hide the entity reference node and set
expandEntityReferences to true when creating the iterator. To produce
a view of the document that has entity reference nodes but no entity
expansion, use the whatToShow flags to show the entity reference node
and set expandEntityReferences to false.

@return true for all iterators based on NodeSet, meaning that the
contents of EntityRefrence nodes may be returned (though whatToShow
says that the EntityReferences themselves are not shown.)
"
      end

      operation 5763714 "nextNode"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a NodeIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>null</code> if there are no more members in that set.
@throws DOMException
   INVALID_STATE_ERR: Raised if this method is called after the
  <code>detach</code> method was invoked.
"
      end

      operation 5763842 "previousNode"
	public return_type class_ref 317570 // Node
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the previous node in the set and moves the position of the
iterator backwards in the set.
@return  The previous <code>Node</code> in the set being iterated over,
  or<code>null</code> if there are no more members in that set.
@throws DOMException
   INVALID_STATE_ERR: Raised if this method is called after the
  <code>detach</code> method was invoked.
@throws RuntimeException thrown if this NodeSet is not of
a cached type, and hence doesn't know what the previous node was.
"
      end

      operation 5763970 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
<p>
This operation is a no-op in NodeSet, and will not cause
INVALID_STATE_ERR to be raised by later operations.
</p>
"
      end

      operation 5764098 "isFresh"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this NodeSet is \"fresh\", in other words, if
the first nextNode() that is called will return the
first node in the set.

@return true if nextNode() would return the first node in the set,
false if it would return a later one.
"
      end

      operation 5764226 "runTo"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If an index is requested, NodeSet will call this method
to run the iterator to the index.  By default this sets
m_next to the index.  If the index argument is -1, this
signals that the iterator should be run to the end.

@param index Position to advance (or retreat) to, with
0 requesting the reset (\"fresh\") position and -1 (or indeed
any out-of-bounds value) requesting the final position.
@throws RuntimeException thrown if this NodeSet is not
one of the types which supports indexing/counting.
"
      end

      operation 5764354 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>index</code>th item in the collection. If
<code>index</code> is greater than or equal to the number of nodes in
the list, this returns <code>null</code>.

TODO: What happens if index is out of range?

@param index Index into the collection.
@return The node at the <code>index</code>th position in the
  <code>NodeList</code>, or <code>null</code> if that is not a valid
  index.
"
      end

      operation 5764482 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of nodes in the list. The range of valid child node indices is
0 to <code>length-1</code> inclusive. Note that this operation requires
finding all the matching nodes, which may defeat attempts to defer
that work.

@return integer indicating how many nodes are represented by this list.
"
      end

      operation 5764610 "addNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a node to the NodeSet. Not all types of NodeSets support this
operation

@param n Node to be added
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5764738 "insertNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert a node at a given position.

@param n Node to be added
@param pos Offset at which the node is to be inserted,
with 0 being the first position.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5764866 "removeNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a node.

@param n Node to be added
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5764994 "addNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodelist" type class_ref 333058 // NodeList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy NodeList members into this nodelist, adding in
document order.  If a node is null, don't add it.

@param nodelist List of nodes which should now be referenced by
this NodeSet.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765122 "addNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ns" type class_ref 584066 // NodeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Copy NodeList members into this nodelist, adding in
document order.  Only genuine node references will be copied;
nulls appearing in the source NodeSet will
not be added to this one. </p>

<p> In case you're wondering why this function is needed: NodeSet
implements both NodeIterator and NodeList. If this method isn't
provided, Java can't decide which of those to use when addNodes()
is invoked. Providing the more-explicit match avoids that
ambiguity.)</p>

@param ns NodeSet whose members should be merged into this NodeSet.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765250 "addNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iterator" type class_ref 583042 // NodeIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy NodeList members into this nodelist, adding in
document order.  Null references are not added.

@param iterator NodeIterator which yields the nodes to be added.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765378 "addNodesInDocOrder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "nodelist" type class_ref 333058 // NodeList
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy NodeList members into this nodelist, adding in
document order.  If a node is null, don't add it.

@param nodelist List of nodes to be added
@param support The XPath runtime context.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765506 "addNodesInDocOrder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "iterator" type class_ref 583042 // NodeIterator
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy NodeList members into this nodelist, adding in
document order.  If a node is null, don't add it.

@param iterator NodeIterator which yields the nodes to be added.
@param support The XPath runtime context.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765634 "addNodesInDocOrder"
	private explicit_return_type "boolean"
	nparams 5
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "testIndex" explicit_type "int"
	  param inout name "nodelist" type class_ref 333058 // NodeList
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the node list to this node set in document order.

@param start index.
@param end index.
@param testIndex index.
@param nodelist The nodelist to add.
@param support The XPath runtime context.

@return false always.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765762 "addNodeInDocOrder"
	public explicit_return_type "int"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "test" explicit_type "boolean"
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the node into a vector of nodes where it should occur in
document order.
@param node The node to be added.
@param test true if we should test for doc order
@param support The XPath runtime context.
@return insertIndex.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      operation 5765890 "addNodeInDocOrder"
	public explicit_return_type "int"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end addNodeInDocOrder(Vector v, Object obj)

Add the node into a vector of nodes where it should occur in
document order.
@param node The node to be added.
@param support The XPath runtime context.

@return The index where it was inserted.
@throws RuntimeException thrown if this NodeSet is not of
a mutable type.
"
      end

      attribute 1244930 "m_next"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " end addNodeInDocOrder(Vector v, Object obj)
 If this node is being used as an iterator, the next index that nextNode()
 will return.  
"
      end

      operation 5766018 "getCurrentPos"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current position, which is one less than
the next nextNode() call will retrieve.  i.e. if
you call getCurrentPos() and the return is 0, the next
fetch will take place at index 1.

@return The the current position index.
"
      end

      operation 5766146 "setCurrentPos"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current position in the node set.
@param i Must be a valid index.
@throws RuntimeException thrown if this NodeSet is not of
a cached type, and thus doesn't permit indexed access.
"
      end

      operation 5766274 "getCurrentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last fetched node.  Needed to support the UnionPathIterator.

@return the last fetched node.
@throws RuntimeException thrown if this NodeSet is not of
a cached type, and thus doesn't permit indexed access.
"
      end

      attribute 1245058 "m_mutable"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if this list can be mutated.  
"
      end

      attribute 1245186 "m_cacheNodes"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if this list is cached.
 @serial  
"
      end

      operation 5766402 "getShouldCacheNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get whether or not this is a cached node set.


@return True if this list is cached.
"
      end

      operation 5766530 "setShouldCacheNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If setShouldCacheNodes(true) is called, then nodes will
be cached.  They are not cached by default. This switch must
be set before the first call to nextNode is made, to ensure
that all nodes are cached.

@param b true if this node set should be cached.
@throws RuntimeException thrown if an attempt is made to
request caching after we've already begun stepping through the
nodes in this set.
"
      end

      attribute 1245314 "m_last"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5766658 "getLast"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5766786 "setLast"
	public explicit_return_type "void"
	nparams 1
	  param in name "last" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1245442 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate.
 @serial          
"
      end

      classrelation 2572034 // m_map (<unidirectional association>)
	relation 2572034 --->
	  a role_name "m_map" multiplicity "[]" package
	    comment " Array of nodes this points to.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2572034 // m_map (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      attribute 1245570 "m_firstFree"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of nodes in this NodeVector.
 @serial          
"
      end

      attribute 1245698 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of the array this points to.
 @serial           
 lazy initialization"
      end

      operation 5766914 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned LocPathIterator.

@return A clone of this

@throws CloneNotSupportedException
"
      end

      operation 5767042 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Number of nodes in this NodeVector
"
      end

      operation 5767170 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a Node onto the vector.

@param value Node to add to the vector
"
      end

      operation 5767298 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a Node onto the vector.

@param value Node to add to the vector
"
      end

      operation 5767426 "pop"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector and return the result.

@return the node at the tail of the vector
"
      end

      operation 5767554 "popAndTop"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector and return the
top of the stack after the pop.

@return The top of the stack after it's been popped
"
      end

      operation 5767682 "popQuick"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a node from the tail of the vector.
"
      end

      operation 5767810 "peepOrNull"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node at the top of the stack without popping the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node at the top of the stack or null if stack is empty.
"
      end

      operation 5767938 "pushPair"
	public explicit_return_type "void"
	nparams 2
	  param inout name "v1" type class_ref 317570 // Node
	  param inout name "v2" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Push a pair of nodes into the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param v1 First node to add to vector
@param v2 Second node to add to vector
"
      end

      operation 5768066 "popPair"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pop a pair of nodes from the tail of the stack.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.
"
      end

      operation 5768194 "setTail"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the tail of the stack to the given node.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param n Node to set at the tail of vector
"
      end

      operation 5768322 "setTailSub1"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the given node one position from the tail.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@param n Node to set
"
      end

      operation 5768450 "peepTail"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node at the tail of the vector without popping
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node at the tail of the vector
"
      end

      operation 5768578 "peepTailSub1"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the node one position from the tail without popping.
Special purpose method for TransformerImpl, pushElemTemplateElement.
Performance critical.

@return Node one away from the tail
"
      end

      operation 5768706 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "value" type class_ref 317570 // Node
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

@param value Node to insert
@param at Position where to insert
"
      end

      operation 5768834 "appendNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodes" type class_ref 584066 // NodeSet
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the nodes to the list.

@param nodes NodeVector to append to this list
"
      end

      operation 5768962 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.
"
      end

      operation 5769090 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s Node to remove from the list

@return True if the node was successfully removed
"
      end

      operation 5769218 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param i Index of node to remove
"
      end

      operation 5769346 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param node Node to set
@param index Index of where to set the node
"
      end

      operation 5769474 "elementAt"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i Index of node to get

@return Node at specified index
"
      end

      operation 5769602 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s Node to look for

@return True if the given node was found.
"
      end

      operation 5769730 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elem" type class_ref 317570 // Node
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@param index Index of where to start the search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5769858 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elem" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end
    end

    class 775682 "Expression"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This abstract class serves as the base for all expression objects.  An
Expression can be executed to return a {@link com.sun.org.apache.xpath.internal.objects.XObject},
normally has a location within a document or DOM, can send error and warning
events, and normally do not hold state and are meant to be immutable once
construction has completed.  An exception to the immutibility rule is iterators
and walkers, which must be cloned in order to be used -- the original must
still be immutable.
"
      classrelation 2470658 // <realization>
	relation 2470658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2470658 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2470914 // <realization>
	relation 2470914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2470914 // <realization>
	  b parent class_ref 775810 // ExpressionNode
      end

      classrelation 2471042 // <realization>
	relation 2471042 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2471042 // <realization>
	  b parent class_ref 775938 // XPathVisitable
      end

      attribute 1192322 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 565665869777906902L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2471170 // m_parent (<unidirectional association>)
	relation 2471170 --->
	  a role_name "m_parent" private
	    comment "
The location where this expression was built from.  Need for diagnostic
 messages. May be null.
 @serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2471170 // m_parent (<unidirectional association>)
	  b parent class_ref 775810 // ExpressionNode
      end

      operation 5465346 "canTraverseOutsideSubtree"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression or it's subexpressions can traverse outside
the current subtree.

@return true if traversal outside the context node's subtree can occur.
"
      end

      operation 5465474 "execute"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "currentNode" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Set the location where this expression was built from.
   *
   *
   * @param locator the location where this expression was built from, may be
   *                null.
   */
  public void setSourceLocator(SourceLocator locator)
  {
    m_slocator = locator;
  }

Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.
@param currentNode The currentNode.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
"
      end

      operation 5465602 "execute"
	public return_type class_ref 583298 // XObject
	nparams 4
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "currentNode" explicit_type "int"
	  param inout name "dtm" type class_ref 618754 // DTM
	  param in name "expType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.
@param currentNode The currentNode.
@param dtm The DTM of the current node.
@param expType The expanded type ID of the current node.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
"
      end

      operation 5465730 "execute"
	abstract public return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
"
      end

      operation 5465858 "execute"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "destructiveOK" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression, but tell that a \"safe\" object doesn't have
to be returned.  The default implementation just calls execute(xctxt).


@param xctxt The XPath runtime context.
@param destructiveOK true if a \"safe\" object doesn't need to be returned.

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
"
      end

      operation 5465986 "num"
	public explicit_return_type "double"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate expression to a number.


@param xctxt The XPath runtime context.
@return The expression evaluated as a double.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5466114 "bool"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Evaluate expression to a boolean.


@param xctxt The XPath runtime context.
@return false

@throws javax.xml.transform.TransformerException
"
      end

      operation 5466242 "xstr"
	public return_type class_ref 619010 // XMLString
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast result object to a string.


@param xctxt The XPath runtime context.
@return The string this wraps or the empty string if null

@throws javax.xml.transform.TransformerException
"
      end

      operation 5466370 "isNodesetExpr"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the expression is a nodeset expression.  In other words, tell
if you can execute {@link #asNode(XPathContext) asNode} without an exception.
@return true if the expression can be represented as a nodeset.
"
      end

      operation 5466498 "asNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first node out of the nodeset, if this expression is
a nodeset expression.
@param xctxt The XPath runtime context.
@return the first node out of the nodeset, or DTM.NULL.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5466626 "asIterator"
	public return_type class_ref 635522 // DTMIterator
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "contextNode" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an select expression and a context, evaluate the XPath
and return the resulting iterator.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.


@return A valid DTMIterator.
@throws TransformerException thrown if the active ProblemListener decides
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      operation 5466754 "asIteratorRaw"
	public return_type class_ref 635522 // DTMIterator
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "contextNode" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an select expression and a context, evaluate the XPath
and return the resulting iterator, but do not clone.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.


@return A valid DTMIterator.
@throws TransformerException thrown if the active ProblemListener decides
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      operation 5466882 "executeCharsToContentHandler"
	public explicit_return_type "void"
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "handler" type class_ref 605954 // ContentHandler
	nexceptions 2
	  exception class_ref 583554 // TransformerException
	  exception class_ref 379266 // SAXException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute an expression in the XPath runtime context, and return the
result of the expression.


@param xctxt The XPath runtime context.
NEEDSDOC @param handler

@return The result of the expression in the form of a <code>XObject</code>.

@throws javax.xml.transform.TransformerException if a runtime exception
        occurs.
@throws org.xml.sax.SAXException
"
      end

      operation 5467010 "isStableNumber"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this expression returns a stable number that will not change during
iterations within the expression.  This is used to determine if a proximity
position predicate can indicate that no more searching has to occur.


@return true if the expression represents a stable number.
"
      end

      operation 5467138 "fixupVariables"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
NEEDSDOC @param globalsSize
"
      end

      operation 5467266 "deepEquals"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this object with another object and see
if they are equal, include the sub heararchy.

@param expr Another expression object.
@return true if this objects class and the expr
object's class are the same, and the data contained
within both objects are considered equal.
"
      end

      operation 5467394 "isSameClass"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is a utility method to tell if the passed in
class is the same class as this.  It is to be used by
the deepEquals method.  I'm bottlenecking it here
because I'm not totally confident that comparing the
class objects is the best way to do this.
@return true of the passed in class is the exact same
class as this class.
"
      end

      operation 5467522 "warn"
	public explicit_return_type "void"
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warn the user of an problem.

@param xctxt The XPath runtime context.
@param msg An error msgkey that corresponds to one of the conststants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5467650 "assertion"
	public explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an assertion error, and probably throw an
exception.

@param b  If false, a runtime exception will be thrown.
@param msg The assertion message, which should be informative.

@throws RuntimeException if the b argument is false.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5467778 "error"
	public explicit_return_type "void"
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param xctxt The XPath runtime context.
@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5467906 "getExpressionOwner"
	public return_type class_ref 775810 // ExpressionNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the first non-Expression parent of this node.
@return null or first ancestor that is not an Expression.
"
      end

      operation 5468034 "exprSetParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 775810 // ExpressionNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "=============== ExpressionNode methods ================
 This pair of methods are used to inform the node of its
parent. "
      end

      operation 5468162 "exprGetParent"
	public return_type class_ref 775810 // ExpressionNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5468290 "exprAddChild"
	public explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 775810 // ExpressionNode
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method tells the node to add its argument to the node's
list of children.  "
      end

      operation 5468418 "exprGetChild"
	public return_type class_ref 775810 // ExpressionNode
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method returns a child node.  The children are numbered
from zero, left to right. "
      end

      operation 5468546 "exprGetNumChildren"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the number of children the node has. "
      end

      operation 5468674 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "=============== SourceLocator methods ================

Return the public identifier for the current document event.

<p>The return value is the public identifier of the document
entity or of the external parsed entity in which the markup that
triggered the event appears.</p>

@return A string containing the public identifier, or
        null if none is available.
@see #getSystemId
"
      end

      operation 5468802 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the system identifier for the current document event.

<p>The return value is the system identifier of the document
entity or of the external parsed entity in which the markup that
triggered the event appears.</p>

<p>If the system identifier is a URL, the parser must resolve it
fully before passing it to the application.</p>

@return A string containing the system identifier, or null
        if none is available.
@see #getPublicId
"
      end

      operation 5468930 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the line number where the current document event ends.

<p><strong>Warning:</strong> The return value from the method
is intended only as an approximation for the sake of error
reporting; it is not intended to provide sufficient information
to edit the character content of the original XML document.</p>

<p>The return value is an approximation of the line number
in the document entity or external parsed entity where the
markup that triggered the event appears.</p>

@return The line number, or -1 if none is available.
@see #getColumnNumber
"
      end

      operation 5469058 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the character position where the current document event ends.

<p><strong>Warning:</strong> The return value from the method
is intended only as an approximation for the sake of error
reporting; it is not intended to provide sufficient information
to edit the character content of the original XML document.</p>

<p>The return value is an approximation of the column number
in the document entity or external parsed entity where the
markup that triggered the event appears.</p>

@return The column number, or -1 if none is available.
@see #getLineNumber
"
      end
    end

    class 775810 "ExpressionNode"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that implements this interface can construct expressions,
give information about child and parent expressions,
and give the originating source information.  A class that implements
this interface does not lay any claim to being directly executable.

<p>Note: This interface should not be considered stable.  Only exprSetParent
and exprGetParent can be counted on to work reliably.  Work in progress.</p>
"
      classrelation 2470786 // <generalisation>
	relation 2470786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2470786 // <generalisation>
	  b parent class_ref 617346 // SourceLocator
      end

      operation 5464578 "exprSetParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "n" type class_ref 775810 // ExpressionNode
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This pair of methods are used to inform the node of its
parent. "
      end

      operation 5464706 "exprGetParent"
	public return_type class_ref 775810 // ExpressionNode
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5464834 "exprAddChild"
	public explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 775810 // ExpressionNode
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method tells the node to add its argument to the node's
list of children.  "
      end

      operation 5464962 "exprGetChild"
	public return_type class_ref 775810 // ExpressionNode
	nparams 1
	  param in name "i" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method returns a child node.  The children are numbered
from zero, left to right. "
      end

      operation 5465090 "exprGetNumChildren"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the number of children the node has. "
      end
    end

    class 775938 "XPathVisitable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that implements this interface will call a XPathVisitor
for itself and members within it's heararchy.  If the XPathVisitor's
method returns false, the sub-member heararchy will not be
traversed.
"
      operation 5465218 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param owner The owner of the visitor, where that path may be
             rewritten if needed.
@param visitor The visitor whose appropriate method will be called.
"
      end
    end

    class 776066 "ExpressionOwner"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Classes that implement this interface own an expression, which
can be rewritten.
"
      operation 5759746 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the raw Expression object that this class wraps.

@return the raw Expression object, which should not normally be null.
"
      end

      operation 5759874 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the raw expression object for this object.

@param exp the raw Expression object, which should not normally be null.
"
      end
    end

    class 776194 "XPathVisitor"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A derivation from this class can be passed to a class that implements
the XPathVisitable interface, to have the appropriate method called
for each component of the XPath.  Aside from possible other uses, the
main intention is to provide a reasonable means to perform expression
rewriting.

<p>Each method has the form
<code>boolean visitComponentType(ExpressionOwner owner, ComponentType compType)</code>.
The ExpressionOwner argument is the owner of the component, and can
be used to reset the expression for rewriting.  If a method returns
false, the sub hierarchy will not be traversed.</p>

<p>This class is meant to be a base class that will be derived by concrete classes,
and doesn't much except return true for each method.</p>
"
      operation 5801218 "visitLocationPath"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "path" type class_ref 806530 // LocPathIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a LocationPath.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param path The LocationPath object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801346 "visitUnionPath"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "path" type class_ref 806658 // UnionPathIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a UnionPath.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param path The UnionPath object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801474 "visitStep"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "step" type class_ref 806786 // NodeTest
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a step within a location path.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param step The Step object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801602 "visitPredicate"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "pred" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a predicate within a location path.  Note that there isn't a
proper unique component for predicates, and that the expression will
be called also for whatever type Expression is.

@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param pred The predicate object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801730 "visitBinaryOperation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "op" type class_ref 806914 // Operation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a binary operation.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param op The operation object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801858 "visitUnaryOperation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "op" type class_ref 807042 // UnaryOperation
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a unary operation.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param op The operation object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5801986 "visitVariableRef"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "var" type class_ref 807170 // Variable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a variable reference.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param var The variable reference object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5802114 "visitFunction"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "func" type class_ref 775554 // Function
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a function.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param func The function reference object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5802242 "visitMatchPattern"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "pattern" type class_ref 807298 // StepPattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a match pattern.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param pattern The match pattern object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5802370 "visitUnionPattern"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "pattern" type class_ref 807426 // UnionPattern
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a union pattern.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param pattern The union pattern object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5802498 "visitStringLiteral"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "str" type class_ref 807554 // XString
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a string literal.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param str The string literal object.
@return true if the sub expressions should be traversed.
"
      end

      operation 5802626 "visitNumberLiteral"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "num" type class_ref 807682 // XNumber
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visit a number literal.
@param owner The owner of the expression, to which the expression can
             be reset if rewriting takes place.
@param num The number literal object.
@return true if the sub expressions should be traversed.
"
      end
    end

    class 782722 "XPath"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XPath class wraps an expression object and provides general services
for execution of that expression.
@xsl.usage advanced
"
      classrelation 2573442 // <realization>
	relation 2573442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2573442 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 2573570 // <realization>
	relation 2573570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2573570 // <realization>
	  b parent class_ref 776066 // ExpressionOwner
      end

      attribute 1247362 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3976493477939110553L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2573698 // m_mainExp (<unidirectional association>)
	relation 2573698 --->
	  a role_name "m_mainExp" private
	    comment " The top of the expression tree.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2573698 // m_mainExp (<unidirectional association>)
	  b parent class_ref 775682 // Expression
      end

      classrelation 2573826 // m_funcTable (<unidirectional association>)
	relation 2573826 --->
	  a role_name "m_funcTable" init_value " null" private
	    comment "
The function table for xpath build-in functions

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2573826 // m_funcTable (<unidirectional association>)
	  b parent class_ref 782850 // FunctionTable
      end

      operation 5781762 "initFunctionTable"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "initial the function table
"
      end

      operation 5781890 "getExpression"
	public return_type class_ref 775682 // Expression
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the raw Expression object that this class wraps.


@return the raw Expression object, which should not normally be null.
"
      end

      operation 5782018 "fixupVariables"
	public explicit_return_type "void"
	nparams 2
	  param inout name "vars" type class_ref 141442 // Vector
	  param in name "globalsSize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function is used to fixup variables from QNames to stack frame
indexes at stylesheet build time.
@param vars List of QNames that correspond to variables.  This list
should be searched backwards for the first qualified name that
corresponds to the variable reference qname.  The position of the
QName in the vector from the start of the vector will be its position
in the stack frame (but variables above the globalsTop value will need
to be offset to the current stack frame).
"
      end

      operation 5782146 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exp" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the raw expression object for this object.


@param exp the raw Expression object, which should not normally be null.
"
      end

      operation 5782274 "getLocator"
	public return_type class_ref 617346 // SourceLocator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the SourceLocator on the expression object.


@return the SourceLocator on the expression object, which may be null.
"
      end

      classrelation 2573954 // m_patternString (<unidirectional association>)
	relation 2573954 --->
	  a role_name "m_patternString" package
	    comment "  /**
   * Set the SourceLocator on the expression object.
   *
   *
   * @param l the SourceLocator on the expression object, which may be null.
   */
  public void setLocator(SourceLocator l)
  {
    // Note potential hazards -- l may not be serializable, or may be changed
      // after being assigned here.
    m_mainExp.setSourceLocator(l);
  }
 The pattern string, mainly kept around for diagnostic purposes.
 @serial  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2573954 // m_patternString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5782402 "getPatternString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the XPath string associated with this object.


@return the XPath string associated with this object.
"
      end

      attribute 1247490 "SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents a select type expression. 
"
      end

      attribute 1247618 "MATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Represents a match type expression.  
"
      end

      operation 5782530 "XPath"
	public explicit_return_type ""
	nparams 5
	  param inout name "exprString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	  param in name "type" explicit_type "int"
	  param inout name "errorListener" type class_ref 583170 // ErrorListener
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an XPath object.

(Needs review -sc) This method initializes an XPathParser/
Compiler and compiles the expression.
@param exprString The XPath expression.
@param locator The location of the expression, may be null.
@param prefixResolver A prefix resolver to use to resolve prefixes to
                      namespace URIs.
@param type one of {@link #SELECT} or {@link #MATCH}.
@param errorListener The error listener, or null if default should be used.

@throws javax.xml.transform.TransformerException if syntax or other error.
"
      end

      operation 5782658 "XPath"
	public explicit_return_type ""
	nparams 6
	  param inout name "exprString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	  param in name "type" explicit_type "int"
	  param inout name "errorListener" type class_ref 583170 // ErrorListener
	  param inout name "aTable" type class_ref 782850 // FunctionTable
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an XPath object.

(Needs review -sc) This method initializes an XPathParser/
Compiler and compiles the expression.
@param exprString The XPath expression.
@param locator The location of the expression, may be null.
@param prefixResolver A prefix resolver to use to resolve prefixes to
                      namespace URIs.
@param type one of {@link #SELECT} or {@link #MATCH}.
@param errorListener The error listener, or null if default should be used.

@throws javax.xml.transform.TransformerException if syntax or other error.
"
      end

      operation 5782786 "XPath"
	public explicit_return_type ""
	nparams 4
	  param inout name "exprString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	  param in name "type" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an XPath object.

(Needs review -sc) This method initializes an XPathParser/
Compiler and compiles the expression.
@param exprString The XPath expression.
@param locator The location of the expression, may be null.
@param prefixResolver A prefix resolver to use to resolve prefixes to
                      namespace URIs.
@param type one of {@link #SELECT} or {@link #MATCH}.

@throws javax.xml.transform.TransformerException if syntax or other error.
"
      end

      operation 5782914 "XPath"
	public explicit_return_type ""
	nparams 1
	  param inout name "expr" type class_ref 775682 // Expression
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an XPath object.

@param expr The Expression object.

@throws javax.xml.transform.TransformerException if syntax or other error.
"
      end

      operation 5783042 "execute"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "namespaceContext" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an expression and a context, evaluate the XPath
and return the result.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.
@param namespaceContext The context in which namespaces in the
XPath are supposed to be expanded.

@return The result of the XPath or null if callbacks are used.
@throws TransformerException thrown if
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      operation 5783170 "execute"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "contextNode" explicit_type "int"
	  param inout name "namespaceContext" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an expression and a context, evaluate the XPath
and return the result.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.
@param namespaceContext The context in which namespaces in the
XPath are supposed to be expanded.

@throws TransformerException thrown if the active ProblemListener decides
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      operation 5783298 "bool"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "contextNode" explicit_type "int"
	  param inout name "namespaceContext" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an expression and a context, evaluate the XPath
and return the result.

@param xctxt The execution context.
@param contextNode The node that \".\" expresses.
@param namespaceContext The context in which namespaces in the
XPath are supposed to be expanded.

@throws TransformerException thrown if the active ProblemListener decides
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
@xsl.usage experimental
"
      end

      attribute 1247746 "DEBUG_MATCHES"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set to true to get diagnostic messages about the result of
 match pattern testing.  
"
      end

      operation 5783426 "getMatchScore"
	public explicit_return_type "double"
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "context" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the match score of the given node.

@param xctxt XPath runtime context.
@param context The current source tree context node.

@return score, one of {@link #MATCH_SCORE_NODETEST},
{@link #MATCH_SCORE_NONE}, {@link #MATCH_SCORE_OTHER},
or {@link #MATCH_SCORE_QNAME}.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5783554 "warn"
	public explicit_return_type "void"
	nparams 4
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "sourceNode" explicit_type "int"
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warn the user of an problem.

@param xctxt The XPath runtime context.
@param sourceNode Not used.
@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5783682 "assertion"
	public explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an assertion error, and probably throw an
exception.

@param b  If false, a runtime exception will be thrown.
@param msg The assertion message, which should be informative.

@throws RuntimeException if the b argument is false.
"
      end

      operation 5783810 "error"
	public explicit_return_type "void"
	nparams 4
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "sourceNode" explicit_type "int"
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param xctxt The XPath runtime context.
@param sourceNode Not used.
@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5783938 "callVisitors"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 776066 // ExpressionOwner
	  param inout name "visitor" type class_ref 776194 // XPathVisitor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will traverse the heararchy, calling the visitor for
each member.  If the called visitor method returns
false, the subtree should not be called.

@param owner The owner of the visitor, where that path may be
             rewritten if needed.
@param visitor The visitor whose appropriate method will be called.
"
      end

      attribute 1247874 "MATCH_SCORE_NONE"
	class_attribute const_attribute public explicit_type "double"
	init_value " Double.NEGATIVE_INFINITY"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The match score if no match is made.
@xsl.usage advanced

"
      end

      attribute 1248002 "MATCH_SCORE_QNAME"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0.0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The match score if the pattern has the form
of a QName optionally preceded by an @ character.
@xsl.usage advanced

"
      end

      attribute 1248130 "MATCH_SCORE_NSWILD"
	class_attribute const_attribute public explicit_type "double"
	init_value " -0.25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The match score if the pattern pattern has the form NCName:*.
@xsl.usage advanced

"
      end

      attribute 1248258 "MATCH_SCORE_NODETEST"
	class_attribute const_attribute public explicit_type "double"
	init_value " -0.5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The match score if the pattern consists of just a NodeTest.
@xsl.usage advanced

"
      end

      attribute 1248386 "MATCH_SCORE_OTHER"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0.5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The match score if the pattern consists of something
other than just a NodeTest or just a qname.
@xsl.usage advanced

"
      end
    end

    class 804226 "Arg"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class holds an instance of an argument on
the stack. The value of the argument can be either an
XObject or a String containing an expression.
@xsl.usage internal
"
      classrelation 2570882 // m_qname (<unidirectional association>)
	relation 2570882 --->
	  a role_name "m_qname" private
	    comment " Field m_qname: The name of this argument, expressed as a QName
(Qualified Name) object.
@see getQName
@see setQName
 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2570882 // m_qname (<unidirectional association>)
	  b parent class_ref 583426 // QName
      end

      operation 5756162 "getQName"
	public return_type class_ref 583426 // QName
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the qualified name for this argument.

@return QName object containing the qualified name
"
      end

      operation 5756290 "setQName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 583426 // QName
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the qualified name for this argument.

@param name QName object representing the new Qualified Name.
"
      end

      classrelation 2571010 // m_val (<unidirectional association>)
	relation 2571010 --->
	  a role_name "m_val" private
	    comment " Field m_val: Stored XObject value of this argument
@see #getVal()
@see #setVal()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2571010 // m_val (<unidirectional association>)
	  b parent class_ref 583298 // XObject
      end

      operation 5756418 "getVal"
	public return_type class_ref 583298 // XObject
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for this argument.

@return the argument's stored XObject value.
@see #setVal(XObject)
"
      end

      operation 5756546 "setVal"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 583298 // XObject
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of this argument.

@param val an XObject representing the arguments's value.
@see #getVal()
"
      end

      operation 5756674 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Have the object release it's resources.
Call only when the variable or argument is going out of scope.
"
      end

      classrelation 2571138 // m_expression (<unidirectional association>)
	relation 2571138 --->
	  a role_name "m_expression" private
	    comment " Field m_expression: Stored expression value of this argument.
@see #setExpression
@see #getExpression

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2571138 // m_expression (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5756802 "getExpression"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value expression for this argument.

@return String containing the expression previously stored into this
argument
@see #setExpression
"
      end

      operation 5756930 "setExpression"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expr" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value expression for this argument.

@param expr String containing the expression to be stored as this
argument's value.
@see #getExpression
"
      end

      attribute 1244546 "m_isFromWithParam"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if this variable was added with an xsl:with-param or
is added via setParameter.

"
      end

      operation 5757058 "isFromWithParam"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this variable is a parameter passed with a with-param or as
a top-level parameter.
"
      end

      attribute 1244674 "m_isVisible"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if this variable is currently visible.  To be visible,
a variable needs to come either from xsl:variable or be
a \"received\" parameter, ie one for which an xsl:param has
been encountered.
Set at the time the object is constructed and updated as needed.

"
      end

      operation 5757186 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if this variable is currently visible.
"
      end

      operation 5757314 "setIsVisible"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update visibility status of this variable.
"
      end

      operation 5757442 "Arg"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a dummy parameter argument, with no QName and no
value (either expression string or value XObject). isVisible
defaults to true.
"
      end

      operation 5757570 "Arg"
	public explicit_return_type ""
	nparams 3
	  param inout name "qname" type class_ref 583426 // QName
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "isFromWithParam" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a parameter argument that contains an expression.

@param qname Name of the argument, expressed as a QName object.
@param expression String to be stored as this argument's value expression.
@param isFromWithParam True if this is a parameter variable.
"
      end

      operation 5757698 "Arg"
	public explicit_return_type ""
	nparams 2
	  param inout name "qname" type class_ref 583426 // QName
	  param inout name "val" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a parameter argument which has an XObject value.
isVisible defaults to true.

@param qname Name of the argument, expressed as a QName object.
@param val Value of the argument, expressed as an XObject
"
      end

      operation 5757826 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5757954 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Equality function specialized for the variable name.  If the argument
is not a qname, it will deligate to the super class.

@param   obj   the reference object with which to compare.
@return  <code>true</code> if this object is the same as the obj
         argument; <code>false</code> otherwise.
"
      end

      operation 5758082 "Arg"
	public explicit_return_type ""
	nparams 3
	  param inout name "qname" type class_ref 583426 // QName
	  param inout name "val" type class_ref 583298 // XObject
	  param inout name "isFromWithParam" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a parameter argument.

@param qname Name of the argument, expressed as a QName object.
@param val Value of the argument, expressed as an XObject
@param isFromWithParam True if this is a parameter variable.
"
      end
    end

    class 804354 "CachedXPathAPI"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The methods in this class are convenience methods into the
low-level XPath API.

These functions tend to be a little slow, since a number of objects must be
created for each evaluation.  A faster way is to precompile the
XPaths using the low-level API, and then just use the XPaths
over and over.

This is an alternative for the old XPathAPI class, which provided
static methods for the purpose but had the drawback of
instantiating a new XPathContext (and thus building a new DTMManager,
and new DTMs) each time it was called. XPathAPIObject instead retains
its context as long as the object persists, reusing the DTMs. This
does have a downside: if you've changed your source document, you should
obtain a new XPathAPIObject to continue searching it, since trying to use
the old DTMs will probably yield bad results or malfunction outright... and
the cached DTMs may consume memory until this object and its context are
returned to the heap. Essentially, it's the caller's responsibility to
decide when to discard the cache.

@see <a href=\"http://www.w3.org/TR/xpath\">XPath Specification</a>
"
      classrelation 2571266 // xpathSupport (<unidirectional association>)
	relation 2571266 --->
	  a role_name "xpathSupport" protected
	    comment " XPathContext, and thus the document model system (DTMs), persists through multiple
calls to this object. This is set in the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2571266 // xpathSupport (<unidirectional association>)
	  b parent class_ref 583682 // XPathContext
      end

      operation 5758210 "CachedXPathAPI"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Default constructor. Establishes its own {@link XPathContext}, and hence
its own {@link com.sun.org.apache.xml.internal.dtm.DTMManager}.
Good choice for simple uses.</p>
<p>Note that any particular instance of {@link CachedXPathAPI} must not be
operated upon by multiple threads without synchronization; we do
not currently support multithreaded access to a single
{@link com.sun.org.apache.xml.internal.dtm.DTM}.</p>
"
      end

      operation 5758338 "CachedXPathAPI"
	public explicit_return_type ""
	nparams 1
	  param inout name "priorXPathAPI" type class_ref 804354 // CachedXPathAPI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This constructor shares its {@link XPathContext} with a pre-existing
{@link CachedXPathAPI}.  That allows sharing document models
({@link com.sun.org.apache.xml.internal.dtm.DTM}) and previously established location
state.</p>
<p>Note that the original {@link CachedXPathAPI} and the new one should
not be operated upon concurrently; we do not support multithreaded access
to a single {@link com.sun.org.apache.xml.internal.dtm.DTM} at this time.  Similarly,
any particular instance of {@link CachedXPathAPI} must not be operated
upon by multiple threads without synchronization.</p>
<p>%REVIEW% Should this instead do a clone-and-reset on the XPathSupport object?</p>

"
      end

      operation 5758466 "getXPathContext"
	public return_type class_ref 583682 // XPathContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the XPathSupport object used in this CachedXPathAPI

%REVIEW% I'm somewhat concerned about the loss of encapsulation
this causes, but the xml-security folks say they need it.
"
      end

      operation 5758594 "selectSingleNode"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use an XPath string to select a single node. XPath namespace
prefixes are resolved from the context node, which may not
be what you want (see the next method).

@param contextNode The node to start searching from.
@param str A valid XPath string.
@return The first node found that matches the XPath, or null.

@throws TransformerException
"
      end

      operation 5758722 "selectSingleNode"
	public return_type class_ref 317570 // Node
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use an XPath string to select a single node.
XPath namespace prefixes are resolved from the namespaceNode.

@param contextNode The node to start searching from.
@param str A valid XPath string.
@param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
@return The first node found that matches the XPath, or null.

@throws TransformerException
"
      end

      operation 5758850 "selectNodeIterator"
	public return_type class_ref 583042 // NodeIterator
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the contextNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5758978 "selectNodeIterator"
	public return_type class_ref 583042 // NodeIterator
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the namespaceNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5759106 "selectNodeList"
	public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the contextNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5759234 "selectNodeList"
	public return_type class_ref 333058 // NodeList
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the namespaceNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5759362 "eval"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Evaluate XPath string to an XObject.  Using this method,
 XPath namespace prefixes will be resolved from the namespaceNode.
 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
 @see com.sun.org.apache.xpath.internal.objects.XObject
 @see com.sun.org.apache.xpath.internal.objects.XNull
 @see com.sun.org.apache.xpath.internal.objects.XBoolean
 @see com.sun.org.apache.xpath.internal.objects.XNumber
 @see com.sun.org.apache.xpath.internal.objects.XString
 @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end

      operation 5759490 "eval"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Evaluate XPath string to an XObject.
 XPath namespace prefixes are resolved from the namespaceNode.
 The implementation of this is a little slow, since it creates
 a number of objects each time it is called.  This could be optimized
 to keep the same objects around, but then thread-safety issues would arise.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
 @see com.sun.org.apache.xpath.internal.objects.XObject
 @see com.sun.org.apache.xpath.internal.objects.XNull
 @see com.sun.org.apache.xpath.internal.objects.XBoolean
 @see com.sun.org.apache.xpath.internal.objects.XNumber
 @see com.sun.org.apache.xpath.internal.objects.XString
 @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end

      operation 5759618 "eval"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Evaluate XPath string to an XObject.
  XPath namespace prefixes are resolved from the namespaceNode.
  The implementation of this is a little slow, since it creates
  a number of objects each time it is called.  This could be optimized
  to keep the same objects around, but then thread-safety issues would arise.

  @param contextNode The node to start searching from.
  @param str A valid XPath string.
  @param prefixResolver Will be called if the parser encounters namespace
                        prefixes, to resolve the prefixes to URLs.
  @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
  @see com.sun.org.apache.xpath.internal.objects.XObject
  @see com.sun.org.apache.xpath.internal.objects.XNull
  @see com.sun.org.apache.xpath.internal.objects.XBoolean
  @see com.sun.org.apache.xpath.internal.objects.XNumber
  @see com.sun.org.apache.xpath.internal.objects.XString
  @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end
    end

    class 804482 "ExtensionsProvider"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface that XPath objects can call to obtain access to an
ExtensionsTable.

"
      operation 5760002 "functionAvailable"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "funcName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the extension function available?
"
      end

      operation 5760130 "elementAvailable"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the extension element available?
"
      end

      operation 5760258 "extFunction"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "funcName" type class_ref 128130 // String
	  param inout name "argVec" type class_ref 141442 // Vector
	  param inout name "methodKey" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the extension function.
"
      end

      operation 5760386 "extFunction"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "extFunction" type class_ref 804610 // FuncExtFunction
	  param inout name "argVec" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the extension function.
"
      end
    end

    class 804738 "FoundIndex"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to let us know when it's time to do
a search from the parent because of indexing.
@xsl.usage internal
"
      classrelation 2571394 // <generalisation>
	relation 2571394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2571394 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1244802 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4643975335243078270L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5760514 "FoundIndex"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor FoundIndex

"
      end
    end

    class 804994 "NodeSetDTM"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>The NodeSetDTM class can act as either a NodeVector,
NodeList, or NodeIterator.  However, in order for it to
act as a NodeVector or NodeList, it's required that
setShouldCacheNodes(true) be called before the first
nextNode() is called, in order that nodes can be added
as they are fetched.  Derived classes that implement iterators
must override runTo(int index), in order that they may
run the iteration to the given index. </p>

<p>Note that we directly implement the DOM's NodeIterator
interface. We do not emulate all the behavior of the
standard NodeIterator. In particular, we do not guarantee
to present a \"live view\" of the document ... but in XSLT,
the source document should never be mutated, so this should
never be an issue.</p>

<p>Thought: Should NodeSetDTM really implement NodeList and NodeIterator,
or should there be specific subclasses of it which do so? The
advantage of doing it all here is that all NodeSetDTMs will respond
to the same calls; the disadvantage is that some of them may return
less-than-enlightening results when you do so.</p>
@xsl.usage advanced
"
      classrelation 2572162 // <generalisation>
	relation 2572162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2572162 // <generalisation>
	  b parent class_ref 632706 // NodeVector
      end

      classrelation 2572290 // <realization>
	relation 2572290 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2572290 // <realization>
	  b parent class_ref 635522 // DTMIterator
      end

      classrelation 2572418 // <realization>
	relation 2572418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2572418 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1245826 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7686480133331317070L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " NodeList, NodeIterator, 
"
      end

      operation 5769986 "NodeSetDTM"
	public explicit_return_type ""
	nparams 1
	  param inout name "dtmManager" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty nodelist.
"
      end

      operation 5770114 "NodeSetDTM"
	public explicit_return_type ""
	nparams 3
	  param in name "blocksize" explicit_type "int"
	  param in name "dummy" explicit_type "int"
	  param inout name "dtmManager" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty, using the given block size.

@param blocksize Size of blocks to allocate
@param dummy pass zero for right now...
"
      end

      operation 5770242 "NodeSetDTM"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodelist" type class_ref 804994 // NodeSetDTM
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " %TBD%
  /**
   * Create a NodeSetDTM, and copy the members of the
   * given nodelist into it.
   *
   * @param nodelist List of Nodes to be made members of the new set.
   */
  public NodeSetDTM(NodeList nodelist)
  {

    super();

    addNodes(nodelist);
  }

Create a NodeSetDTM, and copy the members of the
given NodeSetDTM into it.

@param nodelist Set of Nodes to be made members of the new set.
"
      end

      operation 5770370 "NodeSetDTM"
	public explicit_return_type ""
	nparams 1
	  param inout name "ni" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSetDTM, and copy the members of the
given DTMIterator into it.

@param ni Iterator which yields Nodes to be made members of the new set.
"
      end

      operation 5770498 "NodeSetDTM"
	public explicit_return_type ""
	nparams 2
	  param inout name "iterator" type class_ref 583042 // NodeIterator
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSetDTM, and copy the members of the
given DTMIterator into it.

@param iterator Iterator which yields Nodes to be made members of the new set.
"
      end

      operation 5770626 "NodeSetDTM"
	public explicit_return_type ""
	nparams 2
	  param inout name "nodeList" type class_ref 333058 // NodeList
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSetDTM, and copy the members of the
given DTMIterator into it.

"
      end

      operation 5770754 "NodeSetDTM"
	public explicit_return_type ""
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "dtmManager" type class_ref 619266 // DTMManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a NodeSetDTM which contains the given Node.

@param node Single node to be added to the new set.
"
      end

      operation 5770882 "setEnvironment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the environment in which this iterator operates, which should provide:
a node (the context node... same value as \"root\" defined below)
a pair of non-zero positive integers (the context position and the context size)
a set of variable bindings
a function library
the set of namespace declarations in scope for the expression.

<p>At this time the exact implementation of this environment is application
dependent.  Probably a proper interface will be created fairly soon.</p>

@param environment The environment object.
"
      end

      operation 5771010 "getRoot"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The root node of the Iterator, as specified when it was created.
For non-Iterator NodeSetDTMs, this will be null.
"
      end

      operation 5771138 "setRoot"
	public explicit_return_type "void"
	nparams 2
	  param in name "context" explicit_type "int"
	  param inout name "environment" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the context values for this expression
after it is cloned.

@param context The XPath runtime context for this
transformation.
"
      end

      operation 5771266 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clone this NodeSetDTM.
At this time, we only expect this to be used with LocPathIterators;
it may not work with other kinds of NodeSetDTMs.

@return a new NodeSetDTM of the same type, having the same state...
though unless overridden in the subclasses, it may not copy all
the state information.

@throws CloneNotSupportedException if this subclass of NodeSetDTM
does not support the clone() operation.
"
      end

      operation 5771394 "cloneWithReset"
	public return_type class_ref 635522 // DTMIterator
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a cloned Iterator, and reset its state to the beginning of the
iteration.

@return a new NodeSetDTM of the same type, having the same state...
except that the reset() operation has been called.

@throws CloneNotSupportedException if this subclass of NodeSetDTM
does not support the clone() operation.
"
      end

      operation 5771522 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator. May have no effect on non-iterator Nodesets.
"
      end

      operation 5771650 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This attribute determines which node types are presented via the
iterator. The available set of constants is defined in the
<code>DTMFilter</code> interface. For NodeSetDTMs, the mask has been
hardcoded to show all nodes except EntityReference nodes, which have
no equivalent in the XPath data model.

@return integer used as a bit-array, containing flags defined in
the DOM's DTMFilter class. The value will be
<code>SHOW_ALL & ~SHOW_ENTITY_REFERENCE</code>, meaning that
only entity references are suppressed.
"
      end

      operation 5771778 "getFilter"
	public return_type class_ref 623362 // DTMFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The filter object used to screen nodes. Filters are applied to
further reduce (and restructure) the DTMIterator's view of the
document. In our case, we will be using hardcoded filters built
into our iterators... but getFilter() is part of the DOM's
DTMIterator interface, so we have to support it.

@return null, which is slightly misleading. True, there is no
user-written filter object, but in fact we are doing some very
sophisticated custom filtering. A DOM purist might suggest
returning a placeholder object just to indicate that this is
not going to return all nodes selected by whatToShow.
"
      end

      operation 5771906 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The value of this flag determines whether the children of entity
reference nodes are visible to the iterator. If false, they will be
skipped over.
<br> To produce a view of the document that has entity references
expanded and does not expose the entity reference node itself, use the
whatToShow flags to hide the entity reference node and set
expandEntityReferences to true when creating the iterator. To produce
a view of the document that has entity reference nodes but no entity
expansion, use the whatToShow flags to show the entity reference node
and set expandEntityReferences to false.

@return true for all iterators based on NodeSetDTM, meaning that the
contents of EntityRefrence nodes may be returned (though whatToShow
says that the EntityReferences themselves are not shown.)
"
      end

      operation 5772034 "getDTM"
	public return_type class_ref 618754 // DTM
	nparams 1
	  param in name "nodeHandle" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of a DTM that \"owns\" a node handle.  Since a node
iterator may be passed without a DTMManager, this allows the
caller to easily get the DTM using just the iterator.

@param nodeHandle the nodeHandle.

@return a non-null DTM reference.
"
      end

      classrelation 2572546 // m_manager (<unidirectional association>)
	relation 2572546 --->
	  a role_name "m_manager" package
	    comment " An instance of the DTMManager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2572546 // m_manager (<unidirectional association>)
	  b parent class_ref 619266 // DTMManager
      end

      operation 5772162 "getDTMManager"
	public return_type class_ref 619266 // DTMManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the DTMManager.  Since a node
iterator may be passed without a DTMManager, this allows the
caller to easily get the DTMManager using just the iterator.

@return a non-null DTMManager reference.
"
      end

      operation 5772290 "nextNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the next node in the set and advances the position of the
iterator in the set. After a DTMIterator is created, the first call
to nextNode() returns the first node in the set.
@return  The next <code>Node</code> in the set being iterated over, or
  <code>DTM.NULL</code> if there are no more members in that set.
@throws DOMException
   INVALID_STATE_ERR: Raised if this method is called after the
  <code>detach</code> method was invoked.
"
      end

      operation 5772418 "previousNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the previous node in the set and moves the position of the
iterator backwards in the set.
@return  The previous <code>Node</code> in the set being iterated over,
  or<code>DTM.NULL</code> if there are no more members in that set.
@throws DOMException
   INVALID_STATE_ERR: Raised if this method is called after the
  <code>detach</code> method was invoked.
@throws RuntimeException thrown if this NodeSetDTM is not of
a cached type, and hence doesn't know what the previous node was.
"
      end

      operation 5772546 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detaches the iterator from the set which it iterated over, releasing
any computational resources and placing the iterator in the INVALID
state. After<code>detach</code> has been invoked, calls to
<code>nextNode</code> or<code>previousNode</code> will raise the
exception INVALID_STATE_ERR.
<p>
This operation is a no-op in NodeSetDTM, and will not cause
INVALID_STATE_ERR to be raised by later operations.
</p>
"
      end

      operation 5772674 "allowDetachToRelease"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowRelease" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify if it's OK for detach to release the iterator for reuse.

@param allowRelease true if it is OK for detach to release this iterator
for pooling.
"
      end

      operation 5772802 "isFresh"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this NodeSetDTM is \"fresh\", in other words, if
the first nextNode() that is called will return the
first node in the set.

@return true if nextNode() would return the first node in the set,
false if it would return a later one.
"
      end

      operation 5772930 "runTo"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If an index is requested, NodeSetDTM will call this method
to run the iterator to the index.  By default this sets
m_next to the index.  If the index argument is -1, this
signals that the iterator should be run to the end.

@param index Position to advance (or retreat) to, with
0 requesting the reset (\"fresh\") position and -1 (or indeed
any out-of-bounds value) requesting the final position.
@throws RuntimeException thrown if this NodeSetDTM is not
one of the types which supports indexing/counting.
"
      end

      operation 5773058 "item"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>index</code>th item in the collection. If
<code>index</code> is greater than or equal to the number of nodes in
the list, this returns <code>null</code>.

TODO: What happens if index is out of range?

@param index Index into the collection.
@return The node at the <code>index</code>th position in the
  <code>NodeList</code>, or <code>null</code> if that is not a valid
  index.
"
      end

      operation 5773186 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of nodes in the list. The range of valid child node indices is
0 to <code>length-1</code> inclusive. Note that this operation requires
finding all the matching nodes, which may defeat attempts to defer
that work.

@return integer indicating how many nodes are represented by this list.
"
      end

      operation 5773314 "addNode"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a node to the NodeSetDTM. Not all types of NodeSetDTMs support this
operation

@param n Node to be added
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5773442 "insertNode"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert a node at a given position.

@param n Node to be added
@param pos Offset at which the node is to be inserted,
with 0 being the first position.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5773570 "removeNode"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a node.

@param n Node to be added
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5773698 "addNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iterator" type class_ref 635522 // DTMIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " %TBD%
  /**
   * Copy NodeList members into this nodelist, adding in
   * document order.  If a node is null, don't add it.
   *
   * @param nodelist List of nodes which should now be referenced by
   * this NodeSetDTM.
   * @throws RuntimeException thrown if this NodeSetDTM is not of
   * a mutable type.
   */
  public void addNodes(NodeList nodelist)
  {

    if (!m_mutable)
      throw new RuntimeException(\"This NodeSetDTM is not mutable!\");

    if (null != nodelist)  // defensive to fix a bug that Sanjiva reported.
    {
      int nChildren = nodelist.getLength();

      for (int i = 0; i < nChildren; i++)
      {
        int obj = nodelist.item(i);

        if (null != obj)
        {
          addElement(obj);
        }
      }
    }

    // checkDups();
  }
 %TBD%
  /**
   * <p>Copy NodeList members into this nodelist, adding in
   * document order.  Only genuine node references will be copied;
   * nulls appearing in the source NodeSetDTM will
   * not be added to this one. </p>
   *
   * <p> In case you're wondering why this function is needed: NodeSetDTM
   * implements both DTMIterator and NodeList. If this method isn't
   * provided, Java can't decide which of those to use when addNodes()
   * is invoked. Providing the more-explicit match avoids that
   * ambiguity.)</p>
   *
   * @param ns NodeSetDTM whose members should be merged into this NodeSetDTM.
   * @throws RuntimeException thrown if this NodeSetDTM is not of
   * a mutable type.
   */
  public void addNodes(NodeSetDTM ns)
  {

    if (!m_mutable)
      throw new RuntimeException(\"This NodeSetDTM is not mutable!\");

    addNodes((DTMIterator) ns);
  }

Copy NodeList members into this nodelist, adding in
document order.  Null references are not added.

@param iterator DTMIterator which yields the nodes to be added.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5773826 "addNodesInDocOrder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "iterator" type class_ref 635522 // DTMIterator
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " %TBD%
  /**
   * Copy NodeList members into this nodelist, adding in
   * document order.  If a node is null, don't add it.
   *
   * @param nodelist List of nodes to be added
   * @param support The XPath runtime context.
   * @throws RuntimeException thrown if this NodeSetDTM is not of
   * a mutable type.
   */
  public void addNodesInDocOrder(NodeList nodelist, XPathContext support)
  {

    if (!m_mutable)
      throw new RuntimeException(\"This NodeSetDTM is not mutable!\");

    int nChildren = nodelist.getLength();

    for (int i = 0; i < nChildren; i++)
    {
      int node = nodelist.item(i);

      if (null != node)
      {
        addNodeInDocOrder(node, support);
      }
    }
  }

Copy NodeList members into this nodelist, adding in
document order.  If a node is null, don't add it.

@param iterator DTMIterator which yields the nodes to be added.
@param support The XPath runtime context.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5773954 "addNodeInDocOrder"
	public explicit_return_type "int"
	nparams 3
	  param in name "node" explicit_type "int"
	  param inout name "test" explicit_type "boolean"
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " %TBD%
  /**
   * Add the node list to this node set in document order.
   *
   * @param start index.
   * @param end index.
   * @param testIndex index.
   * @param nodelist The nodelist to add.
   * @param support The XPath runtime context.
   *
   * @return false always.
   * @throws RuntimeException thrown if this NodeSetDTM is not of
   * a mutable type.
   */
  private boolean addNodesInDocOrder(int start, int end, int testIndex,
                                     NodeList nodelist, XPathContext support)
  {

    if (!m_mutable)
      throw new RuntimeException(\"This NodeSetDTM is not mutable!\");

    boolean foundit = false;
    int i;
    int node = nodelist.item(testIndex);

    for (i = end; i >= start; i--)
    {
      int child = elementAt(i);

      if (child == node)
      {
        i = -2;  // Duplicate, suppress insert

        break;
      }

      if (!support.getDOMHelper().isNodeAfter(node, child))
      {
        insertElementAt(node, i + 1);

        testIndex--;

        if (testIndex > 0)
        {
          boolean foundPrev = addNodesInDocOrder(0, i, testIndex, nodelist,
                                                 support);

          if (!foundPrev)
          {
            addNodesInDocOrder(i, size() - 1, testIndex, nodelist, support);
          }
        }

        break;
      }
    }

    if (i == -1)
    {
      insertElementAt(node, 0);
    }

    return foundit;
  }

Add the node into a vector of nodes where it should occur in
document order.
@param node The node to be added.
@param test true if we should test for doc order
@param support The XPath runtime context.
@return insertIndex.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774082 "addNodeInDocOrder"
	public explicit_return_type "int"
	nparams 2
	  param in name "node" explicit_type "int"
	  param inout name "support" type class_ref 583682 // XPathContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end addNodeInDocOrder(Vector v, Object obj)

Add the node into a vector of nodes where it should occur in
document order.
@param node The node to be added.
@param support The XPath runtime context.

@return The index where it was inserted.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774210 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " end addNodeInDocOrder(Vector v, Object obj)

Get the length of the list.

@return The size of this node set.
"
      end

      operation 5774338 "addElement"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a Node onto the vector.

@param value The node to be added.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774466 "insertElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "at" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.

@param value The node to be inserted.
@param at The index where the insert should occur.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774594 "appendNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodes" type class_ref 632706 // NodeVector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the nodes to the list.

@param nodes The nodes to be appended to this node set.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774722 "removeAllElements"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified node in this vector at the specified index.
Each component in this vector with an index greater or equal to
the specified index is shifted upward to have an index one greater
than the value it had previously.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774850 "removeElement"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the first occurrence of the argument from this vector.
If the object is found in this vector, each component in the vector
with an index greater or equal to the object's index is shifted
downward to have an index one smaller than the value it had
previously.

@param s The node to be removed.

@return True if the node was successfully removed
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5774978 "removeElementAt"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the component at the specified index. Each component in
this vector with an index greater or equal to the specified
index is shifted downward to have an index one smaller than
the value it had previously.

@param i The index of the node to be removed.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5775106 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "node" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param node  The node to be set.
@param index The index of the node to be replaced.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5775234 "setItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "node" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as setElementAt.

@param node  The node to be set.
@param index The index of the node to be replaced.
@throws RuntimeException thrown if this NodeSetDTM is not of
a mutable type.
"
      end

      operation 5775362 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i The index of the requested node.

@return Node at specified index.
"
      end

      operation 5775490 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "s" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given node.

@param s Node to look for

@return True if the given node was found.
"
      end

      operation 5775618 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "elem" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@param index Index of where to start the search
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      operation 5775746 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "elem" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first occurence of the given argument,
beginning the search at index, and testing for equality
using the equals method.

@param elem Node to look for
@return the index of the first occurrence of the object
argument in this vector at position index or later in the
vector; returns -1 if the object is not found.
"
      end

      attribute 1245954 "m_next"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If this node is being used as an iterator, the next index that nextNode()
 will return.  
"
      end

      operation 5775874 "getCurrentPos"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current position, which is one less than
the next nextNode() call will retrieve.  i.e. if
you call getCurrentPos() and the return is 0, the next
fetch will take place at index 1.

@return The the current position index.
"
      end

      operation 5776002 "setCurrentPos"
	public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current position in the node set.
@param i Must be a valid index.
@throws RuntimeException thrown if this NodeSetDTM is not of
a cached type, and thus doesn't permit indexed access.
"
      end

      operation 5776130 "getCurrentNode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last fetched node.  Needed to support the UnionPathIterator.

@return the last fetched node.
@throws RuntimeException thrown if this NodeSetDTM is not of
a cached type, and thus doesn't permit indexed access.
"
      end

      attribute 1246082 "m_mutable"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if this list can be mutated.  
"
      end

      attribute 1246210 "m_cacheNodes"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " True if this list is cached.
 @serial  
"
      end

      attribute 1246338 "m_root"
	protected explicit_type "int"
	init_value " DTM.NULL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The root of the iteration, if available. 
"
      end

      operation 5776258 "getShouldCacheNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get whether or not this is a cached node set.


@return True if this list is cached.
"
      end

      operation 5776386 "setShouldCacheNodes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If setShouldCacheNodes(true) is called, then nodes will
be cached.  They are not cached by default. This switch must
be set before the first call to nextNode is made, to ensure
that all nodes are cached.

@param b true if this node set should be cached.
@throws RuntimeException thrown if an attempt is made to
request caching after we've already begun stepping through the
nodes in this set.
"
      end

      operation 5776514 "isMutable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells if this iterator can have nodes added to it or set via
the <code>setItem(int node, int index)</code> method.

@return True if the nodelist can be mutated.
"
      end

      attribute 1246466 "m_last"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5776642 "getLast"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5776770 "setLast"
	public explicit_return_type "void"
	nparams 1
	  param in name "last" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5776898 "isDocOrdered"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if all the nodes in the iteration well be returned in document
order.

@return true as a default.
"
      end

      operation 5777026 "getAxis"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the axis being iterated, if it is known.

@return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple
types.
"
      end
    end

    class 805122 "SourceTree"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This object represents a Source Tree, and any associated
information.
@xsl.usage internal
"
      operation 5777154 "SourceTree"
	public explicit_return_type ""
	nparams 2
	  param in name "root" explicit_type "int"
	  param inout name "url" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor SourceTree


@param root The root of the source tree, which may or may not be a
{@link org.w3c.dom.Document} node.
@param url The URI of the source tree.
"
      end

      classrelation 2572674 // m_url (<unidirectional association>)
	relation 2572674 --->
	  a role_name "m_url" public
	    comment " The URI of the source tree.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2572674 // m_url (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1246594 "m_root"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The root of the source tree, which may or may not be a
{@link org.w3c.dom.Document} node.  
"
      end
    end

    class 805250 "SourceTreeManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class bottlenecks all management of source trees.  The methods
in this class should allow easy garbage collection of source
trees (not yet!), and should centralize parsing for those source trees.
"
      classrelation 2572802 // m_sourceTree (<unidirectional association>)
	relation 2572802 --->
	  a role_name "m_sourceTree" init_value " new Vector()" private
	    comment " Vector of SourceTree objects that this manager manages. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2572802 // m_sourceTree (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 5777282 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the list of SourceTree objects that this manager manages.

"
      end

      classrelation 2572930 // m_uriResolver (<unidirectional association>)
	relation 2572930 --->
	  a role_name "m_uriResolver" package
	    comment " The TrAX URI resolver used to obtain source trees. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2572930 // m_uriResolver (<unidirectional association>)
	  b parent class_ref 642946 // URIResolver
      end

      operation 5777410 "setURIResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 642946 // URIResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an object that will be used to resolve URIs used in
document(), etc.
@param resolver An object that implements the URIResolver interface,
or null.
"
      end

      operation 5777538 "getURIResolver"
	public return_type class_ref 642946 // URIResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the object that will be used to resolve URIs used in
document(), etc.
@return An object that implements the URIResolver interface,
or null.
"
      end

      operation 5777666 "findURIFromDoc"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "owner" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a document, find the URL associated with that document.
@param owner Document that was previously processed by this liaison.

@return The base URI of the owner argument.
"
      end

      operation 5777794 "resolveURI"
	public return_type class_ref 627202 // Source
	nparams 3
	  param inout name "base" type class_ref 128130 // String
	  param inout name "urlString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	nexceptions 2
	  exception class_ref 583554 // TransformerException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will be called by the processor when it encounters
an xsl:include, xsl:import, or document() function.

@param base The base URI that should be used.
@param urlString Value from an xsl:import or xsl:include's href attribute,
or a URI specified in the document() function.

@return a Source that can be used to process the resource.

@throws IOException
@throws TransformerException
"
      end

      operation 5777922 "removeDocumentFromCache"
	public explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " JJK: Support  <?xalan:doc_cache_off?> kluge in ElemForEach.
TODO: This function is highly dangerous. Cache management must be improved.

@param n The node to remove.
"
      end

      operation 5778050 "putDocumentInCache"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "source" type class_ref 627202 // Source
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put the source tree root node in the document cache.
TODO: This function needs to be a LOT more sophisticated.

@param n The node to cache.
@param source The Source object to cache.
"
      end

      operation 5778178 "getNode"
	public explicit_return_type "int"
	nparams 1
	  param inout name "source" type class_ref 627202 // Source
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a Source object, find the node associated with it.

@param source The Source object to act as the key.

@return The node that is associated with the Source, or null if not found.
"
      end

      operation 5778306 "getSourceTree"
	public explicit_return_type "int"
	nparams 4
	  param inout name "base" type class_ref 128130 // String
	  param inout name "urlString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the source tree from the a base URL and a URL string.

@param base The base URI to use if the urlString is relative.
@param urlString An absolute or relative URL string.
@param locator The location of the caller, for diagnostic purposes.

@return should be a non-null reference to the node identified by the
base and urlString.

@throws TransformerException If the URL can not resolve to a node.
"
      end

      operation 5778434 "getSourceTree"
	public explicit_return_type "int"
	nparams 3
	  param inout name "source" type class_ref 627202 // Source
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the source tree from the input source.

@param source The Source object that should identify the desired node.
@param locator The location of the caller, for diagnostic purposes.

@return non-null reference to a node.

@throws TransformerException if the Source argument can't be resolved to
        a node.
"
      end

      operation 5778562 "parseToNode"
	public explicit_return_type "int"
	nparams 3
	  param inout name "source" type class_ref 627202 // Source
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to create a DOM source tree from the input source.

@param source The Source object that identifies the source node.
@param locator The location of the caller, for diagnostic purposes.

@return non-null reference to node identified by the source argument.

@throws TransformerException if the source argument can not be resolved
        to a source node.
"
      end

      operation 5778690 "getXMLReader"
	class_operation public return_type class_ref 606466 // XMLReader
	nparams 2
	  param inout name "inputSource" type class_ref 627202 // Source
	  param inout name "locator" type class_ref 617346 // SourceLocator
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the SAX2 parser to use with the InputSource
obtained from this URI.
It may return null if any SAX2-conformant XML parser can be used,
or if getInputSource() will also return null. The parser must
be free for use (i.e.
not currently in use for another parse().

@param inputSource The value returned from the URIResolver.
@return a SAX2 XMLReader to use to resolve the inputSource argument.
@param locator The location of the original caller, for diagnostic purposes.

@throws TransformerException if the reader can not be created.
"
      end
    end

    class 805378 "VariableStack"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a class to keep track of a stack for
template arguments and variables.

<p>This has been changed from the previous incarnations of this
class to be fairly low level.</p>
@xsl.usage internal
"
      classrelation 2573058 // <realization>
	relation 2573058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2573058 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      attribute 1246722 "CLEARLIMITATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1024"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "limitation for 1K

"
      end

      operation 5778818 "VariableStack"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for a variable stack.
"
      end

      operation 5778946 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a clone of this variable stack.

@return  a clone of this variable stack.

@throws CloneNotSupportedException
"
      end

      classrelation 2573186 // _stackFrames (<unidirectional association>)
	relation 2573186 --->
	  a role_name "_stackFrames" multiplicity "[]" init_value " new XObject[XPathContext.RECURSIONLIMIT * 2]" package
	    comment "
The stack frame where all variables and params will be kept.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2573186 // _stackFrames (<unidirectional association>)
	  b parent class_ref 583298 // XObject
      end

      attribute 1246850 "_frameTop"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The top of the stack frame (<code>_stackFrames</code>).
@serial

"
      end

      attribute 1246978 "_currentFrameBottom"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The bottom index of the current frame (relative to <code>_stackFrames</code>).
@serial

"
      end

      attribute 1247106 "_links"
	package explicit_type "int"
	multiplicity "[]"
	init_value " new int[XPathContext.RECURSIONLIMIT]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The stack of frame positions.  I call 'em links because of distant
<a href=\"http://math.millikin.edu/mprogers/Courses/currentCourses/CS481-ComputerArchitecture/cs481.Motorola68000.html\">
Motorola 68000 assembler</a> memories.  :-)
@serial

"
      end

      attribute 1247234 "_linksTop"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The top of the links stack.

"
      end

      operation 5779074 "elementAt"
	public return_type class_ref 583298 // XObject
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the element at the given index, regardless of stackframe.

@param i index from zero.

@return The item at the given index.
"
      end

      operation 5779202 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get size of the stack.

@return the total size of the execution stack.
"
      end

      operation 5779330 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the stack to a start position.

@return the total size of the execution stack.
"
      end

      operation 5779458 "setStackFrame"
	public explicit_return_type "void"
	nparams 1
	  param in name "sf" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current stack frame.

@param sf The new stack frame position.
"
      end

      operation 5779586 "getStackFrame"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the position from where the search should start,
which is either the searchStart property, or the top
of the stack if that value is -1.

@return The current stack frame position.
"
      end

      operation 5779714 "link"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates memory (called a stackframe) on the stack; used to store
local variables and parameter arguments.

<p>I use the link/unlink concept because of distant
<a href=\"http://math.millikin.edu/mprogers/Courses/currentCourses/CS481-ComputerArchitecture/cs481.Motorola68000.html\">
Motorola 68000 assembler</a> memories.</p>

@param size The size of the stack frame allocation.  This ammount should
normally be the maximum number of variables that you can have allocated
at one time in the new stack frame.

@return The bottom of the stack frame, from where local variable addressing
should start from.
"
      end

      operation 5779842 "unlink"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Free up the stack frame that was last allocated with
{@link #link(int size)}.
"
      end

      operation 5779970 "unlink"
	public explicit_return_type "void"
	nparams 1
	  param in name "currentFrame" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Free up the stack frame that was last allocated with
{@link #link(int size)}.
@param currentFrame The current frame to set to
after the unlink.
"
      end

      operation 5780098 "setLocalVariable"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "val" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a local variable or parameter in the current stack frame.


@param index Local variable index relative to the current stack
frame bottom.

@param val The value of the variable that is being set.
"
      end

      operation 5780226 "setLocalVariable"
	public explicit_return_type "void"
	nparams 3
	  param in name "index" explicit_type "int"
	  param inout name "val" type class_ref 583298 // XObject
	  param in name "stackFrame" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a local variable or parameter in the specified stack frame.


@param index Local variable index relative to the current stack
frame bottom.
NEEDSDOC @param stackFrame

@param val The value of the variable that is being set.
"
      end

      operation 5780354 "getLocalVariable"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a local variable or parameter in the current stack frame.


@param xctxt The XPath context, which must be passed in order to
lazy evaluate variables.

@param index Local variable index relative to the current stack
frame bottom.

@return The value of the variable.

@throws TransformerException
"
      end

      operation 5780482 "getLocalVariable"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "frame" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a local variable or parameter in the current stack frame.


@param index Local variable index relative to the given
frame bottom.
NEEDSDOC @param frame

@return The value of the variable.

@throws TransformerException
"
      end

      operation 5780610 "getLocalVariable"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "index" explicit_type "int"
	  param inout name "destructiveOK" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a local variable or parameter in the current stack frame.


@param xctxt The XPath context, which must be passed in order to
lazy evaluate variables.

@param index Local variable index relative to the current stack
frame bottom.

@return The value of the variable.

@throws TransformerException
"
      end

      operation 5780738 "isLocalSet"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if a local variable has been set or not.

@param index Local variable index relative to the current stack
frame bottom.

@return true if the value at the index is not null.

@throws TransformerException
"
      end

      classrelation 2573314 // m_nulls (<unidirectional association>)
	relation 2573314 --->
	  a role_name "m_nulls" multiplicity "[]" init_value " new XObject[CLEARLIMITATION]" class_relation private
	    comment " NEEDSDOC Field m_nulls          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2573314 // m_nulls (<unidirectional association>)
	  b parent class_ref 583298 // XObject
      end

      operation 5780866 "clearLocalSlots"
	public explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use this to clear the variables in a section of the stack.  This is
used to clear the parameter section of the stack, so that default param
values can tell if they've already been set.  It is important to note that
this function has a 1K limitation.

@param start The start position, relative to the current local stack frame.
@param len The number of slots to be cleared.
"
      end

      operation 5780994 "setGlobalVariable"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "val" type class_ref 583298 // XObject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a global variable or parameter in the global stack frame.


@param index Local variable index relative to the global stack frame
bottom.

@param val The value of the variable that is being set.
"
      end

      operation 5781122 "getGlobalVariable"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a global variable or parameter from the global stack frame.


@param xctxt The XPath context, which must be passed in order to
lazy evaluate variables.

@param index Global variable index relative to the global stack
frame bottom.

@return The value of the variable.

@throws TransformerException
"
      end

      operation 5781250 "getGlobalVariable"
	public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param in name "index" explicit_type "int"
	  param inout name "destructiveOK" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a global variable or parameter from the global stack frame.


@param xctxt The XPath context, which must be passed in order to
lazy evaluate variables.

@param index Global variable index relative to the global stack
frame bottom.

@return The value of the variable.

@throws TransformerException
"
      end

      operation 5781378 "getVariableOrParam"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "qname" type class_ref 583426 // QName
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a variable based on it's qualified name.
This is for external use only.

@param xctxt The XPath context, which must be passed in order to
lazy evaluate variables.

@param qname The qualified name of the variable.

@return The evaluated value of the variable.

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 805506 "WhitespaceStrippingElementMatcher"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class that implements this interface can tell if a given element should
strip whitespace nodes from it's children.
"
      operation 5781506 "shouldStripWhiteSpace"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "support" type class_ref 583682 // XPathContext
	  param inout name "targetElement" type class_ref 648194 // Element
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information about whether or not an element should strip whitespace.
@see <a href=\"http://www.w3.org/TR/xslt#strip\">strip in XSLT Specification</a>

@param support The XPath runtime state.
@param targetElement Element to check

@return true if the whitespace should be stripped.

@throws TransformerException
"
      end

      operation 5781634 "canStripWhiteSpace"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information about whether or not whitespace can be stripped.
@see <a href=\"http://www.w3.org/TR/xslt#strip\">strip in XSLT Specification</a>

@return true if the whitespace can be stripped.
"
      end
    end

    class 805634 "XPathAPI"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The methods in this class are convenience methods into the
low-level XPath API.
These functions tend to be a little slow, since a number of objects must be
created for each evaluation.  A faster way is to precompile the
XPaths using the low-level API, and then just use the XPaths
over and over.

NOTE: In particular, each call to this method will create a new
XPathContext, a new DTMManager... and thus a new DTM. That's very
safe, since it guarantees that you're always processing against a
fully up-to-date view of your document. But it's also portentially
very expensive, since you're rebuilding the DTM every time. You should
consider using an instance of CachedXPathAPI rather than these static
methods.

@see <a href=\"http://www.w3.org/TR/xpath\">XPath Specification</a>
"
      operation 5784066 "selectSingleNode"
	class_operation public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use an XPath string to select a single node. XPath namespace
prefixes are resolved from the context node, which may not
be what you want (see the next method).

@param contextNode The node to start searching from.
@param str A valid XPath string.
@return The first node found that matches the XPath, or null.

@throws TransformerException
"
      end

      operation 5784194 "selectSingleNode"
	class_operation public return_type class_ref 317570 // Node
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use an XPath string to select a single node.
XPath namespace prefixes are resolved from the namespaceNode.

@param contextNode The node to start searching from.
@param str A valid XPath string.
@param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
@return The first node found that matches the XPath, or null.

@throws TransformerException
"
      end

      operation 5784322 "selectNodeIterator"
	class_operation public return_type class_ref 583042 // NodeIterator
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the contextNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5784450 "selectNodeIterator"
	class_operation public return_type class_ref 583042 // NodeIterator
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the namespaceNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5784578 "selectNodeList"
	class_operation public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the contextNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5784706 "selectNodeList"
	class_operation public return_type class_ref 333058 // NodeList
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Use an XPath string to select a nodelist.
 XPath namespace prefixes are resolved from the namespaceNode.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return A NodeIterator, should never be null.

@throws TransformerException
"
      end

      operation 5784834 "eval"
	class_operation public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Evaluate XPath string to an XObject.  Using this method,
 XPath namespace prefixes will be resolved from the namespaceNode.
 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
 @see com.sun.org.apache.xpath.internal.objects.XObject
 @see com.sun.org.apache.xpath.internal.objects.XNull
 @see com.sun.org.apache.xpath.internal.objects.XBoolean
 @see com.sun.org.apache.xpath.internal.objects.XNumber
 @see com.sun.org.apache.xpath.internal.objects.XString
 @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end

      operation 5784962 "eval"
	class_operation public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "namespaceNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Evaluate XPath string to an XObject.
 XPath namespace prefixes are resolved from the namespaceNode.
 The implementation of this is a little slow, since it creates
 a number of objects each time it is called.  This could be optimized
 to keep the same objects around, but then thread-safety issues would arise.

 @param contextNode The node to start searching from.
 @param str A valid XPath string.
 @param namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.
 @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
 @see com.sun.org.apache.xpath.internal.objects.XObject
 @see com.sun.org.apache.xpath.internal.objects.XNull
 @see com.sun.org.apache.xpath.internal.objects.XBoolean
 @see com.sun.org.apache.xpath.internal.objects.XNumber
 @see com.sun.org.apache.xpath.internal.objects.XString
 @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end

      operation 5785090 "eval"
	class_operation public return_type class_ref 583298 // XObject
	nparams 3
	  param inout name "contextNode" type class_ref 317570 // Node
	  param inout name "str" type class_ref 128130 // String
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Evaluate XPath string to an XObject.
  XPath namespace prefixes are resolved from the namespaceNode.
  The implementation of this is a little slow, since it creates
  a number of objects each time it is called.  This could be optimized
  to keep the same objects around, but then thread-safety issues would arise.

  @param contextNode The node to start searching from.
  @param str A valid XPath string.
  @param prefixResolver Will be called if the parser encounters namespace
                        prefixes, to resolve the prefixes to URLs.
  @return An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.
  @see com.sun.org.apache.xpath.internal.objects.XObject
  @see com.sun.org.apache.xpath.internal.objects.XNull
  @see com.sun.org.apache.xpath.internal.objects.XBoolean
  @see com.sun.org.apache.xpath.internal.objects.XNumber
  @see com.sun.org.apache.xpath.internal.objects.XString
  @see com.sun.org.apache.xpath.internal.objects.XRTreeFrag

@throws TransformerException
"
      end
    end

    class 806146 "XPathException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements an exception object that all
XPath classes will throw in case of an error.  This class
extends TransformerException, and may hold other exceptions. In the
case of nested exceptions, printStackTrace will dump
all the traces of the nested exceptions, not just the trace
of this object.
@xsl.usage general
"
      classrelation 2577666 // <generalisation>
	relation 2577666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2577666 // <generalisation>
	  b parent class_ref 583554 // TransformerException
      end

      attribute 1249154 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4263549717619045963L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2577794 // m_styleNode (<unidirectional association>)
	relation 2577794 --->
	  a role_name "m_styleNode" init_value " null" package
	    comment " The home of the expression that caused the error.
 @serial  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2577794 // m_styleNode (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 5799170 "getStylesheetNode"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the stylesheet node from where this error originated.
@return The stylesheet node from where this error originated, or null.
"
      end

      operation 5799298 "setStylesheetNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "styleNode" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the stylesheet node from where this error originated.
@param styleNode The stylesheet node from where this error originated, or null.
"
      end

      classrelation 2577922 // m_exception (<unidirectional association>)
	relation 2577922 --->
	  a role_name "m_exception" protected
	    comment " A nested exception.
 @serial   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2577922 // m_exception (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      operation 5799426 "XPathException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "ex" type class_ref 775810 // ExpressionNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathException object that holds
an error message.
@param message The error message.
"
      end

      operation 5799554 "XPathException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathException object that holds
an error message.
@param message The error message.
"
      end

      operation 5799682 "getStylesheetNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "ex" type class_ref 775810 // ExpressionNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XSLT ElemVariable that this sub-expression references.  In order for
this to work, the SourceLocator must be the owning ElemTemplateElement.
@return The dereference to the ElemVariable, or null if not found.
"
      end

      operation 5799810 "getExpressionOwner"
	protected return_type class_ref 775810 // ExpressionNode
	nparams 1
	  param inout name "ex" type class_ref 775810 // ExpressionNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the first non-Expression parent of this node.
@return null or first ancestor that is not an Expression.
"
      end

      operation 5799938 "XPathException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "styleNode" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathException object that holds
an error message and the stylesheet node that
the error originated from.
@param message The error message.
@param styleNode The stylesheet node that the error originated from.
"
      end

      operation 5800066 "XPathException"
	public explicit_return_type ""
	nparams 3
	  param inout name "message" type class_ref 128130 // String
	  param inout name "styleNode" type class_ref 317570 // Node
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathException object that holds
an error message, the stylesheet node that
the error originated from, and another exception
that caused this exception.
@param message The error message.
@param styleNode The stylesheet node that the error originated from.
@param e The exception that caused this exception.
"
      end

      operation 5800194 "XPathException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathException object that holds
an error message, and another exception
that caused this exception.
@param message The error message.
@param e The exception that caused this exception.
"
      end

      operation 5800322 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the the trace of methods from where the error
originated.  This will trace all nested exception
objects, as well as this object.
@param s The stream where the dump will be sent to.
"
      end

      operation 5800450 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the most contained message.

@return The error message of the originating exception.
"
      end

      operation 5800578 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the the trace of methods from where the error
originated.  This will trace all nested exception
objects, as well as this object.
@param s The writer where the dump will be sent to.
"
      end

      operation 5800706 "getException"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the embedded exception, if any.
 Overrides javax.xml.transform.TransformerException.getException().

 @return The embedded exception, or null if there is none.
"
      end
    end

    class 806274 "XPathFactory"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Factory class for creating an XPath.  Implementors of XPath derivatives
will need to make a derived class of this.
@xsl.usage advanced
"
      operation 5800834 "create"
	public return_type class_ref 782722 // XPath
	nparams 4
	  param inout name "exprString" type class_ref 128130 // String
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "prefixResolver" type class_ref 635650 // PrefixResolver
	  param in name "type" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPath.

@param exprString The XPath expression string.
@param locator The location of the expression string, mainly for diagnostic
               purposes.
@param prefixResolver This will be called in order to resolve prefixes
       to namespace URIs.
@param type One of {@link com.sun.org.apache.xpath.internal.XPath#SELECT} or
            {@link com.sun.org.apache.xpath.internal.XPath#MATCH}.

@return an XPath ready for execution.
"
      end
    end

    class 806402 "XPathProcessorException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Derived from XPathException in order that XPath processor
exceptions may be specifically caught.
@xsl.usage general
"
      classrelation 2578050 // <generalisation>
	relation 2578050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2578050 // <generalisation>
	  b parent class_ref 806146 // XPathException
      end

      attribute 1249282 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1215509418326642603L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5800962 "XPathProcessorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathProcessorException object that holds
an error message.
@param message The error message.
"
      end

      operation 5801090 "XPathProcessorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XPathProcessorException object that holds
an error message, and another exception
that caused this exception.
@param message The error message.
@param e The exception that caused this exception.
"
      end
    end
  end

  package_ref 163458 // res

  package_ref 175618 // functions

  deploymentview 162178 "internal"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 546690 "ExpressionNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.SourceLocator;
${definition}"
      associated_elems
	class_ref 775810 // ExpressionNode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ExpressionNode.java,v 1.1.2.1 2005/08/01 01:30:15 jeffsuttor Exp $
"
    end

    artifact 546818 "XPathVisitable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 775938 // XPathVisitable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathVisitable.java,v 1.1.2.1 2005/08/01 01:30:13 jeffsuttor Exp $
"
    end

    artifact 546946 "Expression"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.ErrorListener;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import org.xml.sax.ContentHandler;
${definition}"
      associated_elems
	class_ref 775682 // Expression
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Expression.java,v 1.2.4.2 2005/09/14 19:50:20 jeffsuttor Exp $
"
    end

    artifact 573314 "Arg"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xml.internal.utils.QName;
import com.sun.org.apache.xpath.internal.objects.XObject;
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 804226 // Arg
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Arg.java,v 1.1.2.1 2005/08/01 01:30:11 jeffsuttor Exp $
"
    end

    artifact 573442 "CachedXPathAPI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xml.internal.utils.PrefixResolverDefault;
import com.sun.org.apache.xpath.internal.objects.XObject;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 804354 // CachedXPathAPI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: CachedXPathAPI.java,v 1.2.4.1 2005/09/10 03:47:42 jeffsuttor Exp $
"
    end

    artifact 573570 "ExpressionOwner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 776066 // ExpressionOwner
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ExpressionOwner.java,v 1.1.2.1 2005/08/01 01:30:12 jeffsuttor Exp $
"
    end

    artifact 573698 "ExtensionsProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import com.sun.org.apache.xpath.internal.functions.FuncExtFunction;
${definition}"
      associated_elems
	class_ref 804482 // ExtensionsProvider
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: ExtensionsProvider.java,v 1.1.2.1 2005/08/01 01:30:08 jeffsuttor Exp $
"
    end

    artifact 573826 "FoundIndex"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 804738 // FoundIndex
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FoundIndex.java,v 1.2.4.1 2005/09/14 19:50:20 jeffsuttor Exp $
"
    end

    artifact 574082 "NodeSet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.DOM2Helper;
import com.sun.org.apache.xpath.internal.axes.ContextNodeList;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeFilter;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 584066 // NodeSet
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NodeSet.java,v 1.2.4.1 2005/09/10 17:39:49 jeffsuttor Exp $
"
    end

    artifact 574210 "NodeSetDTM"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.utils.NodeVector;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 804994 // NodeSetDTM
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: NodeSetDTM.java,v 1.2.4.2 2005/09/14 20:30:06 jeffsuttor Exp $
"
    end

    artifact 574338 "SourceTree"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 805122 // SourceTree
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SourceTree.java,v 1.1.2.1 2005/08/01 01:30:15 jeffsuttor Exp $
"
    end

    artifact 574466 "SourceTreeManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Vector;
import javax.xml.transform.Source;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.stream.StreamSource;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.SystemIDResolver;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.XMLReaderFactory;
${definition}"
      associated_elems
	class_ref 805250 // SourceTreeManager
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SourceTreeManager.java,v 1.2.4.1 2005/09/10 18:14:09 jeffsuttor Exp $
"
    end

    artifact 574594 "VariableStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 805378 // VariableStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: VariableStack.java,v 1.2.4.1 2005/09/10 18:16:22 jeffsuttor Exp $
"
    end

    artifact 574722 "WhitespaceStrippingElementMatcher"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 805506 // WhitespaceStrippingElementMatcher
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WhitespaceStrippingElementMatcher.java,v 1.1.2.1 2005/08/01 01:30:15 jeffsuttor Exp $
"
    end

    artifact 574850 "XPath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xml.internal.utils.SAXSourceLocator;
import com.sun.org.apache.xpath.internal.compiler.Compiler;
import com.sun.org.apache.xpath.internal.compiler.FunctionTable;
import com.sun.org.apache.xpath.internal.compiler.XPathParser;
import com.sun.org.apache.xpath.internal.functions.Function;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 782722 // XPath
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPath.java,v 1.2.4.1 2005/09/15 01:41:57 jeffsuttor Exp $
"
    end

    artifact 574978 "XPathAPI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xml.internal.utils.PrefixResolverDefault;
import com.sun.org.apache.xpath.internal.objects.XObject;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 805634 // XPathAPI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathAPI.java,v 1.2.4.1 2005/09/10 18:18:23 jeffsuttor Exp $
"
    end

    artifact 575106 "XPathContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.extensions.ExpressionContext;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.dtm.DTMManager;
import com.sun.org.apache.xml.internal.dtm.DTMWSFilter;
import com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2RTFDTM;
import com.sun.org.apache.xml.internal.utils.IntStack;
import com.sun.org.apache.xml.internal.utils.NodeVector;
import com.sun.org.apache.xml.internal.utils.ObjectStack;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xml.internal.utils.XMLString;
import com.sun.org.apache.xpath.internal.axes.SubContextList;
import com.sun.org.apache.xpath.internal.objects.DTMXRTreeFrag;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.objects.XString;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Stack;
import java.util.Vector;
import javax.xml.transform.ErrorListener;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import org.xml.sax.XMLReader;
${definition}"
      associated_elems
	class_ref 583682 // XPathContext
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathContext.java,v 1.2.4.2 2005/09/15 01:37:55 jeffsuttor Exp $
"
    end

    artifact 575362 "XPathException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 806146 // XPathException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathException.java,v 1.3 2005/09/28 13:49:30 pvedula Exp $
"
    end

    artifact 575490 "XPathFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.SourceLocator;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
${definition}"
      associated_elems
	class_ref 806274 // XPathFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathFactory.java,v 1.1.2.1 2005/08/01 01:30:14 jeffsuttor Exp $
"
    end

    artifact 575618 "XPathProcessorException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 806402 // XPathProcessorException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathProcessorException.java,v 1.2.4.1 2005/09/15 01:42:45 jeffsuttor Exp $
"
    end

    artifact 575746 "XPathVisitor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.axes.LocPathIterator;
import com.sun.org.apache.xpath.internal.axes.UnionPathIterator;
import com.sun.org.apache.xpath.internal.functions.Function;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XString;
import com.sun.org.apache.xpath.internal.operations.Operation;
import com.sun.org.apache.xpath.internal.operations.UnaryOperation;
import com.sun.org.apache.xpath.internal.operations.Variable;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import com.sun.org.apache.xpath.internal.patterns.StepPattern;
import com.sun.org.apache.xpath.internal.patterns.UnionPattern;
${definition}"
      associated_elems
	class_ref 776194 // XPathVisitor
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathVisitor.java,v 1.1.2.1 2005/08/01 01:30:11 jeffsuttor Exp $
"
    end
  end

  package_ref 175746 // compiler

  package_ref 176642 // axes

  package_ref 176770 // patterns

  package_ref 176898 // operations

  package_ref 177026 // domapi

  package_ref 177282 // jaxp
end
