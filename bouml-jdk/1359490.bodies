class SplitPaneDividerPainter
!!!11347202.java!!!	SplitPaneDividerPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11347330.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_FOCUSED: paintBackgroundFocused(g); break;
            case FOREGROUND_ENABLED: paintForegroundEnabled(g); break;
            case FOREGROUND_ENABLED_VERTICAL: paintForegroundEnabledAndVertical(g); break;

        }
!!!11347458.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11347586.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(decodeGradient1(rect));
        g.fill(rect);

!!!11347714.java!!!	paintBackgroundFocused(inout g : Graphics2D) : void
        rect = decodeRect1();
        g.setPaint(decodeGradient2(rect));
        g.fill(rect);

!!!11347842.java!!!	paintForegroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect2();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);

!!!11347970.java!!!	paintForegroundEnabledAndVertical(inout g : Graphics2D) : void
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient5(roundRect));
        g.fill(roundRect);
        rect = decodeRect2();
        g.setPaint(decodeGradient6(rect));
        g.fill(rect);

!!!11348098.java!!!	decodeRect1() : Rectangle2D
            rect.setRect(decodeX(1.0f), //x
                         decodeY(0.0f), //y
                         decodeX(2.0f) - decodeX(1.0f), //width
                         decodeY(3.0f) - decodeY(0.0f)); //height
        return rect;
!!!11348226.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.05f), //x
                               decodeY(1.3f), //y
                               decodeX(1.95f) - decodeX(1.05f), //width
                               decodeY(1.8f) - decodeY(1.3f), //height
                               3.6666667f, 3.6666667f); //rounding
        return roundRect;
!!!11348354.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.1f), //x
                               decodeY(1.4f), //y
                               decodeX(1.9f) - decodeX(1.1f), //width
                               decodeY(1.7f) - decodeY(1.4f), //height
                               4.0f, 4.0f); //rounding
        return roundRect;
!!!11348482.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.3f), //x
                               decodeY(1.1428572f), //y
                               decodeX(1.7f) - decodeX(1.3f), //width
                               decodeY(1.8214285f) - decodeY(1.1428572f), //height
                               4.0f, 4.0f); //rounding
        return roundRect;
!!!11348610.java!!!	decodeRect2() : Rectangle2D
            rect.setRect(decodeX(1.4f), //x
                         decodeY(1.1785715f), //y
                         decodeX(1.6f) - decodeX(1.4f), //width
                         decodeY(1.7678571f) - decodeY(1.1785715f)); //height
        return rect;
!!!11348738.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.058064517f,0.08064516f,0.103225805f,0.116129026f,0.12903225f,0.43387097f,0.7387097f,0.77903223f,0.81935483f,0.85806453f,0.8967742f },
                new Color[] { color1,
                            decodeColor(color1,color2,0.5f),
                            color2,
                            decodeColor(color2,color3,0.5f),
                            color3,
                            decodeColor(color3,color3,0.5f),
                            color3,
                            decodeColor(color3,color2,0.5f),
                            color2,
                            decodeColor(color2,color1,0.5f),
                            color1});
!!!11348866.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.058064517f,0.08064516f,0.103225805f,0.1166129f,0.13f,0.43f,0.73f,0.7746774f,0.81935483f,0.85806453f,0.8967742f },
                new Color[] { color1,
                            decodeColor(color1,color4,0.5f),
                            color4,
                            decodeColor(color4,color3,0.5f),
                            color3,
                            decodeColor(color3,color3,0.5f),
                            color3,
                            decodeColor(color3,color4,0.5f),
                            color4,
                            decodeColor(color4,color1,0.5f),
                            color1});
!!!11348994.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.20645161f,0.5f,0.7935484f },
                new Color[] { color1,
                            decodeColor(color1,color5,0.5f),
                            color5});
!!!11349122.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.090322584f,0.2951613f,0.5f,0.5822581f,0.66451615f },
                new Color[] { color6,
                            decodeColor(color6,color7,0.5f),
                            color7,
                            decodeColor(color7,color8,0.5f),
                            color8});
!!!11349250.java!!!	decodeGradient5(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.75f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.42096773f,0.84193546f,0.8951613f,0.9483871f },
                new Color[] { color9,
                            decodeColor(color9,color10,0.5f),
                            color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
!!!11349378.java!!!	decodeGradient6(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.5f * w) + x, (0.0f * h) + y, (0.5f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.08064516f,0.16129032f,0.5129032f,0.86451614f,0.88548386f,0.90645164f },
                new Color[] { color12,
                            decodeColor(color12,color13,0.5f),
                            color13,
                            decodeColor(color13,color14,0.5f),
                            color14,
                            decodeColor(color14,color15,0.5f),
                            color15});
