class Function
!!!5469186.java!!!	setArg(inout arg : Expression, in argNum : int) : void
                        // throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("zero", null));
      reportWrongNumberArgs();
!!!5469314.java!!!	checkNumberArgs(in argNum : int) : void
    if (argNum != 0)
      reportWrongNumberArgs();
!!!5469442.java!!!	reportWrongNumberArgs() : void
      throw new WrongNumberArgsException(XSLMessages.createXPATHMessage("zero", null));
!!!5469570.java!!!	execute(inout xctxt : XPathContext) : XObject

    // Programmer's assert.  (And, no, I don't want the method to be abstract).
    System.out.println("Error! Function.execute should not be called!");

    return null;
!!!5469826.java!!!	callVisitors(inout owner : ExpressionOwner, inout visitor : XPathVisitor) : void
        if(visitor.visitFunction(owner, this))
        {
                callArgVisitors(visitor);
        }
!!!5469954.java!!!	deepEquals(inout expr : Expression) : boolean
        if(!isSameClass(expr))
                return false;

        return true;
!!!5470082.java!!!	postCompileStep(inout compiler : Compiler) : void
    // no default action
