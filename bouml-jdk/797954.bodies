class ObjectVector
!!!5685762.java!!!	ObjectVector()

    m_blocksize = 32;
    m_mapSize = m_blocksize;
    m_map = new Object[m_blocksize];
!!!5685890.java!!!	ObjectVector(in blocksize : int)

    m_blocksize = blocksize;
    m_mapSize = blocksize;
    m_map = new Object[blocksize];
!!!5686018.java!!!	ObjectVector(in blocksize : int, in increaseSize : int)

    m_blocksize = increaseSize;
    m_mapSize = blocksize;
    m_map = new Object[blocksize];
!!!5686146.java!!!	ObjectVector(inout v : ObjectVector)
        m_map = new Object[v.m_mapSize];
    m_mapSize = v.m_mapSize;
    m_firstFree = v.m_firstFree;
        m_blocksize = v.m_blocksize;
        System.arraycopy(v.m_map, 0, m_map, 0, m_firstFree);
!!!5686274.java!!!	size() : int
    return m_firstFree;
!!!5686402.java!!!	setSize(in sz : int) : void
    m_firstFree = sz;
!!!5686530.java!!!	addElement(inout value : Object) : void

    if ((m_firstFree + 1) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      Object newMap[] = new Object[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_map[m_firstFree] = value;

    m_firstFree++;
!!!5686658.java!!!	addElements(inout value : Object, in numberOfElements : int) : void

    if ((m_firstFree + numberOfElements) >= m_mapSize)
    {
      m_mapSize += (m_blocksize+numberOfElements);

      Object newMap[] = new Object[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    for (int i = 0; i < numberOfElements; i++)
    {
      m_map[m_firstFree] = value;
      m_firstFree++;
    }
!!!5686786.java!!!	addElements(in numberOfElements : int) : void

    if ((m_firstFree + numberOfElements) >= m_mapSize)
    {
      m_mapSize += (m_blocksize+numberOfElements);

      Object newMap[] = new Object[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_firstFree += numberOfElements;
!!!5686914.java!!!	insertElementAt(inout value : Object, in at : int) : void

    if ((m_firstFree + 1) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      Object newMap[] = new Object[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    if (at <= (m_firstFree - 1))
    {
      System.arraycopy(m_map, at, m_map, at + 1, m_firstFree - at);
    }

    m_map[at] = value;

    m_firstFree++;
!!!5687042.java!!!	removeAllElements() : void

    for (int i = 0; i < m_firstFree; i++)
    {
      m_map[i] = null;
    }

    m_firstFree = 0;
!!!5687170.java!!!	removeElement(inout s : Object) : boolean

    for (int i = 0; i < m_firstFree; i++)
    {
      if (m_map[i] == s)
      {
        if ((i + 1) < m_firstFree)
          System.arraycopy(m_map, i + 1, m_map, i - 1, m_firstFree - i);
        else
          m_map[i] = null;

        m_firstFree--;

        return true;
      }
    }

    return false;
!!!5687298.java!!!	removeElementAt(in i : int) : void

    if (i > m_firstFree)
      System.arraycopy(m_map, i + 1, m_map, i, m_firstFree);
    else
      m_map[i] = null;

    m_firstFree--;
!!!5687426.java!!!	setElementAt(inout value : Object, in index : int) : void
    m_map[index] = value;
!!!5687554.java!!!	elementAt(in i : int) : Object
    return m_map[i];
!!!5687682.java!!!	contains(inout s : Object) : boolean

    for (int i = 0; i < m_firstFree; i++)
    {
      if (m_map[i] == s)
        return true;
    }

    return false;
!!!5687810.java!!!	indexOf(inout elem : Object, in index : int) : int

    for (int i = index; i < m_firstFree; i++)
    {
      if (m_map[i] == elem)
        return i;
    }

    return java.lang.Integer.MIN_VALUE;
!!!5687938.java!!!	indexOf(inout elem : Object) : int

    for (int i = 0; i < m_firstFree; i++)
    {
      if (m_map[i] == elem)
        return i;
    }

    return java.lang.Integer.MIN_VALUE;
!!!5688066.java!!!	lastIndexOf(inout elem : Object) : int

    for (int i = (m_firstFree - 1); i >= 0; i--)
    {
      if (m_map[i] == elem)
        return i;
    }

    return java.lang.Integer.MIN_VALUE;
!!!5688194.java!!!	setToSize(in size : int) : void

    Object newMap[] = new Object[size];

    System.arraycopy(m_map, 0, newMap, 0, m_firstFree);
    m_mapSize = size;

    m_map = newMap;

!!!5688322.java!!!	clone() : Object
        return new ObjectVector(this);
