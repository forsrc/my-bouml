class DataOutputStream
!!!6856450.java!!!	DataOutputStream(inout out : OutputStream)
        super(out);
!!!6856578.java!!!	incCount(in value : int) : void
        int temp = written + value;
        if (temp < 0) {
            temp = Integer.MAX_VALUE;
        }
        written = temp;
!!!6856706.java!!!	write(in b : int) : void
        out.write(b);
        incCount(1);
!!!6856834.java!!!	write(inout b : byte [[]], in off : int, in len : int) : void
        out.write(b, off, len);
        incCount(len);
!!!6856962.java!!!	flush() : void
        out.flush();
!!!6857090.java!!!	writeBoolean(inout v : boolean) : void
        out.write(v ? 1 : 0);
        incCount(1);
!!!6857218.java!!!	writeByte(in v : int) : void
        out.write(v);
        incCount(1);
!!!6857346.java!!!	writeShort(in v : int) : void
        out.write((v >>> 8) & 0xFF);
        out.write((v >>> 0) & 0xFF);
        incCount(2);
!!!6857474.java!!!	writeChar(in v : int) : void
        out.write((v >>> 8) & 0xFF);
        out.write((v >>> 0) & 0xFF);
        incCount(2);
!!!6857602.java!!!	writeInt(in v : int) : void
        out.write((v >>> 24) & 0xFF);
        out.write((v >>> 16) & 0xFF);
        out.write((v >>>  8) & 0xFF);
        out.write((v >>>  0) & 0xFF);
        incCount(4);
!!!6857730.java!!!	writeLong(in v : long) : void
        writeBuffer[0] = (byte)(v >>> 56);
        writeBuffer[1] = (byte)(v >>> 48);
        writeBuffer[2] = (byte)(v >>> 40);
        writeBuffer[3] = (byte)(v >>> 32);
        writeBuffer[4] = (byte)(v >>> 24);
        writeBuffer[5] = (byte)(v >>> 16);
        writeBuffer[6] = (byte)(v >>>  8);
        writeBuffer[7] = (byte)(v >>>  0);
        out.write(writeBuffer, 0, 8);
        incCount(8);
!!!6857858.java!!!	writeFloat(in v : float) : void
        writeInt(Float.floatToIntBits(v));
!!!6857986.java!!!	writeDouble(in v : double) : void
        writeLong(Double.doubleToLongBits(v));
!!!6858114.java!!!	writeBytes(inout s : String) : void
        int len = s.length();
        for (int i = 0 ; i < len ; i++) {
            out.write((byte)s.charAt(i));
        }
        incCount(len);
!!!6858242.java!!!	writeChars(inout s : String) : void
        int len = s.length();
        for (int i = 0 ; i < len ; i++) {
            int v = s.charAt(i);
            out.write((v >>> 8) & 0xFF);
            out.write((v >>> 0) & 0xFF);
        }
        incCount(len * 2);
!!!6858370.java!!!	writeUTF(inout str : String) : void
        writeUTF(str, this);
!!!6858498.java!!!	writeUTF(inout str : String, inout out : DataOutput) : int
        int strlen = str.length();
        int utflen = 0;
        int c, count = 0;

        /* use charAt instead of copying String to char array */
        for (int i = 0; i < strlen; i++) {
            c = str.charAt(i);
            if ((c >= 0x0001) && (c <= 0x007F)) {
                utflen++;
            } else if (c > 0x07FF) {
                utflen += 3;
            } else {
                utflen += 2;
            }
        }

        if (utflen > 65535)
            throw new UTFDataFormatException(
                "encoded string too long: " + utflen + " bytes");

        byte[] bytearr = null;
        if (out instanceof DataOutputStream) {
            DataOutputStream dos = (DataOutputStream)out;
            if(dos.bytearr == null || (dos.bytearr.length < (utflen+2)))
                dos.bytearr = new byte[(utflen*2) + 2];
            bytearr = dos.bytearr;
        } else {
            bytearr = new byte[utflen+2];
        }

        bytearr[count++] = (byte) ((utflen >>> 8) & 0xFF);
        bytearr[count++] = (byte) ((utflen >>> 0) & 0xFF);

        int i=0;
        for (i=0; i<strlen; i++) {
           c = str.charAt(i);
           if (!((c >= 0x0001) && (c <= 0x007F))) break;
           bytearr[count++] = (byte) c;
        }

        for (;i < strlen; i++){
            c = str.charAt(i);
            if ((c >= 0x0001) && (c <= 0x007F)) {
                bytearr[count++] = (byte) c;

            } else if (c > 0x07FF) {
                bytearr[count++] = (byte) (0xE0 | ((c >> 12) & 0x0F));
                bytearr[count++] = (byte) (0x80 | ((c >>  6) & 0x3F));
                bytearr[count++] = (byte) (0x80 | ((c >>  0) & 0x3F));
            } else {
                bytearr[count++] = (byte) (0xC0 | ((c >>  6) & 0x1F));
                bytearr[count++] = (byte) (0x80 | ((c >>  0) & 0x3F));
            }
        }
        out.write(bytearr, 0, utflen+2);
        return utflen + 2;
!!!6858626.java!!!	size() : int
        return written;
