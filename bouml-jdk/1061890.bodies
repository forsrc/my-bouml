class Field
!!!8554754.java!!!	isDateBased() : boolean
            return true;
!!!8554882.java!!!	isTimeBased() : boolean
            return false;
!!!8555010.java!!!	rangeRefinedBy(inout temporal : TemporalAccessor) : ValueRange
            return range();
!!!8555138.java!!!	isIso(inout temporal : TemporalAccessor) : boolean
            return Chronology.from(temporal).equals(IsoChronology.INSTANCE);
!!!8555266.java!!!	ensureIso(inout temporal : TemporalAccessor) : void
            if (isIso(temporal) == false) {
                throw new DateTimeException("Resolve requires IsoChronology");
            }
!!!8555394.java!!!	getWeekRange(inout date : LocalDate) : ValueRange
            int wby = getWeekBasedYear(date);
            return ValueRange.of(1, getWeekRange(wby));
!!!8555522.java!!!	getWeekRange(in wby : int) : int
            LocalDate date = LocalDate.of(wby, 1, 1);
            // 53 weeks if standard year starts on Thursday, or Wed in a leap year
            if (date.getDayOfWeek() == THURSDAY || (date.getDayOfWeek() == WEDNESDAY && date.isLeapYear())) {
                return 53;
            }
            return 52;
!!!8555650.java!!!	getWeek(inout date : LocalDate) : int
            int dow0 = date.getDayOfWeek().ordinal();
            int doy0 = date.getDayOfYear() - 1;
            int doyThu0 = doy0 + (3 - dow0);  // adjust to mid-week Thursday (which is 3 indexed from zero)
            int alignedWeek = doyThu0 / 7;
            int firstThuDoy0 = doyThu0 - (alignedWeek * 7);
            int firstMonDoy0 = firstThuDoy0 - 3;
            if (firstMonDoy0 < -3) {
                firstMonDoy0 += 7;
            }
            if (doy0 < firstMonDoy0) {
                return (int) getWeekRange(date.withDayOfYear(180).minusYears(1)).getMaximum();
            }
            int week = ((doy0 - firstMonDoy0) / 7) + 1;
            if (week == 53) {
                if ((firstMonDoy0 == -3 || (firstMonDoy0 == -2 && date.isLeapYear())) == false) {
                    week = 1;
                }
            }
            return week;
!!!8555778.java!!!	getWeekBasedYear(inout date : LocalDate) : int
            int year = date.getYear();
            int doy = date.getDayOfYear();
            if (doy <= 3) {
                int dow = date.getDayOfWeek().ordinal();
                if (doy - dow < -2) {
                    year--;
                }
            } else if (doy >= 363) {
                int dow = date.getDayOfWeek().ordinal();
                doy = doy - 363 - (date.isLeapYear() ? 1 : 0);
                if (doy - dow >= 0) {
                    year++;
                }
            }
            return year;
