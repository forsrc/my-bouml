class SpinnerDateModel
!!!10810882.java!!!	calendarFieldOK(in calendarField : int) : boolean
        switch(calendarField) {
        case Calendar.ERA:
        case Calendar.YEAR:
        case Calendar.MONTH:
        case Calendar.WEEK_OF_YEAR:
        case Calendar.WEEK_OF_MONTH:
        case Calendar.DAY_OF_MONTH:
        case Calendar.DAY_OF_YEAR:
        case Calendar.DAY_OF_WEEK:
        case Calendar.DAY_OF_WEEK_IN_MONTH:
        case Calendar.AM_PM:
        case Calendar.HOUR:
        case Calendar.HOUR_OF_DAY:
        case Calendar.MINUTE:
        case Calendar.SECOND:
        case Calendar.MILLISECOND:
            return true;
        default:
            return false;
        }
!!!10811010.java!!!	SpinnerDateModel(inout value : Date, inout start : Comparable, inout end : Comparable, in calendarField : int)
        if (value == null) {
            throw new IllegalArgumentException("value is null");
        }
        if (!calendarFieldOK(calendarField)) {
            throw new IllegalArgumentException("invalid calendarField");
        }
        if (!(((start == null) || (start.compareTo(value) <= 0)) &&
              ((end == null) || (end.compareTo(value) >= 0)))) {
            throw new IllegalArgumentException("(start <= value <= end) is false");
        }
        this.value = Calendar.getInstance();
        this.start = start;
        this.end = end;
        this.calendarField = calendarField;

        this.value.setTime(value);
!!!10811138.java!!!	SpinnerDateModel()
        this(new Date(), null, null, Calendar.DAY_OF_MONTH);
!!!10811266.java!!!	setStart(inout start : Comparable) : void
        if ((start == null) ? (this.start != null) : !start.equals(this.start)) {
            this.start = start;
            fireStateChanged();
        }
!!!10811394.java!!!	getStart() : Comparable
        return start;
!!!10811522.java!!!	setEnd(inout end : Comparable) : void
        if ((end == null) ? (this.end != null) : !end.equals(this.end)) {
            this.end = end;
            fireStateChanged();
        }
!!!10811650.java!!!	getEnd() : Comparable
        return end;
!!!10811778.java!!!	setCalendarField(in calendarField : int) : void
        if (!calendarFieldOK(calendarField)) {
            throw new IllegalArgumentException("invalid calendarField");
        }
        if (calendarField != this.calendarField) {
            this.calendarField = calendarField;
            fireStateChanged();
        }
!!!10811906.java!!!	getCalendarField() : int
        return calendarField;
!!!10812034.java!!!	getNextValue() : Object
        Calendar cal = Calendar.getInstance();
        cal.setTime(value.getTime());
        cal.add(calendarField, 1);
        Date next = cal.getTime();
        return ((end == null) || (end.compareTo(next) >= 0)) ? next : null;
!!!10812162.java!!!	getPreviousValue() : Object
        Calendar cal = Calendar.getInstance();
        cal.setTime(value.getTime());
        cal.add(calendarField, -1);
        Date prev = cal.getTime();
        return ((start == null) || (start.compareTo(prev) <= 0)) ? prev : null;
!!!10812290.java!!!	getDate() : Date
        return value.getTime();
!!!10812418.java!!!	getValue() : Object
        return value.getTime();
!!!10812546.java!!!	setValue(inout value : Object) : void
        if ((value == null) || !(value instanceof Date)) {
            throw new IllegalArgumentException("illegal value");
        }
        if (!value.equals(this.value.getTime())) {
            this.value.setTime((Date)value);
            fireStateChanged();
        }
