format 222
"lang" // jdk1.8::java::lang
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/lang/"
  java_package "java.lang"
  classview 128130 "lang"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128130 "String"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code String} class represents character strings. All
string literals in Java programs, such as {@code \"abc\"}, are
implemented as instances of this class.
<p>
Strings are constant; their values cannot be changed after they
are created. String buffers support mutable strings.
Because String objects are immutable they can be shared. For example:
<blockquote><pre>
    String str = \"abc\";
</pre></blockquote><p>
is equivalent to:
<blockquote><pre>
    char data[] = {'a', 'b', 'c'};
    String str = new String(data);
</pre></blockquote><p>
Here are some more examples of how strings can be used:
<blockquote><pre>
    System.out.println(\"abc\");
    String cde = \"cde\";
    System.out.println(\"abc\" + cde);
    String c = \"abc\".substring(2,3);
    String d = cde.substring(1, 2);
</pre></blockquote>
<p>
The class {@code String} includes methods for examining
individual characters of the sequence, for comparing strings, for
searching strings, for extracting substrings, and for creating a
copy of a string with all characters translated to uppercase or to
lowercase. Case mapping is based on the Unicode Standard version
specified by the {@link java.lang.Character Character} class.
<p>
The Java language provides special support for the string
concatenation operator (&nbsp;+&nbsp;), and for conversion of
other objects to strings. String concatenation is implemented
through the {@code StringBuilder}(or {@code StringBuffer})
class and its {@code append} method.
String conversions are implemented through the method
{@code toString}, defined by {@code Object} and
inherited by all classes in Java. For additional information on
string concatenation and conversion, see Gosling, Joy, and Steele,
<i>The Java Language Specification</i>.

<p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

<p>A {@code String} represents a string in the UTF-16 format
in which <em>supplementary characters</em> are represented by <em>surrogate
pairs</em> (see the section <a href=\"Character.html#unicode\">Unicode
Character Representations</a> in the {@code Character} class for
more information).
Index values refer to {@code char} code units, so a supplementary
character uses two positions in a {@code String}.
<p>The {@code String} class provides methods for dealing with
Unicode code points (i.e., characters), in addition to those for
dealing with Unicode code units (i.e., {@code char} values).

@author  Lee Boynton
@author  Arthur van Hoff
@author  Martin Buchholz
@author  Ulf Zibis
@see     java.lang.Object#toString()
@see     java.lang.StringBuffer
@see     java.lang.StringBuilder
@see     java.nio.charset.Charset
@since   JDK1.0
"
      classrelation 3169794 // <realization>
	relation 3169794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3169794 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3169922 // <realization>
	relation 3169922 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3169922 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      classrelation 3170050 // <realization>
	relation 3170050 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3170050 // <realization>
	  b parent class_ref 429442 // CharSequence
      end

      attribute 1684226 "value"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The value is used for character storage. 
"
      end

      attribute 1684354 "hash"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cache the hash code for the string 
 Default to 0"
      end

      attribute 1684482 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6849794470754667710L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      classrelation 3170178 // serialPersistentFields (<unidirectional association>)
	relation 3170178 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
        new ObjectStreamField[0]" class_relation const_relation private
	    comment "
Class String is special cased within the Serialization Stream Protocol.

A String instance is written into an ObjectOutputStream according to
<a href=\"{@docRoot}/../platform/serialization/spec/output.html\">
Object Serialization Specification, Section 6.2, \"Stream Elements\"</a>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3170178 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 7101186 "String"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a newly created {@code String} object so that it represents
an empty character sequence.  Note that use of this constructor is
unnecessary since Strings are immutable.
"
      end

      operation 7101314 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "original" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a newly created {@code String} object so that it represents
the same sequence of characters as the argument; in other words, the
newly created string is a copy of the argument string. Unless an
explicit copy of {@code original} is needed, use of this constructor is
unnecessary since Strings are immutable.

@param  original
        A {@code String}
"
      end

      operation 7101442 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "value" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code String} so that it represents the sequence of
characters currently contained in the character array argument. The
contents of the character array are copied; subsequent modification of
the character array does not affect the newly created string.

@param  value
        The initial value of the string
"
      end

      operation 7101570 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "value" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code String} that contains characters from a subarray
of the character array argument. The {@code offset} argument is the
index of the first character of the subarray and the {@code count}
argument specifies the length of the subarray. The contents of the
subarray are copied; subsequent modification of the character array does
not affect the newly created string.

@param  value
        Array that is the source of characters

@param  offset
        The initial offset

@param  count
        The length

@throws  IndexOutOfBoundsException
         If the {@code offset} and {@code count} arguments index
         characters outside the bounds of the {@code value} array
"
      end

      operation 7101698 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "codePoints" explicit_type "int"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code String} that contains characters from a subarray
of the <a href=\"Character.html#unicode\">Unicode code point</a> array
argument.  The {@code offset} argument is the index of the first code
point of the subarray and the {@code count} argument specifies the
length of the subarray.  The contents of the subarray are converted to
{@code char}s; subsequent modification of the {@code int} array does not
affect the newly created string.

@param  codePoints
        Array that is the source of Unicode code points

@param  offset
        The initial offset

@param  count
        The length

@throws  IllegalArgumentException
         If any invalid Unicode code point is found in {@code
         codePoints}

@throws  IndexOutOfBoundsException
         If the {@code offset} and {@code count} arguments index
         characters outside the bounds of the {@code codePoints} array

@since  1.5
"
      end

      operation 7101826 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "ascii" explicit_type "byte"
	multiplicity "[]"
	  param in name "hibyte" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a new {@code String} constructed from a subarray of an array
of 8-bit integer values.

<p> The {@code offset} argument is the index of the first byte of the
subarray, and the {@code count} argument specifies the length of the
subarray.

<p> Each {@code byte} in the subarray is converted to a {@code char} as
specified in the method above.

@deprecated This method does not properly convert bytes into characters.
As of JDK&nbsp;1.1, the preferred way to do this is via the
{@code String} constructors that take a {@link
java.nio.charset.Charset}, charset name, or that use the platform's
default charset.

@param  ascii
        The bytes to be converted to characters

@param  hibyte
        The top 8 bits of each 16-bit Unicode code unit

@param  offset
        The initial offset
@param  count
        The length

@throws  IndexOutOfBoundsException
         If the {@code offset} or {@code count} argument is invalid

@see  #String(byte[], int)
@see  #String(byte[], int, int, java.lang.String)
@see  #String(byte[], int, int, java.nio.charset.Charset)
@see  #String(byte[], int, int)
@see  #String(byte[], java.lang.String)
@see  #String(byte[], java.nio.charset.Charset)
@see  #String(byte[])
"
      end

      operation 7101954 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "ascii" explicit_type "byte"
	multiplicity "[]"
	  param in name "hibyte" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Allocates a new {@code String} containing characters constructed from
an array of 8-bit integer values. Each character <i>c</i>in the
resulting string is constructed from the corresponding component
<i>b</i> in the byte array such that:

<blockquote><pre>
    <b><i>c</i></b> == (char)(((hibyte &amp; 0xff) &lt;&lt; 8)
                        | (<b><i>b</i></b> &amp; 0xff))
</pre></blockquote>

@deprecated  This method does not properly convert bytes into
characters.  As of JDK&nbsp;1.1, the preferred way to do this is via the
{@code String} constructors that take a {@link
java.nio.charset.Charset}, charset name, or that use the platform's
default charset.

@param  ascii
        The bytes to be converted to characters

@param  hibyte
        The top 8 bits of each 16-bit Unicode code unit

@see  #String(byte[], int, int, java.lang.String)
@see  #String(byte[], int, int, java.nio.charset.Charset)
@see  #String(byte[], int, int)
@see  #String(byte[], java.lang.String)
@see  #String(byte[], java.nio.charset.Charset)
@see  #String(byte[])
"
      end

      operation 7102082 "checkBounds"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Common private utility method used to bounds check the byte array
and requested offset & length values used by the String(byte[],..)
constructors.
"
      end

      operation 7102210 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "charsetName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified subarray of
bytes using the specified charset.  The length of the new {@code String}
is a function of the charset, and hence may not be equal to the length
of the subarray.

<p> The behavior of this constructor when the given bytes are not valid
in the given charset is unspecified.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@param  offset
        The index of the first byte to decode

@param  length
        The number of bytes to decode

@param  charsetName
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@throws  UnsupportedEncodingException
         If the named charset is not supported

@throws  IndexOutOfBoundsException
         If the {@code offset} and {@code length} arguments index
         characters outside the bounds of the {@code bytes} array

@since  JDK1.1
"
      end

      operation 7102338 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified subarray of
bytes using the specified {@linkplain java.nio.charset.Charset charset}.
The length of the new {@code String} is a function of the charset, and
hence may not be equal to the length of the subarray.

<p> This method always replaces malformed-input and unmappable-character
sequences with this charset's default replacement string.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@param  offset
        The index of the first byte to decode

@param  length
        The number of bytes to decode

@param  charset
        The {@linkplain java.nio.charset.Charset charset} to be used to
        decode the {@code bytes}

@throws  IndexOutOfBoundsException
         If the {@code offset} and {@code length} arguments index
         characters outside the bounds of the {@code bytes} array

@since  1.6
"
      end

      operation 7102466 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param inout name "charsetName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified array of bytes
using the specified {@linkplain java.nio.charset.Charset charset}.  The
length of the new {@code String} is a function of the charset, and hence
may not be equal to the length of the byte array.

<p> The behavior of this constructor when the given bytes are not valid
in the given charset is unspecified.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@param  charsetName
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@throws  UnsupportedEncodingException
         If the named charset is not supported

@since  JDK1.1
"
      end

      operation 7102594 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified array of
bytes using the specified {@linkplain java.nio.charset.Charset charset}.
The length of the new {@code String} is a function of the charset, and
hence may not be equal to the length of the byte array.

<p> This method always replaces malformed-input and unmappable-character
sequences with this charset's default replacement string.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@param  charset
        The {@linkplain java.nio.charset.Charset charset} to be used to
        decode the {@code bytes}

@since  1.6
"
      end

      operation 7102722 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified subarray of
bytes using the platform's default charset.  The length of the new
{@code String} is a function of the charset, and hence may not be equal
to the length of the subarray.

<p> The behavior of this constructor when the given bytes are not valid
in the default charset is unspecified.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@param  offset
        The index of the first byte to decode

@param  length
        The number of bytes to decode

@throws  IndexOutOfBoundsException
         If the {@code offset} and the {@code length} arguments index
         characters outside the bounds of the {@code bytes} array

@since  JDK1.1
"
      end

      operation 7102850 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code String} by decoding the specified array of bytes
using the platform's default charset.  The length of the new {@code
String} is a function of the charset, and hence may not be equal to the
length of the byte array.

<p> The behavior of this constructor when the given bytes are not valid
in the default charset is unspecified.  The {@link
java.nio.charset.CharsetDecoder} class should be used when more control
over the decoding process is required.

@param  bytes
        The bytes to be decoded into characters

@since  JDK1.1
"
      end

      operation 7102978 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "buffer" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new string that contains the sequence of characters
currently contained in the string buffer argument. The contents of the
string buffer are copied; subsequent modification of the string buffer
does not affect the newly created string.

@param  buffer
        A {@code StringBuffer}
"
      end

      operation 7103106 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "builder" type class_ref 173058 // StringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new string that contains the sequence of characters
currently contained in the string builder argument. The contents of the
string builder are copied; subsequent modification of the string builder
does not affect the newly created string.

<p> This constructor is provided to ease migration to {@code
StringBuilder}. Obtaining a string from a string builder via the {@code
toString} method is likely to run faster and is generally preferred.

@param   builder
         A {@code StringBuilder}

@since  1.5
"
      end

      operation 7103234 "String"
	package explicit_return_type ""
	nparams 2
	  param inout name "value" explicit_type "char"
	multiplicity "[]"
	  param inout name "share" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package private constructor which shares value array for speed.
this constructor is always expected to be called with share==true.
a separate constructor is needed because we already have a public
String(char[]) constructor that makes a copy of the given char[].
"
      end

      operation 7103362 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this string.
The length is equal to the number of <a href=\"Character.html#unicode\">Unicode
code units</a> in the string.

@return  the length of the sequence of characters represented by this
         object.
"
      end

      operation 7103490 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if, and only if, {@link #length()} is {@code 0}.

@return {@code true} if {@link #length()} is {@code 0}, otherwise
{@code false}

@since 1.6
"
      end

      operation 7103618 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code char} value at the
specified index. An index ranges from {@code 0} to
{@code length() - 1}. The first {@code char} value of the sequence
is at index {@code 0}, the next at index {@code 1},
and so on, as for array indexing.

<p>If the {@code char} value specified by the index is a
<a href=\"Character.html#unicode\">surrogate</a>, the surrogate
value is returned.

@param      index   the index of the {@code char} value.
@return     the {@code char} value at the specified index of this string.
            The first {@code char} value is at index {@code 0}.
@exception  IndexOutOfBoundsException  if the {@code index}
            argument is negative or not less than the length of this
            string.
"
      end

      operation 7103746 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character (Unicode code point) at the specified
index. The index refers to {@code char} values
(Unicode code units) and ranges from {@code 0} to
{@link #length()}{@code  - 1}.

<p> If the {@code char} value specified at the given index
is in the high-surrogate range, the following index is less
than the length of this {@code String}, and the
{@code char} value at the following index is in the
low-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at the given index is returned.

@param      index the index to the {@code char} values
@return     the code point value of the character at the
            {@code index}
@exception  IndexOutOfBoundsException  if the {@code index}
            argument is negative or not less than the length of this
            string.
@since      1.5
"
      end

      operation 7103874 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character (Unicode code point) before the specified
index. The index refers to {@code char} values
(Unicode code units) and ranges from {@code 1} to {@link
CharSequence#length() length}.

<p> If the {@code char} value at {@code (index - 1)}
is in the low-surrogate range, {@code (index - 2)} is not
negative, and the {@code char} value at {@code (index -
2)} is in the high-surrogate range, then the
supplementary code point value of the surrogate pair is
returned. If the {@code char} value at {@code index -
1} is an unpaired low-surrogate or a high-surrogate, the
surrogate value is returned.

@param     index the index following the code point that should be returned
@return    the Unicode code point value before the given index.
@exception IndexOutOfBoundsException if the {@code index}
           argument is less than 1 or greater than the length
           of this string.
@since     1.5
"
      end

      operation 7104002 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of Unicode code points in the specified text
range of this {@code String}. The text range begins at the
specified {@code beginIndex} and extends to the
{@code char} at index {@code endIndex - 1}. Thus the
length (in {@code char}s) of the text range is
{@code endIndex-beginIndex}. Unpaired surrogates within
the text range count as one code point each.

@param beginIndex the index to the first {@code char} of
the text range.
@param endIndex the index after the last {@code char} of
the text range.
@return the number of Unicode code points in the specified text
range
@exception IndexOutOfBoundsException if the
{@code beginIndex} is negative, or {@code endIndex}
is larger than the length of this {@code String}, or
{@code beginIndex} is larger than {@code endIndex}.
@since  1.5
"
      end

      operation 7104130 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this {@code String} that is
offset from the given {@code index} by
{@code codePointOffset} code points. Unpaired surrogates
within the text range given by {@code index} and
{@code codePointOffset} count as one code point each.

@param index the index to be offset
@param codePointOffset the offset in code points
@return the index within this {@code String}
@exception IndexOutOfBoundsException if {@code index}
  is negative or larger then the length of this
  {@code String}, or if {@code codePointOffset} is positive
  and the substring starting with {@code index} has fewer
  than {@code codePointOffset} code points,
  or if {@code codePointOffset} is negative and the substring
  before {@code index} has fewer than the absolute value
  of {@code codePointOffset} code points.
@since 1.5
"
      end

      operation 7104258 "getChars"
	package explicit_return_type "void"
	nparams 2
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy characters from this string into dst starting at dstBegin.
This method doesn't perform any range checking.
"
      end

      operation 7104386 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies characters from this string into the destination character
array.
<p>
The first character to be copied is at index {@code srcBegin};
the last character to be copied is at index {@code srcEnd-1}
(thus the total number of characters to be copied is
{@code srcEnd-srcBegin}). The characters are copied into the
subarray of {@code dst} starting at index {@code dstBegin}
and ending at index:
<blockquote><pre>
    dstBegin + (srcEnd-srcBegin) - 1
</pre></blockquote>

@param      srcBegin   index of the first character in the string
                       to copy.
@param      srcEnd     index after the last character in the string
                       to copy.
@param      dst        the destination array.
@param      dstBegin   the start offset in the destination array.
@exception IndexOutOfBoundsException If any of the following
           is true:
           <ul><li>{@code srcBegin} is negative.
           <li>{@code srcBegin} is greater than {@code srcEnd}
           <li>{@code srcEnd} is greater than the length of this
               string
           <li>{@code dstBegin} is negative
           <li>{@code dstBegin+(srcEnd-srcBegin)} is larger than
               {@code dst.length}</ul>
"
      end

      operation 7104514 "getBytes"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "byte"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Copies characters from this string into the destination byte array. Each
byte receives the 8 low-order bits of the corresponding character. The
eight high-order bits of each character are not copied and do not
participate in the transfer in any way.

<p> The first character to be copied is at index {@code srcBegin}; the
last character to be copied is at index {@code srcEnd-1}.  The total
number of characters to be copied is {@code srcEnd-srcBegin}. The
characters, converted to bytes, are copied into the subarray of {@code
dst} starting at index {@code dstBegin} and ending at index:

<blockquote><pre>
    dstBegin + (srcEnd-srcBegin) - 1
</pre></blockquote>

@deprecated  This method does not properly convert characters into
bytes.  As of JDK&nbsp;1.1, the preferred way to do this is via the
{@link #getBytes()} method, which uses the platform's default charset.

@param  srcBegin
        Index of the first character in the string to copy

@param  srcEnd
        Index after the last character in the string to copy

@param  dst
        The destination array

@param  dstBegin
        The start offset in the destination array

@throws  IndexOutOfBoundsException
         If any of the following is true:
         <ul>
           <li> {@code srcBegin} is negative
           <li> {@code srcBegin} is greater than {@code srcEnd}
           <li> {@code srcEnd} is greater than the length of this String
           <li> {@code dstBegin} is negative
           <li> {@code dstBegin+(srcEnd-srcBegin)} is larger than {@code
                dst.length}
         </ul>
"
      end

      operation 7104642 "getBytes"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "charsetName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes this {@code String} into a sequence of bytes using the named
charset, storing the result into a new byte array.

<p> The behavior of this method when this string cannot be encoded in
the given charset is unspecified.  The {@link
java.nio.charset.CharsetEncoder} class should be used when more control
over the encoding process is required.

@param  charsetName
        The name of a supported {@linkplain java.nio.charset.Charset
        charset}

@return  The resultant byte array

@throws  UnsupportedEncodingException
         If the named charset is not supported

@since  JDK1.1
"
      end

      operation 7104770 "getBytes"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "charset" type class_ref 853634 // Charset
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes this {@code String} into a sequence of bytes using the given
{@linkplain java.nio.charset.Charset charset}, storing the result into a
new byte array.

<p> This method always replaces malformed-input and unmappable-character
sequences with this charset's default replacement byte array.  The
{@link java.nio.charset.CharsetEncoder} class should be used when more
control over the encoding process is required.

@param  charset
        The {@linkplain java.nio.charset.Charset} to be used to encode
        the {@code String}

@return  The resultant byte array

@since  1.6
"
      end

      operation 7104898 "getBytes"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes this {@code String} into a sequence of bytes using the
platform's default charset, storing the result into a new byte array.

<p> The behavior of this method when this string cannot be encoded in
the default charset is unspecified.  The {@link
java.nio.charset.CharsetEncoder} class should be used when more control
over the encoding process is required.

@return  The resultant byte array

@since      JDK1.1
"
      end

      operation 7105026 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified object.  The result is {@code
true} if and only if the argument is not {@code null} and is a {@code
String} object that represents the same sequence of characters as this
object.

@param  anObject
        The object to compare this {@code String} against

@return  {@code true} if the given object represents a {@code String}
         equivalent to this string, {@code false} otherwise

@see  #compareTo(String)
@see  #equalsIgnoreCase(String)
"
      end

      operation 7105154 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "sb" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified {@code StringBuffer}.  The result
is {@code true} if and only if this {@code String} represents the same
sequence of characters as the specified {@code StringBuffer}. This method
synchronizes on the {@code StringBuffer}.

@param  sb
        The {@code StringBuffer} to compare this {@code String} against

@return  {@code true} if this {@code String} represents the same
         sequence of characters as the specified {@code StringBuffer},
         {@code false} otherwise

@since  1.4
"
      end

      operation 7105282 "nonSyncContentEquals"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "sb" type class_ref 928770 // AbstractStringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7105410 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cs" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this string to the specified {@code CharSequence}.  The
result is {@code true} if and only if this {@code String} represents the
same sequence of char values as the specified sequence. Note that if the
{@code CharSequence} is a {@code StringBuffer} then the method
synchronizes on it.

@param  cs
        The sequence to compare this {@code String} against

@return  {@code true} if this {@code String} represents the same
         sequence of char values as the specified sequence, {@code
         false} otherwise

@since  1.5
"
      end

      operation 7105538 "equalsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this {@code String} to another {@code String}, ignoring case
considerations.  Two strings are considered equal ignoring case if they
are of the same length and corresponding characters in the two strings
are equal ignoring case.

<p> Two characters {@code c1} and {@code c2} are considered the same
ignoring case if at least one of the following is true:
<ul>
  <li> The two characters are the same (as compared by the
       {@code ==} operator)
  <li> Applying the method {@link
       java.lang.Character#toUpperCase(char)} to each character
       produces the same result
  <li> Applying the method {@link
       java.lang.Character#toLowerCase(char)} to each character
       produces the same result
</ul>

@param  anotherString
        The {@code String} to compare this {@code String} against

@return  {@code true} if the argument is not {@code null} and it
         represents an equivalent {@code String} ignoring case; {@code
         false} otherwise

@see  #equals(Object)
"
      end

      operation 7105666 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherString" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically.
The comparison is based on the Unicode value of each character in
the strings. The character sequence represented by this
{@code String} object is compared lexicographically to the
character sequence represented by the argument string. The result is
a negative integer if this {@code String} object
lexicographically precedes the argument string. The result is a
positive integer if this {@code String} object lexicographically
follows the argument string. The result is zero if the strings
are equal; {@code compareTo} returns {@code 0} exactly when
the {@link #equals(Object)} method would return {@code true}.
<p>
This is the definition of lexicographic ordering. If two strings are
different, then either they have different characters at some index
that is a valid index for both strings, or their lengths are different,
or both. If they have different characters at one or more index
positions, let <i>k</i> be the smallest such index; then the string
whose character at position <i>k</i> has the smaller value, as
determined by using the &lt; operator, lexicographically precedes the
other string. In this case, {@code compareTo} returns the
difference of the two character values at position {@code k} in
the two string -- that is, the value:
<blockquote><pre>
this.charAt(k)-anotherString.charAt(k)
</pre></blockquote>
If there is no index position at which they differ, then the shorter
string lexicographically precedes the longer string. In this case,
{@code compareTo} returns the difference of the lengths of the
strings -- that is, the value:
<blockquote><pre>
this.length()-anotherString.length()
</pre></blockquote>

@param   anotherString   the {@code String} to be compared.
@return  the value {@code 0} if the argument string is equal to
         this string; a value less than {@code 0} if this string
         is lexicographically less than the string argument; and a
         value greater than {@code 0} if this string is
         lexicographically greater than the string argument.
"
      end

      classrelation 3170306 // CASE_INSENSITIVE_ORDER (<unidirectional association>)
	relation 3170306 --->
	  a role_name "CASE_INSENSITIVE_ORDER" init_value " new CaseInsensitiveComparator()" class_relation const_relation public
	    comment "
A Comparator that orders {@code String} objects as by
{@code compareToIgnoreCase}. This comparator is serializable.
<p>
Note that this Comparator does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>Collators</em> to allow
locale-sensitive ordering.

@see     java.text.Collator#compare(String, String)
@since   1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 3170306 // CASE_INSENSITIVE_ORDER (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      class 939266 "CaseInsensitiveComparator"
	visibility private 
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3170434 // <realization>
	  relation 3170434 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3170434 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	classrelation 3170562 // <realization>
	  relation 3170562 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3170562 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 1684610 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8575799808933029326L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " use serialVersionUID from JDK 1.2.2 for interoperability
"
	end

	operation 7105794 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "s1" type class_ref 128130 // String
	    param inout name "s2" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7105922 "readResolve"
	  private return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Replaces the de-serialized object. "
	end
      end

      operation 7106050 "compareToIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings lexicographically, ignoring case
differences. This method returns an integer whose sign is that of
calling {@code compareTo} with normalized versions of the strings
where case differences have been eliminated by calling
{@code Character.toLowerCase(Character.toUpperCase(character))} on
each character.
<p>
Note that this method does <em>not</em> take locale into account,
and will result in an unsatisfactory ordering for certain locales.
The java.text package provides <em>collators</em> to allow
locale-sensitive ordering.

@param   str   the {@code String} to be compared.
@return  a negative integer, zero, or a positive integer as the
         specified String is greater than, equal to, or less
         than this String, ignoring case considerations.
@see     java.text.Collator#compare(String, String)
@since   1.2
"
      end

      operation 7106178 "regionMatches"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "toffset" explicit_type "int"
	  param inout name "other" type class_ref 128130 // String
	  param in name "ooffset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if two string regions are equal.
<p>
A substring of this {@code String} object is compared to a substring
of the argument other. The result is true if these substrings
represent identical character sequences. The substring of this
{@code String} object to be compared begins at index {@code toffset}
and has length {@code len}. The substring of other to be compared
begins at index {@code ooffset} and has length {@code len}. The
result is {@code false} if and only if at least one of the following
is true:
<ul><li>{@code toffset} is negative.
<li>{@code ooffset} is negative.
<li>{@code toffset+len} is greater than the length of this
{@code String} object.
<li>{@code ooffset+len} is greater than the length of the other
argument.
<li>There is some nonnegative integer <i>k</i> less than {@code len}
such that:
{@code this.charAt(toffset + }<i>k</i>{@code ) != other.charAt(ooffset + }
<i>k</i>{@code )}
</ul>

@param   toffset   the starting offset of the subregion in this string.
@param   other     the string argument.
@param   ooffset   the starting offset of the subregion in the string
                   argument.
@param   len       the number of characters to compare.
@return  {@code true} if the specified subregion of this string
         exactly matches the specified subregion of the string argument;
         {@code false} otherwise.
"
      end

      operation 7106306 "regionMatches"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "ignoreCase" explicit_type "boolean"
	  param in name "toffset" explicit_type "int"
	  param inout name "other" type class_ref 128130 // String
	  param in name "ooffset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if two string regions are equal.
<p>
A substring of this {@code String} object is compared to a substring
of the argument {@code other}. The result is {@code true} if these
substrings represent character sequences that are the same, ignoring
case if and only if {@code ignoreCase} is true. The substring of
this {@code String} object to be compared begins at index
{@code toffset} and has length {@code len}. The substring of
{@code other} to be compared begins at index {@code ooffset} and
has length {@code len}. The result is {@code false} if and only if
at least one of the following is true:
<ul><li>{@code toffset} is negative.
<li>{@code ooffset} is negative.
<li>{@code toffset+len} is greater than the length of this
{@code String} object.
<li>{@code ooffset+len} is greater than the length of the other
argument.
<li>{@code ignoreCase} is {@code false} and there is some nonnegative
integer <i>k</i> less than {@code len} such that:
<blockquote><pre>
this.charAt(toffset+k) != other.charAt(ooffset+k)
</pre></blockquote>
<li>{@code ignoreCase} is {@code true} and there is some nonnegative
integer <i>k</i> less than {@code len} such that:
<blockquote><pre>
Character.toLowerCase(this.charAt(toffset+k)) !=
Character.toLowerCase(other.charAt(ooffset+k))
</pre></blockquote>
and:
<blockquote><pre>
Character.toUpperCase(this.charAt(toffset+k)) !=
        Character.toUpperCase(other.charAt(ooffset+k))
</pre></blockquote>
</ul>

@param   ignoreCase   if {@code true}, ignore case when comparing
                      characters.
@param   toffset      the starting offset of the subregion in this
                      string.
@param   other        the string argument.
@param   ooffset      the starting offset of the subregion in the string
                      argument.
@param   len          the number of characters to compare.
@return  {@code true} if the specified subregion of this string
         matches the specified subregion of the string argument;
         {@code false} otherwise. Whether the matching is exact
         or case insensitive depends on the {@code ignoreCase}
         argument.
"
      end

      operation 7106434 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param in name "toffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if the substring of this string beginning at the
specified index starts with the specified prefix.

@param   prefix    the prefix.
@param   toffset   where to begin looking in this string.
@return  {@code true} if the character sequence represented by the
         argument is a prefix of the substring of this object starting
         at index {@code toffset}; {@code false} otherwise.
         The result is {@code false} if {@code toffset} is
         negative or greater than the length of this
         {@code String} object; otherwise the result is the same
         as the result of the expression
         <pre>
         this.substring(toffset).startsWith(prefix)
         </pre>
"
      end

      operation 7106562 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string starts with the specified prefix.

@param   prefix   the prefix.
@return  {@code true} if the character sequence represented by the
         argument is a prefix of the character sequence represented by
         this string; {@code false} otherwise.
         Note also that {@code true} will be returned if the
         argument is an empty string or is equal to this
         {@code String} object as determined by the
         {@link #equals(Object)} method.
@since   1. 0
"
      end

      operation 7106690 "endsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "suffix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this string ends with the specified suffix.

@param   suffix   the suffix.
@return  {@code true} if the character sequence represented by the
         argument is a suffix of the character sequence represented by
         this object; {@code false} otherwise. Note that the
         result will be {@code true} if the argument is the
         empty string or is equal to this {@code String} object
         as determined by the {@link #equals(Object)} method.
"
      end

      operation 7106818 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this string. The hash code for a
{@code String} object is computed as
<blockquote><pre>
s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
</pre></blockquote>
using {@code int} arithmetic, where {@code s[i]} is the
<i>i</i>th character of the string, {@code n} is the length of
the string, and {@code ^} indicates exponentiation.
(The hash value of the empty string is zero.)

@return  a hash code value for this object.
"
      end

      operation 7106946 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of
the specified character. If a character with value
{@code ch} occurs in the character sequence represented by
this {@code String} object, then the index (in Unicode
code units) of the first such occurrence is returned. For
values of {@code ch} in the range from 0 to 0xFFFF
(inclusive), this is the smallest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is true. For other values of {@code ch}, it is the
smallest value <i>k</i> such that:
<blockquote><pre>
this.codePointAt(<i>k</i>) == ch
</pre></blockquote>
is true. In either case, if no such character occurs in this
string, then {@code -1} is returned.

@param   ch   a character (Unicode code point).
@return  the index of the first occurrence of the character in the
         character sequence represented by this object, or
         {@code -1} if the character does not occur.
"
      end

      operation 7107074 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified character, starting the search at the specified index.
<p>
If a character with value {@code ch} occurs in the
character sequence represented by this {@code String}
object at an index no smaller than {@code fromIndex}, then
the index of the first such occurrence is returned. For values
of {@code ch} in the range from 0 to 0xFFFF (inclusive),
this is the smallest value <i>k</i> such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) {@code &&} (<i>k</i> &gt;= fromIndex)
</pre></blockquote>
is true. For other values of {@code ch}, it is the
smallest value <i>k</i> such that:
<blockquote><pre>
(this.codePointAt(<i>k</i>) == ch) {@code &&} (<i>k</i> &gt;= fromIndex)
</pre></blockquote>
is true. In either case, if no such character occurs in this
string at or after position {@code fromIndex}, then
{@code -1} is returned.

<p>
There is no restriction on the value of {@code fromIndex}. If it
is negative, it has the same effect as if it were zero: this entire
string may be searched. If it is greater than the length of this
string, it has the same effect as if it were equal to the length of
this string: {@code -1} is returned.

<p>All indices are specified in {@code char} values
(Unicode code units).

@param   ch          a character (Unicode code point).
@param   fromIndex   the index to start the search from.
@return  the index of the first occurrence of the character in the
         character sequence represented by this object that is greater
         than or equal to {@code fromIndex}, or {@code -1}
         if the character does not occur.
"
      end

      operation 7107202 "indexOfSupplementary"
	private explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles (rare) calls of indexOf with a supplementary character.
"
      end

      operation 7107330 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of
the specified character. For values of {@code ch} in the
range from 0 to 0xFFFF (inclusive), the index (in Unicode code
units) returned is the largest value <i>k</i> such that:
<blockquote><pre>
this.charAt(<i>k</i>) == ch
</pre></blockquote>
is true. For other values of {@code ch}, it is the
largest value <i>k</i> such that:
<blockquote><pre>
this.codePointAt(<i>k</i>) == ch
</pre></blockquote>
is true.  In either case, if no such character occurs in this
string, then {@code -1} is returned.  The
{@code String} is searched backwards starting at the last
character.

@param   ch   a character (Unicode code point).
@return  the index of the last occurrence of the character in the
         character sequence represented by this object, or
         {@code -1} if the character does not occur.
"
      end

      operation 7107458 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of
the specified character, searching backward starting at the
specified index. For values of {@code ch} in the range
from 0 to 0xFFFF (inclusive), the index returned is the largest
value <i>k</i> such that:
<blockquote><pre>
(this.charAt(<i>k</i>) == ch) {@code &&} (<i>k</i> &lt;= fromIndex)
</pre></blockquote>
is true. For other values of {@code ch}, it is the
largest value <i>k</i> such that:
<blockquote><pre>
(this.codePointAt(<i>k</i>) == ch) {@code &&} (<i>k</i> &lt;= fromIndex)
</pre></blockquote>
is true. In either case, if no such character occurs in this
string at or before position {@code fromIndex}, then
{@code -1} is returned.

<p>All indices are specified in {@code char} values
(Unicode code units).

@param   ch          a character (Unicode code point).
@param   fromIndex   the index to start the search from. There is no
         restriction on the value of {@code fromIndex}. If it is
         greater than or equal to the length of this string, it has
         the same effect as if it were equal to one less than the
         length of this string: this entire string may be searched.
         If it is negative, it has the same effect as if it were -1:
         -1 is returned.
@return  the index of the last occurrence of the character in the
         character sequence represented by this object that is less
         than or equal to {@code fromIndex}, or {@code -1}
         if the character does not occur before that point.
"
      end

      operation 7107586 "lastIndexOfSupplementary"
	private explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles (rare) calls of lastIndexOf with a supplementary character.
"
      end

      operation 7107714 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring.

<p>The returned index is the smallest value <i>k</i> for which:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
If no such value of <i>k</i> exists, then {@code -1} is returned.

@param   str   the substring to search for.
@return  the index of the first occurrence of the specified substring,
         or {@code -1} if there is no such occurrence.
"
      end

      operation 7107842 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring, starting at the specified index.

<p>The returned index is the smallest value <i>k</i> for which:
<blockquote><pre>
<i>k</i> &gt;= fromIndex {@code &&} this.startsWith(str, <i>k</i>)
</pre></blockquote>
If no such value of <i>k</i> exists, then {@code -1} is returned.

@param   str         the substring to search for.
@param   fromIndex   the index from which to start the search.
@return  the index of the first occurrence of the specified substring,
         starting at the specified index,
         or {@code -1} if there is no such occurrence.
"
      end

      operation 7107970 "indexOf"
	class_operation package explicit_return_type "int"
	nparams 5
	  param inout name "source" explicit_type "char"
	multiplicity "[]"
	  param in name "sourceOffset" explicit_type "int"
	  param in name "sourceCount" explicit_type "int"
	  param inout name "target" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Code shared by String and AbstractStringBuilder to do searches. The
source is the character array being searched, and the target
is the string being searched for.

@param   source       the characters being searched.
@param   sourceOffset offset of the source string.
@param   sourceCount  count of the source string.
@param   target       the characters being searched for.
@param   fromIndex    the index to begin searching from.
"
      end

      operation 7108098 "indexOf"
	class_operation package explicit_return_type "int"
	nparams 7
	  param inout name "source" explicit_type "char"
	multiplicity "[]"
	  param in name "sourceOffset" explicit_type "int"
	  param in name "sourceCount" explicit_type "int"
	  param inout name "target" explicit_type "char"
	multiplicity "[]"
	  param in name "targetOffset" explicit_type "int"
	  param in name "targetCount" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Code shared by String and StringBuffer to do searches. The
source is the character array being searched, and the target
is the string being searched for.

@param   source       the characters being searched.
@param   sourceOffset offset of the source string.
@param   sourceCount  count of the source string.
@param   target       the characters being searched for.
@param   targetOffset offset of the target string.
@param   targetCount  count of the target string.
@param   fromIndex    the index to begin searching from.
"
      end

      operation 7108226 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified substring.  The last occurrence of the empty string \"\"
is considered to occur at the index value {@code this.length()}.

<p>The returned index is the largest value <i>k</i> for which:
<blockquote><pre>
this.startsWith(str, <i>k</i>)
</pre></blockquote>
If no such value of <i>k</i> exists, then {@code -1} is returned.

@param   str   the substring to search for.
@return  the index of the last occurrence of the specified substring,
         or {@code -1} if there is no such occurrence.
"
      end

      operation 7108354 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified substring, searching backward starting at the specified index.

<p>The returned index is the largest value <i>k</i> for which:
<blockquote><pre>
<i>k</i> {@code <=} fromIndex {@code &&} this.startsWith(str, <i>k</i>)
</pre></blockquote>
If no such value of <i>k</i> exists, then {@code -1} is returned.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from.
@return  the index of the last occurrence of the specified substring,
         searching backward from the specified index,
         or {@code -1} if there is no such occurrence.
"
      end

      operation 7108482 "lastIndexOf"
	class_operation package explicit_return_type "int"
	nparams 5
	  param inout name "source" explicit_type "char"
	multiplicity "[]"
	  param in name "sourceOffset" explicit_type "int"
	  param in name "sourceCount" explicit_type "int"
	  param inout name "target" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Code shared by String and AbstractStringBuilder to do searches. The
source is the character array being searched, and the target
is the string being searched for.

@param   source       the characters being searched.
@param   sourceOffset offset of the source string.
@param   sourceCount  count of the source string.
@param   target       the characters being searched for.
@param   fromIndex    the index to begin searching from.
"
      end

      operation 7108610 "lastIndexOf"
	class_operation package explicit_return_type "int"
	nparams 7
	  param inout name "source" explicit_type "char"
	multiplicity "[]"
	  param in name "sourceOffset" explicit_type "int"
	  param in name "sourceCount" explicit_type "int"
	  param inout name "target" explicit_type "char"
	multiplicity "[]"
	  param in name "targetOffset" explicit_type "int"
	  param in name "targetCount" explicit_type "int"
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Code shared by String and StringBuffer to do searches. The
source is the character array being searched, and the target
is the string being searched for.

@param   source       the characters being searched.
@param   sourceOffset offset of the source string.
@param   sourceCount  count of the source string.
@param   target       the characters being searched for.
@param   targetOffset offset of the target string.
@param   targetCount  count of the target string.
@param   fromIndex    the index to begin searching from.
"
      end

      operation 7108738 "substring"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "beginIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that is a substring of this string. The
substring begins with the character at the specified index and
extends to the end of this string. <p>
Examples:
<blockquote><pre>
\"unhappy\".substring(2) returns \"happy\"
\"Harbison\".substring(3) returns \"bison\"
\"emptiness\".substring(9) returns \"\" (an empty string)
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if
            {@code beginIndex} is negative or larger than the
            length of this {@code String} object.
"
      end

      operation 7108866 "substring"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that is a substring of this string. The
substring begins at the specified {@code beginIndex} and
extends to the character at index {@code endIndex - 1}.
Thus the length of the substring is {@code endIndex-beginIndex}.
<p>
Examples:
<blockquote><pre>
\"hamburger\".substring(4, 8) returns \"urge\"
\"smiles\".substring(1, 5) returns \"mile\"
</pre></blockquote>

@param      beginIndex   the beginning index, inclusive.
@param      endIndex     the ending index, exclusive.
@return     the specified substring.
@exception  IndexOutOfBoundsException  if the
            {@code beginIndex} is negative, or
            {@code endIndex} is larger than the length of
            this {@code String} object, or
            {@code beginIndex} is larger than
            {@code endIndex}.
"
      end

      operation 7108994 "subSequence"
	public return_type class_ref 429442 // CharSequence
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a character sequence that is a subsequence of this sequence.

<p> An invocation of this method of the form

<blockquote><pre>
str.subSequence(begin,&nbsp;end)</pre></blockquote>

behaves in exactly the same way as the invocation

<blockquote><pre>
str.substring(begin,&nbsp;end)</pre></blockquote>

@apiNote
This method is defined so that the {@code String} class can implement
the {@link CharSequence} interface.

@param   beginIndex   the begin index, inclusive.
@param   endIndex     the end index, exclusive.
@return  the specified subsequence.

@throws  IndexOutOfBoundsException
         if {@code beginIndex} or {@code endIndex} is negative,
         if {@code endIndex} is greater than {@code length()},
         or if {@code beginIndex} is greater than {@code endIndex}

@since 1.4
@spec JSR-51
"
      end

      operation 7109122 "concat"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the specified string to the end of this string.
<p>
If the length of the argument string is {@code 0}, then this
{@code String} object is returned. Otherwise, a
{@code String} object is returned that represents a character
sequence that is the concatenation of the character sequence
represented by this {@code String} object and the character
sequence represented by the argument string.<p>
Examples:
<blockquote><pre>
\"cares\".concat(\"s\") returns \"caress\"
\"to\".concat(\"get\").concat(\"her\") returns \"together\"
</pre></blockquote>

@param   str   the {@code String} that is concatenated to the end
               of this {@code String}.
@return  a string that represents the concatenation of this object's
         characters followed by the string argument's characters.
"
      end

      operation 7109250 "replace"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "oldChar" explicit_type "char"
	  param in name "newChar" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string resulting from replacing all occurrences of
{@code oldChar} in this string with {@code newChar}.
<p>
If the character {@code oldChar} does not occur in the
character sequence represented by this {@code String} object,
then a reference to this {@code String} object is returned.
Otherwise, a {@code String} object is returned that
represents a character sequence identical to the character sequence
represented by this {@code String} object, except that every
occurrence of {@code oldChar} is replaced by an occurrence
of {@code newChar}.
<p>
Examples:
<blockquote><pre>
\"mesquite in your cellar\".replace('e', 'o')
        returns \"mosquito in your collar\"
\"the war of baronets\".replace('r', 'y')
        returns \"the way of bayonets\"
\"sparring with a purple porpoise\".replace('p', 't')
        returns \"starring with a turtle tortoise\"
\"JonL\".replace('q', 'x') returns \"JonL\" (no change)
</pre></blockquote>

@param   oldChar   the old character.
@param   newChar   the new character.
@return  a string derived from this string by replacing every
         occurrence of {@code oldChar} with {@code newChar}.
"
      end

      operation 7109378 "matches"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "regex" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether or not this string matches the given <a
href=\"../util/regex/Pattern.html#sum\">regular expression</a>.

<p> An invocation of this method of the form
<i>str</i>{@code .matches(}<i>regex</i>{@code )} yields exactly the
same result as the expression

<blockquote>
{@link java.util.regex.Pattern}.{@link java.util.regex.Pattern#matches(String,CharSequence)
matches(<i>regex</i>, <i>str</i>)}
</blockquote>

@param   regex
         the regular expression to which this string is to be matched

@return  {@code true} if, and only if, this string matches the
         given regular expression

@throws  PatternSyntaxException
         if the regular expression's syntax is invalid

@see java.util.regex.Pattern

@since 1.4
@spec JSR-51
"
      end

      operation 7109506 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if and only if this string contains the specified
sequence of char values.

@param s the sequence to search for
@return true if this string contains {@code s}, false otherwise
@since 1.5
"
      end

      operation 7109634 "replaceFirst"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param inout name "replacement" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the first substring of this string that matches the given <a
href=\"../util/regex/Pattern.html#sum\">regular expression</a> with the
given replacement.

<p> An invocation of this method of the form
<i>str</i>{@code .replaceFirst(}<i>regex</i>{@code ,} <i>repl</i>{@code )}
yields exactly the same result as the expression

<blockquote>
<code>
{@link java.util.regex.Pattern}.{@link
java.util.regex.Pattern#compile compile}(<i>regex</i>).{@link
java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(<i>str</i>).{@link
java.util.regex.Matcher#replaceFirst replaceFirst}(<i>repl</i>)
</code>
</blockquote>

<p>
Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the
replacement string may cause the results to be different than if it were
being treated as a literal replacement string; see
{@link java.util.regex.Matcher#replaceFirst}.
Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special
meaning of these characters, if desired.

@param   regex
         the regular expression to which this string is to be matched
@param   replacement
         the string to be substituted for the first match

@return  The resulting {@code String}

@throws  PatternSyntaxException
         if the regular expression's syntax is invalid

@see java.util.regex.Pattern

@since 1.4
@spec JSR-51
"
      end

      operation 7109762 "replaceAll"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param inout name "replacement" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces each substring of this string that matches the given <a
href=\"../util/regex/Pattern.html#sum\">regular expression</a> with the
given replacement.

<p> An invocation of this method of the form
<i>str</i>{@code .replaceAll(}<i>regex</i>{@code ,} <i>repl</i>{@code )}
yields exactly the same result as the expression

<blockquote>
<code>
{@link java.util.regex.Pattern}.{@link
java.util.regex.Pattern#compile compile}(<i>regex</i>).{@link
java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(<i>str</i>).{@link
java.util.regex.Matcher#replaceAll replaceAll}(<i>repl</i>)
</code>
</blockquote>

<p>
Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the
replacement string may cause the results to be different than if it were
being treated as a literal replacement string; see
{@link java.util.regex.Matcher#replaceAll Matcher.replaceAll}.
Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special
meaning of these characters, if desired.

@param   regex
         the regular expression to which this string is to be matched
@param   replacement
         the string to be substituted for each match

@return  The resulting {@code String}

@throws  PatternSyntaxException
         if the regular expression's syntax is invalid

@see java.util.regex.Pattern

@since 1.4
@spec JSR-51
"
      end

      operation 7109890 "replace"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "target" type class_ref 429442 // CharSequence
	  param inout name "replacement" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces each substring of this string that matches the literal target
sequence with the specified literal replacement sequence. The
replacement proceeds from the beginning of the string to the end, for
example, replacing \"aa\" with \"b\" in the string \"aaa\" will result in
\"ba\" rather than \"ab\".

@param  target The sequence of char values to be replaced
@param  replacement The replacement sequence of char values
@return  The resulting string
@since 1.5
"
      end

      operation 7110018 "split"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "regex" type class_ref 128130 // String
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits this string around matches of the given
<a href=\"../util/regex/Pattern.html#sum\">regular expression</a>.

<p> The array returned by this method contains each substring of this
string that is terminated by another substring that matches the given
expression or is terminated by the end of the string.  The substrings in
the array are in the order in which they occur in this string.  If the
expression does not match any part of the input then the resulting array
has just one element, namely this string.

<p> When there is a positive-width match at the beginning of this
string then an empty leading substring is included at the beginning
of the resulting array. A zero-width match at the beginning however
never produces such empty leading substring.

<p> The {@code limit} parameter controls the number of times the
pattern is applied and therefore affects the length of the resulting
array.  If the limit <i>n</i> is greater than zero then the pattern
will be applied at most <i>n</i>&nbsp;-&nbsp;1 times, the array's
length will be no greater than <i>n</i>, and the array's last entry
will contain all input beyond the last matched delimiter.  If <i>n</i>
is non-positive then the pattern will be applied as many times as
possible and the array can have any length.  If <i>n</i> is zero then
the pattern will be applied as many times as possible, the array can
have any length, and trailing empty strings will be discarded.

<p> The string {@code \"boo:and:foo\"}, for example, yields the
following results with these parameters:

<blockquote><table cellpadding=1 cellspacing=0 summary=\"Split example showing regex, limit, and result\">
<tr>
    <th>Regex</th>
    <th>Limit</th>
    <th>Result</th>
</tr>
<tr><td align=center>:</td>
    <td align=center>2</td>
    <td>{@code { \"boo\", \"and:foo\" }}</td></tr>
<tr><td align=center>:</td>
    <td align=center>5</td>
    <td>{@code { \"boo\", \"and\", \"foo\" }}</td></tr>
<tr><td align=center>:</td>
    <td align=center>-2</td>
    <td>{@code { \"boo\", \"and\", \"foo\" }}</td></tr>
<tr><td align=center>o</td>
    <td align=center>5</td>
    <td>{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}</td></tr>
<tr><td align=center>o</td>
    <td align=center>-2</td>
    <td>{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}</td></tr>
<tr><td align=center>o</td>
    <td align=center>0</td>
    <td>{@code { \"b\", \"\", \":and:f\" }}</td></tr>
</table></blockquote>

<p> An invocation of this method of the form
<i>str.</i>{@code split(}<i>regex</i>{@code ,}&nbsp;<i>n</i>{@code )}
yields the same result as the expression

<blockquote>
<code>
{@link java.util.regex.Pattern}.{@link
java.util.regex.Pattern#compile compile}(<i>regex</i>).{@link
java.util.regex.Pattern#split(java.lang.CharSequence,int) split}(<i>str</i>,&nbsp;<i>n</i>)
</code>
</blockquote>


@param  regex
        the delimiting regular expression

@param  limit
        the result threshold, as described above

@return  the array of strings computed by splitting this string
         around matches of the given regular expression

@throws  PatternSyntaxException
         if the regular expression's syntax is invalid

@see java.util.regex.Pattern

@since 1.4
@spec JSR-51
"
      end

      operation 7110146 "split"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "regex" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits this string around matches of the given <a
href=\"../util/regex/Pattern.html#sum\">regular expression</a>.

<p> This method works as if by invoking the two-argument {@link
#split(String, int) split} method with the given expression and a limit
argument of zero.  Trailing empty strings are therefore not included in
the resulting array.

<p> The string {@code \"boo:and:foo\"}, for example, yields the following
results with these expressions:

<blockquote><table cellpadding=1 cellspacing=0 summary=\"Split examples showing regex and result\">
<tr>
 <th>Regex</th>
 <th>Result</th>
</tr>
<tr><td align=center>:</td>
    <td>{@code { \"boo\", \"and\", \"foo\" }}</td></tr>
<tr><td align=center>o</td>
    <td>{@code { \"b\", \"\", \":and:f\" }}</td></tr>
</table></blockquote>


@param  regex
        the delimiting regular expression

@return  the array of strings computed by splitting this string
         around matches of the given regular expression

@throws  PatternSyntaxException
         if the regular expression's syntax is invalid

@see java.util.regex.Pattern

@since 1.4
@spec JSR-51
"
      end

      operation 7110274 "join"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "delimiter" type class_ref 429442 // CharSequence
	  param inout name "" explicit_type "CharSequence...elements"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new String composed of copies of the
{@code CharSequence elements} joined together with a copy of
the specified {@code delimiter}.

<blockquote>For example,
<pre>{@code
    String message = String.join(\"-\", \"Java\", \"is\", \"cool\");
    // message returned is: \"Java-is-cool\"
}</pre></blockquote>

Note that if an element is null, then {@code \"null\"} is added.

@param  delimiter the delimiter that separates each element
@param  elements the elements to join together.

@return a new {@code String} that is composed of the {@code elements}
        separated by the {@code delimiter}

@throws NullPointerException If {@code delimiter} or {@code elements}
        is {@code null}

@see java.util.StringJoiner
@since 1.8
"
      end

      operation 7110402 "join"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "delimiter" type class_ref 429442 // CharSequence
	  param inout name "elements" type class_ref 184322 // Iterable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<? extends CharSequence> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code String} composed of copies of the
{@code CharSequence elements} joined together with a copy of the
specified {@code delimiter}.

<blockquote>For example,
<pre>{@code
    List<String> strings = new LinkedList<>();
    strings.add(\"Java\");strings.add(\"is\");
    strings.add(\"cool\");
    String message = String.join(\" \", strings);
    //message returned is: \"Java is cool\"

    Set<String> strings = new LinkedHashSet<>();
    strings.add(\"Java\"); strings.add(\"is\");
    strings.add(\"very\"); strings.add(\"cool\");
    String message = String.join(\"-\", strings);
    //message returned is: \"Java-is-very-cool\"
}</pre></blockquote>

Note that if an individual element is {@code null}, then {@code \"null\"} is added.

@param  delimiter a sequence of characters that is used to separate each
        of the {@code elements} in the resulting {@code String}
@param  elements an {@code Iterable} that will have its {@code elements}
        joined together.

@return a new {@code String} that is composed from the {@code elements}
        argument

@throws NullPointerException If {@code delimiter} or {@code elements}
        is {@code null}

@see    #join(CharSequence,CharSequence...)
@see    java.util.StringJoiner
@since 1.8
"
      end

      operation 7110530 "toLowerCase"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this {@code String} to lower
case using the rules of the given {@code Locale}.  Case mapping is based
on the Unicode Standard version specified by the {@link java.lang.Character Character}
class. Since case mappings are not always 1:1 char mappings, the resulting
{@code String} may be a different length than the original {@code String}.
<p>
Examples of lowercase  mappings are in the following table:
<table border=\"1\" summary=\"Lowercase mapping examples showing language code of locale, upper case, lower case, and description\">
<tr>
  <th>Language Code of Locale</th>
  <th>Upper Case</th>
  <th>Lower Case</th>
  <th>Description</th>
</tr>
<tr>
  <td>tr (Turkish)</td>
  <td>&#92;u0130</td>
  <td>&#92;u0069</td>
  <td>capital letter I with dot above -&gt; small letter i</td>
</tr>
<tr>
  <td>tr (Turkish)</td>
  <td>&#92;u0049</td>
  <td>&#92;u0131</td>
  <td>capital letter I -&gt; small letter dotless i </td>
</tr>
<tr>
  <td>(all)</td>
  <td>French Fries</td>
  <td>french fries</td>
  <td>lowercased all chars in String</td>
</tr>
<tr>
  <td>(all)</td>
  <td><img src=\"doc-files/capiota.gif\" alt=\"capiota\"><img src=\"doc-files/capchi.gif\" alt=\"capchi\">
      <img src=\"doc-files/captheta.gif\" alt=\"captheta\"><img src=\"doc-files/capupsil.gif\" alt=\"capupsil\">
      <img src=\"doc-files/capsigma.gif\" alt=\"capsigma\"></td>
  <td><img src=\"doc-files/iota.gif\" alt=\"iota\"><img src=\"doc-files/chi.gif\" alt=\"chi\">
      <img src=\"doc-files/theta.gif\" alt=\"theta\"><img src=\"doc-files/upsilon.gif\" alt=\"upsilon\">
      <img src=\"doc-files/sigma1.gif\" alt=\"sigma\"></td>
  <td>lowercased all chars in String</td>
</tr>
</table>

@param locale use the case transformation rules for this locale
@return the {@code String}, converted to lowercase.
@see     java.lang.String#toLowerCase()
@see     java.lang.String#toUpperCase()
@see     java.lang.String#toUpperCase(Locale)
@since   1.1
"
      end

      operation 7110658 "toLowerCase"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this {@code String} to lower
case using the rules of the default locale. This is equivalent to calling
{@code toLowerCase(Locale.getDefault())}.
<p>
<b>Note:</b> This method is locale sensitive, and may produce unexpected
results if used for strings that are intended to be interpreted locale
independently.
Examples are programming language identifiers, protocol keys, and HTML
tags.
For instance, {@code \"TITLE\".toLowerCase()} in a Turkish locale
returns {@code \"t\\u005Cu0131tle\"}, where '\\u005Cu0131' is the
LATIN SMALL LETTER DOTLESS I character.
To obtain correct results for locale insensitive strings, use
{@code toLowerCase(Locale.ROOT)}.
<p>
@return  the {@code String}, converted to lowercase.
@see     java.lang.String#toLowerCase(Locale)
"
      end

      operation 7110786 "toUpperCase"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this {@code String} to upper
case using the rules of the given {@code Locale}. Case mapping is based
on the Unicode Standard version specified by the {@link java.lang.Character Character}
class. Since case mappings are not always 1:1 char mappings, the resulting
{@code String} may be a different length than the original {@code String}.
<p>
Examples of locale-sensitive and 1:M case mappings are in the following table.

<table border=\"1\" summary=\"Examples of locale-sensitive and 1:M case mappings. Shows Language code of locale, lower case, upper case, and description.\">
<tr>
  <th>Language Code of Locale</th>
  <th>Lower Case</th>
  <th>Upper Case</th>
  <th>Description</th>
</tr>
<tr>
  <td>tr (Turkish)</td>
  <td>&#92;u0069</td>
  <td>&#92;u0130</td>
  <td>small letter i -&gt; capital letter I with dot above</td>
</tr>
<tr>
  <td>tr (Turkish)</td>
  <td>&#92;u0131</td>
  <td>&#92;u0049</td>
  <td>small letter dotless i -&gt; capital letter I</td>
</tr>
<tr>
  <td>(all)</td>
  <td>&#92;u00df</td>
  <td>&#92;u0053 &#92;u0053</td>
  <td>small letter sharp s -&gt; two letters: SS</td>
</tr>
<tr>
  <td>(all)</td>
  <td>Fahrvergn&uuml;gen</td>
  <td>FAHRVERGN&Uuml;GEN</td>
  <td></td>
</tr>
</table>
@param locale use the case transformation rules for this locale
@return the {@code String}, converted to uppercase.
@see     java.lang.String#toUpperCase()
@see     java.lang.String#toLowerCase()
@see     java.lang.String#toLowerCase(Locale)
@since   1.1
"
      end

      operation 7110914 "toUpperCase"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts all of the characters in this {@code String} to upper
case using the rules of the default locale. This method is equivalent to
{@code toUpperCase(Locale.getDefault())}.
<p>
<b>Note:</b> This method is locale sensitive, and may produce unexpected
results if used for strings that are intended to be interpreted locale
independently.
Examples are programming language identifiers, protocol keys, and HTML
tags.
For instance, {@code \"title\".toUpperCase()} in a Turkish locale
returns {@code \"T\\u005Cu0130TLE\"}, where '\\u005Cu0130' is the
LATIN CAPITAL LETTER I WITH DOT ABOVE character.
To obtain correct results for locale insensitive strings, use
{@code toUpperCase(Locale.ROOT)}.
<p>
@return  the {@code String}, converted to uppercase.
@see     java.lang.String#toUpperCase(Locale)
"
      end

      operation 7111042 "trim"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string whose value is this string, with any leading and trailing
whitespace removed.
<p>
If this {@code String} object represents an empty character
sequence, or the first and last characters of character sequence
represented by this {@code String} object both have codes
greater than {@code '\\u005Cu0020'} (the space character), then a
reference to this {@code String} object is returned.
<p>
Otherwise, if there is no character with a code greater than
{@code '\\u005Cu0020'} in the string, then a
{@code String} object representing an empty string is
returned.
<p>
Otherwise, let <i>k</i> be the index of the first character in the
string whose code is greater than {@code '\\u005Cu0020'}, and let
<i>m</i> be the index of the last character in the string whose code
is greater than {@code '\\u005Cu0020'}. A {@code String}
object is returned, representing the substring of this string that
begins with the character at index <i>k</i> and ends with the
character at index <i>m</i>-that is, the result of
{@code this.substring(k, m + 1)}.
<p>
This method may be used to trim whitespace (as defined above) from
the beginning and end of a string.

@return  A string whose value is this string, with any leading and trailing white
         space removed, or this string if it has no leading or
         trailing white space.
"
      end

      operation 7111170 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This object (which is already a string!) is itself returned.

@return  the string itself.
"
      end

      operation 7111298 "toCharArray"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this string to a new character array.

@return  a newly allocated character array whose length is the length
         of this string and whose contents are initialized to contain
         the character sequence represented by this string.
"
      end

      operation 7111426 "format"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "format" type class_ref 128130 // String
	  param inout name "" explicit_type "Object...args"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a formatted string using the specified format string and
arguments.

<p> The locale always used is the one returned by {@link
java.util.Locale#getDefault() Locale.getDefault()}.

@param  format
        A <a href=\"../util/Formatter.html#syntax\">format string</a>

@param  args
        Arguments referenced by the format specifiers in the format
        string.  If there are more arguments than format specifiers, the
        extra arguments are ignored.  The number of arguments is
        variable and may be zero.  The maximum number of arguments is
        limited by the maximum dimension of a Java array as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.
        The behaviour on a
        {@code null} argument depends on the <a
        href=\"../util/Formatter.html#syntax\">conversion</a>.

@throws  java.util.IllegalFormatException
         If a format string contains an illegal syntax, a format
         specifier that is incompatible with the given arguments,
         insufficient arguments given the format string, or other
         illegal conditions.  For specification of all possible
         formatting errors, see the <a
         href=\"../util/Formatter.html#detail\">Details</a> section of the
         formatter class specification.

@return  A formatted string

@see  java.util.Formatter
@since  1.5
"
      end

      operation 7111554 "format"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "l" type class_ref 312962 // Locale
	  param inout name "format" type class_ref 128130 // String
	  param inout name "" explicit_type "Object...args"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a formatted string using the specified locale, format string,
and arguments.

@param  l
        The {@linkplain java.util.Locale locale} to apply during
        formatting.  If {@code l} is {@code null} then no localization
        is applied.

@param  format
        A <a href=\"../util/Formatter.html#syntax\">format string</a>

@param  args
        Arguments referenced by the format specifiers in the format
        string.  If there are more arguments than format specifiers, the
        extra arguments are ignored.  The number of arguments is
        variable and may be zero.  The maximum number of arguments is
        limited by the maximum dimension of a Java array as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.
        The behaviour on a
        {@code null} argument depends on the
        <a href=\"../util/Formatter.html#syntax\">conversion</a>.

@throws  java.util.IllegalFormatException
         If a format string contains an illegal syntax, a format
         specifier that is incompatible with the given arguments,
         insufficient arguments given the format string, or other
         illegal conditions.  For specification of all possible
         formatting errors, see the <a
         href=\"../util/Formatter.html#detail\">Details</a> section of the
         formatter class specification

@return  A formatted string

@see  java.util.Formatter
@since  1.5
"
      end

      operation 7111682 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code Object} argument.

@param   obj   an {@code Object}.
@return  if the argument is {@code null}, then a string equal to
         {@code \"null\"}; otherwise, the value of
         {@code obj.toString()} is returned.
@see     java.lang.Object#toString()
"
      end

      operation 7111810 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code char} array
argument. The contents of the character array are copied; subsequent
modification of the character array does not affect the returned
string.

@param   data     the character array.
@return  a {@code String} that contains the characters of the
         character array.
"
      end

      operation 7111938 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a specific subarray of the
{@code char} array argument.
<p>
The {@code offset} argument is the index of the first
character of the subarray. The {@code count} argument
specifies the length of the subarray. The contents of the subarray
are copied; subsequent modification of the character array does not
affect the returned string.

@param   data     the character array.
@param   offset   initial offset of the subarray.
@param   count    length of the subarray.
@return  a {@code String} that contains the characters of the
         specified subarray of the character array.
@exception IndexOutOfBoundsException if {@code offset} is
         negative, or {@code count} is negative, or
         {@code offset+count} is larger than
         {@code data.length}.
"
      end

      operation 7112066 "copyValueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@link #valueOf(char[], int, int)}.

@param   data     the character array.
@param   offset   initial offset of the subarray.
@param   count    length of the subarray.
@return  a {@code String} that contains the characters of the
         specified subarray of the character array.
@exception IndexOutOfBoundsException if {@code offset} is
         negative, or {@code count} is negative, or
         {@code offset+count} is larger than
         {@code data.length}.
"
      end

      operation 7112194 "copyValueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "data" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to {@link #valueOf(char[])}.

@param   data   the character array.
@return  a {@code String} that contains the characters of the
         character array.
"
      end

      operation 7112322 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code boolean} argument.

@param   b   a {@code boolean}.
@return  if the argument is {@code true}, a string equal to
         {@code \"true\"} is returned; otherwise, a string equal to
         {@code \"false\"} is returned.
"
      end

      operation 7112450 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code char}
argument.

@param   c   a {@code char}.
@return  a string of length {@code 1} containing
         as its single character the argument {@code c}.
"
      end

      operation 7112578 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code int} argument.
<p>
The representation is exactly the one returned by the
{@code Integer.toString} method of one argument.

@param   i   an {@code int}.
@return  a string representation of the {@code int} argument.
@see     java.lang.Integer#toString(int, int)
"
      end

      operation 7112706 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code long} argument.
<p>
The representation is exactly the one returned by the
{@code Long.toString} method of one argument.

@param   l   a {@code long}.
@return  a string representation of the {@code long} argument.
@see     java.lang.Long#toString(long)
"
      end

      operation 7112834 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code float} argument.
<p>
The representation is exactly the one returned by the
{@code Float.toString} method of one argument.

@param   f   a {@code float}.
@return  a string representation of the {@code float} argument.
@see     java.lang.Float#toString(float)
"
      end

      operation 7112962 "valueOf"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the {@code double} argument.
<p>
The representation is exactly the one returned by the
{@code Double.toString} method of one argument.

@param   d   a {@code double}.
@return  a  string representation of the {@code double} argument.
@see     java.lang.Double#toString(double)
"
      end

      operation 7113090 "intern"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns a canonical representation for the string object.
<p>
A pool of strings, initially empty, is maintained privately by the
class {@code String}.
<p>
When the intern method is invoked, if the pool already contains a
string equal to this {@code String} object as determined by
the {@link #equals(Object)} method, then the string from the pool is
returned. Otherwise, this {@code String} object is added to the
pool and a reference to this {@code String} object is returned.
<p>
It follows that for any two strings {@code s} and {@code t},
{@code s.intern() == t.intern()} is {@code true}
if and only if {@code s.equals(t)} is {@code true}.
<p>
All literal strings and string-valued constant expressions are
interned. String literals are defined in section 3.10.5 of the
<cite>The Java&trade; Language Specification</cite>.

@return  a string that has the same contents as this string, but is
         guaranteed to be from a pool of unique strings.
"
      end
    end

    class 128642 "Thread"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <i>thread</i> is a thread of execution in a program. The Java
Virtual Machine allows an application to have multiple threads of
execution running concurrently.
<p>
Every thread has a priority. Threads with higher priority are
executed in preference to threads with lower priority. Each thread
may or may not also be marked as a daemon. When code running in
some thread creates a new <code>Thread</code> object, the new
thread has its priority initially set equal to the priority of the
creating thread, and is a daemon thread if and only if the
creating thread is a daemon.
<p>
When a Java Virtual Machine starts up, there is usually a single
non-daemon thread (which typically calls the method named
<code>main</code> of some designated class). The Java Virtual
Machine continues to execute threads until either of the following
occurs:
<ul>
<li>The <code>exit</code> method of class <code>Runtime</code> has been
    called and the security manager has permitted the exit operation
    to take place.
<li>All threads that are not daemon threads have died, either by
    returning from the call to the <code>run</code> method or by
    throwing an exception that propagates beyond the <code>run</code>
    method.
</ul>
<p>
There are two ways to create a new thread of execution. One is to
declare a class to be a subclass of <code>Thread</code>. This
subclass should override the <code>run</code> method of class
<code>Thread</code>. An instance of the subclass can then be
allocated and started. For example, a thread that computes primes
larger than a stated value could be written as follows:
<hr><blockquote><pre>
    class PrimeThread extends Thread {
        long minPrime;
        PrimeThread(long minPrime) {
            this.minPrime = minPrime;
        }

        public void run() {
            // compute primes larger than minPrime
            &nbsp;.&nbsp;.&nbsp;.
        }
    }
</pre></blockquote><hr>
<p>
The following code would then create a thread and start it running:
<blockquote><pre>
    PrimeThread p = new PrimeThread(143);
    p.start();
</pre></blockquote>
<p>
The other way to create a thread is to declare a class that
implements the <code>Runnable</code> interface. That class then
implements the <code>run</code> method. An instance of the class can
then be allocated, passed as an argument when creating
<code>Thread</code>, and started. The same example in this other
style looks like the following:
<hr><blockquote><pre>
    class PrimeRun implements Runnable {
        long minPrime;
        PrimeRun(long minPrime) {
            this.minPrime = minPrime;
        }

        public void run() {
            // compute primes larger than minPrime
            &nbsp;.&nbsp;.&nbsp;.
        }
    }
</pre></blockquote><hr>
<p>
The following code would then create a thread and start it running:
<blockquote><pre>
    PrimeRun p = new PrimeRun(143);
    new Thread(p).start();
</pre></blockquote>
<p>
Every thread has a name for identification purposes. More than
one thread may have the same name. If a name is not specified when
a thread is created, a new name is generated for it.
<p>
Unless otherwise noted, passing a {@code null} argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@author  unascribed
@see     Runnable
@see     Runtime#exit(int)
@see     #run()
@see     #stop()
@since   JDK1.0
"
      classrelation 128002 // <realization>
	relation 128002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 128002 // <realization>
	  b parent class_ref 128770 // Runnable
      end

      operation 128514 "registerNatives"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " Make sure registerNatives is the first thing <clinit> does. "
      end

      extra_member 128002 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 128130 // name (<unidirectional association>)
	relation 128130 --->
	  a role_name "name" volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128130 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 128514 "priority"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 128258 // threadQ (<unidirectional association>)
	relation 128258 --->
	  a role_name "threadQ" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128258 // threadQ (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      attribute 128642 "eetop"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 128770 "single_step"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not to single_step this thread. 
"
      end

      attribute 128898 "daemon"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Whether or not the thread is a daemon thread. 
"
      end

      attribute 129026 "stillborn"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " JVM state 
"
      end

      classrelation 128386 // target (<unidirectional association>)
	relation 128386 --->
	  a role_name "target" private
	    comment " What will be run. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128386 // target (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      classrelation 128514 // group (<unidirectional association>)
	relation 128514 --->
	  a role_name "group" private
	    comment " The group of this thread 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128514 // group (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 128642 // contextClassLoader (<unidirectional association>)
	relation 128642 --->
	  a role_name "contextClassLoader" private
	    comment " The context ClassLoader for this thread 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128642 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 128770 // inheritedAccessControlContext (<unidirectional association>)
	relation 128770 --->
	  a role_name "inheritedAccessControlContext" private
	    comment " The inherited AccessControlContext of this thread 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128770 // inheritedAccessControlContext (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      attribute 129154 "threadInitNumber"
	class_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " For autonumbering anonymous threads. 
"
      end

      operation 128642 "nextThreadNum"
	class_operation private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 128898 // threadLocals (<unidirectional association>)
	relation 128898 --->
	  a role_name "threadLocals" init_value " null" package
	    comment " ThreadLocal values pertaining to this thread. This map is maintained
by the ThreadLocal class. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 128898 // threadLocals (<unidirectional association>)
	  b parent class_ref 129410 // ThreadLocalMap
      end

      classrelation 129026 // inheritableThreadLocals (<unidirectional association>)
	relation 129026 --->
	  a role_name "inheritableThreadLocals" init_value " null" package
	    comment "
InheritableThreadLocal values pertaining to this thread. This map is
maintained by the InheritableThreadLocal class.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 129026 // inheritableThreadLocals (<unidirectional association>)
	  b parent class_ref 129410 // ThreadLocalMap
      end

      attribute 129282 "stackSize"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The requested stack size for this thread, or 0 if the creator did
not specify a stack size.  It is up to the VM to do whatever it
likes with this number; some VMs will ignore it.

"
      end

      attribute 129410 "nativeParkEventPointer"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "JVM-private state that persists after native thread termination.

"
      end

      attribute 129538 "tid"
	private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Thread ID

"
      end

      attribute 129666 "threadSeqNumber"
	class_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " For generating thread ID 
"
      end

      attribute 129794 "threadStatus"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Java thread status for tools,
initialized to indicate thread 'not yet started'

"
      end

      operation 128770 "nextThreadID"
	class_operation private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 129154 // parkBlocker (<unidirectional association>)
	relation 129154 --->
	  a role_name "parkBlocker" volatile package
	    comment "
The argument supplied to the current call to
java.util.concurrent.locks.LockSupport.park.
Set by (private) java.util.concurrent.locks.LockSupport.setBlocker
Accessed using java.util.concurrent.locks.LockSupport.getBlocker

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 129154 // parkBlocker (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 129922 "blocker"
	volatile private explicit_type "Interruptible"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The object in which this thread is blocked in an interruptible I/O
operation, if any.  The blocker's interrupt method should be invoked
after setting this thread's interrupt status.

"
      end

      classrelation 129282 // blockerLock (<unidirectional association>)
	relation 129282 --->
	  a role_name "blockerLock" init_value " new Object()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 129282 // blockerLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 128898 "blockedOn"
	package explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "Interruptible"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set the blocker field; invoked via sun.misc.SharedSecrets from java.nio code
"
      end

      attribute 130050 "MIN_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum priority that a thread can have.

"
      end

      attribute 130178 "NORM_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The default priority that is assigned to a thread.

"
      end

      attribute 130306 "MAX_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum priority that a thread can have.

"
      end

      operation 129026 "currentThread"
	class_operation public return_type class_ref 128642 // Thread
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns a reference to the currently executing thread object.

@return  the currently executing thread.
"
      end

      operation 129154 "yield"
	class_operation public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "A hint to the scheduler that the current thread is willing to yield
its current use of a processor. The scheduler is free to ignore this
hint.

<p> Yield is a heuristic attempt to improve relative progression
between threads that would otherwise over-utilise a CPU. Its use
should be combined with detailed profiling and benchmarking to
ensure that it actually has the desired effect.

<p> It is rarely appropriate to use this method. It may be useful
for debugging or testing purposes, where it may help to reproduce
bugs due to race conditions. It may also be useful when designing
concurrency control constructs such as the ones in the
{@link java.util.concurrent.locks} package.
"
      end

      operation 129282 "sleep"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "millis" explicit_type "long"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Causes the currently executing thread to sleep (temporarily cease
execution) for the specified number of milliseconds, subject to
the precision and accuracy of system timers and schedulers. The thread
does not lose ownership of any monitors.

@param  millis
        the length of time to sleep in milliseconds

@throws  IllegalArgumentException
         if the value of {@code millis} is negative

@throws  InterruptedException
         if any thread has interrupted the current thread. The
         <i>interrupted status</i> of the current thread is
         cleared when this exception is thrown.
"
      end

      operation 129410 "sleep"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "millis" explicit_type "long"
	  param in name "nanos" explicit_type "int"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the currently executing thread to sleep (temporarily cease
execution) for the specified number of milliseconds plus the specified
number of nanoseconds, subject to the precision and accuracy of system
timers and schedulers. The thread does not lose ownership of any
monitors.

@param  millis
        the length of time to sleep in milliseconds

@param  nanos
        {@code 0-999999} additional nanoseconds to sleep

@throws  IllegalArgumentException
         if the value of {@code millis} is negative, or the value of
         {@code nanos} is not in the range {@code 0-999999}

@throws  InterruptedException
         if any thread has interrupted the current thread. The
         <i>interrupted status</i> of the current thread is
         cleared when this exception is thrown.
"
      end

      operation 129538 "init"
	private explicit_return_type "void"
	nparams 4
	  param inout name "g" type class_ref 128898 // ThreadGroup
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "name" type class_ref 128130 // String
	  param in name "stackSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a Thread with the current AccessControlContext.
@see #init(ThreadGroup,Runnable,String,long,AccessControlContext,boolean)
"
      end

      operation 129666 "init"
	private explicit_return_type "void"
	nparams 6
	  param inout name "g" type class_ref 128898 // ThreadGroup
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "name" type class_ref 128130 // String
	  param in name "stackSize" explicit_type "long"
	  param inout name "acc" type class_ref 129154 // AccessControlContext
	  param inout name "inheritThreadLocals" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a Thread.

@param g the Thread group
@param target the object whose run() method gets called
@param name the name of the new Thread
@param stackSize the desired stack size for the new thread, or
       zero to indicate that this parameter is to be ignored.
@param acc the AccessControlContext to inherit, or
           AccessController.getContext() if null
@param inheritThreadLocals if {@code true}, inherit initial values for
           inheritable thread-locals from the constructing thread
"
      end

      operation 129794 "clone"
	protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Throws CloneNotSupportedException as a Thread can not be meaningfully
cloned. Construct a new Thread instead.

@throws  CloneNotSupportedException
         always
"
      end

      operation 129922 "Thread"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (null, null, gname)}, where {@code gname} is a newly generated
name. Automatically generated names are of the form
{@code \"Thread-\"+}<i>n</i>, where <i>n</i> is an integer.
"
      end

      operation 130050 "Thread"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (null, target, gname)}, where {@code gname} is a newly generated
name. Automatically generated names are of the form
{@code \"Thread-\"+}<i>n</i>, where <i>n</i> is an integer.

@param  target
        the object whose {@code run} method is invoked when this thread
        is started. If {@code null}, this classes {@code run} method does
        nothing.
"
      end

      operation 130178 "Thread"
	package explicit_return_type ""
	nparams 2
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "acc" type class_ref 129154 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Thread that inherits the given AccessControlContext.
This is not a public constructor.
"
      end

      operation 130306 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "group" type class_ref 128898 // ThreadGroup
	  param inout name "target" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (group, target, gname)} ,where {@code gname} is a newly generated
name. Automatically generated names are of the form
{@code \"Thread-\"+}<i>n</i>, where <i>n</i> is an integer.

@param  group
        the thread group. If {@code null} and there is a security
        manager, the group is determined by {@linkplain
        SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.
        If there is not a security manager or {@code
        SecurityManager.getThreadGroup()} returns {@code null}, the group
        is set to the current thread's thread group.

@param  target
        the object whose {@code run} method is invoked when this thread
        is started. If {@code null}, this thread's run method is invoked.

@throws  SecurityException
         if the current thread cannot create a thread in the specified
         thread group
"
      end

      operation 130434 "Thread"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (null, null, name)}.

@param   name
         the name of the new thread
"
      end

      operation 130562 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "group" type class_ref 128898 // ThreadGroup
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (group, null, name)}.

@param  group
        the thread group. If {@code null} and there is a security
        manager, the group is determined by {@linkplain
        SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.
        If there is not a security manager or {@code
        SecurityManager.getThreadGroup()} returns {@code null}, the group
        is set to the current thread's thread group.

@param  name
        the name of the new thread

@throws  SecurityException
         if the current thread cannot create a thread in the specified
         thread group
"
      end

      operation 130690 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object. This constructor has the same
effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}
{@code (null, target, name)}.

@param  target
        the object whose {@code run} method is invoked when this thread
        is started. If {@code null}, this thread's run method is invoked.

@param  name
        the name of the new thread
"
      end

      operation 130818 "Thread"
	public explicit_return_type ""
	nparams 3
	  param inout name "group" type class_ref 128898 // ThreadGroup
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object so that it has {@code target}
as its run object, has the specified {@code name} as its name,
and belongs to the thread group referred to by {@code group}.

<p>If there is a security manager, its
{@link SecurityManager#checkAccess(ThreadGroup) checkAccess}
method is invoked with the ThreadGroup as its argument.

<p>In addition, its {@code checkPermission} method is invoked with
the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}
permission when invoked directly or indirectly by the constructor
of a subclass which overrides the {@code getContextClassLoader}
or {@code setContextClassLoader} methods.

<p>The priority of the newly created thread is set equal to the
priority of the thread creating it, that is, the currently running
thread. The method {@linkplain #setPriority setPriority} may be
used to change the priority to a new value.

<p>The newly created thread is initially marked as being a daemon
thread if and only if the thread creating it is currently marked
as a daemon thread. The method {@linkplain #setDaemon setDaemon}
may be used to change whether or not a thread is a daemon.

@param  group
        the thread group. If {@code null} and there is a security
        manager, the group is determined by {@linkplain
        SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.
        If there is not a security manager or {@code
        SecurityManager.getThreadGroup()} returns {@code null}, the group
        is set to the current thread's thread group.

@param  target
        the object whose {@code run} method is invoked when this thread
        is started. If {@code null}, this thread's run method is invoked.

@param  name
        the name of the new thread

@throws  SecurityException
         if the current thread cannot create a thread in the specified
         thread group or cannot override the context class loader methods.
"
      end

      operation 130946 "Thread"
	public explicit_return_type ""
	nparams 4
	  param inout name "group" type class_ref 128898 // ThreadGroup
	  param inout name "target" type class_ref 128770 // Runnable
	  param inout name "name" type class_ref 128130 // String
	  param in name "stackSize" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new {@code Thread} object so that it has {@code target}
as its run object, has the specified {@code name} as its name,
and belongs to the thread group referred to by {@code group}, and has
the specified <i>stack size</i>.

<p>This constructor is identical to {@link
#Thread(ThreadGroup,Runnable,String)} with the exception of the fact
that it allows the thread stack size to be specified.  The stack size
is the approximate number of bytes of address space that the virtual
machine is to allocate for this thread's stack.  <b>The effect of the
{@code stackSize} parameter, if any, is highly platform dependent.</b>

<p>On some platforms, specifying a higher value for the
{@code stackSize} parameter may allow a thread to achieve greater
recursion depth before throwing a {@link StackOverflowError}.
Similarly, specifying a lower value may allow a greater number of
threads to exist concurrently without throwing an {@link
OutOfMemoryError} (or other internal error).  The details of
the relationship between the value of the <tt>stackSize</tt> parameter
and the maximum recursion depth and concurrency level are
platform-dependent.  <b>On some platforms, the value of the
{@code stackSize} parameter may have no effect whatsoever.</b>

<p>The virtual machine is free to treat the {@code stackSize}
parameter as a suggestion.  If the specified value is unreasonably low
for the platform, the virtual machine may instead use some
platform-specific minimum value; if the specified value is unreasonably
high, the virtual machine may instead use some platform-specific
maximum.  Likewise, the virtual machine is free to round the specified
value up or down as it sees fit (or to ignore it completely).

<p>Specifying a value of zero for the {@code stackSize} parameter will
cause this constructor to behave exactly like the
{@code Thread(ThreadGroup, Runnable, String)} constructor.

<p><i>Due to the platform-dependent nature of the behavior of this
constructor, extreme care should be exercised in its use.
The thread stack size necessary to perform a given computation will
likely vary from one JRE implementation to another.  In light of this
variation, careful tuning of the stack size parameter may be required,
and the tuning may need to be repeated for each JRE implementation on
which an application is to run.</i>

<p>Implementation note: Java platform implementers are encouraged to
document their implementation's behavior with respect to the
{@code stackSize} parameter.


@param  group
        the thread group. If {@code null} and there is a security
        manager, the group is determined by {@linkplain
        SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.
        If there is not a security manager or {@code
        SecurityManager.getThreadGroup()} returns {@code null}, the group
        is set to the current thread's thread group.

@param  target
        the object whose {@code run} method is invoked when this thread
        is started. If {@code null}, this thread's run method is invoked.

@param  name
        the name of the new thread

@param  stackSize
        the desired stack size for the new thread, or zero to indicate
        that this parameter is to be ignored.

@throws  SecurityException
         if the current thread cannot create a thread in the specified
         thread group

@since 1.4
"
      end

      operation 131074 "start"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes this thread to begin execution; the Java Virtual Machine
calls the <code>run</code> method of this thread.
<p>
The result is that two threads are running concurrently: the
current thread (which returns from the call to the
<code>start</code> method) and the other thread (which executes its
<code>run</code> method).
<p>
It is never legal to start a thread more than once.
In particular, a thread may not be restarted once it has completed
execution.

@exception  IllegalThreadStateException  if the thread was already
              started.
@see        #run()
@see        #stop()
"
      end

      operation 131202 "start0"
	private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 131330 "run"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "If this thread was constructed using a separate
<code>Runnable</code> run object, then that
<code>Runnable</code> object's <code>run</code> method is called;
otherwise, this method does nothing and returns.
<p>
Subclasses of <code>Thread</code> should override this method.

@see     #start()
@see     #stop()
@see     #Thread(ThreadGroup, Runnable, String)
"
      end

      operation 131458 "exit"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called by the system to give a Thread
a chance to clean up before it actually exits.
"
      end

      operation 131586 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Forces the thread to stop executing.
<p>
If there is a security manager installed, its <code>checkAccess</code>
method is called with <code>this</code>
as its argument. This may result in a
<code>SecurityException</code> being raised (in the current thread).
<p>
If this thread is different from the current thread (that is, the current
thread is trying to stop a thread other than itself), the
security manager's <code>checkPermission</code> method (with a
<code>RuntimePermission(\"stopThread\")</code> argument) is called in
addition.
Again, this may result in throwing a
<code>SecurityException</code> (in the current thread).
<p>
The thread represented by this thread is forced to stop whatever
it is doing abnormally and to throw a newly created
<code>ThreadDeath</code> object as an exception.
<p>
It is permitted to stop a thread that has not yet been started.
If the thread is eventually started, it immediately terminates.
<p>
An application should not normally try to catch
<code>ThreadDeath</code> unless it must do some extraordinary
cleanup operation (note that the throwing of
<code>ThreadDeath</code> causes <code>finally</code> clauses of
<code>try</code> statements to be executed before the thread
officially dies).  If a <code>catch</code> clause catches a
<code>ThreadDeath</code> object, it is important to rethrow the
object so that the thread actually dies.
<p>
The top-level error handler that reacts to otherwise uncaught
exceptions does not print out a message or otherwise notify the
application if the uncaught exception is an instance of
<code>ThreadDeath</code>.

@exception  SecurityException  if the current thread cannot
              modify this thread.
@see        #interrupt()
@see        #checkAccess()
@see        #run()
@see        #start()
@see        ThreadDeath
@see        ThreadGroup#uncaughtException(Thread,Throwable)
@see        SecurityManager#checkAccess(Thread)
@see        SecurityManager#checkPermission
@deprecated This method is inherently unsafe.  Stopping a thread with
      Thread.stop causes it to unlock all of the monitors that it
      has locked (as a natural consequence of the unchecked
      <code>ThreadDeath</code> exception propagating up the stack).  If
      any of the objects previously protected by these monitors were in
      an inconsistent state, the damaged objects become visible to
      other threads, potentially resulting in arbitrary behavior.  Many
      uses of <code>stop</code> should be replaced by code that simply
      modifies some variable to indicate that the target thread should
      stop running.  The target thread should check this variable
      regularly, and return from its run method in an orderly fashion
      if the variable indicates that it is to stop running.  If the
      target thread waits for long periods (on a condition variable,
      for example), the <code>interrupt</code> method should be used to
      interrupt the wait.
      For more information, see
      <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">Why
      are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.
"
      end

      operation 131714 "stop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "obj" type class_ref 129922 // Throwable
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@code UnsupportedOperationException}.

@param obj ignored

@deprecated This method was originally designed to force a thread to stop
       and throw a given {@code Throwable} as an exception. It was
       inherently unsafe (see {@link #stop()} for details), and furthermore
       could be used to generate exceptions that the target thread was
       not prepared to handle.
       For more information, see
       <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">Why
       are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.
"
      end

      operation 131842 "interrupt"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interrupts this thread.

<p> Unless the current thread is interrupting itself, which is
always permitted, the {@link #checkAccess() checkAccess} method
of this thread is invoked, which may cause a {@link
SecurityException} to be thrown.

<p> If this thread is blocked in an invocation of the {@link
Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link
Object#wait(long, int) wait(long, int)} methods of the {@link Object}
class, or of the {@link #join()}, {@link #join(long)}, {@link
#join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)},
methods of this class, then its interrupt status will be cleared and it
will receive an {@link InterruptedException}.

<p> If this thread is blocked in an I/O operation upon an {@link
java.nio.channels.InterruptibleChannel InterruptibleChannel}
then the channel will be closed, the thread's interrupt
status will be set, and the thread will receive a {@link
java.nio.channels.ClosedByInterruptException}.

<p> If this thread is blocked in a {@link java.nio.channels.Selector}
then the thread's interrupt status will be set and it will return
immediately from the selection operation, possibly with a non-zero
value, just as if the selector's {@link
java.nio.channels.Selector#wakeup wakeup} method were invoked.

<p> If none of the previous conditions hold then this thread's interrupt
status will be set. </p>

<p> Interrupting a thread that is not alive need not have any effect.

@throws  SecurityException
         if the current thread cannot modify this thread

@revised 6.0
@spec JSR-51
"
      end

      operation 131970 "interrupted"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the current thread has been interrupted.  The
<i>interrupted status</i> of the thread is cleared by this method.  In
other words, if this method were to be called twice in succession, the
second call would return false (unless the current thread were
interrupted again, after the first call had cleared its interrupted
status and before the second call had examined it).

<p>A thread interruption ignored because a thread was not alive
at the time of the interrupt will be reflected by this method
returning false.

@return  <code>true</code> if the current thread has been interrupted;
         <code>false</code> otherwise.
@see #isInterrupted()
@revised 6.0
"
      end

      operation 132098 "isInterrupted"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this thread has been interrupted.  The <i>interrupted
status</i> of the thread is unaffected by this method.

<p>A thread interruption ignored because a thread was not alive
at the time of the interrupt will be reflected by this method
returning false.

@return  <code>true</code> if this thread has been interrupted;
         <code>false</code> otherwise.
@see     #interrupted()
@revised 6.0
"
      end

      operation 132226 "isInterrupted"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "ClearInterrupted" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Tests if some Thread has been interrupted.  The interrupted state
is reset or not based on the value of ClearInterrupted that is
passed.
"
      end

      operation 132354 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@link NoSuchMethodError}.

@deprecated This method was originally designed to destroy this
    thread without any cleanup. Any monitors it held would have
    remained locked. However, the method was never implemented.
    If if were to be implemented, it would be deadlock-prone in
    much the manner of {@link #suspend}. If the target thread held
    a lock protecting a critical system resource when it was
    destroyed, no thread could ever access this resource again.
    If another thread ever attempted to lock this resource, deadlock
    would result. Such deadlocks typically manifest themselves as
    \"frozen\" processes. For more information, see
    <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">
    Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.
@throws NoSuchMethodError always
"
      end

      operation 132482 "isAlive"
	public explicit_return_type "boolean"
	nparams 0
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Tests if this thread is alive. A thread is alive if it has
been started and has not yet died.

@return  <code>true</code> if this thread is alive;
         <code>false</code> otherwise.
"
      end

      operation 132610 "suspend"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Suspends this thread.
<p>
First, the <code>checkAccess</code> method of this thread is called
with no arguments. This may result in throwing a
<code>SecurityException </code>(in the current thread).
<p>
If the thread is alive, it is suspended and makes no further
progress unless and until it is resumed.

@exception  SecurityException  if the current thread cannot modify
              this thread.
@see #checkAccess
@deprecated   This method has been deprecated, as it is
  inherently deadlock-prone.  If the target thread holds a lock on the
  monitor protecting a critical system resource when it is suspended, no
  thread can access this resource until the target thread is resumed. If
  the thread that would resume the target thread attempts to lock this
  monitor prior to calling <code>resume</code>, deadlock results.  Such
  deadlocks typically manifest themselves as \"frozen\" processes.
  For more information, see
  <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">Why
  are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.
"
      end

      operation 132738 "resume"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Resumes a suspended thread.
<p>
First, the <code>checkAccess</code> method of this thread is called
with no arguments. This may result in throwing a
<code>SecurityException</code> (in the current thread).
<p>
If the thread is alive but suspended, it is resumed and is
permitted to make progress in its execution.

@exception  SecurityException  if the current thread cannot modify this
              thread.
@see        #checkAccess
@see        #suspend()
@deprecated This method exists solely for use with {@link #suspend},
    which has been deprecated because it is deadlock-prone.
    For more information, see
    <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">Why
    are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.
"
      end

      operation 132866 "setPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "newPriority" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the priority of this thread.
<p>
First the <code>checkAccess</code> method of this thread is called
with no arguments. This may result in throwing a
<code>SecurityException</code>.
<p>
Otherwise, the priority of this thread is set to the smaller of
the specified <code>newPriority</code> and the maximum permitted
priority of the thread's thread group.

@param newPriority priority to set this thread to
@exception  IllegalArgumentException  If the priority is not in the
              range <code>MIN_PRIORITY</code> to
              <code>MAX_PRIORITY</code>.
@exception  SecurityException  if the current thread cannot modify
              this thread.
@see        #getPriority
@see        #checkAccess()
@see        #getThreadGroup()
@see        #MAX_PRIORITY
@see        #MIN_PRIORITY
@see        ThreadGroup#getMaxPriority()
"
      end

      operation 132994 "getPriority"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this thread's priority.

@return  this thread's priority.
@see     #setPriority
"
      end

      operation 133122 "setName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the name of this thread to be equal to the argument
<code>name</code>.
<p>
First the <code>checkAccess</code> method of this thread is called
with no arguments. This may result in throwing a
<code>SecurityException</code>.

@param      name   the new name for this thread.
@exception  SecurityException  if the current thread cannot modify this
              thread.
@see        #getName
@see        #checkAccess()
"
      end

      operation 133250 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this thread's name.

@return  this thread's name.
@see     #setName(String)
"
      end

      operation 133378 "getThreadGroup"
	public return_type class_ref 128898 // ThreadGroup
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the thread group to which this thread belongs.
This method returns null if this thread has died
(been stopped).

@return  this thread's thread group.
"
      end

      operation 133506 "activeCount"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an estimate of the number of active threads in the current
thread's {@linkplain java.lang.ThreadGroup thread group} and its
subgroups. Recursively iterates over all subgroups in the current
thread's thread group.

<p> The value returned is only an estimate because the number of
threads may change dynamically while this method traverses internal
data structures, and might be affected by the presence of certain
system threads. This method is intended primarily for debugging
and monitoring purposes.

@return  an estimate of the number of active threads in the current
         thread's thread group and in any other thread group that
         has the current thread's thread group as an ancestor
"
      end

      operation 133634 "enumerate"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "tarray" type class_ref 128642 // Thread
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into the specified array every active thread in the current
thread's thread group and its subgroups. This method simply
invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}
method of the current thread's thread group.

<p> An application might use the {@linkplain #activeCount activeCount}
method to get an estimate of how big the array should be, however
<i>if the array is too short to hold all the threads, the extra threads
are silently ignored.</i>  If it is critical to obtain every active
thread in the current thread's thread group and its subgroups, the
invoker should verify that the returned int value is strictly less
than the length of {@code tarray}.

<p> Due to the inherent race condition in this method, it is recommended
that the method only be used for debugging and monitoring purposes.

@param  tarray
        an array into which to put the list of threads

@return  the number of threads put into the array

@throws  SecurityException
         if {@link java.lang.ThreadGroup#checkAccess} determines that
         the current thread cannot access its thread group
"
      end

      operation 133762 "countStackFrames"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	java_annotation "@Deprecated
"
	
	
	
	comment "Counts the number of stack frames in this thread. The thread must
be suspended.

@return     the number of stack frames in this thread.
@exception  IllegalThreadStateException  if this thread is not
            suspended.
@deprecated The definition of this call depends on {@link #suspend},
            which is deprecated.  Further, the results of this call
            were never well-defined.
"
      end

      operation 133890 "join"
	public explicit_return_type "void"
	nparams 1
	  param in name "millis" explicit_type "long"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits at most {@code millis} milliseconds for this thread to
die. A timeout of {@code 0} means to wait forever.

<p> This implementation uses a loop of {@code this.wait} calls
conditioned on {@code this.isAlive}. As a thread terminates the
{@code this.notifyAll} method is invoked. It is recommended that
applications not use {@code wait}, {@code notify}, or
{@code notifyAll} on {@code Thread} instances.

@param  millis
        the time to wait in milliseconds

@throws  IllegalArgumentException
         if the value of {@code millis} is negative

@throws  InterruptedException
         if any thread has interrupted the current thread. The
         <i>interrupted status</i> of the current thread is
         cleared when this exception is thrown.
"
      end

      operation 134018 "join"
	public explicit_return_type "void"
	nparams 2
	  param in name "millis" explicit_type "long"
	  param in name "nanos" explicit_type "int"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits at most {@code millis} milliseconds plus
{@code nanos} nanoseconds for this thread to die.

<p> This implementation uses a loop of {@code this.wait} calls
conditioned on {@code this.isAlive}. As a thread terminates the
{@code this.notifyAll} method is invoked. It is recommended that
applications not use {@code wait}, {@code notify}, or
{@code notifyAll} on {@code Thread} instances.

@param  millis
        the time to wait in milliseconds

@param  nanos
        {@code 0-999999} additional nanoseconds to wait

@throws  IllegalArgumentException
         if the value of {@code millis} is negative, or the value
         of {@code nanos} is not in the range {@code 0-999999}

@throws  InterruptedException
         if any thread has interrupted the current thread. The
         <i>interrupted status</i> of the current thread is
         cleared when this exception is thrown.
"
      end

      operation 134146 "join"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for this thread to die.

<p> An invocation of this method behaves in exactly the same
way as the invocation

<blockquote>
{@linkplain #join(long) join}{@code (0)}
</blockquote>

@throws  InterruptedException
         if any thread has interrupted the current thread. The
         <i>interrupted status</i> of the current thread is
         cleared when this exception is thrown.
"
      end

      operation 134274 "dumpStack"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a stack trace of the current thread to the standard error stream.
This method is used only for debugging.

@see     Throwable#printStackTrace()
"
      end

      operation 134402 "setDaemon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks this thread as either a {@linkplain #isDaemon daemon} thread
or a user thread. The Java Virtual Machine exits when the only
threads running are all daemon threads.

<p> This method must be invoked before the thread is started.

@param  on
        if {@code true}, marks this thread as a daemon thread

@throws  IllegalThreadStateException
         if this thread is {@linkplain #isAlive alive}

@throws  SecurityException
         if {@link #checkAccess} determines that the current
         thread cannot modify this thread
"
      end

      operation 134530 "isDaemon"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this thread is a daemon thread.

@return  <code>true</code> if this thread is a daemon thread;
         <code>false</code> otherwise.
@see     #setDaemon(boolean)
"
      end

      operation 134658 "checkAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the currently running thread has permission to
modify this thread.
<p>
If there is a security manager, its <code>checkAccess</code> method
is called with this thread as its argument. This may result in
throwing a <code>SecurityException</code>.

@exception  SecurityException  if the current thread is not allowed to
              access this thread.
@see        SecurityManager#checkAccess(Thread)
"
      end

      operation 134786 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this thread, including the
thread's name, priority, and thread group.

@return  a string representation of this thread.
"
      end

      operation 134914 "getContextClassLoader"
	public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the context ClassLoader for this Thread. The context
ClassLoader is provided by the creator of the thread for use
by code running in this thread when loading classes and resources.
If not {@linkplain #setContextClassLoader set}, the default is the
ClassLoader context of the parent Thread. The context ClassLoader of the
primordial thread is typically set to the class loader used to load the
application.

<p>If a security manager is present, and the invoker's class loader is not
{@code null} and is not the same as or an ancestor of the context class
loader, then this method invokes the security manager's {@link
SecurityManager#checkPermission(java.security.Permission) checkPermission}
method with a {@link RuntimePermission RuntimePermission}{@code
(\"getClassLoader\")} permission to verify that retrieval of the context
class loader is permitted.

@return  the context ClassLoader for this Thread, or {@code null}
         indicating the system class loader (or, failing that, the
         bootstrap class loader)

@throws  SecurityException
         if the current thread cannot get the context ClassLoader

@since 1.2
"
      end

      operation 135042 "setContextClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the context ClassLoader for this Thread. The context
ClassLoader can be set when a thread is created, and allows
the creator of the thread to provide the appropriate class loader,
through {@code getContextClassLoader}, to code running in the thread
when loading classes and resources.

<p>If a security manager is present, its {@link
SecurityManager#checkPermission(java.security.Permission) checkPermission}
method is invoked with a {@link RuntimePermission RuntimePermission}{@code
(\"setContextClassLoader\")} permission to see if setting the context
ClassLoader is permitted.

@param  cl
        the context ClassLoader for this Thread, or null  indicating the
        system class loader (or, failing that, the bootstrap class loader)

@throws  SecurityException
         if the current thread cannot set the context ClassLoader

@since 1.2
"
      end

      operation 135170 "holdsLock"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns <tt>true</tt> if and only if the current thread holds the
monitor lock on the specified object.

<p>This method is designed to allow a program to assert that
the current thread already holds a specified lock:
<pre>
    assert Thread.holdsLock(obj);
</pre>

@param  obj the object on which to test lock ownership
@throws NullPointerException if obj is <tt>null</tt>
@return <tt>true</tt> if the current thread holds the monitor lock on
        the specified object.
@since 1.4
"
      end

      classrelation 129410 // EMPTY_STACK_TRACE (<unidirectional association>)
	relation 129410 --->
	  a role_name "EMPTY_STACK_TRACE" multiplicity "[]" init_value " new StackTraceElement[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 129410 // EMPTY_STACK_TRACE (<unidirectional association>)
	  b parent class_ref 130050 // StackTraceElement
      end

      operation 135298 "getStackTrace"
	public return_type class_ref 130050 // StackTraceElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of stack trace elements representing the stack dump
of this thread.  This method will return a zero-length array if
this thread has not started, has started but has not yet been
scheduled to run by the system, or has terminated.
If the returned array is of non-zero length then the first element of
the array represents the top of the stack, which is the most recent
method invocation in the sequence.  The last element of the array
represents the bottom of the stack, which is the least recent method
invocation in the sequence.

<p>If there is a security manager, and this thread is not
the current thread, then the security manager's
<tt>checkPermission</tt> method is called with a
<tt>RuntimePermission(\"getStackTrace\")</tt> permission
to see if it's ok to get the stack trace.

<p>Some virtual machines may, under some circumstances, omit one
or more stack frames from the stack trace.  In the extreme case,
a virtual machine that has no stack trace information concerning
this thread is permitted to return a zero-length array from this
method.

@return an array of <tt>StackTraceElement</tt>,
each represents one stack frame.

@throws SecurityException
       if a security manager exists and its
       <tt>checkPermission</tt> method doesn't allow
       getting the stack trace of thread.
@see SecurityManager#checkPermission
@see RuntimePermission
@see Throwable#getStackTrace

@since 1.5
"
      end

      operation 135426 "getAllStackTraces"
	class_operation public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Thread, StackTraceElement[]> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of stack traces for all live threads.
The map keys are threads and each map value is an array of
<tt>StackTraceElement</tt> that represents the stack dump
of the corresponding <tt>Thread</tt>.
The returned stack traces are in the format specified for
the {@link #getStackTrace getStackTrace} method.

<p>The threads may be executing while this method is called.
The stack trace of each thread only represents a snapshot and
each stack trace may be obtained at different time.  A zero-length
array will be returned in the map value if the virtual machine has
no stack trace information about a thread.

<p>If there is a security manager, then the security manager's
<tt>checkPermission</tt> method is called with a
<tt>RuntimePermission(\"getStackTrace\")</tt> permission as well as
<tt>RuntimePermission(\"modifyThreadGroup\")</tt> permission
to see if it is ok to get the stack trace of all threads.

@return a <tt>Map</tt> from <tt>Thread</tt> to an array of
<tt>StackTraceElement</tt> that represents the stack trace of
the corresponding thread.

@throws SecurityException
       if a security manager exists and its
       <tt>checkPermission</tt> method doesn't allow
       getting the stack trace of thread.
@see #getStackTrace
@see SecurityManager#checkPermission
@see RuntimePermission
@see Throwable#getStackTrace

@since 1.5
"
      end

      classrelation 129538 // SUBCLASS_IMPLEMENTATION_PERMISSION (<unidirectional association>)
	relation 129538 --->
	  a role_name "SUBCLASS_IMPLEMENTATION_PERMISSION" init_value "
                    new RuntimePermission(\"enableContextClassLoaderOverride\")" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 129538 // SUBCLASS_IMPLEMENTATION_PERMISSION (<unidirectional association>)
	  b parent class_ref 130306 // RuntimePermission
      end

      class 130434 "Caches"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 129666 // subclassAudits (<unidirectional association>)
	  relation 129666 --->
	    a role_name "subclassAudits" init_value "
            new ConcurrentHashMap<>()" class_relation const_relation package
	      comment " cache of subclass security audit results 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WeakClassKey,Boolean> ${name}${value};
"
	      classrelation_ref 129666 // subclassAudits (<unidirectional association>)
	    b parent class_ref 130690 // ConcurrentMap
	end

	classrelation 129794 // subclassAuditsQueue (<unidirectional association>)
	  relation 129794 --->
	    a role_name "subclassAuditsQueue" init_value "
            new ReferenceQueue<>()" class_relation const_relation package
	      comment " queue for WeakReferences to audited subclasses 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>> ${name}${value};
"
	      classrelation_ref 129794 // subclassAuditsQueue (<unidirectional association>)
	    b parent class_ref 130946 // ReferenceQueue
	end
      end

      class 130562 "WeakClassKey"
	visibility package 
	nactuals 1
	actual class class_ref 131330 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 131074 // <realization>
	  relation 131074 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 131074 // <realization>
	    b parent class_ref 131330 // WeakReference
	end

	attribute 131330 "hash"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "saved value of the referent's identity hash code, to maintain
a consistent hash code after the referent has been cleared

"
	end

	operation 138754 "WeakClassKey"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "cl" type class_ref 130818 // Class
	    param inout name "refQueue" type class_ref 130946 // ReferenceQueue
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1}<Class<?>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new WeakClassKey to the given object, registered
with a queue.
"
	end

	operation 138882 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns the identity hash code of the original referent.
"
	end

	operation 139010 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns true if the given object is this identical
WeakClassKey instance, or, if this object's referent has not
been cleared, if the given object is another WeakClassKey
instance with the identical non-null referent as this one.
"
	end
      end

      operation 135554 "isCCLOverridden"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "cl" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this (possibly subclass) instance can be constructed
without violating security constraints: the subclass must not override
security-sensitive non-final methods, or else the
\"enableContextClassLoaderOverride\" RuntimePermission is checked.
"
      end

      operation 135682 "auditSubclass"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "subcl" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs reflective checks on given subclass to verify that it doesn't
override security-sensitive non-final methods.  Returns true if the
subclass overrides any of the methods, false otherwise.
"
      end

      operation 135810 "dumpThreads"
	class_operation private return_type class_ref 130050 // StackTraceElement
	nparams 1
	  param inout name "threads" type class_ref 128642 // Thread
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[][] ${name}${(}${t0}[] ${p0}${)}${throws};
s"
	
	
	
      end

      operation 135938 "getThreads"
	class_operation private return_type class_ref 128642 // Thread
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 136066 "getId"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of this Thread.  The thread ID is a positive
<tt>long</tt> number generated when this thread was created.
The thread ID is unique and remains unchanged during its lifetime.
When a thread is terminated, this thread ID may be reused.

@return this thread's ID.
@since 1.5
"
      end

      class 131074 "State"
	visibility public stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 130434 "NEW"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a thread which has not yet started.

"
	end

	attribute 130562 "RUNNABLE"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a runnable thread.  A thread in the runnable
state is executing in the Java virtual machine but it may
be waiting for other resources from the operating system
such as processor.

"
	end

	attribute 130690 "BLOCKED"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a thread blocked waiting for a monitor lock.
A thread in the blocked state is waiting for a monitor lock
to enter a synchronized block/method or
reenter a synchronized block/method after calling
{@link Object#wait() Object.wait}.

"
	end

	attribute 130818 "WAITING"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a waiting thread.
A thread is in the waiting state due to calling one of the
following methods:
<ul>
  <li>{@link Object#wait() Object.wait} with no timeout</li>
  <li>{@link #join() Thread.join} with no timeout</li>
  <li>{@link LockSupport#park() LockSupport.park}</li>
</ul>

<p>A thread in the waiting state is waiting for another thread to
perform a particular action.

For example, a thread that has called <tt>Object.wait()</tt>
on an object is waiting for another thread to call
<tt>Object.notify()</tt> or <tt>Object.notifyAll()</tt> on
that object. A thread that has called <tt>Thread.join()</tt>
is waiting for a specified thread to terminate.

"
	end

	attribute 130946 "TIMED_WAITING"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a waiting thread with a specified waiting time.
A thread is in the timed waiting state due to calling one of
the following methods with a specified positive waiting time:
<ul>
  <li>{@link #sleep Thread.sleep}</li>
  <li>{@link Object#wait(long) Object.wait} with timeout</li>
  <li>{@link #join(long) Thread.join} with timeout</li>
  <li>{@link LockSupport#parkNanos LockSupport.parkNanos}</li>
  <li>{@link LockSupport#parkUntil LockSupport.parkUntil}</li>
</ul>

"
	end

	attribute 131074 "TERMINATED"
	  public type class_ref 131074 // State
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Thread state for a terminated thread.
The thread has completed execution.
"
	end
      end

      operation 136194 "getState"
	public return_type class_ref 131074 // State
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the state of this thread.
This method is designed for use in monitoring of the system state,
not for synchronization control.

@return this thread's state.
@since 1.5
"
      end

      class 131202 "UncaughtExceptionHandler"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@FunctionalInterface
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 136322 "uncaughtException"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "t" type class_ref 128642 // Thread
	    param inout name "e" type class_ref 129922 // Throwable
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method invoked when the given thread terminates due to the
given uncaught exception.
<p>Any exception thrown by this method will be ignored by the
Java Virtual Machine.
@param t the thread
@param e the exception
"
	end
      end

      classrelation 129922 // uncaughtExceptionHandler (<unidirectional association>)
	relation 129922 --->
	  a role_name "uncaughtExceptionHandler" volatile private
	    comment " null unless explicitly set
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 129922 // uncaughtExceptionHandler (<unidirectional association>)
	  b parent class_ref 131202 // UncaughtExceptionHandler
      end

      classrelation 130050 // defaultUncaughtExceptionHandler (<unidirectional association>)
	relation 130050 --->
	  a role_name "defaultUncaughtExceptionHandler" class_relation volatile private
	    comment " null unless explicitly set
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 130050 // defaultUncaughtExceptionHandler (<unidirectional association>)
	  b parent class_ref 131202 // UncaughtExceptionHandler
      end

      operation 136450 "setDefaultUncaughtExceptionHandler"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "eh" type class_ref 131202 // UncaughtExceptionHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the default handler invoked when a thread abruptly terminates
due to an uncaught exception, and no other handler has been defined
for that thread.

<p>Uncaught exception handling is controlled first by the thread, then
by the thread's {@link ThreadGroup} object and finally by the default
uncaught exception handler. If the thread does not have an explicit
uncaught exception handler set, and the thread's thread group
(including parent thread groups)  does not specialize its
<tt>uncaughtException</tt> method, then the default handler's
<tt>uncaughtException</tt> method will be invoked.
<p>By setting the default uncaught exception handler, an application
can change the way in which uncaught exceptions are handled (such as
logging to a specific device, or file) for those threads that would
already accept whatever &quot;default&quot; behavior the system
provided.

<p>Note that the default uncaught exception handler should not usually
defer to the thread's <tt>ThreadGroup</tt> object, as that could cause
infinite recursion.

@param eh the object to use as the default uncaught exception handler.
If <tt>null</tt> then there is no default handler.

@throws SecurityException if a security manager is present and it
        denies <tt>{@link RuntimePermission}
        (&quot;setDefaultUncaughtExceptionHandler&quot;)</tt>

@see #setUncaughtExceptionHandler
@see #getUncaughtExceptionHandler
@see ThreadGroup#uncaughtException
@since 1.5
"
      end

      operation 136578 "getDefaultUncaughtExceptionHandler"
	class_operation public return_type class_ref 131202 // UncaughtExceptionHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default handler invoked when a thread abruptly terminates
due to an uncaught exception. If the returned value is <tt>null</tt>,
there is no default.
@since 1.5
@see #setDefaultUncaughtExceptionHandler
@return the default uncaught exception handler for all threads
"
      end

      operation 136706 "getUncaughtExceptionHandler"
	public return_type class_ref 131202 // UncaughtExceptionHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the handler invoked when this thread abruptly terminates
due to an uncaught exception. If this thread has not had an
uncaught exception handler explicitly set then this thread's
<tt>ThreadGroup</tt> object is returned, unless this thread
has terminated, in which case <tt>null</tt> is returned.
@since 1.5
@return the uncaught exception handler for this thread
"
      end

      operation 136834 "setUncaughtExceptionHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "eh" type class_ref 131202 // UncaughtExceptionHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the handler invoked when this thread abruptly terminates
due to an uncaught exception.
<p>A thread can take full control of how it responds to uncaught
exceptions by having its uncaught exception handler explicitly set.
If no such handler is set then the thread's <tt>ThreadGroup</tt>
object acts as its handler.
@param eh the object to use as this thread's uncaught exception
handler. If <tt>null</tt> then this thread has no explicit handler.
@throws  SecurityException  if the current thread is not allowed to
         modify this thread.
@see #setDefaultUncaughtExceptionHandler
@see ThreadGroup#uncaughtException
@since 1.5
"
      end

      operation 136962 "dispatchUncaughtException"
	private explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch an uncaught exception to the handler. This method is
intended to be called only by the JVM.
"
      end

      operation 137090 "processQueue"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "queue" type class_ref 130946 // ReferenceQueue
	  param inout name "map" type class_ref 130690 // ConcurrentMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Class<?>> ${p0}, ${t1}<? extends
                             WeakReference<Class<?>>, ?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes from the specified map any keys that have been enqueued
on the specified reference queue.
"
      end

      attribute 131458 "threadLocalRandomSeed"
	package explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@sun.misc.Contended(\"tlr\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following three initially uninitialized fields are exclusively
 managed by class java.util.concurrent.ThreadLocalRandom. These
 fields are used to build the high-performance PRNGs in the
 concurrent code, and we can not risk accidental false sharing.
 Hence, the fields are isolated with @Contended.
 The current seed for a ThreadLocalRandom 
"
      end

      attribute 131586 "threadLocalRandomProbe"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@sun.misc.Contended(\"tlr\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Probe hash value; nonzero if threadLocalRandomSeed initialized 
"
      end

      attribute 131714 "threadLocalRandomSecondarySeed"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@sun.misc.Contended(\"tlr\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Secondary seed isolated from public ThreadLocalRandom sequence 
"
      end

      operation 139138 "setPriority0"
	private explicit_return_type "void"
	nparams 1
	  param in name "newPriority" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment " Some private helper methods "
      end

      operation 139266 "stop0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 139394 "suspend0"
	private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 139522 "resume0"
	private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 139650 "interrupt0"
	private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 139778 "setNativeName"
	private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 128770 "Runnable"
      abstract visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@FunctionalInterface
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Runnable</code> interface should be implemented by any
class whose instances are intended to be executed by a thread. The
class must define a method of no arguments called <code>run</code>.
<p>
This interface is designed to provide a common protocol for objects that
wish to execute code while they are active. For example,
<code>Runnable</code> is implemented by class <code>Thread</code>.
Being active simply means that a thread has been started and has not
yet been stopped.
<p>
In addition, <code>Runnable</code> provides the means for a class to be
active while not subclassing <code>Thread</code>. A class that implements
<code>Runnable</code> can run without subclassing <code>Thread</code>
by instantiating a <code>Thread</code> instance and passing itself in
as the target.  In most cases, the <code>Runnable</code> interface should
be used if you are only planning to override the <code>run()</code>
method and no other <code>Thread</code> methods.
This is important because classes should not be subclassed
unless the programmer intends on modifying or enhancing the fundamental
behavior of the class.

@author  Arthur van Hoff
@see     java.lang.Thread
@see     java.util.concurrent.Callable
@since   JDK1.0
"
      operation 128386 "run"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When an object implementing interface <code>Runnable</code> is used
to create a thread, starting the thread causes the object's
<code>run</code> method to be called in that separately executing
thread.
<p>
The general contract of the method <code>run</code> is that it may
take any action whatsoever.

@see     java.lang.Thread#run()
"
      end
    end

    class 128898 "ThreadGroup"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A thread group represents a set of threads. In addition, a thread
group can also include other thread groups. The thread groups form
a tree in which every thread group except the initial thread group
has a parent.
<p>
A thread is allowed to access information about its own thread
group, but not to access information about its thread group's
parent thread group or any other thread groups.

@author  unascribed
@since   JDK1.0

 The locking strategy for this code is to try to lock only one level of the
tree wherever possible, but otherwise to lock from the bottom up.
That is, from child thread groups to parents.
This has the advantage of limiting the number of locks that need to be held
and in particular avoids having to grab the lock for the root thread group,
(or a global lock) which would be a source of contention on a
multi-processor system with many thread groups.
This policy often leads to taking a snapshot of the state of a thread group
and working off of that snapshot, rather than holding the thread group locked
while we work on the children.
"
      classrelation 3173762 // <realization>
	relation 3173762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3173762 // <realization>
	  b parent class_ref 131202 // UncaughtExceptionHandler
      end

      classrelation 3173890 // parent (<unidirectional association>)
	relation 3173890 --->
	  a role_name "parent" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3173890 // parent (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      classrelation 3174018 // name (<unidirectional association>)
	relation 3174018 --->
	  a role_name "name" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3174018 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1685890 "maxPriority"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1686018 "destroyed"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1686146 "daemon"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1686274 "vmAllowSuspension"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1686402 "nUnstartedThreads"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1686530 "nthreads"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3174146 // threads (<unidirectional association>)
	relation 3174146 --->
	  a role_name "threads" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3174146 // threads (<unidirectional association>)
	  b parent class_ref 128642 // Thread
      end

      attribute 1686658 "ngroups"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3174274 // groups (<unidirectional association>)
	relation 3174274 --->
	  a role_name "groups" multiplicity "[]" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3174274 // groups (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      operation 7134338 "ThreadGroup"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty Thread group that is not in any Thread group.
This method is used to create the system Thread group.
"
      end

      operation 7134466 "ThreadGroup"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new thread group. The parent of this new group is
the thread group of the currently running thread.
<p>
The <code>checkAccess</code> method of the parent thread group is
called with no arguments; this may result in a security exception.

@param   name   the name of the new thread group.
@exception  SecurityException  if the current thread cannot create a
              thread in the specified thread group.
@see     java.lang.ThreadGroup#checkAccess()
@since   JDK1.0
"
      end

      operation 7134594 "ThreadGroup"
	public explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 128898 // ThreadGroup
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new thread group. The parent of this new group is the
specified thread group.
<p>
The <code>checkAccess</code> method of the parent thread group is
called with no arguments; this may result in a security exception.

@param     parent   the parent thread group.
@param     name     the name of the new thread group.
@exception  NullPointerException  if the thread group argument is
              <code>null</code>.
@exception  SecurityException  if the current thread cannot create a
              thread in the specified thread group.
@see     java.lang.SecurityException
@see     java.lang.ThreadGroup#checkAccess()
@since   JDK1.0
"
      end

      operation 7134722 "ThreadGroup"
	private explicit_return_type ""
	nparams 3
	  param inout name "unused" type class_ref 146946 // Void
	  param inout name "parent" type class_ref 128898 // ThreadGroup
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7134850 "checkParentAccess"
	class_operation private return_type class_ref 146946 // Void
	nparams 1
	  param inout name "parent" type class_ref 128898 // ThreadGroup
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws  NullPointerException  if the parent argument is {@code null}
@throws  SecurityException     if the current thread cannot create a
                               thread in the specified thread group.
"
      end

      operation 7134978 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this thread group.

@return  the name of this thread group.
@since   JDK1.0
"
      end

      operation 7135106 "getParent"
	public return_type class_ref 128898 // ThreadGroup
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent of this thread group.
<p>
First, if the parent is not <code>null</code>, the
<code>checkAccess</code> method of the parent thread group is
called with no arguments; this may result in a security exception.

@return  the parent of this thread group. The top-level thread group
         is the only thread group whose parent is <code>null</code>.
@exception  SecurityException  if the current thread cannot modify
              this thread group.
@see        java.lang.ThreadGroup#checkAccess()
@see        java.lang.SecurityException
@see        java.lang.RuntimePermission
@since   JDK1.0
"
      end

      operation 7135234 "getMaxPriority"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum priority of this thread group. Threads that are
part of this group cannot have a higher priority than the maximum
priority.

@return  the maximum priority that a thread in this thread group
         can have.
@see     #setMaxPriority
@since   JDK1.0
"
      end

      operation 7135362 "isDaemon"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this thread group is a daemon thread group. A
daemon thread group is automatically destroyed when its last
thread is stopped or its last thread group is destroyed.

@return  <code>true</code> if this thread group is a daemon thread group;
         <code>false</code> otherwise.
@since   JDK1.0
"
      end

      operation 7135490 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this thread group has been destroyed.

@return  true if this object is destroyed
@since   JDK1.1
"
      end

      operation 7135618 "setDaemon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "daemon" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the daemon status of this thread group.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
A daemon thread group is automatically destroyed when its last
thread is stopped or its last thread group is destroyed.

@param      daemon   if <code>true</code>, marks this thread group as
                     a daemon thread group; otherwise, marks this
                     thread group as normal.
@exception  SecurityException  if the current thread cannot modify
              this thread group.
@see        java.lang.SecurityException
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
"
      end

      operation 7135746 "setMaxPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "pri" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum priority of the group. Threads in the thread
group that already have a higher priority are not affected.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
If the <code>pri</code> argument is less than
{@link Thread#MIN_PRIORITY} or greater than
{@link Thread#MAX_PRIORITY}, the maximum priority of the group
remains unchanged.
<p>
Otherwise, the priority of this ThreadGroup object is set to the
smaller of the specified <code>pri</code> and the maximum permitted
priority of the parent of this thread group. (If this thread group
is the system thread group, which has no parent, then its maximum
priority is simply set to <code>pri</code>.) Then this method is
called recursively, with <code>pri</code> as its argument, for
every thread group that belongs to this thread group.

@param      pri   the new priority of the thread group.
@exception  SecurityException  if the current thread cannot modify
              this thread group.
@see        #getMaxPriority
@see        java.lang.SecurityException
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
"
      end

      operation 7135874 "parentOf"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "g" type class_ref 128898 // ThreadGroup
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this thread group is either the thread group
argument or one of its ancestor thread groups.

@param   g   a thread group.
@return  <code>true</code> if this thread group is the thread group
         argument or one of its ancestor thread groups;
         <code>false</code> otherwise.
@since   JDK1.0
"
      end

      operation 7136002 "checkAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the currently running thread has permission to
modify this thread group.
<p>
If there is a security manager, its <code>checkAccess</code> method
is called with this thread group as its argument. This may result
in throwing a <code>SecurityException</code>.

@exception  SecurityException  if the current thread is not allowed to
              access this thread group.
@see        java.lang.SecurityManager#checkAccess(java.lang.ThreadGroup)
@since      JDK1.0
"
      end

      operation 7136130 "activeCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an estimate of the number of active threads in this thread
group and its subgroups. Recursively iterates over all subgroups in
this thread group.

<p> The value returned is only an estimate because the number of
threads may change dynamically while this method traverses internal
data structures, and might be affected by the presence of certain
system threads. This method is intended primarily for debugging
and monitoring purposes.

@return  an estimate of the number of active threads in this thread
         group and in any other thread group that has this thread
         group as an ancestor

@since   JDK1.0
"
      end

      operation 7136258 "enumerate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "list" type class_ref 128642 // Thread
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into the specified array every active thread in this
thread group and its subgroups.

<p> An invocation of this method behaves in exactly the same
way as the invocation

<blockquote>
{@linkplain #enumerate(Thread[], boolean) enumerate}{@code (list, true)}
</blockquote>

@param  list
        an array into which to put the list of threads

@return  the number of threads put into the array

@throws  SecurityException
         if {@linkplain #checkAccess checkAccess} determines that
         the current thread cannot access this thread group

@since   JDK1.0
"
      end

      operation 7136386 "enumerate"
	public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 128642 // Thread
	multiplicity "[]"
	  param inout name "recurse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into the specified array every active thread in this
thread group. If {@code recurse} is {@code true},
this method recursively enumerates all subgroups of this
thread group and references to every active thread in these
subgroups are also included. If the array is too short to
hold all the threads, the extra threads are silently ignored.

<p> An application might use the {@linkplain #activeCount activeCount}
method to get an estimate of how big the array should be, however
<i>if the array is too short to hold all the threads, the extra threads
are silently ignored.</i>  If it is critical to obtain every active
thread in this thread group, the caller should verify that the returned
int value is strictly less than the length of {@code list}.

<p> Due to the inherent race condition in this method, it is recommended
that the method only be used for debugging and monitoring purposes.

@param  list
        an array into which to put the list of threads

@param  recurse
        if {@code true}, recursively enumerate all subgroups of this
        thread group

@return  the number of threads put into the array

@throws  SecurityException
         if {@linkplain #checkAccess checkAccess} determines that
         the current thread cannot access this thread group

@since   JDK1.0
"
      end

      operation 7136514 "enumerate"
	private explicit_return_type "int"
	nparams 3
	  param inout name "list" type class_ref 128642 // Thread
	multiplicity "[]"
	  param in name "n" explicit_type "int"
	  param inout name "recurse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7136642 "activeGroupCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an estimate of the number of active groups in this
thread group and its subgroups. Recursively iterates over
all subgroups in this thread group.

<p> The value returned is only an estimate because the number of
thread groups may change dynamically while this method traverses
internal data structures. This method is intended primarily for
debugging and monitoring purposes.

@return  the number of active thread groups with this thread group as
         an ancestor

@since   JDK1.0
"
      end

      operation 7136770 "enumerate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "list" type class_ref 128898 // ThreadGroup
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into the specified array references to every active
subgroup in this thread group and its subgroups.

<p> An invocation of this method behaves in exactly the same
way as the invocation

<blockquote>
{@linkplain #enumerate(ThreadGroup[], boolean) enumerate}{@code (list, true)}
</blockquote>

@param  list
        an array into which to put the list of thread groups

@return  the number of thread groups put into the array

@throws  SecurityException
         if {@linkplain #checkAccess checkAccess} determines that
         the current thread cannot access this thread group

@since   JDK1.0
"
      end

      operation 7136898 "enumerate"
	public explicit_return_type "int"
	nparams 2
	  param inout name "list" type class_ref 128898 // ThreadGroup
	multiplicity "[]"
	  param inout name "recurse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into the specified array references to every active
subgroup in this thread group. If {@code recurse} is
{@code true}, this method recursively enumerates all subgroups of this
thread group and references to every active thread group in these
subgroups are also included.

<p> An application might use the
{@linkplain #activeGroupCount activeGroupCount} method to
get an estimate of how big the array should be, however <i>if the
array is too short to hold all the thread groups, the extra thread
groups are silently ignored.</i>  If it is critical to obtain every
active subgroup in this thread group, the caller should verify that
the returned int value is strictly less than the length of
{@code list}.

<p> Due to the inherent race condition in this method, it is recommended
that the method only be used for debugging and monitoring purposes.

@param  list
        an array into which to put the list of thread groups

@param  recurse
        if {@code true}, recursively enumerate all subgroups

@return  the number of thread groups put into the array

@throws  SecurityException
         if {@linkplain #checkAccess checkAccess} determines that
         the current thread cannot access this thread group

@since   JDK1.0
"
      end

      operation 7137026 "enumerate"
	private explicit_return_type "int"
	nparams 3
	  param inout name "list" type class_ref 128898 // ThreadGroup
	multiplicity "[]"
	  param in name "n" explicit_type "int"
	  param inout name "recurse" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7137154 "stop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Stops all threads in this thread group.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
This method then calls the <code>stop</code> method on all the
threads in this thread group and in all of its subgroups.

@exception  SecurityException  if the current thread is not allowed
              to access this thread group or any of the threads in
              the thread group.
@see        java.lang.SecurityException
@see        java.lang.Thread#stop()
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
@deprecated    This method is inherently unsafe.  See
    {@link Thread#stop} for details.
"
      end

      operation 7137282 "interrupt"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interrupts all threads in this thread group.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
This method then calls the <code>interrupt</code> method on all the
threads in this thread group and in all of its subgroups.

@exception  SecurityException  if the current thread is not allowed
              to access this thread group or any of the threads in
              the thread group.
@see        java.lang.Thread#interrupt()
@see        java.lang.SecurityException
@see        java.lang.ThreadGroup#checkAccess()
@since      1.2
"
      end

      operation 7137410 "suspend"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Suspends all threads in this thread group.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
This method then calls the <code>suspend</code> method on all the
threads in this thread group and in all of its subgroups.

@exception  SecurityException  if the current thread is not allowed
              to access this thread group or any of the threads in
              the thread group.
@see        java.lang.Thread#suspend()
@see        java.lang.SecurityException
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
@deprecated    This method is inherently deadlock-prone.  See
    {@link Thread#suspend} for details.
"
      end

      operation 7137538 "stopOrSuspend"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "suspend" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Helper method: recursively stops or suspends (as directed by the
boolean argument) all of the threads in this thread group and its
subgroups, except the current thread.  This method returns true
if (and only if) the current thread is found to be in this thread
group or one of its subgroups.
"
      end

      operation 7137666 "resume"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@SuppressWarnings(\"deprecation\")
"
	
	
	
	comment "Resumes all threads in this thread group.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.
<p>
This method then calls the <code>resume</code> method on all the
threads in this thread group and in all of its sub groups.

@exception  SecurityException  if the current thread is not allowed to
              access this thread group or any of the threads in the
              thread group.
@see        java.lang.SecurityException
@see        java.lang.Thread#resume()
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
@deprecated    This method is used solely in conjunction with
     <tt>Thread.suspend</tt> and <tt>ThreadGroup.suspend</tt>,
      both of which have been deprecated, as they are inherently
      deadlock-prone.  See {@link Thread#suspend} for details.
"
      end

      operation 7137794 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys this thread group and all of its subgroups. This thread
group must be empty, indicating that all threads that had been in
this thread group have since stopped.
<p>
First, the <code>checkAccess</code> method of this thread group is
called with no arguments; this may result in a security exception.

@exception  IllegalThreadStateException  if the thread group is not
              empty or if the thread group has already been destroyed.
@exception  SecurityException  if the current thread cannot modify this
              thread group.
@see        java.lang.ThreadGroup#checkAccess()
@since      JDK1.0
"
      end

      operation 7137922 "add"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 128898 // ThreadGroup
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified Thread group to this group.
@param g the specified Thread group to be added
@exception IllegalThreadStateException If the Thread group has been destroyed.
"
      end

      operation 7138050 "remove"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 128898 // ThreadGroup
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified Thread group from this group.
@param g the Thread group to be removed
@return if this Thread has already been destroyed.
"
      end

      operation 7138178 "addUnstarted"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increments the count of unstarted threads in the thread group.
Unstarted threads are not added to the thread group so that they
can be collected if they are never started, but they must be
counted so that daemon thread groups with unstarted threads in
them are not destroyed.
"
      end

      operation 7138306 "add"
	package explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified thread to this thread group.

<p> Note: This method is called from both library code
and the Virtual Machine. It is called from VM to add
certain system threads to the system thread group.

@param  t
        the Thread to be added

@throws  IllegalThreadStateException
         if the Thread group has been destroyed
"
      end

      operation 7138434 "threadStartFailed"
	package explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the group that the thread {@code t} has failed
an attempt to start.

<p> The state of this thread group is rolled back as if the
attempt to start the thread has never occurred. The thread is again
considered an unstarted member of the thread group, and a subsequent
attempt to start the thread is permitted.

@param  t
        the Thread whose start method was invoked
"
      end

      operation 7138562 "threadTerminated"
	package explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the group that the thread {@code t} has terminated.

<p> Destroy the group if all of the following conditions are
true: this is a daemon thread group; there are no more alive
or unstarted threads in the group; there are no subgroups in
this thread group.

@param  t
        the Thread that has terminated
"
      end

      operation 7138690 "remove"
	private explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified Thread from this group. Invoking this method
on a thread group that has been destroyed has no effect.

@param  t
        the Thread to be removed
"
      end

      operation 7138818 "list"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints information about this thread group to the standard
output. This method is useful only for debugging.

@since   JDK1.0
"
      end

      operation 7138946 "list"
	package explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 128258 // PrintStream
	  param in name "indent" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7139074 "uncaughtException"
	public explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 128642 // Thread
	  param inout name "e" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the Java Virtual Machine when a thread in this
thread group stops because of an uncaught exception, and the thread
does not have a specific {@link Thread.UncaughtExceptionHandler}
installed.
<p>
The <code>uncaughtException</code> method of
<code>ThreadGroup</code> does the following:
<ul>
<li>If this thread group has a parent thread group, the
    <code>uncaughtException</code> method of that parent is called
    with the same two arguments.
<li>Otherwise, this method checks to see if there is a
    {@linkplain Thread#getDefaultUncaughtExceptionHandler default
    uncaught exception handler} installed, and if so, its
    <code>uncaughtException</code> method is called with the same
    two arguments.
<li>Otherwise, this method determines if the <code>Throwable</code>
    argument is an instance of {@link ThreadDeath}. If so, nothing
    special is done. Otherwise, a message containing the
    thread's name, as returned from the thread's {@link
    Thread#getName getName} method, and a stack backtrace,
    using the <code>Throwable</code>'s {@link
    Throwable#printStackTrace printStackTrace} method, is
    printed to the {@linkplain System#err standard error stream}.
</ul>
<p>
Applications can override this method in subclasses of
<code>ThreadGroup</code> to provide alternative handling of
uncaught exceptions.

@param   t   the thread that is about to exit.
@param   e   the uncaught exception.
@since   JDK1.0
"
      end

      operation 7139202 "allowThreadSuspension"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Used by VM to control lowmem implicit suspension.

@param b boolean to allow or disallow suspension
@return true on success
@since   JDK1.1
@deprecated The definition of this call depends on {@link #suspend},
            which is deprecated.  Further, the behavior of this call
            was never specified.
"
      end

      operation 7139330 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this Thread group.

@return  a string representation of this thread group.
@since   JDK1.0
"
      end
    end

    class 129026 "ClassLoader"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class loader is an object that is responsible for loading classes. The
class <tt>ClassLoader</tt> is an abstract class.  Given the <a
href=\"#name\">binary name</a> of a class, a class loader should attempt to
locate or generate data that constitutes a definition for the class.  A
typical strategy is to transform the name into a file name and then read a
\"class file\" of that name from a file system.

<p> Every {@link Class <tt>Class</tt>} object contains a {@link
Class#getClassLoader() reference} to the <tt>ClassLoader</tt> that defined
it.

<p> <tt>Class</tt> objects for array classes are not created by class
loaders, but are created automatically as required by the Java runtime.
The class loader for an array class, as returned by {@link
Class#getClassLoader()} is the same as the class loader for its element
type; if the element type is a primitive type, then the array class has no
class loader.

<p> Applications implement subclasses of <tt>ClassLoader</tt> in order to
extend the manner in which the Java virtual machine dynamically loads
classes.

<p> Class loaders may typically be used by security managers to indicate
security domains.

<p> The <tt>ClassLoader</tt> class uses a delegation model to search for
classes and resources.  Each instance of <tt>ClassLoader</tt> has an
associated parent class loader.  When requested to find a class or
resource, a <tt>ClassLoader</tt> instance will delegate the search for the
class or resource to its parent class loader before attempting to find the
class or resource itself.  The virtual machine's built-in class loader,
called the \"bootstrap class loader\", does not itself have a parent but may
serve as the parent of a <tt>ClassLoader</tt> instance.

<p> Class loaders that support concurrent loading of classes are known as
<em>parallel capable</em> class loaders and are required to register
themselves at their class initialization time by invoking the
{@link
#registerAsParallelCapable <tt>ClassLoader.registerAsParallelCapable</tt>}
method. Note that the <tt>ClassLoader</tt> class is registered as parallel
capable by default. However, its subclasses still need to register themselves
if they are parallel capable. <br>
In environments in which the delegation model is not strictly
hierarchical, class loaders need to be parallel capable, otherwise class
loading can lead to deadlocks because the loader lock is held for the
duration of the class loading process (see {@link #loadClass
<tt>loadClass</tt>} methods).

<p> Normally, the Java virtual machine loads classes from the local file
system in a platform-dependent manner.  For example, on UNIX systems, the
virtual machine loads classes from the directory defined by the
<tt>CLASSPATH</tt> environment variable.

<p> However, some classes may not originate from a file; they may originate
from other sources, such as the network, or they could be constructed by an
application.  The method {@link #defineClass(String, byte[], int, int)
<tt>defineClass</tt>} converts an array of bytes into an instance of class
<tt>Class</tt>. Instances of this newly defined class can be created using
{@link Class#newInstance <tt>Class.newInstance</tt>}.

<p> The methods and constructors of objects created by a class loader may
reference other classes.  To determine the class(es) referred to, the Java
virtual machine invokes the {@link #loadClass <tt>loadClass</tt>} method of
the class loader that originally created the class.

<p> For example, an application could create a network class loader to
download class files from a server.  Sample code might look like:

<blockquote><pre>
  ClassLoader loader&nbsp;= new NetworkClassLoader(host,&nbsp;port);
  Object main&nbsp;= loader.loadClass(\"Main\", true).newInstance();
      &nbsp;.&nbsp;.&nbsp;.
</pre></blockquote>

<p> The network class loader subclass must define the methods {@link
#findClass <tt>findClass</tt>} and <tt>loadClassData</tt> to load a class
from the network.  Once it has downloaded the bytes that make up the class,
it should use the method {@link #defineClass <tt>defineClass</tt>} to
create a class instance.  A sample implementation is:

<blockquote><pre>
    class NetworkClassLoader extends ClassLoader {
        String host;
        int port;

        public Class findClass(String name) {
            byte[] b = loadClassData(name);
            return defineClass(name, b, 0, b.length);
        }

        private byte[] loadClassData(String name) {
            // load the class data from the connection
            &nbsp;.&nbsp;.&nbsp;.
        }
    }
</pre></blockquote>

<h3> <a name=\"name\">Binary names</a> </h3>

<p> Any class name provided as a {@link String} parameter to methods in
<tt>ClassLoader</tt> must be a binary name as defined by
<cite>The Java&trade; Language Specification</cite>.

<p> Examples of valid class names include:
<blockquote><pre>
  \"java.lang.String\"
  \"javax.swing.JSpinner$DefaultEditor\"
  \"java.security.KeyStore$Builder$FileBuilder$1\"
  \"java.net.URLClassLoader$3$1\"
</pre></blockquote>

@see      #resolveClass(Class)
@since 1.0
"
      operation 1720322 "registerNatives"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      extra_member 134402 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 537858 // parent (<unidirectional association>)
	relation 537858 --->
	  a role_name "parent" const_relation private
	    comment " The parent class loader for delegation
 Note: VM hardcoded the offset of this field, thus all new fields
 must be added *after* it.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 537858 // parent (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      class 319234 "ParallelLoaders"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 1720450 "ParallelLoaders"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 537986 // loaderTypes (<unidirectional association>)
	  relation 537986 --->
	    a role_name "loaderTypes" init_value "
            Collections.newSetFromMap(
                new WeakHashMap<Class<? extends ClassLoader>, Boolean>())" class_relation const_relation private
	      comment " the set of parallel capable loader types
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<? extends ClassLoader>> ${name}${value};
"
	      classrelation_ref 537986 // loaderTypes (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	extra_member 134530 "initialization"
	  
	  cpp "" ""
	  java "  static {
            synchronized (loaderTypes) { loaderTypes.add(ClassLoader.class); }
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 1720578 "register"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends ClassLoader> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Registers the given class loader type as parallel capabale.
Returns {@code true} is successfully registered; {@code false} if
loader's super class is not registered.
"
	end

	operation 1720706 "isRegistered"
	  class_operation package explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends ClassLoader> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns {@code true} if the given class loader type is
registered as parallel capable.
"
	end
      end

      classrelation 538114 // parallelLockMap (<unidirectional association>)
	relation 538114 --->
	  a role_name "parallelLockMap" const_relation private
	    comment " Maps class name to the corresponding lock object when the current
 class loader is parallel capable.
 Note: VM also uses this field to decide if the current class loader
 is parallel capable and the appropriate lock object for class loading.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 538114 // parallelLockMap (<unidirectional association>)
	  b parent class_ref 319362 // ConcurrentHashMap
      end

      classrelation 538242 // package2certs (<unidirectional association>)
	relation 538242 --->
	  a role_name "package2certs" const_relation private
	    comment " Hashtable that maps packages to certs
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Certificate[]> ${name}${value};
"
	    classrelation_ref 538242 // package2certs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 538370 // nocerts (<unidirectional association>)
	relation 538370 --->
	  a role_name "nocerts" multiplicity "[]" init_value " new Certificate[0]" class_relation const_relation private
	    comment " Shared among all packages with unsigned classes
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 538370 // nocerts (<unidirectional association>)
	  b parent class_ref 319490 // Certificate
      end

      classrelation 538498 // classes (<unidirectional association>)
	relation 538498 --->
	  a role_name "classes" init_value " new Vector<>()" const_relation private
	    comment " The classes loaded by this class loader. The only purpose of this table
 is to keep the classes from being GC'ed until the loader is GC'ed.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<?>> ${name}${value};
"
	    classrelation_ref 538498 // classes (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 538626 // defaultDomain (<unidirectional association>)
	relation 538626 --->
	  a role_name "defaultDomain" init_value "
        new ProtectionDomain(new CodeSource(null, (Certificate[]) null),
                             null, this, null)" const_relation private
	    comment " The \"default\" domain. Set as the default ProtectionDomain on newly
 created classes.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538626 // defaultDomain (<unidirectional association>)
	  b parent class_ref 319618 // ProtectionDomain
      end

      classrelation 538754 // domains (<unidirectional association>)
	relation 538754 --->
	  a role_name "domains" const_relation private
	    comment " The initiating protection domains for all classes loaded by this loader
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ProtectionDomain> ${name}${value};
"
	    classrelation_ref 538754 // domains (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      operation 1720834 "addClass"
	package explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked by the VM to record every loaded class with this loader."
      end

      classrelation 538882 // packages (<unidirectional association>)
	relation 538882 --->
	  a role_name "packages" init_value " new HashMap<>()" const_relation private
	    comment " The packages defined in this class loader.  Each package name is mapped
 to its corresponding Package object.
 @GuardedBy(\"itself\")
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Package> ${name}${value};
"
	    classrelation_ref 538882 // packages (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      operation 1720962 "checkCreateClassLoader"
	class_operation private return_type class_ref 146946 // Void
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1721090 "ClassLoader"
	private explicit_return_type ""
	nparams 2
	  param inout name "unused" type class_ref 146946 // Void
	  param inout name "parent" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1721218 "ClassLoader"
	protected explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new class loader using the specified parent class loader for
delegation.

<p> If there is a security manager, its {@link
SecurityManager#checkCreateClassLoader()
<tt>checkCreateClassLoader</tt>} method is invoked.  This may result in
a security exception.  </p>

@param  parent
        The parent class loader

@throws  SecurityException
         If a security manager exists and its
         <tt>checkCreateClassLoader</tt> method doesn't allow creation
         of a new class loader.

@since  1.2
"
      end

      operation 1721346 "ClassLoader"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new class loader using the <tt>ClassLoader</tt> returned by
the method {@link #getSystemClassLoader()
<tt>getSystemClassLoader()</tt>} as the parent class loader.

<p> If there is a security manager, its {@link
SecurityManager#checkCreateClassLoader()
<tt>checkCreateClassLoader</tt>} method is invoked.  This may result in
a security exception.  </p>

@throws  SecurityException
         If a security manager exists and its
         <tt>checkCreateClassLoader</tt> method doesn't allow creation
         of a new class loader.
"
      end

      operation 1721474 "loadClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Class --

Loads the class with the specified <a href=\"#name\">binary name</a>.
This method searches for classes in the same manner as the {@link
#loadClass(String, boolean)} method.  It is invoked by the Java virtual
machine to resolve class references.  Invoking this method is equivalent
to invoking {@link #loadClass(String, boolean) <tt>loadClass(name,
false)</tt>}.

@param  name
        The <a href=\"#name\">binary name</a> of the class

@return  The resulting <tt>Class</tt> object

@throws  ClassNotFoundException
         If the class was not found
"
      end

      operation 1721602 "loadClass"
	protected return_type class_ref 130818 // Class
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "resolve" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the class with the specified <a href=\"#name\">binary name</a>.  The
default implementation of this method searches for classes in the
following order:

<ol>

  <li><p> Invoke {@link #findLoadedClass(String)} to check if the class
  has already been loaded.  </p></li>

  <li><p> Invoke the {@link #loadClass(String) <tt>loadClass</tt>} method
  on the parent class loader.  If the parent is <tt>null</tt> the class
  loader built-in to the virtual machine is used, instead.  </p></li>

  <li><p> Invoke the {@link #findClass(String)} method to find the
  class.  </p></li>

</ol>

<p> If the class was found using the above steps, and the
<tt>resolve</tt> flag is true, this method will then invoke the {@link
#resolveClass(Class)} method on the resulting <tt>Class</tt> object.

<p> Subclasses of <tt>ClassLoader</tt> are encouraged to override {@link
#findClass(String)}, rather than this method.  </p>

<p> Unless overridden, this method synchronizes on the result of
{@link #getClassLoadingLock <tt>getClassLoadingLock</tt>} method
during the entire class loading process.

@param  name
        The <a href=\"#name\">binary name</a> of the class

@param  resolve
        If <tt>true</tt> then resolve the class

@return  The resulting <tt>Class</tt> object

@throws  ClassNotFoundException
         If the class could not be found
"
      end

      operation 1721730 "getClassLoadingLock"
	protected return_type class_ref 129538 // Object
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lock object for class loading operations.
For backward compatibility, the default implementation of this method
behaves as follows. If this ClassLoader object is registered as
parallel capable, the method returns a dedicated object associated
with the specified class name. Otherwise, the method returns this
ClassLoader object.

@param  className
        The name of the to-be-loaded class

@return the lock for class loading operations

@throws NullPointerException
        If registered as parallel capable and <tt>className</tt> is null

@see #loadClass(String, boolean)

@since  1.7
"
      end

      operation 1721858 "loadClassInternal"
	private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is invoked by the virtual machine to load a class."
      end

      operation 1721986 "checkPackageAccess"
	private explicit_return_type "void"
	nparams 2
	  param inout name "cls" type class_ref 130818 // Class
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked by the VM after loading class with this loader."
      end

      operation 1722114 "findClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the class with the specified <a href=\"#name\">binary name</a>.
This method should be overridden by class loader implementations that
follow the delegation model for loading classes, and will be invoked by
the {@link #loadClass <tt>loadClass</tt>} method after checking the
parent class loader for the requested class.  The default implementation
throws a <tt>ClassNotFoundException</tt>.

@param  name
        The <a href=\"#name\">binary name</a> of the class

@return  The resulting <tt>Class</tt> object

@throws  ClassNotFoundException
         If the class could not be found

@since  1.2
"
      end

      operation 1722242 "defineClass"
	protected return_type class_ref 130818 // Class
	nparams 3
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 319746 // ClassFormatError
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Converts an array of bytes into an instance of class <tt>Class</tt>.
Before the <tt>Class</tt> can be used it must be resolved.  This method
is deprecated in favor of the version that takes a <a
href=\"#name\">binary name</a> as its first argument, and is more secure.

@param  b
        The bytes that make up the class data.  The bytes in positions
        <tt>off</tt> through <tt>off+len-1</tt> should have the format
        of a valid class file as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@param  off
        The start offset in <tt>b</tt> of the class data

@param  len
        The length of the class data

@return  The <tt>Class</tt> object that was created from the specified
         class data

@throws  ClassFormatError
         If the data did not contain a valid class

@throws  IndexOutOfBoundsException
         If either <tt>off</tt> or <tt>len</tt> is negative, or if
         <tt>off+len</tt> is greater than <tt>b.length</tt>.

@throws  SecurityException
         If an attempt is made to add this class to a package that
         contains classes that were signed by a different set of
         certificates than this class, or if an attempt is made
         to define a class in a package with a fully-qualified name
         that starts with \"{@code java.}\".

@see  #loadClass(String, boolean)
@see  #resolveClass(Class)

@deprecated  Replaced by {@link #defineClass(String, byte[], int, int)
defineClass(String, byte[], int, int)}
"
      end

      operation 1722370 "defineClass"
	protected return_type class_ref 130818 // Class
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 319746 // ClassFormatError
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an array of bytes into an instance of class <tt>Class</tt>.
Before the <tt>Class</tt> can be used it must be resolved.

<p> This method assigns a default {@link java.security.ProtectionDomain
<tt>ProtectionDomain</tt>} to the newly defined class.  The
<tt>ProtectionDomain</tt> is effectively granted the same set of
permissions returned when {@link
java.security.Policy#getPermissions(java.security.CodeSource)
<tt>Policy.getPolicy().getPermissions(new CodeSource(null, null))</tt>}
is invoked.  The default domain is created on the first invocation of
{@link #defineClass(String, byte[], int, int) <tt>defineClass</tt>},
and re-used on subsequent invocations.

<p> To assign a specific <tt>ProtectionDomain</tt> to the class, use
the {@link #defineClass(String, byte[], int, int,
java.security.ProtectionDomain) <tt>defineClass</tt>} method that takes a
<tt>ProtectionDomain</tt> as one of its arguments.  </p>

@param  name
        The expected <a href=\"#name\">binary name</a> of the class, or
        <tt>null</tt> if not known

@param  b
        The bytes that make up the class data.  The bytes in positions
        <tt>off</tt> through <tt>off+len-1</tt> should have the format
        of a valid class file as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@param  off
        The start offset in <tt>b</tt> of the class data

@param  len
        The length of the class data

@return  The <tt>Class</tt> object that was created from the specified
         class data.

@throws  ClassFormatError
         If the data did not contain a valid class

@throws  IndexOutOfBoundsException
         If either <tt>off</tt> or <tt>len</tt> is negative, or if
         <tt>off+len</tt> is greater than <tt>b.length</tt>.

@throws  SecurityException
         If an attempt is made to add this class to a package that
         contains classes that were signed by a different set of
         certificates than this class (which is unsigned), or if
         <tt>name</tt> begins with \"<tt>java.</tt>\".

@see  #loadClass(String, boolean)
@see  #resolveClass(Class)
@see  java.security.CodeSource
@see  java.security.SecureClassLoader

@since  1.1
"
      end

      operation 1722498 "preDefineClass"
	private return_type class_ref 319618 // ProtectionDomain
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Determine protection domain, and check that:
- not define java.* class,
- signer of this class matches signers for the rest of the classes in
package.
"
      end

      operation 1722626 "defineClassSourceLocation"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1722754 "postDefineClass"
	private explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1722882 "defineClass"
	protected return_type class_ref 130818 // Class
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "protectionDomain" type class_ref 319618 // ProtectionDomain
	nexceptions 1
	  exception class_ref 319746 // ClassFormatError
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an array of bytes into an instance of class <tt>Class</tt>,
with an optional <tt>ProtectionDomain</tt>.  If the domain is
<tt>null</tt>, then a default domain will be assigned to the class as
specified in the documentation for {@link #defineClass(String, byte[],
int, int)}.  Before the class can be used it must be resolved.

<p> The first class defined in a package determines the exact set of
certificates that all subsequent classes defined in that package must
contain.  The set of certificates for a class is obtained from the
{@link java.security.CodeSource <tt>CodeSource</tt>} within the
<tt>ProtectionDomain</tt> of the class.  Any classes added to that
package must contain the same set of certificates or a
<tt>SecurityException</tt> will be thrown.  Note that if
<tt>name</tt> is <tt>null</tt>, this check is not performed.
You should always pass in the <a href=\"#name\">binary name</a> of the
class you are defining as well as the bytes.  This ensures that the
class you are defining is indeed the class you think it is.

<p> The specified <tt>name</tt> cannot begin with \"<tt>java.</tt>\", since
all classes in the \"<tt>java.*</tt> packages can only be defined by the
bootstrap class loader.  If <tt>name</tt> is not <tt>null</tt>, it
must be equal to the <a href=\"#name\">binary name</a> of the class
specified by the byte array \"<tt>b</tt>\", otherwise a {@link
NoClassDefFoundError <tt>NoClassDefFoundError</tt>} will be thrown. </p>

@param  name
        The expected <a href=\"#name\">binary name</a> of the class, or
        <tt>null</tt> if not known

@param  b
        The bytes that make up the class data. The bytes in positions
        <tt>off</tt> through <tt>off+len-1</tt> should have the format
        of a valid class file as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@param  off
        The start offset in <tt>b</tt> of the class data

@param  len
        The length of the class data

@param  protectionDomain
        The ProtectionDomain of the class

@return  The <tt>Class</tt> object created from the data,
         and optional <tt>ProtectionDomain</tt>.

@throws  ClassFormatError
         If the data did not contain a valid class

@throws  NoClassDefFoundError
         If <tt>name</tt> is not equal to the <a href=\"#name\">binary
         name</a> of the class specified by <tt>b</tt>

@throws  IndexOutOfBoundsException
         If either <tt>off</tt> or <tt>len</tt> is negative, or if
         <tt>off+len</tt> is greater than <tt>b.length</tt>.

@throws  SecurityException
         If an attempt is made to add this class to a package that
         contains classes that were signed by a different set of
         certificates than this class, or if <tt>name</tt> begins with
         \"<tt>java.</tt>\".
"
      end

      operation 1723010 "defineClass"
	protected return_type class_ref 130818 // Class
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" type class_ref 149890 // ByteBuffer
	  param inout name "protectionDomain" type class_ref 319618 // ProtectionDomain
	nexceptions 1
	  exception class_ref 319746 // ClassFormatError
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a {@link java.nio.ByteBuffer <tt>ByteBuffer</tt>}
into an instance of class <tt>Class</tt>,
with an optional <tt>ProtectionDomain</tt>.  If the domain is
<tt>null</tt>, then a default domain will be assigned to the class as
specified in the documentation for {@link #defineClass(String, byte[],
int, int)}.  Before the class can be used it must be resolved.

<p>The rules about the first class defined in a package determining the
set of certificates for the package, and the restrictions on class names
are identical to those specified in the documentation for {@link
#defineClass(String, byte[], int, int, ProtectionDomain)}.

<p> An invocation of this method of the form
<i>cl</i><tt>.defineClass(</tt><i>name</i><tt>,</tt>
<i>bBuffer</i><tt>,</tt> <i>pd</i><tt>)</tt> yields exactly the same
result as the statements

<p> <tt>
...<br>
byte[] temp = new byte[bBuffer.{@link
java.nio.ByteBuffer#remaining remaining}()];<br>
    bBuffer.{@link java.nio.ByteBuffer#get(byte[])
get}(temp);<br>
    return {@link #defineClass(String, byte[], int, int, ProtectionDomain)
cl.defineClass}(name, temp, 0,
temp.length, pd);<br>
</tt></p>

@param  name
        The expected <a href=\"#name\">binary name</a>. of the class, or
        <tt>null</tt> if not known

@param  b
        The bytes that make up the class data. The bytes from positions
        <tt>b.position()</tt> through <tt>b.position() + b.limit() -1
        </tt> should have the format of a valid class file as defined by
        <cite>The Java&trade; Virtual Machine Specification</cite>.

@param  protectionDomain
        The ProtectionDomain of the class, or <tt>null</tt>.

@return  The <tt>Class</tt> object created from the data,
         and optional <tt>ProtectionDomain</tt>.

@throws  ClassFormatError
         If the data did not contain a valid class.

@throws  NoClassDefFoundError
         If <tt>name</tt> is not equal to the <a href=\"#name\">binary
         name</a> of the class specified by <tt>b</tt>

@throws  SecurityException
         If an attempt is made to add this class to a package that
         contains classes that were signed by a different set of
         certificates than this class, or if <tt>name</tt> begins with
         \"<tt>java.</tt>\".

@see      #defineClass(String, byte[], int, int, ProtectionDomain)

@since  1.5
"
      end

      operation 1723138 "defineClass0"
	private return_type class_ref 130818 // Class
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	
	
	
      end

      operation 1723266 "defineClass1"
	private return_type class_ref 130818 // Class
	nparams 6
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	  param inout name "source" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
s"
	
	
	
      end

      operation 1723394 "defineClass2"
	private return_type class_ref 130818 // Class
	nparams 6
	  param inout name "name" type class_ref 128130 // String
	  param inout name "b" type class_ref 149890 // ByteBuffer
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	  param inout name "pd" type class_ref 319618 // ProtectionDomain
	  param inout name "source" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
s"
	
	
	
      end

      operation 1723522 "checkName"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " true if the name is null or has the potential to be a valid binary name"
      end

      operation 1723650 "checkCerts"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "cs" type class_ref 319874 // CodeSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1723778 "compareCerts"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "pcerts" type class_ref 319490 // Certificate
	multiplicity "[]"
	  param inout name "certs" type class_ref 319490 // Certificate
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "check to make sure the certs for the new class (certs) are the same as
the certs for the first class inserted in the package (pcerts)
"
      end

      operation 1723906 "resolveClass"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Links the specified class.  This (misleadingly named) method may be
used by a class loader to link a class.  If the class <tt>c</tt> has
already been linked, then this method simply returns. Otherwise, the
class is linked as described in the \"Execution\" chapter of
<cite>The Java&trade; Language Specification</cite>.

@param  c
        The class to link

@throws  NullPointerException
         If <tt>c</tt> is <tt>null</tt>.

@see  #defineClass(String, byte[], int, int)
"
      end

      operation 1724034 "resolveClass0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
s"
	
	
	
      end

      operation 1724162 "findSystemClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a class with the specified <a href=\"#name\">binary name</a>,
loading it if necessary.

<p> This method loads the class through the system class loader (see
{@link #getSystemClassLoader()}).  The <tt>Class</tt> object returned
might have more than one <tt>ClassLoader</tt> associated with it.
Subclasses of <tt>ClassLoader</tt> need not usually invoke this method,
because most class loaders need to override just {@link
#findClass(String)}.  </p>

@param  name
        The <a href=\"#name\">binary name</a> of the class

@return  The <tt>Class</tt> object for the specified <tt>name</tt>

@throws  ClassNotFoundException
         If the class could not be found

@see  #ClassLoader(ClassLoader)
@see  #getParent()
"
      end

      operation 1724290 "findBootstrapClassOrNull"
	private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a class loaded by the bootstrap class loader;
or return null if not found.
"
      end

      operation 1724418 "findBootstrapClass"
	private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment " return null if not found"
      end

      operation 1724546 "findLoadedClass"
	protected return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class with the given <a href=\"#name\">binary name</a> if this
loader has been recorded by the Java virtual machine as an initiating
loader of a class with that <a href=\"#name\">binary name</a>.  Otherwise
<tt>null</tt> is returned.

@param  name
        The <a href=\"#name\">binary name</a> of the class

@return  The <tt>Class</tt> object, or <tt>null</tt> if the class has
         not been loaded

@since  1.1
"
      end

      operation 1724674 "findLoadedClass0"
	private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 1724802 "setSigners"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 130818 // Class
	  param inout name "signers" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the signers of a class.  This should be invoked after defining a
class.

@param  c
        The <tt>Class</tt> object

@param  signers
        The signers for the class

@since  1.1
"
      end

      operation 1724930 "getResource"
	public return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Resource --

Finds the resource with the given name.  A resource is some data
(images, audio, text, etc) that can be accessed by class code in a way
that is independent of the location of the code.

<p> The name of a resource is a '<tt>/</tt>'-separated path name that
identifies the resource.

<p> This method will first search the parent class loader for the
resource; if the parent is <tt>null</tt> the path of the class loader
built-in to the virtual machine is searched.  That failing, this method
will invoke {@link #findResource(String)} to find the resource.  </p>

@apiNote When overriding this method it is recommended that an
implementation ensures that any delegation is consistent with the {@link
#getResources(java.lang.String) getResources(String)} method.

@param  name
        The resource name

@return  A <tt>URL</tt> object for reading the resource, or
         <tt>null</tt> if the resource could not be found or the invoker
         doesn't have adequate  privileges to get the resource.

@since  1.1
"
      end

      operation 1725058 "getResources"
	public return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all the resources with the given name. A resource is some data
(images, audio, text, etc) that can be accessed by class code in a way
that is independent of the location of the code.

<p>The name of a resource is a <tt>/</tt>-separated path name that
identifies the resource.

<p> The search order is described in the documentation for {@link
#getResource(String)}.  </p>

@apiNote When overriding this method it is recommended that an
implementation ensures that any delegation is consistent with the {@link
#getResource(java.lang.String) getResource(String)} method. This should
ensure that the first element returned by the Enumeration's
{@code nextElement} method is the same resource that the
{@code getResource(String)} method would return.

@param  name
        The resource name

@return  An enumeration of {@link java.net.URL <tt>URL</tt>} objects for
         the resource.  If no resources could  be found, the enumeration
         will be empty.  Resources that the class loader doesn't have
         access to will not be in the enumeration.

@throws  IOException
         If I/O errors occur

@see  #findResources(String)

@since  1.2
"
      end

      operation 1725186 "findResource"
	protected return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the resource with the given name. Class loader implementations
should override this method to specify where to find resources.

@param  name
        The resource name

@return  A <tt>URL</tt> object for reading the resource, or
         <tt>null</tt> if the resource could not be found

@since  1.2
"
      end

      operation 1725314 "findResources"
	protected return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of {@link java.net.URL <tt>URL</tt>} objects
representing all the resources with the given name. Class loader
implementations should override this method to specify where to load
resources from.

@param  name
        The resource name

@return  An enumeration of {@link java.net.URL <tt>URL</tt>} objects for
         the resources

@throws  IOException
         If I/O errors occur

@since  1.2
"
      end

      operation 1725442 "registerAsParallelCapable"
	class_operation protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Registers the caller as parallel capable.
The registration succeeds if and only if all of the following
conditions are met:
<ol>
<li> no instance of the caller has been created</li>
<li> all of the super classes (except class Object) of the caller are
registered as parallel capable</li>
</ol>
<p>Note that once a class loader is registered as parallel capable, there
is no way to change it back.</p>

@return  true if the caller is successfully registered as
         parallel capable and false if otherwise.

@since   1.7
"
      end

      operation 1725570 "getSystemResource"
	class_operation public return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find a resource of the specified name from the search path used to load
classes.  This method locates the resource through the system class
loader (see {@link #getSystemClassLoader()}).

@param  name
        The resource name

@return  A {@link java.net.URL <tt>URL</tt>} object for reading the
         resource, or <tt>null</tt> if the resource could not be found

@since  1.1
"
      end

      operation 1725698 "getSystemResources"
	class_operation public return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds all resources of the specified name from the search path used to
load classes.  The resources thus found are returned as an
{@link java.util.Enumeration <tt>Enumeration</tt>} of {@link
java.net.URL <tt>URL</tt>} objects.

<p> The search order is described in the documentation for {@link
#getSystemResource(String)}.  </p>

@param  name
        The resource name

@return  An enumeration of resource {@link java.net.URL <tt>URL</tt>}
         objects

@throws  IOException
         If I/O errors occur

@since  1.2
"
      end

      operation 1725826 "getBootstrapResource"
	class_operation private return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find resources from the VM's built-in classloader.
"
      end

      operation 1725954 "getBootstrapResources"
	class_operation private return_type class_ref 185986 // Enumeration
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find resources from the VM's built-in classloader.
"
      end

      operation 1726082 "getBootstrapClassPath"
	class_operation package explicit_return_type "URLClassPath"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the URLClassPath that is used for finding system resources."
      end

      operation 1726210 "getResourceAsStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream for reading the specified resource.

<p> The search order is described in the documentation for {@link
#getResource(String)}.  </p>

@param  name
        The resource name

@return  An input stream for reading the resource, or <tt>null</tt>
         if the resource could not be found

@since  1.1
"
      end

      operation 1726338 "getSystemResourceAsStream"
	class_operation public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open for reading, a resource of the specified name from the search path
used to load classes.  This method locates the resource through the
system class loader (see {@link #getSystemClassLoader()}).

@param  name
        The resource name

@return  An input stream for reading the resource, or <tt>null</tt>
         if the resource could not be found

@since  1.1
"
      end

      operation 1726466 "getParent"
	public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment " -- Hierarchy --

Returns the parent class loader for delegation. Some implementations may
use <tt>null</tt> to represent the bootstrap class loader. This method
will return <tt>null</tt> in such implementations if this class loader's
parent is the bootstrap class loader.

<p> If a security manager is present, and the invoker's class loader is
not <tt>null</tt> and is not an ancestor of this class loader, then this
method invokes the security manager's {@link
SecurityManager#checkPermission(java.security.Permission)
<tt>checkPermission</tt>} method with a {@link
RuntimePermission#RuntimePermission(String)
<tt>RuntimePermission(\"getClassLoader\")</tt>} permission to verify
access to the parent class loader is permitted.  If not, a
<tt>SecurityException</tt> will be thrown.  </p>

@return  The parent <tt>ClassLoader</tt>

@throws  SecurityException
         If a security manager exists and its <tt>checkPermission</tt>
         method doesn't allow access to this class loader's parent class
         loader.

@since  1.2
"
      end

      operation 1726594 "getSystemClassLoader"
	class_operation public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the system class loader for delegation.  This is the default
delegation parent for new <tt>ClassLoader</tt> instances, and is
typically the class loader used to start the application.

<p> This method is first invoked early in the runtime's startup
sequence, at which point it creates the system class loader and sets it
as the context class loader of the invoking <tt>Thread</tt>.

<p> The default system class loader is an implementation-dependent
instance of this class.

<p> If the system property \"<tt>java.system.class.loader</tt>\" is defined
when this method is first invoked then the value of that property is
taken to be the name of a class that will be returned as the system
class loader.  The class is loaded using the default system class loader
and must define a public constructor that takes a single parameter of
type <tt>ClassLoader</tt> which is used as the delegation parent.  An
instance is then created using this constructor with the default system
class loader as the parameter.  The resulting class loader is defined
to be the system class loader.

<p> If a security manager is present, and the invoker's class loader is
not <tt>null</tt> and the invoker's class loader is not the same as or
an ancestor of the system class loader, then this method invokes the
security manager's {@link
SecurityManager#checkPermission(java.security.Permission)
<tt>checkPermission</tt>} method with a {@link
RuntimePermission#RuntimePermission(String)
<tt>RuntimePermission(\"getClassLoader\")</tt>} permission to verify
access to the system class loader.  If not, a
<tt>SecurityException</tt> will be thrown.  </p>

@return  The system <tt>ClassLoader</tt> for delegation, or
         <tt>null</tt> if none

@throws  SecurityException
         If a security manager exists and its <tt>checkPermission</tt>
         method doesn't allow access to the system class loader.

@throws  IllegalStateException
         If invoked recursively during the construction of the class
         loader specified by the \"<tt>java.system.class.loader</tt>\"
         property.

@throws  Error
         If the system property \"<tt>java.system.class.loader</tt>\"
         is defined but the named class could not be loaded, the
         provider class does not define the required constructor, or an
         exception is thrown by that constructor when it is invoked. The
         underlying cause of the error can be retrieved via the
         {@link Throwable#getCause()} method.

@revised  1.4
"
      end

      operation 1726722 "initSystemClassLoader"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1726850 "isAncestor"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "cl" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns true if the specified class loader can be found in this class
 loader's delegation chain."
      end

      operation 1726978 "needsClassLoaderPermissionCheck"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "from" type class_ref 129026 // ClassLoader
	  param inout name "to" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tests if class loader access requires \"getClassLoader\" permission
 check.  A class loader 'from' can access class loader 'to' if
 class loader 'from' is same as class loader 'to' or an ancestor
 of 'to'.  The class loader in a system domain can access
 any class loader."
      end

      operation 1727106 "getClassLoader"
	class_operation package return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "caller" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the class's class loader, or null if none."
      end

      operation 1727234 "checkClassLoaderPermission"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "cl" type class_ref 129026 // ClassLoader
	  param inout name "caller" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks RuntimePermission(\"getClassLoader\") permission
if caller's class loader is not null and caller's class loader
is not the same as or an ancestor of the given cl argument.
"
      end

      classrelation 539010 // scl (<unidirectional association>)
	relation 539010 --->
	  a role_name "scl" class_relation private
	    comment " The class loader for the system
 @GuardedBy(\"ClassLoader.class\")
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539010 // scl (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      attribute 369794 "sclSet"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Set to true once the system class loader has been set
 @GuardedBy(\"ClassLoader.class\")
"
      end

      operation 1727362 "definePackage"
	protected return_type class_ref 320002 // Package
	nparams 8
	  param inout name "name" type class_ref 128130 // String
	  param inout name "specTitle" type class_ref 128130 // String
	  param inout name "specVersion" type class_ref 128130 // String
	  param inout name "specVendor" type class_ref 128130 // String
	  param inout name "implTitle" type class_ref 128130 // String
	  param inout name "implVersion" type class_ref 128130 // String
	  param inout name "implVendor" type class_ref 128130 // String
	  param inout name "sealBase" type class_ref 243458 // URL
	nexceptions 1
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Package --

Defines a package by name in this <tt>ClassLoader</tt>.  This allows
class loaders to define the packages for their classes. Packages must
be created before the class is defined, and package names must be
unique within a class loader and cannot be redefined or changed once
created.

@param  name
        The package name

@param  specTitle
        The specification title

@param  specVersion
        The specification version

@param  specVendor
        The specification vendor

@param  implTitle
        The implementation title

@param  implVersion
        The implementation version

@param  implVendor
        The implementation vendor

@param  sealBase
        If not <tt>null</tt>, then this package is sealed with
        respect to the given code source {@link java.net.URL
        <tt>URL</tt>}  object.  Otherwise, the package is not sealed.

@return  The newly defined <tt>Package</tt> object

@throws  IllegalArgumentException
         If package name duplicates an existing package either in this
         class loader or one of its ancestors

@since  1.2
"
      end

      operation 1727490 "getPackage"
	protected return_type class_ref 320002 // Package
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <tt>Package</tt> that has been defined by this class loader
or any of its ancestors.

@param  name
        The package name

@return  The <tt>Package</tt> corresponding to the given name, or
         <tt>null</tt> if not found

@since  1.2
"
      end

      operation 1727618 "getPackages"
	protected return_type class_ref 320002 // Package
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all of the <tt>Packages</tt> defined by this class loader and
its ancestors.

@return  The array of <tt>Package</tt> objects defined by this
         <tt>ClassLoader</tt>

@since  1.2
"
      end

      operation 1727746 "findLibrary"
	protected return_type class_ref 128130 // String
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " -- Native library access --

Returns the absolute path name of a native library.  The VM invokes this
method to locate the native libraries that belong to classes loaded with
this class loader. If this method returns <tt>null</tt>, the VM
searches the library along the path specified as the
\"<tt>java.library.path</tt>\" property.

@param  libname
        The library name

@return  The absolute path of the native library

@see  System#loadLibrary(String)
@see  System#mapLibraryName(String)

@since  1.2
"
      end

      class 320130 "NativeLibrary"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 369922 "handle"
	  package explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " opaque handle to native library, used in native code.
"
	end

	attribute 370050 "jniVersion"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " the version of JNI environment the native library requires.
"
	end

	classrelation 539138 // fromClass (<unidirectional association>)
	  relation 539138 --->
	    a role_name "fromClass" const_relation private
	      comment " the class from which the library is loaded, also indicates
 the loader this native library belongs.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 539138 // fromClass (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 539266 // name (<unidirectional association>)
	  relation 539266 --->
	    a role_name "name" package
	      comment " the canonicalized name of the native library.
 or static library name
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 539266 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 370178 "isBuiltin"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicates if the native library is linked into the VM
"
	end

	attribute 370306 "loaded"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicates if the native library is loaded
"
	end

	operation 1727874 "load"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "isBuiltin" explicit_type "boolean"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	  
	  
	  
	end

	operation 1728002 "find"
	  package explicit_return_type "long"
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	  
	  
	  
	end

	operation 1728130 "unload"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "name" type class_ref 128130 // String
	    param inout name "isBuiltin" explicit_type "boolean"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	  
	  
	  
	end

	operation 1728258 "NativeLibrary"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "fromClass" type class_ref 130818 // Class
	    param inout name "name" type class_ref 128130 // String
	    param inout name "isBuiltin" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1728386 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1728514 "getFromClass"
	  class_operation package return_type class_ref 130818 // Class
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Invoked in the VM to determine the context class in
 JNI_Load/JNI_Unload"
	end
      end

      classrelation 539394 // loadedLibraryNames (<unidirectional association>)
	relation 539394 --->
	  a role_name "loadedLibraryNames" init_value " new Vector<>()" class_relation private
	    comment " All native library names we've loaded.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 539394 // loadedLibraryNames (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 539522 // systemNativeLibraries (<unidirectional association>)
	relation 539522 --->
	  a role_name "systemNativeLibraries" init_value " new Vector<>()" class_relation private
	    comment " Native libraries belonging to system classes.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NativeLibrary> ${name}${value};
"
	    classrelation_ref 539522 // systemNativeLibraries (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 539650 // nativeLibraries (<unidirectional association>)
	relation 539650 --->
	  a role_name "nativeLibraries" init_value " new Vector<>()" private
	    comment " Native libraries associated with the class loader.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NativeLibrary> ${name}${value};
"
	    classrelation_ref 539650 // nativeLibraries (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 539778 // nativeLibraryContext (<unidirectional association>)
	relation 539778 --->
	  a role_name "nativeLibraryContext" init_value " new Stack<>()" class_relation private
	    comment " native libraries being loaded/unloaded.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NativeLibrary> ${name}${value};
"
	    classrelation_ref 539778 // nativeLibraryContext (<unidirectional association>)
	  b parent class_ref 183810 // Stack
      end

      classrelation 539906 // usr_paths (<unidirectional association>)
	relation 539906 --->
	  a role_name "usr_paths" multiplicity "[]" class_relation private
	    comment " The paths searched for libraries
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 539906 // usr_paths (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 540034 // sys_paths (<unidirectional association>)
	relation 540034 --->
	  a role_name "sys_paths" multiplicity "[]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 540034 // sys_paths (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 1728642 "initializePath"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "propname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1728770 "loadLibrary"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "fromClass" type class_ref 130818 // Class
	  param inout name "name" type class_ref 128130 // String
	  param inout name "isAbsolute" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked in the java.lang.Runtime class to implement load and loadLibrary."
      end

      operation 1728898 "findBuiltinLib"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 1729026 "loadLibrary0"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "fromClass" type class_ref 130818 // Class
	  param in name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1729154 "findNative"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked in the VM class linking code."
      end

      classrelation 540162 // assertionLock (<unidirectional association>)
	relation 540162 --->
	  a role_name "assertionLock" const_relation package
	    comment " -- Assertion management --
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540162 // assertionLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 370434 "defaultAssertionStatus"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The default toggle for assertion checking.
 @GuardedBy(\"assertionLock\")
"
      end

      classrelation 540290 // packageAssertionStatus (<unidirectional association>)
	relation 540290 --->
	  a role_name "packageAssertionStatus" init_value " null" private
	    comment " Maps String packageName to Boolean package default assertion status Note
 that the default package is placed under a null map key.  If this field
 is null then we are delegating assertion status queries to the VM, i.e.,
 none of this ClassLoader's assertion status modification methods have
 been invoked.
 @GuardedBy(\"assertionLock\")
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Boolean> ${name}${value};
"
	    classrelation_ref 540290 // packageAssertionStatus (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 540418 // classAssertionStatus (<unidirectional association>)
	relation 540418 --->
	  a role_name "classAssertionStatus" init_value " null" package
	    comment " Maps String fullyQualifiedClassName to Boolean assertionStatus If this
 field is null then we are delegating assertion status queries to the VM,
 i.e., none of this ClassLoader's assertion status modification methods
 have been invoked.
 @GuardedBy(\"assertionLock\")
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Boolean> ${name}${value};
"
	    classrelation_ref 540418 // classAssertionStatus (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 1729282 "setDefaultAssertionStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default assertion status for this class loader.  This setting
determines whether classes loaded by this class loader and initialized
in the future will have assertions enabled or disabled by default.
This setting may be overridden on a per-package or per-class basis by
invoking {@link #setPackageAssertionStatus(String, boolean)} or {@link
#setClassAssertionStatus(String, boolean)}.

@param  enabled
        <tt>true</tt> if classes loaded by this class loader will
        henceforth have assertions enabled by default, <tt>false</tt>
        if they will have assertions disabled by default.

@since  1.4
"
      end

      operation 1729410 "setPackageAssertionStatus"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" type class_ref 128130 // String
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the package default assertion status for the named package.  The
package default assertion status determines the assertion status for
classes initialized in the future that belong to the named package or
any of its \"subpackages\".

<p> A subpackage of a package named p is any package whose name begins
with \"<tt>p.</tt>\".  For example, <tt>javax.swing.text</tt> is a
subpackage of <tt>javax.swing</tt>, and both <tt>java.util</tt> and
<tt>java.lang.reflect</tt> are subpackages of <tt>java</tt>.

<p> In the event that multiple package defaults apply to a given class,
the package default pertaining to the most specific package takes
precedence over the others.  For example, if <tt>javax.lang</tt> and
<tt>javax.lang.reflect</tt> both have package defaults associated with
them, the latter package default applies to classes in
<tt>javax.lang.reflect</tt>.

<p> Package defaults take precedence over the class loader's default
assertion status, and may be overridden on a per-class basis by invoking
{@link #setClassAssertionStatus(String, boolean)}.  </p>

@param  packageName
        The name of the package whose package default assertion status
        is to be set. A <tt>null</tt> value indicates the unnamed
        package that is \"current\"
        (see section 7.4.2 of
        <cite>The Java&trade; Language Specification</cite>.)

@param  enabled
        <tt>true</tt> if classes loaded by this classloader and
        belonging to the named package or any of its subpackages will
        have assertions enabled by default, <tt>false</tt> if they will
        have assertions disabled by default.

@since  1.4
"
      end

      operation 1729538 "setClassAssertionStatus"
	public explicit_return_type "void"
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "enabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the desired assertion status for the named top-level class in this
class loader and any nested classes contained therein.  This setting
takes precedence over the class loader's default assertion status, and
over any applicable per-package default.  This method has no effect if
the named class has already been initialized.  (Once a class is
initialized, its assertion status cannot change.)

<p> If the named class is not a top-level class, this invocation will
have no effect on the actual assertion status of any class. </p>

@param  className
        The fully qualified class name of the top-level class whose
        assertion status is to be set.

@param  enabled
        <tt>true</tt> if the named class is to have assertions
        enabled when (and if) it is initialized, <tt>false</tt> if the
        class is to have assertions disabled.

@since  1.4
"
      end

      operation 1729666 "clearAssertionStatus"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default assertion status for this class loader to
<tt>false</tt> and discards any package defaults or class assertion
status settings associated with the class loader.  This method is
provided so that class loaders can be made to ignore any command line or
persistent assertion status settings and \"start with a clean slate.\"

@since  1.4
"
      end

      operation 1729794 "desiredAssertionStatus"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the assertion status that would be assigned to the specified
class if it were to be initialized at the time this method is invoked.
If the named class has had its assertion status set, the most recent
setting will be returned; otherwise, if any package default assertion
status pertains to this class, the most recent setting for the most
specific pertinent package default assertion status is returned;
otherwise, this class loader's default assertion status is returned.
</p>

@param  className
        The fully qualified class name of the class whose desired
        assertion status is being queried.

@return  The desired assertion status of the specified class.

@see  #setClassAssertionStatus(String, boolean)
@see  #setPackageAssertionStatus(String, boolean)
@see  #setDefaultAssertionStatus(boolean)

@since  1.4
"
      end

      operation 1729922 "initializeJavaAssertionMaps"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Set up the assertions with information provided by the VM.
 Note: Should only be called inside a synchronized block"
      end

      operation 1730050 "retrieveDirectives"
	class_operation private return_type class_ref 320258 // AssertionStatusDirectives
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " Retrieves the assertion directives from the VM."
      end
    end

    class 129282 "ThreadLocal"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides thread-local variables.  These variables differ from
their normal counterparts in that each thread that accesses one (via its
{@code get} or {@code set} method) has its own, independently initialized
copy of the variable.  {@code ThreadLocal} instances are typically private
static fields in classes that wish to associate state with a thread (e.g.,
a user ID or Transaction ID).

<p>For example, the class below generates unique identifiers local to each
thread.
A thread's id is assigned the first time it invokes {@code ThreadId.get()}
and remains unchanged on subsequent calls.
<pre>
import java.util.concurrent.atomic.AtomicInteger;

public class ThreadId {
    // Atomic integer containing the next thread ID to be assigned
    private static final AtomicInteger nextId = new AtomicInteger(0);

    // Thread local variable containing each thread's ID
    private static final ThreadLocal&lt;Integer&gt; threadId =
        new ThreadLocal&lt;Integer&gt;() {
            &#64;Override protected Integer initialValue() {
                return nextId.getAndIncrement();
        }
    };

    // Returns the current thread's unique ID, assigning it if necessary
    public static int get() {
        return threadId.get();
    }
}
</pre>
<p>Each thread holds an implicit reference to its copy of a thread-local
variable as long as the thread is alive and the {@code ThreadLocal}
instance is accessible; after a thread goes away, all of its copies of
thread-local instances are subject to garbage collection (unless other
references to these copies exist).

@author  Josh Bloch and Doug Lea
@since   1.2
"
      class 129410 "ThreadLocalMap"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 933890 "Entry"
	  visibility package 
	  nactuals 1
	  actual class class_ref 131330 // WeakReference
	    rank 0 explicit_value ""
	  cpp_decl ""
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3158402 // <realization>
	    relation 3158402 -_-|>
	      stereotype "bind"
	      a public
		java "${type}"
		classrelation_ref 3158402 // <realization>
	      b parent class_ref 131330 // WeakReference
	  end

	  classrelation 3158530 // value (<unidirectional association>)
	    relation 3158530 --->
	      a role_name "value" package
		comment " The value associated with this ThreadLocal. 
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 3158530 // value (<unidirectional association>)
	      b parent class_ref 129538 // Object
	  end

	  operation 7025666 "Entry"
	    cpp_inline package explicit_return_type ""
	    nparams 2
	      param inout name "k" type class_ref 129282 // ThreadLocal
	      param inout name "v" type class_ref 129538 // Object
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	attribute 1674754 "INITIAL_CAPACITY"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 16"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The initial capacity -- MUST be a power of two.

"
	end

	classrelation 3158658 // table (<unidirectional association>)
	  relation 3158658 --->
	    a role_name "table" multiplicity "[]" private
	      comment "
The table, resized as necessary.
table.length MUST always be a power of two.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3158658 // table (<unidirectional association>)
	    b parent class_ref 933890 // Entry
	end

	attribute 1674882 "size"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The number of entries in the table.

"
	end

	attribute 1675010 "threshold"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The next size value at which to resize.

 Default to 0"
	end

	operation 7025794 "setThreshold"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the resize threshold to maintain at worst a 2/3 load factor.
"
	end

	operation 7025922 "nextIndex"
	  class_operation cpp_inline private explicit_return_type "int"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Increment i modulo len.
"
	end

	operation 7026050 "prevIndex"
	  class_operation cpp_inline private explicit_return_type "int"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Decrement i modulo len.
"
	end

	operation 7026178 "ThreadLocalMap"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "firstKey" type class_ref 129282 // ThreadLocal
	    param inout name "firstValue" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new map initially containing (firstKey, firstValue).
ThreadLocalMaps are constructed lazily, so we only create
one when we have at least one entry to put in it.
"
	end

	operation 7026306 "ThreadLocalMap"
	  cpp_inline private explicit_return_type ""
	  nparams 1
	    param inout name "parentMap" type class_ref 129410 // ThreadLocalMap
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new map including all Inheritable ThreadLocals
from given parent map. Called only by createInheritedMap.

@param parentMap the map associated with parent thread.
"
	end

	operation 7026434 "getEntry"
	  cpp_inline private return_type class_ref 933890 // Entry
	  nparams 1
	    param inout name "key" type class_ref 129282 // ThreadLocal
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the entry associated with key.  This method
itself handles only the fast path: a direct hit of existing
key. It otherwise relays to getEntryAfterMiss.  This is
designed to maximize performance for direct hits, in part
by making this method readily inlinable.

@param  key the thread local object
@return the entry associated with key, or null if no such
"
	end

	operation 7026562 "getEntryAfterMiss"
	  cpp_inline private return_type class_ref 933890 // Entry
	  nparams 3
	    param inout name "key" type class_ref 129282 // ThreadLocal
	    param in name "i" explicit_type "int"
	    param inout name "e" type class_ref 933890 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of getEntry method for use when key is not found in
its direct hash slot.

@param  key the thread local object
@param  i the table index for key's hash code
@param  e the entry at table[i]
@return the entry associated with key, or null if no such
"
	end

	operation 7026690 "set"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 129282 // ThreadLocal
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the value associated with key.

@param key the thread local object
@param value the value to be set
"
	end

	operation 7026818 "remove"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "key" type class_ref 129282 // ThreadLocal
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Remove the entry for key.
"
	end

	operation 7026946 "replaceStaleEntry"
	  cpp_inline private explicit_return_type "void"
	  nparams 3
	    param inout name "key" type class_ref 129282 // ThreadLocal
	    param inout name "value" type class_ref 129538 // Object
	    param in name "staleSlot" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Replace a stale entry encountered during a set operation
with an entry for the specified key.  The value passed in
the value parameter is stored in the entry, whether or not
an entry already exists for the specified key.

As a side effect, this method expunges all stale entries in the
\"run\" containing the stale entry.  (A run is a sequence of entries
between two null slots.)

@param  key the key
@param  value the value to be associated with key
@param  staleSlot index of the first stale entry encountered while
        searching for key.
"
	end

	operation 7027074 "expungeStaleEntry"
	  cpp_inline private explicit_return_type "int"
	  nparams 1
	    param in name "staleSlot" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Expunge a stale entry by rehashing any possibly colliding entries
lying between staleSlot and the next null slot.  This also expunges
any other stale entries encountered before the trailing null.  See
Knuth, Section 6.4

@param staleSlot index of slot known to have null key
@return the index of the next null slot after staleSlot
(all between staleSlot and this slot will have been checked
for expunging).
"
	end

	operation 7027202 "cleanSomeSlots"
	  cpp_inline private explicit_return_type "boolean"
	  nparams 2
	    param in name "i" explicit_type "int"
	    param in name "n" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Heuristically scan some cells looking for stale entries.
This is invoked when either a new element is added, or
another stale one has been expunged. It performs a
logarithmic number of scans, as a balance between no
scanning (fast but retains garbage) and a number of scans
proportional to number of elements, that would find all
garbage but would cause some insertions to take O(n) time.

@param i a position known NOT to hold a stale entry. The
scan starts at the element after i.

@param n scan control: {@code log2(n)} cells are scanned,
unless a stale entry is found, in which case
{@code log2(table.length)-1} additional cells are scanned.
When called from insertions, this parameter is the number
of elements, but when from replaceStaleEntry, it is the
table length. (Note: all this could be changed to be either
more or less aggressive by weighting n instead of just
using straight log n. But this version is simple, fast, and
seems to work well.)

@return true if any stale entries have been removed.
"
	end

	operation 7027330 "rehash"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Re-pack and/or re-size the table. First scan the entire
table removing stale entries. If this doesn't sufficiently
shrink the size of the table, double the table size.
"
	end

	operation 7027458 "resize"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Double the capacity of the table.
"
	end

	operation 7027586 "expungeStaleEntries"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Expunge all stale entries in the table.
"
	end
      end

      attribute 1674498 "threadLocalHashCode"
	const_attribute private explicit_type "int"
	init_value " nextHashCode()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "ThreadLocals rely on per-thread linear-probe hash maps attached
to each thread (Thread.threadLocals and
inheritableThreadLocals).  The ThreadLocal objects act as keys,
searched via threadLocalHashCode.  This is a custom hash code
(useful only within ThreadLocalMaps) that eliminates collisions
in the common case where consecutively constructed ThreadLocals
are used by the same threads, while remaining well-behaved in
less common cases.

"
      end

      classrelation 3158018 // nextHashCode (<unidirectional association>)
	relation 3158018 --->
	  a role_name "nextHashCode" init_value "
        new AtomicInteger()" class_relation private
	    comment "
The next hash code to be given out. Updated atomically. Starts at
zero.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3158018 // nextHashCode (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      attribute 1674626 "HASH_INCREMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x61c88647"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The difference between successively generated hash codes - turns
implicit sequential thread-local IDs into near-optimally spread
multiplicative hash values for power-of-two-sized tables.

"
      end

      operation 7023874 "nextHashCode"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next hash code.
"
      end

      operation 7024002 "initialValue"
	cpp_inline protected explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current thread's \"initial value\" for this
thread-local variable.  This method will be invoked the first
time a thread accesses the variable with the {@link #get}
method, unless the thread previously invoked the {@link #set}
method, in which case the {@code initialValue} method will not
be invoked for the thread.  Normally, this method is invoked at
most once per thread, but it may be invoked again in case of
subsequent invocations of {@link #remove} followed by {@link #get}.

<p>This implementation simply returns {@code null}; if the
programmer desires thread-local variables to have an initial
value other than {@code null}, {@code ThreadLocal} must be
subclassed, and this method overridden.  Typically, an
anonymous inner class will be used.

@return the initial value for this thread-local
"
      end

      operation 7024130 "withInitial"
	class_operation cpp_inline public return_type class_ref 129282 // ThreadLocal
	nparams 1
	  param inout name "supplier" type class_ref 933634 // Supplier
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<S> ${type}<S> ${name}${(}${t0}<? extends S> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a thread local variable. The initial value of the variable is
determined by invoking the {@code get} method on the {@code Supplier}.

@param <S> the type of the thread local's value
@param supplier the supplier to be used to determine the initial value
@return a new thread local variable
@throws NullPointerException if the specified supplier is null
@since 1.8
"
      end

      operation 7024258 "ThreadLocal"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a thread local variable.
@see #withInitial(java.util.function.Supplier)
"
      end

      operation 7024386 "get"
	cpp_inline public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value in the current thread's copy of this
thread-local variable.  If the variable has no value for the
current thread, it is first initialized to the value returned
by an invocation of the {@link #initialValue} method.

@return the current thread's value of this thread-local
"
      end

      operation 7024514 "setInitialValue"
	cpp_inline private explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Variant of set() to establish initialValue. Used instead
of set() in case user has overridden the set() method.

@return the initial value
"
      end

      operation 7024642 "set"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current thread's copy of this thread-local variable
to the specified value.  Most subclasses will have no need to
override this method, relying solely on the {@link #initialValue}
method to set the values of thread-locals.

@param value the value to be stored in the current thread's copy of
       this thread-local.
"
      end

      operation 7024770 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the current thread's value for this thread-local
variable.  If this thread-local variable is subsequently
{@linkplain #get read} by the current thread, its value will be
reinitialized by invoking its {@link #initialValue} method,
unless its value is {@linkplain #set set} by the current thread
in the interim.  This may result in multiple invocations of the
{@code initialValue} method in the current thread.

@since 1.5
"
      end

      operation 7024898 "getMap"
	cpp_inline package return_type class_ref 129410 // ThreadLocalMap
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the map associated with a ThreadLocal. Overridden in
InheritableThreadLocal.

@param  t the current thread
@return the map
"
      end

      operation 7025026 "createMap"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 128642 // Thread
	  param inout name "firstValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the map associated with a ThreadLocal. Overridden in
InheritableThreadLocal.

@param t the current thread
@param firstValue value for the initial entry of the map
"
      end

      operation 7025154 "createInheritedMap"
	class_operation cpp_inline package return_type class_ref 129410 // ThreadLocalMap
	nparams 1
	  param inout name "parentMap" type class_ref 129410 // ThreadLocalMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method to create map of inherited thread locals.
Designed to be called only from Thread constructor.

@param  parentMap the map associated with parent thread
@return a map containing the parent's inheritable bindings
"
      end

      operation 7025282 "childValue"
	cpp_inline package explicit_return_type "T"
	nparams 1
	  param inout name "parentValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method childValue is visibly defined in subclass
InheritableThreadLocal, but is internally defined here for the
sake of providing createInheritedMap factory method without
needing to subclass the map class in InheritableThreadLocal.
This technique is preferable to the alternative of embedding
instanceof tests in methods.
"
      end

      class 933762 "SuppliedThreadLocal"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 129282 // ThreadLocal
	  rank 0 explicit_value ""
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3158146 // <realization>
	  relation 3158146 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3158146 // <realization>
	    b parent class_ref 129282 // ThreadLocal
	end

	classrelation 3158274 // supplier (<unidirectional association>)
	  relation 3158274 --->
	    a role_name "supplier" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends T> ${name}${value};
"
	      classrelation_ref 3158274 // supplier (<unidirectional association>)
	    b parent class_ref 933634 // Supplier
	end

	operation 7025410 "SuppliedThreadLocal"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "supplier" type class_ref 933634 // Supplier
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7025538 "initialValue"
	  cpp_inline protected explicit_return_type "T"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 129538 "Object"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class {@code Object} is the root of the class hierarchy.
Every class has {@code Object} as a superclass. All objects,
including arrays, implement the methods of this class.

@author  unascribed
@see     java.lang.Class
@since   JDK1.0
"
      operation 2731266 "registerNatives"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      extra_member 137730 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 2731394 "getClass"
	public return_type class_ref 130818 // Class
	nparams 0
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the runtime class of this {@code Object}. The returned
{@code Class} object is the object that is locked by {@code
static synchronized} methods of the represented class.

<p><b>The actual result type is {@code Class<? extends |X|>}
where {@code |X|} is the erasure of the static type of the
expression on which {@code getClass} is called.</b> For
example, no cast is required in this code fragment:</p>

<p>
{@code Number n = 0;                             }<br>
{@code Class<? extends Number> c = n.getClass(); }
</p>

@return The {@code Class} object that represents the runtime
        class of this object.
@jls 15.8.2 Class Literals
"
      end

      operation 2731522 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns a hash code value for the object. This method is
supported for the benefit of hash tables such as those provided by
{@link java.util.HashMap}.
<p>
The general contract of {@code hashCode} is:
<ul>
<li>Whenever it is invoked on the same object more than once during
    an execution of a Java application, the {@code hashCode} method
    must consistently return the same integer, provided no information
    used in {@code equals} comparisons on the object is modified.
    This integer need not remain consistent from one execution of an
    application to another execution of the same application.
<li>If two objects are equal according to the {@code equals(Object)}
    method, then calling the {@code hashCode} method on each of
    the two objects must produce the same integer result.
<li>It is <em>not</em> required that if two objects are unequal
    according to the {@link java.lang.Object#equals(java.lang.Object)}
    method, then calling the {@code hashCode} method on each of the
    two objects must produce distinct integer results.  However, the
    programmer should be aware that producing distinct integer results
    for unequal objects may improve the performance of hash tables.
</ul>
<p>
As much as is reasonably practical, the hashCode method defined by
class {@code Object} does return distinct integers for distinct
objects. (This is typically implemented by converting the internal
address of the object into an integer, but this implementation
technique is not required by the
Java&trade; programming language.)

@return  a hash code value for this object.
@see     java.lang.Object#equals(java.lang.Object)
@see     java.lang.System#identityHashCode
"
      end

      operation 2731650 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether some other object is \"equal to\" this one.
<p>
The {@code equals} method implements an equivalence relation
on non-null object references:
<ul>
<li>It is <i>reflexive</i>: for any non-null reference value
    {@code x}, {@code x.equals(x)} should return
    {@code true}.
<li>It is <i>symmetric</i>: for any non-null reference values
    {@code x} and {@code y}, {@code x.equals(y)}
    should return {@code true} if and only if
    {@code y.equals(x)} returns {@code true}.
<li>It is <i>transitive</i>: for any non-null reference values
    {@code x}, {@code y}, and {@code z}, if
    {@code x.equals(y)} returns {@code true} and
    {@code y.equals(z)} returns {@code true}, then
    {@code x.equals(z)} should return {@code true}.
<li>It is <i>consistent</i>: for any non-null reference values
    {@code x} and {@code y}, multiple invocations of
    {@code x.equals(y)} consistently return {@code true}
    or consistently return {@code false}, provided no
    information used in {@code equals} comparisons on the
    objects is modified.
<li>For any non-null reference value {@code x},
    {@code x.equals(null)} should return {@code false}.
</ul>
<p>
The {@code equals} method for class {@code Object} implements
the most discriminating possible equivalence relation on objects;
that is, for any non-null reference values {@code x} and
{@code y}, this method returns {@code true} if and only
if {@code x} and {@code y} refer to the same object
({@code x == y} has the value {@code true}).
<p>
Note that it is generally necessary to override the {@code hashCode}
method whenever this method is overridden, so as to maintain the
general contract for the {@code hashCode} method, which states
that equal objects must have equal hash codes.

@param   obj   the reference object with which to compare.
@return  {@code true} if this object is the same as the obj
         argument; {@code false} otherwise.
@see     #hashCode()
@see     java.util.HashMap
"
      end

      operation 2731778 "clone"
	protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Creates and returns a copy of this object.  The precise meaning
of \"copy\" may depend on the class of the object. The general
intent is that, for any object {@code x}, the expression:
<blockquote>
<pre>
x.clone() != x</pre></blockquote>
will be true, and that the expression:
<blockquote>
<pre>
x.clone().getClass() == x.getClass()</pre></blockquote>
will be {@code true}, but these are not absolute requirements.
While it is typically the case that:
<blockquote>
<pre>
x.clone().equals(x)</pre></blockquote>
will be {@code true}, this is not an absolute requirement.
<p>
By convention, the returned object should be obtained by calling
{@code super.clone}.  If a class and all of its superclasses (except
{@code Object}) obey this convention, it will be the case that
{@code x.clone().getClass() == x.getClass()}.
<p>
By convention, the object returned by this method should be independent
of this object (which is being cloned).  To achieve this independence,
it may be necessary to modify one or more fields of the object returned
by {@code super.clone} before returning it.  Typically, this means
copying any mutable objects that comprise the internal \"deep structure\"
of the object being cloned and replacing the references to these
objects with references to the copies.  If a class contains only
primitive fields or references to immutable objects, then it is usually
the case that no fields in the object returned by {@code super.clone}
need to be modified.
<p>
The method {@code clone} for class {@code Object} performs a
specific cloning operation. First, if the class of this object does
not implement the interface {@code Cloneable}, then a
{@code CloneNotSupportedException} is thrown. Note that all arrays
are considered to implement the interface {@code Cloneable} and that
the return type of the {@code clone} method of an array type {@code T[]}
is {@code T[]} where T is any reference or primitive type.
Otherwise, this method creates a new instance of the class of this
object and initializes all its fields with exactly the contents of
the corresponding fields of this object, as if by assignment; the
contents of the fields are not themselves cloned. Thus, this method
performs a \"shallow copy\" of this object, not a \"deep copy\" operation.
<p>
The class {@code Object} does not itself implement the interface
{@code Cloneable}, so calling the {@code clone} method on an object
whose class is {@code Object} will result in throwing an
exception at run time.

@return     a clone of this instance.
@throws  CloneNotSupportedException  if the object's class does not
              support the {@code Cloneable} interface. Subclasses
              that override the {@code clone} method can also
              throw this exception to indicate that an instance cannot
              be cloned.
@see java.lang.Cloneable
"
      end

      operation 2731906 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the object. In general, the
{@code toString} method returns a string that
\"textually represents\" this object. The result should
be a concise but informative representation that is easy for a
person to read.
It is recommended that all subclasses override this method.
<p>
The {@code toString} method for class {@code Object}
returns a string consisting of the name of the class of which the
object is an instance, the at-sign character `{@code @}', and
the unsigned hexadecimal representation of the hash code of the
object. In other words, this method returns a string equal to the
value of:
<blockquote>
<pre>
getClass().getName() + '@' + Integer.toHexString(hashCode())
</pre></blockquote>

@return  a string representation of the object.
"
      end

      operation 2732034 "notify"
	public explicit_return_type "void"
	nparams 0
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Wakes up a single thread that is waiting on this object's
monitor. If any threads are waiting on this object, one of them
is chosen to be awakened. The choice is arbitrary and occurs at
the discretion of the implementation. A thread waits on an object's
monitor by calling one of the {@code wait} methods.
<p>
The awakened thread will not be able to proceed until the current
thread relinquishes the lock on this object. The awakened thread will
compete in the usual manner with any other threads that might be
actively competing to synchronize on this object; for example, the
awakened thread enjoys no reliable privilege or disadvantage in being
the next thread to lock this object.
<p>
This method should only be called by a thread that is the owner
of this object's monitor. A thread becomes the owner of the
object's monitor in one of three ways:
<ul>
<li>By executing a synchronized instance method of that object.
<li>By executing the body of a {@code synchronized} statement
    that synchronizes on the object.
<li>For objects of type {@code Class,} by executing a
    synchronized static method of that class.
</ul>
<p>
Only one thread at a time can own an object's monitor.

@throws  IllegalMonitorStateException  if the current thread is not
              the owner of this object's monitor.
@see        java.lang.Object#notifyAll()
@see        java.lang.Object#wait()
"
      end

      operation 2732162 "notifyAll"
	public explicit_return_type "void"
	nparams 0
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Wakes up all threads that are waiting on this object's monitor. A
thread waits on an object's monitor by calling one of the
{@code wait} methods.
<p>
The awakened threads will not be able to proceed until the current
thread relinquishes the lock on this object. The awakened threads
will compete in the usual manner with any other threads that might
be actively competing to synchronize on this object; for example,
the awakened threads enjoy no reliable privilege or disadvantage in
being the next thread to lock this object.
<p>
This method should only be called by a thread that is the owner
of this object's monitor. See the {@code notify} method for a
description of the ways in which a thread can become the owner of
a monitor.

@throws  IllegalMonitorStateException  if the current thread is not
              the owner of this object's monitor.
@see        java.lang.Object#notify()
@see        java.lang.Object#wait()
"
      end

      operation 2732290 "wait"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "long"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Causes the current thread to wait until either another thread invokes the
{@link java.lang.Object#notify()} method or the
{@link java.lang.Object#notifyAll()} method for this object, or a
specified amount of time has elapsed.
<p>
The current thread must own this object's monitor.
<p>
This method causes the current thread (call it <var>T</var>) to
place itself in the wait set for this object and then to relinquish
any and all synchronization claims on this object. Thread <var>T</var>
becomes disabled for thread scheduling purposes and lies dormant
until one of four things happens:
<ul>
<li>Some other thread invokes the {@code notify} method for this
object and thread <var>T</var> happens to be arbitrarily chosen as
the thread to be awakened.
<li>Some other thread invokes the {@code notifyAll} method for this
object.
<li>Some other thread {@linkplain Thread#interrupt() interrupts}
thread <var>T</var>.
<li>The specified amount of real time has elapsed, more or less.  If
{@code timeout} is zero, however, then real time is not taken into
consideration and the thread simply waits until notified.
</ul>
The thread <var>T</var> is then removed from the wait set for this
object and re-enabled for thread scheduling. It then competes in the
usual manner with other threads for the right to synchronize on the
object; once it has gained control of the object, all its
synchronization claims on the object are restored to the status quo
ante - that is, to the situation as of the time that the {@code wait}
method was invoked. Thread <var>T</var> then returns from the
invocation of the {@code wait} method. Thus, on return from the
{@code wait} method, the synchronization state of the object and of
thread {@code T} is exactly as it was when the {@code wait} method
was invoked.
<p>
A thread can also wake up without being notified, interrupted, or
timing out, a so-called <i>spurious wakeup</i>.  While this will rarely
occur in practice, applications must guard against it by testing for
the condition that should have caused the thread to be awakened, and
continuing to wait if the condition is not satisfied.  In other words,
waits should always occur in loops, like this one:
<pre>
    synchronized (obj) {
        while (&lt;condition does not hold&gt;)
            obj.wait(timeout);
        ... // Perform action appropriate to condition
    }
</pre>
(For more information on this topic, see Section 3.2.3 in Doug Lea's
\"Concurrent Programming in Java (Second Edition)\" (Addison-Wesley,
2000), or Item 50 in Joshua Bloch's \"Effective Java Programming
Language Guide\" (Addison-Wesley, 2001).

<p>If the current thread is {@linkplain java.lang.Thread#interrupt()
interrupted} by any thread before or while it is waiting, then an
{@code InterruptedException} is thrown.  This exception is not
thrown until the lock status of this object has been restored as
described above.

<p>
Note that the {@code wait} method, as it places the current thread
into the wait set for this object, unlocks only this object; any
other objects on which the current thread may be synchronized remain
locked while the thread waits.
<p>
This method should only be called by a thread that is the owner
of this object's monitor. See the {@code notify} method for a
description of the ways in which a thread can become the owner of
a monitor.

@param      timeout   the maximum time to wait in milliseconds.
@throws  IllegalArgumentException      if the value of timeout is
              negative.
@throws  IllegalMonitorStateException  if the current thread is not
              the owner of the object's monitor.
@throws  InterruptedException if any thread interrupted the
            current thread before or while the current thread
            was waiting for a notification.  The <i>interrupted
            status</i> of the current thread is cleared when
            this exception is thrown.
@see        java.lang.Object#notify()
@see        java.lang.Object#notifyAll()
"
      end

      operation 2732418 "wait"
	public explicit_return_type "void"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param in name "nanos" explicit_type "int"
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the current thread to wait until another thread invokes the
{@link java.lang.Object#notify()} method or the
{@link java.lang.Object#notifyAll()} method for this object, or
some other thread interrupts the current thread, or a certain
amount of real time has elapsed.
<p>
This method is similar to the {@code wait} method of one
argument, but it allows finer control over the amount of time to
wait for a notification before giving up. The amount of real time,
measured in nanoseconds, is given by:
<blockquote>
<pre>
1000000*timeout+nanos</pre></blockquote>
<p>
In all other respects, this method does the same thing as the
method {@link #wait(long)} of one argument. In particular,
{@code wait(0, 0)} means the same thing as {@code wait(0)}.
<p>
The current thread must own this object's monitor. The thread
releases ownership of this monitor and waits until either of the
following two conditions has occurred:
<ul>
<li>Another thread notifies threads waiting on this object's monitor
    to wake up either through a call to the {@code notify} method
    or the {@code notifyAll} method.
<li>The timeout period, specified by {@code timeout}
    milliseconds plus {@code nanos} nanoseconds arguments, has
    elapsed.
</ul>
<p>
The thread then waits until it can re-obtain ownership of the
monitor and resumes execution.
<p>
As in the one argument version, interrupts and spurious wakeups are
possible, and this method should always be used in a loop:
<pre>
    synchronized (obj) {
        while (&lt;condition does not hold&gt;)
            obj.wait(timeout, nanos);
        ... // Perform action appropriate to condition
    }
</pre>
This method should only be called by a thread that is the owner
of this object's monitor. See the {@code notify} method for a
description of the ways in which a thread can become the owner of
a monitor.

@param      timeout   the maximum time to wait in milliseconds.
@param      nanos      additional time, in nanoseconds range
                      0-999999.
@throws  IllegalArgumentException      if the value of timeout is
                     negative or the value of nanos is
                     not in the range 0-999999.
@throws  IllegalMonitorStateException  if the current thread is not
              the owner of this object's monitor.
@throws  InterruptedException if any thread interrupted the
            current thread before or while the current thread
            was waiting for a notification.  The <i>interrupted
            status</i> of the current thread is cleared when
            this exception is thrown.
"
      end

      operation 2732546 "wait"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the current thread to wait until another thread invokes the
{@link java.lang.Object#notify()} method or the
{@link java.lang.Object#notifyAll()} method for this object.
In other words, this method behaves exactly as if it simply
performs the call {@code wait(0)}.
<p>
The current thread must own this object's monitor. The thread
releases ownership of this monitor and waits until another thread
notifies threads waiting on this object's monitor to wake up
either through a call to the {@code notify} method or the
{@code notifyAll} method. The thread then waits until it can
re-obtain ownership of the monitor and resumes execution.
<p>
As in the one argument version, interrupts and spurious wakeups are
possible, and this method should always be used in a loop:
<pre>
    synchronized (obj) {
        while (&lt;condition does not hold&gt;)
            obj.wait();
        ... // Perform action appropriate to condition
    }
</pre>
This method should only be called by a thread that is the owner
of this object's monitor. See the {@code notify} method for a
description of the ways in which a thread can become the owner of
a monitor.

@throws  IllegalMonitorStateException  if the current thread is not
              the owner of the object's monitor.
@throws  InterruptedException if any thread interrupted the
            current thread before or while the current thread
            was waiting for a notification.  The <i>interrupted
            status</i> of the current thread is cleared when
            this exception is thrown.
@see        java.lang.Object#notify()
@see        java.lang.Object#notifyAll()
"
      end

      operation 2732674 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the garbage collector on an object when garbage collection
determines that there are no more references to the object.
A subclass overrides the {@code finalize} method to dispose of
system resources or to perform other cleanup.
<p>
The general contract of {@code finalize} is that it is invoked
if and when the Java&trade; virtual
machine has determined that there is no longer any
means by which this object can be accessed by any thread that has
not yet died, except as a result of an action taken by the
finalization of some other object or class which is ready to be
finalized. The {@code finalize} method may take any action, including
making this object available again to other threads; the usual purpose
of {@code finalize}, however, is to perform cleanup actions before
the object is irrevocably discarded. For example, the finalize method
for an object that represents an input/output connection might perform
explicit I/O transactions to break the connection before the object is
permanently discarded.
<p>
The {@code finalize} method of class {@code Object} performs no
special action; it simply returns normally. Subclasses of
{@code Object} may override this definition.
<p>
The Java programming language does not guarantee which thread will
invoke the {@code finalize} method for any given object. It is
guaranteed, however, that the thread that invokes finalize will not
be holding any user-visible synchronization locks when finalize is
invoked. If an uncaught exception is thrown by the finalize method,
the exception is ignored and finalization of that object terminates.
<p>
After the {@code finalize} method has been invoked for an object, no
further action is taken until the Java virtual machine has again
determined that there is no longer any means by which this object can
be accessed by any thread that has not yet died, including possible
actions by other objects or classes which are ready to be finalized,
at which point the object may be discarded.
<p>
The {@code finalize} method is never invoked more than once by a Java
virtual machine for any given object.
<p>
Any exception thrown by the {@code finalize} method causes
the finalization of this object to be halted, but is otherwise
ignored.

@throws Throwable the {@code Exception} raised by this method
@see java.lang.ref.WeakReference
@see java.lang.ref.PhantomReference
@jls 12.6 Finalization of Class Instances
"
      end
    end

    class 129666 "InterruptedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when a thread is waiting, sleeping, or otherwise occupied,
and the thread is interrupted, either before or during the activity.
Occasionally a method may wish to test whether the current
thread has been interrupted, and if so, to immediately throw
this exception.  The following code can be used to achieve
this effect:
<pre>
 if (Thread.interrupted())  // Clears interrupted status!
     throw new InterruptedException();
</pre>

@author  Frank Yellin
@see     java.lang.Object#wait()
@see     java.lang.Object#wait(long)
@see     java.lang.Object#wait(long, int)
@see     java.lang.Thread#sleep(long)
@see     java.lang.Thread#interrupt()
@see     java.lang.Thread#interrupted()
@since   JDK1.0
"
      classrelation 3159938 // <generalisation>
	relation 3159938 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3159938 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1677186 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6700697376100628473L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7036546 "InterruptedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InterruptedException</code> with no detail  message.
"
      end

      operation 7036674 "InterruptedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InterruptedException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 129794 "CloneNotSupportedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that the <code>clone</code> method in class
<code>Object</code> has been called to clone an object, but that
the object's class does not implement the <code>Cloneable</code>
interface.
<p>
Applications that override the <code>clone</code> method can also
throw this exception to indicate that an object could not or
should not be cloned.

@author  unascribed
@see     java.lang.Cloneable
@see     java.lang.Object#clone()
@since   JDK1.0
"
      classrelation 3155074 // <generalisation>
	relation 3155074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3155074 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1668994 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5195511250079656443L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7008130 "CloneNotSupportedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>CloneNotSupportedException</code> with no
detail message.
"
      end

      operation 7008258 "CloneNotSupportedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>CloneNotSupportedException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 129922 "Throwable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Throwable} class is the superclass of all errors and
exceptions in the Java language. Only objects that are instances of this
class (or one of its subclasses) are thrown by the Java Virtual Machine or
can be thrown by the Java {@code throw} statement. Similarly, only
this class or one of its subclasses can be the argument type in a
{@code catch} clause.

For the purposes of compile-time checking of exceptions, {@code
Throwable} and any subclass of {@code Throwable} that is not also a
subclass of either {@link RuntimeException} or {@link Error} are
regarded as checked exceptions.

<p>Instances of two subclasses, {@link java.lang.Error} and
{@link java.lang.Exception}, are conventionally used to indicate
that exceptional situations have occurred. Typically, these instances
are freshly created in the context of the exceptional situation so
as to include relevant information (such as stack trace data).

<p>A throwable contains a snapshot of the execution stack of its
thread at the time it was created. It can also contain a message
string that gives more information about the error. Over time, a
throwable can {@linkplain Throwable#addSuppressed suppress} other
throwables from being propagated.  Finally, the throwable can also
contain a <i>cause</i>: another throwable that caused this
throwable to be constructed.  The recording of this causal information
is referred to as the <i>chained exception</i> facility, as the
cause can, itself, have a cause, and so on, leading to a \"chain\" of
exceptions, each caused by another.

<p>One reason that a throwable may have a cause is that the class that
throws it is built atop a lower layered abstraction, and an operation on
the upper layer fails due to a failure in the lower layer.  It would be bad
design to let the throwable thrown by the lower layer propagate outward, as
it is generally unrelated to the abstraction provided by the upper layer.
Further, doing so would tie the API of the upper layer to the details of
its implementation, assuming the lower layer's exception was a checked
exception.  Throwing a \"wrapped exception\" (i.e., an exception containing a
cause) allows the upper layer to communicate the details of the failure to
its caller without incurring either of these shortcomings.  It preserves
the flexibility to change the implementation of the upper layer without
changing its API (in particular, the set of exceptions thrown by its
methods).

<p>A second reason that a throwable may have a cause is that the method
that throws it must conform to a general-purpose interface that does not
permit the method to throw the cause directly.  For example, suppose
a persistent collection conforms to the {@link java.util.Collection
Collection} interface, and that its persistence is implemented atop
{@code java.io}.  Suppose the internals of the {@code add} method
can throw an {@link java.io.IOException IOException}.  The implementation
can communicate the details of the {@code IOException} to its caller
while conforming to the {@code Collection} interface by wrapping the
{@code IOException} in an appropriate unchecked exception.  (The
specification for the persistent collection should indicate that it is
capable of throwing such exceptions.)

<p>A cause can be associated with a throwable in two ways: via a
constructor that takes the cause as an argument, or via the
{@link #initCause(Throwable)} method.  New throwable classes that
wish to allow causes to be associated with them should provide constructors
that take a cause and delegate (perhaps indirectly) to one of the
{@code Throwable} constructors that takes a cause.

Because the {@code initCause} method is public, it allows a cause to be
associated with any throwable, even a \"legacy throwable\" whose
implementation predates the addition of the exception chaining mechanism to
{@code Throwable}.

<p>By convention, class {@code Throwable} and its subclasses have two
constructors, one that takes no arguments and one that takes a
{@code String} argument that can be used to produce a detail message.
Further, those subclasses that might likely have a cause associated with
them should have two more constructors, one that takes a
{@code Throwable} (the cause), and one that takes a
{@code String} (the detail message) and a {@code Throwable} (the
cause).

@author  unascribed
@author  Josh Bloch (Added exception chaining and programmatic access to
         stack trace in 1.4.)
@jls 11.2 Compile-Time Checking of Exceptions
@since JDK1.0
"
      classrelation 234242 // <realization>
	relation 234242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 234242 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 189314 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3042686055658047285L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      classrelation 234370 // backtrace (<unidirectional association>)
	relation 234370 --->
	  a role_name "backtrace" private
	    comment "
Native code saves some indication of the stack backtrace in this slot.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234370 // backtrace (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 234498 // detailMessage (<unidirectional association>)
	relation 234498 --->
	  a role_name "detailMessage" private
	    comment "
Specific details about the Throwable.  For example, for
{@code FileNotFoundException}, this contains the name of
the file that could not be found.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 234498 // detailMessage (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 195074 "SentinelHolder"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 234626 // STACK_TRACE_ELEMENT_SENTINEL (<unidirectional association>)
	  relation 234626 --->
	    a role_name "STACK_TRACE_ELEMENT_SENTINEL" init_value "
            new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)" class_relation const_relation public
	      comment "
{@linkplain #setStackTrace(StackTraceElement[]) Setting the
stack trace} to a one-element array containing this sentinel
value indicates future attempts to set the stack trace will be
ignored.  The sentinal is equal to the result of calling:<br>
{@code new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 234626 // STACK_TRACE_ELEMENT_SENTINEL (<unidirectional association>)
	    b parent class_ref 130050 // StackTraceElement
	end

	classrelation 234754 // STACK_TRACE_SENTINEL (<unidirectional association>)
	  relation 234754 --->
	    a role_name "STACK_TRACE_SENTINEL" multiplicity "[]" init_value "
            new StackTraceElement[] {STACK_TRACE_ELEMENT_SENTINEL}" class_relation const_relation public
	      comment "
Sentinel value used in the serial form to indicate an immutable
stack trace.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 234754 // STACK_TRACE_SENTINEL (<unidirectional association>)
	    b parent class_ref 130050 // StackTraceElement
	end
      end

      classrelation 234882 // UNASSIGNED_STACK (<unidirectional association>)
	relation 234882 --->
	  a role_name "UNASSIGNED_STACK" multiplicity "[]" init_value " new StackTraceElement[0]" class_relation const_relation private
	    comment "
A shared value for an empty stack.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 234882 // UNASSIGNED_STACK (<unidirectional association>)
	  b parent class_ref 130050 // StackTraceElement
      end

      classrelation 235010 // cause (<unidirectional association>)
	relation 235010 --->
	  a role_name "cause" init_value " this" private
	    comment "
To allow Throwable objects to be made immutable and safely
reused by the JVM, such as OutOfMemoryErrors, fields of
Throwable that are writable in response to user actions, cause,
stackTrace, and suppressedExceptions obey the following
protocol:

1) The fields are initialized to a non-null sentinel value
which indicates the value has logically not been set.

2) Writing a null to the field indicates further writes
are forbidden

3) The sentinel value may be replaced with another non-null
value.

For example, implementations of the HotSpot JVM have
preallocated OutOfMemoryError objects to provide for better
diagnosability of that situation.  These objects are created
without calling the constructor for that class and the fields
in question are initialized to null.  To support this
capability, any new fields added to Throwable that require
being initialized to a non-null value require a coordinated JVM
change.


The throwable that caused this throwable to get thrown, or null if this
throwable was not caused by another throwable, or if the causative
throwable is unknown.  If this field is equal to this throwable itself,
it indicates that the cause of this throwable has not yet been
initialized.

@serial
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235010 // cause (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      classrelation 235138 // stackTrace (<unidirectional association>)
	relation 235138 --->
	  a role_name "stackTrace" multiplicity "[]" init_value " UNASSIGNED_STACK" private
	    comment "
The stack trace, as returned by {@link #getStackTrace()}.

The field is initialized to a zero-length array.  A {@code
null} value of this field indicates subsequent calls to {@link
#setStackTrace(StackTraceElement[])} and {@link
#fillInStackTrace()} will be be no-ops.

@serial
@since 1.4

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 235138 // stackTrace (<unidirectional association>)
	  b parent class_ref 130050 // StackTraceElement
      end

      classrelation 235266 // SUPPRESSED_SENTINEL (<unidirectional association>)
	relation 235266 --->
	  a role_name "SUPPRESSED_SENTINEL" init_value "
        Collections.unmodifiableList(new ArrayList<Throwable>(0))" class_relation const_relation private
	    comment " Setting this static field introduces an acceptable
 initialization dependency on a few java.util classes.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Throwable> ${name}${value};
"
	    classrelation_ref 235266 // SUPPRESSED_SENTINEL (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 235394 // suppressedExceptions (<unidirectional association>)
	relation 235394 --->
	  a role_name "suppressedExceptions" init_value " SUPPRESSED_SENTINEL" private
	    comment "
The list of suppressed exceptions, as returned by {@link
#getSuppressed()}.  The list is initialized to a zero-element
unmodifiable sentinel list.  When a serialized Throwable is
read in, if the {@code suppressedExceptions} field points to a
zero-element list, the field is reset to the sentinel value.

@serial
@since 1.7

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Throwable> ${name}${value};
"
	    classrelation_ref 235394 // suppressedExceptions (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 235522 // NULL_CAUSE_MESSAGE (<unidirectional association>)
	relation 235522 --->
	  a role_name "NULL_CAUSE_MESSAGE" init_value " \"Cannot suppress a null exception.\"" class_relation const_relation private
	    comment " Message for trying to suppress a null exception. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235522 // NULL_CAUSE_MESSAGE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 235650 // SELF_SUPPRESSION_MESSAGE (<unidirectional association>)
	relation 235650 --->
	  a role_name "SELF_SUPPRESSION_MESSAGE" init_value " \"Self-suppression not permitted\"" class_relation const_relation private
	    comment " Message for trying to suppress oneself. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235650 // SELF_SUPPRESSION_MESSAGE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 235778 // CAUSE_CAPTION (<unidirectional association>)
	relation 235778 --->
	  a role_name "CAUSE_CAPTION" init_value " \"Caused by: \"" class_relation const_relation private
	    comment " Caption  for labeling causative exception stack traces 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235778 // CAUSE_CAPTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 235906 // SUPPRESSED_CAPTION (<unidirectional association>)
	relation 235906 --->
	  a role_name "SUPPRESSED_CAPTION" init_value " \"Suppressed: \"" class_relation const_relation private
	    comment " Caption for labeling suppressed exception stack traces 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 235906 // SUPPRESSED_CAPTION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 611970 "Throwable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new throwable with {@code null} as its detail message.
The cause is not initialized, and may subsequently be initialized by a
call to {@link #initCause}.

<p>The {@link #fillInStackTrace()} method is called to initialize
the stack trace data in the newly created throwable.
"
      end

      operation 612098 "Throwable"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new throwable with the specified detail message.  The
cause is not initialized, and may subsequently be initialized by
a call to {@link #initCause}.

<p>The {@link #fillInStackTrace()} method is called to initialize
the stack trace data in the newly created throwable.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link #getMessage()} method.
"
      end

      operation 612226 "Throwable"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new throwable with the specified detail message and
cause.  <p>Note that the detail message associated with
{@code cause} is <i>not</i> automatically incorporated in
this throwable's detail message.

<p>The {@link #fillInStackTrace()} method is called to initialize
the stack trace data in the newly created throwable.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 612354 "Throwable"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new throwable with the specified cause and a detail
message of {@code (cause==null ? null : cause.toString())} (which
typically contains the class and detail message of {@code cause}).
This constructor is useful for throwables that are little more than
wrappers for other throwables (for example, {@link
java.security.PrivilegedActionException}).

<p>The {@link #fillInStackTrace()} method is called to initialize
the stack trace data in the newly created throwable.

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 612482 "Throwable"
	protected explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "enableSuppression" explicit_type "boolean"
	  param inout name "writableStackTrace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new throwable with the specified detail message,
cause, {@linkplain #addSuppressed suppression} enabled or
disabled, and writable stack trace enabled or disabled.  If
suppression is disabled, {@link #getSuppressed} for this object
will return a zero-length array and calls to {@link
#addSuppressed} that would otherwise append an exception to the
suppressed list will have no effect.  If the writable stack
trace is false, this constructor will not call {@link
#fillInStackTrace()}, a {@code null} will be written to the
{@code stackTrace} field, and subsequent calls to {@code
fillInStackTrace} and {@link
#setStackTrace(StackTraceElement[])} will not set the stack
trace.  If the writable stack trace is false, {@link
#getStackTrace} will return a zero length array.

<p>Note that the other constructors of {@code Throwable} treat
suppression as being enabled and the stack trace as being
writable.  Subclasses of {@code Throwable} should document any
conditions under which suppression is disabled and document
conditions under which the stack trace is not writable.
Disabling of suppression should only occur in exceptional
circumstances where special requirements exist, such as a
virtual machine reusing exception objects under low-memory
situations.  Circumstances where a given exception object is
repeatedly caught and rethrown, such as to implement control
flow between two sub-systems, is another situation where
immutable throwable objects would be appropriate.

@param  message the detail message.
@param cause the cause.  (A {@code null} value is permitted,
and indicates that the cause is nonexistent or unknown.)
@param enableSuppression whether or not suppression is enabled or disabled
@param writableStackTrace whether or not the stack trace should be
                          writable

@see OutOfMemoryError
@see NullPointerException
@see ArithmeticException
@since 1.7
"
      end

      operation 612610 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the detail message string of this throwable.

@return  the detail message string of this {@code Throwable} instance
         (which may be {@code null}).
"
      end

      operation 612738 "getLocalizedMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a localized description of this throwable.
Subclasses may override this method in order to produce a
locale-specific message.  For subclasses that do not override this
method, the default implementation returns the same result as
{@code getMessage()}.

@return  The localized description of this throwable.
@since   JDK1.1
"
      end

      operation 612866 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this throwable or {@code null} if the
cause is nonexistent or unknown.  (The cause is the throwable that
caused this throwable to get thrown.)

<p>This implementation returns the cause that was supplied via one of
the constructors requiring a {@code Throwable}, or that was set after
creation with the {@link #initCause(Throwable)} method.  While it is
typically unnecessary to override this method, a subclass can override
it to return a cause set by some other means.  This is appropriate for
a \"legacy chained throwable\" that predates the addition of chained
exceptions to {@code Throwable}.  Note that it is <i>not</i>
necessary to override any of the {@code PrintStackTrace} methods,
all of which invoke the {@code getCause} method to determine the
cause of a throwable.

@return  the cause of this throwable or {@code null} if the
         cause is nonexistent or unknown.
@since 1.4
"
      end

      operation 612994 "initCause"
	public return_type class_ref 129922 // Throwable
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the <i>cause</i> of this throwable to the specified value.
(The cause is the throwable that caused this throwable to get thrown.)

<p>This method can be called at most once.  It is generally called from
within the constructor, or immediately after creating the
throwable.  If this throwable was created
with {@link #Throwable(Throwable)} or
{@link #Throwable(String,Throwable)}, this method cannot be called
even once.

<p>An example of using this method on a legacy throwable type
without other support for setting the cause is:

<pre>
try {
    lowLevelOp();
} catch (LowLevelException le) {
    throw (HighLevelException)
          new HighLevelException().initCause(le); // Legacy constructor
}
</pre>

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@return  a reference to this {@code Throwable} instance.
@throws IllegalArgumentException if {@code cause} is this
        throwable.  (A throwable cannot be its own cause.)
@throws IllegalStateException if this throwable was
        created with {@link #Throwable(Throwable)} or
        {@link #Throwable(String,Throwable)}, or this method has already
        been called on this throwable.
@since  1.4
"
      end

      operation 613122 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a short description of this throwable.
The result is the concatenation of:
<ul>
<li> the {@linkplain Class#getName() name} of the class of this object
<li> \": \" (a colon and a space)
<li> the result of invoking this object's {@link #getLocalizedMessage}
     method
</ul>
If {@code getLocalizedMessage} returns {@code null}, then just
the class name is returned.

@return a string representation of this throwable.
"
      end

      operation 613250 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this throwable and its backtrace to the
standard error stream. This method prints a stack trace for this
{@code Throwable} object on the error output stream that is
the value of the field {@code System.err}. The first line of
output contains the result of the {@link #toString()} method for
this object.  Remaining lines represent data previously recorded by
the method {@link #fillInStackTrace()}. The format of this
information depends on the implementation, but the following
example may be regarded as typical:
<blockquote><pre>
java.lang.NullPointerException
        at MyClass.mash(MyClass.java:9)
        at MyClass.crunch(MyClass.java:6)
        at MyClass.main(MyClass.java:3)
</pre></blockquote>
This example was produced by running the program:
<pre>
class MyClass {
    public static void main(String[] args) {
        crunch(null);
    }
    static void crunch(int[] a) {
        mash(a);
    }
    static void mash(int[] b) {
        System.out.println(b[0]);
    }
}
</pre>
The backtrace for a throwable with an initialized, non-null cause
should generally include the backtrace for the cause.  The format
of this information depends on the implementation, but the following
example may be regarded as typical:
<pre>
HighLevelException: MidLevelException: LowLevelException
        at Junk.a(Junk.java:13)
        at Junk.main(Junk.java:4)
Caused by: MidLevelException: LowLevelException
        at Junk.c(Junk.java:23)
        at Junk.b(Junk.java:17)
        at Junk.a(Junk.java:11)
        ... 1 more
Caused by: LowLevelException
        at Junk.e(Junk.java:30)
        at Junk.d(Junk.java:27)
        at Junk.c(Junk.java:21)
        ... 3 more
</pre>
Note the presence of lines containing the characters {@code \"...\"}.
These lines indicate that the remainder of the stack trace for this
exception matches the indicated number of frames from the bottom of the
stack trace of the exception that was caused by this exception (the
\"enclosing\" exception).  This shorthand can greatly reduce the length
of the output in the common case where a wrapped exception is thrown
from same method as the \"causative exception\" is caught.  The above
example was produced by running the program:
<pre>
public class Junk {
    public static void main(String args[]) {
        try {
            a();
        } catch(HighLevelException e) {
            e.printStackTrace();
        }
    }
    static void a() throws HighLevelException {
        try {
            b();
        } catch(MidLevelException e) {
            throw new HighLevelException(e);
        }
    }
    static void b() throws MidLevelException {
        c();
    }
    static void c() throws MidLevelException {
        try {
            d();
        } catch(LowLevelException e) {
            throw new MidLevelException(e);
        }
    }
    static void d() throws LowLevelException {
       e();
    }
    static void e() throws LowLevelException {
        throw new LowLevelException();
    }
}

class HighLevelException extends Exception {
    HighLevelException(Throwable cause) { super(cause); }
}

class MidLevelException extends Exception {
    MidLevelException(Throwable cause)  { super(cause); }
}

class LowLevelException extends Exception {
}
</pre>
As of release 7, the platform supports the notion of
<i>suppressed exceptions</i> (in conjunction with the {@code
try}-with-resources statement). Any exceptions that were
suppressed in order to deliver an exception are printed out
beneath the stack trace.  The format of this information
depends on the implementation, but the following example may be
regarded as typical:

<pre>
Exception in thread \"main\" java.lang.Exception: Something happened
 at Foo.bar(Foo.java:10)
 at Foo.main(Foo.java:5)
 Suppressed: Resource$CloseFailException: Resource ID = 0
         at Resource.close(Resource.java:26)
         at Foo.bar(Foo.java:9)
         ... 1 more
</pre>
Note that the \"... n more\" notation is used on suppressed exceptions
just at it is used on causes. Unlike causes, suppressed exceptions are
indented beyond their \"containing exceptions.\"

<p>An exception can have both a cause and one or more suppressed
exceptions:
<pre>
Exception in thread \"main\" java.lang.Exception: Main block
 at Foo3.main(Foo3.java:7)
 Suppressed: Resource$CloseFailException: Resource ID = 2
         at Resource.close(Resource.java:26)
         at Foo3.main(Foo3.java:5)
 Suppressed: Resource$CloseFailException: Resource ID = 1
         at Resource.close(Resource.java:26)
         at Foo3.main(Foo3.java:5)
Caused by: java.lang.Exception: I did it
 at Foo3.main(Foo3.java:8)
</pre>
Likewise, a suppressed exception can have a cause:
<pre>
Exception in thread \"main\" java.lang.Exception: Main block
 at Foo4.main(Foo4.java:6)
 Suppressed: Resource2$CloseFailException: Resource ID = 1
         at Resource2.close(Resource2.java:20)
         at Foo4.main(Foo4.java:5)
 Caused by: java.lang.Exception: Rats, you caught me
         at Resource2$CloseFailException.&lt;init&gt;(Resource2.java:45)
         ... 2 more
</pre>
"
      end

      operation 613378 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this throwable and its backtrace to the specified print stream.

@param s {@code PrintStream} to use for output
"
      end

      operation 613506 "printStackTrace"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195202 // PrintStreamOrWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 195202 "PrintStreamOrWriter"
	abstract visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 613890 "lock"
	  abstract package return_type class_ref 129538 // Object
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the object to be locked when using this StreamOrWriter "
	end

	operation 614018 "println"
	  abstract package explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Prints the specified string as a line on this StreamOrWriter "
	end
      end

      operation 613634 "printEnclosedStackTrace"
	private explicit_return_type "void"
	nparams 5
	  param inout name "s" type class_ref 195202 // PrintStreamOrWriter
	  param inout name "enclosingTrace" type class_ref 130050 // StackTraceElement
	multiplicity "[]"
	  param inout name "caption" type class_ref 128130 // String
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "dejaVu" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<Throwable> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print our stack trace as an enclosed exception for the specified
stack trace.
"
      end

      operation 613762 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 195330 // PrintWriter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints this throwable and its backtrace to the specified
print writer.

@param s {@code PrintWriter} to use for output
@since   JDK1.1
"
      end

      class 195458 "WrappedPrintStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 236034 // <generalisation>
	  relation 236034 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 236034 // <generalisation>
	    b parent class_ref 195202 // PrintStreamOrWriter
	end

	classrelation 236162 // printStream (<unidirectional association>)
	  relation 236162 --->
	    a role_name "printStream" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 236162 // printStream (<unidirectional association>)
	    b parent class_ref 128258 // PrintStream
	end

	operation 614146 "WrappedPrintStream"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "printStream" type class_ref 128258 // PrintStream
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 614274 "lock"
	  package return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 614402 "println"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 195586 "WrappedPrintWriter"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 236290 // <generalisation>
	  relation 236290 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 236290 // <generalisation>
	    b parent class_ref 195202 // PrintStreamOrWriter
	end

	classrelation 236418 // printWriter (<unidirectional association>)
	  relation 236418 --->
	    a role_name "printWriter" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 236418 // printWriter (<unidirectional association>)
	    b parent class_ref 195330 // PrintWriter
	end

	operation 614530 "WrappedPrintWriter"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "printWriter" type class_ref 195330 // PrintWriter
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 614658 "lock"
	  package return_type class_ref 129538 // Object
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 614786 "println"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 614914 "fillInStackTrace"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fills in the execution stack trace. This method records within this
{@code Throwable} object information about the current state of
the stack frames for the current thread.

<p>If the stack trace of this {@code Throwable} {@linkplain
Throwable#Throwable(String, Throwable, boolean, boolean) is not
writable}, calling this method has no effect.

@return  a reference to this {@code Throwable} instance.
@see     java.lang.Throwable#printStackTrace()
"
      end

      operation 615042 "fillInStackTrace"
	private return_type class_ref 129922 // Throwable
	nparams 1
	  param in name "dummy" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 615170 "getStackTrace"
	public return_type class_ref 130050 // StackTraceElement
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides programmatic access to the stack trace information printed by
{@link #printStackTrace()}.  Returns an array of stack trace elements,
each representing one stack frame.  The zeroth element of the array
(assuming the array's length is non-zero) represents the top of the
stack, which is the last method invocation in the sequence.  Typically,
this is the point at which this throwable was created and thrown.
The last element of the array (assuming the array's length is non-zero)
represents the bottom of the stack, which is the first method invocation
in the sequence.

<p>Some virtual machines may, under some circumstances, omit one
or more stack frames from the stack trace.  In the extreme case,
a virtual machine that has no stack trace information concerning
this throwable is permitted to return a zero-length array from this
method.  Generally speaking, the array returned by this method will
contain one element for every frame that would be printed by
{@code printStackTrace}.  Writes to the returned array do not
affect future calls to this method.

@return an array of stack trace elements representing the stack trace
        pertaining to this throwable.
@since  1.4
"
      end

      operation 615298 "getOurStackTrace"
	private return_type class_ref 130050 // StackTraceElement
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 615426 "setStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stackTrace" type class_ref 130050 // StackTraceElement
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the stack trace elements that will be returned by
{@link #getStackTrace()} and printed by {@link #printStackTrace()}
and related methods.

This method, which is designed for use by RPC frameworks and other
advanced systems, allows the client to override the default
stack trace that is either generated by {@link #fillInStackTrace()}
when a throwable is constructed or deserialized when a throwable is
read from a serialization stream.

<p>If the stack trace of this {@code Throwable} {@linkplain
Throwable#Throwable(String, Throwable, boolean, boolean) is not
writable}, calling this method has no effect other than
validating its argument.

@param   stackTrace the stack trace elements to be associated with
this {@code Throwable}.  The specified array is copied by this
call; changes in the specified array after the method invocation
returns will have no affect on this {@code Throwable}'s stack
trace.

@throws NullPointerException if {@code stackTrace} is
        {@code null} or if any of the elements of
        {@code stackTrace} are {@code null}

@since  1.4
"
      end

      operation 615554 "getStackTraceDepth"
	package explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the number of elements in the stack trace (or 0 if the stack
trace is unavailable).

package-protection for use by SharedSecrets.
"
      end

      operation 615682 "getStackTraceElement"
	package return_type class_ref 130050 // StackTraceElement
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the specified element of the stack trace.

package-protection for use by SharedSecrets.

@param index index of the element to return.
@throws IndexOutOfBoundsException if {@code index < 0 ||
        index >= getStackTraceDepth() }
"
      end

      operation 615810 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads a {@code Throwable} from a stream, enforcing
well-formedness constraints on fields.  Null entries and
self-pointers are not allowed in the list of {@code
suppressedExceptions}.  Null entries are not allowed for stack
trace elements.  A null stack trace in the serial form results
in a zero-length stack element array. A single-element stack
trace whose entry is equal to {@code new StackTraceElement(\"\",
\"\", null, Integer.MIN_VALUE)} results in a {@code null} {@code
stackTrace} field.

Note that there are no constraints on the value the {@code
cause} field can hold; both {@code null} and {@code this} are
valid values for the field.
"
      end

      operation 615938 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a {@code Throwable} object to a stream.

A {@code null} stack trace field is represented in the serial
form as a one-element array whose element is equal to {@code
new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}.
"
      end

      operation 616066 "addSuppressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" type class_ref 129922 // Throwable
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified exception to the exceptions that were
suppressed in order to deliver this exception. This method is
thread-safe and typically called (automatically and implicitly)
by the {@code try}-with-resources statement.

<p>The suppression behavior is enabled <em>unless</em> disabled
{@linkplain #Throwable(String, Throwable, boolean, boolean) via
a constructor}.  When suppression is disabled, this method does
nothing other than to validate its argument.

<p>Note that when one exception {@linkplain
#initCause(Throwable) causes} another exception, the first
exception is usually caught and then the second exception is
thrown in response.  In other words, there is a causal
connection between the two exceptions.

In contrast, there are situations where two independent
exceptions can be thrown in sibling code blocks, in particular
in the {@code try} block of a {@code try}-with-resources
statement and the compiler-generated {@code finally} block
which closes the resource.

In these situations, only one of the thrown exceptions can be
propagated.  In the {@code try}-with-resources statement, when
there are two such exceptions, the exception originating from
the {@code try} block is propagated and the exception from the
{@code finally} block is added to the list of exceptions
suppressed by the exception from the {@code try} block.  As an
exception unwinds the stack, it can accumulate multiple
suppressed exceptions.

<p>An exception may have suppressed exceptions while also being
caused by another exception.  Whether or not an exception has a
cause is semantically known at the time of its creation, unlike
whether or not an exception will suppress other exceptions
which is typically only determined after an exception is
thrown.

<p>Note that programmer written code is also able to take
advantage of calling this method in situations where there are
multiple sibling exceptions and only one can be propagated.

@param exception the exception to be added to the list of
       suppressed exceptions
@throws IllegalArgumentException if {@code exception} is this
        throwable; a throwable cannot suppress itself.
@throws NullPointerException if {@code exception} is {@code null}
@since 1.7
"
      end

      classrelation 236546 // EMPTY_THROWABLE_ARRAY (<unidirectional association>)
	relation 236546 --->
	  a role_name "EMPTY_THROWABLE_ARRAY" multiplicity "[]" init_value " new Throwable[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 236546 // EMPTY_THROWABLE_ARRAY (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 616194 "getSuppressed"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all of the exceptions that were
suppressed, typically by the {@code try}-with-resources
statement, in order to deliver this exception.

If no exceptions were suppressed or {@linkplain
#Throwable(String, Throwable, boolean, boolean) suppression is
disabled}, an empty array is returned.  This method is
thread-safe.  Writes to the returned array do not affect future
calls to this method.

@return an array containing all of the exceptions that were
        suppressed to deliver this exception.
@since 1.7
"
      end
    end

    class 130050 "StackTraceElement"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An element in a stack trace, as returned by {@link
Throwable#getStackTrace()}.  Each element represents a single stack frame.
All stack frames except for the one at the top of the stack represent
a method invocation.  The frame at the top of the stack represents the
execution point at which the stack trace was generated.  Typically,
this is the point at which the throwable corresponding to the stack trace
was created.

@since  1.4
@author Josh Bloch
"
      classrelation 3169154 // <realization>
	relation 3169154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3169154 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3169282 // declaringClass (<unidirectional association>)
	relation 3169282 --->
	  a role_name "declaringClass" private
	    comment " Normally initialized by VM (public constructor added in 1.5)
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3169282 // declaringClass (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3169410 // methodName (<unidirectional association>)
	relation 3169410 --->
	  a role_name "methodName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3169410 // methodName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3169538 // fileName (<unidirectional association>)
	relation 3169538 --->
	  a role_name "fileName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3169538 // fileName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1683714 "lineNumber"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7091202 "StackTraceElement"
	public explicit_return_type ""
	nparams 4
	  param inout name "declaringClass" type class_ref 128130 // String
	  param inout name "methodName" type class_ref 128130 // String
	  param inout name "fileName" type class_ref 128130 // String
	  param in name "lineNumber" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a stack trace element representing the specified execution
point.

@param declaringClass the fully qualified name of the class containing
       the execution point represented by the stack trace element
@param methodName the name of the method containing the execution point
       represented by the stack trace element
@param fileName the name of the file containing the execution point
        represented by the stack trace element, or {@code null} if
        this information is unavailable
@param lineNumber the line number of the source line containing the
        execution point represented by this stack trace element, or
        a negative number if this information is unavailable. A value
        of -2 indicates that the method containing the execution point
        is a native method
@throws NullPointerException if {@code declaringClass} or
        {@code methodName} is null
@since 1.5
"
      end

      operation 7091330 "getFileName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the source file containing the execution point
represented by this stack trace element.  Generally, this corresponds
to the {@code SourceFile} attribute of the relevant {@code class}
file (as per <i>The Java Virtual Machine Specification</i>, Section
4.7.7).  In some systems, the name may refer to some source code unit
other than a file, such as an entry in source repository.

@return the name of the file containing the execution point
        represented by this stack trace element, or {@code null} if
        this information is unavailable.
"
      end

      operation 7091458 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the line number of the source line containing the execution
point represented by this stack trace element.  Generally, this is
derived from the {@code LineNumberTable} attribute of the relevant
{@code class} file (as per <i>The Java Virtual Machine
Specification</i>, Section 4.7.8).

@return the line number of the source line containing the execution
        point represented by this stack trace element, or a negative
        number if this information is unavailable.
"
      end

      operation 7091586 "getClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified name of the class containing the
execution point represented by this stack trace element.

@return the fully qualified name of the {@code Class} containing
        the execution point represented by this stack trace element.
"
      end

      operation 7091714 "getMethodName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method containing the execution point
represented by this stack trace element.  If the execution point is
contained in an instance or class initializer, this method will return
the appropriate <i>special method name</i>, {@code <init>} or
{@code <clinit>}, as per Section 3.9 of <i>The Java Virtual
Machine Specification</i>.

@return the name of the method containing the execution point
        represented by this stack trace element.
"
      end

      operation 7091842 "isNativeMethod"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the method containing the execution point
represented by this stack trace element is a native method.

@return {@code true} if the method containing the execution point
        represented by this stack trace element is a native method.
"
      end

      operation 7091970 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this stack trace element.  The
format of this string depends on the implementation, but the following
examples may be regarded as typical:
<ul>
<li>
  {@code \"MyClass.mash(MyClass.java:9)\"} - Here, {@code \"MyClass\"}
  is the <i>fully-qualified name</i> of the class containing the
  execution point represented by this stack trace element,
  {@code \"mash\"} is the name of the method containing the execution
  point, {@code \"MyClass.java\"} is the source file containing the
  execution point, and {@code \"9\"} is the line number of the source
  line containing the execution point.
<li>
  {@code \"MyClass.mash(MyClass.java)\"} - As above, but the line
  number is unavailable.
<li>
  {@code \"MyClass.mash(Unknown Source)\"} - As above, but neither
  the file name nor the line  number are available.
<li>
  {@code \"MyClass.mash(Native Method)\"} - As above, but neither
  the file name nor the line  number are available, and the method
  containing the execution point is known to be a native method.
</ul>
@see    Throwable#printStackTrace()
"
      end

      operation 7092098 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified object is another
{@code StackTraceElement} instance representing the same execution
point as this instance.  Two stack trace elements {@code a} and
{@code b} are equal if and only if:
<pre>{@code
    equals(a.getFileName(), b.getFileName()) &&
    a.getLineNumber() == b.getLineNumber()) &&
    equals(a.getClassName(), b.getClassName()) &&
    equals(a.getMethodName(), b.getMethodName())
}</pre>
where {@code equals} has the semantics of {@link
java.util.Objects#equals(Object, Object) Objects.equals}.

@param  obj the object to be compared with this stack trace element.
@return true if the specified object is another
        {@code StackTraceElement} instance representing the same
        execution point as this instance.
"
      end

      operation 7092226 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code value for this stack trace element.
"
      end

      attribute 1683842 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6992337162326171013L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 130306 "RuntimePermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for runtime permissions. A RuntimePermission
contains a name (also referred to as a \"target name\") but
no actions list; you either have the named permission
or you don't.

<P>
The target name is the name of the runtime permission (see below). The
naming convention follows the  hierarchical property naming convention.
Also, an asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match. For example: \"loadLibrary.*\" and \"*\" signify a
wildcard match, while \"*loadLibrary\" and \"a*b\" do not.
<P>
The following table lists all the possible RuntimePermission target names,
and for each provides a description of what the permission allows
and a discussion of the risks of granting code the permission.

<table border=1 cellpadding=5 summary=\"permission target name,
 what the target allows,and associated risks\">
<tr>
<th>Permission Target Name</th>
<th>What the Permission Allows</th>
<th>Risks of Allowing this Permission</th>
</tr>

<tr>
  <td>createClassLoader</td>
  <td>Creation of a class loader</td>
  <td>This is an extremely dangerous permission to grant.
Malicious applications that can instantiate their own class
loaders could then load their own rogue classes into the system.
These newly loaded classes could be placed into any protection
domain by the class loader, thereby automatically granting the
classes the permissions for that domain.</td>
</tr>

<tr>
  <td>getClassLoader</td>
  <td>Retrieval of a class loader (e.g., the class loader for the calling
class)</td>
  <td>This would grant an attacker permission to get the
class loader for a particular class. This is dangerous because
having access to a class's class loader allows the attacker to
load other classes available to that class loader. The attacker
would typically otherwise not have access to those classes.</td>
</tr>

<tr>
  <td>setContextClassLoader</td>
  <td>Setting of the context class loader used by a thread</td>
  <td>The context class loader is used by system code and extensions
when they need to lookup resources that might not exist in the system
class loader. Granting setContextClassLoader permission would allow
code to change which context class loader is used
for a particular thread, including system threads.</td>
</tr>

<tr>
  <td>enableContextClassLoaderOverride</td>
  <td>Subclass implementation of the thread context class loader methods</td>
  <td>The context class loader is used by system code and extensions
when they need to lookup resources that might not exist in the system
class loader. Granting enableContextClassLoaderOverride permission would allow
a subclass of Thread to override the methods that are used
to get or set the context class loader for a particular thread.</td>
</tr>

<tr>
  <td>closeClassLoader</td>
  <td>Closing of a ClassLoader</td>
  <td>Granting this permission allows code to close any URLClassLoader
that it has a reference to.</td>
</tr>

<tr>
  <td>setSecurityManager</td>
  <td>Setting of the security manager (possibly replacing an existing one)
</td>
  <td>The security manager is a class that allows
applications to implement a security policy. Granting the setSecurityManager
permission would allow code to change which security manager is used by
installing a different, possibly less restrictive security manager,
thereby bypassing checks that would have been enforced by the original
security manager.</td>
</tr>

<tr>
  <td>createSecurityManager</td>
  <td>Creation of a new security manager</td>
  <td>This gives code access to protected, sensitive methods that may
disclose information about other classes or the execution stack.</td>
</tr>

<tr>
  <td>getenv.{variable name}</td>
  <td>Reading of the value of the specified environment variable</td>
  <td>This would allow code to read the value, or determine the
      existence, of a particular environment variable.  This is
      dangerous if the variable contains confidential data.</td>
</tr>

<tr>
  <td>exitVM.{exit status}</td>
  <td>Halting of the Java Virtual Machine with the specified exit status</td>
  <td>This allows an attacker to mount a denial-of-service attack
by automatically forcing the virtual machine to halt.
Note: The \"exitVM.*\" permission is automatically granted to all code
loaded from the application class path, thus enabling applications
to terminate themselves. Also, the \"exitVM\" permission is equivalent to
\"exitVM.*\".</td>
</tr>

<tr>
  <td>shutdownHooks</td>
  <td>Registration and cancellation of virtual-machine shutdown hooks</td>
  <td>This allows an attacker to register a malicious shutdown
hook that interferes with the clean shutdown of the virtual machine.</td>
</tr>

<tr>
  <td>setFactory</td>
  <td>Setting of the socket factory used by ServerSocket or Socket,
or of the stream handler factory used by URL</td>
  <td>This allows code to set the actual implementation
for the socket, server socket, stream handler, or RMI socket factory.
An attacker may set a faulty implementation which mangles the data
stream.</td>
</tr>

<tr>
  <td>setIO</td>
  <td>Setting of System.out, System.in, and System.err</td>
  <td>This allows changing the value of the standard system streams.
An attacker may change System.in to monitor and
steal user input, or may set System.err to a \"null\" OutputStream,
which would hide any error messages sent to System.err. </td>
</tr>

<tr>
  <td>modifyThread</td>
  <td>Modification of threads, e.g., via calls to Thread
<tt>interrupt</tt>, <tt>stop</tt>, <tt>suspend</tt>,
<tt>resume</tt>, <tt>setDaemon</tt>, <tt>setPriority</tt>,
<tt>setName</tt> and <tt>setUncaughtExceptionHandler</tt>
methods</td>
<td>This allows an attacker to modify the behaviour of
any thread in the system.</td>
</tr>

<tr>
  <td>stopThread</td>
  <td>Stopping of threads via calls to the Thread <code>stop</code>
method</td>
  <td>This allows code to stop any thread in the system provided that it is
already granted permission to access that thread.
This poses as a threat, because that code may corrupt the system by
killing existing threads.</td>
</tr>

<tr>
  <td>modifyThreadGroup</td>
  <td>modification of thread groups, e.g., via calls to ThreadGroup
<code>destroy</code>, <code>getParent</code>, <code>resume</code>,
<code>setDaemon</code>, <code>setMaxPriority</code>, <code>stop</code>,
and <code>suspend</code> methods</td>
  <td>This allows an attacker to create thread groups and
set their run priority.</td>
</tr>

<tr>
  <td>getProtectionDomain</td>
  <td>Retrieval of the ProtectionDomain for a class</td>
  <td>This allows code to obtain policy information
for a particular code source. While obtaining policy information
does not compromise the security of the system, it does give
attackers additional information, such as local file names for
example, to better aim an attack.</td>
</tr>

<tr>
  <td>getFileSystemAttributes</td>
  <td>Retrieval of file system attributes</td>
  <td>This allows code to obtain file system information such as disk usage
      or disk space available to the caller.  This is potentially dangerous
      because it discloses information about the system hardware
      configuration and some information about the caller's privilege to
      write files.</td>
</tr>

<tr>
  <td>readFileDescriptor</td>
  <td>Reading of file descriptors</td>
  <td>This would allow code to read the particular file associated
      with the file descriptor read. This is dangerous if the file
      contains confidential data.</td>
</tr>

<tr>
  <td>writeFileDescriptor</td>
  <td>Writing to file descriptors</td>
  <td>This allows code to write to a particular file associated
      with the descriptor. This is dangerous because it may allow
      malicious code to plant viruses or at the very least, fill up
      your entire disk.</td>
</tr>

<tr>
  <td>loadLibrary.{library name}</td>
  <td>Dynamic linking of the specified library</td>
  <td>It is dangerous to allow an applet permission to load native code
libraries, because the Java security architecture is not designed to and
does not prevent malicious behavior at the level of native code.</td>
</tr>

<tr>
  <td>accessClassInPackage.{package name}</td>
  <td>Access to the specified package via a class loader's
<code>loadClass</code> method when that class loader calls
the SecurityManager <code>checkPackageAccess</code> method</td>
  <td>This gives code access to classes in packages
to which it normally does not have access. Malicious code
may use these classes to help in its attempt to compromise
security in the system.</td>
</tr>

<tr>
  <td>defineClassInPackage.{package name}</td>
  <td>Definition of classes in the specified package, via a class
loader's <code>defineClass</code> method when that class loader calls
the SecurityManager <code>checkPackageDefinition</code> method.</td>
  <td>This grants code permission to define a class
in a particular package. This is dangerous because malicious
code with this permission may define rogue classes in
trusted packages like <code>java.security</code> or <code>java.lang</code>,
for example.</td>
</tr>

<tr>
  <td>accessDeclaredMembers</td>
  <td>Access to the declared members of a class</td>
  <td>This grants code permission to query a class for its public,
protected, default (package) access, and private fields and/or
methods. Although the code would have
access to the private and protected field and method names, it would not
have access to the private/protected field data and would not be able
to invoke any private methods. Nevertheless, malicious code
may use this information to better aim an attack.
Additionally, it may invoke any public methods and/or access public fields
in the class.  This could be dangerous if
the code would normally not be able to invoke those methods and/or
access the fields  because
it can't cast the object to the class/interface with those methods
and fields.
</td>
</tr>
<tr>
  <td>queuePrintJob</td>
  <td>Initiation of a print job request</td>
  <td>This could print sensitive information to a printer,
or simply waste paper.</td>
</tr>

<tr>
  <td>getStackTrace</td>
  <td>Retrieval of the stack trace information of another thread.</td>
  <td>This allows retrieval of the stack trace information of
another thread.  This might allow malicious code to monitor the
execution of threads and discover vulnerabilities in applications.</td>
</tr>

<tr>
  <td>setDefaultUncaughtExceptionHandler</td>
  <td>Setting the default handler to be used when a thread
  terminates abruptly due to an uncaught exception</td>
  <td>This allows an attacker to register a malicious
  uncaught exception handler that could interfere with termination
  of a thread</td>
</tr>

<tr>
  <td>preferences</td>
  <td>Represents the permission required to get access to the
  java.util.prefs.Preferences implementations user or system root
  which in turn allows retrieval or update operations within the
  Preferences persistent backing store.) </td>
  <td>This permission allows the user to read from or write to the
  preferences backing store if the user running the code has
  sufficient OS privileges to read/write to that backing store.
  The actual backing store may reside within a traditional filesystem
  directory or within a registry depending on the platform OS</td>
</tr>

<tr>
  <td>usePolicy</td>
  <td>Granting this permission disables the Java Plug-In's default
  security prompting behavior.</td>
  <td>For more information, refer to Java Plug-In's guides, <a href=
  \"../../../technotes/guides/plugin/developer_guide/security.html\">
  Applet Security Basics</a> and <a href=
  \"../../../technotes/guides/plugin/developer_guide/rsa_how.html#use\">
  usePolicy Permission</a>.</td>
</tr>
</table>

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager


@author Marianne Mueller
@author Roland Schemers
"
      classrelation 3167234 // <generalisation>
	relation 3167234 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3167234 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      attribute 1681154 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7399184964622342223L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7079682 "RuntimePermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RuntimePermission with the specified name.
The name is the symbolic name of the RuntimePermission, such as
\"exit\", \"setFactory\", etc. An asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match.

@param name the name of the RuntimePermission.

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty.
"
      end

      operation 7079810 "RuntimePermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new RuntimePermission object with the specified name.
The name is the symbolic name of the RuntimePermission, and the
actions String is currently unused and should be null.

@param name the name of the RuntimePermission.
@param actions should be null.

@throws NullPointerException if <code>name</code> is <code>null</code>.
@throws IllegalArgumentException if <code>name</code> is empty.
"
      end
    end

    class 130818 "Class"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Instances of the class {@code Class} represent classes and
interfaces in a running Java application.  An enum is a kind of
class and an annotation is a kind of interface.  Every array also
belongs to a class that is reflected as a {@code Class} object
that is shared by all arrays with the same element type and number
of dimensions.  The primitive Java types ({@code boolean},
{@code byte}, {@code char}, {@code short},
{@code int}, {@code long}, {@code float}, and
{@code double}), and the keyword {@code void} are also
represented as {@code Class} objects.

<p> {@code Class} has no public constructor. Instead {@code Class}
objects are constructed automatically by the Java Virtual Machine as classes
are loaded and by calls to the {@code defineClass} method in the class
loader.

<p> The following example uses a {@code Class} object to print the
class name of an object:

<blockquote><pre>
    void printClassName(Object obj) {
        System.out.println(\"The class of \" + obj +
                           \" is \" + obj.getClass().getName());
    }
</pre></blockquote>

<p> It is also possible to get the {@code Class} object for a named
type (or for void) using a class literal.  See Section 15.8.2 of
<cite>The Java&trade; Language Specification</cite>.
For example:

<blockquote>
    {@code System.out.println(\"The name of class Foo is: \"+Foo.class.getName());}
</blockquote>

@param <T> the type of the class modeled by this {@code Class}
object.  For example, the type of {@code String.class} is {@code
Class<String>}.  Use {@code Class<?>} if the class being modeled is
unknown.

@author  unascribed
@see     java.lang.ClassLoader#defineClass(byte[], int, int)
@since   JDK1.0
"
      classrelation 3150466 // <realization>
	relation 3150466 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3150466 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3150722 // <realization>
	relation 3150722 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3150722 // <realization>
	  b parent class_ref 930818 // GenericDeclaration
      end

      classrelation 3150850 // <realization>
	relation 3150850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3150850 // <realization>
	  b parent class_ref 490114 // Type
      end

      classrelation 3150978 // <realization>
	relation 3150978 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3150978 // <realization>
	  b parent class_ref 494722 // AnnotatedElement
      end

      attribute 1665922 "ANNOTATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00002000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1666050 "ENUM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00004000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1666178 "SYNTHETIC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00001000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6985986 "registerNatives"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      extra_member 157186 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6986114 "Class"
	cpp_inline private explicit_return_type ""
	nparams 1
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private constructor. Only the Java Virtual Machine creates Class objects.
This constructor is not used and prevents the default constructor being
generated.
"
      end

      operation 6986242 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the object to a string. The string representation is the
string \"class\" or \"interface\", followed by a space, and then by the
fully qualified name of the class in the format returned by
{@code getName}.  If this {@code Class} object represents a
primitive type, this method returns the name of the primitive type.  If
this {@code Class} object represents void this method returns
\"void\".

@return a string representation of this class object.
"
      end

      operation 6986370 "toGenericString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing this {@code Class}, including
information about modifiers and type parameters.

The string is formatted as a list of type modifiers, if any,
followed by the kind of type (empty string for primitive types
and {@code class}, {@code enum}, {@code interface}, or
<code>&#64;</code>{@code interface}, as appropriate), followed
by the type's name, followed by an angle-bracketed
comma-separated list of the type's type parameters, if any.

A space is used to separate modifiers from one another and to
separate any modifiers from the kind of type. The modifiers
occur in canonical order. If there are no type parameters, the
type parameter list is elided.

<p>Note that since information about the runtime representation
of a type is being generated, modifiers not present on the
originating source code or illegal on the originating source
code may be present.

@return a string describing this {@code Class}, including
information about modifiers and type parameters

@since 1.8
"
      end

      operation 6986498 "forName"
	class_operation cpp_inline public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the {@code Class} object associated with the class or
interface with the given string name.  Invoking this method is
equivalent to:

<blockquote>
 {@code Class.forName(className, true, currentLoader)}
</blockquote>

where {@code currentLoader} denotes the defining class loader of
the current class.

<p> For example, the following code fragment returns the
runtime {@code Class} descriptor for the class named
{@code java.lang.Thread}:

<blockquote>
  {@code Class t = Class.forName(\"java.lang.Thread\")}
</blockquote>
<p>
A call to {@code forName(\"X\")} causes the class named
{@code X} to be initialized.

@param      className   the fully qualified name of the desired class.
@return     the {@code Class} object for the class with the
            specified name.
@exception LinkageError if the linkage fails
@exception ExceptionInInitializerError if the initialization provoked
           by this method fails
@exception ClassNotFoundException if the class cannot be located
"
      end

      operation 6986626 "forName"
	class_operation cpp_inline public return_type class_ref 130818 // Class
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "initialize" explicit_type "boolean"
	  param inout name "loader" type class_ref 129026 // ClassLoader
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the {@code Class} object associated with the class or
interface with the given string name, using the given class loader.
Given the fully qualified name for a class or interface (in the same
format returned by {@code getName}) this method attempts to
locate, load, and link the class or interface.  The specified class
loader is used to load the class or interface.  If the parameter
{@code loader} is null, the class is loaded through the bootstrap
class loader.  The class is initialized only if the
{@code initialize} parameter is {@code true} and if it has
not been initialized earlier.

<p> If {@code name} denotes a primitive type or void, an attempt
will be made to locate a user-defined class in the unnamed package whose
name is {@code name}. Therefore, this method cannot be used to
obtain any of the {@code Class} objects representing primitive
types or void.

<p> If {@code name} denotes an array class, the component type of
the array class is loaded but not initialized.

<p> For example, in an instance method the expression:

<blockquote>
 {@code Class.forName(\"Foo\")}
</blockquote>

is equivalent to:

<blockquote>
 {@code Class.forName(\"Foo\", true, this.getClass().getClassLoader())}
</blockquote>

Note that this method throws errors related to loading, linking or
initializing as specified in Sections 12.2, 12.3 and 12.4 of <em>The
Java Language Specification</em>.
Note that this method does not check whether the requested class
is accessible to its caller.

<p> If the {@code loader} is {@code null}, and a security
manager is present, and the caller's class loader is not null, then this
method calls the security manager's {@code checkPermission} method
with a {@code RuntimePermission(\"getClassLoader\")} permission to
ensure it's ok to access the bootstrap class loader.

@param name       fully qualified name of the desired class
@param initialize if {@code true} the class will be initialized.
                  See Section 12.4 of <em>The Java Language Specification</em>.
@param loader     class loader from which the class must be loaded
@return           class object representing the desired class

@exception LinkageError if the linkage fails
@exception ExceptionInInitializerError if the initialization provoked
           by this method fails
@exception ClassNotFoundException if the class cannot be located by
           the specified class loader

@see       java.lang.Class#forName(String)
@see       java.lang.ClassLoader
@since     1.2
"
      end

      operation 6986754 "forName0"
	class_operation cpp_inline private return_type class_ref 130818 // Class
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "initialize" explicit_type "boolean"
	  param inout name "loader" type class_ref 129026 // ClassLoader
	  param inout name "caller" type class_ref 130818 // Class
	nexceptions 1
	  exception class_ref 169730 // ClassNotFoundException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<?> ${p3}${)}${throws};
s"
	
	
	
	comment " Called after security check for system loader access checks have been made. "
      end

      operation 6986882 "newInstance"
	cpp_inline public explicit_return_type "T"
	nparams 0
	nexceptions 2
	  exception class_ref 193282 // InstantiationException
	  exception class_ref 321538 // IllegalAccessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Creates a new instance of the class represented by this {@code Class}
object.  The class is instantiated as if by a {@code new}
expression with an empty argument list.  The class is initialized if it
has not already been initialized.

<p>Note that this method propagates any exception thrown by the
nullary constructor, including a checked exception.  Use of
this method effectively bypasses the compile-time exception
checking that would otherwise be performed by the compiler.
The {@link
java.lang.reflect.Constructor#newInstance(java.lang.Object...)
Constructor.newInstance} method avoids this problem by wrapping
any exception thrown by the constructor in a (checked) {@link
java.lang.reflect.InvocationTargetException}.

@return  a newly allocated instance of the class represented by this
         object.
@throws  IllegalAccessException  if the class or its nullary
         constructor is not accessible.
@throws  InstantiationException
         if this {@code Class} represents an abstract class,
         an interface, an array class, a primitive type, or void;
         or if the class has no nullary constructor;
         or if the instantiation fails for some other reason.
@throws  ExceptionInInitializerError if the initialization
         provoked by this method fails.
@throws  SecurityException
         If a security manager, <i>s</i>, is present and
         the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class.
"
      end

      classrelation 3151106 // cachedConstructor (<unidirectional association>)
	relation 3151106 --->
	  a role_name "cachedConstructor" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 3151106 // cachedConstructor (<unidirectional association>)
	  b parent class_ref 189186 // Constructor
      end

      classrelation 3151234 // newInstanceCallerCache (<unidirectional association>)
	relation 3151234 --->
	  a role_name "newInstanceCallerCache" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3151234 // newInstanceCallerCache (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 6987010 "isInstance"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Determines if the specified {@code Object} is assignment-compatible
with the object represented by this {@code Class}.  This method is
the dynamic equivalent of the Java language {@code instanceof}
operator. The method returns {@code true} if the specified
{@code Object} argument is non-null and can be cast to the
reference type represented by this {@code Class} object without
raising a {@code ClassCastException.} It returns {@code false}
otherwise.

<p> Specifically, if this {@code Class} object represents a
declared class, this method returns {@code true} if the specified
{@code Object} argument is an instance of the represented class (or
of any of its subclasses); it returns {@code false} otherwise. If
this {@code Class} object represents an array class, this method
returns {@code true} if the specified {@code Object} argument
can be converted to an object of the array class by an identity
conversion or by a widening reference conversion; it returns
{@code false} otherwise. If this {@code Class} object
represents an interface, this method returns {@code true} if the
class or any superclass of the specified {@code Object} argument
implements this interface; it returns {@code false} otherwise. If
this {@code Class} object represents a primitive type, this method
returns {@code false}.

@param   obj the object to check
@return  true if {@code obj} is an instance of this class

@since JDK1.1
"
      end

      operation 6987138 "isAssignableFrom"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "cls" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
s"
	
	
	
	comment "Determines if the class or interface represented by this
{@code Class} object is either the same as, or is a superclass or
superinterface of, the class or interface represented by the specified
{@code Class} parameter. It returns {@code true} if so;
otherwise it returns {@code false}. If this {@code Class}
object represents a primitive type, this method returns
{@code true} if the specified {@code Class} parameter is
exactly this {@code Class} object; otherwise it returns
{@code false}.

<p> Specifically, this method tests whether the type represented by the
specified {@code Class} parameter can be converted to the type
represented by this {@code Class} object via an identity conversion
or via a widening reference conversion. See <em>The Java Language
Specification</em>, sections 5.1.1 and 5.1.4 , for details.

@param cls the {@code Class} object to be checked
@return the {@code boolean} value indicating whether objects of the
type {@code cls} can be assigned to objects of this class
@exception NullPointerException if the specified Class parameter is
           null.
@since JDK1.1
"
      end

      operation 6987266 "isInterface"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Determines if the specified {@code Class} object represents an
interface type.

@return  {@code true} if this object represents an interface;
         {@code false} otherwise.
"
      end

      operation 6987394 "isArray"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Determines if this {@code Class} object represents an array class.

@return  {@code true} if this object represents an array class;
         {@code false} otherwise.
@since   JDK1.1
"
      end

      operation 6987522 "isPrimitive"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Determines if the specified {@code Class} object represents a
primitive type.

<p> There are nine predefined {@code Class} objects to represent
the eight primitive types and void.  These are created by the Java
Virtual Machine, and have the same names as the primitive types that
they represent, namely {@code boolean}, {@code byte},
{@code char}, {@code short}, {@code int},
{@code long}, {@code float}, and {@code double}.

<p> These objects may only be accessed via the following public static
final variables, and are the only {@code Class} objects for which
this method returns {@code true}.

@return true if and only if this class represents a primitive type

@see     java.lang.Boolean#TYPE
@see     java.lang.Character#TYPE
@see     java.lang.Byte#TYPE
@see     java.lang.Short#TYPE
@see     java.lang.Integer#TYPE
@see     java.lang.Long#TYPE
@see     java.lang.Float#TYPE
@see     java.lang.Double#TYPE
@see     java.lang.Void#TYPE
@since JDK1.1
"
      end

      operation 6987650 "isAnnotation"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this {@code Class} object represents an annotation
type.  Note that if this method returns true, {@link #isInterface()}
would also return true, as all annotation types are also interfaces.

@return {@code true} if this class object represents an annotation
     type; {@code false} otherwise
@since 1.5
"
      end

      operation 6987778 "isSynthetic"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this class is a synthetic class;
returns {@code false} otherwise.
@return {@code true} if and only if this class is a synthetic class as
        defined by the Java Language Specification.
@jls 13.1 The Form of a Binary
@since 1.5
"
      end

      operation 6987906 "getName"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the  name of the entity (class, interface, array class,
primitive type, or void) represented by this {@code Class} object,
as a {@code String}.

<p> If this class object represents a reference type that is not an
array type then the binary name of the class is returned, as specified
by
<cite>The Java&trade; Language Specification</cite>.

<p> If this class object represents a primitive type or void, then the
name returned is a {@code String} equal to the Java language
keyword corresponding to the primitive type or void.

<p> If this class object represents a class of arrays, then the internal
form of the name consists of the name of the element type preceded by
one or more '{@code [}' characters representing the depth of the array
nesting.  The encoding of element type names is as follows:

<blockquote><table summary=\"Element types and encodings\">
<tr><th> Element Type <th> &nbsp;&nbsp;&nbsp; <th> Encoding
<tr><td> boolean      <td> &nbsp;&nbsp;&nbsp; <td align=center> Z
<tr><td> byte         <td> &nbsp;&nbsp;&nbsp; <td align=center> B
<tr><td> char         <td> &nbsp;&nbsp;&nbsp; <td align=center> C
<tr><td> class or interface
                      <td> &nbsp;&nbsp;&nbsp; <td align=center> L<i>classname</i>;
<tr><td> double       <td> &nbsp;&nbsp;&nbsp; <td align=center> D
<tr><td> float        <td> &nbsp;&nbsp;&nbsp; <td align=center> F
<tr><td> int          <td> &nbsp;&nbsp;&nbsp; <td align=center> I
<tr><td> long         <td> &nbsp;&nbsp;&nbsp; <td align=center> J
<tr><td> short        <td> &nbsp;&nbsp;&nbsp; <td align=center> S
</table></blockquote>

<p> The class or interface name <i>classname</i> is the binary name of
the class specified above.

<p> Examples:
<blockquote><pre>
String.class.getName()
    returns \"java.lang.String\"
byte.class.getName()
    returns \"byte\"
(new Object[3]).getClass().getName()
    returns \"[Ljava.lang.Object;\"
(new int[3][4][5][6][7][8][9]).getClass().getName()
    returns \"[[[[[[[I\"
</pre></blockquote>

@return  the name of the class or interface
         represented by this object.
"
      end

      classrelation 3151362 // name (<unidirectional association>)
	relation 3151362 --->
	  a role_name "name" private
	    comment " cache the name to reduce the number of calls into the VM
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3151362 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6988034 "getName0"
	cpp_inline private return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 6988162 "getClassLoader"
	cpp_inline public return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the class loader for the class.  Some implementations may use
null to represent the bootstrap class loader. This method will return
null in such implementations if this class was loaded by the bootstrap
class loader.

<p> If a security manager is present, and the caller's class loader is
not null and the caller's class loader is not the same as or an ancestor of
the class loader for the class whose class loader is requested, then
this method calls the security manager's {@code checkPermission}
method with a {@code RuntimePermission(\"getClassLoader\")}
permission to ensure it's ok to access the class loader for the class.

<p>If this object
represents a primitive type or void, null is returned.

@return  the class loader that loaded the class or interface
         represented by this object.
@throws SecurityException
   if a security manager exists and its
   {@code checkPermission} method denies
   access to the class loader for the class.
@see java.lang.ClassLoader
@see SecurityManager#checkPermission
@see java.lang.RuntimePermission
"
      end

      operation 6988290 "getClassLoader0"
	cpp_inline package return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package-private to allow ClassLoader access"
      end

      classrelation 3151490 // classLoader (<unidirectional association>)
	relation 3151490 --->
	  a role_name "classLoader" const_relation private
	    comment " Initialized in JVM not by private constructor
 This field is filtered from reflection access, i.e. getDeclaredField
 will throw NoSuchFieldException
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3151490 // classLoader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 6988418 "getTypeParameters"
	cpp_inline public return_type class_ref 930946 // TypeVariable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Class<T>>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array of {@code TypeVariable} objects that represent the
type variables declared by the generic declaration represented by this
{@code GenericDeclaration} object, in declaration order.  Returns an
array of length 0 if the underlying generic declaration declares no type
variables.

@return an array of {@code TypeVariable} objects that represent
    the type variables declared by this generic declaration
@throws java.lang.reflect.GenericSignatureFormatError if the generic
    signature of this generic declaration does not conform to
    the format specified in
    <cite>The Java&trade; Virtual Machine Specification</cite>
@since 1.5
"
      end

      operation 6988546 "getSuperclass"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<? super T> ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the {@code Class} representing the superclass of the entity
(class, interface, primitive type or void) represented by this
{@code Class}.  If this {@code Class} represents either the
{@code Object} class, an interface, a primitive type, or void, then
null is returned.  If this object represents an array class then the
{@code Class} object representing the {@code Object} class is
returned.

@return the superclass of the class represented by this object.
"
      end

      operation 6988674 "getGenericSuperclass"
	cpp_inline public return_type class_ref 490114 // Type
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Type} representing the direct superclass of
the entity (class, interface, primitive type or void) represented by
this {@code Class}.

<p>If the superclass is a parameterized type, the {@code Type}
object returned must accurately reflect the actual type
parameters used in the source code. The parameterized type
representing the superclass is created if it had not been
created before. See the declaration of {@link
java.lang.reflect.ParameterizedType ParameterizedType} for the
semantics of the creation process for parameterized types.  If
this {@code Class} represents either the {@code Object}
class, an interface, a primitive type, or void, then null is
returned.  If this object represents an array class then the
{@code Class} object representing the {@code Object} class is
returned.

@throws java.lang.reflect.GenericSignatureFormatError if the generic
    class signature does not conform to the format specified in
    <cite>The Java&trade; Virtual Machine Specification</cite>
@throws TypeNotPresentException if the generic superclass
    refers to a non-existent type declaration
@throws java.lang.reflect.MalformedParameterizedTypeException if the
    generic superclass refers to a parameterized type that cannot be
    instantiated  for any reason
@return the superclass of the class represented by this object
@since 1.5
"
      end

      operation 6988802 "getPackage"
	cpp_inline public return_type class_ref 320002 // Package
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the package for this class.  The class loader of this class is used
to find the package.  If the class was loaded by the bootstrap class
loader the set of packages loaded from CLASSPATH is searched to find the
package of the class. Null is returned if no package object was created
by the class loader of this class.

<p> Packages have attributes for versions and specifications only if the
information was defined in the manifests that accompany the classes, and
if the class loader created the package instance with the attributes
from the manifest.

@return the package of the class, or null if no package
        information is available from the archive or codebase.
"
      end

      operation 6988930 "getInterfaces"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the interfaces implemented by the class or interface
represented by this object.

<p> If this object represents a class, the return value is an array
containing objects representing all interfaces implemented by the
class. The order of the interface objects in the array corresponds to
the order of the interface names in the {@code implements} clause
of the declaration of the class represented by this object. For
example, given the declaration:
<blockquote>
{@code class Shimmer implements FloorWax, DessertTopping { ... }}
</blockquote>
suppose the value of {@code s} is an instance of
{@code Shimmer}; the value of the expression:
<blockquote>
{@code s.getClass().getInterfaces()[0]}
</blockquote>
is the {@code Class} object that represents interface
{@code FloorWax}; and the value of:
<blockquote>
{@code s.getClass().getInterfaces()[1]}
</blockquote>
is the {@code Class} object that represents interface
{@code DessertTopping}.

<p> If this object represents an interface, the array contains objects
representing all interfaces extended by the interface. The order of the
interface objects in the array corresponds to the order of the interface
names in the {@code extends} clause of the declaration of the
interface represented by this object.

<p> If this object represents a class or interface that implements no
interfaces, the method returns an array of length 0.

<p> If this object represents a primitive type or void, the method
returns an array of length 0.

<p> If this {@code Class} object represents an array type, the
interfaces {@code Cloneable} and {@code java.io.Serializable} are
returned in that order.

@return an array of interfaces implemented by this class.
"
      end

      operation 6989058 "getInterfaces0"
	cpp_inline private return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?>[] ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 6989186 "getGenericInterfaces"
	cpp_inline public return_type class_ref 490114 // Type
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Type}s representing the interfaces
directly implemented by the class or interface represented by
this object.

<p>If a superinterface is a parameterized type, the
{@code Type} object returned for it must accurately reflect
the actual type parameters used in the source code. The
parameterized type representing each superinterface is created
if it had not been created before. See the declaration of
{@link java.lang.reflect.ParameterizedType ParameterizedType}
for the semantics of the creation process for parameterized
types.

<p> If this object represents a class, the return value is an
array containing objects representing all interfaces
implemented by the class. The order of the interface objects in
the array corresponds to the order of the interface names in
the {@code implements} clause of the declaration of the class
represented by this object.  In the case of an array class, the
interfaces {@code Cloneable} and {@code Serializable} are
returned in that order.

<p>If this object represents an interface, the array contains
objects representing all interfaces directly extended by the
interface.  The order of the interface objects in the array
corresponds to the order of the interface names in the
{@code extends} clause of the declaration of the interface
represented by this object.

<p>If this object represents a class or interface that
implements no interfaces, the method returns an array of length
0.

<p>If this object represents a primitive type or void, the
method returns an array of length 0.

@throws java.lang.reflect.GenericSignatureFormatError
    if the generic class signature does not conform to the format
    specified in
    <cite>The Java&trade; Virtual Machine Specification</cite>
@throws TypeNotPresentException if any of the generic
    superinterfaces refers to a non-existent type declaration
@throws java.lang.reflect.MalformedParameterizedTypeException
    if any of the generic superinterfaces refer to a parameterized
    type that cannot be instantiated for any reason
@return an array of interfaces implemented by this class
@since 1.5
"
      end

      operation 6989314 "getComponentType"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the {@code Class} representing the component type of an
array.  If this class does not represent an array class this method
returns null.

@return the {@code Class} representing the component type of this
class if this class is an array
@see     java.lang.reflect.Array
@since JDK1.1
"
      end

      operation 6989442 "getModifiers"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the Java language modifiers for this class or interface, encoded
in an integer. The modifiers consist of the Java Virtual Machine's
constants for {@code public}, {@code protected},
{@code private}, {@code final}, {@code static},
{@code abstract} and {@code interface}; they should be decoded
using the methods of class {@code Modifier}.

<p> If the underlying class is an array class, then its
{@code public}, {@code private} and {@code protected}
modifiers are the same as those of its component type.  If this
{@code Class} represents a primitive type or void, its
{@code public} modifier is always {@code true}, and its
{@code protected} and {@code private} modifiers are always
{@code false}. If this object represents an array class, a
primitive type or void, then its {@code final} modifier is always
{@code true} and its interface modifier is always
{@code false}. The values of its other modifiers are not determined
by this specification.

<p> The modifier encodings are defined in <em>The Java Virtual Machine
Specification</em>, table 4.1.

@return the {@code int} representing the modifiers for this class
@see     java.lang.reflect.Modifier
@since JDK1.1
"
      end

      operation 6989570 "getSigners"
	cpp_inline public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
	comment "Gets the signers of this class.

@return  the signers of this class, or null if there are no signers.  In
         particular, this method returns null if this object represents
         a primitive type or void.
@since   JDK1.1
"
      end

      operation 6989698 "setSigners"
	cpp_inline package explicit_return_type "void"
	nparams 1
	  param inout name "signers" type class_ref 129538 // Object
	multiplicity "[]"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
s"
	
	
	
	comment "Set the signers of this class.
"
      end

      operation 6989826 "getEnclosingMethod"
	cpp_inline public return_type class_ref 137858 // Method
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "If this {@code Class} object represents a local or anonymous
class within a method, returns a {@link
java.lang.reflect.Method Method} object representing the
immediately enclosing method of the underlying class. Returns
{@code null} otherwise.

In particular, this method returns {@code null} if the underlying
class is a local or anonymous class immediately enclosed by a type
declaration, instance initializer or static initializer.

@return the immediately enclosing method of the underlying class, if
    that class is a local or anonymous class; otherwise {@code null}.

@throws SecurityException
        If a security manager, <i>s</i>, is present and any of the
        following conditions is met:

        <ul>

        <li> the caller's class loader is not the same as the
        class loader of the enclosing class and invocation of
        {@link SecurityManager#checkPermission
        s.checkPermission} method with
        {@code RuntimePermission(\"accessDeclaredMembers\")}
        denies access to the methods within the enclosing class

        <li> the caller's class loader is not the same as or an
        ancestor of the class loader for the enclosing class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of the enclosing class

        </ul>
@since 1.5
"
      end

      operation 6989954 "getEnclosingMethod0"
	cpp_inline private return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
      end

      class 931074 "EnclosingMethodInfo"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3151618 // enclosingClass (<unidirectional association>)
	  relation 3151618 --->
	    a role_name "enclosingClass" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 3151618 // enclosingClass (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 3151746 // name (<unidirectional association>)
	  relation 3151746 --->
	    a role_name "name" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3151746 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3151874 // descriptor (<unidirectional association>)
	  relation 3151874 --->
	    a role_name "descriptor" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3151874 // descriptor (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 6990210 "EnclosingMethodInfo"
	  cpp_inline private explicit_return_type ""
	  nparams 1
	    param inout name "enclosingInfo" type class_ref 129538 // Object
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990338 "isPartial"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990466 "isConstructor"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990594 "isMethod"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990722 "getEnclosingClass"
	  cpp_inline package return_type class_ref 130818 // Class
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990850 "getName"
	  cpp_inline package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6990978 "getDescriptor"
	  cpp_inline package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6990082 "getEnclosingMethodInfo"
	cpp_inline private return_type class_ref 931074 // EnclosingMethodInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6991106 "toClass"
	class_operation cpp_inline private return_type class_ref 130818 // Class
	nparams 1
	  param inout name "o" type class_ref 490114 // Type
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6991234 "getEnclosingConstructor"
	cpp_inline public return_type class_ref 189186 // Constructor
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "If this {@code Class} object represents a local or anonymous
class within a constructor, returns a {@link
java.lang.reflect.Constructor Constructor} object representing
the immediately enclosing constructor of the underlying
class. Returns {@code null} otherwise.  In particular, this
method returns {@code null} if the underlying class is a local
or anonymous class immediately enclosed by a type declaration,
instance initializer or static initializer.

@return the immediately enclosing constructor of the underlying class, if
    that class is a local or anonymous class; otherwise {@code null}.
@throws SecurityException
        If a security manager, <i>s</i>, is present and any of the
        following conditions is met:

        <ul>

        <li> the caller's class loader is not the same as the
        class loader of the enclosing class and invocation of
        {@link SecurityManager#checkPermission
        s.checkPermission} method with
        {@code RuntimePermission(\"accessDeclaredMembers\")}
        denies access to the constructors within the enclosing class

        <li> the caller's class loader is not the same as or an
        ancestor of the class loader for the enclosing class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of the enclosing class

        </ul>
@since 1.5
"
      end

      operation 6991362 "getDeclaringClass"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "If the class or interface represented by this {@code Class} object
is a member of another class, returns the {@code Class} object
representing the class in which it was declared.  This method returns
null if this class or interface is not a member of any other class.  If
this {@code Class} object represents an array class, a primitive
type, or void,then this method returns null.

@return the declaring class for this class
@throws SecurityException
        If a security manager, <i>s</i>, is present and the caller's
        class loader is not the same as or an ancestor of the class
        loader for the declaring class and invocation of {@link
        SecurityManager#checkPackageAccess s.checkPackageAccess()}
        denies access to the package of the declaring class
@since JDK1.1
"
      end

      operation 6991490 "getDeclaringClass0"
	cpp_inline private return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 6991618 "getEnclosingClass"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns the immediately enclosing class of the underlying
class.  If the underlying class is a top level class this
method returns {@code null}.
@return the immediately enclosing class of the underlying class
@exception  SecurityException
            If a security manager, <i>s</i>, is present and the caller's
            class loader is not the same as or an ancestor of the class
            loader for the enclosing class and invocation of {@link
            SecurityManager#checkPackageAccess s.checkPackageAccess()}
            denies access to the package of the enclosing class
@since 1.5
"
      end

      operation 6991746 "getSimpleName"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the simple name of the underlying class as given in the
source code. Returns an empty string if the underlying class is
anonymous.

<p>The simple name of an array is the simple name of the
component type with \"[]\" appended.  In particular the simple
name of an array whose component type is anonymous is \"[]\".

@return the simple name of the underlying class
@since 1.5
"
      end

      operation 6991874 "getTypeName"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an informative string for the name of this type.

@return an informative string for the name of this type
@since 1.8
"
      end

      operation 6992002 "isAsciiDigit"
	class_operation cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Character.isDigit answers {@code true} to some non-ascii
digits.  This one does not.
"
      end

      operation 6992130 "getCanonicalName"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical name of the underlying class as
defined by the Java Language Specification.  Returns null if
the underlying class does not have a canonical name (i.e., if
it is a local or anonymous class or an array whose component
type does not have a canonical name).
@return the canonical name of the underlying class if it exists, and
{@code null} otherwise.
@since 1.5
"
      end

      operation 6992258 "isAnonymousClass"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if and only if the underlying class
is an anonymous class.

@return {@code true} if and only if this class is an anonymous class.
@since 1.5
"
      end

      operation 6992386 "isLocalClass"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if and only if the underlying class
is a local class.

@return {@code true} if and only if this class is a local class.
@since 1.5
"
      end

      operation 6992514 "isMemberClass"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if and only if the underlying class
is a member class.

@return {@code true} if and only if this class is a member class.
@since 1.5
"
      end

      operation 6992642 "getSimpleBinaryName"
	cpp_inline private return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"simple binary name\" of the underlying class, i.e.,
the binary name without the leading enclosing class name.
Returns {@code null} if the underlying class is a top level
class.
"
      end

      operation 6992770 "isLocalOrAnonymousClass"
	cpp_inline private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this is a local class or an anonymous
class.  Returns {@code false} otherwise.
"
      end

      operation 6992898 "getClasses"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array containing {@code Class} objects representing all
the public classes and interfaces that are members of the class
represented by this {@code Class} object.  This includes public
class and interface members inherited from superclasses and public class
and interface members declared by the class.  This method returns an
array of length 0 if this {@code Class} object has no public member
classes or interfaces.  This method also returns an array of length 0 if
this {@code Class} object represents a primitive type, an array
class, or void.

@return the array of {@code Class} objects representing the public
        members of this class
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@since JDK1.1
"
      end

      operation 6993026 "getFields"
	cpp_inline public return_type class_ref 189698 // Field
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array containing {@code Field} objects reflecting all
the accessible public fields of the class or interface represented by
this {@code Class} object.

<p> If this {@code Class} object represents a class or interface with no
no accessible public fields, then this method returns an array of length
0.

<p> If this {@code Class} object represents a class, then this method
returns the public fields of the class and of all its superclasses.

<p> If this {@code Class} object represents an interface, then this
method returns the fields of the interface and of all its
superinterfaces.

<p> If this {@code Class} object represents an array type, a primitive
type, or void, then this method returns an array of length 0.

<p> The elements in the returned array are not sorted and are not in any
particular order.

@return the array of {@code Field} objects representing the
        public fields
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@since JDK1.1
@jls 8.2 Class Members
@jls 8.3 Field Declarations
"
      end

      operation 6993154 "getMethods"
	cpp_inline public return_type class_ref 137858 // Method
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array containing {@code Method} objects reflecting all the
public methods of the class or interface represented by this {@code
Class} object, including those declared by the class or interface and
those inherited from superclasses and superinterfaces.

<p> If this {@code Class} object represents a type that has multiple
public methods with the same name and parameter types, but different
return types, then the returned array has a {@code Method} object for
each such method.

<p> If this {@code Class} object represents a type with a class
initialization method {@code <clinit>}, then the returned array does
<em>not</em> have a corresponding {@code Method} object.

<p> If this {@code Class} object represents an array type, then the
returned array has a {@code Method} object for each of the public
methods inherited by the array type from {@code Object}. It does not
contain a {@code Method} object for {@code clone()}.

<p> If this {@code Class} object represents an interface then the
returned array does not contain any implicitly declared methods from
{@code Object}. Therefore, if no methods are explicitly declared in
this interface or any of its superinterfaces then the returned array
has length 0. (Note that a {@code Class} object which represents a class
always has public methods, inherited from {@code Object}.)

<p> If this {@code Class} object represents a primitive type or void,
then the returned array has length 0.

<p> Static methods declared in superinterfaces of the class or interface
represented by this {@code Class} object are not considered members of
the class or interface.

<p> The elements in the returned array are not sorted and are not in any
particular order.

@return the array of {@code Method} objects representing the
        public methods of this class
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@jls 8.2 Class Members
@jls 8.4 Method Declarations
@since JDK1.1
"
      end

      operation 6993282 "getConstructors"
	cpp_inline public return_type class_ref 189186 // Constructor
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array containing {@code Constructor} objects reflecting
all the public constructors of the class represented by this
{@code Class} object.  An array of length 0 is returned if the
class has no public constructors, or if the class is an array class, or
if the class reflects a primitive type or void.

Note that while this method returns an array of {@code
Constructor<T>} objects (that is an array of constructors from
this class), the return type of this method is {@code
Constructor<?>[]} and <em>not</em> {@code Constructor<T>[]} as
might be expected.  This less informative return type is
necessary since after being returned from this method, the
array could be modified to hold {@code Constructor} objects for
different classes, which would violate the type guarantees of
{@code Constructor<T>[]}.

@return the array of {@code Constructor} objects representing the
        public constructors of this class
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@since JDK1.1
"
      end

      operation 6993410 "getField"
	cpp_inline public return_type class_ref 189698 // Field
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 189954 // NoSuchFieldException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Field} object that reflects the specified public member
field of the class or interface represented by this {@code Class}
object. The {@code name} parameter is a {@code String} specifying the
simple name of the desired field.

<p> The field to be reflected is determined by the algorithm that
follows.  Let C be the class or interface represented by this object:

<OL>
<LI> If C declares a public field with the name specified, that is the
     field to be reflected.</LI>
<LI> If no field was found in step 1 above, this algorithm is applied
     recursively to each direct superinterface of C. The direct
     superinterfaces are searched in the order they were declared.</LI>
<LI> If no field was found in steps 1 and 2 above, and C has a
     superclass S, then this algorithm is invoked recursively upon S.
     If C has no superclass, then a {@code NoSuchFieldException}
     is thrown.</LI>
</OL>

<p> If this {@code Class} object represents an array type, then this
method does not find the {@code length} field of the array type.

@param name the field name
@return the {@code Field} object of this class specified by
        {@code name}
@throws NoSuchFieldException if a field with the specified name is
        not found.
@throws NullPointerException if {@code name} is {@code null}
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@since JDK1.1
@jls 8.2 Class Members
@jls 8.3 Field Declarations
"
      end

      operation 6993538 "getMethod"
	cpp_inline public return_type class_ref 137858 // Method
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 2
	  exception class_ref 742530 // NoSuchMethodException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Method} object that reflects the specified public
member method of the class or interface represented by this
{@code Class} object. The {@code name} parameter is a
{@code String} specifying the simple name of the desired method. The
{@code parameterTypes} parameter is an array of {@code Class}
objects that identify the method's formal parameter types, in declared
order. If {@code parameterTypes} is {@code null}, it is
treated as if it were an empty array.

<p> If the {@code name} is \"{@code <init>}\" or \"{@code <clinit>}\" a
{@code NoSuchMethodException} is raised. Otherwise, the method to
be reflected is determined by the algorithm that follows.  Let C be the
class or interface represented by this object:
<OL>
<LI> C is searched for a <I>matching method</I>, as defined below. If a
     matching method is found, it is reflected.</LI>
<LI> If no matching method is found by step 1 then:
  <OL TYPE=\"a\">
  <LI> If C is a class other than {@code Object}, then this algorithm is
       invoked recursively on the superclass of C.</LI>
  <LI> If C is the class {@code Object}, or if C is an interface, then
       the superinterfaces of C (if any) are searched for a matching
       method. If any such method is found, it is reflected.</LI>
  </OL></LI>
</OL>

<p> To find a matching method in a class or interface C:&nbsp; If C
declares exactly one public method with the specified name and exactly
the same formal parameter types, that is the method reflected. If more
than one such method is found in C, and one of these methods has a
return type that is more specific than any of the others, that method is
reflected; otherwise one of the methods is chosen arbitrarily.

<p>Note that there may be more than one matching method in a
class because while the Java language forbids a class to
declare multiple methods with the same signature but different
return types, the Java virtual machine does not.  This
increased flexibility in the virtual machine can be used to
implement various language features.  For example, covariant
returns can be implemented with {@linkplain
java.lang.reflect.Method#isBridge bridge methods}; the bridge
method and the method being overridden would have the same
signature but different return types.

<p> If this {@code Class} object represents an array type, then this
method does not find the {@code clone()} method.

<p> Static methods declared in superinterfaces of the class or interface
represented by this {@code Class} object are not considered members of
the class or interface.

@param name the name of the method
@param parameterTypes the list of parameters
@return the {@code Method} object that matches the specified
        {@code name} and {@code parameterTypes}
@throws NoSuchMethodException if a matching method is not found
        or if the name is \"&lt;init&gt;\"or \"&lt;clinit&gt;\".
@throws NullPointerException if {@code name} is {@code null}
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@jls 8.2 Class Members
@jls 8.4 Method Declarations
@since JDK1.1
"
      end

      operation 6993666 "getConstructor"
	cpp_inline public return_type class_ref 189186 // Constructor
	nparams 1
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 2
	  exception class_ref 742530 // NoSuchMethodException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Constructor} object that reflects the specified
public constructor of the class represented by this {@code Class}
object. The {@code parameterTypes} parameter is an array of
{@code Class} objects that identify the constructor's formal
parameter types, in declared order.

If this {@code Class} object represents an inner class
declared in a non-static context, the formal parameter types
include the explicit enclosing instance as the first parameter.

<p> The constructor to reflect is the public constructor of the class
represented by this {@code Class} object whose formal parameter
types match those specified by {@code parameterTypes}.

@param parameterTypes the parameter array
@return the {@code Constructor} object of the public constructor that
        matches the specified {@code parameterTypes}
@throws NoSuchMethodException if a matching method is not found.
@throws SecurityException
        If a security manager, <i>s</i>, is present and
        the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class.

@since JDK1.1
"
      end

      operation 6993794 "getDeclaredClasses"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array of {@code Class} objects reflecting all the
classes and interfaces declared as members of the class represented by
this {@code Class} object. This includes public, protected, default
(package) access, and private classes and interfaces declared by the
class, but excludes inherited classes and interfaces.  This method
returns an array of length 0 if the class declares no classes or
interfaces as members, or if this {@code Class} object represents a
primitive type, an array class, or void.

@return the array of {@code Class} objects representing all the
        declared members of this class
@throws SecurityException
        If a security manager, <i>s</i>, is present and any of the
        following conditions is met:

        <ul>

        <li> the caller's class loader is not the same as the
        class loader of this class and invocation of
        {@link SecurityManager#checkPermission
        s.checkPermission} method with
        {@code RuntimePermission(\"accessDeclaredMembers\")}
        denies access to the declared classes within this class

        <li> the caller's class loader is not the same as or an
        ancestor of the class loader for the current class and
        invocation of {@link SecurityManager#checkPackageAccess
        s.checkPackageAccess()} denies access to the package
        of this class

        </ul>

@since JDK1.1
"
      end

      operation 6993922 "getDeclaredFields"
	cpp_inline public return_type class_ref 189698 // Field
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array of {@code Field} objects reflecting all the fields
declared by the class or interface represented by this
{@code Class} object. This includes public, protected, default
(package) access, and private fields, but excludes inherited fields.

<p> If this {@code Class} object represents a class or interface with no
declared fields, then this method returns an array of length 0.

<p> If this {@code Class} object represents an array type, a primitive
type, or void, then this method returns an array of length 0.

<p> The elements in the returned array are not sorted and are not in any
particular order.

@return  the array of {@code Field} objects representing all the
         declared fields of this class
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared fields within this class

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@since JDK1.1
@jls 8.2 Class Members
@jls 8.3 Field Declarations
"
      end

      operation 6994050 "getDeclaredMethods"
	cpp_inline public return_type class_ref 137858 // Method
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "
Returns an array containing {@code Method} objects reflecting all the
declared methods of the class or interface represented by this {@code
Class} object, including public, protected, default (package)
access, and private methods, but excluding inherited methods.

<p> If this {@code Class} object represents a type that has multiple
declared methods with the same name and parameter types, but different
return types, then the returned array has a {@code Method} object for
each such method.

<p> If this {@code Class} object represents a type that has a class
initialization method {@code <clinit>}, then the returned array does
<em>not</em> have a corresponding {@code Method} object.

<p> If this {@code Class} object represents a class or interface with no
declared methods, then the returned array has length 0.

<p> If this {@code Class} object represents an array type, a primitive
type, or void, then the returned array has length 0.

<p> The elements in the returned array are not sorted and are not in any
particular order.

@return  the array of {@code Method} objects representing all the
         declared methods of this class
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared methods within this class

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@jls 8.2 Class Members
@jls 8.4 Method Declarations
@since JDK1.1
"
      end

      operation 6994178 "getDeclaredConstructors"
	cpp_inline public return_type class_ref 189186 // Constructor
	nparams 0
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns an array of {@code Constructor} objects reflecting all the
constructors declared by the class represented by this
{@code Class} object. These are public, protected, default
(package) access, and private constructors.  The elements in the array
returned are not sorted and are not in any particular order.  If the
class has a default constructor, it is included in the returned array.
This method returns an array of length 0 if this {@code Class}
object represents an interface, a primitive type, an array class, or
void.

<p> See <em>The Java Language Specification</em>, section 8.2.

@return  the array of {@code Constructor} objects representing all the
         declared constructors of this class
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared constructors within this class

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@since JDK1.1
"
      end

      operation 6994306 "getDeclaredField"
	cpp_inline public return_type class_ref 189698 // Field
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 189954 // NoSuchFieldException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Field} object that reflects the specified declared
field of the class or interface represented by this {@code Class}
object. The {@code name} parameter is a {@code String} that specifies
the simple name of the desired field.

<p> If this {@code Class} object represents an array type, then this
method does not find the {@code length} field of the array type.

@param name the name of the field
@return  the {@code Field} object for the specified field in this
         class
@throws  NoSuchFieldException if a field with the specified name is
         not found.
@throws  NullPointerException if {@code name} is {@code null}
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared field

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@since JDK1.1
@jls 8.2 Class Members
@jls 8.3 Field Declarations
"
      end

      operation 6994434 "getDeclaredMethod"
	cpp_inline public return_type class_ref 137858 // Method
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 2
	  exception class_ref 742530 // NoSuchMethodException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Method} object that reflects the specified
declared method of the class or interface represented by this
{@code Class} object. The {@code name} parameter is a
{@code String} that specifies the simple name of the desired
method, and the {@code parameterTypes} parameter is an array of
{@code Class} objects that identify the method's formal parameter
types, in declared order.  If more than one method with the same
parameter types is declared in a class, and one of these methods has a
return type that is more specific than any of the others, that method is
returned; otherwise one of the methods is chosen arbitrarily.  If the
name is \"&lt;init&gt;\"or \"&lt;clinit&gt;\" a {@code NoSuchMethodException}
is raised.

<p> If this {@code Class} object represents an array type, then this
method does not find the {@code clone()} method.

@param name the name of the method
@param parameterTypes the parameter array
@return  the {@code Method} object for the method of this class
         matching the specified name and parameters
@throws  NoSuchMethodException if a matching method is not found.
@throws  NullPointerException if {@code name} is {@code null}
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared method

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@jls 8.2 Class Members
@jls 8.4 Method Declarations
@since JDK1.1
"
      end

      operation 6994562 "getDeclaredConstructor"
	cpp_inline public return_type class_ref 189186 // Constructor
	nparams 1
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 2
	  exception class_ref 742530 // NoSuchMethodException
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Returns a {@code Constructor} object that reflects the specified
constructor of the class or interface represented by this
{@code Class} object.  The {@code parameterTypes} parameter is
an array of {@code Class} objects that identify the constructor's
formal parameter types, in declared order.

If this {@code Class} object represents an inner class
declared in a non-static context, the formal parameter types
include the explicit enclosing instance as the first parameter.

@param parameterTypes the parameter array
@return  The {@code Constructor} object for the constructor with the
         specified parameter list
@throws  NoSuchMethodException if a matching method is not found.
@throws  SecurityException
         If a security manager, <i>s</i>, is present and any of the
         following conditions is met:

         <ul>

         <li> the caller's class loader is not the same as the
         class loader of this class and invocation of
         {@link SecurityManager#checkPermission
         s.checkPermission} method with
         {@code RuntimePermission(\"accessDeclaredMembers\")}
         denies access to the declared constructor

         <li> the caller's class loader is not the same as or an
         ancestor of the class loader for the current class and
         invocation of {@link SecurityManager#checkPackageAccess
         s.checkPackageAccess()} denies access to the package
         of this class

         </ul>

@since JDK1.1
"
      end

      operation 6994690 "getResourceAsStream"
	cpp_inline public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a resource with a given name.  The rules for searching resources
associated with a given class are implemented by the defining
{@linkplain ClassLoader class loader} of the class.  This method
delegates to this object's class loader.  If this object was loaded by
the bootstrap class loader, the method delegates to {@link
ClassLoader#getSystemResourceAsStream}.

<p> Before delegation, an absolute resource name is constructed from the
given resource name using this algorithm:

<ul>

<li> If the {@code name} begins with a {@code '/'}
(<tt>'&#92;u002f'</tt>), then the absolute name of the resource is the
portion of the {@code name} following the {@code '/'}.

<li> Otherwise, the absolute name is of the following form:

<blockquote>
  {@code modified_package_name/name}
</blockquote>

<p> Where the {@code modified_package_name} is the package name of this
object with {@code '/'} substituted for {@code '.'}
(<tt>'&#92;u002e'</tt>).

</ul>

@param  name name of the desired resource
@return      A {@link java.io.InputStream} object or {@code null} if
             no resource with this name is found
@throws  NullPointerException If {@code name} is {@code null}
@since  JDK1.1
"
      end

      operation 6994818 "getResource"
	cpp_inline public return_type class_ref 243458 // URL
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a resource with a given name.  The rules for searching resources
associated with a given class are implemented by the defining
{@linkplain ClassLoader class loader} of the class.  This method
delegates to this object's class loader.  If this object was loaded by
the bootstrap class loader, the method delegates to {@link
ClassLoader#getSystemResource}.

<p> Before delegation, an absolute resource name is constructed from the
given resource name using this algorithm:

<ul>

<li> If the {@code name} begins with a {@code '/'}
(<tt>'&#92;u002f'</tt>), then the absolute name of the resource is the
portion of the {@code name} following the {@code '/'}.

<li> Otherwise, the absolute name is of the following form:

<blockquote>
  {@code modified_package_name/name}
</blockquote>

<p> Where the {@code modified_package_name} is the package name of this
object with {@code '/'} substituted for {@code '.'}
(<tt>'&#92;u002e'</tt>).

</ul>

@param  name name of the desired resource
@return      A  {@link java.net.URL} object or {@code null} if no
             resource with this name is found
@since  JDK1.1
"
      end

      classrelation 3152002 // allPermDomain (<unidirectional association>)
	relation 3152002 --->
	  a role_name "allPermDomain" class_relation private
	    comment " protection domain returned when the internal domain is null 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3152002 // allPermDomain (<unidirectional association>)
	  b parent class_ref 319618 // ProtectionDomain
      end

      operation 6994946 "getProtectionDomain"
	cpp_inline public return_type class_ref 319618 // ProtectionDomain
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code ProtectionDomain} of this class.  If there is a
security manager installed, this method first calls the security
manager's {@code checkPermission} method with a
{@code RuntimePermission(\"getProtectionDomain\")} permission to
ensure it's ok to get the
{@code ProtectionDomain}.

@return the ProtectionDomain of this class

@throws SecurityException
       if a security manager exists and its
       {@code checkPermission} method doesn't allow
       getting the ProtectionDomain.

@see java.security.ProtectionDomain
@see SecurityManager#checkPermission
@see java.lang.RuntimePermission
@since 1.2
"
      end

      operation 6995074 "getProtectionDomain0"
	cpp_inline private return_type class_ref 319618 // ProtectionDomain
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the ProtectionDomain of this class.
"
      end

      operation 6995202 "getPrimitiveClass"
	class_operation cpp_inline package return_type class_ref 130818 // Class
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Return the Virtual Machine's Class object for the named
primitive type.
"
      end

      operation 6995330 "checkMemberAccess"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "which" explicit_type "int"
	  param inout name "caller" type class_ref 130818 // Class
	  param inout name "checkProxyInterfaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if client is allowed to access members.  If access is denied,
throw a SecurityException.

This method also enforces package access.

<p> Default policy: allow all clients access with normal Java access
control.
"
      end

      operation 6995458 "checkPackageAccess"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "ccl" type class_ref 129026 // ClassLoader
	  param inout name "checkProxyInterfaces" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a client loaded in ClassLoader ccl is allowed to access this
class under the current package access policy. If access is denied,
throw a SecurityException.
"
      end

      operation 6995586 "resolveName"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a package name prefix if the name is not absolute Remove leading \"/\"
if name is absolute
"
      end

      class 931202 "Atomic"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1666306 "unsafe"
	  class_attribute const_attribute private explicit_type "Unsafe"
	  init_value " Unsafe.getUnsafe()"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " initialize Unsafe machinery here, since we need to call Class.class instance method
 and have to avoid calling it in the static initializer of the Class class...
"
	end

	attribute 1666434 "reflectionDataOffset"
	  class_attribute const_attribute private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " offset of Class.reflectionData instance field
"
	end

	attribute 1666562 "annotationTypeOffset"
	  class_attribute const_attribute private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " offset of Class.annotationType instance field
"
	end

	attribute 1666690 "annotationDataOffset"
	  class_attribute const_attribute private explicit_type "long"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " offset of Class.annotationData instance field
"
	end

	extra_member 157314 "initialization"
	  
	  cpp "" ""
	  java "  static {
            Field[] fields = Class.class.getDeclaredFields0(false); // bypass caches
            reflectionDataOffset = objectFieldOffset(fields, \"reflectionData\");
            annotationTypeOffset = objectFieldOffset(fields, \"annotationType\");
            annotationDataOffset = objectFieldOffset(fields, \"annotationData\");
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 6995714 "objectFieldOffset"
	  class_operation cpp_inline private explicit_return_type "long"
	  nparams 2
	    param inout name "fields" type class_ref 189698 // Field
	  multiplicity "[]"
	    param inout name "fieldName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6995842 "casReflectionData"
	  class_operation cpp_inline package explicit_return_type "boolean"
	  nparams 3
	    param inout name "clazz" type class_ref 130818 // Class
	    param inout name "oldData" type class_ref 321026 // SoftReference
	    param inout name "newData" type class_ref 321026 // SoftReference
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1}<ReflectionData<T>> ${p1}, ${t2}<ReflectionData<T>> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6995970 "casAnnotationType"
	  class_operation cpp_inline package explicit_return_type "boolean"
	  nparams 3
	    param inout name "clazz" type class_ref 130818 // Class
	    param inout name "oldType" explicit_type "AnnotationType"
	    param inout name "newType" explicit_type "AnnotationType"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6996098 "casAnnotationData"
	  class_operation cpp_inline package explicit_return_type "boolean"
	  nparams 3
	    param inout name "clazz" type class_ref 130818 // Class
	    param inout name "oldData" type class_ref 931330 // AnnotationData
	    param inout name "newData" type class_ref 931330 // AnnotationData
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 931330 "AnnotationData"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3153794 // annotations (<unidirectional association>)
	  relation 3153794 --->
	    a role_name "annotations" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<? extends Annotation>, Annotation> ${name}${value};
"
	      classrelation_ref 3153794 // annotations (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 3153922 // declaredAnnotations (<unidirectional association>)
	  relation 3153922 --->
	    a role_name "declaredAnnotations" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<? extends Annotation>, Annotation> ${name}${value};
"
	      classrelation_ref 3153922 // declaredAnnotations (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	attribute 1668098 "redefinedCount"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Value of classRedefinedCount when we created this AnnotationData instance
"
	end

	operation 7004930 "AnnotationData"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "annotations" type class_ref 130178 // Map
	    param inout name "declaredAnnotations" type class_ref 130178 // Map
	    param in name "redefinedCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Class<? extends Annotation>, Annotation> ${p0}, ${t1}<Class<? extends Annotation>, Annotation> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 1666818 "useCaches"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Reflection support.

 Caches for certain reflective results
"
      end

      class 931458 "ReflectionData"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3152130 // declaredFields (<unidirectional association>)
	  relation 3152130 --->
	    a role_name "declaredFields" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3152130 // declaredFields (<unidirectional association>)
	    b parent class_ref 189698 // Field
	end

	classrelation 3152258 // publicFields (<unidirectional association>)
	  relation 3152258 --->
	    a role_name "publicFields" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3152258 // publicFields (<unidirectional association>)
	    b parent class_ref 189698 // Field
	end

	classrelation 3152386 // declaredMethods (<unidirectional association>)
	  relation 3152386 --->
	    a role_name "declaredMethods" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3152386 // declaredMethods (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 3152514 // publicMethods (<unidirectional association>)
	  relation 3152514 --->
	    a role_name "publicMethods" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3152514 // publicMethods (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 3152642 // declaredConstructors (<unidirectional association>)
	  relation 3152642 --->
	    a role_name "declaredConstructors" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T>${multiplicity} ${name}${value};
"
	      classrelation_ref 3152642 // declaredConstructors (<unidirectional association>)
	    b parent class_ref 189186 // Constructor
	end

	classrelation 3152770 // publicConstructors (<unidirectional association>)
	  relation 3152770 --->
	    a role_name "publicConstructors" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T>${multiplicity} ${name}${value};
"
	      classrelation_ref 3152770 // publicConstructors (<unidirectional association>)
	    b parent class_ref 189186 // Constructor
	end

	classrelation 3152898 // declaredPublicFields (<unidirectional association>)
	  relation 3152898 --->
	    a role_name "declaredPublicFields" multiplicity "[]" volatile package
	      comment " Intermediate results for getFields and getMethods
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3152898 // declaredPublicFields (<unidirectional association>)
	    b parent class_ref 189698 // Field
	end

	classrelation 3153026 // declaredPublicMethods (<unidirectional association>)
	  relation 3153026 --->
	    a role_name "declaredPublicMethods" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3153026 // declaredPublicMethods (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	classrelation 3153154 // interfaces (<unidirectional association>)
	  relation 3153154 --->
	    a role_name "interfaces" multiplicity "[]" volatile package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	      classrelation_ref 3153154 // interfaces (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	attribute 1666946 "redefinedCount"
	  const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Value of classRedefinedCount when we created this ReflectionData instance
"
	end

	operation 6996226 "ReflectionData"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param in name "redefinedCount" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3153282 // reflectionData (<unidirectional association>)
	relation 3153282 --->
	  a role_name "reflectionData" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ReflectionData<T>> ${name}${value};
"
	    classrelation_ref 3153282 // reflectionData (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      attribute 1667074 "classRedefinedCount"
	volatile private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Incremented by the VM on each call to JVM TI RedefineClasses()
 that redefines this class or a superclass.
"
      end

      operation 6996354 "reflectionData"
	cpp_inline private return_type class_ref 931458 // ReflectionData
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Lazily create and cache ReflectionData"
      end

      operation 6996482 "newReflectionData"
	cpp_inline private return_type class_ref 931458 // ReflectionData
	nparams 2
	  param inout name "oldReflectionData" type class_ref 321026 // SoftReference
	  param in name "classRedefinedCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<ReflectionData<T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6996610 "getGenericSignature0"
	cpp_inline private return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " Generic signature handling"
      end

      attribute 1667202 "genericInfo"
	volatile private explicit_type "ClassRepository"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Generic info repository; lazily initialized
"
      end

      operation 6996738 "getFactory"
	cpp_inline private explicit_return_type "GenericsFactory"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " accessor for factory"
      end

      operation 6996866 "getGenericInfo"
	cpp_inline private explicit_return_type "ClassRepository"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " accessor for generic info repository;
 generic info is lazily initialized"
      end

      operation 6996994 "getRawAnnotations"
	cpp_inline package explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
	comment " Annotations handling"
      end

      operation 6997122 "getRawTypeAnnotations"
	cpp_inline package explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
	comment " Since 1.8"
      end

      operation 6997250 "getExecutableTypeAnnotationBytes"
	class_operation cpp_inline package explicit_return_type "byte"
	nparams 1
	  param inout name "ex" type class_ref 931586 // Executable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6997378 "getConstantPool"
	cpp_inline package explicit_return_type "ConstantPool"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 6997506 "privateGetDeclaredFields"
	cpp_inline private return_type class_ref 189698 // Field
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " java.lang.reflect.Field handling


 Returns an array of \"root\" fields. These Field objects must NOT
 be propagated to the outside world, but must instead be copied
 via ReflectionFactory.copyField."
      end

      operation 6997634 "privateGetPublicFields"
	cpp_inline private return_type class_ref 189698 // Field
	nparams 1
	  param inout name "traversedInterfaces" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<Class<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns an array of \"root\" fields. These Field objects must NOT
 be propagated to the outside world, but must instead be copied
 via ReflectionFactory.copyField."
      end

      operation 6997762 "addAll"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 184194 // Collection
	  param inout name "o" type class_ref 189698 // Field
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Field> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6997890 "privateGetDeclaredConstructors"
	cpp_inline private return_type class_ref 189186 // Constructor
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T>[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " java.lang.reflect.Constructor handling


 Returns an array of \"root\" constructors. These Constructor
 objects must NOT be propagated to the outside world, but must
 instead be copied via ReflectionFactory.copyConstructor."
      end

      operation 6998018 "privateGetDeclaredMethods"
	cpp_inline private return_type class_ref 137858 // Method
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " java.lang.reflect.Method handling


 Returns an array of \"root\" methods. These Method objects must NOT
 be propagated to the outside world, but must instead be copied
 via ReflectionFactory.copyMethod."
      end

      class 931714 "MethodArray"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3153410 // methods (<unidirectional association>)
	  relation 3153410 --->
	    a role_name "methods" multiplicity "[]" private
	      comment " Don't add or remove methods except by add() or remove() calls.
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3153410 // methods (<unidirectional association>)
	    b parent class_ref 137858 // Method
	end

	attribute 1667330 "length"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1667458 "defaults"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6998146 "MethodArray"
	  cpp_inline package explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998274 "MethodArray"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param in name "initialSize" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998402 "hasDefaults"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998530 "add"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "m" type class_ref 137858 // Method
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998658 "addAll"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "ma" type class_ref 137858 // Method
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998786 "addAll"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "ma" type class_ref 931714 // MethodArray
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6998914 "addIfNotPresent"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "newMethod" type class_ref 137858 // Method
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999042 "addAllIfNotPresent"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "newMethods" type class_ref 931714 // MethodArray
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999170 "addInterfaceMethods"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "methods" type class_ref 137858 // Method
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add Methods declared in an interface to this MethodArray.
Static methods declared in interfaces are not inherited.
"
	end

	operation 6999298 "length"
	  cpp_inline package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999426 "get"
	  cpp_inline package return_type class_ref 137858 // Method
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999554 "getFirst"
	  cpp_inline package return_type class_ref 137858 // Method
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999682 "removeByNameAndDescriptor"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "toRemove" type class_ref 137858 // Method
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999810 "remove"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6999938 "matchesNameAndDescriptor"
	  cpp_inline private explicit_return_type "boolean"
	  nparams 2
	    param inout name "m1" type class_ref 137858 // Method
	    param inout name "m2" type class_ref 137858 // Method
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7000066 "compactAndTrim"
	  cpp_inline package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7000194 "removeLessSpecifics"
	  cpp_inline package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Removes all Methods from this MethodArray that have a more specific
default Method in this MethodArray.

Users of MethodArray are responsible for pruning Methods that have
a more specific <em>concrete</em> Method.
"
	end

	operation 7000322 "getArray"
	  cpp_inline package return_type class_ref 137858 // Method
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7000450 "hasMoreSpecificClass"
	  class_operation cpp_inline package explicit_return_type "boolean"
	  nparams 2
	    param inout name "m1" type class_ref 137858 // Method
	    param inout name "m2" type class_ref 137858 // Method
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns true if m1 is more specific than m2"
	end
      end

      operation 7000578 "privateGetPublicMethods"
	cpp_inline private return_type class_ref 137858 // Method
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns an array of \"root\" methods. These Method objects must NOT
 be propagated to the outside world, but must instead be copied
 via ReflectionFactory.copyMethod."
      end

      operation 7000706 "searchFields"
	class_operation cpp_inline private return_type class_ref 189698 // Field
	nparams 2
	  param inout name "fields" type class_ref 189698 // Field
	multiplicity "[]"
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helpers for fetchers of one field, method, or constructor
"
      end

      operation 7000834 "getField0"
	cpp_inline private return_type class_ref 189698 // Field
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 189954 // NoSuchFieldException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7000962 "searchMethods"
	class_operation cpp_inline private return_type class_ref 137858 // Method
	nparams 3
	  param inout name "methods" type class_ref 137858 // Method
	multiplicity "[]"
	  param inout name "name" type class_ref 128130 // String
	  param inout name "parameterTypes" type class_ref 130818 // Class
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}<?>[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001090 "getMethod0"
	cpp_inline private return_type class_ref 137858 // Method
	nparams 3
	  param inout name "name" type class_ref 128130 // String
	  param inout name "parameterTypes" type class_ref 130818 // Class
	multiplicity "[]"
	  param inout name "includeStaticMethods" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?>[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001218 "privateGetMethodRecursive"
	cpp_inline private return_type class_ref 137858 // Method
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "parameterTypes" type class_ref 130818 // Class
	multiplicity "[]"
	  param inout name "includeStaticMethods" explicit_type "boolean"
	  param inout name "allInterfaceCandidates" type class_ref 931714 // MethodArray
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?>[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001346 "getConstructor0"
	cpp_inline private return_type class_ref 189186 // Constructor
	nparams 2
	  param inout name "parameterTypes" type class_ref 130818 // Class
	multiplicity "[]"
	  param in name "which" explicit_type "int"
	nexceptions 1
	  exception class_ref 742530 // NoSuchMethodException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001474 "arrayContentsEq"
	class_operation cpp_inline private explicit_return_type "boolean"
	nparams 2
	  param inout name "a1" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "a2" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Other helpers and base implementation
"
      end

      operation 7001602 "copyFields"
	class_operation cpp_inline private return_type class_ref 189698 // Field
	nparams 1
	  param inout name "arg" type class_ref 189698 // Field
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001730 "copyMethods"
	class_operation cpp_inline private return_type class_ref 137858 // Method
	nparams 1
	  param inout name "arg" type class_ref 137858 // Method
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001858 "copyConstructors"
	class_operation cpp_inline private return_type class_ref 189186 // Constructor
	nparams 1
	  param inout name "arg" type class_ref 189186 // Constructor
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<U>[] ${name}${(}${t0}<U>[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7001986 "getDeclaredFields0"
	cpp_inline private return_type class_ref 189698 // Field
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7002114 "getDeclaredMethods0"
	cpp_inline private return_type class_ref 137858 // Method
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7002242 "getDeclaredConstructors0"
	cpp_inline private return_type class_ref 189186 // Constructor
	nparams 1
	  param inout name "publicOnly" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<T>[] ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7002370 "getDeclaredClasses0"
	cpp_inline private return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?>[] ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 7002498 "argumentTypesToString"
	class_operation cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param inout name "argTypes" type class_ref 130818 // Class
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1667586 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3206093459760846163L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.1 for interoperability 
"
      end

      classrelation 3153538 // serialPersistentFields (<unidirectional association>)
	relation 3153538 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
        new ObjectStreamField[0]" class_relation const_relation private
	    comment "
Class Class is special cased within the Serialization Stream Protocol.

A Class instance is written initially into an ObjectOutputStream in the
following format:
<pre>
     {@code TC_CLASS} ClassDescriptor
     A ClassDescriptor is a special cased serialization of
     a {@code java.io.ObjectStreamClass} instance.
</pre>
A new handle is generated for the initial time the class descriptor
is written into the stream. Future references to the class descriptor
are written as references to the initial class descriptor instance.

@see java.io.ObjectStreamClass

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3153538 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 7002626 "desiredAssertionStatus"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the assertion status that would be assigned to this
class if it were to be initialized at the time this method is invoked.
If this class has had its assertion status set, the most recent
setting will be returned; otherwise, if any package default assertion
status pertains to this class, the most recent setting for the most
specific pertinent package default assertion status is returned;
otherwise, if this class is not a system class (i.e., it has a
class loader) its class loader's default assertion status is returned;
otherwise, the system class default assertion status is returned.
<p>
Few programmers will have any need for this method; it is provided
for the benefit of the JRE itself.  (It allows a class to determine at
the time that it is initialized whether assertions should be enabled.)
Note that this method is not guaranteed to return the actual
assertion status that was (or will be) associated with the specified
class when it was (or will be) initialized.

@return the desired assertion status of the specified class.
@see    java.lang.ClassLoader#setClassAssertionStatus
@see    java.lang.ClassLoader#setPackageAssertionStatus
@see    java.lang.ClassLoader#setDefaultAssertionStatus
@since  1.4
"
      end

      operation 7002754 "desiredAssertionStatus0"
	class_operation cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
s"
	
	
	
	comment " Retrieves the desired assertion status of this class from the VM"
      end

      operation 7002882 "isEnum"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if and only if this class was declared as an enum in the
source code.

@return true if and only if this class was declared as an enum in the
    source code
@since 1.5
"
      end

      operation 7003010 "getReflectionFactory"
	class_operation cpp_inline private explicit_return_type "ReflectionFactory"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fetches the factory for reflective objects"
      end

      attribute 1667714 "reflectionFactory"
	class_attribute private explicit_type "ReflectionFactory"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1667842 "initted"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " To be able to query system properties as soon as they're available
"
      end

      operation 7003138 "checkInitted"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7003266 "getEnumConstants"
	cpp_inline public explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the elements of this enum class or null if this
Class object does not represent an enum type.

@return an array containing the values comprising the enum class
    represented by this Class object in the order they're
    declared, or null if this Class object does not
    represent an enum type
@since 1.5
"
      end

      operation 7003394 "getEnumConstantsShared"
	cpp_inline package explicit_return_type "T"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the elements of this enum class or null if this
Class object does not represent an enum type;
identical to getEnumConstants except that the result is
uncloned, cached, and shared by all callers.
"
      end

      attribute 1667970 "enumConstants"
	volatile private explicit_type "T"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7003522 "enumConstantDirectory"
	cpp_inline package return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map from simple name to enum constant.  This package-private
method is used internally by Enum to implement
{@code public static <T extends Enum<T>> T valueOf(Class<T>, String)}
efficiently.  Note that the map is returned by this method is
created lazily on first use.  Typically it won't ever get created.
"
      end

      classrelation 3153666 // enumConstantDirectory (<unidirectional association>)
	relation 3153666 --->
	  a role_name "enumConstantDirectory" init_value " null" volatile private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, T> ${name}${value};
"
	    classrelation_ref 3153666 // enumConstantDirectory (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 7003650 "cast"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Casts an object to the class or interface represented
by this {@code Class} object.

@param obj the object to be cast
@return the object after casting, or null if obj is null

@throws ClassCastException if the object is not
null and is not assignable to the type T.

@since 1.5
"
      end

      operation 7003778 "cannotCastMsg"
	cpp_inline private return_type class_ref 128130 // String
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7003906 "asSubclass"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<? extends U> ${name}${(}${t0}<U> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Casts this {@code Class} object to represent a subclass of the class
represented by the specified class object.  Checks that the cast
is valid, and throws a {@code ClassCastException} if it is not.  If
this method succeeds, it always returns a reference to this class object.

<p>This method is useful when a client needs to \"narrow\" the type of
a {@code Class} object to pass it to an API that restricts the
{@code Class} objects that it is willing to accept.  A cast would
generate a compile-time warning, as the correctness of the cast
could not be checked at runtime (because generic types are implemented
by erasure).

@param <U> the type to cast this class object to
@param clazz the class of the type to cast this class object to
@return this {@code Class} object, cast to represent a subclass of
   the specified class object.
@throws ClassCastException if this {@code Class} object does not
   represent a subclass of the specified class (here \"subclass\" includes
   the class itself).
@since 1.5
"
      end

      operation 7004034 "getAnnotation"
	cpp_inline public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.5
"
      end

      operation 7004162 "isAnnotationPresent"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Annotation> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
@throws NullPointerException {@inheritDoc}
@since 1.5
"
      end

      operation 7004290 "getAnnotationsByType"
	cpp_inline public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type}[] ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7004418 "getAnnotations"
	cpp_inline public return_type class_ref 494850 // Annotation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.5
"
      end

      operation 7004546 "getDeclaredAnnotation"
	cpp_inline public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7004674 "getDeclaredAnnotationsByType"
	cpp_inline public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type}[] ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7004802 "getDeclaredAnnotations"
	cpp_inline public return_type class_ref 494850 // Annotation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.5
"
      end

      classrelation 3154050 // annotationData (<unidirectional association>)
	relation 3154050 --->
	  a role_name "annotationData" volatile private
	    comment " Annotations cache
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"UnusedDeclaration\")
"
	    classrelation_ref 3154050 // annotationData (<unidirectional association>)
	  b parent class_ref 931330 // AnnotationData
      end

      operation 7005058 "annotationData"
	cpp_inline private return_type class_ref 931330 // AnnotationData
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7005186 "createAnnotationData"
	cpp_inline private return_type class_ref 931330 // AnnotationData
	nparams 1
	  param in name "classRedefinedCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1668226 "annotationType"
	volatile private explicit_type "AnnotationType"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"UnusedDeclaration\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Annotation types cache their internal (AnnotationType) form
"
      end

      operation 7005314 "casAnnotationType"
	cpp_inline package explicit_return_type "boolean"
	nparams 2
	  param inout name "oldType" explicit_type "AnnotationType"
	  param inout name "newType" explicit_type "AnnotationType"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7005442 "getAnnotationType"
	cpp_inline package explicit_return_type "AnnotationType"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7005570 "getDeclaredAnnotationMap"
	cpp_inline package return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Class<? extends Annotation>, Annotation> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3154178 // classValueMap (<unidirectional association>)
	relation 3154178 --->
	  a role_name "classValueMap" package
	    comment " Backing store of user-defined values pertaining to this class.
Maintained by the ClassValue class.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3154178 // classValueMap (<unidirectional association>)
	  b parent class_ref 191874 // ClassValueMap
      end

      operation 7005698 "getAnnotatedSuperclass"
	cpp_inline public return_type class_ref 931842 // AnnotatedType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code AnnotatedType} object that represents the use of a
type to specify the superclass of the entity represented by this {@code
Class} object. (The <em>use</em> of type Foo to specify the superclass
in '...  extends Foo' is distinct from the <em>declaration</em> of type
Foo.)

<p> If this {@code Class} object represents a type whose declaration
does not explicitly indicate an annotated superclass, then the return
value is an {@code AnnotatedType} object representing an element with no
annotations.

<p> If this {@code Class} represents either the {@code Object} class, an
interface type, an array type, a primitive type, or void, the return
value is {@code null}.

@return an object representing the superclass
@since 1.8
"
      end

      operation 7005826 "getAnnotatedInterfaces"
	cpp_inline public return_type class_ref 931842 // AnnotatedType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of {@code AnnotatedType} objects that represent the use
of types to specify superinterfaces of the entity represented by this
{@code Class} object. (The <em>use</em> of type Foo to specify a
superinterface in '... implements Foo' is distinct from the
<em>declaration</em> of type Foo.)

<p> If this {@code Class} object represents a class, the return value is
an array containing objects representing the uses of interface types to
specify interfaces implemented by the class. The order of the objects in
the array corresponds to the order of the interface types used in the
'implements' clause of the declaration of this {@code Class} object.

<p> If this {@code Class} object represents an interface, the return
value is an array containing objects representing the uses of interface
types to specify interfaces directly extended by the interface. The
order of the objects in the array corresponds to the order of the
interface types used in the 'extends' clause of the declaration of this
{@code Class} object.

<p> If this {@code Class} object represents a class or interface whose
declaration does not explicitly indicate any annotated superinterfaces,
the return value is an array of length 0.

<p> If this {@code Class} object represents either the {@code Object}
class, an array type, a primitive type, or void, the return value is an
array of length 0.

@return an array representing the superinterfaces
@since 1.8
"
      end
    end

    class 132226 "Exception"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class {@code Exception} and its subclasses are a form of
{@code Throwable} that indicates conditions that a reasonable
application might want to catch.

<p>The class {@code Exception} and any subclasses that are not also
subclasses of {@link RuntimeException} are <em>checked
exceptions</em>.  Checked exceptions need to be declared in a
method or constructor's {@code throws} clause if they can be thrown
by the execution of the method or constructor and propagate outside
the method or constructor boundary.

@author  Frank Yellin
@see     java.lang.Error
@jls 11.2 Compile-Time Checking of Exceptions
@since   JDK1.0
"
      classrelation 236674 // <generalisation>
	relation 236674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 236674 // <generalisation>
	  b parent class_ref 129922 // Throwable
      end

      attribute 189442 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3387516993124229948L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 616322 "Exception"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with {@code null} as its detail message.
The cause is not initialized, and may subsequently be initialized by a
call to {@link #initCause}.
"
      end

      operation 616450 "Exception"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message.  The
cause is not initialized, and may subsequently be initialized by
a call to {@link #initCause}.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link #getMessage()} method.
"
      end

      operation 616578 "Exception"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message and
cause.  <p>Note that the detail message associated with
{@code cause} is <i>not</i> automatically incorporated in
this exception's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 616706 "Exception"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of <tt>(cause==null ? null : cause.toString())</tt> (which
typically contains the class and detail message of <tt>cause</tt>).
This constructor is useful for exceptions that are little more than
wrappers for other throwables (for example, {@link
java.security.PrivilegedActionException}).

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 616834 "Exception"
	protected explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "enableSuppression" explicit_type "boolean"
	  param inout name "writableStackTrace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message,
cause, suppression enabled or disabled, and writable stack
trace enabled or disabled.

@param  message the detail message.
@param cause the cause.  (A {@code null} value is permitted,
and indicates that the cause is nonexistent or unknown.)
@param enableSuppression whether or not suppression is enabled
                         or disabled
@param writableStackTrace whether or not the stack trace should
                          be writable
@since 1.7
"
      end
    end

    class 137602 "Integer"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Integer} class wraps a value of the primitive type
{@code int} in an object. An object of type {@code Integer}
contains a single field whose type is {@code int}.

<p>In addition, this class provides several methods for converting
an {@code int} to a {@code String} and a {@code String} to an
{@code int}, as well as other constants and methods useful when
dealing with an {@code int}.

<p>Implementation note: The implementations of the \"bit twiddling\"
methods (such as {@link #highestOneBit(int) highestOneBit} and
{@link #numberOfTrailingZeros(int) numberOfTrailingZeros}) are
based on material from Henry S. Warren, Jr.'s <i>Hacker's
Delight</i>, (Addison Wesley, 2002).

@author  Lee Boynton
@author  Arthur van Hoff
@author  Josh Bloch
@author  Joseph D. Darcy
@since JDK1.0
"
      classrelation 3159170 // <generalisation>
	relation 3159170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3159170 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3159298 // <realization>
	relation 3159298 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3159298 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1675394 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80000000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the minimum value an {@code int} can
have, -2<sup>31</sup>.

"
      end

      attribute 1675522 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7fffffff"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the maximum value an {@code int} can
have, 2<sup>31</sup>-1.

"
      end

      classrelation 3159426 // TYPE (<unidirectional association>)
	relation 3159426 --->
	  a role_name "TYPE" init_value " (Class<Integer>) Class.getPrimitiveClass(\"int\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code int}.

@since   JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3159426 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      attribute 1675650 "digits"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0' , '1' , '2' , '3' , '4' , '5' ,
        '6' , '7' , '8' , '9' , 'a' , 'b' ,
        'c' , 'd' , 'e' , 'f' , 'g' , 'h' ,
        'i' , 'j' , 'k' , 'l' , 'm' , 'n' ,
        'o' , 'p' , 'q' , 'r' , 's' , 't' ,
        'u' , 'v' , 'w' , 'x' , 'y' , 'z'
    }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "All possible chars for representing a number as a String

"
      end

      operation 7028610 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the first argument in the
radix specified by the second argument.

<p>If the radix is smaller than {@code Character.MIN_RADIX}
or larger than {@code Character.MAX_RADIX}, then the radix
{@code 10} is used instead.

<p>If the first argument is negative, the first element of the
result is the ASCII minus character {@code '-'}
({@code '\\u005Cu002D'}). If the first argument is not
negative, no sign character appears in the result.

<p>The remaining characters of the result represent the magnitude
of the first argument. If the magnitude is zero, it is
represented by a single zero character {@code '0'}
({@code '\\u005Cu0030'}); otherwise, the first character of
the representation of the magnitude will not be the zero
character.  The following ASCII characters are used as digits:

<blockquote>
  {@code 0123456789abcdefghijklmnopqrstuvwxyz}
</blockquote>

These are {@code '\\u005Cu0030'} through
{@code '\\u005Cu0039'} and {@code '\\u005Cu0061'} through
{@code '\\u005Cu007A'}. If {@code radix} is
<var>N</var>, then the first <var>N</var> of these characters
are used as radix-<var>N</var> digits in the order shown. Thus,
the digits for hexadecimal (radix 16) are
{@code 0123456789abcdef}. If uppercase letters are
desired, the {@link java.lang.String#toUpperCase()} method may
be called on the result:

<blockquote>
 {@code Integer.toString(n, 16).toUpperCase()}
</blockquote>

@param   i       an integer to be converted to a string.
@param   radix   the radix to use in the string representation.
@return  a string representation of the argument in the specified radix.
@see     java.lang.Character#MAX_RADIX
@see     java.lang.Character#MIN_RADIX
"
      end

      operation 7028738 "toUnsignedString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the first argument as an
unsigned integer value in the radix specified by the second
argument.

<p>If the radix is smaller than {@code Character.MIN_RADIX}
or larger than {@code Character.MAX_RADIX}, then the radix
{@code 10} is used instead.

<p>Note that since the first argument is treated as an unsigned
value, no leading sign character is printed.

<p>If the magnitude is zero, it is represented by a single zero
character {@code '0'} ({@code '\\u005Cu0030'}); otherwise,
the first character of the representation of the magnitude will
not be the zero character.

<p>The behavior of radixes and the characters used as digits
are the same as {@link #toString(int, int) toString}.

@param   i       an integer to be converted to an unsigned string.
@param   radix   the radix to use in the string representation.
@return  an unsigned string representation of the argument in the specified radix.
@see     #toString(int, int)
@since 1.8
"
      end

      operation 7028866 "toHexString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the integer argument as an
unsigned integer in base&nbsp;16.

<p>The unsigned integer value is the argument plus 2<sup>32</sup>
if the argument is negative; otherwise, it is equal to the
argument.  This value is converted to a string of ASCII digits
in hexadecimal (base&nbsp;16) with no extra leading
{@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Integer#parseUnsignedInt(String, int)
Integer.parseUnsignedInt(s, 16)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
following characters are used as hexadecimal digits:

<blockquote>
 {@code 0123456789abcdef}
</blockquote>

These are the characters {@code '\\u005Cu0030'} through
{@code '\\u005Cu0039'} and {@code '\\u005Cu0061'} through
{@code '\\u005Cu0066'}. If uppercase letters are
desired, the {@link java.lang.String#toUpperCase()} method may
be called on the result:

<blockquote>
 {@code Integer.toHexString(n).toUpperCase()}
</blockquote>

@param   i   an integer to be converted to a string.
@return  the string representation of the unsigned integer value
         represented by the argument in hexadecimal (base&nbsp;16).
@see #parseUnsignedInt(String, int)
@see #toUnsignedString(int, int)
@since   JDK1.0.2
"
      end

      operation 7028994 "toOctalString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the integer argument as an
unsigned integer in base&nbsp;8.

<p>The unsigned integer value is the argument plus 2<sup>32</sup>
if the argument is negative; otherwise, it is equal to the
argument.  This value is converted to a string of ASCII digits
in octal (base&nbsp;8) with no extra leading {@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Integer#parseUnsignedInt(String, int)
Integer.parseUnsignedInt(s, 8)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
following characters are used as octal digits:

<blockquote>
{@code 01234567}
</blockquote>

These are the characters {@code '\\u005Cu0030'} through
{@code '\\u005Cu0037'}.

@param   i   an integer to be converted to a string.
@return  the string representation of the unsigned integer value
         represented by the argument in octal (base&nbsp;8).
@see #parseUnsignedInt(String, int)
@see #toUnsignedString(int, int)
@since   JDK1.0.2
"
      end

      operation 7029122 "toBinaryString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the integer argument as an
unsigned integer in base&nbsp;2.

<p>The unsigned integer value is the argument plus 2<sup>32</sup>
if the argument is negative; otherwise it is equal to the
argument.  This value is converted to a string of ASCII digits
in binary (base&nbsp;2) with no extra leading {@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Integer#parseUnsignedInt(String, int)
Integer.parseUnsignedInt(s, 2)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
characters {@code '0'} ({@code '\\u005Cu0030'}) and {@code
'1'} ({@code '\\u005Cu0031'}) are used as binary digits.

@param   i   an integer to be converted to a string.
@return  the string representation of the unsigned integer value
         represented by the argument in binary (base&nbsp;2).
@see #parseUnsignedInt(String, int)
@see #toUnsignedString(int, int)
@since   JDK1.0.2
"
      end

      operation 7029250 "toUnsignedString0"
	class_operation private return_type class_ref 128130 // String
	nparams 2
	  param in name "val" explicit_type "int"
	  param in name "shift" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert the integer to an unsigned number.
"
      end

      operation 7029378 "formatUnsignedInt"
	class_operation package explicit_return_type "int"
	nparams 5
	  param in name "val" explicit_type "int"
	  param in name "shift" explicit_type "int"
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a long (treated as unsigned) into a character buffer.
@param val the unsigned int to format
@param shift the log2 of the base to format in (4 for hex, 3 for octal, 1 for binary)
@param buf the character buffer to write to
@param offset the offset in the destination buffer to start at
@param len the number of characters to write
@return the lowest character  location used
"
      end

      attribute 1675778 "DigitTens"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
        '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
        '2', '2', '2', '2', '2', '2', '2', '2', '2', '2',
        '3', '3', '3', '3', '3', '3', '3', '3', '3', '3',
        '4', '4', '4', '4', '4', '4', '4', '4', '4', '4',
        '5', '5', '5', '5', '5', '5', '5', '5', '5', '5',
        '6', '6', '6', '6', '6', '6', '6', '6', '6', '6',
        '7', '7', '7', '7', '7', '7', '7', '7', '7', '7',
        '8', '8', '8', '8', '8', '8', '8', '8', '8', '8',
        '9', '9', '9', '9', '9', '9', '9', '9', '9', '9',
        } "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1675906 "DigitOnes"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        } "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7029506 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " I use the \"invariant division by multiplication\" trick to
 accelerate Integer.toString.  In particular we want to
 avoid division by 10.

 The \"trick\" has roughly the same performance characteristics
 as the \"classic\" Integer.toString code on a non-JIT VM.
 The trick avoids .rem and .div calls but has a longer code
 path and is thus dominated by dispatch overhead.  In the
 JIT case the dispatch overhead doesn't exist and the
 \"trick\" is considerably faster than the classic code.

 TODO-FIXME: convert (x * 52429) into the equiv shift-add
 sequence.

 RE:  Division by Invariant Integers using Multiplication
      T Gralund, P Montgomery
      ACM PLDI 1994


Returns a {@code String} object representing the
specified integer. The argument is converted to signed decimal
representation and returned as a string, exactly as if the
argument and radix 10 were given as arguments to the {@link
#toString(int, int)} method.

@param   i   an integer to be converted.
@return  a string representation of the argument in base&nbsp;10.
"
      end

      operation 7029634 "toUnsignedString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the argument as an unsigned
decimal value.

The argument is converted to unsigned decimal representation
and returned as a string exactly as if the argument and radix
10 were given as arguments to the {@link #toUnsignedString(int,
int)} method.

@param   i  an integer to be converted to an unsigned string.
@return  an unsigned string representation of the argument.
@see     #toUnsignedString(int, int)
@since 1.8
"
      end

      operation 7029762 "getChars"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "i" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Places characters representing the integer i into the
character array buf. The characters are placed into
the buffer backwards starting with the least significant
digit at the specified index (exclusive), and working
backwards from there.

Will fail if i == Integer.MIN_VALUE
"
      end

      attribute 1676034 "sizeTable"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " { 9, 99, 999, 9999, 99999, 999999, 9999999,
                                      99999999, 999999999, Integer.MAX_VALUE }"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7029890 "stringSize"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Requires positive x"
      end

      operation 7030018 "parseInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed integer in the radix
specified by the second argument. The characters in the string
must all be digits of the specified radix (as determined by
whether {@link java.lang.Character#digit(char, int)} returns a
nonnegative value), except that the first character may be an
ASCII minus sign {@code '-'} ({@code '\\u005Cu002D'}) to
indicate a negative value or an ASCII plus sign {@code '+'}
({@code '\\u005Cu002B'}) to indicate a positive value. The
resulting integer value is returned.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>
<li>The first argument is {@code null} or is a string of
length zero.

<li>The radix is either smaller than
{@link java.lang.Character#MIN_RADIX} or
larger than {@link java.lang.Character#MAX_RADIX}.

<li>Any character of the string is not a digit of the specified
radix, except that the first character may be a minus sign
{@code '-'} ({@code '\\u005Cu002D'}) or plus sign
{@code '+'} ({@code '\\u005Cu002B'}) provided that the
string is longer than length 1.

<li>The value represented by the string is not a value of type
{@code int}.
</ul>

<p>Examples:
<blockquote><pre>
parseInt(\"0\", 10) returns 0
parseInt(\"473\", 10) returns 473
parseInt(\"+42\", 10) returns 42
parseInt(\"-0\", 10) returns 0
parseInt(\"-FF\", 16) returns -255
parseInt(\"1100110\", 2) returns 102
parseInt(\"2147483647\", 10) returns 2147483647
parseInt(\"-2147483648\", 10) returns -2147483648
parseInt(\"2147483648\", 10) throws a NumberFormatException
parseInt(\"99\", 8) throws a NumberFormatException
parseInt(\"Kona\", 10) throws a NumberFormatException
parseInt(\"Kona\", 27) returns 411787
</pre></blockquote>

@param      s   the {@code String} containing the integer
                 representation to be parsed
@param      radix   the radix to be used while parsing {@code s}.
@return     the integer represented by the string argument in the
            specified radix.
@exception  NumberFormatException if the {@code String}
            does not contain a parsable {@code int}.
"
      end

      operation 7030146 "parseInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed decimal integer. The
characters in the string must all be decimal digits, except
that the first character may be an ASCII minus sign {@code '-'}
({@code '\\u005Cu002D'}) to indicate a negative value or an
ASCII plus sign {@code '+'} ({@code '\\u005Cu002B'}) to
indicate a positive value. The resulting integer value is
returned, exactly as if the argument and the radix 10 were
given as arguments to the {@link #parseInt(java.lang.String,
int)} method.

@param s    a {@code String} containing the {@code int}
            representation to be parsed
@return     the integer value represented by the argument in decimal.
@exception  NumberFormatException  if the string does not contain a
              parsable integer.
"
      end

      operation 7030274 "parseUnsignedInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as an unsigned integer in the radix
specified by the second argument.  An unsigned integer maps the
values usually associated with negative numbers to positive
numbers larger than {@code MAX_VALUE}.

The characters in the string must all be digits of the
specified radix (as determined by whether {@link
java.lang.Character#digit(char, int)} returns a nonnegative
value), except that the first character may be an ASCII plus
sign {@code '+'} ({@code '\\u005Cu002B'}). The resulting
integer value is returned.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>
<li>The first argument is {@code null} or is a string of
length zero.

<li>The radix is either smaller than
{@link java.lang.Character#MIN_RADIX} or
larger than {@link java.lang.Character#MAX_RADIX}.

<li>Any character of the string is not a digit of the specified
radix, except that the first character may be a plus sign
{@code '+'} ({@code '\\u005Cu002B'}) provided that the
string is longer than length 1.

<li>The value represented by the string is larger than the
largest unsigned {@code int}, 2<sup>32</sup>-1.

</ul>


@param      s   the {@code String} containing the unsigned integer
                 representation to be parsed
@param      radix   the radix to be used while parsing {@code s}.
@return     the integer represented by the string argument in the
            specified radix.
@throws     NumberFormatException if the {@code String}
            does not contain a parsable {@code int}.
@since 1.8
"
      end

      operation 7030402 "parseUnsignedInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as an unsigned decimal integer. The
characters in the string must all be decimal digits, except
that the first character may be an an ASCII plus sign {@code
'+'} ({@code '\\u005Cu002B'}). The resulting integer value
is returned, exactly as if the argument and the radix 10 were
given as arguments to the {@link
#parseUnsignedInt(java.lang.String, int)} method.

@param s   a {@code String} containing the unsigned {@code int}
           representation to be parsed
@return    the unsigned integer value represented by the argument in decimal.
@throws    NumberFormatException  if the string does not contain a
           parsable unsigned integer.
@since 1.8
"
      end

      operation 7030530 "valueOf"
	class_operation public return_type class_ref 137602 // Integer
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Integer} object holding the value
extracted from the specified {@code String} when parsed
with the radix given by the second argument. The first argument
is interpreted as representing a signed integer in the radix
specified by the second argument, exactly as if the arguments
were given to the {@link #parseInt(java.lang.String, int)}
method. The result is an {@code Integer} object that
represents the integer value specified by the string.

<p>In other words, this method returns an {@code Integer}
object equal to the value of:

<blockquote>
 {@code new Integer(Integer.parseInt(s, radix))}
</blockquote>

@param      s   the string to be parsed.
@param      radix the radix to be used in interpreting {@code s}
@return     an {@code Integer} object holding the value
            represented by the string argument in the specified
            radix.
@exception NumberFormatException if the {@code String}
           does not contain a parsable {@code int}.
"
      end

      operation 7030658 "valueOf"
	class_operation public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Integer} object holding the
value of the specified {@code String}. The argument is
interpreted as representing a signed decimal integer, exactly
as if the argument were given to the {@link
#parseInt(java.lang.String)} method. The result is an
{@code Integer} object that represents the integer value
specified by the string.

<p>In other words, this method returns an {@code Integer}
object equal to the value of:

<blockquote>
 {@code new Integer(Integer.parseInt(s))}
</blockquote>

@param      s   the string to be parsed.
@return     an {@code Integer} object holding the value
            represented by the string argument.
@exception  NumberFormatException  if the string cannot be parsed
            as an integer.
"
      end

      class 934146 "IntegerCache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1676162 "low"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " -128"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1676290 "high"
	  class_attribute const_attribute package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3159554 // cache (<unidirectional association>)
	  relation 3159554 --->
	    a role_name "cache" multiplicity "[]" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3159554 // cache (<unidirectional association>)
	    b parent class_ref 137602 // Integer
	end

	extra_member 157698 "initialization"
	  
	  cpp "" ""
	  java "  static {
            // high value may be configured by property
            int h = 127;
            String integerCacheHighPropValue =
                sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");
            if (integerCacheHighPropValue != null) {
                try {
                    int i = parseInt(integerCacheHighPropValue);
                    i = Math.max(i, 127);
                    // Maximum array size is Integer.MAX_VALUE
                    h = Math.min(i, Integer.MAX_VALUE - (-low) -1);
                } catch( NumberFormatException nfe) {
                    // If the property cannot be parsed into an int, ignore it.
                }
            }
            high = h;

            cache = new Integer[(high - low) + 1];
            int j = low;
            for(int k = 0; k < cache.length; k++)
                cache[k] = new Integer(j++);

            // range [-128, 127] must be interned (JLS7 5.1.7)
            assert IntegerCache.high >= 127;
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 7030786 "IntegerCache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7030914 "valueOf"
	class_operation public return_type class_ref 137602 // Integer
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Integer} instance representing the specified
{@code int} value.  If a new {@code Integer} instance is not
required, this method should generally be used in preference to
the constructor {@link #Integer(int)}, as this method is likely
to yield significantly better space and time performance by
caching frequently requested values.

This method will always cache values in the range -128 to 127,
inclusive, and may cache other values outside of this range.

@param  i an {@code int} value.
@return an {@code Integer} instance representing {@code i}.
@since  1.5
"
      end

      attribute 1676418 "value"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the {@code Integer}.

@serial

"
      end

      operation 7031042 "Integer"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Integer} object that
represents the specified {@code int} value.

@param   value   the value to be represented by the
                 {@code Integer} object.
"
      end

      operation 7031170 "Integer"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Integer} object that
represents the {@code int} value indicated by the
{@code String} parameter. The string is converted to an
{@code int} value in exactly the manner used by the
{@code parseInt} method for radix 10.

@param      s   the {@code String} to be converted to an
                {@code Integer}.
@exception  NumberFormatException  if the {@code String} does not
              contain a parsable integer.
@see        java.lang.Integer#parseInt(java.lang.String, int)
"
      end

      operation 7031298 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as a {@code byte}
after a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7031426 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as a {@code short}
after a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7031554 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as an
{@code int}.
"
      end

      operation 7031682 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as a {@code long}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
@see Integer#toUnsignedLong(int)
"
      end

      operation 7031810 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as a {@code float}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7031938 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Integer} as a {@code double}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7032066 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this
{@code Integer}'s value. The value is converted to signed
decimal representation and returned as a string, exactly as if
the integer value were given as an argument to the {@link
java.lang.Integer#toString(int)} method.

@return  a string representation of the value of this object in
         base&nbsp;10.
"
      end

      operation 7032194 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Integer}.

@return  a hash code value for this object, equal to the
         primitive {@code int} value represented by this
         {@code Integer} object.
"
      end

      operation 7032322 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code int} value; compatible with
{@code Integer.hashCode()}.

@param value the value to hash
@since 1.8

@return a hash code value for a {@code int} value.
"
      end

      operation 7032450 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object.  The result is
{@code true} if and only if the argument is not
{@code null} and is an {@code Integer} object that
contains the same {@code int} value as this object.

@param   obj   the object to compare with.
@return  {@code true} if the objects are the same;
         {@code false} otherwise.
"
      end

      operation 7032578 "getInteger"
	class_operation public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the integer value of the system property with the
specified name.

<p>The first argument is treated as the name of a system
property.  System properties are accessible through the {@link
java.lang.System#getProperty(java.lang.String)} method. The
string value of this property is then interpreted as an integer
value using the grammar supported by {@link Integer#decode decode} and
an {@code Integer} object representing this value is returned.

<p>If there is no property with the specified name, if the
specified name is empty or {@code null}, or if the property
does not have the correct numeric format, then {@code null} is
returned.

<p>In other words, this method returns an {@code Integer}
object equal to the value of:

<blockquote>
 {@code getInteger(nm, null)}
</blockquote>

@param   nm   property name.
@return  the {@code Integer} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     java.lang.System#getProperty(java.lang.String)
@see     java.lang.System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7032706 "getInteger"
	class_operation public return_type class_ref 137602 // Integer
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param in name "val" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the integer value of the system property with the
specified name.

<p>The first argument is treated as the name of a system
property.  System properties are accessible through the {@link
java.lang.System#getProperty(java.lang.String)} method. The
string value of this property is then interpreted as an integer
value using the grammar supported by {@link Integer#decode decode} and
an {@code Integer} object representing this value is returned.

<p>The second argument is the default value. An {@code Integer} object
that represents the value of the second argument is returned if there
is no property of the specified name, if the property does not have
the correct numeric format, or if the specified name is empty or
{@code null}.

<p>In other words, this method returns an {@code Integer} object
equal to the value of:

<blockquote>
 {@code getInteger(nm, new Integer(val))}
</blockquote>

but in practice it may be implemented in a manner such as:

<blockquote><pre>
Integer result = getInteger(nm, null);
return (result == null) ? new Integer(val) : result;
</pre></blockquote>

to avoid the unnecessary allocation of an {@code Integer}
object when the default value is not needed.

@param   nm   property name.
@param   val   default value.
@return  the {@code Integer} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     java.lang.System#getProperty(java.lang.String)
@see     java.lang.System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7032834 "getInteger"
	class_operation public return_type class_ref 137602 // Integer
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param inout name "val" type class_ref 137602 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the integer value of the system property with the
specified name.  The first argument is treated as the name of a
system property.  System properties are accessible through the
{@link java.lang.System#getProperty(java.lang.String)} method.
The string value of this property is then interpreted as an
integer value, as per the {@link Integer#decode decode} method,
and an {@code Integer} object representing this value is
returned; in summary:

<ul><li>If the property value begins with the two ASCII characters
        {@code 0x} or the ASCII character {@code #}, not
     followed by a minus sign, then the rest of it is parsed as a
     hexadecimal integer exactly as by the method
     {@link #valueOf(java.lang.String, int)} with radix 16.
<li>If the property value begins with the ASCII character
    {@code 0} followed by another character, it is parsed as an
    octal integer exactly as by the method
    {@link #valueOf(java.lang.String, int)} with radix 8.
<li>Otherwise, the property value is parsed as a decimal integer
exactly as by the method {@link #valueOf(java.lang.String, int)}
with radix 10.
</ul>

<p>The second argument is the default value. The default value is
returned if there is no property of the specified name, if the
property does not have the correct numeric format, or if the
specified name is empty or {@code null}.

@param   nm   property name.
@param   val   default value.
@return  the {@code Integer} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     System#getProperty(java.lang.String)
@see     System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7032962 "decode"
	class_operation public return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a {@code String} into an {@code Integer}.
Accepts decimal, hexadecimal, and octal numbers given
by the following grammar:

<blockquote>
<dl>
<dt><i>DecodableString:</i>
<dd><i>Sign<sub>opt</sub> DecimalNumeral</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0x} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0X} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code #} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0} <i>OctalDigits</i>

<dt><i>Sign:</i>
<dd>{@code -}
<dd>{@code +}
</dl>
</blockquote>

<i>DecimalNumeral</i>, <i>HexDigits</i>, and <i>OctalDigits</i>
are as defined in section 3.10.1 of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.

<p>The sequence of characters following an optional
sign and/or radix specifier (\"{@code 0x}\", \"{@code 0X}\",
\"{@code #}\", or leading zero) is parsed as by the {@code
Integer.parseInt} method with the indicated radix (10, 16, or
8).  This sequence of characters must represent a positive
value or a {@link NumberFormatException} will be thrown.  The
result is negated if first character of the specified {@code
String} is the minus sign.  No whitespace characters are
permitted in the {@code String}.

@param     nm the {@code String} to decode.
@return    an {@code Integer} object holding the {@code int}
            value represented by {@code nm}
@exception NumberFormatException  if the {@code String} does not
           contain a parsable integer.
@see java.lang.Integer#parseInt(java.lang.String, int)
"
      end

      operation 7033090 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherInteger" type class_ref 137602 // Integer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Integer} objects numerically.

@param   anotherInteger   the {@code Integer} to be compared.
@return  the value {@code 0} if this {@code Integer} is
         equal to the argument {@code Integer}; a value less than
         {@code 0} if this {@code Integer} is numerically less
         than the argument {@code Integer}; and a value greater
         than {@code 0} if this {@code Integer} is numerically
          greater than the argument {@code Integer} (signed
          comparison).
@since   1.2
"
      end

      operation 7033218 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code int} values numerically.
The value returned is identical to what would be returned by:
<pre>
   Integer.valueOf(x).compareTo(Integer.valueOf(y))
</pre>

@param  x the first {@code int} to compare
@param  y the second {@code int} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code x < y}; and
        a value greater than {@code 0} if {@code x > y}
@since 1.7
"
      end

      operation 7033346 "compareUnsigned"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code int} values numerically treating the values
as unsigned.

@param  x the first {@code int} to compare
@param  y the second {@code int} to compare
@return the value {@code 0} if {@code x == y}; a value less
        than {@code 0} if {@code x < y} as unsigned values; and
        a value greater than {@code 0} if {@code x > y} as
        unsigned values
@since 1.8
"
      end

      operation 7033474 "toUnsignedLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the argument to a {@code long} by an unsigned
conversion.  In an unsigned conversion to a {@code long}, the
high-order 32 bits of the {@code long} are zero and the
low-order 32 bits are equal to the bits of the integer
argument.

Consequently, zero and positive {@code int} values are mapped
to a numerically equal {@code long} value and negative {@code
int} values are mapped to a {@code long} value equal to the
input plus 2<sup>32</sup>.

@param  x the value to convert to an unsigned {@code long}
@return the argument converted to {@code long} by an unsigned
        conversion
@since 1.8
"
      end

      operation 7033602 "divideUnsigned"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "dividend" explicit_type "int"
	  param in name "divisor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unsigned quotient of dividing the first argument by
the second where each argument and the result is interpreted as
an unsigned value.

<p>Note that in two's complement arithmetic, the three other
basic arithmetic operations of add, subtract, and multiply are
bit-wise identical if the two operands are regarded as both
being signed or both being unsigned.  Therefore separate {@code
addUnsigned}, etc. methods are not provided.

@param dividend the value to be divided
@param divisor the value doing the dividing
@return the unsigned quotient of the first argument divided by
the second argument
@see #remainderUnsigned
@since 1.8
"
      end

      operation 7033730 "remainderUnsigned"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "dividend" explicit_type "int"
	  param in name "divisor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unsigned remainder from dividing the first argument
by the second where each argument and the result is interpreted
as an unsigned value.

@param dividend the value to be divided
@param divisor the value doing the dividing
@return the unsigned remainder of the first argument divided by
the second argument
@see #divideUnsigned
@since 1.8
"
      end

      attribute 1676546 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit twiddling

The number of bits used to represent an {@code int} value in two's
complement binary form.

@since 1.5

"
      end

      attribute 1676674 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code int} value in two's
complement binary form.

@since 1.8

"
      end

      operation 7033858 "highestOneBit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code int} value with at most a single one-bit, in the
position of the highest-order (\"leftmost\") one-bit in the specified
{@code int} value.  Returns zero if the specified value has no
one-bits in its two's complement binary representation, that is, if it
is equal to zero.

@param i the value whose highest one bit is to be computed
@return an {@code int} value with a single one-bit, in the position
    of the highest-order one-bit in the specified value, or zero if
    the specified value is itself equal to zero.
@since 1.5
"
      end

      operation 7033986 "lowestOneBit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code int} value with at most a single one-bit, in the
position of the lowest-order (\"rightmost\") one-bit in the specified
{@code int} value.  Returns zero if the specified value has no
one-bits in its two's complement binary representation, that is, if it
is equal to zero.

@param i the value whose lowest one bit is to be computed
@return an {@code int} value with a single one-bit, in the position
    of the lowest-order one-bit in the specified value, or zero if
    the specified value is itself equal to zero.
@since 1.5
"
      end

      operation 7034114 "numberOfLeadingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of zero bits preceding the highest-order
(\"leftmost\") one-bit in the two's complement binary representation
of the specified {@code int} value.  Returns 32 if the
specified value has no one-bits in its two's complement representation,
in other words if it is equal to zero.

<p>Note that this method is closely related to the logarithm base 2.
For all positive {@code int} values x:
<ul>
<li>floor(log<sub>2</sub>(x)) = {@code 31 - numberOfLeadingZeros(x)}
<li>ceil(log<sub>2</sub>(x)) = {@code 32 - numberOfLeadingZeros(x - 1)}
</ul>

@param i the value whose number of leading zeros is to be computed
@return the number of zero bits preceding the highest-order
    (\"leftmost\") one-bit in the two's complement binary representation
    of the specified {@code int} value, or 32 if the value
    is equal to zero.
@since 1.5
"
      end

      operation 7034242 "numberOfTrailingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of zero bits following the lowest-order (\"rightmost\")
one-bit in the two's complement binary representation of the specified
{@code int} value.  Returns 32 if the specified value has no
one-bits in its two's complement representation, in other words if it is
equal to zero.

@param i the value whose number of trailing zeros is to be computed
@return the number of zero bits following the lowest-order (\"rightmost\")
    one-bit in the two's complement binary representation of the
    specified {@code int} value, or 32 if the value is equal
    to zero.
@since 1.5
"
      end

      operation 7034370 "bitCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of one-bits in the two's complement binary
representation of the specified {@code int} value.  This function is
sometimes referred to as the <i>population count</i>.

@param i the value whose bits are to be counted
@return the number of one-bits in the two's complement binary
    representation of the specified {@code int} value.
@since 1.5
"
      end

      operation 7034498 "rotateLeft"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by rotating the two's complement binary
representation of the specified {@code int} value left by the
specified number of bits.  (Bits shifted out of the left hand, or
high-order, side reenter on the right, or low-order.)

<p>Note that left rotation with a negative distance is equivalent to
right rotation: {@code rotateLeft(val, -distance) == rotateRight(val,
distance)}.  Note also that rotation by any multiple of 32 is a
no-op, so all but the last five bits of the rotation distance can be
ignored, even if the distance is negative: {@code rotateLeft(val,
distance) == rotateLeft(val, distance & 0x1F)}.

@param i the value whose bits are to be rotated left
@param distance the number of bit positions to rotate left
@return the value obtained by rotating the two's complement binary
    representation of the specified {@code int} value left by the
    specified number of bits.
@since 1.5
"
      end

      operation 7034626 "rotateRight"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by rotating the two's complement binary
representation of the specified {@code int} value right by the
specified number of bits.  (Bits shifted out of the right hand, or
low-order, side reenter on the left, or high-order.)

<p>Note that right rotation with a negative distance is equivalent to
left rotation: {@code rotateRight(val, -distance) == rotateLeft(val,
distance)}.  Note also that rotation by any multiple of 32 is a
no-op, so all but the last five bits of the rotation distance can be
ignored, even if the distance is negative: {@code rotateRight(val,
distance) == rotateRight(val, distance & 0x1F)}.

@param i the value whose bits are to be rotated right
@param distance the number of bit positions to rotate right
@return the value obtained by rotating the two's complement binary
    representation of the specified {@code int} value right by the
    specified number of bits.
@since 1.5
"
      end

      operation 7034754 "reverse"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bits in the
two's complement binary representation of the specified {@code int}
value.

@param i the value to be reversed
@return the value obtained by reversing order of the bits in the
    specified {@code int} value.
@since 1.5
"
      end

      operation 7034882 "signum"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the specified {@code int} value.  (The
return value is -1 if the specified value is negative; 0 if the
specified value is zero; and 1 if the specified value is positive.)

@param i the value whose signum is to be computed
@return the signum function of the specified {@code int} value.
@since 1.5
"
      end

      operation 7035010 "reverseBytes"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bytes in the
two's complement representation of the specified {@code int} value.

@param i the value whose bytes are to be reversed
@return the value obtained by reversing the bytes in the specified
    {@code int} value.
@since 1.5
"
      end

      operation 7035138 "sum"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds two integers together as per the + operator.

@param a the first operand
@param b the second operand
@return the sum of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7035266 "max"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code int} values
as if by calling {@link Math#max(int, int) Math.max}.

@param a the first operand
@param b the second operand
@return the greater of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7035394 "min"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code int} values
as if by calling {@link Math#min(int, int) Math.min}.

@param a the first operand
@param b the second operand
@return the smaller of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      attribute 1676802 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1360826667806852920L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 140930 "Process"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@link ProcessBuilder#start()} and
{@link Runtime#exec(String[],String[],File) Runtime.exec}
methods create a native process and return an instance of a
subclass of {@code Process} that can be used to control the process
and obtain information about it.  The class {@code Process}
provides methods for performing input from the process, performing
output to the process, waiting for the process to complete,
checking the exit status of the process, and destroying (killing)
the process.

<p>The methods that create processes may not work well for special
processes on certain native platforms, such as native windowing
processes, daemon processes, Win16/DOS processes on Microsoft
Windows, or shell scripts.

<p>By default, the created subprocess does not have its own terminal
or console.  All its standard I/O (i.e. stdin, stdout, stderr)
operations will be redirected to the parent process, where they can
be accessed via the streams obtained using the methods
{@link #getOutputStream()},
{@link #getInputStream()}, and
{@link #getErrorStream()}.
The parent process uses these streams to feed input to and get output
from the subprocess.  Because some native platforms only provide
limited buffer size for standard input and output streams, failure
to promptly write the input stream or read the output stream of
the subprocess may cause the subprocess to block, or even deadlock.

<p>Where desired, <a href=\"ProcessBuilder.html#redirect-input\">
subprocess I/O can also be redirected</a>
using methods of the {@link ProcessBuilder} class.

<p>The subprocess is not killed when there are no more references to
the {@code Process} object, but rather the subprocess
continues executing asynchronously.

<p>There is no requirement that a process represented by a {@code
Process} object execute asynchronously or concurrently with respect
to the Java process that owns the {@code Process} object.

<p>As of 1.5, {@link ProcessBuilder#start()} is the preferred way
to create a {@code Process}.

@since   JDK1.0
"
      operation 7059842 "getOutputStream"
	abstract public return_type class_ref 151298 // OutputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the output stream connected to the normal input of the
subprocess.  Output to the stream is piped into the standard
input of the process represented by this {@code Process} object.

<p>If the standard input of the subprocess has been redirected using
{@link ProcessBuilder#redirectInput(Redirect)
ProcessBuilder.redirectInput}
then this method will return a
<a href=\"ProcessBuilder.html#redirect-input\">null output stream</a>.

<p>Implementation note: It is a good idea for the returned
output stream to be buffered.

@return the output stream connected to the normal input of the
        subprocess
"
      end

      operation 7059970 "getInputStream"
	abstract public return_type class_ref 146434 // InputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input stream connected to the normal output of the
subprocess.  The stream obtains data piped from the standard
output of the process represented by this {@code Process} object.

<p>If the standard output of the subprocess has been redirected using
{@link ProcessBuilder#redirectOutput(Redirect)
ProcessBuilder.redirectOutput}
then this method will return a
<a href=\"ProcessBuilder.html#redirect-output\">null input stream</a>.

<p>Otherwise, if the standard error of the subprocess has been
redirected using
{@link ProcessBuilder#redirectErrorStream(boolean)
ProcessBuilder.redirectErrorStream}
then the input stream returned by this method will receive the
merged standard output and the standard error of the subprocess.

<p>Implementation note: It is a good idea for the returned
input stream to be buffered.

@return the input stream connected to the normal output of the
        subprocess
"
      end

      operation 7060098 "getErrorStream"
	abstract public return_type class_ref 146434 // InputStream
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the input stream connected to the error output of the
subprocess.  The stream obtains data piped from the error output
of the process represented by this {@code Process} object.

<p>If the standard error of the subprocess has been redirected using
{@link ProcessBuilder#redirectError(Redirect)
ProcessBuilder.redirectError} or
{@link ProcessBuilder#redirectErrorStream(boolean)
ProcessBuilder.redirectErrorStream}
then this method will return a
<a href=\"ProcessBuilder.html#redirect-output\">null input stream</a>.

<p>Implementation note: It is a good idea for the returned
input stream to be buffered.

@return the input stream connected to the error output of
        the subprocess
"
      end

      operation 7060226 "waitFor"
	abstract public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the current thread to wait, if necessary, until the
process represented by this {@code Process} object has
terminated.  This method returns immediately if the subprocess
has already terminated.  If the subprocess has not yet
terminated, the calling thread will be blocked until the
subprocess exits.

@return the exit value of the subprocess represented by this
        {@code Process} object.  By convention, the value
        {@code 0} indicates normal termination.
@throws InterruptedException if the current thread is
        {@linkplain Thread#interrupt() interrupted} by another
        thread while it is waiting, then the wait is ended and
        an {@link InterruptedException} is thrown.
"
      end

      operation 7060354 "waitFor"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param inout name "unit" type class_ref 935938 // TimeUnit
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the current thread to wait, if necessary, until the
subprocess represented by this {@code Process} object has
terminated, or the specified waiting time elapses.

<p>If the subprocess has already terminated then this method returns
immediately with the value {@code true}.  If the process has not
terminated and the timeout value is less than, or equal to, zero, then
this method returns immediately with the value {@code false}.

<p>The default implementation of this methods polls the {@code exitValue}
to check if the process has terminated. Concrete implementations of this
class are strongly encouraged to override this method with a more
efficient implementation.

@param timeout the maximum time to wait
@param unit the time unit of the {@code timeout} argument
@return {@code true} if the subprocess has exited and {@code false} if
        the waiting time elapsed before the subprocess has exited.
@throws InterruptedException if the current thread is interrupted
        while waiting.
@throws NullPointerException if unit is null
@since 1.8
"
      end

      operation 7060482 "exitValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exit value for the subprocess.

@return the exit value of the subprocess represented by this
        {@code Process} object.  By convention, the value
        {@code 0} indicates normal termination.
@throws IllegalThreadStateException if the subprocess represented
        by this {@code Process} object has not yet terminated
"
      end

      operation 7060610 "destroy"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Kills the subprocess. Whether the subprocess represented by this
{@code Process} object is forcibly terminated or not is
implementation dependent.
"
      end

      operation 7060738 "destroyForcibly"
	public return_type class_ref 140930 // Process
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Kills the subprocess. The subprocess represented by this
{@code Process} object is forcibly terminated.

<p>The default implementation of this method invokes {@link #destroy}
and so may not forcibly terminate the process. Concrete implementations
of this class are strongly encouraged to override this method with a
compliant implementation.  Invoking this method on {@code Process}
objects returned by {@link ProcessBuilder#start} and
{@link Runtime#exec} will forcibly terminate the process.

<p>Note: The subprocess may not terminate immediately.
i.e. {@code isAlive()} may return true for a brief period
after {@code destroyForcibly()} is called. This method
may be chained to {@code waitFor()} if needed.

@return the {@code Process} object representing the
        subprocess to be forcibly destroyed.
@since 1.8
"
      end

      operation 7060866 "isAlive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the subprocess represented by this {@code Process} is
alive.

@return {@code true} if the subprocess represented by this
        {@code Process} object has not yet terminated.
@since 1.8
"
      end
    end

    class 146690 "AutoCloseable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object that may hold resources (such as file or socket handles)
until it is closed. The {@link #close()} method of an {@code AutoCloseable}
object is called automatically when exiting a {@code
try}-with-resources block for which the object has been declared in
the resource specification header. This construction ensures prompt
release, avoiding resource exhaustion exceptions and errors that
may otherwise occur.

@apiNote
<p>It is possible, and in fact common, for a base class to
implement AutoCloseable even though not all of its subclasses or
instances will hold releasable resources.  For code that must operate
in complete generality, or when it is known that the {@code AutoCloseable}
instance requires resource release, it is recommended to use {@code
try}-with-resources constructions. However, when using facilities such as
{@link java.util.stream.Stream} that support both I/O-based and
non-I/O-based forms, {@code try}-with-resources blocks are in
general unnecessary when using non-I/O-based forms.

@author Josh Bloch
@since 1.7
"
      operation 176642 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes this resource, relinquishing any underlying resources.
This method is invoked automatically on objects managed by the
{@code try}-with-resources statement.

<p>While this interface method is declared to throw {@code
Exception}, implementers are <em>strongly</em> encouraged to
declare concrete implementations of the {@code close} method to
throw more specific exceptions, or to throw no exception at all
if the close operation cannot fail.

<p> Cases where the close operation may fail require careful
attention by implementers. It is strongly advised to relinquish
the underlying resources and to internally <em>mark</em> the
resource as closed, prior to throwing the exception. The {@code
close} method is unlikely to be invoked more than once and so
this ensures that the resources are released in a timely manner.
Furthermore it reduces problems that could arise when the resource
wraps, or is wrapped, by another resource.

<p><em>Implementers of this interface are also strongly advised
to not have the {@code close} method throw {@link
InterruptedException}.</em>

This exception interacts with a thread's interrupted status,
and runtime misbehavior is likely to occur if an {@code
InterruptedException} is {@linkplain Throwable#addSuppressed
suppressed}.

More generally, if it would cause problems for an
exception to be suppressed, the {@code AutoCloseable.close}
method should not throw it.

<p>Note that unlike the {@link java.io.Closeable#close close}
method of {@link java.io.Closeable}, this {@code close} method
is <em>not</em> required to be idempotent.  In other words,
calling this {@code close} method more than once may have some
visible side effect, unlike {@code Closeable.close} which is
required to have no effect if called more than once.

However, implementers of this interface are strongly encouraged
to make their {@code close} methods idempotent.

@throws Exception if this resource cannot be closed
"
      end
    end

    class 146946 "Void"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Void} class is an uninstantiable placeholder class to hold a
reference to the {@code Class} object representing the Java keyword
void.

@author  unascribed
@since   JDK1.1
"
      classrelation 3177474 // TYPE (<unidirectional association>)
	relation 3177474 --->
	  a role_name "TYPE" init_value " (Class<Void>) Class.getPrimitiveClass(\"void\")" class_relation const_relation public
	    comment "
The {@code Class} object representing the pseudo-type corresponding to
the keyword {@code void}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Void> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3177474 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 7147138 "Void"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The Void class cannot be instantiated.
"
      end
    end

    class 166018 "StringBuffer"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A thread-safe, mutable sequence of characters.
A string buffer is like a {@link String}, but can be modified. At any
point in time it contains some particular sequence of characters, but
the length and content of the sequence can be changed through certain
method calls.
<p>
String buffers are safe for use by multiple threads. The methods
are synchronized where necessary so that all the operations on any
particular instance behave as if they occur in some serial order
that is consistent with the order of the method calls made by each of
the individual threads involved.
<p>
The principal operations on a {@code StringBuffer} are the
{@code append} and {@code insert} methods, which are
overloaded so as to accept data of any type. Each effectively
converts a given datum to a string and then appends or inserts the
characters of that string to the string buffer. The
{@code append} method always adds these characters at the end
of the buffer; the {@code insert} method adds the characters at
a specified point.
<p>
For example, if {@code z} refers to a string buffer object
whose current contents are {@code \"start\"}, then
the method call {@code z.append(\"le\")} would cause the string
buffer to contain {@code \"startle\"}, whereas
{@code z.insert(4, \"le\")} would alter the string buffer to
contain {@code \"starlet\"}.
<p>
In general, if sb refers to an instance of a {@code StringBuffer},
then {@code sb.append(x)} has the same effect as
{@code sb.insert(sb.length(), x)}.
<p>
Whenever an operation occurs involving a source sequence (such as
appending or inserting from a source sequence), this class synchronizes
only on the string buffer performing the operation, not on the source.
Note that while {@code StringBuffer} is designed to be safe to use
concurrently from multiple threads, if the constructor or the
{@code append} or {@code insert} operation is passed a source sequence
that is shared across threads, the calling code must ensure
that the operation has a consistent and unchanging view of the source
sequence for the duration of the operation.
This could be satisfied by the caller holding a lock during the
operation's call, by using an immutable source sequence, or by not
sharing the source sequence across threads.
<p>
Every string buffer has a capacity. As long as the length of the
character sequence contained in the string buffer does not exceed
the capacity, it is not necessary to allocate a new internal
buffer array. If the internal buffer overflows, it is
automatically made larger.
<p>
Unless otherwise noted, passing a {@code null} argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.
<p>
As of  release JDK 5, this class has been supplemented with an equivalent
class designed for use by a single thread, {@link StringBuilder}.  The
{@code StringBuilder} class should generally be used in preference to
this one, as it supports all of the same operations but it is faster, as
it performs no synchronization.

@author      Arthur van Hoff
@see     java.lang.StringBuilder
@see     java.lang.String
@since   JDK1.0
"
      classrelation 3170690 // <generalisation>
	relation 3170690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3170690 // <generalisation>
	  b parent class_ref 928770 // AbstractStringBuilder
      end

      classrelation 3170818 // <realization>
	relation 3170818 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3170818 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3170946 // <realization>
	relation 3170946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3170946 // <realization>
	  b parent class_ref 429442 // CharSequence
      end

      attribute 1684738 "toStringCache"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A cache of the last value returned by toString. Cleared
whenever the StringBuffer is modified.

"
      end

      attribute 1684866 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3388685877147921107L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 7113218 "StringBuffer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string buffer with no characters in it and an
initial capacity of 16 characters.
"
      end

      operation 7113346 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string buffer with no characters in it and
the specified initial capacity.

@param      capacity  the initial capacity.
@exception  NegativeArraySizeException  if the {@code capacity}
              argument is less than {@code 0}.
"
      end

      operation 7113474 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string buffer initialized to the contents of the
specified string. The initial capacity of the string buffer is
{@code 16} plus the length of the string argument.

@param   str   the initial contents of the buffer.
"
      end

      operation 7113602 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "seq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string buffer that contains the same characters
as the specified {@code CharSequence}. The initial capacity of
the string buffer is {@code 16} plus the length of the
{@code CharSequence} argument.
<p>
If the length of the specified {@code CharSequence} is
less than or equal to zero, then an empty buffer of capacity
{@code 16} is returned.

@param      seq   the sequence to copy.
@since 1.5
"
      end

      operation 7113730 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7113858 "capacity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7113986 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimumCapacity" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7114114 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.5
"
      end

      operation 7114242 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@see        #length()
"
      end

      operation 7114370 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@see        #length()
"
      end

      operation 7114498 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.5
"
      end

      operation 7114626 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since     1.5
"
      end

      operation 7114754 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since     1.5
"
      end

      operation 7114882 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since     1.5
"
      end

      operation 7115010 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7115138 "setCharAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@see        #length()
"
      end

      operation 7115266 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7115394 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7115522 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "sb" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified {@code StringBuffer} to this sequence.
<p>
The characters of the {@code StringBuffer} argument are appended,
in order, to the contents of this {@code StringBuffer}, increasing the
length of this {@code StringBuffer} by the length of the argument.
If {@code sb} is {@code null}, then the four characters
{@code \"null\"} are appended to this {@code StringBuffer}.
<p>
Let <i>n</i> be the length of the old character sequence, the one
contained in the {@code StringBuffer} just prior to execution of the
{@code append} method. Then the character at index <i>k</i> in
the new character sequence is equal to the character at index <i>k</i>
in the old character sequence, if <i>k</i> is less than <i>n</i>;
otherwise, it is equal to the character at index <i>k-n</i> in the
argument {@code sb}.
<p>
This method synchronizes on {@code this}, the destination
object, but does not synchronize on the source ({@code sb}).

@param   sb   the {@code StringBuffer} to append.
@return  a reference to this object.
@since 1.4
"
      end

      operation 7115650 "append"
	package return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "asb" type class_ref 928770 // AbstractStringBuilder
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since 1.8
"
      end

      operation 7115778 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Appends the specified {@code CharSequence} to this
sequence.
<p>
The characters of the {@code CharSequence} argument are appended,
in order, increasing the length of this sequence by the length of the
argument.

<p>The result of this method is exactly the same as if it were an
invocation of this.append(s, 0, s.length());

<p>This method synchronizes on {@code this}, the destination
object, but does not synchronize on the source ({@code s}).

<p>If {@code s} is {@code null}, then the four characters
{@code \"null\"} are appended.

@param   s the {@code CharSequence} to append.
@return  a reference to this object.
@since 1.5
"
      end

      operation 7115906 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 3
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@since      1.5
"
      end

      operation 7116034 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7116162 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 3
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7116290 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7116418 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7116546 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7116674 "appendCodePoint"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since 1.5
"
      end

      operation 7116802 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "lng" explicit_type "long"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7116930 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7117058 "append"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7117186 "delete"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7117314 "deleteCharAt"
	public return_type class_ref 166018 // StringBuffer
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7117442 "replace"
	public return_type class_ref 166018 // StringBuffer
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7117570 "substring"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7117698 "subSequence"
	public return_type class_ref 429442 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@since      1.4
"
      end

      operation 7117826 "substring"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7117954 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
@since      1.2
"
      end

      operation 7118082 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7118210 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7118338 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7118466 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@since      1.5
"
      end

      operation 7118594 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 4
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
@since      1.5
"
      end

      operation 7118722 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7118850 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7118978 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7119106 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7119234 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7119362 "insert"
	public return_type class_ref 166018 // StringBuffer
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7119490 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.4
"
      end

      operation 7119618 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.4
"
      end

      operation 7119746 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.4
"
      end

      operation 7119874 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since      1.4
"
      end

      operation 7120002 "reverse"
	public return_type class_ref 166018 // StringBuffer
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since   JDK1.0.2
"
      end

      operation 7120130 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 3171074 // serialPersistentFields (<unidirectional association>)
	relation 3171074 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
    {
        new java.io.ObjectStreamField(\"value\", char[].class),
        new java.io.ObjectStreamField(\"count\", Integer.TYPE),
        new java.io.ObjectStreamField(\"shared\", Boolean.TYPE),
    }" class_relation const_relation private
	    comment "
Serializable fields for StringBuffer.

@serialField value  char[]
             The backing character array of this StringBuffer.
@serialField count int
             The number of characters in this StringBuffer.
@serialField shared  boolean
             A flag indicating whether the backing array is shared.
             The value is ignored upon deserialization.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3171074 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 7120258 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the StringBuffer from
a stream.
"
      end

      operation 7120386 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the StringBuffer from
a stream.
"
      end
    end

    class 169730 "ClassNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to load in a class through its
string name using:
<ul>
<li>The <code>forName</code> method in class <code>Class</code>.
<li>The <code>findSystemClass</code> method in class
    <code>ClassLoader</code> .
<li>The <code>loadClass</code> method in class <code>ClassLoader</code>.
</ul>
<p>
but no definition for the class with the specified name could be found.

<p>As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The \"optional exception
that was raised while loading the class\" that may be provided at
construction time and accessed via the {@link #getException()} method is
now known as the <i>cause</i>, and may be accessed via the {@link
Throwable#getCause()} method, as well as the aforementioned \"legacy method.\"

@author  unascribed
@see     java.lang.Class#forName(java.lang.String)
@see     java.lang.ClassLoader#findSystemClass(java.lang.String)
@see     java.lang.ClassLoader#loadClass(java.lang.String, boolean)
@since   JDK1.0
"
      classrelation 3154818 // <generalisation>
	relation 3154818 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3154818 // <generalisation>
	  b parent class_ref 932226 // ReflectiveOperationException
      end

      attribute 1668866 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9176873029745254542L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "use serialVersionUID from JDK 1.1.X for interoperability

"
      end

      classrelation 3154946 // ex (<unidirectional association>)
	relation 3154946 --->
	  a role_name "ex" private
	    comment "
This field holds the exception ex if the
ClassNotFoundException(String s, Throwable ex) constructor was
used to instantiate the object
@serial
@since 1.2

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3154946 // ex (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 7007490 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassNotFoundException</code> with no detail message.
"
      end

      operation 7007618 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassNotFoundException</code> with the
specified detail message.

@param   s   the detail message.
"
      end

      operation 7007746 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassNotFoundException</code> with the
specified detail message and optional exception that was
raised while loading the class.

@param s the detail message
@param ex the exception that was raised while loading the class
@since 1.2
"
      end

      operation 7007874 "getException"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception that was raised if an error occurred while
attempting to load the class. Otherwise, returns <tt>null</tt>.

<p>This method predates the general-purpose exception chaining facility.
The {@link Throwable#getCause()} method is now the preferred means of
obtaining this information.

@return the <code>Exception</code> that was raised while loading a class
@since 1.2
"
      end

      operation 7008002 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this exception (the exception that was raised
if an error occurred while attempting to load the class; otherwise
<tt>null</tt>).

@return  the cause of this exception.
@since   1.4
"
      end
    end

    class 171138 "SecurityException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by the security manager to indicate a security violation.

@author  unascribed
@see     java.lang.SecurityManager
@since   JDK1.0
"
      classrelation 3167362 // <generalisation>
	relation 3167362 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3167362 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1681282 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6878364983674394167L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7079938 "SecurityException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SecurityException</code> with no detail  message.
"
      end

      operation 7080066 "SecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>SecurityException</code> with the specified
detail message.

@param   s   the detail message.
"
      end

      operation 7080194 "SecurityException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SecurityException</code> with the specified
detail message and cause.

@param message the detail message (which is saved for later retrieval
       by the {@link #getMessage()} method).
@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5
"
      end

      operation 7080322 "SecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>SecurityException</code> with the specified cause
and a detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).

@param cause the cause (which is saved for later retrieval by the
       {@link #getCause()} method).  (A <tt>null</tt> value is permitted,
       and indicates that the cause is nonexistent or unknown.)
@since 1.5
"
      end
    end

    class 172034 "Enum"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends "Enum<E>"
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the common base class of all Java language enumeration types.

More information about enums, including descriptions of the
implicitly declared methods synthesized by the compiler, can be
found in section 8.9 of
<cite>The Java&trade; Language Specification</cite>.

<p> Note that when using an enumeration type as the type of a set
or as the type of the keys in a map, specialized and efficient
{@linkplain java.util.EnumSet set} and {@linkplain
java.util.EnumMap map} implementations are available.

@param <E> The enum type subclass
@author  Josh Bloch
@author  Neal Gafter
@see     Class#getEnumConstants()
@see     java.util.EnumSet
@see     java.util.EnumMap
@since   1.5
"
      classrelation 3155970 // <realization>
	relation 3155970 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3155970 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      classrelation 3156098 // <realization>
	relation 3156098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3156098 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3156226 // name (<unidirectional association>)
	relation 3156226 --->
	  a role_name "name" const_relation private
	    comment "
The name of this enum constant, as declared in the enum declaration.
Most programmers should use the {@link #toString} method rather than
accessing this field.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3156226 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7015682 "name"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this enum constant, exactly as declared in its
enum declaration.

<b>Most programmers should use the {@link #toString} method in
preference to this one, as the toString method may return
a more user-friendly name.</b>  This method is designed primarily for
use in specialized situations where correctness depends on getting the
exact name, which will not vary from release to release.

@return the name of this enum constant
"
      end

      attribute 1671938 "ordinal"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The ordinal of this enumeration constant (its position
in the enum declaration, where the initial constant is assigned
an ordinal of zero).

Most programmers will have no use for this field.  It is designed
for use by sophisticated enum-based data structures, such as
{@link java.util.EnumSet} and {@link java.util.EnumMap}.

"
      end

      operation 7015810 "ordinal"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ordinal of this enumeration constant (its position
in its enum declaration, where the initial constant is assigned
an ordinal of zero).

Most programmers will have no use for this method.  It is
designed for use by sophisticated enum-based data structures, such
as {@link java.util.EnumSet} and {@link java.util.EnumMap}.

@return the ordinal of this enumeration constant
"
      end

      operation 7015938 "Enum"
	cpp_inline protected explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "ordinal" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  Programmers cannot invoke this constructor.
It is for use by code emitted by the compiler in response to
enum type declarations.

@param name - The name of this enum constant, which is the identifier
              used to declare it.
@param ordinal - The ordinal of this enumeration constant (its position
        in the enum declaration, where the initial constant is assigned
        an ordinal of zero).
"
      end

      operation 7016066 "toString"
	cpp_inline public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this enum constant, as contained in the
declaration.  This method may be overridden, though it typically
isn't necessary or desirable.  An enum type should override this
method when a more \"programmer-friendly\" string form exists.

@return the name of this enum constant
"
      end

      operation 7016194 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 129538 // Object
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified object is equal to this
enum constant.

@param other the object to be compared for equality with this object.
@return  true if the specified object is equal to this
         enum constant.
"
      end

      operation 7016322 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for this enum constant.

@return a hash code for this enum constant.
"
      end

      operation 7016450 "clone"
	cpp_inline protected return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws CloneNotSupportedException.  This guarantees that enums
are never cloned, which is necessary to preserve their \"singleton\"
status.

@return (never returns)
"
      end

      operation 7016578 "compareTo"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" explicit_type "E"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this enum with the specified object for order.  Returns a
negative integer, zero, or a positive integer as this object is less
than, equal to, or greater than the specified object.

Enum constants are only comparable to other enum constants of the
same enum type.  The natural order implemented by this
method is the order in which the constants are declared.
"
      end

      operation 7016706 "getDeclaringClass"
	cpp_inline public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the Class object corresponding to this enum constant's
enum type.  Two enum constants e1 and  e2 are of the
same enum type if and only if
  e1.getDeclaringClass() == e2.getDeclaringClass().
(The value returned by this method may differ from the one returned
by the {@link Object#getClass} method for enum constants with
constant-specific class bodies.)

@return the Class object corresponding to this enum constant's
    enum type
"
      end

      operation 7016834 "valueOf"
	class_operation cpp_inline public explicit_return_type "T"
	nparams 2
	  param inout name "enumType" type class_ref 130818 // Class
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Enum<T>> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the enum constant of the specified enum type with the
specified name.  The name must match exactly an identifier used
to declare an enum constant in this type.  (Extraneous whitespace
characters are not permitted.)

<p>Note that for a particular enum type {@code T}, the
implicitly declared {@code public static T valueOf(String)}
method on that enum may be used instead of this method to map
from a name to the corresponding enum constant.  All the
constants of an enum type can be obtained by calling the
implicit {@code public static T[] values()} method of that
type.

@param <T> The enum type whose constant is to be returned
@param enumType the {@code Class} object of the enum type from which
     to return a constant
@param name the name of the constant to return
@return the enum constant of the specified enum type with the
     specified name
@throws IllegalArgumentException if the specified enum type has
        no constant with the specified name, or the specified
        class object does not represent an enum type
@throws NullPointerException if {@code enumType} or {@code name}
        is null
@since 1.5
"
      end

      operation 7016962 "finalize"
	cpp_inline protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "enum classes cannot have finalize methods.
"
      end

      operation 7017090 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "prevent default deserialization
"
      end

      operation 7017218 "readObjectNoData"
	cpp_inline private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 261506 // ObjectStreamException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 173058 "StringBuilder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A mutable sequence of characters.  This class provides an API compatible
with {@code StringBuffer}, but with no guarantee of synchronization.
This class is designed for use as a drop-in replacement for
{@code StringBuffer} in places where the string buffer was being
used by a single thread (as is generally the case).   Where possible,
it is recommended that this class be used in preference to
{@code StringBuffer} as it will be faster under most implementations.

<p>The principal operations on a {@code StringBuilder} are the
{@code append} and {@code insert} methods, which are
overloaded so as to accept data of any type. Each effectively
converts a given datum to a string and then appends or inserts the
characters of that string to the string builder. The
{@code append} method always adds these characters at the end
of the builder; the {@code insert} method adds the characters at
a specified point.
<p>
For example, if {@code z} refers to a string builder object
whose current contents are \"{@code start}\", then
the method call {@code z.append(\"le\")} would cause the string
builder to contain \"{@code startle}\", whereas
{@code z.insert(4, \"le\")} would alter the string builder to
contain \"{@code starlet}\".
<p>
In general, if sb refers to an instance of a {@code StringBuilder},
then {@code sb.append(x)} has the same effect as
{@code sb.insert(sb.length(), x)}.
<p>
Every string builder has a capacity. As long as the length of the
character sequence contained in the string builder does not exceed
the capacity, it is not necessary to allocate a new internal
buffer. If the internal buffer overflows, it is automatically made larger.

<p>Instances of {@code StringBuilder} are not safe for
use by multiple threads. If such synchronization is required then it is
recommended that {@link java.lang.StringBuffer} be used.

<p>Unless otherwise noted, passing a {@code null} argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@author      Michael McCloskey
@see         java.lang.StringBuffer
@see         java.lang.String
@since       1.5
"
      classrelation 3171202 // <generalisation>
	relation 3171202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3171202 // <generalisation>
	  b parent class_ref 928770 // AbstractStringBuilder
      end

      classrelation 3171330 // <realization>
	relation 3171330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3171330 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3171458 // <realization>
	relation 3171458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3171458 // <realization>
	  b parent class_ref 429442 // CharSequence
      end

      attribute 1684994 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4383685877147921099L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID for interoperability 
"
      end

      operation 7120514 "StringBuilder"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string builder with no characters in it and an
initial capacity of 16 characters.
"
      end

      operation 7120642 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string builder with no characters in it and an
initial capacity specified by the {@code capacity} argument.

@param      capacity  the initial capacity.
@throws     NegativeArraySizeException  if the {@code capacity}
              argument is less than {@code 0}.
"
      end

      operation 7120770 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string builder initialized to the contents of the
specified string. The initial capacity of the string builder is
{@code 16} plus the length of the string argument.

@param   str   the initial contents of the buffer.
"
      end

      operation 7120898 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "seq" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a string builder that contains the same characters
as the specified {@code CharSequence}. The initial capacity of
the string builder is {@code 16} plus the length of the
{@code CharSequence} argument.

@param      seq   the sequence to copy.
"
      end

      operation 7121026 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7121154 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7121282 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "sb" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified {@code StringBuffer} to this sequence.
<p>
The characters of the {@code StringBuffer} argument are appended,
in order, to this sequence, increasing the
length of this sequence by the length of the argument.
If {@code sb} is {@code null}, then the four characters
{@code \"null\"} are appended to this sequence.
<p>
Let <i>n</i> be the length of this character sequence just prior to
execution of the {@code append} method. Then the character at index
<i>k</i> in the new character sequence is equal to the character at
index <i>k</i> in the old character sequence, if <i>k</i> is less than
<i>n</i>; otherwise, it is equal to the character at index <i>k-n</i>
in the argument {@code sb}.

@param   sb   the {@code StringBuffer} to append.
@return  a reference to this object.
"
      end

      operation 7121410 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7121538 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 3
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws     IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7121666 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7121794 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 3
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7121922 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122050 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122178 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122306 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "lng" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122434 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122562 "append"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7122690 "appendCodePoint"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@since 1.5
"
      end

      operation 7122818 "delete"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7122946 "deleteCharAt"
	public return_type class_ref 173058 // StringBuilder
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123074 "replace"
	public return_type class_ref 173058 // StringBuilder
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123202 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123330 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123458 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123586 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123714 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123842 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 4
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7123970 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124098 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124226 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124354 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124482 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124610 "insert"
	public return_type class_ref 173058 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws StringIndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 7124738 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7124866 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7124994 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7125122 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7125250 "reverse"
	public return_type class_ref 173058 // StringBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7125378 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7125506 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the state of the {@code StringBuilder} instance to a stream
(that is, serialize it).

@serialData the number of characters currently stored in the string
            builder ({@code int}), followed by the characters in the
            string builder ({@code char[]}).   The length of the
            {@code char} array may be greater than the number of
            characters currently stored in the string builder, in which
            case extra characters are ignored.
"
      end

      operation 7125634 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "readObject is called to restore the state of the StringBuffer from
a stream.
"
      end
    end

    class 184322 "Iterable"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Implementing this interface allows an object to be the target of
the \"for-each loop\" statement. See
<strong>
<a href=\"{@docRoot}/../technotes/guides/language/foreach.html\">For-each Loop</a>
</strong>

@param <T> the type of elements returned by the iterator

@since 1.5
@jls 14.14.2 The enhanced for statement
"
      operation 513154 "iterator"
	cpp_inline public return_type class_ref 132994 // Iterator
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterator over elements of type {@code T}.

@return an Iterator.
"
      end

      operation 513282 "forEach"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "action" type class_ref 163458 // Consumer
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the given action for each element of the {@code Iterable}
until all elements have been processed or the action throws an
exception.  Unless otherwise specified by the implementing class,
actions are performed in the order of iteration (if an iteration order
is specified).  Exceptions thrown by the action are relayed to the
caller.

@implSpec
<p>The default implementation behaves as if:
<pre>{@code
    for (T t : this)
        action.accept(t);
}</pre>

@param action The action to be performed for each element
@throws NullPointerException if the specified action is null
@since 1.8
"
      end

      operation 513410 "spliterator"
	cpp_inline public return_type class_ref 184450 // Spliterator
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link Spliterator} over the elements described by this
{@code Iterable}.

@implSpec
The default implementation creates an
<em><a href=\"Spliterator.html#binding\">early-binding</a></em>
spliterator from the iterable's {@code Iterator}.  The spliterator
inherits the <em>fail-fast</em> properties of the iterable's iterator.

@implNote
The default implementation should usually be overridden.  The
spliterator returned by the default implementation has poor splitting
capabilities, is unsized, and does not report any spliterator
characteristics. Implementing classes can nearly always provide a
better implementation.

@return a {@code Spliterator} over the elements described by this
{@code Iterable}.
@since 1.8
"
      end
    end

    class 185858 "Cloneable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class implements the <code>Cloneable</code> interface to
indicate to the {@link java.lang.Object#clone()} method that it
is legal for that method to make a
field-for-field copy of instances of that class.
<p>
Invoking Object's clone method on an instance that does not implement the
<code>Cloneable</code> interface results in the exception
<code>CloneNotSupportedException</code> being thrown.
<p>
By convention, classes that implement this interface should override
<tt>Object.clone</tt> (which is protected) with a public method.
See {@link java.lang.Object#clone()} for details on overriding this
method.
<p>
Note that this interface does <i>not</i> contain the <tt>clone</tt> method.
Therefore, it is not possible to clone an object merely by virtue of the
fact that it implements this interface.  Even if the clone method is invoked
reflectively, there is no guarantee that it will succeed.

@author  unascribed
@see     java.lang.CloneNotSupportedException
@see     java.lang.Object#clone()
@since   JDK1.0
"
    end

    class 187778 "IllegalArgumentException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that a method has been passed an illegal or
inappropriate argument.

@author  unascribed
@since   JDK1.0
"
      classrelation 3157634 // <generalisation>
	relation 3157634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3157634 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 7022850 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalArgumentException</code> with no
detail message.
"
      end

      operation 7022978 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalArgumentException</code> with the
specified detail message.

@param   s   the detail message.
"
      end

      operation 7023106 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message and
cause.

<p>Note that the detail message associated with <code>cause</code> is
<i>not</i> automatically incorporated in this exception's detail
message.

@param  message the detail message (which is saved for later retrieval
        by the {@link Throwable#getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value
        is permitted, and indicates that the cause is nonexistent or
        unknown.)
@since 1.5
"
      end

      operation 7023234 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of <tt>(cause==null ? null : cause.toString())</tt> (which
typically contains the class and detail message of <tt>cause</tt>).
This constructor is useful for exceptions that are little more than
wrappers for other throwables (for example, {@link
java.security.PrivilegedActionException}).

@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.5
"
      end

      attribute 1674114 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5365630128856068164L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 189954 "NoSuchFieldException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that the class doesn't have a field of a specified name.

@author  unascribed
@since   JDK1.1
"
      classrelation 3161090 // <generalisation>
	relation 3161090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161090 // <generalisation>
	  b parent class_ref 932226 // ReflectiveOperationException
      end

      attribute 1679234 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6143714805279938260L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7054210 "NoSuchFieldException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
"
      end

      operation 7054338 "NoSuchFieldException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor with a detail message.

@param s the detail message
"
      end
    end

    class 191234 "ClassValue"
      abstract visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Lazily associate a computed value with (potentially) every type.
For example, if a dynamic language needs to construct a message dispatch
table for each class encountered at a message send call site,
it can use a {@code ClassValue} to cache information needed to
perform the message send quickly, for each class encountered.
@author John Rose, JSR 292 EG
@since 1.7
"
      operation 582786 "ClassValue"
	cpp_inline protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 582914 "computeValue"
	abstract cpp_inline protected explicit_return_type "T"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the given class's derived value for this {@code ClassValue}.
<p>
This method will be invoked within the first thread that accesses
the value with the {@link #get get} method.
<p>
Normally, this method is invoked at most once per class,
but it may be invoked again if there has been a call to
{@link #remove remove}.
<p>
If this method throws an exception, the corresponding call to {@code get}
will terminate abnormally with that exception, and no class value will be recorded.

@param type the type whose class value must be computed
@return the newly computed value associated with this {@code ClassValue}, for the given class or interface
@see #get
@see #remove
"
      end

      operation 583042 "get"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for the given class.
If no value has yet been computed, it is obtained by
an invocation of the {@link #computeValue computeValue} method.
<p>
The actual installation of the value on the class
is performed atomically.
At that point, if several racing threads have
computed values, one is chosen, and returned to
all the racing threads.
<p>
The {@code type} parameter is typically a class, but it may be any type,
such as an interface, a primitive type (like {@code int.class}), or {@code void.class}.
<p>
In the absence of {@code remove} calls, a class value has a simple
state diagram:  uninitialized and initialized.
When {@code remove} calls are made,
the rules for value observation are more complex.
See the documentation for {@link #remove remove} for more information.

@param type the type whose class value must be computed or retrieved
@return the current value associated with this {@code ClassValue}, for the given class or interface
@throws NullPointerException if the argument is null
@see #remove
@see #computeValue
"
      end

      operation 583170 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the associated value for the given class.
If this value is subsequently {@linkplain #get read} for the same class,
its value will be reinitialized by invoking its {@link #computeValue computeValue} method.
This may result in an additional invocation of the
{@code computeValue} method for the given class.
<p>
In order to explain the interaction between {@code get} and {@code remove} calls,
we must model the state transitions of a class value to take into account
the alternation between uninitialized and initialized states.
To do this, number these states sequentially from zero, and note that
uninitialized (or removed) states are numbered with even numbers,
while initialized (or re-initialized) states have odd numbers.
<p>
When a thread {@code T} removes a class value in state {@code 2N},
nothing happens, since the class value is already uninitialized.
Otherwise, the state is advanced atomically to {@code 2N+1}.
<p>
When a thread {@code T} queries a class value in state {@code 2N},
the thread first attempts to initialize the class value to state {@code 2N+1}
by invoking {@code computeValue} and installing the resulting value.
<p>
When {@code T} attempts to install the newly computed value,
if the state is still at {@code 2N}, the class value will be initialized
with the computed value, advancing it to state {@code 2N+1}.
<p>
Otherwise, whether the new state is even or odd,
{@code T} will discard the newly computed value
and retry the {@code get} operation.
<p>
Discarding and retrying is an important proviso,
since otherwise {@code T} could potentially install
a disastrously stale value.  For example:
<ul>
<li>{@code T} calls {@code CV.get(C)} and sees state {@code 2N}
<li>{@code T} quickly computes a time-dependent value {@code V0} and gets ready to install it
<li>{@code T} is hit by an unlucky paging or scheduling event, and goes to sleep for a long time
<li>...meanwhile, {@code T2} also calls {@code CV.get(C)} and sees state {@code 2N}
<li>{@code T2} quickly computes a similar time-dependent value {@code V1} and installs it on {@code CV.get(C)}
<li>{@code T2} (or a third thread) then calls {@code CV.remove(C)}, undoing {@code T2}'s work
<li> the previous actions of {@code T2} are repeated several times
<li> also, the relevant computed values change over time: {@code V1}, {@code V2}, ...
<li>...meanwhile, {@code T} wakes up and attempts to install {@code V0}; <em>this must fail</em>
</ul>
We can assume in the above scenario that {@code CV.computeValue} uses locks to properly
observe the time-dependent states as it computes {@code V1}, etc.
This does not remove the threat of a stale value, since there is a window of time
between the return of {@code computeValue} in {@code T} and the installation
of the the new value.  No user synchronization is possible during this time.

@param type the type whose class value must be removed
@throws NullPointerException if the argument is null
"
      end

      operation 583298 "put"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 130818 // Class
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Possible functionality for JSR 292 MR 1
public"
      end

      class 191362 "Entry"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 131330 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 227202 // <realization>
	  relation 227202 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 227202 // <realization>
	    b parent class_ref 131330 // WeakReference
	end

	classrelation 227330 // value (<unidirectional association>)
	  relation 227330 --->
	    a role_name "value" const_relation package
	      comment " usually of type T, but sometimes (Entry)this"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 227330 // value (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 584834 "Entry"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "version" type class_ref 191746 // Version
	    param inout name "value" explicit_type "T"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 584962 "assertNotPromise"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 585090 "Entry"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "version" type class_ref 191746 // Version
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " For creating a promise. "
	end

	operation 585218 "value"
	  cpp_inline package explicit_return_type "T"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	  comment " Fetch the value.  This entry must not be a promise. "
	end

	operation 585346 "isPromise"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 585474 "version"
	  cpp_inline package return_type class_ref 191746 // Version
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 585602 "classValueOrNull"
	  cpp_inline package return_type class_ref 191234 // ClassValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 585730 "isLive"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 585858 "refreshVersion"
	  cpp_inline package return_type class_ref 191362 // Entry
	  nparams 1
	    param inout name "v2" type class_ref 191746 // Version
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 227458 // DEAD_ENTRY (<unidirectional association>)
	  relation 227458 --->
	    a role_name "DEAD_ENTRY" init_value " new Entry<>(null, null)" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 227458 // DEAD_ENTRY (<unidirectional association>)
	    b parent class_ref 191362 // Entry
	end
      end

      operation 583426 "getCacheCarefully"
	class_operation cpp_inline private return_type class_ref 191362 // Entry
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ --------
/ Implementation...
/ --------
 Return the cache, if it exists, else a dummy empty cache. "
      end

      classrelation 226434 // EMPTY_CACHE (<unidirectional association>)
	relation 226434 --->
	  a role_name "EMPTY_CACHE" multiplicity "[]" init_value " { null }" class_relation const_relation private
	    comment " Initial, one-element, empty cache used by all Class instances.  Must never be filled. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	    classrelation_ref 226434 // EMPTY_CACHE (<unidirectional association>)
	  b parent class_ref 191362 // Entry
      end

      operation 583554 "getFromBackup"
	cpp_inline private explicit_return_type "T"
	nparams 2
	  param inout name "cache" type class_ref 191362 // Entry
	multiplicity "[]"
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Slow tail of ClassValue.get to retry at nearby locations in the cache,
or take a slow lock and check the hash table.
Called only if the first probe was empty or a collision.
This is a separate method, so compilers can process it independently.
"
      end

      operation 583682 "castEntry"
	cpp_inline package return_type class_ref 191362 // Entry
	nparams 1
	  param inout name "e" type class_ref 191362 // Entry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Hack to suppress warnings on the (T) cast, which is a no-op."
      end

      operation 583810 "getFromHashMap"
	cpp_inline private explicit_return_type "T"
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called when the fast path of get fails, and cache reprobe also fails.
"
      end

      operation 583938 "match"
	cpp_inline package explicit_return_type "boolean"
	nparams 1
	  param inout name "e" type class_ref 191362 // Entry
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check that e is non-null, matches this ClassValue, and is live. "
      end

      attribute 184578 "hashCodeForCache"
	const_attribute package explicit_type "int"
	init_value " nextHashCode.getAndAdd(HASH_INCREMENT) & HASH_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Internal hash code for accessing Class.classValueMap.cacheArray. 
"
      end

      classrelation 226562 // nextHashCode (<unidirectional association>)
	relation 226562 --->
	  a role_name "nextHashCode" init_value " new AtomicInteger()" class_relation const_relation private
	    comment " Value stream for hashCodeForCache.  See similar structure in ThreadLocal. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226562 // nextHashCode (<unidirectional association>)
	  b parent class_ref 191490 // AtomicInteger
      end

      attribute 184706 "HASH_INCREMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x61c88647"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Good for power-of-two tables.  See similar structure in ThreadLocal. 
"
      end

      attribute 184834 "HASH_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " (-1 >>> 2)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mask a hash code to be positive but not too large, to prevent wraparound. 
"
      end

      class 191618 "Identity"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 226690 // identity (<unidirectional association>)
	relation 226690 --->
	  a role_name "identity" init_value " new Identity()" const_relation package
	    comment "
This ClassValue's identity, expressed as an opaque object.
The main object {@code ClassValue.this} is incorrect since
subclasses may override {@code ClassValue.equals}, which
could confuse keys in the ClassValueMap.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 226690 // identity (<unidirectional association>)
	  b parent class_ref 191618 // Identity
      end

      class 191746 "Version"
	visibility package 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 226946 // classValue (<unidirectional association>)
	  relation 226946 --->
	    a role_name "classValue" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 226946 // classValue (<unidirectional association>)
	    b parent class_ref 191234 // ClassValue
	end

	classrelation 227074 // promise (<unidirectional association>)
	  relation 227074 --->
	    a role_name "promise" init_value " new Entry<>(this)" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 227074 // promise (<unidirectional association>)
	    b parent class_ref 191362 // Entry
	end

	operation 584322 "Version"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 584450 "classValue"
	  cpp_inline package return_type class_ref 191234 // ClassValue
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 584578 "promise"
	  cpp_inline package return_type class_ref 191362 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 584706 "isLive"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 226818 // version (<unidirectional association>)
	relation 226818 --->
	  a role_name "version" init_value " new Version<>(this)" volatile private
	    comment "
Current version for retrieving this class value from the cache.
Any number of computeValue calls can be cached in association with one version.
But the version changes when a remove (on any type) is executed.
A version change invalidates all cache entries for the affected ClassValue,
by marking them as stale.  Stale cache entries do not force another call
to computeValue, but they do require a synchronized visit to a backing map.
<p>
All user-visible state changes on the ClassValue take place under
a lock inside the synchronized methods of ClassValueMap.
Readers (of ClassValue.get) are notified of such state changes
when this.version is bumped to a new token.
This variable must be volatile so that an unsynchronized reader
will receive the notification without delay.
<p>
If version were not volatile, one thread T1 could persistently hold onto
a stale value this.value == V1, while while another thread T2 advances
(under a lock) to this.value == V2.  This will typically be harmless,
but if T1 and T2 interact causally via some other channel, such that
T1's further actions are constrained (in the JMM) to happen after
the V2 event, then T1's observation of V1 will be an error.
<p>
The practical effect of making this.version be volatile is that it cannot
be hoisted out of a loop (by an optimizing JIT) or otherwise cached.
Some machines may also require a barrier instruction to execute
before this.version.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	    classrelation_ref 226818 // version (<unidirectional association>)
	  b parent class_ref 191746 // Version
      end

      operation 584066 "version"
	cpp_inline package return_type class_ref 191746 // Version
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 584194 "bumpVersion"
	cpp_inline package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 191874 "ClassValueMap"
	visibility package 
	nactuals 2
	actual class class_ref 192002 // WeakHashMap
	  rank 0 explicit_value ""
	actual class class_ref 192002 // WeakHashMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 229250 // <realization>
	  relation 229250 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 229250 // <realization>
	    b parent class_ref 192002 // WeakHashMap
	end

	classrelation 229378 // type (<unidirectional association>)
	  relation 229378 --->
	    a role_name "type" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 229378 // type (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 229506 // cacheArray (<unidirectional association>)
	  relation 229506 --->
	    a role_name "cacheArray" multiplicity "[]" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?>${multiplicity} ${name}${value};
"
	      classrelation_ref 229506 // cacheArray (<unidirectional association>)
	    b parent class_ref 192386 // Entry
	end

	attribute 186626 "cacheLoad"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 186754 "cacheLoadLimit"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 186882 "INITIAL_ENTRIES"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 32"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Number of entries initially allocated to each type when first used with any ClassValue.
 It would be pointless to make this much smaller than the Class and ClassValueMap objects themselves.
 Must be a power of 2.

"
	end

	operation 598402 "ClassValueMap"
	  cpp_inline package explicit_return_type ""
	  nparams 1
	    param inout name "type" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Build a backing map for ClassValues, relative the given type.
 Also, create an empty cache array and install it on the class.
"
	end

	operation 598530 "getCache"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 598658 "startEntry"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Initiate a query.  Store a promise (placeholder) if there is no value yet. "
	end

	operation 598786 "finishEntry"
	  cpp_inline package return_type class_ref 192386 // Entry
	  nparams 2
	    param inout name "classValue" type class_ref 191234 // ClassValue
	    param inout name "e" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Finish a query.  Overwrite a matching placeholder.  Drop stale incoming values. "
	end

	operation 598914 "removeEntry"
	  cpp_inline package explicit_return_type "void"
	  nparams 1
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Remove an entry. "
	end

	operation 599042 "changeEntry"
	  cpp_inline package explicit_return_type "void"
	  nparams 2
	    param inout name "classValue" type class_ref 191234 // ClassValue
	    param inout name "value" explicit_type "T"
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Change the value for an entry. "
	end

	operation 599170 "loadFromCache"
	  class_operation cpp_inline package return_type class_ref 192386 // Entry
	  nparams 2
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "/ --------
/ Cache management.
/ --------
 Statics do not need synchronization.
 Load the cache entry at the given (hashed) location. "
	end

	operation 599298 "probeHomeLocation"
	  class_operation cpp_inline package return_type class_ref 192386 // Entry
	  nparams 2
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<?>[] ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Look in the cache, at the home location for the given ClassValue. "
	end

	operation 599426 "probeBackupLocations"
	  class_operation cpp_inline package return_type class_ref 192386 // Entry
	  nparams 2
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<?>[] ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Given that first probe was a collision, retry at nearby locations. "
	end

	operation 599554 "entryDislocation"
	  class_operation cpp_inline private explicit_return_type "int"
	  nparams 3
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param in name "pos" explicit_type "int"
	    param inout name "e" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " How far out of place is e? "
	end

	operation 599682 "sizeCache"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param in name "length" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "/ --------
/ Below this line all functions are private, and assume synchronized access.
/ --------"
	end

	operation 599810 "checkCacheLoad"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Make sure the cache load stays below its limit, if possible. "
	end

	operation 599938 "reduceCacheLoad"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 600066 "removeStaleEntries"
	  cpp_inline private explicit_return_type "void"
	  nparams 3
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param in name "begin" explicit_type "int"
	    param in name "count" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Remove stale entries in the given range.
 Should be executed under a Map lock.
"
	end

	operation 600194 "findReplacement"
	  cpp_inline private return_type class_ref 192386 // Entry
	  nparams 2
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param in name "home1" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Clearing a cache slot risks disconnecting following entries
 from the head of a non-null run, which would allow them
 to be found via reprobes.  Find an entry after cache[begin]
 to plug into the hole, or return null if none is needed.
"
	end

	operation 600322 "removeStaleEntries"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "classValue" type class_ref 191234 // ClassValue
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Remove stale entries in the range near classValue. "
	end

	operation 600450 "removeStaleEntries"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Remove all stale entries, everywhere. "
	end

	operation 600578 "addToCache"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add the given entry to the cache, in its home location, unless it is out of date. "
	end

	operation 600706 "addToCache"
	  cpp_inline private explicit_return_type "void"
	  nparams 2
	    param inout name "classValue" type class_ref 191234 // ClassValue
	    param inout name "e" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Add the given entry to the cache, in its home location. "
	end

	operation 600834 "placeInCache"
	  cpp_inline private return_type class_ref 192386 // Entry
	  nparams 4
	    param inout name "cache" type class_ref 192386 // Entry
	  multiplicity "[]"
	    param in name "pos" explicit_type "int"
	    param inout name "e" type class_ref 192386 // Entry
	    param inout name "gently" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}<?>[] ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Store the given entry.  Update cacheLoad, and return any live victim.
 'Gently' means return self rather than dislocating a live victim.
"
	end

	operation 600962 "overwrittenEntry"
	  cpp_inline private return_type class_ref 192386 // Entry
	  nparams 1
	    param inout name "e2" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Note an entry that is about to be overwritten.
 If it is not live, quietly replace it by null.
 If it is an actual null, increment cacheLoad,
 because the caller is going to store something
 in its place.
"
	end

	attribute 187010 "CACHE_LOAD_LIMIT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 67"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Percent loading of cache before resize. 
 0..100"
	end

	attribute 187138 "PROBE_LIMIT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "  6"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Maximum number of probes to attempt. 
 1.."
	end
      end

      operation 585986 "getMap"
	class_operation cpp_inline private return_type class_ref 191874 // ClassValueMap
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the backing map associated with this type. "
      end

      classrelation 227586 // CRITICAL_SECTION (<unidirectional association>)
	relation 227586 --->
	  a role_name "CRITICAL_SECTION" init_value " new Object()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 227586 // CRITICAL_SECTION (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 586114 "initializeMap"
	class_operation cpp_inline private return_type class_ref 191874 // ClassValueMap
	nparams 1
	  param inout name "type" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 586242 "makeEntry"
	class_operation cpp_inline package return_type class_ref 191362 // Entry
	nparams 2
	  param inout name "explicitVersion" type class_ref 191746 // Version
	  param inout name "value" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 193282 "InstantiationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to create an instance of a class
using the {@code newInstance} method in class
{@code Class}, but the specified class object cannot be
instantiated.  The instantiation can fail for a variety of
reasons including but not limited to:

<ul>
<li> the class object represents an abstract class, an interface,
     an array class, a primitive type, or {@code void}
<li> the class has no nullary constructor
</ul>

@author  unascribed
@see     java.lang.Class#newInstance()
@since   JDK1.0
"
      classrelation 3159042 // <generalisation>
	relation 3159042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3159042 // <generalisation>
	  b parent class_ref 932226 // ReflectiveOperationException
      end

      attribute 1675266 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8441929162975509110L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7028354 "InstantiationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InstantiationException} with no detail message.
"
      end

      operation 7028482 "InstantiationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InstantiationException} with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 193538 "UnsupportedOperationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that the requested operation is not supported.<p>

This class is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@author  Josh Bloch
@since   1.2
"
      classrelation 2925698 // <generalisation>
	relation 2925698 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2925698 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 6245378 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnsupportedOperationException with no detail message.
"
      end

      operation 6245506 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an UnsupportedOperationException with the specified
detail message.

@param message the detail message
"
      end

      operation 6245634 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message and
cause.

<p>Note that the detail message associated with <code>cause</code> is
<i>not</i> automatically incorporated in this exception's detail
message.

@param  message the detail message (which is saved for later retrieval
        by the {@link Throwable#getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value
        is permitted, and indicates that the cause is nonexistent or
        unknown.)
@since 1.5
"
      end

      operation 6245762 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of <tt>(cause==null ? null : cause.toString())</tt> (which
typically contains the class and detail message of <tt>cause</tt>).
This constructor is useful for exceptions that are little more than
wrappers for other throwables (for example, {@link
java.security.PrivilegedActionException}).

@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.5
"
      end

      attribute 1389954 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1242599979055084673L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 194946 "Comparable"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface imposes a total ordering on the objects of each class that
implements it.  This ordering is referred to as the class's <i>natural
ordering</i>, and the class's <tt>compareTo</tt> method is referred to as
its <i>natural comparison method</i>.<p>

Lists (and arrays) of objects that implement this interface can be sorted
automatically by {@link Collections#sort(List) Collections.sort} (and
{@link Arrays#sort(Object[]) Arrays.sort}).  Objects that implement this
interface can be used as keys in a {@linkplain SortedMap sorted map} or as
elements in a {@linkplain SortedSet sorted set}, without the need to
specify a {@linkplain Comparator comparator}.<p>

The natural ordering for a class <tt>C</tt> is said to be <i>consistent
with equals</i> if and only if <tt>e1.compareTo(e2) == 0</tt> has
the same boolean value as <tt>e1.equals(e2)</tt> for every
<tt>e1</tt> and <tt>e2</tt> of class <tt>C</tt>.  Note that <tt>null</tt>
is not an instance of any class, and <tt>e.compareTo(null)</tt> should
throw a <tt>NullPointerException</tt> even though <tt>e.equals(null)</tt>
returns <tt>false</tt>.<p>

It is strongly recommended (though not required) that natural orderings be
consistent with equals.  This is so because sorted sets (and sorted maps)
without explicit comparators behave \"strangely\" when they are used with
elements (or keys) whose natural ordering is inconsistent with equals.  In
particular, such a sorted set (or sorted map) violates the general contract
for set (or map), which is defined in terms of the <tt>equals</tt>
method.<p>

For example, if one adds two keys <tt>a</tt> and <tt>b</tt> such that
{@code (!a.equals(b) && a.compareTo(b) == 0)} to a sorted
set that does not use an explicit comparator, the second <tt>add</tt>
operation returns false (and the size of the sorted set does not increase)
because <tt>a</tt> and <tt>b</tt> are equivalent from the sorted set's
perspective.<p>

Virtually all Java core classes that implement <tt>Comparable</tt> have natural
orderings that are consistent with equals.  One exception is
<tt>java.math.BigDecimal</tt>, whose natural ordering equates
<tt>BigDecimal</tt> objects with equal values and different precisions
(such as 4.0 and 4.00).<p>

For the mathematically inclined, the <i>relation</i> that defines
the natural ordering on a given class C is:<pre>
      {(x, y) such that x.compareTo(y) &lt;= 0}.
</pre> The <i>quotient</i> for this total order is: <pre>
      {(x, y) such that x.compareTo(y) == 0}.
</pre>

It follows immediately from the contract for <tt>compareTo</tt> that the
quotient is an <i>equivalence relation</i> on <tt>C</tt>, and that the
natural ordering is a <i>total order</i> on <tt>C</tt>.  When we say that a
class's natural ordering is <i>consistent with equals</i>, we mean that the
quotient for the natural ordering is the equivalence relation defined by
the class's {@link Object#equals(Object) equals(Object)} method:<pre>
    {(x, y) such that x.equals(y)}. </pre><p>

This interface is a member of the
<a href=\"{@docRoot}/../technotes/guides/collections/index.html\">
Java Collections Framework</a>.

@param <T> the type of objects that this object may be compared to

@author  Josh Bloch
@see java.util.Comparator
@since 1.2
"
      operation 609666 "compareTo"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param inout name "o" explicit_type "T"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object with the specified object for order.  Returns a
negative integer, zero, or a positive integer as this object is less
than, equal to, or greater than the specified object.

<p>The implementor must ensure <tt>sgn(x.compareTo(y)) ==
-sgn(y.compareTo(x))</tt> for all <tt>x</tt> and <tt>y</tt>.  (This
implies that <tt>x.compareTo(y)</tt> must throw an exception iff
<tt>y.compareTo(x)</tt> throws an exception.)

<p>The implementor must also ensure that the relation is transitive:
<tt>(x.compareTo(y)&gt;0 &amp;&amp; y.compareTo(z)&gt;0)</tt> implies
<tt>x.compareTo(z)&gt;0</tt>.

<p>Finally, the implementor must ensure that <tt>x.compareTo(y)==0</tt>
implies that <tt>sgn(x.compareTo(z)) == sgn(y.compareTo(z))</tt>, for
all <tt>z</tt>.

<p>It is strongly recommended, but <i>not</i> strictly required that
<tt>(x.compareTo(y)==0) == (x.equals(y))</tt>.  Generally speaking, any
class that implements the <tt>Comparable</tt> interface and violates
this condition should clearly indicate this fact.  The recommended
language is \"Note: this class has a natural ordering that is
inconsistent with equals.\"

<p>In the foregoing description, the notation
<tt>sgn(</tt><i>expression</i><tt>)</tt> designates the mathematical
<i>signum</i> function, which is defined to return one of <tt>-1</tt>,
<tt>0</tt>, or <tt>1</tt> according to whether the value of
<i>expression</i> is negative, zero or positive.

@param   o the object to be compared.
@return  a negative integer, zero, or a positive integer as this object
         is less than, equal to, or greater than the specified object.

@throws NullPointerException if the specified object is null
@throws ClassCastException if the specified object's type prevents it
        from being compared to this object.
"
      end
    end

    class 195842 "Error"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An {@code Error} is a subclass of {@code Throwable}
that indicates serious problems that a reasonable application
should not try to catch. Most such errors are abnormal conditions.
The {@code ThreadDeath} error, though a \"normal\" condition,
is also a subclass of {@code Error} because most applications
should not try to catch it.
<p>
A method is not required to declare in its {@code throws}
clause any subclasses of {@code Error} that might be thrown
during the execution of the method but not caught, since these
errors are abnormal conditions that should never occur.

That is, {@code Error} and its subclasses are regarded as unchecked
exceptions for the purposes of compile-time checking of exceptions.

@author  Frank Yellin
@see     java.lang.ThreadDeath
@jls 11.2 Compile-Time Checking of Exceptions
@since   JDK1.0
"
      classrelation 237058 // <generalisation>
	relation 237058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 237058 // <generalisation>
	  b parent class_ref 129922 // Throwable
      end

      attribute 189954 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4980196508277280342L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 617730 "Error"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with {@code null} as its detail message.
The cause is not initialized, and may subsequently be initialized by a
call to {@link #initCause}.
"
      end

      operation 617858 "Error"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the specified detail message.  The
cause is not initialized, and may subsequently be initialized by
a call to {@link #initCause}.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link #getMessage()} method.
"
      end

      operation 617986 "Error"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the specified detail message and
cause.  <p>Note that the detail message associated with
{@code cause} is <i>not</i> automatically incorporated in
this error's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 618114 "Error"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the specified cause and a detail
message of {@code (cause==null ? null : cause.toString())} (which
typically contains the class and detail message of {@code cause}).
This constructor is useful for errors that are little more than
wrappers for other throwables.

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 618242 "Error"
	protected explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "enableSuppression" explicit_type "boolean"
	  param inout name "writableStackTrace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new error with the specified detail message,
cause, suppression enabled or disabled, and writable stack
trace enabled or disabled.

@param  message the detail message.
@param cause the cause.  (A {@code null} value is permitted,
and indicates that the cause is nonexistent or unknown.)
@param enableSuppression whether or not suppression is enabled
                         or disabled
@param writableStackTrace whether or not the stack trace should
                          be writable

@since 1.7
"
      end
    end

    class 207490 "ClassCastException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that the code has attempted to cast an object
to a subclass of which it is not an instance. For example, the
following code generates a <code>ClassCastException</code>:
<blockquote><pre>
    Object x = new Integer(0);
    System.out.println((String)x);
</pre></blockquote>

@author  unascribed
@since   JDK1.0
"
      classrelation 3154306 // <generalisation>
	relation 3154306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3154306 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1668354 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9223365651070458532L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7005954 "ClassCastException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassCastException</code> with no detail message.
"
      end

      operation 7006082 "ClassCastException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassCastException</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 214786 "RuntimeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code RuntimeException} is the superclass of those
exceptions that can be thrown during the normal operation of the
Java Virtual Machine.

<p>{@code RuntimeException} and its subclasses are <em>unchecked
exceptions</em>.  Unchecked exceptions do <em>not</em> need to be
declared in a method or constructor's {@code throws} clause if they
can be thrown by the execution of the method or constructor and
propagate outside the method or constructor boundary.

@author  Frank Yellin
@jls 11.2 Compile-Time Checking of Exceptions
@since   JDK1.0
"
      classrelation 386690 // <generalisation>
	relation 386690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 386690 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 313346 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7034897190745766939L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1337858 "RuntimeException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new runtime exception with {@code null} as its
detail message.  The cause is not initialized, and may subsequently be
initialized by a call to {@link #initCause}.
"
      end

      operation 1337986 "RuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new runtime exception with the specified detail message.
The cause is not initialized, and may subsequently be initialized by a
call to {@link #initCause}.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link #getMessage()} method.
"
      end

      operation 1338114 "RuntimeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new runtime exception with the specified detail message and
cause.  <p>Note that the detail message associated with
{@code cause} is <i>not</i> automatically incorporated in
this runtime exception's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 1338242 "RuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a new runtime exception with the specified cause and a
detail message of <tt>(cause==null ? null : cause.toString())</tt>
(which typically contains the class and detail message of
<tt>cause</tt>).  This constructor is useful for runtime exceptions
that are little more than wrappers for other throwables.

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.4
"
      end

      operation 1338370 "RuntimeException"
	protected explicit_return_type ""
	nparams 4
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "enableSuppression" explicit_type "boolean"
	  param inout name "writableStackTrace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new runtime exception with the specified detail
message, cause, suppression enabled or disabled, and writable
stack trace enabled or disabled.

@param  message the detail message.
@param cause the cause.  (A {@code null} value is permitted,
and indicates that the cause is nonexistent or unknown.)
@param enableSuppression whether or not suppression is enabled
                         or disabled
@param writableStackTrace whether or not the stack trace should
                          be writable

@since 1.7
"
      end
    end

    class 251778 "Long"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Long} class wraps a value of the primitive type {@code
long} in an object. An object of type {@code Long} contains a
single field whose type is {@code long}.

<p> In addition, this class provides several methods for converting
a {@code long} to a {@code String} and a {@code String} to a {@code
long}, as well as other constants and methods useful when dealing
with a {@code long}.

<p>Implementation note: The implementations of the \"bit twiddling\"
methods (such as {@link #highestOneBit(long) highestOneBit} and
{@link #numberOfTrailingZeros(long) numberOfTrailingZeros}) are
based on material from Henry S. Warren, Jr.'s <i>Hacker's
Delight</i>, (Addison Wesley, 2002).

@author  Lee Boynton
@author  Arthur van Hoff
@author  Josh Bloch
@author  Joseph D. Darcy
@since   JDK1.0
"
      classrelation 3160066 // <generalisation>
	relation 3160066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3160066 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3160194 // <realization>
	relation 3160194 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3160194 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1677314 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x8000000000000000L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the minimum value a {@code long} can
have, -2<sup>63</sup>.

"
      end

      attribute 1677442 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x7fffffffffffffffL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the maximum value a {@code long} can
have, 2<sup>63</sup>-1.

"
      end

      classrelation 3160322 // TYPE (<unidirectional association>)
	relation 3160322 --->
	  a role_name "TYPE" init_value " (Class<Long>) Class.getPrimitiveClass(\"long\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code long}.

@since   JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Long> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3160322 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 7036802 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "i" explicit_type "long"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the first argument in the
radix specified by the second argument.

<p>If the radix is smaller than {@code Character.MIN_RADIX}
or larger than {@code Character.MAX_RADIX}, then the radix
{@code 10} is used instead.

<p>If the first argument is negative, the first element of the
result is the ASCII minus sign {@code '-'}
({@code '\\u005Cu002d'}). If the first argument is not
negative, no sign character appears in the result.

<p>The remaining characters of the result represent the magnitude
of the first argument. If the magnitude is zero, it is
represented by a single zero character {@code '0'}
({@code '\\u005Cu0030'}); otherwise, the first character of
the representation of the magnitude will not be the zero
character.  The following ASCII characters are used as digits:

<blockquote>
  {@code 0123456789abcdefghijklmnopqrstuvwxyz}
</blockquote>

These are {@code '\\u005Cu0030'} through
{@code '\\u005Cu0039'} and {@code '\\u005Cu0061'} through
{@code '\\u005Cu007a'}. If {@code radix} is
<var>N</var>, then the first <var>N</var> of these characters
are used as radix-<var>N</var> digits in the order shown. Thus,
the digits for hexadecimal (radix 16) are
{@code 0123456789abcdef}. If uppercase letters are
desired, the {@link java.lang.String#toUpperCase()} method may
be called on the result:

<blockquote>
 {@code Long.toString(n, 16).toUpperCase()}
</blockquote>

@param   i       a {@code long} to be converted to a string.
@param   radix   the radix to use in the string representation.
@return  a string representation of the argument in the specified radix.
@see     java.lang.Character#MAX_RADIX
@see     java.lang.Character#MIN_RADIX
"
      end

      operation 7036930 "toUnsignedString"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param in name "i" explicit_type "long"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the first argument as an
unsigned integer value in the radix specified by the second
argument.

<p>If the radix is smaller than {@code Character.MIN_RADIX}
or larger than {@code Character.MAX_RADIX}, then the radix
{@code 10} is used instead.

<p>Note that since the first argument is treated as an unsigned
value, no leading sign character is printed.

<p>If the magnitude is zero, it is represented by a single zero
character {@code '0'} ({@code '\\u005Cu0030'}); otherwise,
the first character of the representation of the magnitude will
not be the zero character.

<p>The behavior of radixes and the characters used as digits
are the same as {@link #toString(long, int) toString}.

@param   i       an integer to be converted to an unsigned string.
@param   radix   the radix to use in the string representation.
@return  an unsigned string representation of the argument in the specified radix.
@see     #toString(long, int)
@since 1.8
"
      end

      operation 7037058 "toUnsignedBigInteger"
	class_operation private return_type class_ref 686338 // BigInteger
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a BigInteger equal to the unsigned value of the
argument.
"
      end

      operation 7037186 "toHexString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the {@code long}
argument as an unsigned integer in base&nbsp;16.

<p>The unsigned {@code long} value is the argument plus
2<sup>64</sup> if the argument is negative; otherwise, it is
equal to the argument.  This value is converted to a string of
ASCII digits in hexadecimal (base&nbsp;16) with no extra
leading {@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Long#parseUnsignedLong(String, int) Long.parseUnsignedLong(s,
16)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
following characters are used as hexadecimal digits:

<blockquote>
 {@code 0123456789abcdef}
</blockquote>

These are the characters {@code '\\u005Cu0030'} through
{@code '\\u005Cu0039'} and  {@code '\\u005Cu0061'} through
{@code '\\u005Cu0066'}.  If uppercase letters are desired,
the {@link java.lang.String#toUpperCase()} method may be called
on the result:

<blockquote>
 {@code Long.toHexString(n).toUpperCase()}
</blockquote>

@param   i   a {@code long} to be converted to a string.
@return  the string representation of the unsigned {@code long}
         value represented by the argument in hexadecimal
         (base&nbsp;16).
@see #parseUnsignedLong(String, int)
@see #toUnsignedString(long, int)
@since   JDK 1.0.2
"
      end

      operation 7037314 "toOctalString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the {@code long}
argument as an unsigned integer in base&nbsp;8.

<p>The unsigned {@code long} value is the argument plus
2<sup>64</sup> if the argument is negative; otherwise, it is
equal to the argument.  This value is converted to a string of
ASCII digits in octal (base&nbsp;8) with no extra leading
{@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Long#parseUnsignedLong(String, int) Long.parseUnsignedLong(s,
8)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
following characters are used as octal digits:

<blockquote>
 {@code 01234567}
</blockquote>

These are the characters {@code '\\u005Cu0030'} through
{@code '\\u005Cu0037'}.

@param   i   a {@code long} to be converted to a string.
@return  the string representation of the unsigned {@code long}
         value represented by the argument in octal (base&nbsp;8).
@see #parseUnsignedLong(String, int)
@see #toUnsignedString(long, int)
@since   JDK 1.0.2
"
      end

      operation 7037442 "toBinaryString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the {@code long}
argument as an unsigned integer in base&nbsp;2.

<p>The unsigned {@code long} value is the argument plus
2<sup>64</sup> if the argument is negative; otherwise, it is
equal to the argument.  This value is converted to a string of
ASCII digits in binary (base&nbsp;2) with no extra leading
{@code 0}s.

<p>The value of the argument can be recovered from the returned
string {@code s} by calling {@link
Long#parseUnsignedLong(String, int) Long.parseUnsignedLong(s,
2)}.

<p>If the unsigned magnitude is zero, it is represented by a
single zero character {@code '0'} ({@code '\\u005Cu0030'});
otherwise, the first character of the representation of the
unsigned magnitude will not be the zero character. The
characters {@code '0'} ({@code '\\u005Cu0030'}) and {@code
'1'} ({@code '\\u005Cu0031'}) are used as binary digits.

@param   i   a {@code long} to be converted to a string.
@return  the string representation of the unsigned {@code long}
         value represented by the argument in binary (base&nbsp;2).
@see #parseUnsignedLong(String, int)
@see #toUnsignedString(long, int)
@since   JDK 1.0.2
"
      end

      operation 7037570 "toUnsignedString0"
	class_operation package return_type class_ref 128130 // String
	nparams 2
	  param in name "val" explicit_type "long"
	  param in name "shift" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a long (treated as unsigned) into a String.
@param val the value to format
@param shift the log2 of the base to format in (4 for hex, 3 for octal, 1 for binary)
"
      end

      operation 7037698 "formatUnsignedLong"
	class_operation package explicit_return_type "int"
	nparams 5
	  param in name "val" explicit_type "long"
	  param in name "shift" explicit_type "int"
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a long (treated as unsigned) into a character buffer.
@param val the unsigned long to format
@param shift the log2 of the base to format in (4 for hex, 3 for octal, 1 for binary)
@param buf the character buffer to write to
@param offset the offset in the destination buffer to start at
@param len the number of characters to write
@return the lowest character location used
"
      end

      operation 7037826 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing the specified
{@code long}.  The argument is converted to signed decimal
representation and returned as a string, exactly as if the
argument and the radix 10 were given as arguments to the {@link
#toString(long, int)} method.

@param   i   a {@code long} to be converted.
@return  a string representation of the argument in base&nbsp;10.
"
      end

      operation 7037954 "toUnsignedString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the argument as an unsigned
decimal value.

The argument is converted to unsigned decimal representation
and returned as a string exactly as if the argument and radix
10 were given as arguments to the {@link #toUnsignedString(long,
int)} method.

@param   i  an integer to be converted to an unsigned string.
@return  an unsigned string representation of the argument.
@see     #toUnsignedString(long, int)
@since 1.8
"
      end

      operation 7038082 "getChars"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "i" explicit_type "long"
	  param in name "index" explicit_type "int"
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Places characters representing the integer i into the
character array buf. The characters are placed into
the buffer backwards starting with the least significant
digit at the specified index (exclusive), and working
backwards from there.

Will fail if i == Long.MIN_VALUE
"
      end

      operation 7038210 "stringSize"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Requires positive x"
      end

      operation 7038338 "parseLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed {@code long} in the
radix specified by the second argument. The characters in the
string must all be digits of the specified radix (as determined
by whether {@link java.lang.Character#digit(char, int)} returns
a nonnegative value), except that the first character may be an
ASCII minus sign {@code '-'} ({@code '\\u005Cu002D'}) to
indicate a negative value or an ASCII plus sign {@code '+'}
({@code '\\u005Cu002B'}) to indicate a positive value. The
resulting {@code long} value is returned.

<p>Note that neither the character {@code L}
({@code '\\u005Cu004C'}) nor {@code l}
({@code '\\u005Cu006C'}) is permitted to appear at the end
of the string as a type indicator, as would be permitted in
Java programming language source code - except that either
{@code L} or {@code l} may appear as a digit for a
radix greater than or equal to 22.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>

<li>The first argument is {@code null} or is a string of
length zero.

<li>The {@code radix} is either smaller than {@link
java.lang.Character#MIN_RADIX} or larger than {@link
java.lang.Character#MAX_RADIX}.

<li>Any character of the string is not a digit of the specified
radix, except that the first character may be a minus sign
{@code '-'} ({@code '\\u005Cu002d'}) or plus sign {@code
'+'} ({@code '\\u005Cu002B'}) provided that the string is
longer than length 1.

<li>The value represented by the string is not a value of type
     {@code long}.
</ul>

<p>Examples:
<blockquote><pre>
parseLong(\"0\", 10) returns 0L
parseLong(\"473\", 10) returns 473L
parseLong(\"+42\", 10) returns 42L
parseLong(\"-0\", 10) returns 0L
parseLong(\"-FF\", 16) returns -255L
parseLong(\"1100110\", 2) returns 102L
parseLong(\"99\", 8) throws a NumberFormatException
parseLong(\"Hazelnut\", 10) throws a NumberFormatException
parseLong(\"Hazelnut\", 36) returns 1356099454469L
</pre></blockquote>

@param      s       the {@code String} containing the
                    {@code long} representation to be parsed.
@param      radix   the radix to be used while parsing {@code s}.
@return     the {@code long} represented by the string argument in
            the specified radix.
@throws     NumberFormatException  if the string does not contain a
            parsable {@code long}.
"
      end

      operation 7038466 "parseLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed decimal {@code long}.
The characters in the string must all be decimal digits, except
that the first character may be an ASCII minus sign {@code '-'}
({@code \\u005Cu002D'}) to indicate a negative value or an
ASCII plus sign {@code '+'} ({@code '\\u005Cu002B'}) to
indicate a positive value. The resulting {@code long} value is
returned, exactly as if the argument and the radix {@code 10}
were given as arguments to the {@link
#parseLong(java.lang.String, int)} method.

<p>Note that neither the character {@code L}
({@code '\\u005Cu004C'}) nor {@code l}
({@code '\\u005Cu006C'}) is permitted to appear at the end
of the string as a type indicator, as would be permitted in
Java programming language source code.

@param      s   a {@code String} containing the {@code long}
            representation to be parsed
@return     the {@code long} represented by the argument in
            decimal.
@throws     NumberFormatException  if the string does not contain a
            parsable {@code long}.
"
      end

      operation 7038594 "parseUnsignedLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as an unsigned {@code long} in the
radix specified by the second argument.  An unsigned integer
maps the values usually associated with negative numbers to
positive numbers larger than {@code MAX_VALUE}.

The characters in the string must all be digits of the
specified radix (as determined by whether {@link
java.lang.Character#digit(char, int)} returns a nonnegative
value), except that the first character may be an ASCII plus
sign {@code '+'} ({@code '\\u005Cu002B'}). The resulting
integer value is returned.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>
<li>The first argument is {@code null} or is a string of
length zero.

<li>The radix is either smaller than
{@link java.lang.Character#MIN_RADIX} or
larger than {@link java.lang.Character#MAX_RADIX}.

<li>Any character of the string is not a digit of the specified
radix, except that the first character may be a plus sign
{@code '+'} ({@code '\\u005Cu002B'}) provided that the
string is longer than length 1.

<li>The value represented by the string is larger than the
largest unsigned {@code long}, 2<sup>64</sup>-1.

</ul>


@param      s   the {@code String} containing the unsigned integer
                 representation to be parsed
@param      radix   the radix to be used while parsing {@code s}.
@return     the unsigned {@code long} represented by the string
            argument in the specified radix.
@throws     NumberFormatException if the {@code String}
            does not contain a parsable {@code long}.
@since 1.8
"
      end

      operation 7038722 "parseUnsignedLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as an unsigned decimal {@code long}. The
characters in the string must all be decimal digits, except
that the first character may be an an ASCII plus sign {@code
'+'} ({@code '\\u005Cu002B'}). The resulting integer value
is returned, exactly as if the argument and the radix 10 were
given as arguments to the {@link
#parseUnsignedLong(java.lang.String, int)} method.

@param s   a {@code String} containing the unsigned {@code long}
           representation to be parsed
@return    the unsigned {@code long} value represented by the decimal string argument
@throws    NumberFormatException  if the string does not contain a
           parsable unsigned integer.
@since 1.8
"
      end

      operation 7038850 "valueOf"
	class_operation public return_type class_ref 251778 // Long
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Long} object holding the value
extracted from the specified {@code String} when parsed
with the radix given by the second argument.  The first
argument is interpreted as representing a signed
{@code long} in the radix specified by the second
argument, exactly as if the arguments were given to the {@link
#parseLong(java.lang.String, int)} method. The result is a
{@code Long} object that represents the {@code long}
value specified by the string.

<p>In other words, this method returns a {@code Long} object equal
to the value of:

<blockquote>
 {@code new Long(Long.parseLong(s, radix))}
</blockquote>

@param      s       the string to be parsed
@param      radix   the radix to be used in interpreting {@code s}
@return     a {@code Long} object holding the value
            represented by the string argument in the specified
            radix.
@throws     NumberFormatException  If the {@code String} does not
            contain a parsable {@code long}.
"
      end

      operation 7038978 "valueOf"
	class_operation public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Long} object holding the value
of the specified {@code String}. The argument is
interpreted as representing a signed decimal {@code long},
exactly as if the argument were given to the {@link
#parseLong(java.lang.String)} method. The result is a
{@code Long} object that represents the integer value
specified by the string.

<p>In other words, this method returns a {@code Long} object
equal to the value of:

<blockquote>
 {@code new Long(Long.parseLong(s))}
</blockquote>

@param      s   the string to be parsed.
@return     a {@code Long} object holding the value
            represented by the string argument.
@throws     NumberFormatException  If the string cannot be parsed
            as a {@code long}.
"
      end

      class 934530 "LongCache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 7039106 "LongCache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3160450 // cache (<unidirectional association>)
	  relation 3160450 --->
	    a role_name "cache" multiplicity "[]" init_value " new Long[-(-128) + 127 + 1]" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3160450 // cache (<unidirectional association>)
	    b parent class_ref 251778 // Long
	end

	extra_member 157826 "initialization"
	  
	  cpp "" ""
	  java "  static {
            for(int i = 0; i < cache.length; i++)
                cache[i] = new Long(i - 128);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      operation 7039234 "valueOf"
	class_operation public return_type class_ref 251778 // Long
	nparams 1
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Long} instance representing the specified
{@code long} value.
If a new {@code Long} instance is not required, this method
should generally be used in preference to the constructor
{@link #Long(long)}, as this method is likely to yield
significantly better space and time performance by caching
frequently requested values.

Note that unlike the {@linkplain Integer#valueOf(int)
corresponding method} in the {@code Integer} class, this method
is <em>not</em> required to cache values within a particular
range.

@param  l a long value.
@return a {@code Long} instance representing {@code l}.
@since  1.5
"
      end

      operation 7039362 "decode"
	class_operation public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a {@code String} into a {@code Long}.
Accepts decimal, hexadecimal, and octal numbers given by the
following grammar:

<blockquote>
<dl>
<dt><i>DecodableString:</i>
<dd><i>Sign<sub>opt</sub> DecimalNumeral</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0x} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0X} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code #} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0} <i>OctalDigits</i>

<dt><i>Sign:</i>
<dd>{@code -}
<dd>{@code +}
</dl>
</blockquote>

<i>DecimalNumeral</i>, <i>HexDigits</i>, and <i>OctalDigits</i>
are as defined in section 3.10.1 of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.

<p>The sequence of characters following an optional
sign and/or radix specifier (\"{@code 0x}\", \"{@code 0X}\",
\"{@code #}\", or leading zero) is parsed as by the {@code
Long.parseLong} method with the indicated radix (10, 16, or 8).
This sequence of characters must represent a positive value or
a {@link NumberFormatException} will be thrown.  The result is
negated if first character of the specified {@code String} is
the minus sign.  No whitespace characters are permitted in the
{@code String}.

@param     nm the {@code String} to decode.
@return    a {@code Long} object holding the {@code long}
           value represented by {@code nm}
@throws    NumberFormatException  if the {@code String} does not
           contain a parsable {@code long}.
@see java.lang.Long#parseLong(String, int)
@since 1.2
"
      end

      attribute 1677570 "value"
	const_attribute private explicit_type "long"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the {@code Long}.

@serial

"
      end

      operation 7039490 "Long"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Long} object that
represents the specified {@code long} argument.

@param   value   the value to be represented by the
         {@code Long} object.
"
      end

      operation 7039618 "Long"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Long} object that
represents the {@code long} value indicated by the
{@code String} parameter. The string is converted to a
{@code long} value in exactly the manner used by the
{@code parseLong} method for radix 10.

@param      s   the {@code String} to be converted to a
            {@code Long}.
@throws     NumberFormatException  if the {@code String} does not
            contain a parsable {@code long}.
@see        java.lang.Long#parseLong(java.lang.String, int)
"
      end

      operation 7039746 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as a {@code byte} after
a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7039874 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as a {@code short} after
a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7040002 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as an {@code int} after
a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7040130 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as a
{@code long} value.
"
      end

      operation 7040258 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as a {@code float} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7040386 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Long} as a {@code double}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7040514 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this
{@code Long}'s value.  The value is converted to signed
decimal representation and returned as a string, exactly as if
the {@code long} value were given as an argument to the
{@link java.lang.Long#toString(long)} method.

@return  a string representation of the value of this object in
         base&nbsp;10.
"
      end

      operation 7040642 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Long}. The result is
the exclusive OR of the two halves of the primitive
{@code long} value held by this {@code Long}
object. That is, the hashcode is the value of the expression:

<blockquote>
 {@code (int)(this.longValue()^(this.longValue()>>>32))}
</blockquote>

@return  a hash code value for this object.
"
      end

      operation 7040770 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code long} value; compatible with
{@code Long.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code long} value.
@since 1.8
"
      end

      operation 7040898 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object.  The result is
{@code true} if and only if the argument is not
{@code null} and is a {@code Long} object that
contains the same {@code long} value as this object.

@param   obj   the object to compare with.
@return  {@code true} if the objects are the same;
         {@code false} otherwise.
"
      end

      operation 7041026 "getLong"
	class_operation public return_type class_ref 251778 // Long
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the {@code long} value of the system property
with the specified name.

<p>The first argument is treated as the name of a system
property.  System properties are accessible through the {@link
java.lang.System#getProperty(java.lang.String)} method. The
string value of this property is then interpreted as a {@code
long} value using the grammar supported by {@link Long#decode decode}
and a {@code Long} object representing this value is returned.

<p>If there is no property with the specified name, if the
specified name is empty or {@code null}, or if the property
does not have the correct numeric format, then {@code null} is
returned.

<p>In other words, this method returns a {@code Long} object
equal to the value of:

<blockquote>
 {@code getLong(nm, null)}
</blockquote>

@param   nm   property name.
@return  the {@code Long} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     java.lang.System#getProperty(java.lang.String)
@see     java.lang.System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7041154 "getLong"
	class_operation public return_type class_ref 251778 // Long
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param in name "val" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the {@code long} value of the system property
with the specified name.

<p>The first argument is treated as the name of a system
property.  System properties are accessible through the {@link
java.lang.System#getProperty(java.lang.String)} method. The
string value of this property is then interpreted as a {@code
long} value using the grammar supported by {@link Long#decode decode}
and a {@code Long} object representing this value is returned.

<p>The second argument is the default value. A {@code Long} object
that represents the value of the second argument is returned if there
is no property of the specified name, if the property does not have
the correct numeric format, or if the specified name is empty or null.

<p>In other words, this method returns a {@code Long} object equal
to the value of:

<blockquote>
 {@code getLong(nm, new Long(val))}
</blockquote>

but in practice it may be implemented in a manner such as:

<blockquote><pre>
Long result = getLong(nm, null);
return (result == null) ? new Long(val) : result;
</pre></blockquote>

to avoid the unnecessary allocation of a {@code Long} object when
the default value is not needed.

@param   nm    property name.
@param   val   default value.
@return  the {@code Long} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     java.lang.System#getProperty(java.lang.String)
@see     java.lang.System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7041282 "getLong"
	class_operation public return_type class_ref 251778 // Long
	nparams 2
	  param inout name "nm" type class_ref 128130 // String
	  param inout name "val" type class_ref 251778 // Long
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code long} value of the system property with
the specified name.  The first argument is treated as the name
of a system property.  System properties are accessible through
the {@link java.lang.System#getProperty(java.lang.String)}
method. The string value of this property is then interpreted
as a {@code long} value, as per the
{@link Long#decode decode} method, and a {@code Long} object
representing this value is returned; in summary:

<ul>
<li>If the property value begins with the two ASCII characters
{@code 0x} or the ASCII character {@code #}, not followed by
a minus sign, then the rest of it is parsed as a hexadecimal integer
exactly as for the method {@link #valueOf(java.lang.String, int)}
with radix 16.
<li>If the property value begins with the ASCII character
{@code 0} followed by another character, it is parsed as
an octal integer exactly as by the method {@link
#valueOf(java.lang.String, int)} with radix 8.
<li>Otherwise the property value is parsed as a decimal
integer exactly as by the method
{@link #valueOf(java.lang.String, int)} with radix 10.
</ul>

<p>Note that, in every case, neither {@code L}
({@code '\\u005Cu004C'}) nor {@code l}
({@code '\\u005Cu006C'}) is permitted to appear at the end
of the property value as a type indicator, as would be
permitted in Java programming language source code.

<p>The second argument is the default value. The default value is
returned if there is no property of the specified name, if the
property does not have the correct numeric format, or if the
specified name is empty or {@code null}.

@param   nm   property name.
@param   val   default value.
@return  the {@code Long} value of the property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     System#getProperty(java.lang.String)
@see     System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 7041410 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherLong" type class_ref 251778 // Long
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Long} objects numerically.

@param   anotherLong   the {@code Long} to be compared.
@return  the value {@code 0} if this {@code Long} is
         equal to the argument {@code Long}; a value less than
         {@code 0} if this {@code Long} is numerically less
         than the argument {@code Long}; and a value greater
         than {@code 0} if this {@code Long} is numerically
          greater than the argument {@code Long} (signed
          comparison).
@since   1.2
"
      end

      operation 7041538 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code long} values numerically.
The value returned is identical to what would be returned by:
<pre>
   Long.valueOf(x).compareTo(Long.valueOf(y))
</pre>

@param  x the first {@code long} to compare
@param  y the second {@code long} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code x < y}; and
        a value greater than {@code 0} if {@code x > y}
@since 1.7
"
      end

      operation 7041666 "compareUnsigned"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code long} values numerically treating the values
as unsigned.

@param  x the first {@code long} to compare
@param  y the second {@code long} to compare
@return the value {@code 0} if {@code x == y}; a value less
        than {@code 0} if {@code x < y} as unsigned values; and
        a value greater than {@code 0} if {@code x > y} as
        unsigned values
@since 1.8
"
      end

      operation 7041794 "divideUnsigned"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "dividend" explicit_type "long"
	  param in name "divisor" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unsigned quotient of dividing the first argument by
the second where each argument and the result is interpreted as
an unsigned value.

<p>Note that in two's complement arithmetic, the three other
basic arithmetic operations of add, subtract, and multiply are
bit-wise identical if the two operands are regarded as both
being signed or both being unsigned.  Therefore separate {@code
addUnsigned}, etc. methods are not provided.

@param dividend the value to be divided
@param divisor the value doing the dividing
@return the unsigned quotient of the first argument divided by
the second argument
@see #remainderUnsigned
@since 1.8
"
      end

      operation 7041922 "remainderUnsigned"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "dividend" explicit_type "long"
	  param in name "divisor" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unsigned remainder from dividing the first argument
by the second where each argument and the result is interpreted
as an unsigned value.

@param dividend the value to be divided
@param divisor the value doing the dividing
@return the unsigned remainder of the first argument divided by
the second argument
@see #divideUnsigned
@since 1.8
"
      end

      attribute 1677698 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bit Twiddling

The number of bits used to represent a {@code long} value in two's
complement binary form.

@since 1.5

"
      end

      attribute 1677826 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code long} value in two's
complement binary form.

@since 1.8

"
      end

      operation 7042050 "highestOneBit"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code long} value with at most a single one-bit, in the
position of the highest-order (\"leftmost\") one-bit in the specified
{@code long} value.  Returns zero if the specified value has no
one-bits in its two's complement binary representation, that is, if it
is equal to zero.

@param i the value whose highest one bit is to be computed
@return a {@code long} value with a single one-bit, in the position
    of the highest-order one-bit in the specified value, or zero if
    the specified value is itself equal to zero.
@since 1.5
"
      end

      operation 7042178 "lowestOneBit"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code long} value with at most a single one-bit, in the
position of the lowest-order (\"rightmost\") one-bit in the specified
{@code long} value.  Returns zero if the specified value has no
one-bits in its two's complement binary representation, that is, if it
is equal to zero.

@param i the value whose lowest one bit is to be computed
@return a {@code long} value with a single one-bit, in the position
    of the lowest-order one-bit in the specified value, or zero if
    the specified value is itself equal to zero.
@since 1.5
"
      end

      operation 7042306 "numberOfLeadingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of zero bits preceding the highest-order
(\"leftmost\") one-bit in the two's complement binary representation
of the specified {@code long} value.  Returns 64 if the
specified value has no one-bits in its two's complement representation,
in other words if it is equal to zero.

<p>Note that this method is closely related to the logarithm base 2.
For all positive {@code long} values x:
<ul>
<li>floor(log<sub>2</sub>(x)) = {@code 63 - numberOfLeadingZeros(x)}
<li>ceil(log<sub>2</sub>(x)) = {@code 64 - numberOfLeadingZeros(x - 1)}
</ul>

@param i the value whose number of leading zeros is to be computed
@return the number of zero bits preceding the highest-order
    (\"leftmost\") one-bit in the two's complement binary representation
    of the specified {@code long} value, or 64 if the value
    is equal to zero.
@since 1.5
"
      end

      operation 7042434 "numberOfTrailingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of zero bits following the lowest-order (\"rightmost\")
one-bit in the two's complement binary representation of the specified
{@code long} value.  Returns 64 if the specified value has no
one-bits in its two's complement representation, in other words if it is
equal to zero.

@param i the value whose number of trailing zeros is to be computed
@return the number of zero bits following the lowest-order (\"rightmost\")
    one-bit in the two's complement binary representation of the
    specified {@code long} value, or 64 if the value is equal
    to zero.
@since 1.5
"
      end

      operation 7042562 "bitCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of one-bits in the two's complement binary
representation of the specified {@code long} value.  This function is
sometimes referred to as the <i>population count</i>.

@param i the value whose bits are to be counted
@return the number of one-bits in the two's complement binary
    representation of the specified {@code long} value.
@since 1.5
"
      end

      operation 7042690 "rotateLeft"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "i" explicit_type "long"
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by rotating the two's complement binary
representation of the specified {@code long} value left by the
specified number of bits.  (Bits shifted out of the left hand, or
high-order, side reenter on the right, or low-order.)

<p>Note that left rotation with a negative distance is equivalent to
right rotation: {@code rotateLeft(val, -distance) == rotateRight(val,
distance)}.  Note also that rotation by any multiple of 64 is a
no-op, so all but the last six bits of the rotation distance can be
ignored, even if the distance is negative: {@code rotateLeft(val,
distance) == rotateLeft(val, distance & 0x3F)}.

@param i the value whose bits are to be rotated left
@param distance the number of bit positions to rotate left
@return the value obtained by rotating the two's complement binary
    representation of the specified {@code long} value left by the
    specified number of bits.
@since 1.5
"
      end

      operation 7042818 "rotateRight"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "i" explicit_type "long"
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by rotating the two's complement binary
representation of the specified {@code long} value right by the
specified number of bits.  (Bits shifted out of the right hand, or
low-order, side reenter on the left, or high-order.)

<p>Note that right rotation with a negative distance is equivalent to
left rotation: {@code rotateRight(val, -distance) == rotateLeft(val,
distance)}.  Note also that rotation by any multiple of 64 is a
no-op, so all but the last six bits of the rotation distance can be
ignored, even if the distance is negative: {@code rotateRight(val,
distance) == rotateRight(val, distance & 0x3F)}.

@param i the value whose bits are to be rotated right
@param distance the number of bit positions to rotate right
@return the value obtained by rotating the two's complement binary
    representation of the specified {@code long} value right by the
    specified number of bits.
@since 1.5
"
      end

      operation 7042946 "reverse"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bits in the
two's complement binary representation of the specified {@code long}
value.

@param i the value to be reversed
@return the value obtained by reversing order of the bits in the
    specified {@code long} value.
@since 1.5
"
      end

      operation 7043074 "signum"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the specified {@code long} value.  (The
return value is -1 if the specified value is negative; 0 if the
specified value is zero; and 1 if the specified value is positive.)

@param i the value whose signum is to be computed
@return the signum function of the specified {@code long} value.
@since 1.5
"
      end

      operation 7043202 "reverseBytes"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "i" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bytes in the
two's complement representation of the specified {@code long} value.

@param i the value whose bytes are to be reversed
@return the value obtained by reversing the bytes in the specified
    {@code long} value.
@since 1.5
"
      end

      operation 7043330 "sum"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds two {@code long} values together as per the + operator.

@param a the first operand
@param b the second operand
@return the sum of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7043458 "max"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code long} values
as if by calling {@link Math#max(long, long) Math.max}.

@param a the first operand
@param b the second operand
@return the greater of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7043586 "min"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code long} values
as if by calling {@link Math#min(long, long) Math.min}.

@param a the first operand
@param b the second operand
@return the smaller of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      attribute 1677954 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4290774380558885855L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 254850 "IllegalStateException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a method has been invoked at an illegal or
inappropriate time.  In other words, the Java environment or
Java application is not in an appropriate state for the requested
operation.

@author  Jonni Kanerva
@since   JDK1.1
"
      classrelation 2925954 // <generalisation>
	relation 2925954 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2925954 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      operation 6246274 "IllegalStateException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IllegalStateException with no detail message.
A detail message is a String that describes this particular exception.
"
      end

      operation 6246402 "IllegalStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an IllegalStateException with the specified detail
message.  A detail message is a String that describes this particular
exception.

@param s the String that contains a detailed message
"
      end

      operation 6246530 "IllegalStateException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message and
cause.

<p>Note that the detail message associated with <code>cause</code> is
<i>not</i> automatically incorporated in this exception's detail
message.

@param  message the detail message (which is saved for later retrieval
        by the {@link Throwable#getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value
        is permitted, and indicates that the cause is nonexistent or
        unknown.)
@since 1.5
"
      end

      operation 6246658 "IllegalStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of <tt>(cause==null ? null : cause.toString())</tt> (which
typically contains the class and detail message of <tt>cause</tt>).
This constructor is useful for exceptions that are little more than
wrappers for other throwables (for example, {@link
java.security.PrivilegedActionException}).

@param  cause the cause (which is saved for later retrieval by the
        {@link Throwable#getCause()} method).  (A <tt>null</tt> value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.5
"
      end

      attribute 1390210 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -1848914673093119416L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 315010 "Boolean"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Boolean class wraps a value of the primitive type
{@code boolean} in an object. An object of type
{@code Boolean} contains a single field whose type is
{@code boolean}.
<p>
In addition, this class provides many methods for
converting a {@code boolean} to a {@code String} and a
{@code String} to a {@code boolean}, as well as other
constants and methods useful when dealing with a
{@code boolean}.

@author  Arthur van Hoff
@since   JDK1.0
"
      classrelation 3146498 // <realization>
	relation 3146498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3146498 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3146626 // <realization>
	relation 3146626 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3146626 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      classrelation 3146754 // TRUE (<unidirectional association>)
	relation 3146754 --->
	  a role_name "TRUE" init_value " new Boolean(true)" class_relation const_relation public
	    comment "
The {@code Boolean} object corresponding to the primitive
value {@code true}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3146754 // TRUE (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 3146882 // FALSE (<unidirectional association>)
	relation 3146882 --->
	  a role_name "FALSE" init_value " new Boolean(false)" class_relation const_relation public
	    comment "
The {@code Boolean} object corresponding to the primitive
value {@code false}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3146882 // FALSE (<unidirectional association>)
	  b parent class_ref 315010 // Boolean
      end

      classrelation 3147010 // TYPE (<unidirectional association>)
	relation 3147010 --->
	  a role_name "TYPE" init_value " (Class<Boolean>) Class.getPrimitiveClass(\"boolean\")" class_relation const_relation public
	    comment "
The Class object representing the primitive type boolean.

@since   JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Boolean> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3147010 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      attribute 1661954 "value"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the Boolean.

@serial

"
      end

      attribute 1662082 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3665804199014368530L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 6957058 "Boolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a {@code Boolean} object representing the
{@code value} argument.

<p><b>Note: It is rarely appropriate to use this constructor.
Unless a <i>new</i> instance is required, the static factory
{@link #valueOf(boolean)} is generally a better choice. It is
likely to yield significantly better space and time performance.</b>

@param   value   the value of the {@code Boolean}.
"
      end

      operation 6957186 "Boolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a {@code Boolean} object representing the value
{@code true} if the string argument is not {@code null}
and is equal, ignoring case, to the string {@code \"true\"}.
Otherwise, allocate a {@code Boolean} object representing the
value {@code false}. Examples:<p>
{@code new Boolean(\"True\")} produces a {@code Boolean} object
that represents {@code true}.<br>
{@code new Boolean(\"yes\")} produces a {@code Boolean} object
that represents {@code false}.

@param   s   the string to be converted to a {@code Boolean}.
"
      end

      operation 6957314 "parseBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a boolean.  The {@code boolean}
returned represents the value {@code true} if the string argument
is not {@code null} and is equal, ignoring case, to the string
{@code \"true\"}. <p>
Example: {@code Boolean.parseBoolean(\"True\")} returns {@code true}.<br>
Example: {@code Boolean.parseBoolean(\"yes\")} returns {@code false}.

@param      s   the {@code String} containing the boolean
                representation to be parsed
@return     the boolean represented by the string argument
@since 1.5
"
      end

      operation 6957442 "booleanValue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Boolean} object as a boolean
primitive.

@return  the primitive {@code boolean} value of this object.
"
      end

      operation 6957570 "valueOf"
	class_operation public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Boolean} instance representing the specified
{@code boolean} value.  If the specified {@code boolean} value
is {@code true}, this method returns {@code Boolean.TRUE};
if it is {@code false}, this method returns {@code Boolean.FALSE}.
If a new {@code Boolean} instance is not required, this method
should generally be used in preference to the constructor
{@link #Boolean(boolean)}, as this method is likely to yield
significantly better space and time performance.

@param  b a boolean value.
@return a {@code Boolean} instance representing {@code b}.
@since  1.4
"
      end

      operation 6957698 "valueOf"
	class_operation public return_type class_ref 315010 // Boolean
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Boolean} with a value represented by the
specified string.  The {@code Boolean} returned represents a
true value if the string argument is not {@code null}
and is equal, ignoring case, to the string {@code \"true\"}.

@param   s   a string.
@return  the {@code Boolean} value represented by the string.
"
      end

      operation 6957826 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing the specified
boolean.  If the specified boolean is {@code true}, then
the string {@code \"true\"} will be returned, otherwise the
string {@code \"false\"} will be returned.

@param b the boolean to be converted
@return the string representation of the specified {@code boolean}
@since 1.4
"
      end

      operation 6957954 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this Boolean's
value.  If this object represents the value {@code true},
a string equal to {@code \"true\"} is returned. Otherwise, a
string equal to {@code \"false\"} is returned.

@return  a string representation of this object.
"
      end

      operation 6958082 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Boolean} object.

@return  the integer {@code 1231} if this object represents
{@code true}; returns the integer {@code 1237} if this
object represents {@code false}.
"
      end

      operation 6958210 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code boolean} value; compatible with
{@code Boolean.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code boolean} value.
@since 1.8
"
      end

      operation 6958338 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if and only if the argument is not
{@code null} and is a {@code Boolean} object that
represents the same {@code boolean} value as this object.

@param   obj   the object to compare with.
@return  {@code true} if the Boolean objects represent the
         same value; {@code false} otherwise.
"
      end

      operation 6958466 "getBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if and only if the system property
named by the argument exists and is equal to the string
{@code \"true\"}. (Beginning with version 1.0.2 of the
Java<small><sup>TM</sup></small> platform, the test of
this string is case insensitive.) A system property is accessible
through {@code getProperty}, a method defined by the
{@code System} class.
<p>
If there is no property with the specified name, or if the specified
name is empty or null, then {@code false} is returned.

@param   name   the system property name.
@return  the {@code boolean} value of the system property.
@throws  SecurityException for the same reasons as
         {@link System#getProperty(String) System.getProperty}
@see     java.lang.System#getProperty(java.lang.String)
@see     java.lang.System#getProperty(java.lang.String, java.lang.String)
"
      end

      operation 6958594 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" type class_ref 315010 // Boolean
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this {@code Boolean} instance with another.

@param   b the {@code Boolean} instance to be compared
@return  zero if this object represents the same boolean value as the
         argument; a positive value if this object represents true
         and the argument represents false; and a negative value if
         this object represents false and the argument represents true
@throws  NullPointerException if the argument is {@code null}
@see     Comparable
@since  1.5
"
      end

      operation 6958722 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "x" explicit_type "boolean"
	  param inout name "y" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code boolean} values.
The value returned is identical to what would be returned by:
<pre>
   Boolean.valueOf(x).compareTo(Boolean.valueOf(y))
</pre>

@param  x the first {@code boolean} to compare
@param  y the second {@code boolean} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code !x && y}; and
        a value greater than {@code 0} if {@code x && !y}
@since 1.7
"
      end

      operation 6958850 "logicalAnd"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "boolean"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of applying the logical AND operator to the
specified {@code boolean} operands.

@param a the first operand
@param b the second operand
@return the logical AND of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 6958978 "logicalOr"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "boolean"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of applying the logical OR operator to the
specified {@code boolean} operands.

@param a the first operand
@param b the second operand
@return the logical OR of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 6959106 "logicalXor"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "boolean"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of applying the logical XOR operator to the
specified {@code boolean} operands.

@param a the first operand
@param b the second operand
@return  the logical XOR of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end
    end

    class 319746 "ClassFormatError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when the Java Virtual Machine attempts to read a class
file and determines that the file is malformed or otherwise cannot
be interpreted as a class file.

@author  unascribed
@since   JDK1.0
"
      classrelation 3154562 // <generalisation>
	relation 3154562 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3154562 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1668610 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8420114879011949195L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7006466 "ClassFormatError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassFormatError</code> with no detail message.
"
      end

      operation 7006594 "ClassFormatError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ClassFormatError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 320002 "Package"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code Package} objects contain version information
about the implementation and specification of a Java package.
This versioning information is retrieved and made available
by the {@link ClassLoader} instance that
loaded the class(es).  Typically, it is stored in the manifest that is
distributed with the classes.

<p>The set of classes that make up the package may implement a
particular specification and if so the specification title, version number,
and vendor strings identify that specification.
An application can ask if the package is
compatible with a particular version, see the {@link
#isCompatibleWith isCompatibleWith}
method for details.

<p>Specification version numbers use a syntax that consists of nonnegative
decimal integers separated by periods \".\", for example \"2.0\" or
\"1.2.3.4.5.6.7\".  This allows an extensible number to be used to represent
major, minor, micro, etc. versions.  The version specification is described
by the following formal grammar:
<blockquote>
<dl>
<dt><i>SpecificationVersion:</i>
<dd><i>Digits RefinedVersion<sub>opt</sub></i>

<dt><i>RefinedVersion:</i>
<dd>{@code .} <i>Digits</i>
<dd>{@code .} <i>Digits RefinedVersion</i>

<dt><i>Digits:</i>
<dd><i>Digit</i>
<dd><i>Digits</i>

<dt><i>Digit:</i>
<dd>any character for which {@link Character#isDigit} returns {@code true},
e.g. 0, 1, 2, ...
</dl>
</blockquote>

<p>The implementation title, version, and vendor strings identify an
implementation and are made available conveniently to enable accurate
reporting of the packages involved when a problem occurs. The contents
all three implementation strings are vendor specific. The
implementation version strings have no specified syntax and should
only be compared for equality with desired version identifiers.

<p>Within each {@code ClassLoader} instance all classes from the same
java package have the same Package object.  The static methods allow a package
to be found by name or the set of all packages known to the current class
loader to be found.

@see ClassLoader#definePackage
"
      classrelation 3161858 // <realization>
	relation 3161858 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3161858 // <realization>
	  b parent class_ref 494722 // AnnotatedElement
      end

      operation 7055874 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of this package.

@return  The fully-qualified name of this package as defined in section 6.5.3 of
         <cite>The Java&trade; Language Specification</cite>,
         for example, {@code java.lang}
"
      end

      operation 7056002 "getSpecificationTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the title of the specification that this package implements.
@return the specification title, null is returned if it is not known.
"
      end

      operation 7056130 "getSpecificationVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version number of the specification
that this package implements.
This version string must be a sequence of nonnegative decimal
integers separated by \".\"'s and may have leading zeros.
When version strings are compared the most significant
numbers are compared.
@return the specification version, null is returned if it is not known.
"
      end

      operation 7056258 "getSpecificationVendor"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the organization, vendor,
or company that owns and maintains the specification
of the classes that implement this package.
@return the specification vendor, null is returned if it is not known.
"
      end

      operation 7056386 "getImplementationTitle"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the title of this package.
@return the title of the implementation, null is returned if it is not known.
"
      end

      operation 7056514 "getImplementationVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the version of this implementation. It consists of any string
assigned by the vendor of this implementation and does
not have any particular syntax specified or expected by the Java
runtime. It may be compared for equality with other
package version strings used for this implementation
by this vendor for this package.
@return the version of the implementation, null is returned if it is not known.
"
      end

      operation 7056642 "getImplementationVendor"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the organization,
vendor or company that provided this implementation.
@return the vendor that implemented this package..
"
      end

      operation 7056770 "isSealed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this package is sealed.

@return true if the package is sealed, false otherwise
"
      end

      operation 7056898 "isSealed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "url" type class_ref 243458 // URL
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this package is sealed with respect to the specified
code source url.

@param url the code source url
@return true if this package is sealed with respect to url
"
      end

      operation 7057026 "isCompatibleWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "desired" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this package's specification version with a
desired version. It returns true if
this packages specification version number is greater than or equal
to the desired version number. <p>

Version numbers are compared by sequentially comparing corresponding
components of the desired and specification strings.
Each component is converted as a decimal integer and the values
compared.
If the specification value is greater than the desired
value true is returned. If the value is less false is returned.
If the values are equal the period is skipped and the next pair of
components is compared.

@param desired the version string of the desired version.
@return true if this package's version number is greater
         than or equal to the desired version number

@exception NumberFormatException if the desired or current version
         is not of the correct dotted form.
"
      end

      operation 7057154 "getPackage"
	class_operation public return_type class_ref 320002 // Package
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Find a package by name in the callers {@code ClassLoader} instance.
The callers {@code ClassLoader} instance is used to find the package
instance corresponding to the named class. If the callers
{@code ClassLoader} instance is null then the set of packages loaded
by the system {@code ClassLoader} instance is searched to find the
named package. <p>

Packages have attributes for versions and specifications only if the class
loader created the package instance with the appropriate attributes. Typically,
those attributes are defined in the manifests that accompany the classes.

@param name a package name, for example, java.lang.
@return the package of the requested name. It may be null if no package
         information is available from the archive or codebase.
"
      end

      operation 7057282 "getPackages"
	class_operation public return_type class_ref 320002 // Package
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Get all the packages currently known for the caller's {@code ClassLoader}
instance.  Those packages correspond to classes loaded via or accessible by
name to that {@code ClassLoader} instance.  If the caller's
{@code ClassLoader} instance is the bootstrap {@code ClassLoader}
instance, which may be represented by {@code null} in some implementations,
only packages corresponding to classes loaded by the bootstrap
{@code ClassLoader} instance will be returned.

@return a new array of packages known to the callers {@code ClassLoader}
instance.  An zero length array is returned if none are known.
"
      end

      operation 7057410 "getPackage"
	class_operation package return_type class_ref 320002 // Package
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package for the specified class.
The class's class loader is used to find the package instance
corresponding to the specified class. If the class loader
is the bootstrap class loader, which may be represented by
{@code null} in some implementations, then the set of packages
loaded by the bootstrap class loader is searched to find the package.
<p>
Packages have attributes for versions and specifications only
if the class loader created the package
instance with the appropriate attributes. Typically those
attributes are defined in the manifests that accompany
the classes.

@param c the class to get the package of.
@return the package of the class. It may be null if no package
         information is available from the archive or codebase.  "
      end

      operation 7057538 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the hash code computed from the package name.
@return the hash code computed from the package name.
"
      end

      operation 7057666 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this Package.
Its value is the string \"package \" and the package name.
If the package title is defined it is appended.
If the package version is defined it is appended.
@return the string representation of the package.
"
      end

      operation 7057794 "getPackageInfo"
	private return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7057922 "getAnnotation"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.5
"
      end

      operation 7058050 "isAnnotationPresent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Annotation> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
@throws NullPointerException {@inheritDoc}
@since 1.5
"
      end

      operation 7058178 "getAnnotationsByType"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type}[] ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7058306 "getAnnotations"
	public return_type class_ref 494850 // Annotation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.5
"
      end

      operation 7058434 "getDeclaredAnnotation"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7058562 "getDeclaredAnnotationsByType"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type}[] ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@throws NullPointerException {@inheritDoc}
@since 1.8
"
      end

      operation 7058690 "getDeclaredAnnotations"
	public return_type class_ref 494850 // Annotation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.5
"
      end

      operation 7058818 "Package"
	package explicit_return_type ""
	nparams 9
	  param inout name "name" type class_ref 128130 // String
	  param inout name "spectitle" type class_ref 128130 // String
	  param inout name "specversion" type class_ref 128130 // String
	  param inout name "specvendor" type class_ref 128130 // String
	  param inout name "impltitle" type class_ref 128130 // String
	  param inout name "implversion" type class_ref 128130 // String
	  param inout name "implvendor" type class_ref 128130 // String
	  param inout name "sealbase" type class_ref 243458 // URL
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a package instance with the specified version
information.
@param name the name of the package
@param spectitle the title of the specification
@param specversion the version of the specification
@param specvendor the organization that maintains the specification
@param impltitle the title of the implementation
@param implversion the version of the implementation
@param implvendor the organization that maintains the implementation
"
      end

      operation 7058946 "Package"
	private explicit_return_type ""
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "man" type class_ref 935810 // Manifest
	  param inout name "url" type class_ref 243458 // URL
	  param inout name "loader" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a package using the attributes from the specified manifest.

@param name the package name
@param man the optional manifest for the package
@param url the optional code source url for the package
"
      end

      operation 7059074 "getSystemPackage"
	class_operation package return_type class_ref 320002 // Package
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the loaded system package for the specified name.
"
      end

      operation 7059202 "getSystemPackages"
	class_operation package return_type class_ref 320002 // Package
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array of loaded system packages.
"
      end

      operation 7059330 "defineSystemPackage"
	class_operation private return_type class_ref 320002 // Package
	nparams 2
	  param in name "iname" type class_ref 128130 // String
	  param in name "fn" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7059458 "loadManifest"
	class_operation private return_type class_ref 935810 // Manifest
	nparams 1
	  param inout name "fn" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Manifest for the specified JAR file name.
"
      end

      classrelation 3161986 // pkgs (<unidirectional association>)
	relation 3161986 --->
	  a role_name "pkgs" init_value " new HashMap<>(31)" class_relation private
	    comment " The map of loaded system packages
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Package> ${name}${value};
"
	    classrelation_ref 3161986 // pkgs (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3162114 // urls (<unidirectional association>)
	relation 3162114 --->
	  a role_name "urls" init_value " new HashMap<>(10)" class_relation private
	    comment " Maps each directory or zip file name to its corresponding url
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, URL> ${name}${value};
"
	    classrelation_ref 3162114 // urls (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 3162242 // mans (<unidirectional association>)
	relation 3162242 --->
	  a role_name "mans" init_value " new HashMap<>(10)" class_relation private
	    comment " Maps each code source url for a jar file to its manifest
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Manifest> ${name}${value};
"
	    classrelation_ref 3162242 // mans (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      operation 7059586 "getSystemPackage0"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7059714 "getSystemPackages0"
	class_operation private return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
      end

      classrelation 3162370 // pkgName (<unidirectional association>)
	relation 3162370 --->
	  a role_name "pkgName" const_relation private
	    comment "
Private storage for the package name and attributes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3162370 // pkgName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3162498 // specTitle (<unidirectional association>)
	relation 3162498 --->
	  a role_name "specTitle" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3162498 // specTitle (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3162626 // specVersion (<unidirectional association>)
	relation 3162626 --->
	  a role_name "specVersion" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3162626 // specVersion (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3162754 // specVendor (<unidirectional association>)
	relation 3162754 --->
	  a role_name "specVendor" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3162754 // specVendor (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3162882 // implTitle (<unidirectional association>)
	relation 3162882 --->
	  a role_name "implTitle" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3162882 // implTitle (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3163010 // implVersion (<unidirectional association>)
	relation 3163010 --->
	  a role_name "implVersion" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3163010 // implVersion (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3163138 // implVendor (<unidirectional association>)
	relation 3163138 --->
	  a role_name "implVendor" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3163138 // implVendor (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3163266 // sealBase (<unidirectional association>)
	relation 3163266 --->
	  a role_name "sealBase" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3163266 // sealBase (<unidirectional association>)
	  b parent class_ref 243458 // URL
      end

      classrelation 3163394 // loader (<unidirectional association>)
	relation 3163394 --->
	  a role_name "loader" const_relation private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3163394 // loader (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      classrelation 3163522 // packageInfo (<unidirectional association>)
	relation 3163522 --->
	  a role_name "packageInfo" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 3163522 // packageInfo (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end
    end

    class 320258 "AssertionStatusDirectives"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A collection of assertion status directives (such as \"enable assertions
in package p\" or \"disable assertions in class c\").  This class is used by
the JVM to communicate the assertion status directives implied by
the <tt>java</tt> command line flags <tt>-enableassertions</tt>
(<tt>-ea</tt>) and <tt>-disableassertions</tt> (<tt>-da</tt>).

@since  1.4
@author Josh Bloch
"
      classrelation 3146242 // classes (<unidirectional association>)
	relation 3146242 --->
	  a role_name "classes" multiplicity "[]" package
	    comment "
The classes for which assertions are to be enabled or disabled.
The strings in this array are fully qualified class names (for
example,\"com.xyz.foo.Bar\").

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3146242 // classes (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1661570 "classEnabled"
	package explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A parallel array to <tt>classes</tt>, indicating whether each class
is to have assertions enabled or disabled.  A value of <tt>true</tt>
for <tt>classEnabled[i]</tt> indicates that the class named by
<tt>classes[i]</tt> should have assertions enabled; a value of
<tt>false</tt> indicates that it should have classes disabled.
This array must have the same number of elements as <tt>classes</tt>.

<p>In the case of conflicting directives for the same class, the
last directive for a given class wins.  In other words, if a string
<tt>s</tt> appears multiple times in the <tt>classes</tt> array
and <tt>i</tt> is the highest integer for which
<tt>classes[i].equals(s)</tt>, then <tt>classEnabled[i]</tt>
indicates whether assertions are to be enabled in class <tt>s</tt>.

"
      end

      classrelation 3146370 // packages (<unidirectional association>)
	relation 3146370 --->
	  a role_name "packages" multiplicity "[]" package
	    comment "
The package-trees for which assertions are to be enabled or disabled.
The strings in this array are compete or partial package names
(for example, \"com.xyz\" or \"com.xyz.foo\").

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3146370 // packages (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1661698 "packageEnabled"
	package explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A parallel array to <tt>packages</tt>, indicating whether each
package-tree is to have assertions enabled or disabled.  A value of
<tt>true</tt> for <tt>packageEnabled[i]</tt> indicates that the
package-tree named by <tt>packages[i]</tt> should have assertions
enabled; a value of <tt>false</tt> indicates that it should have
assertions disabled.  This array must have the same number of
elements as <tt>packages</tt>.

In the case of conflicting directives for the same package-tree, the
last directive for a given package-tree wins.  In other words, if a
string <tt>s</tt> appears multiple times in the <tt>packages</tt> array
and <tt>i</tt> is the highest integer for which
<tt>packages[i].equals(s)</tt>, then <tt>packageEnabled[i]</tt>
indicates whether assertions are to be enabled in package-tree
<tt>s</tt>.

"
      end

      attribute 1661826 "deflt"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether or not assertions in non-system classes are to be enabled
by default.

"
      end
    end

    class 320386 "SystemClassLoaderAction"
      visibility package 
      nactuals 1
      actual class class_ref 320514 // PrivilegedExceptionAction
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 540546 // <realization>
	relation 540546 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 540546 // <realization>
	  b parent class_ref 320514 // PrivilegedExceptionAction
      end

      classrelation 540674 // parent (<unidirectional association>)
	relation 540674 --->
	  a role_name "parent" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540674 // parent (<unidirectional association>)
	  b parent class_ref 129026 // ClassLoader
      end

      operation 1730306 "SystemClassLoaderAction"
	package explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 129026 // ClassLoader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1730434 "run"
	public return_type class_ref 129026 // ClassLoader
	nparams 0
	nexceptions 1
	  exception class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 321538 "IllegalAccessException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An IllegalAccessException is thrown when an application tries
to reflectively create an instance (other than an array),
set or get a field, or invoke a method, but the currently
executing method does not have access to the definition of
the specified class, field, method or constructor.

@author  unascribed
@see     Class#newInstance()
@see     java.lang.reflect.Field#set(Object, Object)
@see     java.lang.reflect.Field#setBoolean(Object, boolean)
@see     java.lang.reflect.Field#setByte(Object, byte)
@see     java.lang.reflect.Field#setShort(Object, short)
@see     java.lang.reflect.Field#setChar(Object, char)
@see     java.lang.reflect.Field#setInt(Object, int)
@see     java.lang.reflect.Field#setLong(Object, long)
@see     java.lang.reflect.Field#setFloat(Object, float)
@see     java.lang.reflect.Field#setDouble(Object, double)
@see     java.lang.reflect.Field#get(Object)
@see     java.lang.reflect.Field#getBoolean(Object)
@see     java.lang.reflect.Field#getByte(Object)
@see     java.lang.reflect.Field#getShort(Object)
@see     java.lang.reflect.Field#getChar(Object)
@see     java.lang.reflect.Field#getInt(Object)
@see     java.lang.reflect.Field#getLong(Object)
@see     java.lang.reflect.Field#getFloat(Object)
@see     java.lang.reflect.Field#getDouble(Object)
@see     java.lang.reflect.Method#invoke(Object, Object[])
@see     java.lang.reflect.Constructor#newInstance(Object[])
@since   JDK1.0
"
      classrelation 3157506 // <generalisation>
	relation 3157506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3157506 // <generalisation>
	  b parent class_ref 932226 // ReflectiveOperationException
      end

      attribute 1673986 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6616958222490762034L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7022594 "IllegalAccessException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalAccessException</code> without a
detail message.
"
      end

      operation 7022722 "IllegalAccessException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalAccessException</code> with a detail message.

@param   s   the detail message.
"
      end
    end

    class 377218 "Double"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Double} class wraps a value of the primitive type
{@code double} in an object. An object of type
{@code Double} contains a single field whose type is
{@code double}.

<p>In addition, this class provides several methods for converting a
{@code double} to a {@code String} and a
{@code String} to a {@code double}, as well as other
constants and methods useful when dealing with a
{@code double}.

@author  Lee Boynton
@author  Arthur van Hoff
@author  Joseph D. Darcy
@since JDK1.0
"
      classrelation 3155586 // <generalisation>
	relation 3155586 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3155586 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3155714 // <realization>
	relation 3155714 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3155714 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1670402 "POSITIVE_INFINITY"
	class_attribute const_attribute public explicit_type "double"
	init_value " 1.0 / 0.0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the positive infinity of type
{@code double}. It is equal to the value returned by
{@code Double.longBitsToDouble(0x7ff0000000000000L)}.

"
      end

      attribute 1670530 "NEGATIVE_INFINITY"
	class_attribute const_attribute public explicit_type "double"
	init_value " -1.0 / 0.0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the negative infinity of type
{@code double}. It is equal to the value returned by
{@code Double.longBitsToDouble(0xfff0000000000000L)}.

"
      end

      attribute 1670658 "NaN"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0.0d / 0.0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding a Not-a-Number (NaN) value of type
{@code double}. It is equivalent to the value returned by
{@code Double.longBitsToDouble(0x7ff8000000000000L)}.

"
      end

      attribute 1670786 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0x1.fffffffffffffP+1023"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the largest positive finite value of type
{@code double},
(2-2<sup>-52</sup>)&middot;2<sup>1023</sup>.  It is equal to
the hexadecimal floating-point literal
{@code 0x1.fffffffffffffP+1023} and also equal to
{@code Double.longBitsToDouble(0x7fefffffffffffffL)}.

 1.7976931348623157e+308"
      end

      attribute 1670914 "MIN_NORMAL"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0x1.0p-1022"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the smallest positive normal value of type
{@code double}, 2<sup>-1022</sup>.  It is equal to the
hexadecimal floating-point literal {@code 0x1.0p-1022} and also
equal to {@code Double.longBitsToDouble(0x0010000000000000L)}.

@since 1.6

 2.2250738585072014E-308"
      end

      attribute 1671042 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0x0.0000000000001P-1022"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the smallest positive nonzero value of type
{@code double}, 2<sup>-1074</sup>. It is equal to the
hexadecimal floating-point literal
{@code 0x0.0000000000001P-1022} and also equal to
{@code Double.longBitsToDouble(0x1L)}.

 4.9e-324"
      end

      attribute 1671170 "MAX_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1023"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum exponent a finite {@code double} variable may have.
It is equal to the value returned by
{@code Math.getExponent(Double.MAX_VALUE)}.

@since 1.6

"
      end

      attribute 1671298 "MIN_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1022"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Minimum exponent a normalized {@code double} variable may
have.  It is equal to the value returned by
{@code Math.getExponent(Double.MIN_NORMAL)}.

@since 1.6

"
      end

      attribute 1671426 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bits used to represent a {@code double} value.

@since 1.5

"
      end

      attribute 1671554 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code double} value.

@since 1.8

"
      end

      classrelation 3155842 // TYPE (<unidirectional association>)
	relation 3155842 --->
	  a role_name "TYPE" init_value " (Class<Double>) Class.getPrimitiveClass(\"double\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code double}.

@since JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Double> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3155842 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 7011842 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the {@code double}
argument. All characters mentioned below are ASCII characters.
<ul>
<li>If the argument is NaN, the result is the string
    \"{@code NaN}\".
<li>Otherwise, the result is a string that represents the sign and
magnitude (absolute value) of the argument. If the sign is negative,
the first character of the result is '{@code -}'
({@code '\\u005Cu002D'}); if the sign is positive, no sign character
appears in the result. As for the magnitude <i>m</i>:
<ul>
<li>If <i>m</i> is infinity, it is represented by the characters
{@code \"Infinity\"}; thus, positive infinity produces the result
{@code \"Infinity\"} and negative infinity produces the result
{@code \"-Infinity\"}.

<li>If <i>m</i> is zero, it is represented by the characters
{@code \"0.0\"}; thus, negative zero produces the result
{@code \"-0.0\"} and positive zero produces the result
{@code \"0.0\"}.

<li>If <i>m</i> is greater than or equal to 10<sup>-3</sup> but less
than 10<sup>7</sup>, then it is represented as the integer part of
<i>m</i>, in decimal form with no leading zeroes, followed by
'{@code .}' ({@code '\\u005Cu002E'}), followed by one or
more decimal digits representing the fractional part of <i>m</i>.

<li>If <i>m</i> is less than 10<sup>-3</sup> or greater than or
equal to 10<sup>7</sup>, then it is represented in so-called
\"computerized scientific notation.\" Let <i>n</i> be the unique
integer such that 10<sup><i>n</i></sup> &le; <i>m</i> {@literal <}
10<sup><i>n</i>+1</sup>; then let <i>a</i> be the
mathematically exact quotient of <i>m</i> and
10<sup><i>n</i></sup> so that 1 &le; <i>a</i> {@literal <} 10. The
magnitude is then represented as the integer part of <i>a</i>,
as a single decimal digit, followed by '{@code .}'
({@code '\\u005Cu002E'}), followed by decimal digits
representing the fractional part of <i>a</i>, followed by the
letter '{@code E}' ({@code '\\u005Cu0045'}), followed
by a representation of <i>n</i> as a decimal integer, as
produced by the method {@link Integer#toString(int)}.
</ul>
</ul>
How many digits must be printed for the fractional part of
<i>m</i> or <i>a</i>? There must be at least one digit to represent
the fractional part, and beyond that as many, but only as many, more
digits as are needed to uniquely distinguish the argument value from
adjacent values of type {@code double}. That is, suppose that
<i>x</i> is the exact mathematical value represented by the decimal
representation produced by this method for a finite nonzero argument
<i>d</i>. Then <i>d</i> must be the {@code double} value nearest
to <i>x</i>; or if two {@code double} values are equally close
to <i>x</i>, then <i>d</i> must be one of them and the least
significant bit of the significand of <i>d</i> must be {@code 0}.

<p>To create localized string representations of a floating-point
value, use subclasses of {@link java.text.NumberFormat}.

@param   d   the {@code double} to be converted.
@return a string representation of the argument.
"
      end

      operation 7011970 "toHexString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hexadecimal string representation of the
{@code double} argument. All characters mentioned below
are ASCII characters.

<ul>
<li>If the argument is NaN, the result is the string
    \"{@code NaN}\".
<li>Otherwise, the result is a string that represents the sign
and magnitude of the argument. If the sign is negative, the
first character of the result is '{@code -}'
({@code '\\u005Cu002D'}); if the sign is positive, no sign
character appears in the result. As for the magnitude <i>m</i>:

<ul>
<li>If <i>m</i> is infinity, it is represented by the string
{@code \"Infinity\"}; thus, positive infinity produces the
result {@code \"Infinity\"} and negative infinity produces
the result {@code \"-Infinity\"}.

<li>If <i>m</i> is zero, it is represented by the string
{@code \"0x0.0p0\"}; thus, negative zero produces the result
{@code \"-0x0.0p0\"} and positive zero produces the result
{@code \"0x0.0p0\"}.

<li>If <i>m</i> is a {@code double} value with a
normalized representation, substrings are used to represent the
significand and exponent fields.  The significand is
represented by the characters {@code \"0x1.\"}
followed by a lowercase hexadecimal representation of the rest
of the significand as a fraction.  Trailing zeros in the
hexadecimal representation are removed unless all the digits
are zero, in which case a single zero is used. Next, the
exponent is represented by {@code \"p\"} followed
by a decimal string of the unbiased exponent as if produced by
a call to {@link Integer#toString(int) Integer.toString} on the
exponent value.

<li>If <i>m</i> is a {@code double} value with a subnormal
representation, the significand is represented by the
characters {@code \"0x0.\"} followed by a
hexadecimal representation of the rest of the significand as a
fraction.  Trailing zeros in the hexadecimal representation are
removed. Next, the exponent is represented by
{@code \"p-1022\"}.  Note that there must be at
least one nonzero digit in a subnormal significand.

</ul>

</ul>

<table border>
<caption>Examples</caption>
<tr><th>Floating-point Value</th><th>Hexadecimal String</th>
<tr><td>{@code 1.0}</td> <td>{@code 0x1.0p0}</td>
<tr><td>{@code -1.0}</td>        <td>{@code -0x1.0p0}</td>
<tr><td>{@code 2.0}</td> <td>{@code 0x1.0p1}</td>
<tr><td>{@code 3.0}</td> <td>{@code 0x1.8p1}</td>
<tr><td>{@code 0.5}</td> <td>{@code 0x1.0p-1}</td>
<tr><td>{@code 0.25}</td>        <td>{@code 0x1.0p-2}</td>
<tr><td>{@code Double.MAX_VALUE}</td>
    <td>{@code 0x1.fffffffffffffp1023}</td>
<tr><td>{@code Minimum Normal Value}</td>
    <td>{@code 0x1.0p-1022}</td>
<tr><td>{@code Maximum Subnormal Value}</td>
    <td>{@code 0x0.fffffffffffffp-1022}</td>
<tr><td>{@code Double.MIN_VALUE}</td>
    <td>{@code 0x0.0000000000001p-1022}</td>
</table>
@param   d   the {@code double} to be converted.
@return a hex string representation of the argument.
@since 1.5
@author Joseph D. Darcy
"
      end

      operation 7012098 "valueOf"
	class_operation public return_type class_ref 377218 // Double
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Double} object holding the
{@code double} value represented by the argument string
{@code s}.

<p>If {@code s} is {@code null}, then a
{@code NullPointerException} is thrown.

<p>Leading and trailing whitespace characters in {@code s}
are ignored.  Whitespace is removed as if by the {@link
String#trim} method; that is, both ASCII space and control
characters are removed. The rest of {@code s} should
constitute a <i>FloatValue</i> as described by the lexical
syntax rules:

<blockquote>
<dl>
<dt><i>FloatValue:</i>
<dd><i>Sign<sub>opt</sub></i> {@code NaN}
<dd><i>Sign<sub>opt</sub></i> {@code Infinity}
<dd><i>Sign<sub>opt</sub> FloatingPointLiteral</i>
<dd><i>Sign<sub>opt</sub> HexFloatingPointLiteral</i>
<dd><i>SignedInteger</i>
</dl>

<dl>
<dt><i>HexFloatingPointLiteral</i>:
<dd> <i>HexSignificand BinaryExponent FloatTypeSuffix<sub>opt</sub></i>
</dl>

<dl>
<dt><i>HexSignificand:</i>
<dd><i>HexNumeral</i>
<dd><i>HexNumeral</i> {@code .}
<dd>{@code 0x} <i>HexDigits<sub>opt</sub>
    </i>{@code .}<i> HexDigits</i>
<dd>{@code 0X}<i> HexDigits<sub>opt</sub>
    </i>{@code .} <i>HexDigits</i>
</dl>

<dl>
<dt><i>BinaryExponent:</i>
<dd><i>BinaryExponentIndicator SignedInteger</i>
</dl>

<dl>
<dt><i>BinaryExponentIndicator:</i>
<dd>{@code p}
<dd>{@code P}
</dl>

</blockquote>

where <i>Sign</i>, <i>FloatingPointLiteral</i>,
<i>HexNumeral</i>, <i>HexDigits</i>, <i>SignedInteger</i> and
<i>FloatTypeSuffix</i> are as defined in the lexical structure
sections of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.
If {@code s} does not have the form of
a <i>FloatValue</i>, then a {@code NumberFormatException}
is thrown. Otherwise, {@code s} is regarded as
representing an exact decimal value in the usual
\"computerized scientific notation\" or as an exact
hexadecimal value; this exact numerical value is then
conceptually converted to an \"infinitely precise\"
binary value that is then rounded to type {@code double}
by the usual round-to-nearest rule of IEEE 754 floating-point
arithmetic, which includes preserving the sign of a zero
value.

Note that the round-to-nearest rule also implies overflow and
underflow behaviour; if the exact value of {@code s} is large
enough in magnitude (greater than or equal to ({@link
#MAX_VALUE} + {@link Math#ulp(double) ulp(MAX_VALUE)}/2),
rounding to {@code double} will result in an infinity and if the
exact value of {@code s} is small enough in magnitude (less
than or equal to {@link #MIN_VALUE}/2), rounding to float will
result in a zero.

Finally, after rounding a {@code Double} object representing
this {@code double} value is returned.

<p> To interpret localized string representations of a
floating-point value, use subclasses of {@link
java.text.NumberFormat}.

<p>Note that trailing format specifiers, specifiers that
determine the type of a floating-point literal
({@code 1.0f} is a {@code float} value;
{@code 1.0d} is a {@code double} value), do
<em>not</em> influence the results of this method.  In other
words, the numerical value of the input string is converted
directly to the target floating-point type.  The two-step
sequence of conversions, string to {@code float} followed
by {@code float} to {@code double}, is <em>not</em>
equivalent to converting a string directly to
{@code double}. For example, the {@code float}
literal {@code 0.1f} is equal to the {@code double}
value {@code 0.10000000149011612}; the {@code float}
literal {@code 0.1f} represents a different numerical
value than the {@code double} literal
{@code 0.1}. (The numerical value 0.1 cannot be exactly
represented in a binary floating-point number.)

<p>To avoid calling this method on an invalid string and having
a {@code NumberFormatException} be thrown, the regular
expression below can be used to screen the input string:

<pre>{@code
 final String Digits     = \"(\\\\p{Digit}+)\";
 final String HexDigits  = \"(\\\\p{XDigit}+)\";
 // an exponent is 'e' or 'E' followed by an optionally
 // signed decimal integer.
 final String Exp        = \"[eE][+-]?\"+Digits;
 final String fpRegex    =
     (\"[\\\\x00-\\\\x20]*\"+  // Optional leading \"whitespace\"
      \"[+-]?(\" + // Optional sign character
      \"NaN|\" +           // \"NaN\" string
      \"Infinity|\" +      // \"Infinity\" string

      // A decimal floating-point string representing a finite positive
      // number without a leading sign has at most five basic pieces:
      // Digits . Digits ExponentPart FloatTypeSuffix
      //
      // Since this method allows integer-only strings as input
      // in addition to strings of floating-point literals, the
      // two sub-patterns below are simplifications of the grammar
      // productions from section 3.10.2 of
      // The Java Language Specification.

      // Digits ._opt Digits_opt ExponentPart_opt FloatTypeSuffix_opt
      \"(((\"+Digits+\"(\\\\.)?(\"+Digits+\"?)(\"+Exp+\")?)|\"+

      // . Digits ExponentPart_opt FloatTypeSuffix_opt
      \"(\\\\.(\"+Digits+\")(\"+Exp+\")?)|\"+

      // Hexadecimal strings
      \"((\" +
       // 0[xX] HexDigits ._opt BinaryExponent FloatTypeSuffix_opt
       \"(0[xX]\" + HexDigits + \"(\\\\.)?)|\" +

       // 0[xX] HexDigits_opt . HexDigits BinaryExponent FloatTypeSuffix_opt
       \"(0[xX]\" + HexDigits + \"?(\\\\.)\" + HexDigits + \")\" +

       \")[pP][+-]?\" + Digits + \"))\" +
      \"[fFdD]?))\" +
      \"[\\\\x00-\\\\x20]*\");// Optional trailing \"whitespace\"

 if (Pattern.matches(fpRegex, myString))
     Double.valueOf(myString); // Will not throw NumberFormatException
 else {
     // Perform suitable alternative action
 }
}</pre>

@param      s   the string to be parsed.
@return     a {@code Double} object holding the value
            represented by the {@code String} argument.
@throws     NumberFormatException  if the string does not contain a
            parsable number.
"
      end

      operation 7012226 "valueOf"
	class_operation public return_type class_ref 377218 // Double
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Double} instance representing the specified
{@code double} value.
If a new {@code Double} instance is not required, this method
should generally be used in preference to the constructor
{@link #Double(double)}, as this method is likely to yield
significantly better space and time performance by caching
frequently requested values.

@param  d a double value.
@return a {@code Double} instance representing {@code d}.
@since  1.5
"
      end

      operation 7012354 "parseDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code double} initialized to the value
represented by the specified {@code String}, as performed
by the {@code valueOf} method of class
{@code Double}.

@param  s   the string to be parsed.
@return the {@code double} value represented by the string
        argument.
@throws NullPointerException  if the string is null
@throws NumberFormatException if the string does not contain
        a parsable {@code double}.
@see    java.lang.Double#valueOf(String)
@since 1.2
"
      end

      operation 7012482 "isNaN"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "v" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the specified number is a
Not-a-Number (NaN) value, {@code false} otherwise.

@param   v   the value to be tested.
@return  {@code true} if the value of the argument is NaN;
         {@code false} otherwise.
"
      end

      operation 7012610 "isInfinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "v" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the specified number is infinitely
large in magnitude, {@code false} otherwise.

@param   v   the value to be tested.
@return  {@code true} if the value of the argument is positive
         infinity or negative infinity; {@code false} otherwise.
"
      end

      operation 7012738 "isFinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the argument is a finite floating-point
value; returns {@code false} otherwise (for NaN and infinity
arguments).

@param d the {@code double} value to be tested
@return {@code true} if the argument is a finite
floating-point value, {@code false} otherwise.
@since 1.8
"
      end

      attribute 1671682 "value"
	const_attribute private explicit_type "double"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the Double.

@serial

"
      end

      operation 7012866 "Double"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Double} object that
represents the primitive {@code double} argument.

@param   value   the value to be represented by the {@code Double}.
"
      end

      operation 7012994 "Double"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Double} object that
represents the floating-point value of type {@code double}
represented by the string. The string is converted to a
{@code double} value as if by the {@code valueOf} method.

@param  s  a string to be converted to a {@code Double}.
@throws    NumberFormatException  if the string does not contain a
           parsable number.
@see       java.lang.Double#valueOf(java.lang.String)
"
      end

      operation 7013122 "isNaN"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Double} value is
a Not-a-Number (NaN), {@code false} otherwise.

@return  {@code true} if the value represented by this object is
         NaN; {@code false} otherwise.
"
      end

      operation 7013250 "isInfinite"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Double} value is
infinitely large in magnitude, {@code false} otherwise.

@return  {@code true} if the value represented by this object is
         positive infinity or negative infinity;
         {@code false} otherwise.
"
      end

      operation 7013378 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code Double} object.
The primitive {@code double} value represented by this
object is converted to a string exactly as if by the method
{@code toString} of one argument.

@return  a {@code String} representation of this object.
@see java.lang.Double#toString(double)
"
      end

      operation 7013506 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Double} as a {@code byte}
after a narrowing primitive conversion.

@return  the {@code double} value represented by this object
         converted to type {@code byte}
@jls 5.1.3 Narrowing Primitive Conversions
@since JDK1.1
"
      end

      operation 7013634 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Double} as a {@code short}
after a narrowing primitive conversion.

@return  the {@code double} value represented by this object
         converted to type {@code short}
@jls 5.1.3 Narrowing Primitive Conversions
@since JDK1.1
"
      end

      operation 7013762 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Double} as an {@code int}
after a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions

@return  the {@code double} value represented by this object
         converted to type {@code int}
"
      end

      operation 7013890 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Double} as a {@code long}
after a narrowing primitive conversion.

@return  the {@code double} value represented by this object
         converted to type {@code long}
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7014018 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Double} as a {@code float}
after a narrowing primitive conversion.

@return  the {@code double} value represented by this object
         converted to type {@code float}
@jls 5.1.3 Narrowing Primitive Conversions
@since JDK1.0
"
      end

      operation 7014146 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code double} value of this {@code Double} object.

@return the {@code double} value represented by this object
"
      end

      operation 7014274 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Double} object. The
result is the exclusive OR of the two halves of the
{@code long} integer bit representation, exactly as
produced by the method {@link #doubleToLongBits(double)}, of
the primitive {@code double} value represented by this
{@code Double} object. That is, the hash code is the value
of the expression:

<blockquote>
 {@code (int)(v^(v>>>32))}
</blockquote>

where {@code v} is defined by:

<blockquote>
 {@code long v = Double.doubleToLongBits(this.doubleValue());}
</blockquote>

@return  a {@code hash code} value for this object.
"
      end

      operation 7014402 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code double} value; compatible with
{@code Double.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code double} value.
@since 1.8
"
      end

      operation 7014530 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.  The result
is {@code true} if and only if the argument is not
{@code null} and is a {@code Double} object that
represents a {@code double} that has the same value as the
{@code double} represented by this object. For this
purpose, two {@code double} values are considered to be
the same if and only if the method {@link
#doubleToLongBits(double)} returns the identical
{@code long} value when applied to each.

<p>Note that in most cases, for two instances of class
{@code Double}, {@code d1} and {@code d2}, the
value of {@code d1.equals(d2)} is {@code true} if and
only if

<blockquote>
 {@code d1.doubleValue() == d2.doubleValue()}
</blockquote>

<p>also has the value {@code true}. However, there are two
exceptions:
<ul>
<li>If {@code d1} and {@code d2} both represent
    {@code Double.NaN}, then the {@code equals} method
    returns {@code true}, even though
    {@code Double.NaN==Double.NaN} has the value
    {@code false}.
<li>If {@code d1} represents {@code +0.0} while
    {@code d2} represents {@code -0.0}, or vice versa,
    the {@code equal} test has the value {@code false},
    even though {@code +0.0==-0.0} has the value {@code true}.
</ul>
This definition allows hash tables to operate properly.
@param   obj   the object to compare with.
@return  {@code true} if the objects are the same;
         {@code false} otherwise.
@see java.lang.Double#doubleToLongBits(double)
"
      end

      operation 7014658 "doubleToLongBits"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a representation of the specified floating-point value
according to the IEEE 754 floating-point \"double
format\" bit layout.

<p>Bit 63 (the bit that is selected by the mask
{@code 0x8000000000000000L}) represents the sign of the
floating-point number. Bits
62-52 (the bits that are selected by the mask
{@code 0x7ff0000000000000L}) represent the exponent. Bits 51-0
(the bits that are selected by the mask
{@code 0x000fffffffffffffL}) represent the significand
(sometimes called the mantissa) of the floating-point number.

<p>If the argument is positive infinity, the result is
{@code 0x7ff0000000000000L}.

<p>If the argument is negative infinity, the result is
{@code 0xfff0000000000000L}.

<p>If the argument is NaN, the result is
{@code 0x7ff8000000000000L}.

<p>In all cases, the result is a {@code long} integer that, when
given to the {@link #longBitsToDouble(long)} method, will produce a
floating-point value the same as the argument to
{@code doubleToLongBits} (except all NaN values are
collapsed to a single \"canonical\" NaN value).

@param   value   a {@code double} precision floating-point number.
@return the bits that represent the floating-point number.
"
      end

      operation 7014786 "doubleToRawLongBits"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "value" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns a representation of the specified floating-point value
according to the IEEE 754 floating-point \"double
format\" bit layout, preserving Not-a-Number (NaN) values.

<p>Bit 63 (the bit that is selected by the mask
{@code 0x8000000000000000L}) represents the sign of the
floating-point number. Bits
62-52 (the bits that are selected by the mask
{@code 0x7ff0000000000000L}) represent the exponent. Bits 51-0
(the bits that are selected by the mask
{@code 0x000fffffffffffffL}) represent the significand
(sometimes called the mantissa) of the floating-point number.

<p>If the argument is positive infinity, the result is
{@code 0x7ff0000000000000L}.

<p>If the argument is negative infinity, the result is
{@code 0xfff0000000000000L}.

<p>If the argument is NaN, the result is the {@code long}
integer representing the actual NaN value.  Unlike the
{@code doubleToLongBits} method,
{@code doubleToRawLongBits} does not collapse all the bit
patterns encoding a NaN to a single \"canonical\" NaN
value.

<p>In all cases, the result is a {@code long} integer that,
when given to the {@link #longBitsToDouble(long)} method, will
produce a floating-point value the same as the argument to
{@code doubleToRawLongBits}.

@param   value   a {@code double} precision floating-point number.
@return the bits that represent the floating-point number.
@since 1.3
"
      end

      operation 7014914 "longBitsToDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "bits" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the {@code double} value corresponding to a given
bit representation.
The argument is considered to be a representation of a
floating-point value according to the IEEE 754 floating-point
\"double format\" bit layout.

<p>If the argument is {@code 0x7ff0000000000000L}, the result
is positive infinity.

<p>If the argument is {@code 0xfff0000000000000L}, the result
is negative infinity.

<p>If the argument is any value in the range
{@code 0x7ff0000000000001L} through
{@code 0x7fffffffffffffffL} or in the range
{@code 0xfff0000000000001L} through
{@code 0xffffffffffffffffL}, the result is a NaN.  No IEEE
754 floating-point operation provided by Java can distinguish
between two NaN values of the same type with different bit
patterns.  Distinct values of NaN are only distinguishable by
use of the {@code Double.doubleToRawLongBits} method.

<p>In all other cases, let <i>s</i>, <i>e</i>, and <i>m</i> be three
values that can be computed from the argument:

<blockquote><pre>{@code
int s = ((bits >> 63) == 0) ? 1 : -1;
int e = (int)((bits >> 52) & 0x7ffL);
long m = (e == 0) ?
                (bits & 0xfffffffffffffL) << 1 :
                (bits & 0xfffffffffffffL) | 0x10000000000000L;
}</pre></blockquote>

Then the floating-point result equals the value of the mathematical
expression <i>s</i>&middot;<i>m</i>&middot;2<sup><i>e</i>-1075</sup>.

<p>Note that this method may not be able to return a
{@code double} NaN with exactly same bit pattern as the
{@code long} argument.  IEEE 754 distinguishes between two
kinds of NaNs, quiet NaNs and <i>signaling NaNs</i>.  The
differences between the two kinds of NaN are generally not
visible in Java.  Arithmetic operations on signaling NaNs turn
them into quiet NaNs with a different, but often similar, bit
pattern.  However, on some processors merely copying a
signaling NaN also performs that conversion.  In particular,
copying a signaling NaN to return it to the calling method
may perform this conversion.  So {@code longBitsToDouble}
may not be able to return a {@code double} with a
signaling NaN bit pattern.  Consequently, for some
{@code long} values,
{@code doubleToRawLongBits(longBitsToDouble(start))} may
<i>not</i> equal {@code start}.  Moreover, which
particular bit patterns represent signaling NaNs is platform
dependent; although all NaN bit patterns, quiet or signaling,
must be in the NaN range identified above.

@param   bits   any {@code long} integer.
@return  the {@code double} floating-point value with the same
         bit pattern.
"
      end

      operation 7015042 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherDouble" type class_ref 377218 // Double
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Double} objects numerically.  There
are two ways in which comparisons performed by this method
differ from those performed by the Java language numerical
comparison operators ({@code <, <=, ==, >=, >})
when applied to primitive {@code double} values:
<ul><li>
         {@code Double.NaN} is considered by this method
         to be equal to itself and greater than all other
         {@code double} values (including
         {@code Double.POSITIVE_INFINITY}).
<li>
         {@code 0.0d} is considered by this method to be greater
         than {@code -0.0d}.
</ul>
This ensures that the <i>natural ordering</i> of
{@code Double} objects imposed by this method is <i>consistent
with equals</i>.

@param   anotherDouble   the {@code Double} to be compared.
@return  the value {@code 0} if {@code anotherDouble} is
         numerically equal to this {@code Double}; a value
         less than {@code 0} if this {@code Double}
         is numerically less than {@code anotherDouble};
         and a value greater than {@code 0} if this
         {@code Double} is numerically greater than
         {@code anotherDouble}.

@since   1.2
"
      end

      operation 7015170 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "d1" explicit_type "double"
	  param in name "d2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two specified {@code double} values. The sign
of the integer value returned is the same as that of the
integer that would be returned by the call:
<pre>
   new Double(d1).compareTo(new Double(d2))
</pre>

@param   d1        the first {@code double} to compare
@param   d2        the second {@code double} to compare
@return  the value {@code 0} if {@code d1} is
         numerically equal to {@code d2}; a value less than
         {@code 0} if {@code d1} is numerically less than
         {@code d2}; and a value greater than {@code 0}
         if {@code d1} is numerically greater than
         {@code d2}.
@since 1.4
"
      end

      operation 7015298 "sum"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds two {@code double} values together as per the + operator.

@param a the first operand
@param b the second operand
@return the sum of {@code a} and {@code b}
@jls 4.2.4 Floating-Point Operations
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7015426 "max"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code double} values
as if by calling {@link Math#max(double, double) Math.max}.

@param a the first operand
@param b the second operand
@return the greater of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7015554 "min"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code double} values
as if by calling {@link Math#min(double, double) Math.min}.

@param a the first operand
@param b the second operand
@return the smaller of {@code a} and {@code b}.
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      attribute 1671810 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9172774392245257468L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 398210 "Number"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The abstract class {@code Number} is the superclass of platform
classes representing numeric values that are convertible to the
primitive types {@code byte}, {@code double}, {@code float}, {@code
int}, {@code long}, and {@code short}.

The specific semantics of the conversion from the numeric value of
a particular {@code Number} implementation to a given primitive
type is defined by the {@code Number} implementation in question.

For platform classes, the conversion is often analogous to a
narrowing primitive conversion or a widening primitive conversion
as defining in <cite>The Java&trade; Language Specification</cite>
for converting between primitive types.  Therefore, conversions may
lose information about the overall magnitude of a numeric value, may
lose precision, and may even return a result of a different sign
than the input.

See the documentation of a given {@code Number} implementation for
conversion details.

@author      Lee Boynton
@author      Arthur van Hoff
@jls 5.1.2 Widening Primitive Conversions
@jls 5.1.3 Narrowing Primitive Conversions
@since   JDK1.0
"
      classrelation 3147266 // <realization>
	relation 3147266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3147266 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      operation 6959746 "intValue"
	abstract public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as an {@code int},
which may involve rounding or truncation.

@return  the numeric value represented by this object after conversion
         to type {@code int}.
"
      end

      operation 6959874 "longValue"
	abstract public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as a {@code long},
which may involve rounding or truncation.

@return  the numeric value represented by this object after conversion
         to type {@code long}.
"
      end

      operation 6960002 "floatValue"
	abstract public explicit_return_type "float"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as a {@code float},
which may involve rounding.

@return  the numeric value represented by this object after conversion
         to type {@code float}.
"
      end

      operation 6960130 "doubleValue"
	abstract public explicit_return_type "double"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as a {@code double},
which may involve rounding.

@return  the numeric value represented by this object after conversion
         to type {@code double}.
"
      end

      operation 6960258 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as a {@code byte},
which may involve rounding or truncation.

<p>This implementation returns the result of {@link #intValue} cast
to a {@code byte}.

@return  the numeric value represented by this object after conversion
         to type {@code byte}.
@since   JDK1.1
"
      end

      operation 6960386 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the specified number as a {@code short},
which may involve rounding or truncation.

<p>This implementation returns the result of {@link #intValue} cast
to a {@code short}.

@return  the numeric value represented by this object after conversion
         to type {@code short}.
@since   JDK1.1
"
      end

      attribute 1662338 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8742448824652078965L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 429442 "CharSequence"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <tt>CharSequence</tt> is a readable sequence of <code>char</code> values. This
interface provides uniform, read-only access to many different kinds of
<code>char</code> sequences.
A <code>char</code> value represents a character in the <i>Basic
Multilingual Plane (BMP)</i> or a surrogate. Refer to <a
href=\"Character.html#unicode\">Unicode Character Representation</a> for details.

<p> This interface does not refine the general contracts of the {@link
java.lang.Object#equals(java.lang.Object) equals} and {@link
java.lang.Object#hashCode() hashCode} methods.  The result of comparing two
objects that implement <tt>CharSequence</tt> is therefore, in general,
undefined.  Each object may be implemented by a different class, and there
is no guarantee that each class will be capable of testing its instances
for equality with those of the other.  It is therefore inappropriate to use
arbitrary <tt>CharSequence</tt> instances as elements in a set or as keys in
a map. </p>

@author Mike McCloskey
@since 1.4
@spec JSR-51
"
      operation 2542082 "length"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of this character sequence.  The length is the number
of 16-bit <code>char</code>s in the sequence.

@return  the number of <code>char</code>s in this sequence
"
      end

      operation 2542210 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>char</code> value at the specified index.  An index ranges from zero
to <tt>length() - 1</tt>.  The first <code>char</code> value of the sequence is at
index zero, the next at index one, and so on, as for array
indexing.

<p>If the <code>char</code> value specified by the index is a
<a href=\"{@docRoot}/java/lang/Character.html#unicode\">surrogate</a>, the surrogate
value is returned.

@param   index   the index of the <code>char</code> value to be returned

@return  the specified <code>char</code> value

@throws  IndexOutOfBoundsException
         if the <tt>index</tt> argument is negative or not less than
         <tt>length()</tt>
"
      end

      operation 2542338 "subSequence"
	public return_type class_ref 429442 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>CharSequence</code> that is a subsequence of this sequence.
The subsequence starts with the <code>char</code> value at the specified index and
ends with the <code>char</code> value at index <tt>end - 1</tt>.  The length
(in <code>char</code>s) of the
returned sequence is <tt>end - start</tt>, so if <tt>start == end</tt>
then an empty sequence is returned.

@param   start   the start index, inclusive
@param   end     the end index, exclusive

@return  the specified subsequence

@throws  IndexOutOfBoundsException
         if <tt>start</tt> or <tt>end</tt> are negative,
         if <tt>end</tt> is greater than <tt>length()</tt>,
         or if <tt>start</tt> is greater than <tt>end</tt>
"
      end

      operation 2542466 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing the characters in this sequence in the same
order as this sequence.  The length of the string will be the length of
this sequence.

@return  a string consisting of exactly this sequence of characters
"
      end

      operation 2542594 "chars"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream of {@code int} zero-extending the {@code char} values
from this sequence.  Any char which maps to a <a
href=\"{@docRoot}/java/lang/Character.html#unicode\">surrogate code
point</a> is passed through uninterpreted.

<p>If the sequence is mutated while the stream is being read, the
result is undefined.

@return an IntStream of char values from this sequence
@since 1.8
"
      end

      operation 2542722 "codePoints"
	public return_type class_ref 429570 // IntStream
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream of code point values from this sequence.  Any surrogate
pairs encountered in the sequence are combined as if by {@linkplain
Character#toCodePoint Character.toCodePoint} and the result is passed
to the stream. Any other code units, including ordinary BMP characters,
unpaired surrogates, and undefined code units, are zero-extended to
{@code int} values which are then passed to the stream.

<p>If the sequence is mutated while the stream is being read, the result
is undefined.

@return an IntStream of Unicode code points from this sequence
@since 1.8
"
      end
    end

    class 515842 "Byte"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
The {@code Byte} class wraps a value of primitive type {@code byte}
in an object.  An object of type {@code Byte} contains a single
field whose type is {@code byte}.

<p>In addition, this class provides several methods for converting
a {@code byte} to a {@code String} and a {@code String} to a {@code
byte}, as well as other constants and methods useful when dealing
with a {@code byte}.

@author  Nakul Saraiya
@author  Joseph D. Darcy
@see     java.lang.Number
@since   JDK1.1
"
      classrelation 3147394 // <generalisation>
	relation 3147394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3147394 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3147522 // <realization>
	relation 3147522 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3147522 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1662466 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " -128"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the minimum value a {@code byte} can
have, -2<sup>7</sup>.

"
      end

      attribute 1662594 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 127"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the maximum value a {@code byte} can
have, 2<sup>7</sup>-1.

"
      end

      classrelation 3147650 // TYPE (<unidirectional association>)
	relation 3147650 --->
	  a role_name "TYPE" init_value " (Class<Byte>) Class.getPrimitiveClass(\"byte\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code byte}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Byte> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3147650 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 6960514 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code String} object representing the
specified {@code byte}. The radix is assumed to be 10.

@param b the {@code byte} to be converted
@return the string representation of the specified {@code byte}
@see java.lang.Integer#toString(int)
"
      end

      class 929538 "ByteCache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6960642 "ByteCache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3147778 // cache (<unidirectional association>)
	  relation 3147778 --->
	    a role_name "cache" multiplicity "[]" init_value " new Byte[-(-128) + 127 + 1]" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3147778 // cache (<unidirectional association>)
	    b parent class_ref 515842 // Byte
	end

	extra_member 156418 "initialization"
	  
	  cpp "" ""
	  java "  static {
            for(int i = 0; i < cache.length; i++)
                cache[i] = new Byte((byte)(i - 128));
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      operation 6960770 "valueOf"
	class_operation public return_type class_ref 515842 // Byte
	nparams 1
	  param in name "b" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Byte} instance representing the specified
{@code byte} value.
If a new {@code Byte} instance is not required, this method
should generally be used in preference to the constructor
{@link #Byte(byte)}, as this method is likely to yield
significantly better space and time performance since
all byte values are cached.

@param  b a byte value.
@return a {@code Byte} instance representing {@code b}.
@since  1.5
"
      end

      operation 6960898 "parseByte"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed {@code byte} in the
radix specified by the second argument. The characters in the
string must all be digits, of the specified radix (as
determined by whether {@link java.lang.Character#digit(char,
int)} returns a nonnegative value) except that the first
character may be an ASCII minus sign {@code '-'}
({@code '\\u005Cu002D'}) to indicate a negative value or an
ASCII plus sign {@code '+'} ({@code '\\u005Cu002B'}) to
indicate a positive value.  The resulting {@code byte} value is
returned.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>
<li> The first argument is {@code null} or is a string of
length zero.

<li> The radix is either smaller than {@link
java.lang.Character#MIN_RADIX} or larger than {@link
java.lang.Character#MAX_RADIX}.

<li> Any character of the string is not a digit of the
specified radix, except that the first character may be a minus
sign {@code '-'} ({@code '\\u005Cu002D'}) or plus sign
{@code '+'} ({@code '\\u005Cu002B'}) provided that the
string is longer than length 1.

<li> The value represented by the string is not a value of type
{@code byte}.
</ul>

@param s         the {@code String} containing the
                 {@code byte}
                 representation to be parsed
@param radix     the radix to be used while parsing {@code s}
@return          the {@code byte} value represented by the string
                  argument in the specified radix
@throws          NumberFormatException If the string does
                 not contain a parsable {@code byte}.
"
      end

      operation 6961026 "parseByte"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed decimal {@code
byte}. The characters in the string must all be decimal digits,
except that the first character may be an ASCII minus sign
{@code '-'} ({@code '\\u005Cu002D'}) to indicate a negative
value or an ASCII plus sign {@code '+'}
({@code '\\u005Cu002B'}) to indicate a positive value. The
resulting {@code byte} value is returned, exactly as if the
argument and the radix 10 were given as arguments to the {@link
#parseByte(java.lang.String, int)} method.

@param s         a {@code String} containing the
                 {@code byte} representation to be parsed
@return          the {@code byte} value represented by the
                 argument in decimal
@throws          NumberFormatException if the string does not
                 contain a parsable {@code byte}.
"
      end

      operation 6961154 "valueOf"
	class_operation public return_type class_ref 515842 // Byte
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Byte} object holding the value
extracted from the specified {@code String} when parsed
with the radix given by the second argument. The first argument
is interpreted as representing a signed {@code byte} in
the radix specified by the second argument, exactly as if the
argument were given to the {@link #parseByte(java.lang.String,
int)} method. The result is a {@code Byte} object that
represents the {@code byte} value specified by the string.

<p> In other words, this method returns a {@code Byte} object
equal to the value of:

<blockquote>
{@code new Byte(Byte.parseByte(s, radix))}
</blockquote>

@param s         the string to be parsed
@param radix     the radix to be used in interpreting {@code s}
@return          a {@code Byte} object holding the value
                 represented by the string argument in the
                 specified radix.
@throws          NumberFormatException If the {@code String} does
                 not contain a parsable {@code byte}.
"
      end

      operation 6961282 "valueOf"
	class_operation public return_type class_ref 515842 // Byte
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Byte} object holding the value
given by the specified {@code String}. The argument is
interpreted as representing a signed decimal {@code byte},
exactly as if the argument were given to the {@link
#parseByte(java.lang.String)} method. The result is a
{@code Byte} object that represents the {@code byte}
value specified by the string.

<p> In other words, this method returns a {@code Byte} object
equal to the value of:

<blockquote>
{@code new Byte(Byte.parseByte(s))}
</blockquote>

@param s         the string to be parsed
@return          a {@code Byte} object holding the value
                 represented by the string argument
@throws          NumberFormatException If the {@code String} does
                 not contain a parsable {@code byte}.
"
      end

      operation 6961410 "decode"
	class_operation public return_type class_ref 515842 // Byte
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a {@code String} into a {@code Byte}.
Accepts decimal, hexadecimal, and octal numbers given by
the following grammar:

<blockquote>
<dl>
<dt><i>DecodableString:</i>
<dd><i>Sign<sub>opt</sub> DecimalNumeral</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0x} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0X} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code #} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0} <i>OctalDigits</i>

<dt><i>Sign:</i>
<dd>{@code -}
<dd>{@code +}
</dl>
</blockquote>

<i>DecimalNumeral</i>, <i>HexDigits</i>, and <i>OctalDigits</i>
are as defined in section 3.10.1 of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.

<p>The sequence of characters following an optional
sign and/or radix specifier (\"{@code 0x}\", \"{@code 0X}\",
\"{@code #}\", or leading zero) is parsed as by the {@code
Byte.parseByte} method with the indicated radix (10, 16, or 8).
This sequence of characters must represent a positive value or
a {@link NumberFormatException} will be thrown.  The result is
negated if first character of the specified {@code String} is
the minus sign.  No whitespace characters are permitted in the
{@code String}.

@param     nm the {@code String} to decode.
@return   a {@code Byte} object holding the {@code byte}
         value represented by {@code nm}
@throws  NumberFormatException  if the {@code String} does not
           contain a parsable {@code byte}.
@see java.lang.Byte#parseByte(java.lang.String, int)
"
      end

      attribute 1662722 "value"
	const_attribute private explicit_type "byte"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the {@code Byte}.

@serial

"
      end

      operation 6961538 "Byte"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Byte} object that
represents the specified {@code byte} value.

@param value     the value to be represented by the
                 {@code Byte}.
"
      end

      operation 6961666 "Byte"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Byte} object that
represents the {@code byte} value indicated by the
{@code String} parameter. The string is converted to a
{@code byte} value in exactly the manner used by the
{@code parseByte} method for radix 10.

@param s         the {@code String} to be converted to a
                 {@code Byte}
@throws           NumberFormatException If the {@code String}
                 does not contain a parsable {@code byte}.
@see        java.lang.Byte#parseByte(java.lang.String, int)
"
      end

      operation 6961794 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as a
{@code byte}.
"
      end

      operation 6961922 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as a {@code short} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 6962050 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as an {@code int} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 6962178 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as a {@code long} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 6962306 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as a {@code float} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 6962434 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Byte} as a {@code double}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 6962562 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this
{@code Byte}'s value.  The value is converted to signed
decimal representation and returned as a string, exactly as if
the {@code byte} value were given as an argument to the
{@link java.lang.Byte#toString(byte)} method.

@return  a string representation of the value of this object in
         base&nbsp;10.
"
      end

      operation 6962690 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Byte}; equal to the result
of invoking {@code intValue()}.

@return a hash code value for this {@code Byte}
"
      end

      operation 6962818 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code byte} value; compatible with
{@code Byte.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code byte} value.
@since 1.8
"
      end

      operation 6962946 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object.  The result is
{@code true} if and only if the argument is not
{@code null} and is a {@code Byte} object that
contains the same {@code byte} value as this object.

@param obj       the object to compare with
@return          {@code true} if the objects are the same;
                 {@code false} otherwise.
"
      end

      operation 6963074 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherByte" type class_ref 515842 // Byte
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Byte} objects numerically.

@param   anotherByte   the {@code Byte} to be compared.
@return  the value {@code 0} if this {@code Byte} is
         equal to the argument {@code Byte}; a value less than
         {@code 0} if this {@code Byte} is numerically less
         than the argument {@code Byte}; and a value greater than
          {@code 0} if this {@code Byte} is numerically
          greater than the argument {@code Byte} (signed
          comparison).
@since   1.2
"
      end

      operation 6963202 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "byte"
	  param in name "y" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code byte} values numerically.
The value returned is identical to what would be returned by:
<pre>
   Byte.valueOf(x).compareTo(Byte.valueOf(y))
</pre>

@param  x the first {@code byte} to compare
@param  y the second {@code byte} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code x < y}; and
        a value greater than {@code 0} if {@code x > y}
@since 1.7
"
      end

      operation 6963330 "toUnsignedInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the argument to an {@code int} by an unsigned
conversion.  In an unsigned conversion to an {@code int}, the
high-order 24 bits of the {@code int} are zero and the
low-order 8 bits are equal to the bits of the {@code byte} argument.

Consequently, zero and positive {@code byte} values are mapped
to a numerically equal {@code int} value and negative {@code
byte} values are mapped to an {@code int} value equal to the
input plus 2<sup>8</sup>.

@param  x the value to convert to an unsigned {@code int}
@return the argument converted to {@code int} by an unsigned
        conversion
@since 1.8
"
      end

      operation 6963458 "toUnsignedLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "x" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the argument to a {@code long} by an unsigned
conversion.  In an unsigned conversion to a {@code long}, the
high-order 56 bits of the {@code long} are zero and the
low-order 8 bits are equal to the bits of the {@code byte} argument.

Consequently, zero and positive {@code byte} values are mapped
to a numerically equal {@code long} value and negative {@code
byte} values are mapped to a {@code long} value equal to the
input plus 2<sup>8</sup>.

@param  x the value to convert to an unsigned {@code long}
@return the argument converted to {@code long} by an unsigned
        conversion
@since 1.8
"
      end

      attribute 1662850 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bits used to represent a {@code byte} value in two's
complement binary form.

@since 1.5

"
      end

      attribute 1662978 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code byte} value in two's
complement binary form.

@since 1.8

"
      end

      attribute 1663106 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7183698231559129828L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.1. for interoperability 
"
      end
    end

    class 516098 "NumberFormatException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that the application has attempted to convert
a string to one of the numeric types, but that the string does not
have the appropriate format.

@author  unascribed
@see     java.lang.Integer#parseInt(String)
@since   JDK1.0
"
      classrelation 3161602 // <generalisation>
	relation 3161602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161602 // <generalisation>
	  b parent class_ref 187778 // IllegalArgumentException
      end

      attribute 1679746 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2848938806368998894L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7055234 "NumberFormatException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NumberFormatException</code> with no detail message.
"
      end

      operation 7055362 "NumberFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NumberFormatException</code> with the
specified detail message.

@param   s   the detail message.
"
      end

      operation 7055490 "forInputString"
	class_operation package return_type class_ref 516098 // NumberFormatException
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method for making a <code>NumberFormatException</code>
given the specified input which caused the error.

@param   s   the input causing the error
"
      end
    end

    class 521346 "NullPointerException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application attempts to use {@code null} in a
case where an object is required. These include:
<ul>
<li>Calling the instance method of a {@code null} object.
<li>Accessing or modifying the field of a {@code null} object.
<li>Taking the length of {@code null} as if it were an array.
<li>Accessing or modifying the slots of {@code null} as if it
    were an array.
<li>Throwing {@code null} as if it were a {@code Throwable}
    value.
</ul>
<p>
Applications should throw instances of this class to indicate
other illegal uses of the {@code null} object.

{@code NullPointerException} objects may be constructed by the
virtual machine as if {@linkplain Throwable#Throwable(String,
Throwable, boolean, boolean) suppression were disabled and/or the
stack trace was not writable}.

@author  unascribed
@since   JDK1.0
"
      classrelation 3161474 // <generalisation>
	relation 3161474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161474 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1679618 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5162710183389028792L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7054978 "NullPointerException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code NullPointerException} with no detail message.
"
      end

      operation 7055106 "NullPointerException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code NullPointerException} with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 548354 "Readable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <tt>Readable</tt> is a source of characters. Characters from
a <tt>Readable</tt> are made available to callers of the read
method via a {@link java.nio.CharBuffer CharBuffer}.

@since 1.5
"
      operation 3407362 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "cb" type class_ref 548482 // CharBuffer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to read characters into the specified character buffer.
The buffer is used as a repository of characters as-is: the only
changes made are the results of a put operation. No flipping or
rewinding of the buffer is performed.

@param cb the buffer to read characters into
@return The number of {@code char} values added to the buffer,
                or -1 if this source of characters is at its end
@throws IOException if an I/O error occurs
@throws NullPointerException if cb is null
@throws java.nio.ReadOnlyBufferException if cb is a read only buffer
"
      end
    end

    class 548866 "Appendable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object to which <tt>char</tt> sequences and values can be appended.  The
<tt>Appendable</tt> interface must be implemented by any class whose
instances are intended to receive formatted output from a {@link
java.util.Formatter}.

<p> The characters to be appended should be valid Unicode characters as
described in <a href=\"Character.html#unicode\">Unicode Character
Representation</a>.  Note that supplementary characters may be composed of
multiple 16-bit <tt>char</tt> values.

<p> Appendables are not necessarily safe for multithreaded access.  Thread
safety is the responsibility of classes that extend and implement this
interface.

<p> Since this interface may be implemented by existing classes
with different styles of error handling there is no guarantee that
errors will be propagated to the invoker.

@since 1.5
"
      operation 3410562 "append"
	public return_type class_ref 548866 // Appendable
	nparams 1
	  param inout name "csq" type class_ref 429442 // CharSequence
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified character sequence to this <tt>Appendable</tt>.

<p> Depending on which class implements the character sequence
<tt>csq</tt>, the entire sequence may not be appended.  For
instance, if <tt>csq</tt> is a {@link java.nio.CharBuffer} then
the subsequence to append is defined by the buffer's position and limit.

@param  csq
        The character sequence to append.  If <tt>csq</tt> is
        <tt>null</tt>, then the four characters <tt>\"null\"</tt> are
        appended to this Appendable.

@return  A reference to this <tt>Appendable</tt>

@throws  IOException
         If an I/O error occurs
"
      end

      operation 3410690 "append"
	public return_type class_ref 548866 // Appendable
	nparams 3
	  param inout name "csq" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a subsequence of the specified character sequence to this
<tt>Appendable</tt>.

<p> An invocation of this method of the form <tt>out.append(csq, start,
end)</tt> when <tt>csq</tt> is not <tt>null</tt>, behaves in
exactly the same way as the invocation

<pre>
    out.append(csq.subSequence(start, end)) </pre>

@param  csq
        The character sequence from which a subsequence will be
        appended.  If <tt>csq</tt> is <tt>null</tt>, then characters
        will be appended as if <tt>csq</tt> contained the four
        characters <tt>\"null\"</tt>.

@param  start
        The index of the first character in the subsequence

@param  end
        The index of the character following the last character in the
        subsequence

@return  A reference to this <tt>Appendable</tt>

@throws  IndexOutOfBoundsException
         If <tt>start</tt> or <tt>end</tt> are negative, <tt>start</tt>
         is greater than <tt>end</tt>, or <tt>end</tt> is greater than
         <tt>csq.length()</tt>

@throws  IOException
         If an I/O error occurs
"
      end

      operation 3410818 "append"
	public return_type class_ref 548866 // Appendable
	nparams 1
	  param in name "c" explicit_type "char"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified character to this <tt>Appendable</tt>.

@param  c
        The character to append

@return  A reference to this <tt>Appendable</tt>

@throws  IOException
         If an I/O error occurs
"
      end
    end

    class 552706 "StringIndexOutOfBoundsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown by {@code String} methods to indicate that an index
is either negative or greater than the size of the string.  For
some methods such as the charAt method, this exception also is
thrown when the index is equal to the size of the string.

@author  unascribed
@see     java.lang.String#charAt(int)
@since   JDK1.0
"
      classrelation 3172610 // <generalisation>
	relation 3172610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3172610 // <generalisation>
	  b parent class_ref 881154 // IndexOutOfBoundsException
      end

      attribute 1685506 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6762910422159637258L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7128578 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code StringIndexOutOfBoundsException} with no
detail message.

@since   JDK1.0.
"
      end

      operation 7128706 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code StringIndexOutOfBoundsException} with
the specified detail message.

@param   s   the detail message.
"
      end

      operation 7128834 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringIndexOutOfBoundsException}
class with an argument indicating the illegal index.

@param   index   the illegal index.
"
      end
    end

    class 577026 "Character"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Character} class wraps a value of the primitive
type {@code char} in an object. An object of type
{@code Character} contains a single field whose type is
{@code char}.
<p>
In addition, this class provides several methods for determining
a character's category (lowercase letter, digit, etc.) and for converting
characters from uppercase to lowercase and vice versa.
<p>
Character information is based on the Unicode Standard, version 6.2.0.
<p>
The methods and data of class {@code Character} are defined by
the information in the <i>UnicodeData</i> file that is part of the
Unicode Character Database maintained by the Unicode
Consortium. This file specifies various properties including name
and general category for every defined Unicode code point or
character range.
<p>
The file and its description are available from the Unicode Consortium at:
<ul>
<li><a href=\"http://www.unicode.org\">http://www.unicode.org</a>
</ul>

<h3><a name=\"unicode\">Unicode Character Representations</a></h3>

<p>The {@code char} data type (and therefore the value that a
{@code Character} object encapsulates) are based on the
original Unicode specification, which defined characters as
fixed-width 16-bit entities. The Unicode Standard has since been
changed to allow for characters whose representation requires more
than 16 bits.  The range of legal <em>code point</em>s is now
U+0000 to U+10FFFF, known as <em>Unicode scalar value</em>.
(Refer to the <a
href=\"http://www.unicode.org/reports/tr27/#notation\"><i>
definition</i></a> of the U+<i>n</i> notation in the Unicode
Standard.)

<p><a name=\"BMP\">The set of characters from U+0000 to U+FFFF</a> is
sometimes referred to as the <em>Basic Multilingual Plane (BMP)</em>.
<a name=\"supplementary\">Characters</a> whose code points are greater
than U+FFFF are called <em>supplementary character</em>s.  The Java
platform uses the UTF-16 representation in {@code char} arrays and
in the {@code String} and {@code StringBuffer} classes. In
this representation, supplementary characters are represented as a pair
of {@code char} values, the first from the <em>high-surrogates</em>
range, (&#92;uD800-&#92;uDBFF), the second from the
<em>low-surrogates</em> range (&#92;uDC00-&#92;uDFFF).

<p>A {@code char} value, therefore, represents Basic
Multilingual Plane (BMP) code points, including the surrogate
code points, or code units of the UTF-16 encoding. An
{@code int} value represents all Unicode code points,
including supplementary code points. The lower (least significant)
21 bits of {@code int} are used to represent Unicode code
points and the upper (most significant) 11 bits must be zero.
Unless otherwise specified, the behavior with respect to
supplementary characters and surrogate {@code char} values is
as follows:

<ul>
<li>The methods that only accept a {@code char} value cannot support
supplementary characters. They treat {@code char} values from the
surrogate ranges as undefined characters. For example,
{@code Character.isLetter('\\u005CuD840')} returns {@code false}, even though
this specific value if followed by any low-surrogate value in a string
would represent a letter.

<li>The methods that accept an {@code int} value support all
Unicode characters, including supplementary characters. For
example, {@code Character.isLetter(0x2F81A)} returns
{@code true} because the code point value represents a letter
(a CJK ideograph).
</ul>

<p>In the Java SE API documentation, <em>Unicode code point</em> is
used for character values in the range between U+0000 and U+10FFFF,
and <em>Unicode code unit</em> is used for 16-bit
{@code char} values that are code units of the <em>UTF-16</em>
encoding. For more information on Unicode terminology, refer to the
<a href=\"http://www.unicode.org/glossary/\">Unicode Glossary</a>.

@author  Lee Boynton
@author  Guy Steele
@author  Akira Tanaka
@author  Martin Buchholz
@author  Ulf Zibis
@since   1.0
"
      class 895106 "Subset"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3035522 // name (<unidirectional association>)
	  relation 3035522 --->
	    a role_name "name" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3035522 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 6582530 "Subset"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new {@code Subset} instance.

@param  name  The name of this subset
@exception NullPointerException if name is {@code null}
"
	end

	operation 6582658 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares two {@code Subset} objects for equality.
This method returns {@code true} if and only if
{@code this} and the argument refer to the same
object; since this method is {@code final}, this
guarantee holds for all subclasses.
"
	end

	operation 6582786 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the standard hash code as defined by the
{@link Object#hashCode} method.  This method
is {@code final} in order to ensure that the
{@code equals} and {@code hashCode} methods will
be consistent in all subclasses.
"
	end

	operation 6582914 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the name of this subset.
"
	end
      end

      classrelation 3035138 // <realization>
	relation 3035138 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3035138 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 3035266 // <realization>
	relation 3035266 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3035266 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1572610 "MIN_RADIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum radix available for conversion to and from strings.
The constant value of this field is the smallest value permitted
for the radix argument in radix-conversion methods such as the
{@code digit} method, the {@code forDigit} method, and the
{@code toString} method of class {@code Integer}.

@see     Character#digit(char, int)
@see     Character#forDigit(int, int)
@see     Integer#toString(int, int)
@see     Integer#valueOf(String)

"
      end

      attribute 1572738 "MAX_RADIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum radix available for conversion to and from strings.
The constant value of this field is the largest value permitted
for the radix argument in radix-conversion methods such as the
{@code digit} method, the {@code forDigit} method, and the
{@code toString} method of class {@code Integer}.

@see     Character#digit(char, int)
@see     Character#forDigit(int, int)
@see     Integer#toString(int, int)
@see     Integer#valueOf(String)

"
      end

      attribute 1572866 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\u0000'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The constant value of this field is the smallest value of type
{@code char}, {@code '\\u005Cu0000'}.

@since   1.0.2

"
      end

      attribute 1572994 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uFFFF'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The constant value of this field is the largest value of type
{@code char}, {@code '\\u005CuFFFF'}.

@since   1.0.2

"
      end

      classrelation 3035394 // TYPE (<unidirectional association>)
	relation 3035394 --->
	  a role_name "TYPE" init_value " (Class<Character>) Class.getPrimitiveClass(\"char\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code char}.

@since   1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Character> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3035394 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      attribute 1573122 "UNASSIGNED"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Normative general types


General character types


General category \"Cn\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573250 "UPPERCASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Lu\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573378 "LOWERCASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Ll\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573506 "TITLECASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Lt\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573634 "MODIFIER_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Lm\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573762 "OTHER_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Lo\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1573890 "NON_SPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Mn\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574018 "ENCLOSING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Me\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574146 "COMBINING_SPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Mc\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574274 "DECIMAL_DIGIT_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Nd\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574402 "LETTER_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Nl\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574530 "OTHER_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"No\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574658 "SPACE_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Zs\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574786 "LINE_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Zl\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1574914 "PARAGRAPH_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Zp\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575042 "CONTROL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Cc\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575170 "FORMAT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Cf\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575298 "PRIVATE_USE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Co\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575426 "SURROGATE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Cs\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575554 "DASH_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Pd\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575682 "START_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Ps\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575810 "END_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Pe\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1575938 "CONNECTOR_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Pc\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576066 "OTHER_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Po\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576194 "MATH_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Sm\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576322 "CURRENCY_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Sc\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576450 "MODIFIER_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Sk\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576578 "OTHER_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"So\" in the Unicode specification.
@since   1.1

"
      end

      attribute 1576706 "INITIAL_QUOTE_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Pi\" in the Unicode specification.
@since   1.4

"
      end

      attribute 1576834 "FINAL_QUOTE_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "General category \"Pf\" in the Unicode specification.
@since   1.4

"
      end

      attribute 1576962 "ERROR"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Error flag. Use int (code point) to avoid confusion with U+FFFF.

"
      end

      attribute 1577090 "DIRECTIONALITY_UNDEFINED"
	class_attribute const_attribute public explicit_type "byte"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Undefined bidirectional character type. Undefined {@code char}
values have undefined directionality in the Unicode specification.
@since 1.4

"
      end

      attribute 1577218 "DIRECTIONALITY_LEFT_TO_RIGHT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"L\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577346 "DIRECTIONALITY_RIGHT_TO_LEFT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"R\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577474 "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"AL\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577602 "DIRECTIONALITY_EUROPEAN_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"EN\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577730 "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"ES\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577858 "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"ET\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1577986 "DIRECTIONALITY_ARABIC_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"AN\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578114 "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"CS\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578242 "DIRECTIONALITY_NONSPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"NSM\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578370 "DIRECTIONALITY_BOUNDARY_NEUTRAL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"BN\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578498 "DIRECTIONALITY_PARAGRAPH_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Neutral bidirectional character type \"B\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578626 "DIRECTIONALITY_SEGMENT_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Neutral bidirectional character type \"S\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578754 "DIRECTIONALITY_WHITESPACE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Neutral bidirectional character type \"WS\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1578882 "DIRECTIONALITY_OTHER_NEUTRALS"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Neutral bidirectional character type \"ON\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579010 "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"LRE\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579138 "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"LRO\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579266 "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"RLE\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579394 "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Strong bidirectional character type \"RLO\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579522 "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Weak bidirectional character type \"PDF\" in the Unicode specification.
@since 1.4

"
      end

      attribute 1579650 "MIN_HIGH_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uD800'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of a
<a href=\"http://www.unicode.org/glossary/#high_surrogate_code_unit\">
Unicode high-surrogate code unit</a>
in the UTF-16 encoding, constant {@code '\\u005CuD800'}.
A high-surrogate is also known as a <i>leading-surrogate</i>.

@since 1.5

"
      end

      attribute 1579778 "MAX_HIGH_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDBFF'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of a
<a href=\"http://www.unicode.org/glossary/#high_surrogate_code_unit\">
Unicode high-surrogate code unit</a>
in the UTF-16 encoding, constant {@code '\\u005CuDBFF'}.
A high-surrogate is also known as a <i>leading-surrogate</i>.

@since 1.5

"
      end

      attribute 1579906 "MIN_LOW_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDC00'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of a
<a href=\"http://www.unicode.org/glossary/#low_surrogate_code_unit\">
Unicode low-surrogate code unit</a>
in the UTF-16 encoding, constant {@code '\\u005CuDC00'}.
A low-surrogate is also known as a <i>trailing-surrogate</i>.

@since 1.5

"
      end

      attribute 1580034 "MAX_LOW_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDFFF'"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of a
<a href=\"http://www.unicode.org/glossary/#low_surrogate_code_unit\">
Unicode low-surrogate code unit</a>
in the UTF-16 encoding, constant {@code '\\u005CuDFFF'}.
A low-surrogate is also known as a <i>trailing-surrogate</i>.

@since 1.5

"
      end

      attribute 1580162 "MIN_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " MIN_HIGH_SURROGATE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of a Unicode surrogate code unit in the
UTF-16 encoding, constant {@code '\\u005CuD800'}.

@since 1.5

"
      end

      attribute 1580290 "MAX_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " MAX_LOW_SURROGATE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of a Unicode surrogate code unit in the
UTF-16 encoding, constant {@code '\\u005CuDFFF'}.

@since 1.5

"
      end

      attribute 1580418 "MIN_SUPPLEMENTARY_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x010000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of a
<a href=\"http://www.unicode.org/glossary/#supplementary_code_point\">
Unicode supplementary code point</a>, constant {@code U+10000}.

@since 1.5

"
      end

      attribute 1580546 "MIN_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x000000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The minimum value of a
<a href=\"http://www.unicode.org/glossary/#code_point\">
Unicode code point</a>, constant {@code U+0000}.

@since 1.5

"
      end

      attribute 1580674 "MAX_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X10FFFF"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum value of a
<a href=\"http://www.unicode.org/glossary/#code_point\">
Unicode code point</a>, constant {@code U+10FFFF}.

@since 1.5

"
      end

      class 895362 "UnicodeBlock"
	visibility public 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3035650 // <generalisation>
	  relation 3035650 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3035650 // <generalisation>
	    b parent class_ref 895106 // Subset
	end

	classrelation 3035778 // map (<unidirectional association>)
	  relation 3035778 --->
	    a role_name "map" init_value " new HashMap<>(256)" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, UnicodeBlock> ${name}${value};
"
	      classrelation_ref 3035778 // map (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	operation 6583042 "UnicodeBlock"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "idName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a UnicodeBlock with the given identifier name.
This name must be the same as the block identifier.
"
	end

	operation 6583170 "UnicodeBlock"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "idName" type class_ref 128130 // String
	    param inout name "alias" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a UnicodeBlock with the given identifier name and
alias name.
"
	end

	operation 6583298 "UnicodeBlock"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "idName" type class_ref 128130 // String
	    param inout name "" explicit_type "String...aliases"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a UnicodeBlock with the given identifier name and
alias names.
"
	end

	classrelation 3035906 // BASIC_LATIN (<unidirectional association>)
	  relation 3035906 --->
	    a role_name "BASIC_LATIN" init_value "
            new UnicodeBlock(\"BASIC_LATIN\",
                             \"BASIC LATIN\",
                             \"BASICLATIN\")" class_relation const_relation public
	      comment "
Constant for the \"Basic Latin\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3035906 // BASIC_LATIN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036034 // LATIN_1_SUPPLEMENT (<unidirectional association>)
	  relation 3036034 --->
	    a role_name "LATIN_1_SUPPLEMENT" init_value "
            new UnicodeBlock(\"LATIN_1_SUPPLEMENT\",
                             \"LATIN-1 SUPPLEMENT\",
                             \"LATIN-1SUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Latin-1 Supplement\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036034 // LATIN_1_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036162 // LATIN_EXTENDED_A (<unidirectional association>)
	  relation 3036162 --->
	    a role_name "LATIN_EXTENDED_A" init_value "
            new UnicodeBlock(\"LATIN_EXTENDED_A\",
                             \"LATIN EXTENDED-A\",
                             \"LATINEXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Latin Extended-A\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036162 // LATIN_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036290 // LATIN_EXTENDED_B (<unidirectional association>)
	  relation 3036290 --->
	    a role_name "LATIN_EXTENDED_B" init_value "
            new UnicodeBlock(\"LATIN_EXTENDED_B\",
                             \"LATIN EXTENDED-B\",
                             \"LATINEXTENDED-B\")" class_relation const_relation public
	      comment "
Constant for the \"Latin Extended-B\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036290 // LATIN_EXTENDED_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036418 // IPA_EXTENSIONS (<unidirectional association>)
	  relation 3036418 --->
	    a role_name "IPA_EXTENSIONS" init_value "
            new UnicodeBlock(\"IPA_EXTENSIONS\",
                             \"IPA EXTENSIONS\",
                             \"IPAEXTENSIONS\")" class_relation const_relation public
	      comment "
Constant for the \"IPA Extensions\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036418 // IPA_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036546 // SPACING_MODIFIER_LETTERS (<unidirectional association>)
	  relation 3036546 --->
	    a role_name "SPACING_MODIFIER_LETTERS" init_value "
            new UnicodeBlock(\"SPACING_MODIFIER_LETTERS\",
                             \"SPACING MODIFIER LETTERS\",
                             \"SPACINGMODIFIERLETTERS\")" class_relation const_relation public
	      comment "
Constant for the \"Spacing Modifier Letters\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036546 // SPACING_MODIFIER_LETTERS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036674 // COMBINING_DIACRITICAL_MARKS (<unidirectional association>)
	  relation 3036674 --->
	    a role_name "COMBINING_DIACRITICAL_MARKS" init_value "
            new UnicodeBlock(\"COMBINING_DIACRITICAL_MARKS\",
                             \"COMBINING DIACRITICAL MARKS\",
                             \"COMBININGDIACRITICALMARKS\")" class_relation const_relation public
	      comment "
Constant for the \"Combining Diacritical Marks\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036674 // COMBINING_DIACRITICAL_MARKS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036802 // GREEK (<unidirectional association>)
	  relation 3036802 --->
	    a role_name "GREEK" init_value "
            new UnicodeBlock(\"GREEK\",
                             \"GREEK AND COPTIC\",
                             \"GREEKANDCOPTIC\")" class_relation const_relation public
	      comment "
Constant for the \"Greek and Coptic\" Unicode character block.
<p>
This block was previously known as the \"Greek\" block.

@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036802 // GREEK (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3036930 // CYRILLIC (<unidirectional association>)
	  relation 3036930 --->
	    a role_name "CYRILLIC" init_value "
            new UnicodeBlock(\"CYRILLIC\")" class_relation const_relation public
	      comment "
Constant for the \"Cyrillic\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3036930 // CYRILLIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037058 // ARMENIAN (<unidirectional association>)
	  relation 3037058 --->
	    a role_name "ARMENIAN" init_value "
            new UnicodeBlock(\"ARMENIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Armenian\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037058 // ARMENIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037186 // HEBREW (<unidirectional association>)
	  relation 3037186 --->
	    a role_name "HEBREW" init_value "
            new UnicodeBlock(\"HEBREW\")" class_relation const_relation public
	      comment "
Constant for the \"Hebrew\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037186 // HEBREW (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037314 // ARABIC (<unidirectional association>)
	  relation 3037314 --->
	    a role_name "ARABIC" init_value "
            new UnicodeBlock(\"ARABIC\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037314 // ARABIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037442 // DEVANAGARI (<unidirectional association>)
	  relation 3037442 --->
	    a role_name "DEVANAGARI" init_value "
            new UnicodeBlock(\"DEVANAGARI\")" class_relation const_relation public
	      comment "
Constant for the \"Devanagari\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037442 // DEVANAGARI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037570 // BENGALI (<unidirectional association>)
	  relation 3037570 --->
	    a role_name "BENGALI" init_value "
            new UnicodeBlock(\"BENGALI\")" class_relation const_relation public
	      comment "
Constant for the \"Bengali\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037570 // BENGALI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037698 // GURMUKHI (<unidirectional association>)
	  relation 3037698 --->
	    a role_name "GURMUKHI" init_value "
            new UnicodeBlock(\"GURMUKHI\")" class_relation const_relation public
	      comment "
Constant for the \"Gurmukhi\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037698 // GURMUKHI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037826 // GUJARATI (<unidirectional association>)
	  relation 3037826 --->
	    a role_name "GUJARATI" init_value "
            new UnicodeBlock(\"GUJARATI\")" class_relation const_relation public
	      comment "
Constant for the \"Gujarati\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037826 // GUJARATI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3037954 // ORIYA (<unidirectional association>)
	  relation 3037954 --->
	    a role_name "ORIYA" init_value "
            new UnicodeBlock(\"ORIYA\")" class_relation const_relation public
	      comment "
Constant for the \"Oriya\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3037954 // ORIYA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038082 // TAMIL (<unidirectional association>)
	  relation 3038082 --->
	    a role_name "TAMIL" init_value "
            new UnicodeBlock(\"TAMIL\")" class_relation const_relation public
	      comment "
Constant for the \"Tamil\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038082 // TAMIL (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038210 // TELUGU (<unidirectional association>)
	  relation 3038210 --->
	    a role_name "TELUGU" init_value "
            new UnicodeBlock(\"TELUGU\")" class_relation const_relation public
	      comment "
Constant for the \"Telugu\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038210 // TELUGU (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038338 // KANNADA (<unidirectional association>)
	  relation 3038338 --->
	    a role_name "KANNADA" init_value "
            new UnicodeBlock(\"KANNADA\")" class_relation const_relation public
	      comment "
Constant for the \"Kannada\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038338 // KANNADA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038466 // MALAYALAM (<unidirectional association>)
	  relation 3038466 --->
	    a role_name "MALAYALAM" init_value "
            new UnicodeBlock(\"MALAYALAM\")" class_relation const_relation public
	      comment "
Constant for the \"Malayalam\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038466 // MALAYALAM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038594 // THAI (<unidirectional association>)
	  relation 3038594 --->
	    a role_name "THAI" init_value "
            new UnicodeBlock(\"THAI\")" class_relation const_relation public
	      comment "
Constant for the \"Thai\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038594 // THAI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038722 // LAO (<unidirectional association>)
	  relation 3038722 --->
	    a role_name "LAO" init_value "
            new UnicodeBlock(\"LAO\")" class_relation const_relation public
	      comment "
Constant for the \"Lao\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038722 // LAO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038850 // TIBETAN (<unidirectional association>)
	  relation 3038850 --->
	    a role_name "TIBETAN" init_value "
            new UnicodeBlock(\"TIBETAN\")" class_relation const_relation public
	      comment "
Constant for the \"Tibetan\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038850 // TIBETAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3038978 // GEORGIAN (<unidirectional association>)
	  relation 3038978 --->
	    a role_name "GEORGIAN" init_value "
            new UnicodeBlock(\"GEORGIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Georgian\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3038978 // GEORGIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039106 // HANGUL_JAMO (<unidirectional association>)
	  relation 3039106 --->
	    a role_name "HANGUL_JAMO" init_value "
            new UnicodeBlock(\"HANGUL_JAMO\",
                             \"HANGUL JAMO\",
                             \"HANGULJAMO\")" class_relation const_relation public
	      comment "
Constant for the \"Hangul Jamo\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039106 // HANGUL_JAMO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039234 // LATIN_EXTENDED_ADDITIONAL (<unidirectional association>)
	  relation 3039234 --->
	    a role_name "LATIN_EXTENDED_ADDITIONAL" init_value "
            new UnicodeBlock(\"LATIN_EXTENDED_ADDITIONAL\",
                             \"LATIN EXTENDED ADDITIONAL\",
                             \"LATINEXTENDEDADDITIONAL\")" class_relation const_relation public
	      comment "
Constant for the \"Latin Extended Additional\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039234 // LATIN_EXTENDED_ADDITIONAL (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039362 // GREEK_EXTENDED (<unidirectional association>)
	  relation 3039362 --->
	    a role_name "GREEK_EXTENDED" init_value "
            new UnicodeBlock(\"GREEK_EXTENDED\",
                             \"GREEK EXTENDED\",
                             \"GREEKEXTENDED\")" class_relation const_relation public
	      comment "
Constant for the \"Greek Extended\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039362 // GREEK_EXTENDED (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039490 // GENERAL_PUNCTUATION (<unidirectional association>)
	  relation 3039490 --->
	    a role_name "GENERAL_PUNCTUATION" init_value "
            new UnicodeBlock(\"GENERAL_PUNCTUATION\",
                             \"GENERAL PUNCTUATION\",
                             \"GENERALPUNCTUATION\")" class_relation const_relation public
	      comment "
Constant for the \"General Punctuation\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039490 // GENERAL_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039618 // SUPERSCRIPTS_AND_SUBSCRIPTS (<unidirectional association>)
	  relation 3039618 --->
	    a role_name "SUPERSCRIPTS_AND_SUBSCRIPTS" init_value "
            new UnicodeBlock(\"SUPERSCRIPTS_AND_SUBSCRIPTS\",
                             \"SUPERSCRIPTS AND SUBSCRIPTS\",
                             \"SUPERSCRIPTSANDSUBSCRIPTS\")" class_relation const_relation public
	      comment "
Constant for the \"Superscripts and Subscripts\" Unicode character
block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039618 // SUPERSCRIPTS_AND_SUBSCRIPTS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039746 // CURRENCY_SYMBOLS (<unidirectional association>)
	  relation 3039746 --->
	    a role_name "CURRENCY_SYMBOLS" init_value "
            new UnicodeBlock(\"CURRENCY_SYMBOLS\",
                             \"CURRENCY SYMBOLS\",
                             \"CURRENCYSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Currency Symbols\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039746 // CURRENCY_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3039874 // COMBINING_MARKS_FOR_SYMBOLS (<unidirectional association>)
	  relation 3039874 --->
	    a role_name "COMBINING_MARKS_FOR_SYMBOLS" init_value "
            new UnicodeBlock(\"COMBINING_MARKS_FOR_SYMBOLS\",
                             \"COMBINING DIACRITICAL MARKS FOR SYMBOLS\",
                             \"COMBININGDIACRITICALMARKSFORSYMBOLS\",
                             \"COMBINING MARKS FOR SYMBOLS\",
                             \"COMBININGMARKSFORSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Combining Diacritical Marks for Symbols\" Unicode
character block.
<p>
This block was previously known as \"Combining Marks for Symbols\".
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3039874 // COMBINING_MARKS_FOR_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040002 // LETTERLIKE_SYMBOLS (<unidirectional association>)
	  relation 3040002 --->
	    a role_name "LETTERLIKE_SYMBOLS" init_value "
            new UnicodeBlock(\"LETTERLIKE_SYMBOLS\",
                             \"LETTERLIKE SYMBOLS\",
                             \"LETTERLIKESYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Letterlike Symbols\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040002 // LETTERLIKE_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040130 // NUMBER_FORMS (<unidirectional association>)
	  relation 3040130 --->
	    a role_name "NUMBER_FORMS" init_value "
            new UnicodeBlock(\"NUMBER_FORMS\",
                             \"NUMBER FORMS\",
                             \"NUMBERFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"Number Forms\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040130 // NUMBER_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040258 // ARROWS (<unidirectional association>)
	  relation 3040258 --->
	    a role_name "ARROWS" init_value "
            new UnicodeBlock(\"ARROWS\")" class_relation const_relation public
	      comment "
Constant for the \"Arrows\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040258 // ARROWS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040386 // MATHEMATICAL_OPERATORS (<unidirectional association>)
	  relation 3040386 --->
	    a role_name "MATHEMATICAL_OPERATORS" init_value "
            new UnicodeBlock(\"MATHEMATICAL_OPERATORS\",
                             \"MATHEMATICAL OPERATORS\",
                             \"MATHEMATICALOPERATORS\")" class_relation const_relation public
	      comment "
Constant for the \"Mathematical Operators\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040386 // MATHEMATICAL_OPERATORS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040514 // MISCELLANEOUS_TECHNICAL (<unidirectional association>)
	  relation 3040514 --->
	    a role_name "MISCELLANEOUS_TECHNICAL" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_TECHNICAL\",
                             \"MISCELLANEOUS TECHNICAL\",
                             \"MISCELLANEOUSTECHNICAL\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Technical\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040514 // MISCELLANEOUS_TECHNICAL (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040642 // CONTROL_PICTURES (<unidirectional association>)
	  relation 3040642 --->
	    a role_name "CONTROL_PICTURES" init_value "
            new UnicodeBlock(\"CONTROL_PICTURES\",
                             \"CONTROL PICTURES\",
                             \"CONTROLPICTURES\")" class_relation const_relation public
	      comment "
Constant for the \"Control Pictures\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040642 // CONTROL_PICTURES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040770 // OPTICAL_CHARACTER_RECOGNITION (<unidirectional association>)
	  relation 3040770 --->
	    a role_name "OPTICAL_CHARACTER_RECOGNITION" init_value "
            new UnicodeBlock(\"OPTICAL_CHARACTER_RECOGNITION\",
                             \"OPTICAL CHARACTER RECOGNITION\",
                             \"OPTICALCHARACTERRECOGNITION\")" class_relation const_relation public
	      comment "
Constant for the \"Optical Character Recognition\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040770 // OPTICAL_CHARACTER_RECOGNITION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3040898 // ENCLOSED_ALPHANUMERICS (<unidirectional association>)
	  relation 3040898 --->
	    a role_name "ENCLOSED_ALPHANUMERICS" init_value "
            new UnicodeBlock(\"ENCLOSED_ALPHANUMERICS\",
                             \"ENCLOSED ALPHANUMERICS\",
                             \"ENCLOSEDALPHANUMERICS\")" class_relation const_relation public
	      comment "
Constant for the \"Enclosed Alphanumerics\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3040898 // ENCLOSED_ALPHANUMERICS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041026 // BOX_DRAWING (<unidirectional association>)
	  relation 3041026 --->
	    a role_name "BOX_DRAWING" init_value "
            new UnicodeBlock(\"BOX_DRAWING\",
                             \"BOX DRAWING\",
                             \"BOXDRAWING\")" class_relation const_relation public
	      comment "
Constant for the \"Box Drawing\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041026 // BOX_DRAWING (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041154 // BLOCK_ELEMENTS (<unidirectional association>)
	  relation 3041154 --->
	    a role_name "BLOCK_ELEMENTS" init_value "
            new UnicodeBlock(\"BLOCK_ELEMENTS\",
                             \"BLOCK ELEMENTS\",
                             \"BLOCKELEMENTS\")" class_relation const_relation public
	      comment "
Constant for the \"Block Elements\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041154 // BLOCK_ELEMENTS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041282 // GEOMETRIC_SHAPES (<unidirectional association>)
	  relation 3041282 --->
	    a role_name "GEOMETRIC_SHAPES" init_value "
            new UnicodeBlock(\"GEOMETRIC_SHAPES\",
                             \"GEOMETRIC SHAPES\",
                             \"GEOMETRICSHAPES\")" class_relation const_relation public
	      comment "
Constant for the \"Geometric Shapes\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041282 // GEOMETRIC_SHAPES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041410 // MISCELLANEOUS_SYMBOLS (<unidirectional association>)
	  relation 3041410 --->
	    a role_name "MISCELLANEOUS_SYMBOLS" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_SYMBOLS\",
                             \"MISCELLANEOUS SYMBOLS\",
                             \"MISCELLANEOUSSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Symbols\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041410 // MISCELLANEOUS_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041538 // DINGBATS (<unidirectional association>)
	  relation 3041538 --->
	    a role_name "DINGBATS" init_value "
            new UnicodeBlock(\"DINGBATS\")" class_relation const_relation public
	      comment "
Constant for the \"Dingbats\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041538 // DINGBATS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041666 // CJK_SYMBOLS_AND_PUNCTUATION (<unidirectional association>)
	  relation 3041666 --->
	    a role_name "CJK_SYMBOLS_AND_PUNCTUATION" init_value "
            new UnicodeBlock(\"CJK_SYMBOLS_AND_PUNCTUATION\",
                             \"CJK SYMBOLS AND PUNCTUATION\",
                             \"CJKSYMBOLSANDPUNCTUATION\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Symbols and Punctuation\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041666 // CJK_SYMBOLS_AND_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041794 // HIRAGANA (<unidirectional association>)
	  relation 3041794 --->
	    a role_name "HIRAGANA" init_value "
            new UnicodeBlock(\"HIRAGANA\")" class_relation const_relation public
	      comment "
Constant for the \"Hiragana\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041794 // HIRAGANA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3041922 // KATAKANA (<unidirectional association>)
	  relation 3041922 --->
	    a role_name "KATAKANA" init_value "
            new UnicodeBlock(\"KATAKANA\")" class_relation const_relation public
	      comment "
Constant for the \"Katakana\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3041922 // KATAKANA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042050 // BOPOMOFO (<unidirectional association>)
	  relation 3042050 --->
	    a role_name "BOPOMOFO" init_value "
            new UnicodeBlock(\"BOPOMOFO\")" class_relation const_relation public
	      comment "
Constant for the \"Bopomofo\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042050 // BOPOMOFO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042178 // HANGUL_COMPATIBILITY_JAMO (<unidirectional association>)
	  relation 3042178 --->
	    a role_name "HANGUL_COMPATIBILITY_JAMO" init_value "
            new UnicodeBlock(\"HANGUL_COMPATIBILITY_JAMO\",
                             \"HANGUL COMPATIBILITY JAMO\",
                             \"HANGULCOMPATIBILITYJAMO\")" class_relation const_relation public
	      comment "
Constant for the \"Hangul Compatibility Jamo\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042178 // HANGUL_COMPATIBILITY_JAMO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042306 // KANBUN (<unidirectional association>)
	  relation 3042306 --->
	    a role_name "KANBUN" init_value "
            new UnicodeBlock(\"KANBUN\")" class_relation const_relation public
	      comment "
Constant for the \"Kanbun\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042306 // KANBUN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042434 // ENCLOSED_CJK_LETTERS_AND_MONTHS (<unidirectional association>)
	  relation 3042434 --->
	    a role_name "ENCLOSED_CJK_LETTERS_AND_MONTHS" init_value "
            new UnicodeBlock(\"ENCLOSED_CJK_LETTERS_AND_MONTHS\",
                             \"ENCLOSED CJK LETTERS AND MONTHS\",
                             \"ENCLOSEDCJKLETTERSANDMONTHS\")" class_relation const_relation public
	      comment "
Constant for the \"Enclosed CJK Letters and Months\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042434 // ENCLOSED_CJK_LETTERS_AND_MONTHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042562 // CJK_COMPATIBILITY (<unidirectional association>)
	  relation 3042562 --->
	    a role_name "CJK_COMPATIBILITY" init_value "
            new UnicodeBlock(\"CJK_COMPATIBILITY\",
                             \"CJK COMPATIBILITY\",
                             \"CJKCOMPATIBILITY\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Compatibility\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042562 // CJK_COMPATIBILITY (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042690 // CJK_UNIFIED_IDEOGRAPHS (<unidirectional association>)
	  relation 3042690 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS" init_value "
            new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS\",
                             \"CJK UNIFIED IDEOGRAPHS\",
                             \"CJKUNIFIEDIDEOGRAPHS\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Unified Ideographs\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042690 // CJK_UNIFIED_IDEOGRAPHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042818 // HANGUL_SYLLABLES (<unidirectional association>)
	  relation 3042818 --->
	    a role_name "HANGUL_SYLLABLES" init_value "
            new UnicodeBlock(\"HANGUL_SYLLABLES\",
                             \"HANGUL SYLLABLES\",
                             \"HANGULSYLLABLES\")" class_relation const_relation public
	      comment "
Constant for the \"Hangul Syllables\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042818 // HANGUL_SYLLABLES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3042946 // PRIVATE_USE_AREA (<unidirectional association>)
	  relation 3042946 --->
	    a role_name "PRIVATE_USE_AREA" init_value "
            new UnicodeBlock(\"PRIVATE_USE_AREA\",
                             \"PRIVATE USE AREA\",
                             \"PRIVATEUSEAREA\")" class_relation const_relation public
	      comment "
Constant for the \"Private Use Area\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3042946 // PRIVATE_USE_AREA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043074 // CJK_COMPATIBILITY_IDEOGRAPHS (<unidirectional association>)
	  relation 3043074 --->
	    a role_name "CJK_COMPATIBILITY_IDEOGRAPHS" init_value "
            new UnicodeBlock(\"CJK_COMPATIBILITY_IDEOGRAPHS\",
                             \"CJK COMPATIBILITY IDEOGRAPHS\",
                             \"CJKCOMPATIBILITYIDEOGRAPHS\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Compatibility Ideographs\" Unicode character
block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043074 // CJK_COMPATIBILITY_IDEOGRAPHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043202 // ALPHABETIC_PRESENTATION_FORMS (<unidirectional association>)
	  relation 3043202 --->
	    a role_name "ALPHABETIC_PRESENTATION_FORMS" init_value "
            new UnicodeBlock(\"ALPHABETIC_PRESENTATION_FORMS\",
                             \"ALPHABETIC PRESENTATION FORMS\",
                             \"ALPHABETICPRESENTATIONFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"Alphabetic Presentation Forms\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043202 // ALPHABETIC_PRESENTATION_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043330 // ARABIC_PRESENTATION_FORMS_A (<unidirectional association>)
	  relation 3043330 --->
	    a role_name "ARABIC_PRESENTATION_FORMS_A" init_value "
            new UnicodeBlock(\"ARABIC_PRESENTATION_FORMS_A\",
                             \"ARABIC PRESENTATION FORMS-A\",
                             \"ARABICPRESENTATIONFORMS-A\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic Presentation Forms-A\" Unicode character
block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043330 // ARABIC_PRESENTATION_FORMS_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043458 // COMBINING_HALF_MARKS (<unidirectional association>)
	  relation 3043458 --->
	    a role_name "COMBINING_HALF_MARKS" init_value "
            new UnicodeBlock(\"COMBINING_HALF_MARKS\",
                             \"COMBINING HALF MARKS\",
                             \"COMBININGHALFMARKS\")" class_relation const_relation public
	      comment "
Constant for the \"Combining Half Marks\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043458 // COMBINING_HALF_MARKS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043586 // CJK_COMPATIBILITY_FORMS (<unidirectional association>)
	  relation 3043586 --->
	    a role_name "CJK_COMPATIBILITY_FORMS" init_value "
            new UnicodeBlock(\"CJK_COMPATIBILITY_FORMS\",
                             \"CJK COMPATIBILITY FORMS\",
                             \"CJKCOMPATIBILITYFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Compatibility Forms\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043586 // CJK_COMPATIBILITY_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043714 // SMALL_FORM_VARIANTS (<unidirectional association>)
	  relation 3043714 --->
	    a role_name "SMALL_FORM_VARIANTS" init_value "
            new UnicodeBlock(\"SMALL_FORM_VARIANTS\",
                             \"SMALL FORM VARIANTS\",
                             \"SMALLFORMVARIANTS\")" class_relation const_relation public
	      comment "
Constant for the \"Small Form Variants\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043714 // SMALL_FORM_VARIANTS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043842 // ARABIC_PRESENTATION_FORMS_B (<unidirectional association>)
	  relation 3043842 --->
	    a role_name "ARABIC_PRESENTATION_FORMS_B" init_value "
            new UnicodeBlock(\"ARABIC_PRESENTATION_FORMS_B\",
                             \"ARABIC PRESENTATION FORMS-B\",
                             \"ARABICPRESENTATIONFORMS-B\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic Presentation Forms-B\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043842 // ARABIC_PRESENTATION_FORMS_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3043970 // HALFWIDTH_AND_FULLWIDTH_FORMS (<unidirectional association>)
	  relation 3043970 --->
	    a role_name "HALFWIDTH_AND_FULLWIDTH_FORMS" init_value "
            new UnicodeBlock(\"HALFWIDTH_AND_FULLWIDTH_FORMS\",
                             \"HALFWIDTH AND FULLWIDTH FORMS\",
                             \"HALFWIDTHANDFULLWIDTHFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"Halfwidth and Fullwidth Forms\" Unicode character
block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3043970 // HALFWIDTH_AND_FULLWIDTH_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044098 // SPECIALS (<unidirectional association>)
	  relation 3044098 --->
	    a role_name "SPECIALS" init_value "
            new UnicodeBlock(\"SPECIALS\")" class_relation const_relation public
	      comment "
Constant for the \"Specials\" Unicode character block.
@since 1.2

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044098 // SPECIALS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044226 // SURROGATES_AREA (<unidirectional association>)
	  relation 3044226 --->
	    a role_name "SURROGATES_AREA" init_value "
            new UnicodeBlock(\"SURROGATES_AREA\")" class_relation const_relation public
	      comment "
@deprecated As of J2SE 5, use {@link #HIGH_SURROGATES},
            {@link #HIGH_PRIVATE_USE_SURROGATES}, and
            {@link #LOW_SURROGATES}. These new constants match
            the block definitions of the Unicode Standard.
            The {@link #of(char)} and {@link #of(int)} methods
            return the new constants, not SURROGATES_AREA.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Deprecated
"
	      classrelation_ref 3044226 // SURROGATES_AREA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044354 // SYRIAC (<unidirectional association>)
	  relation 3044354 --->
	    a role_name "SYRIAC" init_value "
            new UnicodeBlock(\"SYRIAC\")" class_relation const_relation public
	      comment "
Constant for the \"Syriac\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044354 // SYRIAC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044482 // THAANA (<unidirectional association>)
	  relation 3044482 --->
	    a role_name "THAANA" init_value "
            new UnicodeBlock(\"THAANA\")" class_relation const_relation public
	      comment "
Constant for the \"Thaana\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044482 // THAANA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044610 // SINHALA (<unidirectional association>)
	  relation 3044610 --->
	    a role_name "SINHALA" init_value "
            new UnicodeBlock(\"SINHALA\")" class_relation const_relation public
	      comment "
Constant for the \"Sinhala\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044610 // SINHALA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044738 // MYANMAR (<unidirectional association>)
	  relation 3044738 --->
	    a role_name "MYANMAR" init_value "
            new UnicodeBlock(\"MYANMAR\")" class_relation const_relation public
	      comment "
Constant for the \"Myanmar\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044738 // MYANMAR (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044866 // ETHIOPIC (<unidirectional association>)
	  relation 3044866 --->
	    a role_name "ETHIOPIC" init_value "
            new UnicodeBlock(\"ETHIOPIC\")" class_relation const_relation public
	      comment "
Constant for the \"Ethiopic\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044866 // ETHIOPIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3044994 // CHEROKEE (<unidirectional association>)
	  relation 3044994 --->
	    a role_name "CHEROKEE" init_value "
            new UnicodeBlock(\"CHEROKEE\")" class_relation const_relation public
	      comment "
Constant for the \"Cherokee\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3044994 // CHEROKEE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045122 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS (<unidirectional association>)
	  relation 3045122 --->
	    a role_name "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS" init_value "
            new UnicodeBlock(\"UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS\",
                             \"UNIFIED CANADIAN ABORIGINAL SYLLABICS\",
                             \"UNIFIEDCANADIANABORIGINALSYLLABICS\")" class_relation const_relation public
	      comment "
Constant for the \"Unified Canadian Aboriginal Syllabics\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045122 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045250 // OGHAM (<unidirectional association>)
	  relation 3045250 --->
	    a role_name "OGHAM" init_value "
            new UnicodeBlock(\"OGHAM\")" class_relation const_relation public
	      comment "
Constant for the \"Ogham\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045250 // OGHAM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045378 // RUNIC (<unidirectional association>)
	  relation 3045378 --->
	    a role_name "RUNIC" init_value "
            new UnicodeBlock(\"RUNIC\")" class_relation const_relation public
	      comment "
Constant for the \"Runic\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045378 // RUNIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045506 // KHMER (<unidirectional association>)
	  relation 3045506 --->
	    a role_name "KHMER" init_value "
            new UnicodeBlock(\"KHMER\")" class_relation const_relation public
	      comment "
Constant for the \"Khmer\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045506 // KHMER (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045634 // MONGOLIAN (<unidirectional association>)
	  relation 3045634 --->
	    a role_name "MONGOLIAN" init_value "
            new UnicodeBlock(\"MONGOLIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Mongolian\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045634 // MONGOLIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045762 // BRAILLE_PATTERNS (<unidirectional association>)
	  relation 3045762 --->
	    a role_name "BRAILLE_PATTERNS" init_value "
            new UnicodeBlock(\"BRAILLE_PATTERNS\",
                             \"BRAILLE PATTERNS\",
                             \"BRAILLEPATTERNS\")" class_relation const_relation public
	      comment "
Constant for the \"Braille Patterns\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045762 // BRAILLE_PATTERNS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3045890 // CJK_RADICALS_SUPPLEMENT (<unidirectional association>)
	  relation 3045890 --->
	    a role_name "CJK_RADICALS_SUPPLEMENT" init_value "
            new UnicodeBlock(\"CJK_RADICALS_SUPPLEMENT\",
                             \"CJK RADICALS SUPPLEMENT\",
                             \"CJKRADICALSSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Radicals Supplement\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3045890 // CJK_RADICALS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046018 // KANGXI_RADICALS (<unidirectional association>)
	  relation 3046018 --->
	    a role_name "KANGXI_RADICALS" init_value "
            new UnicodeBlock(\"KANGXI_RADICALS\",
                             \"KANGXI RADICALS\",
                             \"KANGXIRADICALS\")" class_relation const_relation public
	      comment "
Constant for the \"Kangxi Radicals\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046018 // KANGXI_RADICALS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046146 // IDEOGRAPHIC_DESCRIPTION_CHARACTERS (<unidirectional association>)
	  relation 3046146 --->
	    a role_name "IDEOGRAPHIC_DESCRIPTION_CHARACTERS" init_value "
            new UnicodeBlock(\"IDEOGRAPHIC_DESCRIPTION_CHARACTERS\",
                             \"IDEOGRAPHIC DESCRIPTION CHARACTERS\",
                             \"IDEOGRAPHICDESCRIPTIONCHARACTERS\")" class_relation const_relation public
	      comment "
Constant for the \"Ideographic Description Characters\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046146 // IDEOGRAPHIC_DESCRIPTION_CHARACTERS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046274 // BOPOMOFO_EXTENDED (<unidirectional association>)
	  relation 3046274 --->
	    a role_name "BOPOMOFO_EXTENDED" init_value "
            new UnicodeBlock(\"BOPOMOFO_EXTENDED\",
                             \"BOPOMOFO EXTENDED\",
                             \"BOPOMOFOEXTENDED\")" class_relation const_relation public
	      comment "
Constant for the \"Bopomofo Extended\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046274 // BOPOMOFO_EXTENDED (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046402 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A (<unidirectional association>)
	  relation 3046402 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A" init_value "
            new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\",
                             \"CJK UNIFIED IDEOGRAPHS EXTENSION A\",
                             \"CJKUNIFIEDIDEOGRAPHSEXTENSIONA\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Unified Ideographs Extension A\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046402 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046530 // YI_SYLLABLES (<unidirectional association>)
	  relation 3046530 --->
	    a role_name "YI_SYLLABLES" init_value "
            new UnicodeBlock(\"YI_SYLLABLES\",
                             \"YI SYLLABLES\",
                             \"YISYLLABLES\")" class_relation const_relation public
	      comment "
Constant for the \"Yi Syllables\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046530 // YI_SYLLABLES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046658 // YI_RADICALS (<unidirectional association>)
	  relation 3046658 --->
	    a role_name "YI_RADICALS" init_value "
            new UnicodeBlock(\"YI_RADICALS\",
                             \"YI RADICALS\",
                             \"YIRADICALS\")" class_relation const_relation public
	      comment "
Constant for the \"Yi Radicals\" Unicode character block.
@since 1.4

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046658 // YI_RADICALS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046786 // CYRILLIC_SUPPLEMENTARY (<unidirectional association>)
	  relation 3046786 --->
	    a role_name "CYRILLIC_SUPPLEMENTARY" init_value "
            new UnicodeBlock(\"CYRILLIC_SUPPLEMENTARY\",
                             \"CYRILLIC SUPPLEMENTARY\",
                             \"CYRILLICSUPPLEMENTARY\",
                             \"CYRILLIC SUPPLEMENT\",
                             \"CYRILLICSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Cyrillic Supplementary\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046786 // CYRILLIC_SUPPLEMENTARY (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3046914 // TAGALOG (<unidirectional association>)
	  relation 3046914 --->
	    a role_name "TAGALOG" init_value "
            new UnicodeBlock(\"TAGALOG\")" class_relation const_relation public
	      comment "
Constant for the \"Tagalog\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3046914 // TAGALOG (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047042 // HANUNOO (<unidirectional association>)
	  relation 3047042 --->
	    a role_name "HANUNOO" init_value "
            new UnicodeBlock(\"HANUNOO\")" class_relation const_relation public
	      comment "
Constant for the \"Hanunoo\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047042 // HANUNOO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047170 // BUHID (<unidirectional association>)
	  relation 3047170 --->
	    a role_name "BUHID" init_value "
            new UnicodeBlock(\"BUHID\")" class_relation const_relation public
	      comment "
Constant for the \"Buhid\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047170 // BUHID (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047298 // TAGBANWA (<unidirectional association>)
	  relation 3047298 --->
	    a role_name "TAGBANWA" init_value "
            new UnicodeBlock(\"TAGBANWA\")" class_relation const_relation public
	      comment "
Constant for the \"Tagbanwa\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047298 // TAGBANWA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047426 // LIMBU (<unidirectional association>)
	  relation 3047426 --->
	    a role_name "LIMBU" init_value "
            new UnicodeBlock(\"LIMBU\")" class_relation const_relation public
	      comment "
Constant for the \"Limbu\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047426 // LIMBU (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047554 // TAI_LE (<unidirectional association>)
	  relation 3047554 --->
	    a role_name "TAI_LE" init_value "
            new UnicodeBlock(\"TAI_LE\",
                             \"TAI LE\",
                             \"TAILE\")" class_relation const_relation public
	      comment "
Constant for the \"Tai Le\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047554 // TAI_LE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047682 // KHMER_SYMBOLS (<unidirectional association>)
	  relation 3047682 --->
	    a role_name "KHMER_SYMBOLS" init_value "
            new UnicodeBlock(\"KHMER_SYMBOLS\",
                             \"KHMER SYMBOLS\",
                             \"KHMERSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Khmer Symbols\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047682 // KHMER_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047810 // PHONETIC_EXTENSIONS (<unidirectional association>)
	  relation 3047810 --->
	    a role_name "PHONETIC_EXTENSIONS" init_value "
            new UnicodeBlock(\"PHONETIC_EXTENSIONS\",
                             \"PHONETIC EXTENSIONS\",
                             \"PHONETICEXTENSIONS\")" class_relation const_relation public
	      comment "
Constant for the \"Phonetic Extensions\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047810 // PHONETIC_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3047938 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A (<unidirectional association>)
	  relation 3047938 --->
	    a role_name "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A\",
                             \"MISCELLANEOUS MATHEMATICAL SYMBOLS-A\",
                             \"MISCELLANEOUSMATHEMATICALSYMBOLS-A\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Mathematical Symbols-A\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3047938 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048066 // SUPPLEMENTAL_ARROWS_A (<unidirectional association>)
	  relation 3048066 --->
	    a role_name "SUPPLEMENTAL_ARROWS_A" init_value "
            new UnicodeBlock(\"SUPPLEMENTAL_ARROWS_A\",
                             \"SUPPLEMENTAL ARROWS-A\",
                             \"SUPPLEMENTALARROWS-A\")" class_relation const_relation public
	      comment "
Constant for the \"Supplemental Arrows-A\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048066 // SUPPLEMENTAL_ARROWS_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048194 // SUPPLEMENTAL_ARROWS_B (<unidirectional association>)
	  relation 3048194 --->
	    a role_name "SUPPLEMENTAL_ARROWS_B" init_value "
            new UnicodeBlock(\"SUPPLEMENTAL_ARROWS_B\",
                             \"SUPPLEMENTAL ARROWS-B\",
                             \"SUPPLEMENTALARROWS-B\")" class_relation const_relation public
	      comment "
Constant for the \"Supplemental Arrows-B\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048194 // SUPPLEMENTAL_ARROWS_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048322 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B (<unidirectional association>)
	  relation 3048322 --->
	    a role_name "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B\",
                             \"MISCELLANEOUS MATHEMATICAL SYMBOLS-B\",
                             \"MISCELLANEOUSMATHEMATICALSYMBOLS-B\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Mathematical Symbols-B\" Unicode
character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048322 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048450 // SUPPLEMENTAL_MATHEMATICAL_OPERATORS (<unidirectional association>)
	  relation 3048450 --->
	    a role_name "SUPPLEMENTAL_MATHEMATICAL_OPERATORS" init_value "
            new UnicodeBlock(\"SUPPLEMENTAL_MATHEMATICAL_OPERATORS\",
                             \"SUPPLEMENTAL MATHEMATICAL OPERATORS\",
                             \"SUPPLEMENTALMATHEMATICALOPERATORS\")" class_relation const_relation public
	      comment "
Constant for the \"Supplemental Mathematical Operators\" Unicode
character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048450 // SUPPLEMENTAL_MATHEMATICAL_OPERATORS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048578 // MISCELLANEOUS_SYMBOLS_AND_ARROWS (<unidirectional association>)
	  relation 3048578 --->
	    a role_name "MISCELLANEOUS_SYMBOLS_AND_ARROWS" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_SYMBOLS_AND_ARROWS\",
                             \"MISCELLANEOUS SYMBOLS AND ARROWS\",
                             \"MISCELLANEOUSSYMBOLSANDARROWS\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Symbols and Arrows\" Unicode character
block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048578 // MISCELLANEOUS_SYMBOLS_AND_ARROWS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048706 // KATAKANA_PHONETIC_EXTENSIONS (<unidirectional association>)
	  relation 3048706 --->
	    a role_name "KATAKANA_PHONETIC_EXTENSIONS" init_value "
            new UnicodeBlock(\"KATAKANA_PHONETIC_EXTENSIONS\",
                             \"KATAKANA PHONETIC EXTENSIONS\",
                             \"KATAKANAPHONETICEXTENSIONS\")" class_relation const_relation public
	      comment "
Constant for the \"Katakana Phonetic Extensions\" Unicode character
block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048706 // KATAKANA_PHONETIC_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048834 // YIJING_HEXAGRAM_SYMBOLS (<unidirectional association>)
	  relation 3048834 --->
	    a role_name "YIJING_HEXAGRAM_SYMBOLS" init_value "
            new UnicodeBlock(\"YIJING_HEXAGRAM_SYMBOLS\",
                             \"YIJING HEXAGRAM SYMBOLS\",
                             \"YIJINGHEXAGRAMSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Yijing Hexagram Symbols\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048834 // YIJING_HEXAGRAM_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3048962 // VARIATION_SELECTORS (<unidirectional association>)
	  relation 3048962 --->
	    a role_name "VARIATION_SELECTORS" init_value "
            new UnicodeBlock(\"VARIATION_SELECTORS\",
                             \"VARIATION SELECTORS\",
                             \"VARIATIONSELECTORS\")" class_relation const_relation public
	      comment "
Constant for the \"Variation Selectors\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3048962 // VARIATION_SELECTORS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049090 // LINEAR_B_SYLLABARY (<unidirectional association>)
	  relation 3049090 --->
	    a role_name "LINEAR_B_SYLLABARY" init_value "
            new UnicodeBlock(\"LINEAR_B_SYLLABARY\",
                             \"LINEAR B SYLLABARY\",
                             \"LINEARBSYLLABARY\")" class_relation const_relation public
	      comment "
Constant for the \"Linear B Syllabary\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049090 // LINEAR_B_SYLLABARY (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049218 // LINEAR_B_IDEOGRAMS (<unidirectional association>)
	  relation 3049218 --->
	    a role_name "LINEAR_B_IDEOGRAMS" init_value "
            new UnicodeBlock(\"LINEAR_B_IDEOGRAMS\",
                             \"LINEAR B IDEOGRAMS\",
                             \"LINEARBIDEOGRAMS\")" class_relation const_relation public
	      comment "
Constant for the \"Linear B Ideograms\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049218 // LINEAR_B_IDEOGRAMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049346 // AEGEAN_NUMBERS (<unidirectional association>)
	  relation 3049346 --->
	    a role_name "AEGEAN_NUMBERS" init_value "
            new UnicodeBlock(\"AEGEAN_NUMBERS\",
                             \"AEGEAN NUMBERS\",
                             \"AEGEANNUMBERS\")" class_relation const_relation public
	      comment "
Constant for the \"Aegean Numbers\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049346 // AEGEAN_NUMBERS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049474 // OLD_ITALIC (<unidirectional association>)
	  relation 3049474 --->
	    a role_name "OLD_ITALIC" init_value "
            new UnicodeBlock(\"OLD_ITALIC\",
                             \"OLD ITALIC\",
                             \"OLDITALIC\")" class_relation const_relation public
	      comment "
Constant for the \"Old Italic\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049474 // OLD_ITALIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049602 // GOTHIC (<unidirectional association>)
	  relation 3049602 --->
	    a role_name "GOTHIC" init_value "
            new UnicodeBlock(\"GOTHIC\")" class_relation const_relation public
	      comment "
Constant for the \"Gothic\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049602 // GOTHIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049730 // UGARITIC (<unidirectional association>)
	  relation 3049730 --->
	    a role_name "UGARITIC" init_value "
            new UnicodeBlock(\"UGARITIC\")" class_relation const_relation public
	      comment "
Constant for the \"Ugaritic\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049730 // UGARITIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049858 // DESERET (<unidirectional association>)
	  relation 3049858 --->
	    a role_name "DESERET" init_value "
            new UnicodeBlock(\"DESERET\")" class_relation const_relation public
	      comment "
Constant for the \"Deseret\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049858 // DESERET (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3049986 // SHAVIAN (<unidirectional association>)
	  relation 3049986 --->
	    a role_name "SHAVIAN" init_value "
            new UnicodeBlock(\"SHAVIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Shavian\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3049986 // SHAVIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050114 // OSMANYA (<unidirectional association>)
	  relation 3050114 --->
	    a role_name "OSMANYA" init_value "
            new UnicodeBlock(\"OSMANYA\")" class_relation const_relation public
	      comment "
Constant for the \"Osmanya\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050114 // OSMANYA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050242 // CYPRIOT_SYLLABARY (<unidirectional association>)
	  relation 3050242 --->
	    a role_name "CYPRIOT_SYLLABARY" init_value "
            new UnicodeBlock(\"CYPRIOT_SYLLABARY\",
                             \"CYPRIOT SYLLABARY\",
                             \"CYPRIOTSYLLABARY\")" class_relation const_relation public
	      comment "
Constant for the \"Cypriot Syllabary\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050242 // CYPRIOT_SYLLABARY (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050370 // BYZANTINE_MUSICAL_SYMBOLS (<unidirectional association>)
	  relation 3050370 --->
	    a role_name "BYZANTINE_MUSICAL_SYMBOLS" init_value "
            new UnicodeBlock(\"BYZANTINE_MUSICAL_SYMBOLS\",
                             \"BYZANTINE MUSICAL SYMBOLS\",
                             \"BYZANTINEMUSICALSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Byzantine Musical Symbols\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050370 // BYZANTINE_MUSICAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050498 // MUSICAL_SYMBOLS (<unidirectional association>)
	  relation 3050498 --->
	    a role_name "MUSICAL_SYMBOLS" init_value "
            new UnicodeBlock(\"MUSICAL_SYMBOLS\",
                             \"MUSICAL SYMBOLS\",
                             \"MUSICALSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Musical Symbols\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050498 // MUSICAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050626 // TAI_XUAN_JING_SYMBOLS (<unidirectional association>)
	  relation 3050626 --->
	    a role_name "TAI_XUAN_JING_SYMBOLS" init_value "
            new UnicodeBlock(\"TAI_XUAN_JING_SYMBOLS\",
                             \"TAI XUAN JING SYMBOLS\",
                             \"TAIXUANJINGSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Tai Xuan Jing Symbols\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050626 // TAI_XUAN_JING_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050754 // MATHEMATICAL_ALPHANUMERIC_SYMBOLS (<unidirectional association>)
	  relation 3050754 --->
	    a role_name "MATHEMATICAL_ALPHANUMERIC_SYMBOLS" init_value "
            new UnicodeBlock(\"MATHEMATICAL_ALPHANUMERIC_SYMBOLS\",
                             \"MATHEMATICAL ALPHANUMERIC SYMBOLS\",
                             \"MATHEMATICALALPHANUMERICSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Mathematical Alphanumeric Symbols\" Unicode
character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050754 // MATHEMATICAL_ALPHANUMERIC_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3050882 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B (<unidirectional association>)
	  relation 3050882 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B" init_value "
            new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B\",
                             \"CJK UNIFIED IDEOGRAPHS EXTENSION B\",
                             \"CJKUNIFIEDIDEOGRAPHSEXTENSIONB\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Unified Ideographs Extension B\" Unicode
character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3050882 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051010 // CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT (<unidirectional association>)
	  relation 3051010 --->
	    a role_name "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT" init_value "
            new UnicodeBlock(\"CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT\",
                             \"CJK COMPATIBILITY IDEOGRAPHS SUPPLEMENT\",
                             \"CJKCOMPATIBILITYIDEOGRAPHSSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Compatibility Ideographs Supplement\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051010 // CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051138 // TAGS (<unidirectional association>)
	  relation 3051138 --->
	    a role_name "TAGS" init_value "
            new UnicodeBlock(\"TAGS\")" class_relation const_relation public
	      comment "
Constant for the \"Tags\" Unicode character block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051138 // TAGS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051266 // VARIATION_SELECTORS_SUPPLEMENT (<unidirectional association>)
	  relation 3051266 --->
	    a role_name "VARIATION_SELECTORS_SUPPLEMENT" init_value "
            new UnicodeBlock(\"VARIATION_SELECTORS_SUPPLEMENT\",
                             \"VARIATION SELECTORS SUPPLEMENT\",
                             \"VARIATIONSELECTORSSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Variation Selectors Supplement\" Unicode character
block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051266 // VARIATION_SELECTORS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051394 // SUPPLEMENTARY_PRIVATE_USE_AREA_A (<unidirectional association>)
	  relation 3051394 --->
	    a role_name "SUPPLEMENTARY_PRIVATE_USE_AREA_A" init_value "
            new UnicodeBlock(\"SUPPLEMENTARY_PRIVATE_USE_AREA_A\",
                             \"SUPPLEMENTARY PRIVATE USE AREA-A\",
                             \"SUPPLEMENTARYPRIVATEUSEAREA-A\")" class_relation const_relation public
	      comment "
Constant for the \"Supplementary Private Use Area-A\" Unicode character
block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051394 // SUPPLEMENTARY_PRIVATE_USE_AREA_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051522 // SUPPLEMENTARY_PRIVATE_USE_AREA_B (<unidirectional association>)
	  relation 3051522 --->
	    a role_name "SUPPLEMENTARY_PRIVATE_USE_AREA_B" init_value "
            new UnicodeBlock(\"SUPPLEMENTARY_PRIVATE_USE_AREA_B\",
                             \"SUPPLEMENTARY PRIVATE USE AREA-B\",
                             \"SUPPLEMENTARYPRIVATEUSEAREA-B\")" class_relation const_relation public
	      comment "
Constant for the \"Supplementary Private Use Area-B\" Unicode character
block.
@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051522 // SUPPLEMENTARY_PRIVATE_USE_AREA_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051650 // HIGH_SURROGATES (<unidirectional association>)
	  relation 3051650 --->
	    a role_name "HIGH_SURROGATES" init_value "
            new UnicodeBlock(\"HIGH_SURROGATES\",
                             \"HIGH SURROGATES\",
                             \"HIGHSURROGATES\")" class_relation const_relation public
	      comment "
Constant for the \"High Surrogates\" Unicode character block.
This block represents codepoint values in the high surrogate
range: U+D800 through U+DB7F

@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051650 // HIGH_SURROGATES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051778 // HIGH_PRIVATE_USE_SURROGATES (<unidirectional association>)
	  relation 3051778 --->
	    a role_name "HIGH_PRIVATE_USE_SURROGATES" init_value "
            new UnicodeBlock(\"HIGH_PRIVATE_USE_SURROGATES\",
                             \"HIGH PRIVATE USE SURROGATES\",
                             \"HIGHPRIVATEUSESURROGATES\")" class_relation const_relation public
	      comment "
Constant for the \"High Private Use Surrogates\" Unicode character
block.
This block represents codepoint values in the private use high
surrogate range: U+DB80 through U+DBFF

@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051778 // HIGH_PRIVATE_USE_SURROGATES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3051906 // LOW_SURROGATES (<unidirectional association>)
	  relation 3051906 --->
	    a role_name "LOW_SURROGATES" init_value "
            new UnicodeBlock(\"LOW_SURROGATES\",
                             \"LOW SURROGATES\",
                             \"LOWSURROGATES\")" class_relation const_relation public
	      comment "
Constant for the \"Low Surrogates\" Unicode character block.
This block represents codepoint values in the low surrogate
range: U+DC00 through U+DFFF

@since 1.5

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3051906 // LOW_SURROGATES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052034 // ARABIC_SUPPLEMENT (<unidirectional association>)
	  relation 3052034 --->
	    a role_name "ARABIC_SUPPLEMENT" init_value "
            new UnicodeBlock(\"ARABIC_SUPPLEMENT\",
                             \"ARABIC SUPPLEMENT\",
                             \"ARABICSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic Supplement\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052034 // ARABIC_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052162 // NKO (<unidirectional association>)
	  relation 3052162 --->
	    a role_name "NKO" init_value "
            new UnicodeBlock(\"NKO\")" class_relation const_relation public
	      comment "
Constant for the \"NKo\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052162 // NKO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052290 // SAMARITAN (<unidirectional association>)
	  relation 3052290 --->
	    a role_name "SAMARITAN" init_value "
            new UnicodeBlock(\"SAMARITAN\")" class_relation const_relation public
	      comment "
Constant for the \"Samaritan\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052290 // SAMARITAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052418 // MANDAIC (<unidirectional association>)
	  relation 3052418 --->
	    a role_name "MANDAIC" init_value "
            new UnicodeBlock(\"MANDAIC\")" class_relation const_relation public
	      comment "
Constant for the \"Mandaic\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052418 // MANDAIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052546 // ETHIOPIC_SUPPLEMENT (<unidirectional association>)
	  relation 3052546 --->
	    a role_name "ETHIOPIC_SUPPLEMENT" init_value "
            new UnicodeBlock(\"ETHIOPIC_SUPPLEMENT\",
                             \"ETHIOPIC SUPPLEMENT\",
                             \"ETHIOPICSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Ethiopic Supplement\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052546 // ETHIOPIC_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052674 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED (<unidirectional association>)
	  relation 3052674 --->
	    a role_name "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED" init_value "
            new UnicodeBlock(\"UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED\",
                             \"UNIFIED CANADIAN ABORIGINAL SYLLABICS EXTENDED\",
                             \"UNIFIEDCANADIANABORIGINALSYLLABICSEXTENDED\")" class_relation const_relation public
	      comment "
Constant for the \"Unified Canadian Aboriginal Syllabics Extended\"
Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052674 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052802 // NEW_TAI_LUE (<unidirectional association>)
	  relation 3052802 --->
	    a role_name "NEW_TAI_LUE" init_value "
            new UnicodeBlock(\"NEW_TAI_LUE\",
                             \"NEW TAI LUE\",
                             \"NEWTAILUE\")" class_relation const_relation public
	      comment "
Constant for the \"New Tai Lue\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052802 // NEW_TAI_LUE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3052930 // BUGINESE (<unidirectional association>)
	  relation 3052930 --->
	    a role_name "BUGINESE" init_value "
            new UnicodeBlock(\"BUGINESE\")" class_relation const_relation public
	      comment "
Constant for the \"Buginese\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3052930 // BUGINESE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053058 // TAI_THAM (<unidirectional association>)
	  relation 3053058 --->
	    a role_name "TAI_THAM" init_value "
            new UnicodeBlock(\"TAI_THAM\",
                             \"TAI THAM\",
                             \"TAITHAM\")" class_relation const_relation public
	      comment "
Constant for the \"Tai Tham\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053058 // TAI_THAM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053186 // BALINESE (<unidirectional association>)
	  relation 3053186 --->
	    a role_name "BALINESE" init_value "
            new UnicodeBlock(\"BALINESE\")" class_relation const_relation public
	      comment "
Constant for the \"Balinese\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053186 // BALINESE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053314 // SUNDANESE (<unidirectional association>)
	  relation 3053314 --->
	    a role_name "SUNDANESE" init_value "
            new UnicodeBlock(\"SUNDANESE\")" class_relation const_relation public
	      comment "
Constant for the \"Sundanese\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053314 // SUNDANESE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053442 // BATAK (<unidirectional association>)
	  relation 3053442 --->
	    a role_name "BATAK" init_value "
            new UnicodeBlock(\"BATAK\")" class_relation const_relation public
	      comment "
Constant for the \"Batak\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053442 // BATAK (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053570 // LEPCHA (<unidirectional association>)
	  relation 3053570 --->
	    a role_name "LEPCHA" init_value "
            new UnicodeBlock(\"LEPCHA\")" class_relation const_relation public
	      comment "
Constant for the \"Lepcha\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053570 // LEPCHA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053698 // OL_CHIKI (<unidirectional association>)
	  relation 3053698 --->
	    a role_name "OL_CHIKI" init_value "
            new UnicodeBlock(\"OL_CHIKI\",
                             \"OL CHIKI\",
                             \"OLCHIKI\")" class_relation const_relation public
	      comment "
Constant for the \"Ol Chiki\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053698 // OL_CHIKI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053826 // VEDIC_EXTENSIONS (<unidirectional association>)
	  relation 3053826 --->
	    a role_name "VEDIC_EXTENSIONS" init_value "
            new UnicodeBlock(\"VEDIC_EXTENSIONS\",
                             \"VEDIC EXTENSIONS\",
                             \"VEDICEXTENSIONS\")" class_relation const_relation public
	      comment "
Constant for the \"Vedic Extensions\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053826 // VEDIC_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3053954 // PHONETIC_EXTENSIONS_SUPPLEMENT (<unidirectional association>)
	  relation 3053954 --->
	    a role_name "PHONETIC_EXTENSIONS_SUPPLEMENT" init_value "
            new UnicodeBlock(\"PHONETIC_EXTENSIONS_SUPPLEMENT\",
                             \"PHONETIC EXTENSIONS SUPPLEMENT\",
                             \"PHONETICEXTENSIONSSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Phonetic Extensions Supplement\" Unicode character
block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3053954 // PHONETIC_EXTENSIONS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054082 // COMBINING_DIACRITICAL_MARKS_SUPPLEMENT (<unidirectional association>)
	  relation 3054082 --->
	    a role_name "COMBINING_DIACRITICAL_MARKS_SUPPLEMENT" init_value "
            new UnicodeBlock(\"COMBINING_DIACRITICAL_MARKS_SUPPLEMENT\",
                             \"COMBINING DIACRITICAL MARKS SUPPLEMENT\",
                             \"COMBININGDIACRITICALMARKSSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Combining Diacritical Marks Supplement\" Unicode
character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054082 // COMBINING_DIACRITICAL_MARKS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054210 // GLAGOLITIC (<unidirectional association>)
	  relation 3054210 --->
	    a role_name "GLAGOLITIC" init_value "
            new UnicodeBlock(\"GLAGOLITIC\")" class_relation const_relation public
	      comment "
Constant for the \"Glagolitic\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054210 // GLAGOLITIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054338 // LATIN_EXTENDED_C (<unidirectional association>)
	  relation 3054338 --->
	    a role_name "LATIN_EXTENDED_C" init_value "
            new UnicodeBlock(\"LATIN_EXTENDED_C\",
                             \"LATIN EXTENDED-C\",
                             \"LATINEXTENDED-C\")" class_relation const_relation public
	      comment "
Constant for the \"Latin Extended-C\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054338 // LATIN_EXTENDED_C (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054466 // COPTIC (<unidirectional association>)
	  relation 3054466 --->
	    a role_name "COPTIC" init_value "
            new UnicodeBlock(\"COPTIC\")" class_relation const_relation public
	      comment "
Constant for the \"Coptic\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054466 // COPTIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054594 // GEORGIAN_SUPPLEMENT (<unidirectional association>)
	  relation 3054594 --->
	    a role_name "GEORGIAN_SUPPLEMENT" init_value "
            new UnicodeBlock(\"GEORGIAN_SUPPLEMENT\",
                             \"GEORGIAN SUPPLEMENT\",
                             \"GEORGIANSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Georgian Supplement\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054594 // GEORGIAN_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054722 // TIFINAGH (<unidirectional association>)
	  relation 3054722 --->
	    a role_name "TIFINAGH" init_value "
            new UnicodeBlock(\"TIFINAGH\")" class_relation const_relation public
	      comment "
Constant for the \"Tifinagh\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054722 // TIFINAGH (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054850 // ETHIOPIC_EXTENDED (<unidirectional association>)
	  relation 3054850 --->
	    a role_name "ETHIOPIC_EXTENDED" init_value "
            new UnicodeBlock(\"ETHIOPIC_EXTENDED\",
                             \"ETHIOPIC EXTENDED\",
                             \"ETHIOPICEXTENDED\")" class_relation const_relation public
	      comment "
Constant for the \"Ethiopic Extended\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054850 // ETHIOPIC_EXTENDED (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3054978 // CYRILLIC_EXTENDED_A (<unidirectional association>)
	  relation 3054978 --->
	    a role_name "CYRILLIC_EXTENDED_A" init_value "
            new UnicodeBlock(\"CYRILLIC_EXTENDED_A\",
                             \"CYRILLIC EXTENDED-A\",
                             \"CYRILLICEXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Cyrillic Extended-A\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3054978 // CYRILLIC_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055106 // SUPPLEMENTAL_PUNCTUATION (<unidirectional association>)
	  relation 3055106 --->
	    a role_name "SUPPLEMENTAL_PUNCTUATION" init_value "
            new UnicodeBlock(\"SUPPLEMENTAL_PUNCTUATION\",
                             \"SUPPLEMENTAL PUNCTUATION\",
                             \"SUPPLEMENTALPUNCTUATION\")" class_relation const_relation public
	      comment "
Constant for the \"Supplemental Punctuation\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055106 // SUPPLEMENTAL_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055234 // CJK_STROKES (<unidirectional association>)
	  relation 3055234 --->
	    a role_name "CJK_STROKES" init_value "
            new UnicodeBlock(\"CJK_STROKES\",
                             \"CJK STROKES\",
                             \"CJKSTROKES\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Strokes\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055234 // CJK_STROKES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055362 // LISU (<unidirectional association>)
	  relation 3055362 --->
	    a role_name "LISU" init_value "
            new UnicodeBlock(\"LISU\")" class_relation const_relation public
	      comment "
Constant for the \"Lisu\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055362 // LISU (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055490 // VAI (<unidirectional association>)
	  relation 3055490 --->
	    a role_name "VAI" init_value "
            new UnicodeBlock(\"VAI\")" class_relation const_relation public
	      comment "
Constant for the \"Vai\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055490 // VAI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055618 // CYRILLIC_EXTENDED_B (<unidirectional association>)
	  relation 3055618 --->
	    a role_name "CYRILLIC_EXTENDED_B" init_value "
            new UnicodeBlock(\"CYRILLIC_EXTENDED_B\",
                             \"CYRILLIC EXTENDED-B\",
                             \"CYRILLICEXTENDED-B\")" class_relation const_relation public
	      comment "
Constant for the \"Cyrillic Extended-B\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055618 // CYRILLIC_EXTENDED_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055746 // BAMUM (<unidirectional association>)
	  relation 3055746 --->
	    a role_name "BAMUM" init_value "
            new UnicodeBlock(\"BAMUM\")" class_relation const_relation public
	      comment "
Constant for the \"Bamum\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055746 // BAMUM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3055874 // MODIFIER_TONE_LETTERS (<unidirectional association>)
	  relation 3055874 --->
	    a role_name "MODIFIER_TONE_LETTERS" init_value "
            new UnicodeBlock(\"MODIFIER_TONE_LETTERS\",
                             \"MODIFIER TONE LETTERS\",
                             \"MODIFIERTONELETTERS\")" class_relation const_relation public
	      comment "
Constant for the \"Modifier Tone Letters\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3055874 // MODIFIER_TONE_LETTERS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056002 // LATIN_EXTENDED_D (<unidirectional association>)
	  relation 3056002 --->
	    a role_name "LATIN_EXTENDED_D" init_value "
            new UnicodeBlock(\"LATIN_EXTENDED_D\",
                             \"LATIN EXTENDED-D\",
                             \"LATINEXTENDED-D\")" class_relation const_relation public
	      comment "
Constant for the \"Latin Extended-D\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056002 // LATIN_EXTENDED_D (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056130 // SYLOTI_NAGRI (<unidirectional association>)
	  relation 3056130 --->
	    a role_name "SYLOTI_NAGRI" init_value "
            new UnicodeBlock(\"SYLOTI_NAGRI\",
                             \"SYLOTI NAGRI\",
                             \"SYLOTINAGRI\")" class_relation const_relation public
	      comment "
Constant for the \"Syloti Nagri\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056130 // SYLOTI_NAGRI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056258 // COMMON_INDIC_NUMBER_FORMS (<unidirectional association>)
	  relation 3056258 --->
	    a role_name "COMMON_INDIC_NUMBER_FORMS" init_value "
            new UnicodeBlock(\"COMMON_INDIC_NUMBER_FORMS\",
                             \"COMMON INDIC NUMBER FORMS\",
                             \"COMMONINDICNUMBERFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"Common Indic Number Forms\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056258 // COMMON_INDIC_NUMBER_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056386 // PHAGS_PA (<unidirectional association>)
	  relation 3056386 --->
	    a role_name "PHAGS_PA" init_value "
            new UnicodeBlock(\"PHAGS_PA\",
                             \"PHAGS-PA\")" class_relation const_relation public
	      comment "
Constant for the \"Phags-pa\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056386 // PHAGS_PA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056514 // SAURASHTRA (<unidirectional association>)
	  relation 3056514 --->
	    a role_name "SAURASHTRA" init_value "
            new UnicodeBlock(\"SAURASHTRA\")" class_relation const_relation public
	      comment "
Constant for the \"Saurashtra\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056514 // SAURASHTRA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056642 // DEVANAGARI_EXTENDED (<unidirectional association>)
	  relation 3056642 --->
	    a role_name "DEVANAGARI_EXTENDED" init_value "
            new UnicodeBlock(\"DEVANAGARI_EXTENDED\",
                             \"DEVANAGARI EXTENDED\",
                             \"DEVANAGARIEXTENDED\")" class_relation const_relation public
	      comment "
Constant for the \"Devanagari Extended\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056642 // DEVANAGARI_EXTENDED (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056770 // KAYAH_LI (<unidirectional association>)
	  relation 3056770 --->
	    a role_name "KAYAH_LI" init_value "
            new UnicodeBlock(\"KAYAH_LI\",
                             \"KAYAH LI\",
                             \"KAYAHLI\")" class_relation const_relation public
	      comment "
Constant for the \"Kayah Li\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056770 // KAYAH_LI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3056898 // REJANG (<unidirectional association>)
	  relation 3056898 --->
	    a role_name "REJANG" init_value "
            new UnicodeBlock(\"REJANG\")" class_relation const_relation public
	      comment "
Constant for the \"Rejang\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3056898 // REJANG (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057026 // HANGUL_JAMO_EXTENDED_A (<unidirectional association>)
	  relation 3057026 --->
	    a role_name "HANGUL_JAMO_EXTENDED_A" init_value "
            new UnicodeBlock(\"HANGUL_JAMO_EXTENDED_A\",
                             \"HANGUL JAMO EXTENDED-A\",
                             \"HANGULJAMOEXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Hangul Jamo Extended-A\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057026 // HANGUL_JAMO_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057154 // JAVANESE (<unidirectional association>)
	  relation 3057154 --->
	    a role_name "JAVANESE" init_value "
            new UnicodeBlock(\"JAVANESE\")" class_relation const_relation public
	      comment "
Constant for the \"Javanese\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057154 // JAVANESE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057282 // CHAM (<unidirectional association>)
	  relation 3057282 --->
	    a role_name "CHAM" init_value "
            new UnicodeBlock(\"CHAM\")" class_relation const_relation public
	      comment "
Constant for the \"Cham\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057282 // CHAM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057410 // MYANMAR_EXTENDED_A (<unidirectional association>)
	  relation 3057410 --->
	    a role_name "MYANMAR_EXTENDED_A" init_value "
            new UnicodeBlock(\"MYANMAR_EXTENDED_A\",
                             \"MYANMAR EXTENDED-A\",
                             \"MYANMAREXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Myanmar Extended-A\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057410 // MYANMAR_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057538 // TAI_VIET (<unidirectional association>)
	  relation 3057538 --->
	    a role_name "TAI_VIET" init_value "
            new UnicodeBlock(\"TAI_VIET\",
                             \"TAI VIET\",
                             \"TAIVIET\")" class_relation const_relation public
	      comment "
Constant for the \"Tai Viet\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057538 // TAI_VIET (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057666 // ETHIOPIC_EXTENDED_A (<unidirectional association>)
	  relation 3057666 --->
	    a role_name "ETHIOPIC_EXTENDED_A" init_value "
            new UnicodeBlock(\"ETHIOPIC_EXTENDED_A\",
                             \"ETHIOPIC EXTENDED-A\",
                             \"ETHIOPICEXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Ethiopic Extended-A\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057666 // ETHIOPIC_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057794 // MEETEI_MAYEK (<unidirectional association>)
	  relation 3057794 --->
	    a role_name "MEETEI_MAYEK" init_value "
            new UnicodeBlock(\"MEETEI_MAYEK\",
                             \"MEETEI MAYEK\",
                             \"MEETEIMAYEK\")" class_relation const_relation public
	      comment "
Constant for the \"Meetei Mayek\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057794 // MEETEI_MAYEK (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3057922 // HANGUL_JAMO_EXTENDED_B (<unidirectional association>)
	  relation 3057922 --->
	    a role_name "HANGUL_JAMO_EXTENDED_B" init_value "
            new UnicodeBlock(\"HANGUL_JAMO_EXTENDED_B\",
                             \"HANGUL JAMO EXTENDED-B\",
                             \"HANGULJAMOEXTENDED-B\")" class_relation const_relation public
	      comment "
Constant for the \"Hangul Jamo Extended-B\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3057922 // HANGUL_JAMO_EXTENDED_B (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058050 // VERTICAL_FORMS (<unidirectional association>)
	  relation 3058050 --->
	    a role_name "VERTICAL_FORMS" init_value "
            new UnicodeBlock(\"VERTICAL_FORMS\",
                             \"VERTICAL FORMS\",
                             \"VERTICALFORMS\")" class_relation const_relation public
	      comment "
Constant for the \"Vertical Forms\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058050 // VERTICAL_FORMS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058178 // ANCIENT_GREEK_NUMBERS (<unidirectional association>)
	  relation 3058178 --->
	    a role_name "ANCIENT_GREEK_NUMBERS" init_value "
            new UnicodeBlock(\"ANCIENT_GREEK_NUMBERS\",
                             \"ANCIENT GREEK NUMBERS\",
                             \"ANCIENTGREEKNUMBERS\")" class_relation const_relation public
	      comment "
Constant for the \"Ancient Greek Numbers\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058178 // ANCIENT_GREEK_NUMBERS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058306 // ANCIENT_SYMBOLS (<unidirectional association>)
	  relation 3058306 --->
	    a role_name "ANCIENT_SYMBOLS" init_value "
            new UnicodeBlock(\"ANCIENT_SYMBOLS\",
                             \"ANCIENT SYMBOLS\",
                             \"ANCIENTSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Ancient Symbols\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058306 // ANCIENT_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058434 // PHAISTOS_DISC (<unidirectional association>)
	  relation 3058434 --->
	    a role_name "PHAISTOS_DISC" init_value "
            new UnicodeBlock(\"PHAISTOS_DISC\",
                             \"PHAISTOS DISC\",
                             \"PHAISTOSDISC\")" class_relation const_relation public
	      comment "
Constant for the \"Phaistos Disc\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058434 // PHAISTOS_DISC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058562 // LYCIAN (<unidirectional association>)
	  relation 3058562 --->
	    a role_name "LYCIAN" init_value "
            new UnicodeBlock(\"LYCIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Lycian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058562 // LYCIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058690 // CARIAN (<unidirectional association>)
	  relation 3058690 --->
	    a role_name "CARIAN" init_value "
            new UnicodeBlock(\"CARIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Carian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058690 // CARIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058818 // OLD_PERSIAN (<unidirectional association>)
	  relation 3058818 --->
	    a role_name "OLD_PERSIAN" init_value "
            new UnicodeBlock(\"OLD_PERSIAN\",
                             \"OLD PERSIAN\",
                             \"OLDPERSIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Old Persian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058818 // OLD_PERSIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3058946 // IMPERIAL_ARAMAIC (<unidirectional association>)
	  relation 3058946 --->
	    a role_name "IMPERIAL_ARAMAIC" init_value "
            new UnicodeBlock(\"IMPERIAL_ARAMAIC\",
                             \"IMPERIAL ARAMAIC\",
                             \"IMPERIALARAMAIC\")" class_relation const_relation public
	      comment "
Constant for the \"Imperial Aramaic\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3058946 // IMPERIAL_ARAMAIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059074 // PHOENICIAN (<unidirectional association>)
	  relation 3059074 --->
	    a role_name "PHOENICIAN" init_value "
            new UnicodeBlock(\"PHOENICIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Phoenician\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059074 // PHOENICIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059202 // LYDIAN (<unidirectional association>)
	  relation 3059202 --->
	    a role_name "LYDIAN" init_value "
            new UnicodeBlock(\"LYDIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Lydian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059202 // LYDIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059330 // KHAROSHTHI (<unidirectional association>)
	  relation 3059330 --->
	    a role_name "KHAROSHTHI" init_value "
            new UnicodeBlock(\"KHAROSHTHI\")" class_relation const_relation public
	      comment "
Constant for the \"Kharoshthi\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059330 // KHAROSHTHI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059458 // OLD_SOUTH_ARABIAN (<unidirectional association>)
	  relation 3059458 --->
	    a role_name "OLD_SOUTH_ARABIAN" init_value "
            new UnicodeBlock(\"OLD_SOUTH_ARABIAN\",
                             \"OLD SOUTH ARABIAN\",
                             \"OLDSOUTHARABIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Old South Arabian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059458 // OLD_SOUTH_ARABIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059586 // AVESTAN (<unidirectional association>)
	  relation 3059586 --->
	    a role_name "AVESTAN" init_value "
            new UnicodeBlock(\"AVESTAN\")" class_relation const_relation public
	      comment "
Constant for the \"Avestan\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059586 // AVESTAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059714 // INSCRIPTIONAL_PARTHIAN (<unidirectional association>)
	  relation 3059714 --->
	    a role_name "INSCRIPTIONAL_PARTHIAN" init_value "
            new UnicodeBlock(\"INSCRIPTIONAL_PARTHIAN\",
                             \"INSCRIPTIONAL PARTHIAN\",
                             \"INSCRIPTIONALPARTHIAN\")" class_relation const_relation public
	      comment "
Constant for the \"Inscriptional Parthian\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059714 // INSCRIPTIONAL_PARTHIAN (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059842 // INSCRIPTIONAL_PAHLAVI (<unidirectional association>)
	  relation 3059842 --->
	    a role_name "INSCRIPTIONAL_PAHLAVI" init_value "
            new UnicodeBlock(\"INSCRIPTIONAL_PAHLAVI\",
                             \"INSCRIPTIONAL PAHLAVI\",
                             \"INSCRIPTIONALPAHLAVI\")" class_relation const_relation public
	      comment "
Constant for the \"Inscriptional Pahlavi\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059842 // INSCRIPTIONAL_PAHLAVI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3059970 // OLD_TURKIC (<unidirectional association>)
	  relation 3059970 --->
	    a role_name "OLD_TURKIC" init_value "
            new UnicodeBlock(\"OLD_TURKIC\",
                             \"OLD TURKIC\",
                             \"OLDTURKIC\")" class_relation const_relation public
	      comment "
Constant for the \"Old Turkic\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3059970 // OLD_TURKIC (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060098 // RUMI_NUMERAL_SYMBOLS (<unidirectional association>)
	  relation 3060098 --->
	    a role_name "RUMI_NUMERAL_SYMBOLS" init_value "
            new UnicodeBlock(\"RUMI_NUMERAL_SYMBOLS\",
                             \"RUMI NUMERAL SYMBOLS\",
                             \"RUMINUMERALSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Rumi Numeral Symbols\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060098 // RUMI_NUMERAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060226 // BRAHMI (<unidirectional association>)
	  relation 3060226 --->
	    a role_name "BRAHMI" init_value "
            new UnicodeBlock(\"BRAHMI\")" class_relation const_relation public
	      comment "
Constant for the \"Brahmi\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060226 // BRAHMI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060354 // KAITHI (<unidirectional association>)
	  relation 3060354 --->
	    a role_name "KAITHI" init_value "
            new UnicodeBlock(\"KAITHI\")" class_relation const_relation public
	      comment "
Constant for the \"Kaithi\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060354 // KAITHI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060482 // CUNEIFORM (<unidirectional association>)
	  relation 3060482 --->
	    a role_name "CUNEIFORM" init_value "
            new UnicodeBlock(\"CUNEIFORM\")" class_relation const_relation public
	      comment "
Constant for the \"Cuneiform\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060482 // CUNEIFORM (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060610 // CUNEIFORM_NUMBERS_AND_PUNCTUATION (<unidirectional association>)
	  relation 3060610 --->
	    a role_name "CUNEIFORM_NUMBERS_AND_PUNCTUATION" init_value "
            new UnicodeBlock(\"CUNEIFORM_NUMBERS_AND_PUNCTUATION\",
                             \"CUNEIFORM NUMBERS AND PUNCTUATION\",
                             \"CUNEIFORMNUMBERSANDPUNCTUATION\")" class_relation const_relation public
	      comment "
Constant for the \"Cuneiform Numbers and Punctuation\" Unicode
character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060610 // CUNEIFORM_NUMBERS_AND_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060738 // EGYPTIAN_HIEROGLYPHS (<unidirectional association>)
	  relation 3060738 --->
	    a role_name "EGYPTIAN_HIEROGLYPHS" init_value "
            new UnicodeBlock(\"EGYPTIAN_HIEROGLYPHS\",
                             \"EGYPTIAN HIEROGLYPHS\",
                             \"EGYPTIANHIEROGLYPHS\")" class_relation const_relation public
	      comment "
Constant for the \"Egyptian Hieroglyphs\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060738 // EGYPTIAN_HIEROGLYPHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060866 // BAMUM_SUPPLEMENT (<unidirectional association>)
	  relation 3060866 --->
	    a role_name "BAMUM_SUPPLEMENT" init_value "
            new UnicodeBlock(\"BAMUM_SUPPLEMENT\",
                             \"BAMUM SUPPLEMENT\",
                             \"BAMUMSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Bamum Supplement\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060866 // BAMUM_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3060994 // KANA_SUPPLEMENT (<unidirectional association>)
	  relation 3060994 --->
	    a role_name "KANA_SUPPLEMENT" init_value "
            new UnicodeBlock(\"KANA_SUPPLEMENT\",
                             \"KANA SUPPLEMENT\",
                             \"KANASUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Kana Supplement\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3060994 // KANA_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061122 // ANCIENT_GREEK_MUSICAL_NOTATION (<unidirectional association>)
	  relation 3061122 --->
	    a role_name "ANCIENT_GREEK_MUSICAL_NOTATION" init_value "
            new UnicodeBlock(\"ANCIENT_GREEK_MUSICAL_NOTATION\",
                             \"ANCIENT GREEK MUSICAL NOTATION\",
                             \"ANCIENTGREEKMUSICALNOTATION\")" class_relation const_relation public
	      comment "
Constant for the \"Ancient Greek Musical Notation\" Unicode character
block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061122 // ANCIENT_GREEK_MUSICAL_NOTATION (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061250 // COUNTING_ROD_NUMERALS (<unidirectional association>)
	  relation 3061250 --->
	    a role_name "COUNTING_ROD_NUMERALS" init_value "
            new UnicodeBlock(\"COUNTING_ROD_NUMERALS\",
                             \"COUNTING ROD NUMERALS\",
                             \"COUNTINGRODNUMERALS\")" class_relation const_relation public
	      comment "
Constant for the \"Counting Rod Numerals\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061250 // COUNTING_ROD_NUMERALS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061378 // MAHJONG_TILES (<unidirectional association>)
	  relation 3061378 --->
	    a role_name "MAHJONG_TILES" init_value "
            new UnicodeBlock(\"MAHJONG_TILES\",
                             \"MAHJONG TILES\",
                             \"MAHJONGTILES\")" class_relation const_relation public
	      comment "
Constant for the \"Mahjong Tiles\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061378 // MAHJONG_TILES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061506 // DOMINO_TILES (<unidirectional association>)
	  relation 3061506 --->
	    a role_name "DOMINO_TILES" init_value "
            new UnicodeBlock(\"DOMINO_TILES\",
                             \"DOMINO TILES\",
                             \"DOMINOTILES\")" class_relation const_relation public
	      comment "
Constant for the \"Domino Tiles\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061506 // DOMINO_TILES (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061634 // PLAYING_CARDS (<unidirectional association>)
	  relation 3061634 --->
	    a role_name "PLAYING_CARDS" init_value "
            new UnicodeBlock(\"PLAYING_CARDS\",
                             \"PLAYING CARDS\",
                             \"PLAYINGCARDS\")" class_relation const_relation public
	      comment "
Constant for the \"Playing Cards\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061634 // PLAYING_CARDS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061762 // ENCLOSED_ALPHANUMERIC_SUPPLEMENT (<unidirectional association>)
	  relation 3061762 --->
	    a role_name "ENCLOSED_ALPHANUMERIC_SUPPLEMENT" init_value "
            new UnicodeBlock(\"ENCLOSED_ALPHANUMERIC_SUPPLEMENT\",
                             \"ENCLOSED ALPHANUMERIC SUPPLEMENT\",
                             \"ENCLOSEDALPHANUMERICSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Enclosed Alphanumeric Supplement\" Unicode character
block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061762 // ENCLOSED_ALPHANUMERIC_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3061890 // ENCLOSED_IDEOGRAPHIC_SUPPLEMENT (<unidirectional association>)
	  relation 3061890 --->
	    a role_name "ENCLOSED_IDEOGRAPHIC_SUPPLEMENT" init_value "
            new UnicodeBlock(\"ENCLOSED_IDEOGRAPHIC_SUPPLEMENT\",
                             \"ENCLOSED IDEOGRAPHIC SUPPLEMENT\",
                             \"ENCLOSEDIDEOGRAPHICSUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Enclosed Ideographic Supplement\" Unicode character
block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3061890 // ENCLOSED_IDEOGRAPHIC_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062018 // MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS (<unidirectional association>)
	  relation 3062018 --->
	    a role_name "MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS" init_value "
            new UnicodeBlock(\"MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS\",
                             \"MISCELLANEOUS SYMBOLS AND PICTOGRAPHS\",
                             \"MISCELLANEOUSSYMBOLSANDPICTOGRAPHS\")" class_relation const_relation public
	      comment "
Constant for the \"Miscellaneous Symbols And Pictographs\" Unicode
character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062018 // MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062146 // EMOTICONS (<unidirectional association>)
	  relation 3062146 --->
	    a role_name "EMOTICONS" init_value "
            new UnicodeBlock(\"EMOTICONS\")" class_relation const_relation public
	      comment "
Constant for the \"Emoticons\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062146 // EMOTICONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062274 // TRANSPORT_AND_MAP_SYMBOLS (<unidirectional association>)
	  relation 3062274 --->
	    a role_name "TRANSPORT_AND_MAP_SYMBOLS" init_value "
            new UnicodeBlock(\"TRANSPORT_AND_MAP_SYMBOLS\",
                             \"TRANSPORT AND MAP SYMBOLS\",
                             \"TRANSPORTANDMAPSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Transport And Map Symbols\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062274 // TRANSPORT_AND_MAP_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062402 // ALCHEMICAL_SYMBOLS (<unidirectional association>)
	  relation 3062402 --->
	    a role_name "ALCHEMICAL_SYMBOLS" init_value "
            new UnicodeBlock(\"ALCHEMICAL_SYMBOLS\",
                             \"ALCHEMICAL SYMBOLS\",
                             \"ALCHEMICALSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Alchemical Symbols\" Unicode character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062402 // ALCHEMICAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062530 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C (<unidirectional association>)
	  relation 3062530 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C" init_value "
            new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C\",
                             \"CJK UNIFIED IDEOGRAPHS EXTENSION C\",
                             \"CJKUNIFIEDIDEOGRAPHSEXTENSIONC\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Unified Ideographs Extension C\" Unicode
character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062530 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062658 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D (<unidirectional association>)
	  relation 3062658 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D" init_value "
            new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D\",
                             \"CJK UNIFIED IDEOGRAPHS EXTENSION D\",
                             \"CJKUNIFIEDIDEOGRAPHSEXTENSIOND\")" class_relation const_relation public
	      comment "
Constant for the \"CJK Unified Ideographs Extension D\" Unicode
character block.
@since 1.7

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062658 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062786 // ARABIC_EXTENDED_A (<unidirectional association>)
	  relation 3062786 --->
	    a role_name "ARABIC_EXTENDED_A" init_value "
            new UnicodeBlock(\"ARABIC_EXTENDED_A\",
                             \"ARABIC EXTENDED-A\",
                             \"ARABICEXTENDED-A\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic Extended-A\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062786 // ARABIC_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3062914 // SUNDANESE_SUPPLEMENT (<unidirectional association>)
	  relation 3062914 --->
	    a role_name "SUNDANESE_SUPPLEMENT" init_value "
            new UnicodeBlock(\"SUNDANESE_SUPPLEMENT\",
                             \"SUNDANESE SUPPLEMENT\",
                             \"SUNDANESESUPPLEMENT\")" class_relation const_relation public
	      comment "
Constant for the \"Sundanese Supplement\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3062914 // SUNDANESE_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063042 // MEETEI_MAYEK_EXTENSIONS (<unidirectional association>)
	  relation 3063042 --->
	    a role_name "MEETEI_MAYEK_EXTENSIONS" init_value "
            new UnicodeBlock(\"MEETEI_MAYEK_EXTENSIONS\",
                             \"MEETEI MAYEK EXTENSIONS\",
                             \"MEETEIMAYEKEXTENSIONS\")" class_relation const_relation public
	      comment "
Constant for the \"Meetei Mayek Extensions\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063042 // MEETEI_MAYEK_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063170 // MEROITIC_HIEROGLYPHS (<unidirectional association>)
	  relation 3063170 --->
	    a role_name "MEROITIC_HIEROGLYPHS" init_value "
            new UnicodeBlock(\"MEROITIC_HIEROGLYPHS\",
                             \"MEROITIC HIEROGLYPHS\",
                             \"MEROITICHIEROGLYPHS\")" class_relation const_relation public
	      comment "
Constant for the \"Meroitic Hieroglyphs\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063170 // MEROITIC_HIEROGLYPHS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063298 // MEROITIC_CURSIVE (<unidirectional association>)
	  relation 3063298 --->
	    a role_name "MEROITIC_CURSIVE" init_value "
            new UnicodeBlock(\"MEROITIC_CURSIVE\",
                             \"MEROITIC CURSIVE\",
                             \"MEROITICCURSIVE\")" class_relation const_relation public
	      comment "
Constant for the \"Meroitic Cursive\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063298 // MEROITIC_CURSIVE (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063426 // SORA_SOMPENG (<unidirectional association>)
	  relation 3063426 --->
	    a role_name "SORA_SOMPENG" init_value "
            new UnicodeBlock(\"SORA_SOMPENG\",
                             \"SORA SOMPENG\",
                             \"SORASOMPENG\")" class_relation const_relation public
	      comment "
Constant for the \"Sora Sompeng\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063426 // SORA_SOMPENG (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063554 // CHAKMA (<unidirectional association>)
	  relation 3063554 --->
	    a role_name "CHAKMA" init_value "
            new UnicodeBlock(\"CHAKMA\")" class_relation const_relation public
	      comment "
Constant for the \"Chakma\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063554 // CHAKMA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063682 // SHARADA (<unidirectional association>)
	  relation 3063682 --->
	    a role_name "SHARADA" init_value "
            new UnicodeBlock(\"SHARADA\")" class_relation const_relation public
	      comment "
Constant for the \"Sharada\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063682 // SHARADA (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063810 // TAKRI (<unidirectional association>)
	  relation 3063810 --->
	    a role_name "TAKRI" init_value "
            new UnicodeBlock(\"TAKRI\")" class_relation const_relation public
	      comment "
Constant for the \"Takri\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063810 // TAKRI (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3063938 // MIAO (<unidirectional association>)
	  relation 3063938 --->
	    a role_name "MIAO" init_value "
            new UnicodeBlock(\"MIAO\")" class_relation const_relation public
	      comment "
Constant for the \"Miao\" Unicode character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3063938 // MIAO (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	classrelation 3064066 // ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS (<unidirectional association>)
	  relation 3064066 --->
	    a role_name "ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS" init_value "
            new UnicodeBlock(\"ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS\",
                             \"ARABIC MATHEMATICAL ALPHABETIC SYMBOLS\",
                             \"ARABICMATHEMATICALALPHABETICSYMBOLS\")" class_relation const_relation public
	      comment "
Constant for the \"Arabic Mathematical Alphabetic Symbols\" Unicode
character block.
@since 1.8

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3064066 // ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	attribute 1580802 "blockStarts"
	  class_attribute const_attribute private explicit_type "int"
	  multiplicity "[]"
	  init_value " {
            0x0000,   // 0000..007F; Basic Latin
            0x0080,   // 0080..00FF; Latin-1 Supplement
            0x0100,   // 0100..017F; Latin Extended-A
            0x0180,   // 0180..024F; Latin Extended-B
            0x0250,   // 0250..02AF; IPA Extensions
            0x02B0,   // 02B0..02FF; Spacing Modifier Letters
            0x0300,   // 0300..036F; Combining Diacritical Marks
            0x0370,   // 0370..03FF; Greek and Coptic
            0x0400,   // 0400..04FF; Cyrillic
            0x0500,   // 0500..052F; Cyrillic Supplement
            0x0530,   // 0530..058F; Armenian
            0x0590,   // 0590..05FF; Hebrew
            0x0600,   // 0600..06FF; Arabic
            0x0700,   // 0700..074F; Syriac
            0x0750,   // 0750..077F; Arabic Supplement
            0x0780,   // 0780..07BF; Thaana
            0x07C0,   // 07C0..07FF; NKo
            0x0800,   // 0800..083F; Samaritan
            0x0840,   // 0840..085F; Mandaic
            0x0860,   //             unassigned
            0x08A0,   // 08A0..08FF; Arabic Extended-A
            0x0900,   // 0900..097F; Devanagari
            0x0980,   // 0980..09FF; Bengali
            0x0A00,   // 0A00..0A7F; Gurmukhi
            0x0A80,   // 0A80..0AFF; Gujarati
            0x0B00,   // 0B00..0B7F; Oriya
            0x0B80,   // 0B80..0BFF; Tamil
            0x0C00,   // 0C00..0C7F; Telugu
            0x0C80,   // 0C80..0CFF; Kannada
            0x0D00,   // 0D00..0D7F; Malayalam
            0x0D80,   // 0D80..0DFF; Sinhala
            0x0E00,   // 0E00..0E7F; Thai
            0x0E80,   // 0E80..0EFF; Lao
            0x0F00,   // 0F00..0FFF; Tibetan
            0x1000,   // 1000..109F; Myanmar
            0x10A0,   // 10A0..10FF; Georgian
            0x1100,   // 1100..11FF; Hangul Jamo
            0x1200,   // 1200..137F; Ethiopic
            0x1380,   // 1380..139F; Ethiopic Supplement
            0x13A0,   // 13A0..13FF; Cherokee
            0x1400,   // 1400..167F; Unified Canadian Aboriginal Syllabics
            0x1680,   // 1680..169F; Ogham
            0x16A0,   // 16A0..16FF; Runic
            0x1700,   // 1700..171F; Tagalog
            0x1720,   // 1720..173F; Hanunoo
            0x1740,   // 1740..175F; Buhid
            0x1760,   // 1760..177F; Tagbanwa
            0x1780,   // 1780..17FF; Khmer
            0x1800,   // 1800..18AF; Mongolian
            0x18B0,   // 18B0..18FF; Unified Canadian Aboriginal Syllabics Extended
            0x1900,   // 1900..194F; Limbu
            0x1950,   // 1950..197F; Tai Le
            0x1980,   // 1980..19DF; New Tai Lue
            0x19E0,   // 19E0..19FF; Khmer Symbols
            0x1A00,   // 1A00..1A1F; Buginese
            0x1A20,   // 1A20..1AAF; Tai Tham
            0x1AB0,   //             unassigned
            0x1B00,   // 1B00..1B7F; Balinese
            0x1B80,   // 1B80..1BBF; Sundanese
            0x1BC0,   // 1BC0..1BFF; Batak
            0x1C00,   // 1C00..1C4F; Lepcha
            0x1C50,   // 1C50..1C7F; Ol Chiki
            0x1C80,   //             unassigned
            0x1CC0,   // 1CC0..1CCF; Sundanese Supplement
            0x1CD0,   // 1CD0..1CFF; Vedic Extensions
            0x1D00,   // 1D00..1D7F; Phonetic Extensions
            0x1D80,   // 1D80..1DBF; Phonetic Extensions Supplement
            0x1DC0,   // 1DC0..1DFF; Combining Diacritical Marks Supplement
            0x1E00,   // 1E00..1EFF; Latin Extended Additional
            0x1F00,   // 1F00..1FFF; Greek Extended
            0x2000,   // 2000..206F; General Punctuation
            0x2070,   // 2070..209F; Superscripts and Subscripts
            0x20A0,   // 20A0..20CF; Currency Symbols
            0x20D0,   // 20D0..20FF; Combining Diacritical Marks for Symbols
            0x2100,   // 2100..214F; Letterlike Symbols
            0x2150,   // 2150..218F; Number Forms
            0x2190,   // 2190..21FF; Arrows
            0x2200,   // 2200..22FF; Mathematical Operators
            0x2300,   // 2300..23FF; Miscellaneous Technical
            0x2400,   // 2400..243F; Control Pictures
            0x2440,   // 2440..245F; Optical Character Recognition
            0x2460,   // 2460..24FF; Enclosed Alphanumerics
            0x2500,   // 2500..257F; Box Drawing
            0x2580,   // 2580..259F; Block Elements
            0x25A0,   // 25A0..25FF; Geometric Shapes
            0x2600,   // 2600..26FF; Miscellaneous Symbols
            0x2700,   // 2700..27BF; Dingbats
            0x27C0,   // 27C0..27EF; Miscellaneous Mathematical Symbols-A
            0x27F0,   // 27F0..27FF; Supplemental Arrows-A
            0x2800,   // 2800..28FF; Braille Patterns
            0x2900,   // 2900..297F; Supplemental Arrows-B
            0x2980,   // 2980..29FF; Miscellaneous Mathematical Symbols-B
            0x2A00,   // 2A00..2AFF; Supplemental Mathematical Operators
            0x2B00,   // 2B00..2BFF; Miscellaneous Symbols and Arrows
            0x2C00,   // 2C00..2C5F; Glagolitic
            0x2C60,   // 2C60..2C7F; Latin Extended-C
            0x2C80,   // 2C80..2CFF; Coptic
            0x2D00,   // 2D00..2D2F; Georgian Supplement
            0x2D30,   // 2D30..2D7F; Tifinagh
            0x2D80,   // 2D80..2DDF; Ethiopic Extended
            0x2DE0,   // 2DE0..2DFF; Cyrillic Extended-A
            0x2E00,   // 2E00..2E7F; Supplemental Punctuation
            0x2E80,   // 2E80..2EFF; CJK Radicals Supplement
            0x2F00,   // 2F00..2FDF; Kangxi Radicals
            0x2FE0,   //             unassigned
            0x2FF0,   // 2FF0..2FFF; Ideographic Description Characters
            0x3000,   // 3000..303F; CJK Symbols and Punctuation
            0x3040,   // 3040..309F; Hiragana
            0x30A0,   // 30A0..30FF; Katakana
            0x3100,   // 3100..312F; Bopomofo
            0x3130,   // 3130..318F; Hangul Compatibility Jamo
            0x3190,   // 3190..319F; Kanbun
            0x31A0,   // 31A0..31BF; Bopomofo Extended
            0x31C0,   // 31C0..31EF; CJK Strokes
            0x31F0,   // 31F0..31FF; Katakana Phonetic Extensions
            0x3200,   // 3200..32FF; Enclosed CJK Letters and Months
            0x3300,   // 3300..33FF; CJK Compatibility
            0x3400,   // 3400..4DBF; CJK Unified Ideographs Extension A
            0x4DC0,   // 4DC0..4DFF; Yijing Hexagram Symbols
            0x4E00,   // 4E00..9FFF; CJK Unified Ideographs
            0xA000,   // A000..A48F; Yi Syllables
            0xA490,   // A490..A4CF; Yi Radicals
            0xA4D0,   // A4D0..A4FF; Lisu
            0xA500,   // A500..A63F; Vai
            0xA640,   // A640..A69F; Cyrillic Extended-B
            0xA6A0,   // A6A0..A6FF; Bamum
            0xA700,   // A700..A71F; Modifier Tone Letters
            0xA720,   // A720..A7FF; Latin Extended-D
            0xA800,   // A800..A82F; Syloti Nagri
            0xA830,   // A830..A83F; Common Indic Number Forms
            0xA840,   // A840..A87F; Phags-pa
            0xA880,   // A880..A8DF; Saurashtra
            0xA8E0,   // A8E0..A8FF; Devanagari Extended
            0xA900,   // A900..A92F; Kayah Li
            0xA930,   // A930..A95F; Rejang
            0xA960,   // A960..A97F; Hangul Jamo Extended-A
            0xA980,   // A980..A9DF; Javanese
            0xA9E0,   //             unassigned
            0xAA00,   // AA00..AA5F; Cham
            0xAA60,   // AA60..AA7F; Myanmar Extended-A
            0xAA80,   // AA80..AADF; Tai Viet
            0xAAE0,   // AAE0..AAFF; Meetei Mayek Extensions
            0xAB00,   // AB00..AB2F; Ethiopic Extended-A
            0xAB30,   //             unassigned
            0xABC0,   // ABC0..ABFF; Meetei Mayek
            0xAC00,   // AC00..D7AF; Hangul Syllables
            0xD7B0,   // D7B0..D7FF; Hangul Jamo Extended-B
            0xD800,   // D800..DB7F; High Surrogates
            0xDB80,   // DB80..DBFF; High Private Use Surrogates
            0xDC00,   // DC00..DFFF; Low Surrogates
            0xE000,   // E000..F8FF; Private Use Area
            0xF900,   // F900..FAFF; CJK Compatibility Ideographs
            0xFB00,   // FB00..FB4F; Alphabetic Presentation Forms
            0xFB50,   // FB50..FDFF; Arabic Presentation Forms-A
            0xFE00,   // FE00..FE0F; Variation Selectors
            0xFE10,   // FE10..FE1F; Vertical Forms
            0xFE20,   // FE20..FE2F; Combining Half Marks
            0xFE30,   // FE30..FE4F; CJK Compatibility Forms
            0xFE50,   // FE50..FE6F; Small Form Variants
            0xFE70,   // FE70..FEFF; Arabic Presentation Forms-B
            0xFF00,   // FF00..FFEF; Halfwidth and Fullwidth Forms
            0xFFF0,   // FFF0..FFFF; Specials
            0x10000,  // 10000..1007F; Linear B Syllabary
            0x10080,  // 10080..100FF; Linear B Ideograms
            0x10100,  // 10100..1013F; Aegean Numbers
            0x10140,  // 10140..1018F; Ancient Greek Numbers
            0x10190,  // 10190..101CF; Ancient Symbols
            0x101D0,  // 101D0..101FF; Phaistos Disc
            0x10200,  //               unassigned
            0x10280,  // 10280..1029F; Lycian
            0x102A0,  // 102A0..102DF; Carian
            0x102E0,  //               unassigned
            0x10300,  // 10300..1032F; Old Italic
            0x10330,  // 10330..1034F; Gothic
            0x10350,  //               unassigned
            0x10380,  // 10380..1039F; Ugaritic
            0x103A0,  // 103A0..103DF; Old Persian
            0x103E0,  //               unassigned
            0x10400,  // 10400..1044F; Deseret
            0x10450,  // 10450..1047F; Shavian
            0x10480,  // 10480..104AF; Osmanya
            0x104B0,  //               unassigned
            0x10800,  // 10800..1083F; Cypriot Syllabary
            0x10840,  // 10840..1085F; Imperial Aramaic
            0x10860,  //               unassigned
            0x10900,  // 10900..1091F; Phoenician
            0x10920,  // 10920..1093F; Lydian
            0x10940,  //               unassigned
            0x10980,  // 10980..1099F; Meroitic Hieroglyphs
            0x109A0,  // 109A0..109FF; Meroitic Cursive
            0x10A00,  // 10A00..10A5F; Kharoshthi
            0x10A60,  // 10A60..10A7F; Old South Arabian
            0x10A80,  //               unassigned
            0x10B00,  // 10B00..10B3F; Avestan
            0x10B40,  // 10B40..10B5F; Inscriptional Parthian
            0x10B60,  // 10B60..10B7F; Inscriptional Pahlavi
            0x10B80,  //               unassigned
            0x10C00,  // 10C00..10C4F; Old Turkic
            0x10C50,  //               unassigned
            0x10E60,  // 10E60..10E7F; Rumi Numeral Symbols
            0x10E80,  //               unassigned
            0x11000,  // 11000..1107F; Brahmi
            0x11080,  // 11080..110CF; Kaithi
            0x110D0,  // 110D0..110FF; Sora Sompeng
            0x11100,  // 11100..1114F; Chakma
            0x11150,  //               unassigned
            0x11180,  // 11180..111DF; Sharada
            0x111E0,  //               unassigned
            0x11680,  // 11680..116CF; Takri
            0x116D0,  //               unassigned
            0x12000,  // 12000..123FF; Cuneiform
            0x12400,  // 12400..1247F; Cuneiform Numbers and Punctuation
            0x12480,  //               unassigned
            0x13000,  // 13000..1342F; Egyptian Hieroglyphs
            0x13430,  //               unassigned
            0x16800,  // 16800..16A3F; Bamum Supplement
            0x16A40,  //               unassigned
            0x16F00,  // 16F00..16F9F; Miao
            0x16FA0,  //               unassigned
            0x1B000,  // 1B000..1B0FF; Kana Supplement
            0x1B100,  //               unassigned
            0x1D000,  // 1D000..1D0FF; Byzantine Musical Symbols
            0x1D100,  // 1D100..1D1FF; Musical Symbols
            0x1D200,  // 1D200..1D24F; Ancient Greek Musical Notation
            0x1D250,  //               unassigned
            0x1D300,  // 1D300..1D35F; Tai Xuan Jing Symbols
            0x1D360,  // 1D360..1D37F; Counting Rod Numerals
            0x1D380,  //               unassigned
            0x1D400,  // 1D400..1D7FF; Mathematical Alphanumeric Symbols
            0x1D800,  //               unassigned
            0x1EE00,  // 1EE00..1EEFF; Arabic Mathematical Alphabetic Symbols
            0x1EF00,  //               unassigned
            0x1F000,  // 1F000..1F02F; Mahjong Tiles
            0x1F030,  // 1F030..1F09F; Domino Tiles
            0x1F0A0,  // 1F0A0..1F0FF; Playing Cards
            0x1F100,  // 1F100..1F1FF; Enclosed Alphanumeric Supplement
            0x1F200,  // 1F200..1F2FF; Enclosed Ideographic Supplement
            0x1F300,  // 1F300..1F5FF; Miscellaneous Symbols And Pictographs
            0x1F600,  // 1F600..1F64F; Emoticons
            0x1F650,  //               unassigned
            0x1F680,  // 1F680..1F6FF; Transport And Map Symbols
            0x1F700,  // 1F700..1F77F; Alchemical Symbols
            0x1F780,  //               unassigned
            0x20000,  // 20000..2A6DF; CJK Unified Ideographs Extension B
            0x2A6E0,  //               unassigned
            0x2A700,  // 2A700..2B73F; CJK Unified Ideographs Extension C
            0x2B740,  // 2B740..2B81F; CJK Unified Ideographs Extension D
            0x2B820,  //               unassigned
            0x2F800,  // 2F800..2FA1F; CJK Compatibility Ideographs Supplement
            0x2FA20,  //               unassigned
            0xE0000,  // E0000..E007F; Tags
            0xE0080,  //               unassigned
            0xE0100,  // E0100..E01EF; Variation Selectors Supplement
            0xE01F0,  //               unassigned
            0xF0000,  // F0000..FFFFF; Supplementary Private Use Area-A
            0x100000  // 100000..10FFFF; Supplementary Private Use Area-B
        }"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3064194 // blocks (<unidirectional association>)
	  relation 3064194 --->
	    a role_name "blocks" multiplicity "[]" init_value " {
            BASIC_LATIN,
            LATIN_1_SUPPLEMENT,
            LATIN_EXTENDED_A,
            LATIN_EXTENDED_B,
            IPA_EXTENSIONS,
            SPACING_MODIFIER_LETTERS,
            COMBINING_DIACRITICAL_MARKS,
            GREEK,
            CYRILLIC,
            CYRILLIC_SUPPLEMENTARY,
            ARMENIAN,
            HEBREW,
            ARABIC,
            SYRIAC,
            ARABIC_SUPPLEMENT,
            THAANA,
            NKO,
            SAMARITAN,
            MANDAIC,
            null,
            ARABIC_EXTENDED_A,
            DEVANAGARI,
            BENGALI,
            GURMUKHI,
            GUJARATI,
            ORIYA,
            TAMIL,
            TELUGU,
            KANNADA,
            MALAYALAM,
            SINHALA,
            THAI,
            LAO,
            TIBETAN,
            MYANMAR,
            GEORGIAN,
            HANGUL_JAMO,
            ETHIOPIC,
            ETHIOPIC_SUPPLEMENT,
            CHEROKEE,
            UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS,
            OGHAM,
            RUNIC,
            TAGALOG,
            HANUNOO,
            BUHID,
            TAGBANWA,
            KHMER,
            MONGOLIAN,
            UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED,
            LIMBU,
            TAI_LE,
            NEW_TAI_LUE,
            KHMER_SYMBOLS,
            BUGINESE,
            TAI_THAM,
            null,
            BALINESE,
            SUNDANESE,
            BATAK,
            LEPCHA,
            OL_CHIKI,
            null,
            SUNDANESE_SUPPLEMENT,
            VEDIC_EXTENSIONS,
            PHONETIC_EXTENSIONS,
            PHONETIC_EXTENSIONS_SUPPLEMENT,
            COMBINING_DIACRITICAL_MARKS_SUPPLEMENT,
            LATIN_EXTENDED_ADDITIONAL,
            GREEK_EXTENDED,
            GENERAL_PUNCTUATION,
            SUPERSCRIPTS_AND_SUBSCRIPTS,
            CURRENCY_SYMBOLS,
            COMBINING_MARKS_FOR_SYMBOLS,
            LETTERLIKE_SYMBOLS,
            NUMBER_FORMS,
            ARROWS,
            MATHEMATICAL_OPERATORS,
            MISCELLANEOUS_TECHNICAL,
            CONTROL_PICTURES,
            OPTICAL_CHARACTER_RECOGNITION,
            ENCLOSED_ALPHANUMERICS,
            BOX_DRAWING,
            BLOCK_ELEMENTS,
            GEOMETRIC_SHAPES,
            MISCELLANEOUS_SYMBOLS,
            DINGBATS,
            MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A,
            SUPPLEMENTAL_ARROWS_A,
            BRAILLE_PATTERNS,
            SUPPLEMENTAL_ARROWS_B,
            MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B,
            SUPPLEMENTAL_MATHEMATICAL_OPERATORS,
            MISCELLANEOUS_SYMBOLS_AND_ARROWS,
            GLAGOLITIC,
            LATIN_EXTENDED_C,
            COPTIC,
            GEORGIAN_SUPPLEMENT,
            TIFINAGH,
            ETHIOPIC_EXTENDED,
            CYRILLIC_EXTENDED_A,
            SUPPLEMENTAL_PUNCTUATION,
            CJK_RADICALS_SUPPLEMENT,
            KANGXI_RADICALS,
            null,
            IDEOGRAPHIC_DESCRIPTION_CHARACTERS,
            CJK_SYMBOLS_AND_PUNCTUATION,
            HIRAGANA,
            KATAKANA,
            BOPOMOFO,
            HANGUL_COMPATIBILITY_JAMO,
            KANBUN,
            BOPOMOFO_EXTENDED,
            CJK_STROKES,
            KATAKANA_PHONETIC_EXTENSIONS,
            ENCLOSED_CJK_LETTERS_AND_MONTHS,
            CJK_COMPATIBILITY,
            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A,
            YIJING_HEXAGRAM_SYMBOLS,
            CJK_UNIFIED_IDEOGRAPHS,
            YI_SYLLABLES,
            YI_RADICALS,
            LISU,
            VAI,
            CYRILLIC_EXTENDED_B,
            BAMUM,
            MODIFIER_TONE_LETTERS,
            LATIN_EXTENDED_D,
            SYLOTI_NAGRI,
            COMMON_INDIC_NUMBER_FORMS,
            PHAGS_PA,
            SAURASHTRA,
            DEVANAGARI_EXTENDED,
            KAYAH_LI,
            REJANG,
            HANGUL_JAMO_EXTENDED_A,
            JAVANESE,
            null,
            CHAM,
            MYANMAR_EXTENDED_A,
            TAI_VIET,
            MEETEI_MAYEK_EXTENSIONS,
            ETHIOPIC_EXTENDED_A,
            null,
            MEETEI_MAYEK,
            HANGUL_SYLLABLES,
            HANGUL_JAMO_EXTENDED_B,
            HIGH_SURROGATES,
            HIGH_PRIVATE_USE_SURROGATES,
            LOW_SURROGATES,
            PRIVATE_USE_AREA,
            CJK_COMPATIBILITY_IDEOGRAPHS,
            ALPHABETIC_PRESENTATION_FORMS,
            ARABIC_PRESENTATION_FORMS_A,
            VARIATION_SELECTORS,
            VERTICAL_FORMS,
            COMBINING_HALF_MARKS,
            CJK_COMPATIBILITY_FORMS,
            SMALL_FORM_VARIANTS,
            ARABIC_PRESENTATION_FORMS_B,
            HALFWIDTH_AND_FULLWIDTH_FORMS,
            SPECIALS,
            LINEAR_B_SYLLABARY,
            LINEAR_B_IDEOGRAMS,
            AEGEAN_NUMBERS,
            ANCIENT_GREEK_NUMBERS,
            ANCIENT_SYMBOLS,
            PHAISTOS_DISC,
            null,
            LYCIAN,
            CARIAN,
            null,
            OLD_ITALIC,
            GOTHIC,
            null,
            UGARITIC,
            OLD_PERSIAN,
            null,
            DESERET,
            SHAVIAN,
            OSMANYA,
            null,
            CYPRIOT_SYLLABARY,
            IMPERIAL_ARAMAIC,
            null,
            PHOENICIAN,
            LYDIAN,
            null,
            MEROITIC_HIEROGLYPHS,
            MEROITIC_CURSIVE,
            KHAROSHTHI,
            OLD_SOUTH_ARABIAN,
            null,
            AVESTAN,
            INSCRIPTIONAL_PARTHIAN,
            INSCRIPTIONAL_PAHLAVI,
            null,
            OLD_TURKIC,
            null,
            RUMI_NUMERAL_SYMBOLS,
            null,
            BRAHMI,
            KAITHI,
            SORA_SOMPENG,
            CHAKMA,
            null,
            SHARADA,
            null,
            TAKRI,
            null,
            CUNEIFORM,
            CUNEIFORM_NUMBERS_AND_PUNCTUATION,
            null,
            EGYPTIAN_HIEROGLYPHS,
            null,
            BAMUM_SUPPLEMENT,
            null,
            MIAO,
            null,
            KANA_SUPPLEMENT,
            null,
            BYZANTINE_MUSICAL_SYMBOLS,
            MUSICAL_SYMBOLS,
            ANCIENT_GREEK_MUSICAL_NOTATION,
            null,
            TAI_XUAN_JING_SYMBOLS,
            COUNTING_ROD_NUMERALS,
            null,
            MATHEMATICAL_ALPHANUMERIC_SYMBOLS,
            null,
            ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS,
            null,
            MAHJONG_TILES,
            DOMINO_TILES,
            PLAYING_CARDS,
            ENCLOSED_ALPHANUMERIC_SUPPLEMENT,
            ENCLOSED_IDEOGRAPHIC_SUPPLEMENT,
            MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS,
            EMOTICONS,
            null,
            TRANSPORT_AND_MAP_SYMBOLS,
            ALCHEMICAL_SYMBOLS,
            null,
            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B,
            null,
            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C,
            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D,
            null,
            CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT,
            null,
            TAGS,
            null,
            VARIATION_SELECTORS_SUPPLEMENT,
            null,
            SUPPLEMENTARY_PRIVATE_USE_AREA_A,
            SUPPLEMENTARY_PRIVATE_USE_AREA_B
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3064194 // blocks (<unidirectional association>)
	    b parent class_ref 895362 // UnicodeBlock
	end

	operation 6583426 "of"
	  class_operation public return_type class_ref 895362 // UnicodeBlock
	  nparams 1
	    param in name "c" explicit_type "char"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the object representing the Unicode block containing the
given character, or {@code null} if the character is not a
member of a defined block.

<p><b>Note:</b> This method cannot handle
<a href=\"Character.html#supplementary\"> supplementary
characters</a>.  To support all Unicode characters, including
supplementary characters, use the {@link #of(int)} method.

@param   c  The character in question
@return  The {@code UnicodeBlock} instance representing the
         Unicode block of which this character is a member, or
         {@code null} if the character is not a member of any
         Unicode block
"
	end

	operation 6583554 "of"
	  class_operation public return_type class_ref 895362 // UnicodeBlock
	  nparams 1
	    param in name "codePoint" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the object representing the Unicode block
containing the given character (Unicode code point), or
{@code null} if the character is not a member of a
defined block.

@param   codePoint the character (Unicode code point) in question.
@return  The {@code UnicodeBlock} instance representing the
         Unicode block of which this character is a member, or
         {@code null} if the character is not a member of any
         Unicode block
@exception IllegalArgumentException if the specified
{@code codePoint} is an invalid Unicode code point.
@see Character#isValidCodePoint(int)
@since   1.5
"
	end

	operation 6583682 "forName"
	  class_operation public return_type class_ref 895362 // UnicodeBlock
	  nparams 1
	    param inout name "blockName" type class_ref 128130 // String
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the UnicodeBlock with the given name. Block
names are determined by The Unicode Standard. The file
Blocks-&lt;version&gt;.txt defines blocks for a particular
version of the standard. The {@link Character} class specifies
the version of the standard that it supports.
<p>
This method accepts block names in the following forms:
<ol>
<li> Canonical block names as defined by the Unicode Standard.
For example, the standard defines a \"Basic Latin\" block. Therefore, this
method accepts \"Basic Latin\" as a valid block name. The documentation of
each UnicodeBlock provides the canonical name.
<li>Canonical block names with all spaces removed. For example, \"BasicLatin\"
is a valid block name for the \"Basic Latin\" block.
<li>The text representation of each constant UnicodeBlock identifier.
For example, this method will return the {@link #BASIC_LATIN} block if
provided with the \"BASIC_LATIN\" name. This form replaces all spaces and
hyphens in the canonical name with underscores.
</ol>
Finally, character case is ignored for all of the valid block name forms.
For example, \"BASIC_LATIN\" and \"basic_latin\" are both valid block names.
The en_US locale's case mapping rules are used to provide case-insensitive
string comparisons for block name validation.
<p>
If the Unicode Standard changes block names, both the previous and
current names will be accepted.

@param blockName A {@code UnicodeBlock} name.
@return The {@code UnicodeBlock} instance identified
        by {@code blockName}
@throws IllegalArgumentException if {@code blockName} is an
        invalid name
@throws NullPointerException if {@code blockName} is null
@since 1.5
"
	end
      end

      class 895490 "UnicodeScript"
	visibility public stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1580930 "COMMON"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Common\".

"
	end

	attribute 1581058 "LATIN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Latin\".

"
	end

	attribute 1581186 "GREEK"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Greek\".

"
	end

	attribute 1581314 "CYRILLIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Cyrillic\".

"
	end

	attribute 1581442 "ARMENIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Armenian\".

"
	end

	attribute 1581570 "HEBREW"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Hebrew\".

"
	end

	attribute 1581698 "ARABIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Arabic\".

"
	end

	attribute 1581826 "SYRIAC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Syriac\".

"
	end

	attribute 1581954 "THAANA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Thaana\".

"
	end

	attribute 1582082 "DEVANAGARI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Devanagari\".

"
	end

	attribute 1582210 "BENGALI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Bengali\".

"
	end

	attribute 1582338 "GURMUKHI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Gurmukhi\".

"
	end

	attribute 1582466 "GUJARATI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Gujarati\".

"
	end

	attribute 1582594 "ORIYA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Oriya\".

"
	end

	attribute 1582722 "TAMIL"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tamil\".

"
	end

	attribute 1582850 "TELUGU"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Telugu\".

"
	end

	attribute 1582978 "KANNADA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Kannada\".

"
	end

	attribute 1583106 "MALAYALAM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Malayalam\".

"
	end

	attribute 1583234 "SINHALA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Sinhala\".

"
	end

	attribute 1583362 "THAI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Thai\".

"
	end

	attribute 1583490 "LAO"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Lao\".

"
	end

	attribute 1583618 "TIBETAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tibetan\".

"
	end

	attribute 1583746 "MYANMAR"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Myanmar\".

"
	end

	attribute 1583874 "GEORGIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Georgian\".

"
	end

	attribute 1584002 "HANGUL"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Hangul\".

"
	end

	attribute 1584130 "ETHIOPIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Ethiopic\".

"
	end

	attribute 1584258 "CHEROKEE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Cherokee\".

"
	end

	attribute 1584386 "CANADIAN_ABORIGINAL"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Canadian_Aboriginal\".

"
	end

	attribute 1584514 "OGHAM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Ogham\".

"
	end

	attribute 1584642 "RUNIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Runic\".

"
	end

	attribute 1584770 "KHMER"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Khmer\".

"
	end

	attribute 1584898 "MONGOLIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Mongolian\".

"
	end

	attribute 1585026 "HIRAGANA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Hiragana\".

"
	end

	attribute 1585154 "KATAKANA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Katakana\".

"
	end

	attribute 1585282 "BOPOMOFO"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Bopomofo\".

"
	end

	attribute 1585410 "HAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Han\".

"
	end

	attribute 1585538 "YI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Yi\".

"
	end

	attribute 1585666 "OLD_ITALIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Old_Italic\".

"
	end

	attribute 1585794 "GOTHIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Gothic\".

"
	end

	attribute 1585922 "DESERET"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Deseret\".

"
	end

	attribute 1586050 "INHERITED"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Inherited\".

"
	end

	attribute 1586178 "TAGALOG"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tagalog\".

"
	end

	attribute 1586306 "HANUNOO"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Hanunoo\".

"
	end

	attribute 1586434 "BUHID"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Buhid\".

"
	end

	attribute 1586562 "TAGBANWA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tagbanwa\".

"
	end

	attribute 1586690 "LIMBU"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Limbu\".

"
	end

	attribute 1586818 "TAI_LE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tai_Le\".

"
	end

	attribute 1586946 "LINEAR_B"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Linear_B\".

"
	end

	attribute 1587074 "UGARITIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Ugaritic\".

"
	end

	attribute 1587202 "SHAVIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Shavian\".

"
	end

	attribute 1587330 "OSMANYA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Osmanya\".

"
	end

	attribute 1587458 "CYPRIOT"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Cypriot\".

"
	end

	attribute 1587586 "BRAILLE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Braille\".

"
	end

	attribute 1587714 "BUGINESE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Buginese\".

"
	end

	attribute 1587842 "COPTIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Coptic\".

"
	end

	attribute 1587970 "NEW_TAI_LUE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"New_Tai_Lue\".

"
	end

	attribute 1588098 "GLAGOLITIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Glagolitic\".

"
	end

	attribute 1588226 "TIFINAGH"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tifinagh\".

"
	end

	attribute 1588354 "SYLOTI_NAGRI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Syloti_Nagri\".

"
	end

	attribute 1588482 "OLD_PERSIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Old_Persian\".

"
	end

	attribute 1588610 "KHAROSHTHI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Kharoshthi\".

"
	end

	attribute 1588738 "BALINESE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Balinese\".

"
	end

	attribute 1588866 "CUNEIFORM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Cuneiform\".

"
	end

	attribute 1588994 "PHOENICIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Phoenician\".

"
	end

	attribute 1589122 "PHAGS_PA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Phags_Pa\".

"
	end

	attribute 1589250 "NKO"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Nko\".

"
	end

	attribute 1589378 "SUNDANESE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Sundanese\".

"
	end

	attribute 1589506 "BATAK"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Batak\".

"
	end

	attribute 1589634 "LEPCHA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Lepcha\".

"
	end

	attribute 1589762 "OL_CHIKI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Ol_Chiki\".

"
	end

	attribute 1589890 "VAI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Vai\".

"
	end

	attribute 1590018 "SAURASHTRA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Saurashtra\".

"
	end

	attribute 1590146 "KAYAH_LI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Kayah_Li\".

"
	end

	attribute 1590274 "REJANG"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Rejang\".

"
	end

	attribute 1590402 "LYCIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Lycian\".

"
	end

	attribute 1590530 "CARIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Carian\".

"
	end

	attribute 1590658 "LYDIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Lydian\".

"
	end

	attribute 1590786 "CHAM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Cham\".

"
	end

	attribute 1590914 "TAI_THAM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tai_Tham\".

"
	end

	attribute 1591042 "TAI_VIET"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Tai_Viet\".

"
	end

	attribute 1591170 "AVESTAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Avestan\".

"
	end

	attribute 1591298 "EGYPTIAN_HIEROGLYPHS"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Egyptian_Hieroglyphs\".

"
	end

	attribute 1591426 "SAMARITAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Samaritan\".

"
	end

	attribute 1591554 "MANDAIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Mandaic\".

"
	end

	attribute 1591682 "LISU"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Lisu\".

"
	end

	attribute 1591810 "BAMUM"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Bamum\".

"
	end

	attribute 1591938 "JAVANESE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Javanese\".

"
	end

	attribute 1592066 "MEETEI_MAYEK"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Meetei_Mayek\".

"
	end

	attribute 1592194 "IMPERIAL_ARAMAIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Imperial_Aramaic\".

"
	end

	attribute 1592322 "OLD_SOUTH_ARABIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Old_South_Arabian\".

"
	end

	attribute 1592450 "INSCRIPTIONAL_PARTHIAN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Inscriptional_Parthian\".

"
	end

	attribute 1592578 "INSCRIPTIONAL_PAHLAVI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Inscriptional_Pahlavi\".

"
	end

	attribute 1592706 "OLD_TURKIC"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Old_Turkic\".

"
	end

	attribute 1592834 "BRAHMI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Brahmi\".

"
	end

	attribute 1592962 "KAITHI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Kaithi\".

"
	end

	attribute 1593090 "MEROITIC_HIEROGLYPHS"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Meroitic Hieroglyphs\".

"
	end

	attribute 1593218 "MEROITIC_CURSIVE"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Meroitic Cursive\".

"
	end

	attribute 1593346 "SORA_SOMPENG"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Sora Sompeng\".

"
	end

	attribute 1593474 "CHAKMA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Chakma\".

"
	end

	attribute 1593602 "SHARADA"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Sharada\".

"
	end

	attribute 1593730 "TAKRI"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Takri\".

"
	end

	attribute 1593858 "MIAO"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Miao\".

"
	end

	attribute 1593986 "UNKNOWN"
	  public type class_ref 895490 // UnicodeScript
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Unicode script \"Unknown\".
"
	end

	attribute 1594114 "scriptStarts"
	  class_attribute const_attribute private explicit_type "int"
	  multiplicity "[]"
	  init_value " {
            0x0000,   // 0000..0040; COMMON
            0x0041,   // 0041..005A; LATIN
            0x005B,   // 005B..0060; COMMON
            0x0061,   // 0061..007A; LATIN
            0x007B,   // 007B..00A9; COMMON
            0x00AA,   // 00AA..00AA; LATIN
            0x00AB,   // 00AB..00B9; COMMON
            0x00BA,   // 00BA..00BA; LATIN
            0x00BB,   // 00BB..00BF; COMMON
            0x00C0,   // 00C0..00D6; LATIN
            0x00D7,   // 00D7..00D7; COMMON
            0x00D8,   // 00D8..00F6; LATIN
            0x00F7,   // 00F7..00F7; COMMON
            0x00F8,   // 00F8..02B8; LATIN
            0x02B9,   // 02B9..02DF; COMMON
            0x02E0,   // 02E0..02E4; LATIN
            0x02E5,   // 02E5..02E9; COMMON
            0x02EA,   // 02EA..02EB; BOPOMOFO
            0x02EC,   // 02EC..02FF; COMMON
            0x0300,   // 0300..036F; INHERITED
            0x0370,   // 0370..0373; GREEK
            0x0374,   // 0374..0374; COMMON
            0x0375,   // 0375..037D; GREEK
            0x037E,   // 037E..0383; COMMON
            0x0384,   // 0384..0384; GREEK
            0x0385,   // 0385..0385; COMMON
            0x0386,   // 0386..0386; GREEK
            0x0387,   // 0387..0387; COMMON
            0x0388,   // 0388..03E1; GREEK
            0x03E2,   // 03E2..03EF; COPTIC
            0x03F0,   // 03F0..03FF; GREEK
            0x0400,   // 0400..0484; CYRILLIC
            0x0485,   // 0485..0486; INHERITED
            0x0487,   // 0487..0530; CYRILLIC
            0x0531,   // 0531..0588; ARMENIAN
            0x0589,   // 0589..0589; COMMON
            0x058A,   // 058A..0590; ARMENIAN
            0x0591,   // 0591..05FF; HEBREW
            0x0600,   // 0600..060B; ARABIC
            0x060C,   // 060C..060C; COMMON
            0x060D,   // 060D..061A; ARABIC
            0x061B,   // 061B..061D; COMMON
            0x061E,   // 061E..061E; ARABIC
            0x061F,   // 061F..061F; COMMON
            0x0620,   // 0620..063F; ARABIC
            0x0640,   // 0640..0640; COMMON
            0x0641,   // 0641..064A; ARABIC
            0x064B,   // 064B..0655; INHERITED
            0x0656,   // 0656..065F; ARABIC
            0x0660,   // 0660..0669; COMMON
            0x066A,   // 066A..066F; ARABIC
            0x0670,   // 0670..0670; INHERITED
            0x0671,   // 0671..06DC; ARABIC
            0x06DD,   // 06DD..06DD; COMMON
            0x06DE,   // 06DE..06FF; ARABIC
            0x0700,   // 0700..074F; SYRIAC
            0x0750,   // 0750..077F; ARABIC
            0x0780,   // 0780..07BF; THAANA
            0x07C0,   // 07C0..07FF; NKO
            0x0800,   // 0800..083F; SAMARITAN
            0x0840,   // 0840..089F; MANDAIC
            0x08A0,   // 08A0..08FF; ARABIC
            0x0900,   // 0900..0950; DEVANAGARI
            0x0951,   // 0951..0952; INHERITED
            0x0953,   // 0953..0963; DEVANAGARI
            0x0964,   // 0964..0965; COMMON
            0x0966,   // 0966..0980; DEVANAGARI
            0x0981,   // 0981..0A00; BENGALI
            0x0A01,   // 0A01..0A80; GURMUKHI
            0x0A81,   // 0A81..0B00; GUJARATI
            0x0B01,   // 0B01..0B81; ORIYA
            0x0B82,   // 0B82..0C00; TAMIL
            0x0C01,   // 0C01..0C81; TELUGU
            0x0C82,   // 0C82..0CF0; KANNADA
            0x0D02,   // 0D02..0D81; MALAYALAM
            0x0D82,   // 0D82..0E00; SINHALA
            0x0E01,   // 0E01..0E3E; THAI
            0x0E3F,   // 0E3F..0E3F; COMMON
            0x0E40,   // 0E40..0E80; THAI
            0x0E81,   // 0E81..0EFF; LAO
            0x0F00,   // 0F00..0FD4; TIBETAN
            0x0FD5,   // 0FD5..0FD8; COMMON
            0x0FD9,   // 0FD9..0FFF; TIBETAN
            0x1000,   // 1000..109F; MYANMAR
            0x10A0,   // 10A0..10FA; GEORGIAN
            0x10FB,   // 10FB..10FB; COMMON
            0x10FC,   // 10FC..10FF; GEORGIAN
            0x1100,   // 1100..11FF; HANGUL
            0x1200,   // 1200..139F; ETHIOPIC
            0x13A0,   // 13A0..13FF; CHEROKEE
            0x1400,   // 1400..167F; CANADIAN_ABORIGINAL
            0x1680,   // 1680..169F; OGHAM
            0x16A0,   // 16A0..16EA; RUNIC
            0x16EB,   // 16EB..16ED; COMMON
            0x16EE,   // 16EE..16FF; RUNIC
            0x1700,   // 1700..171F; TAGALOG
            0x1720,   // 1720..1734; HANUNOO
            0x1735,   // 1735..173F; COMMON
            0x1740,   // 1740..175F; BUHID
            0x1760,   // 1760..177F; TAGBANWA
            0x1780,   // 1780..17FF; KHMER
            0x1800,   // 1800..1801; MONGOLIAN
            0x1802,   // 1802..1803; COMMON
            0x1804,   // 1804..1804; MONGOLIAN
            0x1805,   // 1805..1805; COMMON
            0x1806,   // 1806..18AF; MONGOLIAN
            0x18B0,   // 18B0..18FF; CANADIAN_ABORIGINAL
            0x1900,   // 1900..194F; LIMBU
            0x1950,   // 1950..197F; TAI_LE
            0x1980,   // 1980..19DF; NEW_TAI_LUE
            0x19E0,   // 19E0..19FF; KHMER
            0x1A00,   // 1A00..1A1F; BUGINESE
            0x1A20,   // 1A20..1AFF; TAI_THAM
            0x1B00,   // 1B00..1B7F; BALINESE
            0x1B80,   // 1B80..1BBF; SUNDANESE
            0x1BC0,   // 1BC0..1BFF; BATAK
            0x1C00,   // 1C00..1C4F; LEPCHA
            0x1C50,   // 1C50..1CBF; OL_CHIKI
            0x1CC0,   // 1CC0..1CCF; SUNDANESE
            0x1CD0,   // 1CD0..1CD2; INHERITED
            0x1CD3,   // 1CD3..1CD3; COMMON
            0x1CD4,   // 1CD4..1CE0; INHERITED
            0x1CE1,   // 1CE1..1CE1; COMMON
            0x1CE2,   // 1CE2..1CE8; INHERITED
            0x1CE9,   // 1CE9..1CEC; COMMON
            0x1CED,   // 1CED..1CED; INHERITED
            0x1CEE,   // 1CEE..1CF3; COMMON
            0x1CF4,   // 1CF4..1CF4; INHERITED
            0x1CF5,   // 1CF5..1CFF; COMMON
            0x1D00,   // 1D00..1D25; LATIN
            0x1D26,   // 1D26..1D2A; GREEK
            0x1D2B,   // 1D2B..1D2B; CYRILLIC
            0x1D2C,   // 1D2C..1D5C; LATIN
            0x1D5D,   // 1D5D..1D61; GREEK
            0x1D62,   // 1D62..1D65; LATIN
            0x1D66,   // 1D66..1D6A; GREEK
            0x1D6B,   // 1D6B..1D77; LATIN
            0x1D78,   // 1D78..1D78; CYRILLIC
            0x1D79,   // 1D79..1DBE; LATIN
            0x1DBF,   // 1DBF..1DBF; GREEK
            0x1DC0,   // 1DC0..1DFF; INHERITED
            0x1E00,   // 1E00..1EFF; LATIN
            0x1F00,   // 1F00..1FFF; GREEK
            0x2000,   // 2000..200B; COMMON
            0x200C,   // 200C..200D; INHERITED
            0x200E,   // 200E..2070; COMMON
            0x2071,   // 2071..2073; LATIN
            0x2074,   // 2074..207E; COMMON
            0x207F,   // 207F..207F; LATIN
            0x2080,   // 2080..208F; COMMON
            0x2090,   // 2090..209F; LATIN
            0x20A0,   // 20A0..20CF; COMMON
            0x20D0,   // 20D0..20FF; INHERITED
            0x2100,   // 2100..2125; COMMON
            0x2126,   // 2126..2126; GREEK
            0x2127,   // 2127..2129; COMMON
            0x212A,   // 212A..212B; LATIN
            0x212C,   // 212C..2131; COMMON
            0x2132,   // 2132..2132; LATIN
            0x2133,   // 2133..214D; COMMON
            0x214E,   // 214E..214E; LATIN
            0x214F,   // 214F..215F; COMMON
            0x2160,   // 2160..2188; LATIN
            0x2189,   // 2189..27FF; COMMON
            0x2800,   // 2800..28FF; BRAILLE
            0x2900,   // 2900..2BFF; COMMON
            0x2C00,   // 2C00..2C5F; GLAGOLITIC
            0x2C60,   // 2C60..2C7F; LATIN
            0x2C80,   // 2C80..2CFF; COPTIC
            0x2D00,   // 2D00..2D2F; GEORGIAN
            0x2D30,   // 2D30..2D7F; TIFINAGH
            0x2D80,   // 2D80..2DDF; ETHIOPIC
            0x2DE0,   // 2DE0..2DFF; CYRILLIC
            0x2E00,   // 2E00..2E7F; COMMON
            0x2E80,   // 2E80..2FEF; HAN
            0x2FF0,   // 2FF0..3004; COMMON
            0x3005,   // 3005..3005; HAN
            0x3006,   // 3006..3006; COMMON
            0x3007,   // 3007..3007; HAN
            0x3008,   // 3008..3020; COMMON
            0x3021,   // 3021..3029; HAN
            0x302A,   // 302A..302D; INHERITED
            0x302E,   // 302E..302F; HANGUL
            0x3030,   // 3030..3037; COMMON
            0x3038,   // 3038..303B; HAN
            0x303C,   // 303C..3040; COMMON
            0x3041,   // 3041..3098; HIRAGANA
            0x3099,   // 3099..309A; INHERITED
            0x309B,   // 309B..309C; COMMON
            0x309D,   // 309D..309F; HIRAGANA
            0x30A0,   // 30A0..30A0; COMMON
            0x30A1,   // 30A1..30FA; KATAKANA
            0x30FB,   // 30FB..30FC; COMMON
            0x30FD,   // 30FD..3104; KATAKANA
            0x3105,   // 3105..3130; BOPOMOFO
            0x3131,   // 3131..318F; HANGUL
            0x3190,   // 3190..319F; COMMON
            0x31A0,   // 31A0..31BF; BOPOMOFO
            0x31C0,   // 31C0..31EF; COMMON
            0x31F0,   // 31F0..31FF; KATAKANA
            0x3200,   // 3200..321F; HANGUL
            0x3220,   // 3220..325F; COMMON
            0x3260,   // 3260..327E; HANGUL
            0x327F,   // 327F..32CF; COMMON
            0x32D0,   // 32D0..3357; KATAKANA
            0x3358,   // 3358..33FF; COMMON
            0x3400,   // 3400..4DBF; HAN
            0x4DC0,   // 4DC0..4DFF; COMMON
            0x4E00,   // 4E00..9FFF; HAN
            0xA000,   // A000..A4CF; YI
            0xA4D0,   // A4D0..A4FF; LISU
            0xA500,   // A500..A63F; VAI
            0xA640,   // A640..A69F; CYRILLIC
            0xA6A0,   // A6A0..A6FF; BAMUM
            0xA700,   // A700..A721; COMMON
            0xA722,   // A722..A787; LATIN
            0xA788,   // A788..A78A; COMMON
            0xA78B,   // A78B..A7FF; LATIN
            0xA800,   // A800..A82F; SYLOTI_NAGRI
            0xA830,   // A830..A83F; COMMON
            0xA840,   // A840..A87F; PHAGS_PA
            0xA880,   // A880..A8DF; SAURASHTRA
            0xA8E0,   // A8E0..A8FF; DEVANAGARI
            0xA900,   // A900..A92F; KAYAH_LI
            0xA930,   // A930..A95F; REJANG
            0xA960,   // A960..A97F; HANGUL
            0xA980,   // A980..A9FF; JAVANESE
            0xAA00,   // AA00..AA5F; CHAM
            0xAA60,   // AA60..AA7F; MYANMAR
            0xAA80,   // AA80..AADF; TAI_VIET
            0xAAE0,   // AAE0..AB00; MEETEI_MAYEK
            0xAB01,   // AB01..ABBF; ETHIOPIC
            0xABC0,   // ABC0..ABFF; MEETEI_MAYEK
            0xAC00,   // AC00..D7FB; HANGUL
            0xD7FC,   // D7FC..F8FF; UNKNOWN
            0xF900,   // F900..FAFF; HAN
            0xFB00,   // FB00..FB12; LATIN
            0xFB13,   // FB13..FB1C; ARMENIAN
            0xFB1D,   // FB1D..FB4F; HEBREW
            0xFB50,   // FB50..FD3D; ARABIC
            0xFD3E,   // FD3E..FD4F; COMMON
            0xFD50,   // FD50..FDFC; ARABIC
            0xFDFD,   // FDFD..FDFF; COMMON
            0xFE00,   // FE00..FE0F; INHERITED
            0xFE10,   // FE10..FE1F; COMMON
            0xFE20,   // FE20..FE2F; INHERITED
            0xFE30,   // FE30..FE6F; COMMON
            0xFE70,   // FE70..FEFE; ARABIC
            0xFEFF,   // FEFF..FF20; COMMON
            0xFF21,   // FF21..FF3A; LATIN
            0xFF3B,   // FF3B..FF40; COMMON
            0xFF41,   // FF41..FF5A; LATIN
            0xFF5B,   // FF5B..FF65; COMMON
            0xFF66,   // FF66..FF6F; KATAKANA
            0xFF70,   // FF70..FF70; COMMON
            0xFF71,   // FF71..FF9D; KATAKANA
            0xFF9E,   // FF9E..FF9F; COMMON
            0xFFA0,   // FFA0..FFDF; HANGUL
            0xFFE0,   // FFE0..FFFF; COMMON
            0x10000,  // 10000..100FF; LINEAR_B
            0x10100,  // 10100..1013F; COMMON
            0x10140,  // 10140..1018F; GREEK
            0x10190,  // 10190..101FC; COMMON
            0x101FD,  // 101FD..1027F; INHERITED
            0x10280,  // 10280..1029F; LYCIAN
            0x102A0,  // 102A0..102FF; CARIAN
            0x10300,  // 10300..1032F; OLD_ITALIC
            0x10330,  // 10330..1037F; GOTHIC
            0x10380,  // 10380..1039F; UGARITIC
            0x103A0,  // 103A0..103FF; OLD_PERSIAN
            0x10400,  // 10400..1044F; DESERET
            0x10450,  // 10450..1047F; SHAVIAN
            0x10480,  // 10480..107FF; OSMANYA
            0x10800,  // 10800..1083F; CYPRIOT
            0x10840,  // 10840..108FF; IMPERIAL_ARAMAIC
            0x10900,  // 10900..1091F; PHOENICIAN
            0x10920,  // 10920..1097F; LYDIAN
            0x10980,  // 10980..1099F; MEROITIC_HIEROGLYPHS
            0x109A0,  // 109A0..109FF; MEROITIC_CURSIVE
            0x10A00,  // 10A00..10A5F; KHAROSHTHI
            0x10A60,  // 10A60..10AFF; OLD_SOUTH_ARABIAN
            0x10B00,  // 10B00..10B3F; AVESTAN
            0x10B40,  // 10B40..10B5F; INSCRIPTIONAL_PARTHIAN
            0x10B60,  // 10B60..10BFF; INSCRIPTIONAL_PAHLAVI
            0x10C00,  // 10C00..10E5F; OLD_TURKIC
            0x10E60,  // 10E60..10FFF; ARABIC
            0x11000,  // 11000..1107F; BRAHMI
            0x11080,  // 11080..110CF; KAITHI
            0x110D0,  // 110D0..110FF; SORA_SOMPENG
            0x11100,  // 11100..1117F; CHAKMA
            0x11180,  // 11180..1167F; SHARADA
            0x11680,  // 11680..116CF; TAKRI
            0x12000,  // 12000..12FFF; CUNEIFORM
            0x13000,  // 13000..167FF; EGYPTIAN_HIEROGLYPHS
            0x16800,  // 16800..16A38; BAMUM
            0x16F00,  // 16F00..16F9F; MIAO
            0x1B000,  // 1B000..1B000; KATAKANA
            0x1B001,  // 1B001..1CFFF; HIRAGANA
            0x1D000,  // 1D000..1D166; COMMON
            0x1D167,  // 1D167..1D169; INHERITED
            0x1D16A,  // 1D16A..1D17A; COMMON
            0x1D17B,  // 1D17B..1D182; INHERITED
            0x1D183,  // 1D183..1D184; COMMON
            0x1D185,  // 1D185..1D18B; INHERITED
            0x1D18C,  // 1D18C..1D1A9; COMMON
            0x1D1AA,  // 1D1AA..1D1AD; INHERITED
            0x1D1AE,  // 1D1AE..1D1FF; COMMON
            0x1D200,  // 1D200..1D2FF; GREEK
            0x1D300,  // 1D300..1EDFF; COMMON
            0x1EE00,  // 1EE00..1EFFF; ARABIC
            0x1F000,  // 1F000..1F1FF; COMMON
            0x1F200,  // 1F200..1F200; HIRAGANA
            0x1F201,  // 1F210..1FFFF; COMMON
            0x20000,  // 20000..E0000; HAN
            0xE0001,  // E0001..E00FF; COMMON
            0xE0100,  // E0100..E01EF; INHERITED
            0xE01F0   // E01F0..10FFFF; UNKNOWN

        }"
	  stereotype "attribute"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3064322 // scripts (<unidirectional association>)
	  relation 3064322 --->
	    a role_name "scripts" multiplicity "[]" init_value " {
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            BOPOMOFO,
            COMMON,
            INHERITED,
            GREEK,
            COMMON,
            GREEK,
            COMMON,
            GREEK,
            COMMON,
            GREEK,
            COMMON,
            GREEK,
            COPTIC,
            GREEK,
            CYRILLIC,
            INHERITED,
            CYRILLIC,
            ARMENIAN,
            COMMON,
            ARMENIAN,
            HEBREW,
            ARABIC,
            COMMON,
            ARABIC,
            COMMON,
            ARABIC,
            COMMON,
            ARABIC,
            COMMON,
            ARABIC,
            INHERITED,
            ARABIC,
            COMMON,
            ARABIC,
            INHERITED,
            ARABIC,
            COMMON,
            ARABIC,
            SYRIAC,
            ARABIC,
            THAANA,
            NKO,
            SAMARITAN,
            MANDAIC,
            ARABIC,
            DEVANAGARI,
            INHERITED,
            DEVANAGARI,
            COMMON,
            DEVANAGARI,
            BENGALI,
            GURMUKHI,
            GUJARATI,
            ORIYA,
            TAMIL,
            TELUGU,
            KANNADA,
            MALAYALAM,
            SINHALA,
            THAI,
            COMMON,
            THAI,
            LAO,
            TIBETAN,
            COMMON,
            TIBETAN,
            MYANMAR,
            GEORGIAN,
            COMMON,
            GEORGIAN,
            HANGUL,
            ETHIOPIC,
            CHEROKEE,
            CANADIAN_ABORIGINAL,
            OGHAM,
            RUNIC,
            COMMON,
            RUNIC,
            TAGALOG,
            HANUNOO,
            COMMON,
            BUHID,
            TAGBANWA,
            KHMER,
            MONGOLIAN,
            COMMON,
            MONGOLIAN,
            COMMON,
            MONGOLIAN,
            CANADIAN_ABORIGINAL,
            LIMBU,
            TAI_LE,
            NEW_TAI_LUE,
            KHMER,
            BUGINESE,
            TAI_THAM,
            BALINESE,
            SUNDANESE,
            BATAK,
            LEPCHA,
            OL_CHIKI,
            SUNDANESE,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            LATIN,
            GREEK,
            CYRILLIC,
            LATIN,
            GREEK,
            LATIN,
            GREEK,
            LATIN,
            CYRILLIC,
            LATIN,
            GREEK,
            INHERITED,
            LATIN,
            GREEK,
            COMMON,
            INHERITED,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            INHERITED,
            COMMON,
            GREEK,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            BRAILLE,
            COMMON,
            GLAGOLITIC,
            LATIN,
            COPTIC,
            GEORGIAN,
            TIFINAGH,
            ETHIOPIC,
            CYRILLIC,
            COMMON,
            HAN,
            COMMON,
            HAN,
            COMMON,
            HAN,
            COMMON,
            HAN,
            INHERITED,
            HANGUL,
            COMMON,
            HAN,
            COMMON,
            HIRAGANA,
            INHERITED,
            COMMON,
            HIRAGANA,
            COMMON,
            KATAKANA,
            COMMON,
            KATAKANA,
            BOPOMOFO,
            HANGUL,
            COMMON,
            BOPOMOFO,
            COMMON,
            KATAKANA,
            HANGUL,
            COMMON,
            HANGUL,
            COMMON,
            KATAKANA,
            COMMON,
            HAN,
            COMMON,
            HAN,
            YI,
            LISU,
            VAI,
            CYRILLIC,
            BAMUM,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            SYLOTI_NAGRI,
            COMMON,
            PHAGS_PA,
            SAURASHTRA,
            DEVANAGARI,
            KAYAH_LI,
            REJANG,
            HANGUL,
            JAVANESE,
            CHAM,
            MYANMAR,
            TAI_VIET,
            MEETEI_MAYEK,
            ETHIOPIC,
            MEETEI_MAYEK,
            HANGUL,
            UNKNOWN     ,
            HAN,
            LATIN,
            ARMENIAN,
            HEBREW,
            ARABIC,
            COMMON,
            ARABIC,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            ARABIC,
            COMMON,
            LATIN,
            COMMON,
            LATIN,
            COMMON,
            KATAKANA,
            COMMON,
            KATAKANA,
            COMMON,
            HANGUL,
            COMMON,
            LINEAR_B,
            COMMON,
            GREEK,
            COMMON,
            INHERITED,
            LYCIAN,
            CARIAN,
            OLD_ITALIC,
            GOTHIC,
            UGARITIC,
            OLD_PERSIAN,
            DESERET,
            SHAVIAN,
            OSMANYA,
            CYPRIOT,
            IMPERIAL_ARAMAIC,
            PHOENICIAN,
            LYDIAN,
            MEROITIC_HIEROGLYPHS,
            MEROITIC_CURSIVE,
            KHAROSHTHI,
            OLD_SOUTH_ARABIAN,
            AVESTAN,
            INSCRIPTIONAL_PARTHIAN,
            INSCRIPTIONAL_PAHLAVI,
            OLD_TURKIC,
            ARABIC,
            BRAHMI,
            KAITHI,
            SORA_SOMPENG,
            CHAKMA,
            SHARADA,
            TAKRI,
            CUNEIFORM,
            EGYPTIAN_HIEROGLYPHS,
            BAMUM,
            MIAO,
            KATAKANA,
            HIRAGANA,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            INHERITED,
            COMMON,
            GREEK,
            COMMON,
            ARABIC,
            COMMON,
            HIRAGANA,
            COMMON,
            HAN,
            COMMON,
            INHERITED,
            UNKNOWN
        }" class_relation const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3064322 // scripts (<unidirectional association>)
	    b parent class_ref 895490 // UnicodeScript
	end

	classrelation 3064450 // aliases (<unidirectional association>)
	  relation 3064450 --->
	    a role_name "aliases" class_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Character.UnicodeScript> ${name}${value};
"
	      classrelation_ref 3064450 // aliases (<unidirectional association>)
	    b parent class_ref 132866 // HashMap
	end

	extra_member 153218 "initialization"
	  
	  cpp "" ""
	  java "  static {
            aliases = new HashMap<>(128);
            aliases.put(\"ARAB\", ARABIC);
            aliases.put(\"ARMI\", IMPERIAL_ARAMAIC);
            aliases.put(\"ARMN\", ARMENIAN);
            aliases.put(\"AVST\", AVESTAN);
            aliases.put(\"BALI\", BALINESE);
            aliases.put(\"BAMU\", BAMUM);
            aliases.put(\"BATK\", BATAK);
            aliases.put(\"BENG\", BENGALI);
            aliases.put(\"BOPO\", BOPOMOFO);
            aliases.put(\"BRAI\", BRAILLE);
            aliases.put(\"BRAH\", BRAHMI);
            aliases.put(\"BUGI\", BUGINESE);
            aliases.put(\"BUHD\", BUHID);
            aliases.put(\"CAKM\", CHAKMA);
            aliases.put(\"CANS\", CANADIAN_ABORIGINAL);
            aliases.put(\"CARI\", CARIAN);
            aliases.put(\"CHAM\", CHAM);
            aliases.put(\"CHER\", CHEROKEE);
            aliases.put(\"COPT\", COPTIC);
            aliases.put(\"CPRT\", CYPRIOT);
            aliases.put(\"CYRL\", CYRILLIC);
            aliases.put(\"DEVA\", DEVANAGARI);
            aliases.put(\"DSRT\", DESERET);
            aliases.put(\"EGYP\", EGYPTIAN_HIEROGLYPHS);
            aliases.put(\"ETHI\", ETHIOPIC);
            aliases.put(\"GEOR\", GEORGIAN);
            aliases.put(\"GLAG\", GLAGOLITIC);
            aliases.put(\"GOTH\", GOTHIC);
            aliases.put(\"GREK\", GREEK);
            aliases.put(\"GUJR\", GUJARATI);
            aliases.put(\"GURU\", GURMUKHI);
            aliases.put(\"HANG\", HANGUL);
            aliases.put(\"HANI\", HAN);
            aliases.put(\"HANO\", HANUNOO);
            aliases.put(\"HEBR\", HEBREW);
            aliases.put(\"HIRA\", HIRAGANA);
            // it appears we don't have the KATAKANA_OR_HIRAGANA
            //aliases.put(\"HRKT\", KATAKANA_OR_HIRAGANA);
            aliases.put(\"ITAL\", OLD_ITALIC);
            aliases.put(\"JAVA\", JAVANESE);
            aliases.put(\"KALI\", KAYAH_LI);
            aliases.put(\"KANA\", KATAKANA);
            aliases.put(\"KHAR\", KHAROSHTHI);
            aliases.put(\"KHMR\", KHMER);
            aliases.put(\"KNDA\", KANNADA);
            aliases.put(\"KTHI\", KAITHI);
            aliases.put(\"LANA\", TAI_THAM);
            aliases.put(\"LAOO\", LAO);
            aliases.put(\"LATN\", LATIN);
            aliases.put(\"LEPC\", LEPCHA);
            aliases.put(\"LIMB\", LIMBU);
            aliases.put(\"LINB\", LINEAR_B);
            aliases.put(\"LISU\", LISU);
            aliases.put(\"LYCI\", LYCIAN);
            aliases.put(\"LYDI\", LYDIAN);
            aliases.put(\"MAND\", MANDAIC);
            aliases.put(\"MERC\", MEROITIC_CURSIVE);
            aliases.put(\"MERO\", MEROITIC_HIEROGLYPHS);
            aliases.put(\"MLYM\", MALAYALAM);
            aliases.put(\"MONG\", MONGOLIAN);
            aliases.put(\"MTEI\", MEETEI_MAYEK);
            aliases.put(\"MYMR\", MYANMAR);
            aliases.put(\"NKOO\", NKO);
            aliases.put(\"OGAM\", OGHAM);
            aliases.put(\"OLCK\", OL_CHIKI);
            aliases.put(\"ORKH\", OLD_TURKIC);
            aliases.put(\"ORYA\", ORIYA);
            aliases.put(\"OSMA\", OSMANYA);
            aliases.put(\"PHAG\", PHAGS_PA);
            aliases.put(\"PLRD\", MIAO);
            aliases.put(\"PHLI\", INSCRIPTIONAL_PAHLAVI);
            aliases.put(\"PHNX\", PHOENICIAN);
            aliases.put(\"PRTI\", INSCRIPTIONAL_PARTHIAN);
            aliases.put(\"RJNG\", REJANG);
            aliases.put(\"RUNR\", RUNIC);
            aliases.put(\"SAMR\", SAMARITAN);
            aliases.put(\"SARB\", OLD_SOUTH_ARABIAN);
            aliases.put(\"SAUR\", SAURASHTRA);
            aliases.put(\"SHAW\", SHAVIAN);
            aliases.put(\"SHRD\", SHARADA);
            aliases.put(\"SINH\", SINHALA);
            aliases.put(\"SORA\", SORA_SOMPENG);
            aliases.put(\"SUND\", SUNDANESE);
            aliases.put(\"SYLO\", SYLOTI_NAGRI);
            aliases.put(\"SYRC\", SYRIAC);
            aliases.put(\"TAGB\", TAGBANWA);
            aliases.put(\"TALE\", TAI_LE);
            aliases.put(\"TAKR\", TAKRI);
            aliases.put(\"TALU\", NEW_TAI_LUE);
            aliases.put(\"TAML\", TAMIL);
            aliases.put(\"TAVT\", TAI_VIET);
            aliases.put(\"TELU\", TELUGU);
            aliases.put(\"TFNG\", TIFINAGH);
            aliases.put(\"TGLG\", TAGALOG);
            aliases.put(\"THAA\", THAANA);
            aliases.put(\"THAI\", THAI);
            aliases.put(\"TIBT\", TIBETAN);
            aliases.put(\"UGAR\", UGARITIC);
            aliases.put(\"VAII\", VAI);
            aliases.put(\"XPEO\", OLD_PERSIAN);
            aliases.put(\"XSUX\", CUNEIFORM);
            aliases.put(\"YIII\", YI);
            aliases.put(\"ZINH\", INHERITED);
            aliases.put(\"ZYYY\", COMMON);
            aliases.put(\"ZZZZ\", UNKNOWN);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	operation 6583810 "of"
	  class_operation public return_type class_ref 895490 // UnicodeScript
	  nparams 1
	    param in name "codePoint" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the enum constant representing the Unicode script of which
the given character (Unicode code point) is assigned to.

@param   codePoint the character (Unicode code point) in question.
@return  The {@code UnicodeScript} constant representing the
         Unicode script of which this character is assigned to.

@exception IllegalArgumentException if the specified
{@code codePoint} is an invalid Unicode code point.
@see Character#isValidCodePoint(int)

"
	end

	operation 6583938 "forName"
	  class_operation public return_type class_ref 895490 // UnicodeScript
	  nparams 1
	    param inout name "scriptName" type class_ref 128130 // String
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the UnicodeScript constant with the given Unicode script
name or the script name alias. Script names and their aliases are
determined by The Unicode Standard. The files Scripts&lt;version&gt;.txt
and PropertyValueAliases&lt;version&gt;.txt define script names
and the script name aliases for a particular version of the
standard. The {@link Character} class specifies the version of
the standard that it supports.
<p>
Character case is ignored for all of the valid script names.
The en_US locale's case mapping rules are used to provide
case-insensitive string comparisons for script name validation.
<p>

@param scriptName A {@code UnicodeScript} name.
@return The {@code UnicodeScript} constant identified
        by {@code scriptName}
@throws IllegalArgumentException if {@code scriptName} is an
        invalid name
@throws NullPointerException if {@code scriptName} is null
"
	end
      end

      attribute 1594242 "value"
	const_attribute private explicit_type "char"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the {@code Character}.

@serial

"
      end

      attribute 1594370 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3786198910865385080L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end

      operation 6584066 "Character"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Character} object that
represents the specified {@code char} value.

@param  value   the value to be represented by the
                 {@code Character} object.
"
      end

      class 895618 "CharacterCache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6584194 "CharacterCache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3064578 // cache (<unidirectional association>)
	  relation 3064578 --->
	    a role_name "cache" multiplicity "[]" init_value " new Character[127 + 1]" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3064578 // cache (<unidirectional association>)
	    b parent class_ref 577026 // Character
	end

	extra_member 153346 "initialization"
	  
	  cpp "" ""
	  java "  static {
            for (int i = 0; i < cache.length; i++)
                cache[i] = new Character((char)i);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      operation 6584322 "valueOf"
	class_operation public return_type class_ref 577026 // Character
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <tt>Character</tt> instance representing the specified
<tt>char</tt> value.
If a new <tt>Character</tt> instance is not required, this method
should generally be used in preference to the constructor
{@link #Character(char)}, as this method is likely to yield
significantly better space and time performance by caching
frequently requested values.

This method will always cache values in the range {@code
'\\u005Cu0000'} to {@code '\\u005Cu007F'}, inclusive, and may
cache other values outside of this range.

@param  c a char value.
@return a <tt>Character</tt> instance representing <tt>c</tt>.
@since  1.5
"
      end

      operation 6584450 "charValue"
	public explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Character} object.
@return  the primitive {@code char} value represented by
         this object.
"
      end

      operation 6584578 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Character}; equal to the result
of invoking {@code charValue()}.

@return a hash code value for this {@code Character}
"
      end

      operation 6584706 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code char} value; compatible with
{@code Character.hashCode()}.

@since 1.8

@param value The {@code char} for which to return a hash code.
@return a hash code value for a {@code char} value.
"
      end

      operation 6584834 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object against the specified object.
The result is {@code true} if and only if the argument is not
{@code null} and is a {@code Character} object that
represents the same {@code char} value as this object.

@param   obj   the object to compare with.
@return  {@code true} if the objects are the same;
         {@code false} otherwise.
"
      end

      operation 6584962 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this
{@code Character}'s value.  The result is a string of
length 1 whose sole component is the primitive
{@code char} value represented by this
{@code Character} object.

@return  a string representation of this object.
"
      end

      operation 6585090 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing the
specified {@code char}.  The result is a string of length
1 consisting solely of the specified {@code char}.

@param c the {@code char} to be converted
@return the string representation of the specified {@code char}
@since 1.4
"
      end

      operation 6585218 "isValidCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified code point is a valid
<a href=\"http://www.unicode.org/glossary/#code_point\">
Unicode code point value</a>.

@param  codePoint the Unicode code point to be tested
@return {@code true} if the specified code point value is between
        {@link #MIN_CODE_POINT} and
        {@link #MAX_CODE_POINT} inclusive;
        {@code false} otherwise.
@since  1.5
"
      end

      operation 6585346 "isBmpCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified character (Unicode code point)
is in the <a href=\"#BMP\">Basic Multilingual Plane (BMP)</a>.
Such code points can be represented using a single {@code char}.

@param  codePoint the character (Unicode code point) to be tested
@return {@code true} if the specified code point is between
        {@link #MIN_VALUE} and {@link #MAX_VALUE} inclusive;
        {@code false} otherwise.
@since  1.7
"
      end

      operation 6585474 "isSupplementaryCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified character (Unicode code point)
is in the <a href=\"#supplementary\">supplementary character</a> range.

@param  codePoint the character (Unicode code point) to be tested
@return {@code true} if the specified code point is between
        {@link #MIN_SUPPLEMENTARY_CODE_POINT} and
        {@link #MAX_CODE_POINT} inclusive;
        {@code false} otherwise.
@since  1.5
"
      end

      operation 6585602 "isHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the given {@code char} value is a
<a href=\"http://www.unicode.org/glossary/#high_surrogate_code_unit\">
Unicode high-surrogate code unit</a>
(also known as <i>leading-surrogate code unit</i>).

<p>Such values do not represent characters by themselves,
but are used in the representation of
<a href=\"#supplementary\">supplementary characters</a>
in the UTF-16 encoding.

@param  ch the {@code char} value to be tested.
@return {@code true} if the {@code char} value is between
        {@link #MIN_HIGH_SURROGATE} and
        {@link #MAX_HIGH_SURROGATE} inclusive;
        {@code false} otherwise.
@see    Character#isLowSurrogate(char)
@see    Character.UnicodeBlock#of(int)
@since  1.5
"
      end

      operation 6585730 "isLowSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the given {@code char} value is a
<a href=\"http://www.unicode.org/glossary/#low_surrogate_code_unit\">
Unicode low-surrogate code unit</a>
(also known as <i>trailing-surrogate code unit</i>).

<p>Such values do not represent characters by themselves,
but are used in the representation of
<a href=\"#supplementary\">supplementary characters</a>
in the UTF-16 encoding.

@param  ch the {@code char} value to be tested.
@return {@code true} if the {@code char} value is between
        {@link #MIN_LOW_SURROGATE} and
        {@link #MAX_LOW_SURROGATE} inclusive;
        {@code false} otherwise.
@see    Character#isHighSurrogate(char)
@since  1.5
"
      end

      operation 6585858 "isSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the given {@code char} value is a Unicode
<i>surrogate code unit</i>.

<p>Such values do not represent characters by themselves,
but are used in the representation of
<a href=\"#supplementary\">supplementary characters</a>
in the UTF-16 encoding.

<p>A char value is a surrogate code unit if and only if it is either
a {@linkplain #isLowSurrogate(char) low-surrogate code unit} or
a {@linkplain #isHighSurrogate(char) high-surrogate code unit}.

@param  ch the {@code char} value to be tested.
@return {@code true} if the {@code char} value is between
        {@link #MIN_SURROGATE} and
        {@link #MAX_SURROGATE} inclusive;
        {@code false} otherwise.
@since  1.7
"
      end

      operation 6585986 "isSurrogatePair"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified pair of {@code char}
values is a valid
<a href=\"http://www.unicode.org/glossary/#surrogate_pair\">
Unicode surrogate pair</a>.

<p>This method is equivalent to the expression:
<blockquote><pre>{@code
isHighSurrogate(high) && isLowSurrogate(low)
}</pre></blockquote>

@param  high the high-surrogate code value to be tested
@param  low the low-surrogate code value to be tested
@return {@code true} if the specified high and
low-surrogate code values represent a valid surrogate pair;
{@code false} otherwise.
@since  1.5
"
      end

      operation 6586114 "charCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of {@code char} values needed to
represent the specified character (Unicode code point). If the
specified character is equal to or greater than 0x10000, then
the method returns 2. Otherwise, the method returns 1.

<p>This method doesn't validate the specified character to be a
valid Unicode code point. The caller must validate the
character value using {@link #isValidCodePoint(int) isValidCodePoint}
if necessary.

@param   codePoint the character (Unicode code point) to be tested.
@return  2 if the character is a valid supplementary character; 1 otherwise.
@see     Character#isSupplementaryCodePoint(int)
@since   1.5
"
      end

      operation 6586242 "toCodePoint"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified surrogate pair to its supplementary code
point value. This method does not validate the specified
surrogate pair. The caller must validate it using {@link
#isSurrogatePair(char, char) isSurrogatePair} if necessary.

@param  high the high-surrogate code unit
@param  low the low-surrogate code unit
@return the supplementary code point composed from the
        specified surrogate pair.
@since  1.5
"
      end

      operation 6586370 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" type class_ref 429442 // CharSequence
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at the given index of the
{@code CharSequence}. If the {@code char} value at
the given index in the {@code CharSequence} is in the
high-surrogate range, the following index is less than the
length of the {@code CharSequence}, and the
{@code char} value at the following index is in the
low-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at the given index is returned.

@param seq a sequence of {@code char} values (Unicode code
units)
@param index the index to the {@code char} values (Unicode
code units) in {@code seq} to be converted
@return the Unicode code point at the given index
@exception NullPointerException if {@code seq} is null.
@exception IndexOutOfBoundsException if the value
{@code index} is negative or not less than
{@link CharSequence#length() seq.length()}.
@since  1.5
"
      end

      operation 6586498 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at the given index of the
{@code char} array. If the {@code char} value at
the given index in the {@code char} array is in the
high-surrogate range, the following index is less than the
length of the {@code char} array, and the
{@code char} value at the following index is in the
low-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at the given index is returned.

@param a the {@code char} array
@param index the index to the {@code char} values (Unicode
code units) in the {@code char} array to be converted
@return the Unicode code point at the given index
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException if the value
{@code index} is negative or not less than
the length of the {@code char} array.
@since  1.5
"
      end

      operation 6586626 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at the given index of the
{@code char} array, where only array elements with
{@code index} less than {@code limit} can be used. If
the {@code char} value at the given index in the
{@code char} array is in the high-surrogate range, the
following index is less than the {@code limit}, and the
{@code char} value at the following index is in the
low-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at the given index is returned.

@param a the {@code char} array
@param index the index to the {@code char} values (Unicode
code units) in the {@code char} array to be converted
@param limit the index after the last array element that
can be used in the {@code char} array
@return the Unicode code point at the given index
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException if the {@code index}
argument is negative or not less than the {@code limit}
argument, or if the {@code limit} argument is negative or
greater than the length of the {@code char} array.
@since  1.5
"
      end

      operation 6586754 "codePointAtImpl"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	  param in name "limit" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " throws ArrayIndexOutOfBoundsException if index out of bounds"
      end

      operation 6586882 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" type class_ref 429442 // CharSequence
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point preceding the given index of the
{@code CharSequence}. If the {@code char} value at
{@code (index - 1)} in the {@code CharSequence} is in
the low-surrogate range, {@code (index - 2)} is not
negative, and the {@code char} value at {@code (index - 2)}
in the {@code CharSequence} is in the
high-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at {@code (index - 1)} is
returned.

@param seq the {@code CharSequence} instance
@param index the index following the code point that should be returned
@return the Unicode code point value before the given index.
@exception NullPointerException if {@code seq} is null.
@exception IndexOutOfBoundsException if the {@code index}
argument is less than 1 or greater than {@link
CharSequence#length() seq.length()}.
@since  1.5
"
      end

      operation 6587010 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point preceding the given index of the
{@code char} array. If the {@code char} value at
{@code (index - 1)} in the {@code char} array is in
the low-surrogate range, {@code (index - 2)} is not
negative, and the {@code char} value at {@code (index - 2)}
in the {@code char} array is in the
high-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at {@code (index - 1)} is
returned.

@param a the {@code char} array
@param index the index following the code point that should be returned
@return the Unicode code point value before the given index.
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException if the {@code index}
argument is less than 1 or greater than the length of the
{@code char} array
@since  1.5
"
      end

      operation 6587138 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point preceding the given index of the
{@code char} array, where only array elements with
{@code index} greater than or equal to {@code start}
can be used. If the {@code char} value at {@code (index - 1)}
in the {@code char} array is in the
low-surrogate range, {@code (index - 2)} is not less than
{@code start}, and the {@code char} value at
{@code (index - 2)} in the {@code char} array is in
the high-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at {@code (index - 1)} is
returned.

@param a the {@code char} array
@param index the index following the code point that should be returned
@param start the index of the first array element in the
{@code char} array
@return the Unicode code point value before the given index.
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException if the {@code index}
argument is not greater than the {@code start} argument or
is greater than the length of the {@code char} array, or
if the {@code start} argument is negative or not less than
the length of the {@code char} array.
@since  1.5
"
      end

      operation 6587266 "codePointBeforeImpl"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " throws ArrayIndexOutOfBoundsException if index-1 out of bounds"
      end

      operation 6587394 "highSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the leading surrogate (a
<a href=\"http://www.unicode.org/glossary/#high_surrogate_code_unit\">
high surrogate code unit</a>) of the
<a href=\"http://www.unicode.org/glossary/#surrogate_pair\">
surrogate pair</a>
representing the specified supplementary character (Unicode
code point) in the UTF-16 encoding.  If the specified character
is not a
<a href=\"Character.html#supplementary\">supplementary character</a>,
an unspecified {@code char} is returned.

<p>If
{@link #isSupplementaryCodePoint isSupplementaryCodePoint(x)}
is {@code true}, then
{@link #isHighSurrogate isHighSurrogate}{@code (highSurrogate(x))} and
{@link #toCodePoint toCodePoint}{@code (highSurrogate(x), }{@link #lowSurrogate lowSurrogate}{@code (x)) == x}
are also always {@code true}.

@param   codePoint a supplementary character (Unicode code point)
@return  the leading surrogate code unit used to represent the
         character in the UTF-16 encoding
@since   1.7
"
      end

      operation 6587522 "lowSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trailing surrogate (a
<a href=\"http://www.unicode.org/glossary/#low_surrogate_code_unit\">
low surrogate code unit</a>) of the
<a href=\"http://www.unicode.org/glossary/#surrogate_pair\">
surrogate pair</a>
representing the specified supplementary character (Unicode
code point) in the UTF-16 encoding.  If the specified character
is not a
<a href=\"Character.html#supplementary\">supplementary character</a>,
an unspecified {@code char} is returned.

<p>If
{@link #isSupplementaryCodePoint isSupplementaryCodePoint(x)}
is {@code true}, then
{@link #isLowSurrogate isLowSurrogate}{@code (lowSurrogate(x))} and
{@link #toCodePoint toCodePoint}{@code (}{@link #highSurrogate highSurrogate}{@code (x), lowSurrogate(x)) == x}
are also always {@code true}.

@param   codePoint a supplementary character (Unicode code point)
@return  the trailing surrogate code unit used to represent the
         character in the UTF-16 encoding
@since   1.7
"
      end

      operation 6587650 "toChars"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "codePoint" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified character (Unicode code point) to its
UTF-16 representation. If the specified code point is a BMP
(Basic Multilingual Plane or Plane 0) value, the same value is
stored in {@code dst[dstIndex]}, and 1 is returned. If the
specified code point is a supplementary character, its
surrogate values are stored in {@code dst[dstIndex]}
(high-surrogate) and {@code dst[dstIndex+1]}
(low-surrogate), and 2 is returned.

@param  codePoint the character (Unicode code point) to be converted.
@param  dst an array of {@code char} in which the
{@code codePoint}'s UTF-16 value is stored.
@param dstIndex the start index into the {@code dst}
array where the converted value is stored.
@return 1 if the code point is a BMP code point, 2 if the
code point is a supplementary code point.
@exception IllegalArgumentException if the specified
{@code codePoint} is not a valid Unicode code point.
@exception NullPointerException if the specified {@code dst} is null.
@exception IndexOutOfBoundsException if {@code dstIndex}
is negative or not less than {@code dst.length}, or if
{@code dst} at {@code dstIndex} doesn't have enough
array element(s) to store the resulting {@code char}
value(s). (If {@code dstIndex} is equal to
{@code dst.length-1} and the specified
{@code codePoint} is a supplementary character, the
high-surrogate value is not stored in
{@code dst[dstIndex]}.)
@since  1.5
"
      end

      operation 6587778 "toChars"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified character (Unicode code point) to its
UTF-16 representation stored in a {@code char} array. If
the specified code point is a BMP (Basic Multilingual Plane or
Plane 0) value, the resulting {@code char} array has
the same value as {@code codePoint}. If the specified code
point is a supplementary code point, the resulting
{@code char} array has the corresponding surrogate pair.

@param  codePoint a Unicode code point
@return a {@code char} array having
        {@code codePoint}'s UTF-16 representation.
@exception IllegalArgumentException if the specified
{@code codePoint} is not a valid Unicode code point.
@since  1.5
"
      end

      operation 6587906 "toSurrogates"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "codePoint" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6588034 "codePointCount"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 429442 // CharSequence
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of Unicode code points in the text range of
the specified char sequence. The text range begins at the
specified {@code beginIndex} and extends to the
{@code char} at index {@code endIndex - 1}. Thus the
length (in {@code char}s) of the text range is
{@code endIndex-beginIndex}. Unpaired surrogates within
the text range count as one code point each.

@param seq the char sequence
@param beginIndex the index to the first {@code char} of
the text range.
@param endIndex the index after the last {@code char} of
the text range.
@return the number of Unicode code points in the specified text
range
@exception NullPointerException if {@code seq} is null.
@exception IndexOutOfBoundsException if the
{@code beginIndex} is negative, or {@code endIndex}
is larger than the length of the given sequence, or
{@code beginIndex} is larger than {@code endIndex}.
@since  1.5
"
      end

      operation 6588162 "codePointCount"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of Unicode code points in a subarray of the
{@code char} array argument. The {@code offset}
argument is the index of the first {@code char} of the
subarray and the {@code count} argument specifies the
length of the subarray in {@code char}s. Unpaired
surrogates within the subarray count as one code point each.

@param a the {@code char} array
@param offset the index of the first {@code char} in the
given {@code char} array
@param count the length of the subarray in {@code char}s
@return the number of Unicode code points in the specified subarray
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException if {@code offset} or
{@code count} is negative, or if {@code offset +
count} is larger than the length of the given array.
@since  1.5
"
      end

      operation 6588290 "codePointCountImpl"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6588418 "offsetByCodePoints"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 429442 // CharSequence
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within the given char sequence that is offset
from the given {@code index} by {@code codePointOffset}
code points. Unpaired surrogates within the text range given by
{@code index} and {@code codePointOffset} count as
one code point each.

@param seq the char sequence
@param index the index to be offset
@param codePointOffset the offset in code points
@return the index within the char sequence
@exception NullPointerException if {@code seq} is null.
@exception IndexOutOfBoundsException if {@code index}
  is negative or larger then the length of the char sequence,
  or if {@code codePointOffset} is positive and the
  subsequence starting with {@code index} has fewer than
  {@code codePointOffset} code points, or if
  {@code codePointOffset} is negative and the subsequence
  before {@code index} has fewer than the absolute value
  of {@code codePointOffset} code points.
@since 1.5
"
      end

      operation 6588546 "offsetByCodePoints"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within the given {@code char} subarray
that is offset from the given {@code index} by
{@code codePointOffset} code points. The
{@code start} and {@code count} arguments specify a
subarray of the {@code char} array. Unpaired surrogates
within the text range given by {@code index} and
{@code codePointOffset} count as one code point each.

@param a the {@code char} array
@param start the index of the first {@code char} of the
subarray
@param count the length of the subarray in {@code char}s
@param index the index to be offset
@param codePointOffset the offset in code points
@return the index within the subarray
@exception NullPointerException if {@code a} is null.
@exception IndexOutOfBoundsException
  if {@code start} or {@code count} is negative,
  or if {@code start + count} is larger than the length of
  the given array,
  or if {@code index} is less than {@code start} or
  larger then {@code start + count},
  or if {@code codePointOffset} is positive and the text range
  starting with {@code index} and ending with {@code start + count - 1}
  has fewer than {@code codePointOffset} code
  points,
  or if {@code codePointOffset} is negative and the text range
  starting with {@code start} and ending with {@code index - 1}
  has fewer than the absolute value of
  {@code codePointOffset} code points.
@since 1.5
"
      end

      operation 6588674 "offsetByCodePointsImpl"
	class_operation package explicit_return_type "int"
	nparams 5
	  param inout name "a" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6588802 "isLowerCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a lowercase character.
<p>
A character is lowercase if its general category type, provided
by {@code Character.getType(ch)}, is
{@code LOWERCASE_LETTER}, or it has contributory property
Other_Lowercase as defined by the Unicode Standard.
<p>
The following are examples of lowercase characters:
<blockquote><pre>
a b c d e f g h i j k l m n o p q r s t u v w x y z
'&#92;u00DF' '&#92;u00E0' '&#92;u00E1' '&#92;u00E2' '&#92;u00E3' '&#92;u00E4' '&#92;u00E5' '&#92;u00E6'
'&#92;u00E7' '&#92;u00E8' '&#92;u00E9' '&#92;u00EA' '&#92;u00EB' '&#92;u00EC' '&#92;u00ED' '&#92;u00EE'
'&#92;u00EF' '&#92;u00F0' '&#92;u00F1' '&#92;u00F2' '&#92;u00F3' '&#92;u00F4' '&#92;u00F5' '&#92;u00F6'
'&#92;u00F8' '&#92;u00F9' '&#92;u00FA' '&#92;u00FB' '&#92;u00FC' '&#92;u00FD' '&#92;u00FE' '&#92;u00FF'
</pre></blockquote>
<p> Many other Unicode characters are lowercase too.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isLowerCase(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is lowercase;
         {@code false} otherwise.
@see     Character#isLowerCase(char)
@see     Character#isTitleCase(char)
@see     Character#toLowerCase(char)
@see     Character#getType(char)
"
      end

      operation 6588930 "isLowerCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a
lowercase character.
<p>
A character is lowercase if its general category type, provided
by {@link Character#getType getType(codePoint)}, is
{@code LOWERCASE_LETTER}, or it has contributory property
Other_Lowercase as defined by the Unicode Standard.
<p>
The following are examples of lowercase characters:
<blockquote><pre>
a b c d e f g h i j k l m n o p q r s t u v w x y z
'&#92;u00DF' '&#92;u00E0' '&#92;u00E1' '&#92;u00E2' '&#92;u00E3' '&#92;u00E4' '&#92;u00E5' '&#92;u00E6'
'&#92;u00E7' '&#92;u00E8' '&#92;u00E9' '&#92;u00EA' '&#92;u00EB' '&#92;u00EC' '&#92;u00ED' '&#92;u00EE'
'&#92;u00EF' '&#92;u00F0' '&#92;u00F1' '&#92;u00F2' '&#92;u00F3' '&#92;u00F4' '&#92;u00F5' '&#92;u00F6'
'&#92;u00F8' '&#92;u00F9' '&#92;u00FA' '&#92;u00FB' '&#92;u00FC' '&#92;u00FD' '&#92;u00FE' '&#92;u00FF'
</pre></blockquote>
<p> Many other Unicode characters are lowercase too.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is lowercase;
         {@code false} otherwise.
@see     Character#isLowerCase(int)
@see     Character#isTitleCase(int)
@see     Character#toLowerCase(int)
@see     Character#getType(int)
@since   1.5
"
      end

      operation 6589058 "isUpperCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is an uppercase character.
<p>
A character is uppercase if its general category type, provided by
{@code Character.getType(ch)}, is {@code UPPERCASE_LETTER}.
or it has contributory property Other_Uppercase as defined by the Unicode Standard.
<p>
The following are examples of uppercase characters:
<blockquote><pre>
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
'&#92;u00C0' '&#92;u00C1' '&#92;u00C2' '&#92;u00C3' '&#92;u00C4' '&#92;u00C5' '&#92;u00C6' '&#92;u00C7'
'&#92;u00C8' '&#92;u00C9' '&#92;u00CA' '&#92;u00CB' '&#92;u00CC' '&#92;u00CD' '&#92;u00CE' '&#92;u00CF'
'&#92;u00D0' '&#92;u00D1' '&#92;u00D2' '&#92;u00D3' '&#92;u00D4' '&#92;u00D5' '&#92;u00D6' '&#92;u00D8'
'&#92;u00D9' '&#92;u00DA' '&#92;u00DB' '&#92;u00DC' '&#92;u00DD' '&#92;u00DE'
</pre></blockquote>
<p> Many other Unicode characters are uppercase too.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isUpperCase(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is uppercase;
         {@code false} otherwise.
@see     Character#isLowerCase(char)
@see     Character#isTitleCase(char)
@see     Character#toUpperCase(char)
@see     Character#getType(char)
@since   1.0
"
      end

      operation 6589186 "isUpperCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is an uppercase character.
<p>
A character is uppercase if its general category type, provided by
{@link Character#getType(int) getType(codePoint)}, is {@code UPPERCASE_LETTER},
or it has contributory property Other_Uppercase as defined by the Unicode Standard.
<p>
The following are examples of uppercase characters:
<blockquote><pre>
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
'&#92;u00C0' '&#92;u00C1' '&#92;u00C2' '&#92;u00C3' '&#92;u00C4' '&#92;u00C5' '&#92;u00C6' '&#92;u00C7'
'&#92;u00C8' '&#92;u00C9' '&#92;u00CA' '&#92;u00CB' '&#92;u00CC' '&#92;u00CD' '&#92;u00CE' '&#92;u00CF'
'&#92;u00D0' '&#92;u00D1' '&#92;u00D2' '&#92;u00D3' '&#92;u00D4' '&#92;u00D5' '&#92;u00D6' '&#92;u00D8'
'&#92;u00D9' '&#92;u00DA' '&#92;u00DB' '&#92;u00DC' '&#92;u00DD' '&#92;u00DE'
</pre></blockquote>
<p> Many other Unicode characters are uppercase too.<p>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is uppercase;
         {@code false} otherwise.
@see     Character#isLowerCase(int)
@see     Character#isTitleCase(int)
@see     Character#toUpperCase(int)
@see     Character#getType(int)
@since   1.5
"
      end

      operation 6589314 "isTitleCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a titlecase character.
<p>
A character is a titlecase character if its general
category type, provided by {@code Character.getType(ch)},
is {@code TITLECASE_LETTER}.
<p>
Some characters look like pairs of Latin letters. For example, there
is an uppercase letter that looks like \"LJ\" and has a corresponding
lowercase letter that looks like \"lj\". A third form, which looks like \"Lj\",
is the appropriate form to use when rendering a word in lowercase
with initial capitals, as for a book title.
<p>
These are some of the Unicode characters for which this method returns
{@code true}:
<ul>
<li>{@code LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON}
<li>{@code LATIN CAPITAL LETTER L WITH SMALL LETTER J}
<li>{@code LATIN CAPITAL LETTER N WITH SMALL LETTER J}
<li>{@code LATIN CAPITAL LETTER D WITH SMALL LETTER Z}
</ul>
<p> Many other Unicode characters are titlecase too.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isTitleCase(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is titlecase;
         {@code false} otherwise.
@see     Character#isLowerCase(char)
@see     Character#isUpperCase(char)
@see     Character#toTitleCase(char)
@see     Character#getType(char)
@since   1.0.2
"
      end

      operation 6589442 "isTitleCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a titlecase character.
<p>
A character is a titlecase character if its general
category type, provided by {@link Character#getType(int) getType(codePoint)},
is {@code TITLECASE_LETTER}.
<p>
Some characters look like pairs of Latin letters. For example, there
is an uppercase letter that looks like \"LJ\" and has a corresponding
lowercase letter that looks like \"lj\". A third form, which looks like \"Lj\",
is the appropriate form to use when rendering a word in lowercase
with initial capitals, as for a book title.
<p>
These are some of the Unicode characters for which this method returns
{@code true}:
<ul>
<li>{@code LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON}
<li>{@code LATIN CAPITAL LETTER L WITH SMALL LETTER J}
<li>{@code LATIN CAPITAL LETTER N WITH SMALL LETTER J}
<li>{@code LATIN CAPITAL LETTER D WITH SMALL LETTER Z}
</ul>
<p> Many other Unicode characters are titlecase too.<p>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is titlecase;
         {@code false} otherwise.
@see     Character#isLowerCase(int)
@see     Character#isUpperCase(int)
@see     Character#toTitleCase(int)
@see     Character#getType(int)
@since   1.5
"
      end

      operation 6589570 "isDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a digit.
<p>
A character is a digit if its general category type, provided
by {@code Character.getType(ch)}, is
{@code DECIMAL_DIGIT_NUMBER}.
<p>
Some Unicode character ranges that contain digits:
<ul>
<li>{@code '\\u005Cu0030'} through {@code '\\u005Cu0039'},
    ISO-LATIN-1 digits ({@code '0'} through {@code '9'})
<li>{@code '\\u005Cu0660'} through {@code '\\u005Cu0669'},
    Arabic-Indic digits
<li>{@code '\\u005Cu06F0'} through {@code '\\u005Cu06F9'},
    Extended Arabic-Indic digits
<li>{@code '\\u005Cu0966'} through {@code '\\u005Cu096F'},
    Devanagari digits
<li>{@code '\\u005CuFF10'} through {@code '\\u005CuFF19'},
    Fullwidth digits
</ul>

Many other character ranges contain digits as well.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isDigit(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is a digit;
         {@code false} otherwise.
@see     Character#digit(char, int)
@see     Character#forDigit(int, int)
@see     Character#getType(char)
"
      end

      operation 6589698 "isDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a digit.
<p>
A character is a digit if its general category type, provided
by {@link Character#getType(int) getType(codePoint)}, is
{@code DECIMAL_DIGIT_NUMBER}.
<p>
Some Unicode character ranges that contain digits:
<ul>
<li>{@code '\\u005Cu0030'} through {@code '\\u005Cu0039'},
    ISO-LATIN-1 digits ({@code '0'} through {@code '9'})
<li>{@code '\\u005Cu0660'} through {@code '\\u005Cu0669'},
    Arabic-Indic digits
<li>{@code '\\u005Cu06F0'} through {@code '\\u005Cu06F9'},
    Extended Arabic-Indic digits
<li>{@code '\\u005Cu0966'} through {@code '\\u005Cu096F'},
    Devanagari digits
<li>{@code '\\u005CuFF10'} through {@code '\\u005CuFF19'},
    Fullwidth digits
</ul>

Many other character ranges contain digits as well.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is a digit;
         {@code false} otherwise.
@see     Character#forDigit(int, int)
@see     Character#getType(int)
@since   1.5
"
      end

      operation 6589826 "isDefined"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if a character is defined in Unicode.
<p>
A character is defined if at least one of the following is true:
<ul>
<li>It has an entry in the UnicodeData file.
<li>It has a value in a range defined by the UnicodeData file.
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isDefined(int)} method.

@param   ch   the character to be tested
@return  {@code true} if the character has a defined meaning
         in Unicode; {@code false} otherwise.
@see     Character#isDigit(char)
@see     Character#isLetter(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isLowerCase(char)
@see     Character#isTitleCase(char)
@see     Character#isUpperCase(char)
@since   1.0.2
"
      end

      operation 6589954 "isDefined"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if a character (Unicode code point) is defined in Unicode.
<p>
A character is defined if at least one of the following is true:
<ul>
<li>It has an entry in the UnicodeData file.
<li>It has a value in a range defined by the UnicodeData file.
</ul>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character has a defined meaning
         in Unicode; {@code false} otherwise.
@see     Character#isDigit(int)
@see     Character#isLetter(int)
@see     Character#isLetterOrDigit(int)
@see     Character#isLowerCase(int)
@see     Character#isTitleCase(int)
@see     Character#isUpperCase(int)
@since   1.5
"
      end

      operation 6590082 "isLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a letter.
<p>
A character is considered to be a letter if its general
category type, provided by {@code Character.getType(ch)},
is any of the following:
<ul>
<li> {@code UPPERCASE_LETTER}
<li> {@code LOWERCASE_LETTER}
<li> {@code TITLECASE_LETTER}
<li> {@code MODIFIER_LETTER}
<li> {@code OTHER_LETTER}
</ul>

Not all letters have case. Many characters are
letters but are neither uppercase nor lowercase nor titlecase.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isLetter(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is a letter;
         {@code false} otherwise.
@see     Character#isDigit(char)
@see     Character#isJavaIdentifierStart(char)
@see     Character#isJavaLetter(char)
@see     Character#isJavaLetterOrDigit(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isLowerCase(char)
@see     Character#isTitleCase(char)
@see     Character#isUnicodeIdentifierStart(char)
@see     Character#isUpperCase(char)
"
      end

      operation 6590210 "isLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a letter.
<p>
A character is considered to be a letter if its general
category type, provided by {@link Character#getType(int) getType(codePoint)},
is any of the following:
<ul>
<li> {@code UPPERCASE_LETTER}
<li> {@code LOWERCASE_LETTER}
<li> {@code TITLECASE_LETTER}
<li> {@code MODIFIER_LETTER}
<li> {@code OTHER_LETTER}
</ul>

Not all letters have case. Many characters are
letters but are neither uppercase nor lowercase nor titlecase.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is a letter;
         {@code false} otherwise.
@see     Character#isDigit(int)
@see     Character#isJavaIdentifierStart(int)
@see     Character#isLetterOrDigit(int)
@see     Character#isLowerCase(int)
@see     Character#isTitleCase(int)
@see     Character#isUnicodeIdentifierStart(int)
@see     Character#isUpperCase(int)
@since   1.5
"
      end

      operation 6590338 "isLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a letter or digit.
<p>
A character is considered to be a letter or digit if either
{@code Character.isLetter(char ch)} or
{@code Character.isDigit(char ch)} returns
{@code true} for the character.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isLetterOrDigit(int)} method.

@param   ch   the character to be tested.
@return  {@code true} if the character is a letter or digit;
         {@code false} otherwise.
@see     Character#isDigit(char)
@see     Character#isJavaIdentifierPart(char)
@see     Character#isJavaLetter(char)
@see     Character#isJavaLetterOrDigit(char)
@see     Character#isLetter(char)
@see     Character#isUnicodeIdentifierPart(char)
@since   1.0.2
"
      end

      operation 6590466 "isLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a letter or digit.
<p>
A character is considered to be a letter or digit if either
{@link #isLetter(int) isLetter(codePoint)} or
{@link #isDigit(int) isDigit(codePoint)} returns
{@code true} for the character.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is a letter or digit;
         {@code false} otherwise.
@see     Character#isDigit(int)
@see     Character#isJavaIdentifierPart(int)
@see     Character#isLetter(int)
@see     Character#isUnicodeIdentifierPart(int)
@since   1.5
"
      end

      operation 6590594 "isJavaLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determines if the specified character is permissible as the first
character in a Java identifier.
<p>
A character may start a Java identifier if and only if
one of the following is true:
<ul>
<li> {@link #isLetter(char) isLetter(ch)} returns {@code true}
<li> {@link #getType(char) getType(ch)} returns {@code LETTER_NUMBER}
<li> {@code ch} is a currency symbol (such as {@code '$'})
<li> {@code ch} is a connecting punctuation character (such as {@code '_'}).
</ul>

@param   ch the character to be tested.
@return  {@code true} if the character may start a Java
         identifier; {@code false} otherwise.
@see     Character#isJavaLetterOrDigit(char)
@see     Character#isJavaIdentifierStart(char)
@see     Character#isJavaIdentifierPart(char)
@see     Character#isLetter(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isUnicodeIdentifierStart(char)
@since   1.02
@deprecated Replaced by isJavaIdentifierStart(char).
"
      end

      operation 6590722 "isJavaLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determines if the specified character may be part of a Java
identifier as other than the first character.
<p>
A character may be part of a Java identifier if and only if any
of the following are true:
<ul>
<li>  it is a letter
<li>  it is a currency symbol (such as {@code '$'})
<li>  it is a connecting punctuation character (such as {@code '_'})
<li>  it is a digit
<li>  it is a numeric letter (such as a Roman numeral character)
<li>  it is a combining mark
<li>  it is a non-spacing mark
<li> {@code isIdentifierIgnorable} returns
{@code true} for the character.
</ul>

@param   ch the character to be tested.
@return  {@code true} if the character may be part of a
         Java identifier; {@code false} otherwise.
@see     Character#isJavaLetter(char)
@see     Character#isJavaIdentifierStart(char)
@see     Character#isJavaIdentifierPart(char)
@see     Character#isLetter(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isUnicodeIdentifierPart(char)
@see     Character#isIdentifierIgnorable(char)
@since   1.02
@deprecated Replaced by isJavaIdentifierPart(char).
"
      end

      operation 6590850 "isAlphabetic"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is an alphabet.
<p>
A character is considered to be alphabetic if its general category type,
provided by {@link Character#getType(int) getType(codePoint)}, is any of
the following:
<ul>
<li> <code>UPPERCASE_LETTER</code>
<li> <code>LOWERCASE_LETTER</code>
<li> <code>TITLECASE_LETTER</code>
<li> <code>MODIFIER_LETTER</code>
<li> <code>OTHER_LETTER</code>
<li> <code>LETTER_NUMBER</code>
</ul>
or it has contributory property Other_Alphabetic as defined by the
Unicode Standard.

@param   codePoint the character (Unicode code point) to be tested.
@return  <code>true</code> if the character is a Unicode alphabet
         character, <code>false</code> otherwise.
@since   1.7
"
      end

      operation 6590978 "isIdeographic"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a CJKV
(Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by
the Unicode Standard.

@param   codePoint the character (Unicode code point) to be tested.
@return  <code>true</code> if the character is a Unicode ideograph
         character, <code>false</code> otherwise.
@since   1.7
"
      end

      operation 6591106 "isJavaIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is
permissible as the first character in a Java identifier.
<p>
A character may start a Java identifier if and only if
one of the following conditions is true:
<ul>
<li> {@link #isLetter(char) isLetter(ch)} returns {@code true}
<li> {@link #getType(char) getType(ch)} returns {@code LETTER_NUMBER}
<li> {@code ch} is a currency symbol (such as {@code '$'})
<li> {@code ch} is a connecting punctuation character (such as {@code '_'}).
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isJavaIdentifierStart(int)} method.

@param   ch the character to be tested.
@return  {@code true} if the character may start a Java identifier;
         {@code false} otherwise.
@see     Character#isJavaIdentifierPart(char)
@see     Character#isLetter(char)
@see     Character#isUnicodeIdentifierStart(char)
@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)
@since   1.1
"
      end

      operation 6591234 "isJavaIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the character (Unicode code point) is
permissible as the first character in a Java identifier.
<p>
A character may start a Java identifier if and only if
one of the following conditions is true:
<ul>
<li> {@link #isLetter(int) isLetter(codePoint)}
     returns {@code true}
<li> {@link #getType(int) getType(codePoint)}
     returns {@code LETTER_NUMBER}
<li> the referenced character is a currency symbol (such as {@code '$'})
<li> the referenced character is a connecting punctuation character
     (such as {@code '_'}).
</ul>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character may start a Java identifier;
         {@code false} otherwise.
@see     Character#isJavaIdentifierPart(int)
@see     Character#isLetter(int)
@see     Character#isUnicodeIdentifierStart(int)
@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)
@since   1.5
"
      end

      operation 6591362 "isJavaIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character may be part of a Java
identifier as other than the first character.
<p>
A character may be part of a Java identifier if any of the following
are true:
<ul>
<li>  it is a letter
<li>  it is a currency symbol (such as {@code '$'})
<li>  it is a connecting punctuation character (such as {@code '_'})
<li>  it is a digit
<li>  it is a numeric letter (such as a Roman numeral character)
<li>  it is a combining mark
<li>  it is a non-spacing mark
<li> {@code isIdentifierIgnorable} returns
{@code true} for the character
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isJavaIdentifierPart(int)} method.

@param   ch      the character to be tested.
@return {@code true} if the character may be part of a
         Java identifier; {@code false} otherwise.
@see     Character#isIdentifierIgnorable(char)
@see     Character#isJavaIdentifierStart(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isUnicodeIdentifierPart(char)
@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)
@since   1.1
"
      end

      operation 6591490 "isJavaIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the character (Unicode code point) may be part of a Java
identifier as other than the first character.
<p>
A character may be part of a Java identifier if any of the following
are true:
<ul>
<li>  it is a letter
<li>  it is a currency symbol (such as {@code '$'})
<li>  it is a connecting punctuation character (such as {@code '_'})
<li>  it is a digit
<li>  it is a numeric letter (such as a Roman numeral character)
<li>  it is a combining mark
<li>  it is a non-spacing mark
<li> {@link #isIdentifierIgnorable(int)
isIdentifierIgnorable(codePoint)} returns {@code true} for
the character
</ul>

@param   codePoint the character (Unicode code point) to be tested.
@return {@code true} if the character may be part of a
         Java identifier; {@code false} otherwise.
@see     Character#isIdentifierIgnorable(int)
@see     Character#isJavaIdentifierStart(int)
@see     Character#isLetterOrDigit(int)
@see     Character#isUnicodeIdentifierPart(int)
@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)
@since   1.5
"
      end

      operation 6591618 "isUnicodeIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is permissible as the
first character in a Unicode identifier.
<p>
A character may start a Unicode identifier if and only if
one of the following conditions is true:
<ul>
<li> {@link #isLetter(char) isLetter(ch)} returns {@code true}
<li> {@link #getType(char) getType(ch)} returns
     {@code LETTER_NUMBER}.
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isUnicodeIdentifierStart(int)} method.

@param   ch      the character to be tested.
@return  {@code true} if the character may start a Unicode
         identifier; {@code false} otherwise.
@see     Character#isJavaIdentifierStart(char)
@see     Character#isLetter(char)
@see     Character#isUnicodeIdentifierPart(char)
@since   1.1
"
      end

      operation 6591746 "isUnicodeIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is permissible as the
first character in a Unicode identifier.
<p>
A character may start a Unicode identifier if and only if
one of the following conditions is true:
<ul>
<li> {@link #isLetter(int) isLetter(codePoint)}
     returns {@code true}
<li> {@link #getType(int) getType(codePoint)}
     returns {@code LETTER_NUMBER}.
</ul>
@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character may start a Unicode
         identifier; {@code false} otherwise.
@see     Character#isJavaIdentifierStart(int)
@see     Character#isLetter(int)
@see     Character#isUnicodeIdentifierPart(int)
@since   1.5
"
      end

      operation 6591874 "isUnicodeIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character may be part of a Unicode
identifier as other than the first character.
<p>
A character may be part of a Unicode identifier if and only if
one of the following statements is true:
<ul>
<li>  it is a letter
<li>  it is a connecting punctuation character (such as {@code '_'})
<li>  it is a digit
<li>  it is a numeric letter (such as a Roman numeral character)
<li>  it is a combining mark
<li>  it is a non-spacing mark
<li> {@code isIdentifierIgnorable} returns
{@code true} for this character.
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isUnicodeIdentifierPart(int)} method.

@param   ch      the character to be tested.
@return  {@code true} if the character may be part of a
         Unicode identifier; {@code false} otherwise.
@see     Character#isIdentifierIgnorable(char)
@see     Character#isJavaIdentifierPart(char)
@see     Character#isLetterOrDigit(char)
@see     Character#isUnicodeIdentifierStart(char)
@since   1.1
"
      end

      operation 6592002 "isUnicodeIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) may be part of a Unicode
identifier as other than the first character.
<p>
A character may be part of a Unicode identifier if and only if
one of the following statements is true:
<ul>
<li>  it is a letter
<li>  it is a connecting punctuation character (such as {@code '_'})
<li>  it is a digit
<li>  it is a numeric letter (such as a Roman numeral character)
<li>  it is a combining mark
<li>  it is a non-spacing mark
<li> {@code isIdentifierIgnorable} returns
{@code true} for this character.
</ul>
@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character may be part of a
         Unicode identifier; {@code false} otherwise.
@see     Character#isIdentifierIgnorable(int)
@see     Character#isJavaIdentifierPart(int)
@see     Character#isLetterOrDigit(int)
@see     Character#isUnicodeIdentifierStart(int)
@since   1.5
"
      end

      operation 6592130 "isIdentifierIgnorable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character should be regarded as
an ignorable character in a Java identifier or a Unicode identifier.
<p>
The following Unicode characters are ignorable in a Java identifier
or a Unicode identifier:
<ul>
<li>ISO control characters that are not whitespace
<ul>
<li>{@code '\\u005Cu0000'} through {@code '\\u005Cu0008'}
<li>{@code '\\u005Cu000E'} through {@code '\\u005Cu001B'}
<li>{@code '\\u005Cu007F'} through {@code '\\u005Cu009F'}
</ul>

<li>all characters that have the {@code FORMAT} general
category value
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isIdentifierIgnorable(int)} method.

@param   ch      the character to be tested.
@return  {@code true} if the character is an ignorable control
         character that may be part of a Java or Unicode identifier;
          {@code false} otherwise.
@see     Character#isJavaIdentifierPart(char)
@see     Character#isUnicodeIdentifierPart(char)
@since   1.1
"
      end

      operation 6592258 "isIdentifierIgnorable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) should be regarded as
an ignorable character in a Java identifier or a Unicode identifier.
<p>
The following Unicode characters are ignorable in a Java identifier
or a Unicode identifier:
<ul>
<li>ISO control characters that are not whitespace
<ul>
<li>{@code '\\u005Cu0000'} through {@code '\\u005Cu0008'}
<li>{@code '\\u005Cu000E'} through {@code '\\u005Cu001B'}
<li>{@code '\\u005Cu007F'} through {@code '\\u005Cu009F'}
</ul>

<li>all characters that have the {@code FORMAT} general
category value
</ul>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is an ignorable control
         character that may be part of a Java or Unicode identifier;
         {@code false} otherwise.
@see     Character#isJavaIdentifierPart(int)
@see     Character#isUnicodeIdentifierPart(int)
@since   1.5
"
      end

      operation 6592386 "toLowerCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character argument to lowercase using case
mapping information from the UnicodeData file.
<p>
Note that
{@code Character.isLowerCase(Character.toLowerCase(ch))}
does not always return {@code true} for some ranges of
characters, particularly those that are symbols or ideographs.

<p>In general, {@link String#toLowerCase()} should be used to map
characters to lowercase. {@code String} case mapping methods
have several benefits over {@code Character} case mapping methods.
{@code String} case mapping methods can perform locale-sensitive
mappings, context-sensitive mappings, and 1:M character mappings, whereas
the {@code Character} case mapping methods cannot.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #toLowerCase(int)} method.

@param   ch   the character to be converted.
@return  the lowercase equivalent of the character, if any;
         otherwise, the character itself.
@see     Character#isLowerCase(char)
@see     String#toLowerCase()
"
      end

      operation 6592514 "toLowerCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character (Unicode code point) argument to
lowercase using case mapping information from the UnicodeData
file.

<p> Note that
{@code Character.isLowerCase(Character.toLowerCase(codePoint))}
does not always return {@code true} for some ranges of
characters, particularly those that are symbols or ideographs.

<p>In general, {@link String#toLowerCase()} should be used to map
characters to lowercase. {@code String} case mapping methods
have several benefits over {@code Character} case mapping methods.
{@code String} case mapping methods can perform locale-sensitive
mappings, context-sensitive mappings, and 1:M character mappings, whereas
the {@code Character} case mapping methods cannot.

@param   codePoint   the character (Unicode code point) to be converted.
@return  the lowercase equivalent of the character (Unicode code
         point), if any; otherwise, the character itself.
@see     Character#isLowerCase(int)
@see     String#toLowerCase()

@since   1.5
"
      end

      operation 6592642 "toUpperCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character argument to uppercase using case mapping
information from the UnicodeData file.
<p>
Note that
{@code Character.isUpperCase(Character.toUpperCase(ch))}
does not always return {@code true} for some ranges of
characters, particularly those that are symbols or ideographs.

<p>In general, {@link String#toUpperCase()} should be used to map
characters to uppercase. {@code String} case mapping methods
have several benefits over {@code Character} case mapping methods.
{@code String} case mapping methods can perform locale-sensitive
mappings, context-sensitive mappings, and 1:M character mappings, whereas
the {@code Character} case mapping methods cannot.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #toUpperCase(int)} method.

@param   ch   the character to be converted.
@return  the uppercase equivalent of the character, if any;
         otherwise, the character itself.
@see     Character#isUpperCase(char)
@see     String#toUpperCase()
"
      end

      operation 6592770 "toUpperCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character (Unicode code point) argument to
uppercase using case mapping information from the UnicodeData
file.

<p>Note that
{@code Character.isUpperCase(Character.toUpperCase(codePoint))}
does not always return {@code true} for some ranges of
characters, particularly those that are symbols or ideographs.

<p>In general, {@link String#toUpperCase()} should be used to map
characters to uppercase. {@code String} case mapping methods
have several benefits over {@code Character} case mapping methods.
{@code String} case mapping methods can perform locale-sensitive
mappings, context-sensitive mappings, and 1:M character mappings, whereas
the {@code Character} case mapping methods cannot.

@param   codePoint   the character (Unicode code point) to be converted.
@return  the uppercase equivalent of the character, if any;
         otherwise, the character itself.
@see     Character#isUpperCase(int)
@see     String#toUpperCase()

@since   1.5
"
      end

      operation 6592898 "toTitleCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character argument to titlecase using case mapping
information from the UnicodeData file. If a character has no
explicit titlecase mapping and is not itself a titlecase char
according to UnicodeData, then the uppercase mapping is
returned as an equivalent titlecase mapping. If the
{@code char} argument is already a titlecase
{@code char}, the same {@code char} value will be
returned.
<p>
Note that
{@code Character.isTitleCase(Character.toTitleCase(ch))}
does not always return {@code true} for some ranges of
characters.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #toTitleCase(int)} method.

@param   ch   the character to be converted.
@return  the titlecase equivalent of the character, if any;
         otherwise, the character itself.
@see     Character#isTitleCase(char)
@see     Character#toLowerCase(char)
@see     Character#toUpperCase(char)
@since   1.0.2
"
      end

      operation 6593026 "toTitleCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character (Unicode code point) argument to titlecase using case mapping
information from the UnicodeData file. If a character has no
explicit titlecase mapping and is not itself a titlecase char
according to UnicodeData, then the uppercase mapping is
returned as an equivalent titlecase mapping. If the
character argument is already a titlecase
character, the same character value will be
returned.

<p>Note that
{@code Character.isTitleCase(Character.toTitleCase(codePoint))}
does not always return {@code true} for some ranges of
characters.

@param   codePoint   the character (Unicode code point) to be converted.
@return  the titlecase equivalent of the character, if any;
         otherwise, the character itself.
@see     Character#isTitleCase(int)
@see     Character#toLowerCase(int)
@see     Character#toUpperCase(int)
@since   1.5
"
      end

      operation 6593154 "digit"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "char"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric value of the character {@code ch} in the
specified radix.
<p>
If the radix is not in the range {@code MIN_RADIX} &le;
{@code radix} &le; {@code MAX_RADIX} or if the
value of {@code ch} is not a valid digit in the specified
radix, {@code -1} is returned. A character is a valid digit
if at least one of the following is true:
<ul>
<li>The method {@code isDigit} is {@code true} of the character
    and the Unicode decimal digit value of the character (or its
    single-character decomposition) is less than the specified radix.
    In this case the decimal digit value is returned.
<li>The character is one of the uppercase Latin letters
    {@code 'A'} through {@code 'Z'} and its code is less than
    {@code radix + 'A' - 10}.
    In this case, {@code ch - 'A' + 10}
    is returned.
<li>The character is one of the lowercase Latin letters
    {@code 'a'} through {@code 'z'} and its code is less than
    {@code radix + 'a' - 10}.
    In this case, {@code ch - 'a' + 10}
    is returned.
<li>The character is one of the fullwidth uppercase Latin letters A
    ({@code '\\u005CuFF21'}) through Z ({@code '\\u005CuFF3A'})
    and its code is less than
    {@code radix + '\\u005CuFF21' - 10}.
    In this case, {@code ch - '\\u005CuFF21' + 10}
    is returned.
<li>The character is one of the fullwidth lowercase Latin letters a
    ({@code '\\u005CuFF41'}) through z ({@code '\\u005CuFF5A'})
    and its code is less than
    {@code radix + '\\u005CuFF41' - 10}.
    In this case, {@code ch - '\\u005CuFF41' + 10}
    is returned.
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #digit(int, int)} method.

@param   ch      the character to be converted.
@param   radix   the radix.
@return  the numeric value represented by the character in the
         specified radix.
@see     Character#forDigit(int, int)
@see     Character#isDigit(char)
"
      end

      operation 6593282 "digit"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "codePoint" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric value of the specified character (Unicode
code point) in the specified radix.

<p>If the radix is not in the range {@code MIN_RADIX} &le;
{@code radix} &le; {@code MAX_RADIX} or if the
character is not a valid digit in the specified
radix, {@code -1} is returned. A character is a valid digit
if at least one of the following is true:
<ul>
<li>The method {@link #isDigit(int) isDigit(codePoint)} is {@code true} of the character
    and the Unicode decimal digit value of the character (or its
    single-character decomposition) is less than the specified radix.
    In this case the decimal digit value is returned.
<li>The character is one of the uppercase Latin letters
    {@code 'A'} through {@code 'Z'} and its code is less than
    {@code radix + 'A' - 10}.
    In this case, {@code codePoint - 'A' + 10}
    is returned.
<li>The character is one of the lowercase Latin letters
    {@code 'a'} through {@code 'z'} and its code is less than
    {@code radix + 'a' - 10}.
    In this case, {@code codePoint - 'a' + 10}
    is returned.
<li>The character is one of the fullwidth uppercase Latin letters A
    ({@code '\\u005CuFF21'}) through Z ({@code '\\u005CuFF3A'})
    and its code is less than
    {@code radix + '\\u005CuFF21' - 10}.
    In this case,
    {@code codePoint - '\\u005CuFF21' + 10}
    is returned.
<li>The character is one of the fullwidth lowercase Latin letters a
    ({@code '\\u005CuFF41'}) through z ({@code '\\u005CuFF5A'})
    and its code is less than
    {@code radix + '\\u005CuFF41'- 10}.
    In this case,
    {@code codePoint - '\\u005CuFF41' + 10}
    is returned.
</ul>

@param   codePoint the character (Unicode code point) to be converted.
@param   radix   the radix.
@return  the numeric value represented by the character in the
         specified radix.
@see     Character#forDigit(int, int)
@see     Character#isDigit(int)
@since   1.5
"
      end

      operation 6593410 "getNumericValue"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code int} value that the specified Unicode
character represents. For example, the character
{@code '\\u005Cu216C'} (the roman numeral fifty) will return
an int with a value of 50.
<p>
The letters A-Z in their uppercase ({@code '\\u005Cu0041'} through
{@code '\\u005Cu005A'}), lowercase
({@code '\\u005Cu0061'} through {@code '\\u005Cu007A'}), and
full width variant ({@code '\\u005CuFF21'} through
{@code '\\u005CuFF3A'} and {@code '\\u005CuFF41'} through
{@code '\\u005CuFF5A'}) forms have numeric values from 10
through 35. This is independent of the Unicode specification,
which does not assign numeric values to these {@code char}
values.
<p>
If the character does not have a numeric value, then -1 is returned.
If the character has a numeric value that cannot be represented as a
nonnegative integer (for example, a fractional value), then -2
is returned.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #getNumericValue(int)} method.

@param   ch      the character to be converted.
@return  the numeric value of the character, as a nonnegative {@code int}
          value; -2 if the character has a numeric value that is not a
         nonnegative integer; -1 if the character has no numeric value.
@see     Character#forDigit(int, int)
@see     Character#isDigit(char)
@since   1.1
"
      end

      operation 6593538 "getNumericValue"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code int} value that the specified
character (Unicode code point) represents. For example, the character
{@code '\\u005Cu216C'} (the Roman numeral fifty) will return
an {@code int} with a value of 50.
<p>
The letters A-Z in their uppercase ({@code '\\u005Cu0041'} through
{@code '\\u005Cu005A'}), lowercase
({@code '\\u005Cu0061'} through {@code '\\u005Cu007A'}), and
full width variant ({@code '\\u005CuFF21'} through
{@code '\\u005CuFF3A'} and {@code '\\u005CuFF41'} through
{@code '\\u005CuFF5A'}) forms have numeric values from 10
through 35. This is independent of the Unicode specification,
which does not assign numeric values to these {@code char}
values.
<p>
If the character does not have a numeric value, then -1 is returned.
If the character has a numeric value that cannot be represented as a
nonnegative integer (for example, a fractional value), then -2
is returned.

@param   codePoint the character (Unicode code point) to be converted.
@return  the numeric value of the character, as a nonnegative {@code int}
         value; -2 if the character has a numeric value that is not a
         nonnegative integer; -1 if the character has no numeric value.
@see     Character#forDigit(int, int)
@see     Character#isDigit(int)
@since   1.5
"
      end

      operation 6593666 "isSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determines if the specified character is ISO-LATIN-1 white space.
This method returns {@code true} for the following five
characters only:
<table summary=\"truechars\">
<tr><td>{@code '\\t'}</td>            <td>{@code U+0009}</td>
    <td>{@code HORIZONTAL TABULATION}</td></tr>
<tr><td>{@code '\\n'}</td>            <td>{@code U+000A}</td>
    <td>{@code NEW LINE}</td></tr>
<tr><td>{@code '\\f'}</td>            <td>{@code U+000C}</td>
    <td>{@code FORM FEED}</td></tr>
<tr><td>{@code '\\r'}</td>            <td>{@code U+000D}</td>
    <td>{@code CARRIAGE RETURN}</td></tr>
<tr><td>{@code ' '}</td>             <td>{@code U+0020}</td>
    <td>{@code SPACE}</td></tr>
</table>

@param      ch   the character to be tested.
@return     {@code true} if the character is ISO-LATIN-1 white
            space; {@code false} otherwise.
@see        Character#isSpaceChar(char)
@see        Character#isWhitespace(char)
@deprecated Replaced by isWhitespace(char).
"
      end

      operation 6593794 "isSpaceChar"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is a Unicode space character.
A character is considered to be a space character if and only if
it is specified to be a space character by the Unicode Standard. This
method returns true if the character's general category type is any of
the following:
<ul>
<li> {@code SPACE_SEPARATOR}
<li> {@code LINE_SEPARATOR}
<li> {@code PARAGRAPH_SEPARATOR}
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isSpaceChar(int)} method.

@param   ch      the character to be tested.
@return  {@code true} if the character is a space character;
         {@code false} otherwise.
@see     Character#isWhitespace(char)
@since   1.1
"
      end

      operation 6593922 "isSpaceChar"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is a
Unicode space character.  A character is considered to be a
space character if and only if it is specified to be a space
character by the Unicode Standard. This method returns true if
the character's general category type is any of the following:

<ul>
<li> {@link #SPACE_SEPARATOR}
<li> {@link #LINE_SEPARATOR}
<li> {@link #PARAGRAPH_SEPARATOR}
</ul>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is a space character;
         {@code false} otherwise.
@see     Character#isWhitespace(int)
@since   1.5
"
      end

      operation 6594050 "isWhitespace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is white space according to Java.
A character is a Java whitespace character if and only if it satisfies
one of the following criteria:
<ul>
<li> It is a Unicode space character ({@code SPACE_SEPARATOR},
     {@code LINE_SEPARATOR}, or {@code PARAGRAPH_SEPARATOR})
     but is not also a non-breaking space ({@code '\\u005Cu00A0'},
     {@code '\\u005Cu2007'}, {@code '\\u005Cu202F'}).
<li> It is {@code '\\u005Ct'}, U+0009 HORIZONTAL TABULATION.
<li> It is {@code '\\u005Cn'}, U+000A LINE FEED.
<li> It is {@code '\\u005Cu000B'}, U+000B VERTICAL TABULATION.
<li> It is {@code '\\u005Cf'}, U+000C FORM FEED.
<li> It is {@code '\\u005Cr'}, U+000D CARRIAGE RETURN.
<li> It is {@code '\\u005Cu001C'}, U+001C FILE SEPARATOR.
<li> It is {@code '\\u005Cu001D'}, U+001D GROUP SEPARATOR.
<li> It is {@code '\\u005Cu001E'}, U+001E RECORD SEPARATOR.
<li> It is {@code '\\u005Cu001F'}, U+001F UNIT SEPARATOR.
</ul>

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isWhitespace(int)} method.

@param   ch the character to be tested.
@return  {@code true} if the character is a Java whitespace
         character; {@code false} otherwise.
@see     Character#isSpaceChar(char)
@since   1.1
"
      end

      operation 6594178 "isWhitespace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character (Unicode code point) is
white space according to Java.  A character is a Java
whitespace character if and only if it satisfies one of the
following criteria:
<ul>
<li> It is a Unicode space character ({@link #SPACE_SEPARATOR},
     {@link #LINE_SEPARATOR}, or {@link #PARAGRAPH_SEPARATOR})
     but is not also a non-breaking space ({@code '\\u005Cu00A0'},
     {@code '\\u005Cu2007'}, {@code '\\u005Cu202F'}).
<li> It is {@code '\\u005Ct'}, U+0009 HORIZONTAL TABULATION.
<li> It is {@code '\\u005Cn'}, U+000A LINE FEED.
<li> It is {@code '\\u005Cu000B'}, U+000B VERTICAL TABULATION.
<li> It is {@code '\\u005Cf'}, U+000C FORM FEED.
<li> It is {@code '\\u005Cr'}, U+000D CARRIAGE RETURN.
<li> It is {@code '\\u005Cu001C'}, U+001C FILE SEPARATOR.
<li> It is {@code '\\u005Cu001D'}, U+001D GROUP SEPARATOR.
<li> It is {@code '\\u005Cu001E'}, U+001E RECORD SEPARATOR.
<li> It is {@code '\\u005Cu001F'}, U+001F UNIT SEPARATOR.
</ul>
<p>

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is a Java whitespace
         character; {@code false} otherwise.
@see     Character#isSpaceChar(int)
@since   1.5
"
      end

      operation 6594306 "isISOControl"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the specified character is an ISO control
character.  A character is considered to be an ISO control
character if its code is in the range {@code '\\u005Cu0000'}
through {@code '\\u005Cu001F'} or in the range
{@code '\\u005Cu007F'} through {@code '\\u005Cu009F'}.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isISOControl(int)} method.

@param   ch      the character to be tested.
@return  {@code true} if the character is an ISO control character;
         {@code false} otherwise.

@see     Character#isSpaceChar(char)
@see     Character#isWhitespace(char)
@since   1.1
"
      end

      operation 6594434 "isISOControl"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the referenced character (Unicode code point) is an ISO control
character.  A character is considered to be an ISO control
character if its code is in the range {@code '\\u005Cu0000'}
through {@code '\\u005Cu001F'} or in the range
{@code '\\u005Cu007F'} through {@code '\\u005Cu009F'}.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is an ISO control character;
         {@code false} otherwise.
@see     Character#isSpaceChar(int)
@see     Character#isWhitespace(int)
@since   1.5
"
      end

      operation 6594562 "getType"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a value indicating a character's general category.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #getType(int)} method.

@param   ch      the character to be tested.
@return  a value of type {@code int} representing the
         character's general category.
@see     Character#COMBINING_SPACING_MARK
@see     Character#CONNECTOR_PUNCTUATION
@see     Character#CONTROL
@see     Character#CURRENCY_SYMBOL
@see     Character#DASH_PUNCTUATION
@see     Character#DECIMAL_DIGIT_NUMBER
@see     Character#ENCLOSING_MARK
@see     Character#END_PUNCTUATION
@see     Character#FINAL_QUOTE_PUNCTUATION
@see     Character#FORMAT
@see     Character#INITIAL_QUOTE_PUNCTUATION
@see     Character#LETTER_NUMBER
@see     Character#LINE_SEPARATOR
@see     Character#LOWERCASE_LETTER
@see     Character#MATH_SYMBOL
@see     Character#MODIFIER_LETTER
@see     Character#MODIFIER_SYMBOL
@see     Character#NON_SPACING_MARK
@see     Character#OTHER_LETTER
@see     Character#OTHER_NUMBER
@see     Character#OTHER_PUNCTUATION
@see     Character#OTHER_SYMBOL
@see     Character#PARAGRAPH_SEPARATOR
@see     Character#PRIVATE_USE
@see     Character#SPACE_SEPARATOR
@see     Character#START_PUNCTUATION
@see     Character#SURROGATE
@see     Character#TITLECASE_LETTER
@see     Character#UNASSIGNED
@see     Character#UPPERCASE_LETTER
@since   1.1
"
      end

      operation 6594690 "getType"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a value indicating a character's general category.

@param   codePoint the character (Unicode code point) to be tested.
@return  a value of type {@code int} representing the
         character's general category.
@see     Character#COMBINING_SPACING_MARK COMBINING_SPACING_MARK
@see     Character#CONNECTOR_PUNCTUATION CONNECTOR_PUNCTUATION
@see     Character#CONTROL CONTROL
@see     Character#CURRENCY_SYMBOL CURRENCY_SYMBOL
@see     Character#DASH_PUNCTUATION DASH_PUNCTUATION
@see     Character#DECIMAL_DIGIT_NUMBER DECIMAL_DIGIT_NUMBER
@see     Character#ENCLOSING_MARK ENCLOSING_MARK
@see     Character#END_PUNCTUATION END_PUNCTUATION
@see     Character#FINAL_QUOTE_PUNCTUATION FINAL_QUOTE_PUNCTUATION
@see     Character#FORMAT FORMAT
@see     Character#INITIAL_QUOTE_PUNCTUATION INITIAL_QUOTE_PUNCTUATION
@see     Character#LETTER_NUMBER LETTER_NUMBER
@see     Character#LINE_SEPARATOR LINE_SEPARATOR
@see     Character#LOWERCASE_LETTER LOWERCASE_LETTER
@see     Character#MATH_SYMBOL MATH_SYMBOL
@see     Character#MODIFIER_LETTER MODIFIER_LETTER
@see     Character#MODIFIER_SYMBOL MODIFIER_SYMBOL
@see     Character#NON_SPACING_MARK NON_SPACING_MARK
@see     Character#OTHER_LETTER OTHER_LETTER
@see     Character#OTHER_NUMBER OTHER_NUMBER
@see     Character#OTHER_PUNCTUATION OTHER_PUNCTUATION
@see     Character#OTHER_SYMBOL OTHER_SYMBOL
@see     Character#PARAGRAPH_SEPARATOR PARAGRAPH_SEPARATOR
@see     Character#PRIVATE_USE PRIVATE_USE
@see     Character#SPACE_SEPARATOR SPACE_SEPARATOR
@see     Character#START_PUNCTUATION START_PUNCTUATION
@see     Character#SURROGATE SURROGATE
@see     Character#TITLECASE_LETTER TITLECASE_LETTER
@see     Character#UNASSIGNED UNASSIGNED
@see     Character#UPPERCASE_LETTER UPPERCASE_LETTER
@since   1.5
"
      end

      operation 6594818 "forDigit"
	class_operation public explicit_return_type "char"
	nparams 2
	  param in name "digit" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the character representation for a specific digit in
the specified radix. If the value of {@code radix} is not a
valid radix, or the value of {@code digit} is not a valid
digit in the specified radix, the null character
({@code '\\u005Cu0000'}) is returned.
<p>
The {@code radix} argument is valid if it is greater than or
equal to {@code MIN_RADIX} and less than or equal to
{@code MAX_RADIX}. The {@code digit} argument is valid if
{@code 0 <= digit < radix}.
<p>
If the digit is less than 10, then
{@code '0' + digit} is returned. Otherwise, the value
{@code 'a' + digit - 10} is returned.

@param   digit   the number to convert to a character.
@param   radix   the radix.
@return  the {@code char} representation of the specified digit
         in the specified radix.
@see     Character#MIN_RADIX
@see     Character#MAX_RADIX
@see     Character#digit(char, int)
"
      end

      operation 6594946 "getDirectionality"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode directionality property for the given
character.  Character directionality is used to calculate the
visual ordering of text. The directionality value of undefined
{@code char} values is {@code DIRECTIONALITY_UNDEFINED}.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #getDirectionality(int)} method.

@param  ch {@code char} for which the directionality property
           is requested.
@return the directionality property of the {@code char} value.

@see Character#DIRECTIONALITY_UNDEFINED
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR
@see Character#DIRECTIONALITY_ARABIC_NUMBER
@see Character#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR
@see Character#DIRECTIONALITY_NONSPACING_MARK
@see Character#DIRECTIONALITY_BOUNDARY_NEUTRAL
@see Character#DIRECTIONALITY_PARAGRAPH_SEPARATOR
@see Character#DIRECTIONALITY_SEGMENT_SEPARATOR
@see Character#DIRECTIONALITY_WHITESPACE
@see Character#DIRECTIONALITY_OTHER_NEUTRALS
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
@see Character#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
@since 1.4
"
      end

      operation 6595074 "getDirectionality"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode directionality property for the given
character (Unicode code point).  Character directionality is
used to calculate the visual ordering of text. The
directionality value of undefined character is {@link
#DIRECTIONALITY_UNDEFINED}.

@param   codePoint the character (Unicode code point) for which
         the directionality property is requested.
@return the directionality property of the character.

@see Character#DIRECTIONALITY_UNDEFINED DIRECTIONALITY_UNDEFINED
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT DIRECTIONALITY_LEFT_TO_RIGHT
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT DIRECTIONALITY_RIGHT_TO_LEFT
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER DIRECTIONALITY_EUROPEAN_NUMBER
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR
@see Character#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR
@see Character#DIRECTIONALITY_ARABIC_NUMBER DIRECTIONALITY_ARABIC_NUMBER
@see Character#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR DIRECTIONALITY_COMMON_NUMBER_SEPARATOR
@see Character#DIRECTIONALITY_NONSPACING_MARK DIRECTIONALITY_NONSPACING_MARK
@see Character#DIRECTIONALITY_BOUNDARY_NEUTRAL DIRECTIONALITY_BOUNDARY_NEUTRAL
@see Character#DIRECTIONALITY_PARAGRAPH_SEPARATOR DIRECTIONALITY_PARAGRAPH_SEPARATOR
@see Character#DIRECTIONALITY_SEGMENT_SEPARATOR DIRECTIONALITY_SEGMENT_SEPARATOR
@see Character#DIRECTIONALITY_WHITESPACE DIRECTIONALITY_WHITESPACE
@see Character#DIRECTIONALITY_OTHER_NEUTRALS DIRECTIONALITY_OTHER_NEUTRALS
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
@see Character#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
@see Character#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
@see Character#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
@since    1.5
"
      end

      operation 6595202 "isMirrored"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the character is mirrored according to the
Unicode specification.  Mirrored characters should have their
glyphs horizontally mirrored when displayed in text that is
right-to-left.  For example, {@code '\\u005Cu0028'} LEFT
PARENTHESIS is semantically defined to be an <i>opening
parenthesis</i>.  This will appear as a \"(\" in text that is
left-to-right but as a \")\" in text that is right-to-left.

<p><b>Note:</b> This method cannot handle <a
href=\"#supplementary\"> supplementary characters</a>. To support
all Unicode characters, including supplementary characters, use
the {@link #isMirrored(int)} method.

@param  ch {@code char} for which the mirrored property is requested
@return {@code true} if the char is mirrored, {@code false}
        if the {@code char} is not mirrored or is not defined.
@since 1.4
"
      end

      operation 6595330 "isMirrored"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the specified character (Unicode code point)
is mirrored according to the Unicode specification.  Mirrored
characters should have their glyphs horizontally mirrored when
displayed in text that is right-to-left.  For example,
{@code '\\u005Cu0028'} LEFT PARENTHESIS is semantically
defined to be an <i>opening parenthesis</i>.  This will appear
as a \"(\" in text that is left-to-right but as a \")\" in text
that is right-to-left.

@param   codePoint the character (Unicode code point) to be tested.
@return  {@code true} if the character is mirrored, {@code false}
         if the character is not mirrored or is not defined.
@since   1.5
"
      end

      operation 6595458 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherCharacter" type class_ref 577026 // Character
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Character} objects numerically.

@param   anotherCharacter   the {@code Character} to be compared.

@return  the value {@code 0} if the argument {@code Character}
         is equal to this {@code Character}; a value less than
         {@code 0} if this {@code Character} is numerically less
         than the {@code Character} argument; and a value greater than
         {@code 0} if this {@code Character} is numerically greater
         than the {@code Character} argument (unsigned comparison).
         Note that this is strictly a numerical comparison; it is not
         locale-dependent.
@since   1.2
"
      end

      operation 6595586 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "char"
	  param in name "y" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code char} values numerically.
The value returned is identical to what would be returned by:
<pre>
   Character.valueOf(x).compareTo(Character.valueOf(y))
</pre>

@param  x the first {@code char} to compare
@param  y the second {@code char} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code x < y}; and
        a value greater than {@code 0} if {@code x > y}
@since 1.7
"
      end

      operation 6595714 "toUpperCaseEx"
	class_operation package explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character (Unicode code point) argument to uppercase using
information from the UnicodeData file.
<p>

@param   codePoint   the character (Unicode code point) to be converted.
@return  either the uppercase equivalent of the character, if
         any, or an error flag ({@code Character.ERROR})
         that indicates that a 1:M {@code char} mapping exists.
@see     Character#isLowerCase(char)
@see     Character#isUpperCase(char)
@see     Character#toLowerCase(char)
@see     Character#toTitleCase(char)
@since 1.4
"
      end

      operation 6595842 "toUpperCaseCharArray"
	class_operation package explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the character (Unicode code point) argument to uppercase using case
mapping information from the SpecialCasing file in the Unicode
specification. If a character has no explicit uppercase
mapping, then the {@code char} itself is returned in the
{@code char[]}.

@param   codePoint   the character (Unicode code point) to be converted.
@return a {@code char[]} with the uppercased character.
@since 1.4
"
      end

      attribute 1594498 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bits used to represent a <tt>char</tt> value in unsigned
binary form, constant {@code 16}.

@since 1.5

"
      end

      attribute 1594626 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code char} value in unsigned
binary form.

@since 1.8

"
      end

      operation 6595970 "reverseBytes"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bytes in the
specified <tt>char</tt> value.

@param ch The {@code char} of which to reverse the byte order.
@return the value obtained by reversing (or, equivalently, swapping)
    the bytes in the specified <tt>char</tt> value.
@since 1.5
"
      end

      operation 6596098 "getName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode name of the specified character
{@code codePoint}, or null if the code point is
{@link #UNASSIGNED unassigned}.
<p>
Note: if the specified character is not assigned a name by
the <i>UnicodeData</i> file (part of the Unicode Character
Database maintained by the Unicode Consortium), the returned
name is the same as the result of expression.

<blockquote>{@code
    Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ')
    + \" \"
    + Integer.toHexString(codePoint).toUpperCase(Locale.ENGLISH);

}</blockquote>

@param  codePoint the character (Unicode code point)

@return the Unicode name of the specified character, or null if
        the code point is unassigned.

@exception IllegalArgumentException if the specified
           {@code codePoint} is not a valid Unicode
           code point.

@since 1.7
"
      end
    end

    class 625666 "ExceptionInInitializerError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that an unexpected exception has occurred in a static initializer.
An <code>ExceptionInInitializerError</code> is thrown to indicate that an
exception occurred during evaluation of a static initializer or the
initializer for a static variable.

<p>As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The \"saved throwable
object\" that may be provided at construction time and accessed via
the {@link #getException()} method is now known as the <i>cause</i>,
and may be accessed via the {@link Throwable#getCause()} method, as well
as the aforementioned \"legacy method.\"

@author  Frank Yellin
@since   JDK1.1
"
      classrelation 3156738 // <generalisation>
	relation 3156738 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3156738 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1672194 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1521711792217232256L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Use serialVersionUID from JDK 1.1.X for interoperability

"
      end

      classrelation 3156866 // exception (<unidirectional association>)
	relation 3156866 --->
	  a role_name "exception" private
	    comment "
This field holds the exception if the
ExceptionInInitializerError(Throwable thrown) constructor was
used to instantiate the object

@serial


"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3156866 // exception (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 7017730 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ExceptionInInitializerError</code> with
<code>null</code> as its detail message string and with no saved
throwable object.
A detail message is a String that describes this particular exception.
"
      end

      operation 7017858 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 1
	  param inout name "thrown" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>ExceptionInInitializerError</code> class by
saving a reference to the <code>Throwable</code> object thrown for
later retrieval by the {@link #getException()} method. The detail
message string is set to <code>null</code>.

@param thrown The exception thrown
"
      end

      operation 7017986 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an ExceptionInInitializerError with the specified detail
message string.  A detail message is a String that describes this
particular exception. The detail message string is saved for later
retrieval by the {@link Throwable#getMessage()} method. There is no
saved throwable object.


@param s the detail message
"
      end

      operation 7018114 "getException"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception that occurred during a static initialization that
caused this error to be created.

<p>This method predates the general-purpose exception chaining facility.
The {@link Throwable#getCause()} method is now the preferred means of
obtaining this information.

@return the saved throwable object of this
        <code>ExceptionInInitializerError</code>, or <code>null</code>
        if this <code>ExceptionInInitializerError</code> has no saved
        throwable object.
"
      end

      operation 7018242 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this error (the exception that occurred
during a static initialization that caused this error to be created).

@return  the cause of this error or <code>null</code> if the
         cause is nonexistent or unknown.
@since   1.4
"
      end
    end

    class 625794 "LinkageError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Subclasses of {@code LinkageError} indicate that a class has
some dependency on another class; however, the latter class has
incompatibly changed after the compilation of the former class.


@author  Frank Yellin
@since   JDK1.0
"
      classrelation 3144834 // <generalisation>
	relation 3144834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3144834 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 1660162 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3579600108157160122L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6945666 "LinkageError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinkageError} with no detail message.
"
      end

      operation 6945794 "LinkageError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinkageError} with the specified detail
message.

@param   s   the detail message.
"
      end

      operation 6945922 "LinkageError"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code LinkageError} with the specified detail
message and cause.

@param s     the detail message.
@param cause the cause, may be {@code null}
@since 1.7
"
      end
    end

    class 742274 "ArrayIndexOutOfBoundsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an array has been accessed with an
illegal index. The index is either negative or greater than or
equal to the size of the array.

@author  unascribed
@since   JDK1.0
"
      classrelation 3145858 // <generalisation>
	relation 3145858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3145858 // <generalisation>
	  b parent class_ref 881154 // IndexOutOfBoundsException
      end

      attribute 1661186 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5116101128118950844L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6955138 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ArrayIndexOutOfBoundsException</code> with no
detail message.
"
      end

      operation 6955266 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>ArrayIndexOutOfBoundsException</code>
class with an argument indicating the illegal index.

@param   index   the illegal index.
"
      end

      operation 6955394 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ArrayIndexOutOfBoundsException</code> class
with the specified detail message.

@param   s   the detail message.
"
      end
    end

    class 742530 "NoSuchMethodException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when a particular method cannot be found.

@author     unascribed
@since      JDK1.0
"
      classrelation 3161346 // <generalisation>
	relation 3161346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161346 // <generalisation>
	  b parent class_ref 932226 // ReflectiveOperationException
      end

      attribute 1679490 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5034388446362600923L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7054722 "NoSuchMethodException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchMethodException</code> without a detail message.
"
      end

      operation 7054850 "NoSuchMethodException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchMethodException</code> with a detail message.

@param      s   the detail message.
"
      end
    end

    class 881154 "IndexOutOfBoundsException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an index of some sort (such as to an array, to a
string, or to a vector) is out of range.
<p>
Applications can subclass this class to indicate similar exceptions.

@author  Frank Yellin
@since   JDK1.0
"
      classrelation 3145730 // <generalisation>
	relation 3145730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3145730 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1661058 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 234122996006267687L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6954882 "IndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IndexOutOfBoundsException</code> with no
detail message.
"
      end

      operation 6955010 "IndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IndexOutOfBoundsException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 889218 "Float"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Float} class wraps a value of primitive type
{@code float} in an object. An object of type
{@code Float} contains a single field whose type is
{@code float}.

<p>In addition, this class provides several methods for converting a
{@code float} to a {@code String} and a
{@code String} to a {@code float}, as well as other
constants and methods useful when dealing with a
{@code float}.

@author  Lee Boynton
@author  Arthur van Hoff
@author  Joseph D. Darcy
@since JDK1.0
"
      classrelation 3156994 // <generalisation>
	relation 3156994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3156994 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3157122 // <realization>
	relation 3157122 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3157122 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1672322 "POSITIVE_INFINITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.0f / 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the positive infinity of type
{@code float}. It is equal to the value returned by
{@code Float.intBitsToFloat(0x7f800000)}.

"
      end

      attribute 1672450 "NEGATIVE_INFINITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " -1.0f / 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the negative infinity of type
{@code float}. It is equal to the value returned by
{@code Float.intBitsToFloat(0xff800000)}.

"
      end

      attribute 1672578 "NaN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.0f / 0.0f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding a Not-a-Number (NaN) value of type
{@code float}.  It is equivalent to the value returned by
{@code Float.intBitsToFloat(0x7fc00000)}.

"
      end

      attribute 1672706 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0x1.fffffeP+127f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the largest positive finite value of type
{@code float}, (2-2<sup>-23</sup>)&middot;2<sup>127</sup>.
It is equal to the hexadecimal floating-point literal
{@code 0x1.fffffeP+127f} and also equal to
{@code Float.intBitsToFloat(0x7f7fffff)}.

 3.4028235e+38f"
      end

      attribute 1672834 "MIN_NORMAL"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0x1.0p-126f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the smallest positive normal value of type
{@code float}, 2<sup>-126</sup>.  It is equal to the
hexadecimal floating-point literal {@code 0x1.0p-126f} and also
equal to {@code Float.intBitsToFloat(0x00800000)}.

@since 1.6

 1.17549435E-38f"
      end

      attribute 1672962 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0x0.000002P-126f"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the smallest positive nonzero value of type
{@code float}, 2<sup>-149</sup>. It is equal to the
hexadecimal floating-point literal {@code 0x0.000002P-126f}
and also equal to {@code Float.intBitsToFloat(0x1)}.

 1.4e-45f"
      end

      attribute 1673090 "MAX_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 127"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Maximum exponent a finite {@code float} variable may have.  It
is equal to the value returned by {@code
Math.getExponent(Float.MAX_VALUE)}.

@since 1.6

"
      end

      attribute 1673218 "MIN_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -126"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Minimum exponent a normalized {@code float} variable may have.
It is equal to the value returned by {@code
Math.getExponent(Float.MIN_NORMAL)}.

@since 1.6

"
      end

      attribute 1673346 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bits used to represent a {@code float} value.

@since 1.5

"
      end

      attribute 1673474 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code float} value.

@since 1.8

"
      end

      classrelation 3157250 // TYPE (<unidirectional association>)
	relation 3157250 --->
	  a role_name "TYPE" init_value " (Class<Float>) Class.getPrimitiveClass(\"float\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code float}.

@since JDK1.1

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Float> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3157250 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 7018370 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the {@code float}
argument. All characters mentioned below are ASCII characters.
<ul>
<li>If the argument is NaN, the result is the string
\"{@code NaN}\".
<li>Otherwise, the result is a string that represents the sign and
    magnitude (absolute value) of the argument. If the sign is
    negative, the first character of the result is
    '{@code -}' ({@code '\\u005Cu002D'}); if the sign is
    positive, no sign character appears in the result. As for
    the magnitude <i>m</i>:
<ul>
<li>If <i>m</i> is infinity, it is represented by the characters
    {@code \"Infinity\"}; thus, positive infinity produces
    the result {@code \"Infinity\"} and negative infinity
    produces the result {@code \"-Infinity\"}.
<li>If <i>m</i> is zero, it is represented by the characters
    {@code \"0.0\"}; thus, negative zero produces the result
    {@code \"-0.0\"} and positive zero produces the result
    {@code \"0.0\"}.
<li> If <i>m</i> is greater than or equal to 10<sup>-3</sup> but
     less than 10<sup>7</sup>, then it is represented as the
     integer part of <i>m</i>, in decimal form with no leading
     zeroes, followed by '{@code .}'
     ({@code '\\u005Cu002E'}), followed by one or more
     decimal digits representing the fractional part of
     <i>m</i>.
<li> If <i>m</i> is less than 10<sup>-3</sup> or greater than or
     equal to 10<sup>7</sup>, then it is represented in
     so-called \"computerized scientific notation.\" Let <i>n</i>
     be the unique integer such that 10<sup><i>n</i> </sup>&le;
     <i>m</i> {@literal <} 10<sup><i>n</i>+1</sup>; then let <i>a</i>
     be the mathematically exact quotient of <i>m</i> and
     10<sup><i>n</i></sup> so that 1 &le; <i>a</i> {@literal <} 10.
     The magnitude is then represented as the integer part of
     <i>a</i>, as a single decimal digit, followed by
     '{@code .}' ({@code '\\u005Cu002E'}), followed by
     decimal digits representing the fractional part of
     <i>a</i>, followed by the letter '{@code E}'
     ({@code '\\u005Cu0045'}), followed by a representation
     of <i>n</i> as a decimal integer, as produced by the
     method {@link java.lang.Integer#toString(int)}.

</ul>
</ul>
How many digits must be printed for the fractional part of
<i>m</i> or <i>a</i>? There must be at least one digit
to represent the fractional part, and beyond that as many, but
only as many, more digits as are needed to uniquely distinguish
the argument value from adjacent values of type
{@code float}. That is, suppose that <i>x</i> is the
exact mathematical value represented by the decimal
representation produced by this method for a finite nonzero
argument <i>f</i>. Then <i>f</i> must be the {@code float}
value nearest to <i>x</i>; or, if two {@code float} values are
equally close to <i>x</i>, then <i>f</i> must be one of
them and the least significant bit of the significand of
<i>f</i> must be {@code 0}.

<p>To create localized string representations of a floating-point
value, use subclasses of {@link java.text.NumberFormat}.

@param   f   the float to be converted.
@return a string representation of the argument.
"
      end

      operation 7018498 "toHexString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hexadecimal string representation of the
{@code float} argument. All characters mentioned below are
ASCII characters.

<ul>
<li>If the argument is NaN, the result is the string
    \"{@code NaN}\".
<li>Otherwise, the result is a string that represents the sign and
magnitude (absolute value) of the argument. If the sign is negative,
the first character of the result is '{@code -}'
({@code '\\u005Cu002D'}); if the sign is positive, no sign character
appears in the result. As for the magnitude <i>m</i>:

<ul>
<li>If <i>m</i> is infinity, it is represented by the string
{@code \"Infinity\"}; thus, positive infinity produces the
result {@code \"Infinity\"} and negative infinity produces
the result {@code \"-Infinity\"}.

<li>If <i>m</i> is zero, it is represented by the string
{@code \"0x0.0p0\"}; thus, negative zero produces the result
{@code \"-0x0.0p0\"} and positive zero produces the result
{@code \"0x0.0p0\"}.

<li>If <i>m</i> is a {@code float} value with a
normalized representation, substrings are used to represent the
significand and exponent fields.  The significand is
represented by the characters {@code \"0x1.\"}
followed by a lowercase hexadecimal representation of the rest
of the significand as a fraction.  Trailing zeros in the
hexadecimal representation are removed unless all the digits
are zero, in which case a single zero is used. Next, the
exponent is represented by {@code \"p\"} followed
by a decimal string of the unbiased exponent as if produced by
a call to {@link Integer#toString(int) Integer.toString} on the
exponent value.

<li>If <i>m</i> is a {@code float} value with a subnormal
representation, the significand is represented by the
characters {@code \"0x0.\"} followed by a
hexadecimal representation of the rest of the significand as a
fraction.  Trailing zeros in the hexadecimal representation are
removed. Next, the exponent is represented by
{@code \"p-126\"}.  Note that there must be at
least one nonzero digit in a subnormal significand.

</ul>

</ul>

<table border>
<caption>Examples</caption>
<tr><th>Floating-point Value</th><th>Hexadecimal String</th>
<tr><td>{@code 1.0}</td> <td>{@code 0x1.0p0}</td>
<tr><td>{@code -1.0}</td>        <td>{@code -0x1.0p0}</td>
<tr><td>{@code 2.0}</td> <td>{@code 0x1.0p1}</td>
<tr><td>{@code 3.0}</td> <td>{@code 0x1.8p1}</td>
<tr><td>{@code 0.5}</td> <td>{@code 0x1.0p-1}</td>
<tr><td>{@code 0.25}</td>        <td>{@code 0x1.0p-2}</td>
<tr><td>{@code Float.MAX_VALUE}</td>
    <td>{@code 0x1.fffffep127}</td>
<tr><td>{@code Minimum Normal Value}</td>
    <td>{@code 0x1.0p-126}</td>
<tr><td>{@code Maximum Subnormal Value}</td>
    <td>{@code 0x0.fffffep-126}</td>
<tr><td>{@code Float.MIN_VALUE}</td>
    <td>{@code 0x0.000002p-126}</td>
</table>
@param   f   the {@code float} to be converted.
@return a hex string representation of the argument.
@since 1.5
@author Joseph D. Darcy
"
      end

      operation 7018626 "valueOf"
	class_operation public return_type class_ref 889218 // Float
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Float} object holding the
{@code float} value represented by the argument string
{@code s}.

<p>If {@code s} is {@code null}, then a
{@code NullPointerException} is thrown.

<p>Leading and trailing whitespace characters in {@code s}
are ignored.  Whitespace is removed as if by the {@link
String#trim} method; that is, both ASCII space and control
characters are removed. The rest of {@code s} should
constitute a <i>FloatValue</i> as described by the lexical
syntax rules:

<blockquote>
<dl>
<dt><i>FloatValue:</i>
<dd><i>Sign<sub>opt</sub></i> {@code NaN}
<dd><i>Sign<sub>opt</sub></i> {@code Infinity}
<dd><i>Sign<sub>opt</sub> FloatingPointLiteral</i>
<dd><i>Sign<sub>opt</sub> HexFloatingPointLiteral</i>
<dd><i>SignedInteger</i>
</dl>

<dl>
<dt><i>HexFloatingPointLiteral</i>:
<dd> <i>HexSignificand BinaryExponent FloatTypeSuffix<sub>opt</sub></i>
</dl>

<dl>
<dt><i>HexSignificand:</i>
<dd><i>HexNumeral</i>
<dd><i>HexNumeral</i> {@code .}
<dd>{@code 0x} <i>HexDigits<sub>opt</sub>
    </i>{@code .}<i> HexDigits</i>
<dd>{@code 0X}<i> HexDigits<sub>opt</sub>
    </i>{@code .} <i>HexDigits</i>
</dl>

<dl>
<dt><i>BinaryExponent:</i>
<dd><i>BinaryExponentIndicator SignedInteger</i>
</dl>

<dl>
<dt><i>BinaryExponentIndicator:</i>
<dd>{@code p}
<dd>{@code P}
</dl>

</blockquote>

where <i>Sign</i>, <i>FloatingPointLiteral</i>,
<i>HexNumeral</i>, <i>HexDigits</i>, <i>SignedInteger</i> and
<i>FloatTypeSuffix</i> are as defined in the lexical structure
sections of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.
If {@code s} does not have the form of
a <i>FloatValue</i>, then a {@code NumberFormatException}
is thrown. Otherwise, {@code s} is regarded as
representing an exact decimal value in the usual
\"computerized scientific notation\" or as an exact
hexadecimal value; this exact numerical value is then
conceptually converted to an \"infinitely precise\"
binary value that is then rounded to type {@code float}
by the usual round-to-nearest rule of IEEE 754 floating-point
arithmetic, which includes preserving the sign of a zero
value.

Note that the round-to-nearest rule also implies overflow and
underflow behaviour; if the exact value of {@code s} is large
enough in magnitude (greater than or equal to ({@link
#MAX_VALUE} + {@link Math#ulp(float) ulp(MAX_VALUE)}/2),
rounding to {@code float} will result in an infinity and if the
exact value of {@code s} is small enough in magnitude (less
than or equal to {@link #MIN_VALUE}/2), rounding to float will
result in a zero.

Finally, after rounding a {@code Float} object representing
this {@code float} value is returned.

<p>To interpret localized string representations of a
floating-point value, use subclasses of {@link
java.text.NumberFormat}.

<p>Note that trailing format specifiers, specifiers that
determine the type of a floating-point literal
({@code 1.0f} is a {@code float} value;
{@code 1.0d} is a {@code double} value), do
<em>not</em> influence the results of this method.  In other
words, the numerical value of the input string is converted
directly to the target floating-point type.  In general, the
two-step sequence of conversions, string to {@code double}
followed by {@code double} to {@code float}, is
<em>not</em> equivalent to converting a string directly to
{@code float}.  For example, if first converted to an
intermediate {@code double} and then to
{@code float}, the string<br>
{@code \"1.00000017881393421514957253748434595763683319091796875001d\"}<br>
results in the {@code float} value
{@code 1.0000002f}; if the string is converted directly to
{@code float}, <code>1.000000<b>1</b>f</code> results.

<p>To avoid calling this method on an invalid string and having
a {@code NumberFormatException} be thrown, the documentation
for {@link Double#valueOf Double.valueOf} lists a regular
expression which can be used to screen the input.

@param   s   the string to be parsed.
@return  a {@code Float} object holding the value
         represented by the {@code String} argument.
@throws  NumberFormatException  if the string does not contain a
         parsable number.
"
      end

      operation 7018754 "valueOf"
	class_operation public return_type class_ref 889218 // Float
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Float} instance representing the specified
{@code float} value.
If a new {@code Float} instance is not required, this method
should generally be used in preference to the constructor
{@link #Float(float)}, as this method is likely to yield
significantly better space and time performance by caching
frequently requested values.

@param  f a float value.
@return a {@code Float} instance representing {@code f}.
@since  1.5
"
      end

      operation 7018882 "parseFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code float} initialized to the value
represented by the specified {@code String}, as performed
by the {@code valueOf} method of class {@code Float}.

@param  s the string to be parsed.
@return the {@code float} value represented by the string
        argument.
@throws NullPointerException  if the string is null
@throws NumberFormatException if the string does not contain a
              parsable {@code float}.
@see    java.lang.Float#valueOf(String)
@since 1.2
"
      end

      operation 7019010 "isNaN"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "v" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the specified number is a
Not-a-Number (NaN) value, {@code false} otherwise.

@param   v   the value to be tested.
@return  {@code true} if the argument is NaN;
         {@code false} otherwise.
"
      end

      operation 7019138 "isInfinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "v" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the specified number is infinitely
large in magnitude, {@code false} otherwise.

@param   v   the value to be tested.
@return  {@code true} if the argument is positive infinity or
         negative infinity; {@code false} otherwise.
"
      end

      operation 7019266 "isFinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the argument is a finite floating-point
value; returns {@code false} otherwise (for NaN and infinity
arguments).

@param f the {@code float} value to be tested
@return {@code true} if the argument is a finite
floating-point value, {@code false} otherwise.
@since 1.8
"
      end

      attribute 1673602 "value"
	const_attribute private explicit_type "float"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the Float.

@serial

"
      end

      operation 7019394 "Float"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Float} object that
represents the primitive {@code float} argument.

@param   value   the value to be represented by the {@code Float}.
"
      end

      operation 7019522 "Float"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Float} object that
represents the argument converted to type {@code float}.

@param   value   the value to be represented by the {@code Float}.
"
      end

      operation 7019650 "Float"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Float} object that
represents the floating-point value of type {@code float}
represented by the string. The string is converted to a
{@code float} value as if by the {@code valueOf} method.

@param      s   a string to be converted to a {@code Float}.
@throws  NumberFormatException  if the string does not contain a
              parsable number.
@see        java.lang.Float#valueOf(java.lang.String)
"
      end

      operation 7019778 "isNaN"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Float} value is a
Not-a-Number (NaN), {@code false} otherwise.

@return  {@code true} if the value represented by this object is
         NaN; {@code false} otherwise.
"
      end

      operation 7019906 "isInfinite"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this {@code Float} value is
infinitely large in magnitude, {@code false} otherwise.

@return  {@code true} if the value represented by this object is
         positive infinity or negative infinity;
         {@code false} otherwise.
"
      end

      operation 7020034 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code Float} object.
The primitive {@code float} value represented by this object
is converted to a {@code String} exactly as if by the method
{@code toString} of one argument.

@return  a {@code String} representation of this object.
@see java.lang.Float#toString(float)
"
      end

      operation 7020162 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Float} as a {@code byte} after
a narrowing primitive conversion.

@return  the {@code float} value represented by this object
         converted to type {@code byte}
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7020290 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Float} as a {@code short}
after a narrowing primitive conversion.

@return  the {@code float} value represented by this object
         converted to type {@code short}
@jls 5.1.3 Narrowing Primitive Conversions
@since JDK1.1
"
      end

      operation 7020418 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Float} as an {@code int} after
a narrowing primitive conversion.

@return  the {@code float} value represented by this object
         converted to type {@code int}
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7020546 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns value of this {@code Float} as a {@code long} after a
narrowing primitive conversion.

@return  the {@code float} value represented by this object
         converted to type {@code long}
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7020674 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code float} value of this {@code Float} object.

@return the {@code float} value represented by this object
"
      end

      operation 7020802 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Float} as a {@code double}
after a widening primitive conversion.

@return the {@code float} value represented by this
        object converted to type {@code double}
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7020930 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Float} object. The
result is the integer bit representation, exactly as produced
by the method {@link #floatToIntBits(float)}, of the primitive
{@code float} value represented by this {@code Float}
object.

@return a hash code value for this object.
"
      end

      operation 7021058 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code float} value; compatible with
{@code Float.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code float} value.
@since 1.8
"
      end

      operation 7021186 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Compares this object against the specified object.  The result
is {@code true} if and only if the argument is not
{@code null} and is a {@code Float} object that
represents a {@code float} with the same value as the
{@code float} represented by this object. For this
purpose, two {@code float} values are considered to be the
same if and only if the method {@link #floatToIntBits(float)}
returns the identical {@code int} value when applied to
each.

<p>Note that in most cases, for two instances of class
{@code Float}, {@code f1} and {@code f2}, the value
of {@code f1.equals(f2)} is {@code true} if and only if

<blockquote><pre>
  f1.floatValue() == f2.floatValue()
</pre></blockquote>

<p>also has the value {@code true}. However, there are two exceptions:
<ul>
<li>If {@code f1} and {@code f2} both represent
    {@code Float.NaN}, then the {@code equals} method returns
    {@code true}, even though {@code Float.NaN==Float.NaN}
    has the value {@code false}.
<li>If {@code f1} represents {@code +0.0f} while
    {@code f2} represents {@code -0.0f}, or vice
    versa, the {@code equal} test has the value
    {@code false}, even though {@code 0.0f==-0.0f}
    has the value {@code true}.
</ul>

This definition allows hash tables to operate properly.

@param obj the object to be compared
@return  {@code true} if the objects are the same;
         {@code false} otherwise.
@see java.lang.Float#floatToIntBits(float)
"
      end

      operation 7021314 "floatToIntBits"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a representation of the specified floating-point value
according to the IEEE 754 floating-point \"single format\" bit
layout.

<p>Bit 31 (the bit that is selected by the mask
{@code 0x80000000}) represents the sign of the floating-point
number.
Bits 30-23 (the bits that are selected by the mask
{@code 0x7f800000}) represent the exponent.
Bits 22-0 (the bits that are selected by the mask
{@code 0x007fffff}) represent the significand (sometimes called
the mantissa) of the floating-point number.

<p>If the argument is positive infinity, the result is
{@code 0x7f800000}.

<p>If the argument is negative infinity, the result is
{@code 0xff800000}.

<p>If the argument is NaN, the result is {@code 0x7fc00000}.

<p>In all cases, the result is an integer that, when given to the
{@link #intBitsToFloat(int)} method, will produce a floating-point
value the same as the argument to {@code floatToIntBits}
(except all NaN values are collapsed to a single
\"canonical\" NaN value).

@param   value   a floating-point number.
@return the bits that represent the floating-point number.
"
      end

      operation 7021442 "floatToRawIntBits"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns a representation of the specified floating-point value
according to the IEEE 754 floating-point \"single format\" bit
layout, preserving Not-a-Number (NaN) values.

<p>Bit 31 (the bit that is selected by the mask
{@code 0x80000000}) represents the sign of the floating-point
number.
Bits 30-23 (the bits that are selected by the mask
{@code 0x7f800000}) represent the exponent.
Bits 22-0 (the bits that are selected by the mask
{@code 0x007fffff}) represent the significand (sometimes called
the mantissa) of the floating-point number.

<p>If the argument is positive infinity, the result is
{@code 0x7f800000}.

<p>If the argument is negative infinity, the result is
{@code 0xff800000}.

<p>If the argument is NaN, the result is the integer representing
the actual NaN value.  Unlike the {@code floatToIntBits}
method, {@code floatToRawIntBits} does not collapse all the
bit patterns encoding a NaN to a single \"canonical\"
NaN value.

<p>In all cases, the result is an integer that, when given to the
{@link #intBitsToFloat(int)} method, will produce a
floating-point value the same as the argument to
{@code floatToRawIntBits}.

@param   value   a floating-point number.
@return the bits that represent the floating-point number.
@since 1.3
"
      end

      operation 7021570 "intBitsToFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "bits" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the {@code float} value corresponding to a given
bit representation.
The argument is considered to be a representation of a
floating-point value according to the IEEE 754 floating-point
\"single format\" bit layout.

<p>If the argument is {@code 0x7f800000}, the result is positive
infinity.

<p>If the argument is {@code 0xff800000}, the result is negative
infinity.

<p>If the argument is any value in the range
{@code 0x7f800001} through {@code 0x7fffffff} or in
the range {@code 0xff800001} through
{@code 0xffffffff}, the result is a NaN.  No IEEE 754
floating-point operation provided by Java can distinguish
between two NaN values of the same type with different bit
patterns.  Distinct values of NaN are only distinguishable by
use of the {@code Float.floatToRawIntBits} method.

<p>In all other cases, let <i>s</i>, <i>e</i>, and <i>m</i> be three
values that can be computed from the argument:

<blockquote><pre>{@code
int s = ((bits >> 31) == 0) ? 1 : -1;
int e = ((bits >> 23) & 0xff);
int m = (e == 0) ?
                (bits & 0x7fffff) << 1 :
                (bits & 0x7fffff) | 0x800000;
}</pre></blockquote>

Then the floating-point result equals the value of the mathematical
expression <i>s</i>&middot;<i>m</i>&middot;2<sup><i>e</i>-150</sup>.

<p>Note that this method may not be able to return a
{@code float} NaN with exactly same bit pattern as the
{@code int} argument.  IEEE 754 distinguishes between two
kinds of NaNs, quiet NaNs and <i>signaling NaNs</i>.  The
differences between the two kinds of NaN are generally not
visible in Java.  Arithmetic operations on signaling NaNs turn
them into quiet NaNs with a different, but often similar, bit
pattern.  However, on some processors merely copying a
signaling NaN also performs that conversion.  In particular,
copying a signaling NaN to return it to the calling method may
perform this conversion.  So {@code intBitsToFloat} may
not be able to return a {@code float} with a signaling NaN
bit pattern.  Consequently, for some {@code int} values,
{@code floatToRawIntBits(intBitsToFloat(start))} may
<i>not</i> equal {@code start}.  Moreover, which
particular bit patterns represent signaling NaNs is platform
dependent; although all NaN bit patterns, quiet or signaling,
must be in the NaN range identified above.

@param   bits   an integer.
@return  the {@code float} floating-point value with the same bit
         pattern.
"
      end

      operation 7021698 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherFloat" type class_ref 889218 // Float
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Float} objects numerically.  There are
two ways in which comparisons performed by this method differ
from those performed by the Java language numerical comparison
operators ({@code <, <=, ==, >=, >}) when
applied to primitive {@code float} values:

<ul><li>
         {@code Float.NaN} is considered by this method to
         be equal to itself and greater than all other
         {@code float} values
         (including {@code Float.POSITIVE_INFINITY}).
<li>
         {@code 0.0f} is considered by this method to be greater
         than {@code -0.0f}.
</ul>

This ensures that the <i>natural ordering</i> of {@code Float}
objects imposed by this method is <i>consistent with equals</i>.

@param   anotherFloat   the {@code Float} to be compared.
@return  the value {@code 0} if {@code anotherFloat} is
         numerically equal to this {@code Float}; a value
         less than {@code 0} if this {@code Float}
         is numerically less than {@code anotherFloat};
         and a value greater than {@code 0} if this
         {@code Float} is numerically greater than
         {@code anotherFloat}.

@since   1.2
@see Comparable#compareTo(Object)
"
      end

      operation 7021826 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "f1" explicit_type "float"
	  param in name "f2" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two specified {@code float} values. The sign
of the integer value returned is the same as that of the
integer that would be returned by the call:
<pre>
   new Float(f1).compareTo(new Float(f2))
</pre>

@param   f1        the first {@code float} to compare.
@param   f2        the second {@code float} to compare.
@return  the value {@code 0} if {@code f1} is
         numerically equal to {@code f2}; a value less than
         {@code 0} if {@code f1} is numerically less than
         {@code f2}; and a value greater than {@code 0}
         if {@code f1} is numerically greater than
         {@code f2}.
@since 1.4
"
      end

      operation 7021954 "sum"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds two {@code float} values together as per the + operator.

@param a the first operand
@param b the second operand
@return the sum of {@code a} and {@code b}
@jls 4.2.4 Floating-Point Operations
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7022082 "max"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code float} values
as if by calling {@link Math#max(float, float) Math.max}.

@param a the first operand
@param b the second operand
@return the greater of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      operation 7022210 "min"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code float} values
as if by calling {@link Math#min(float, float) Math.min}.

@param a the first operand
@param b the second operand
@return the smaller of {@code a} and {@code b}
@see java.util.function.BinaryOperator
@since 1.8
"
      end

      attribute 1673730 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2671257302660747028L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.0.2 for interoperability 
"
      end
    end

    class 928514 "AbstractMethodError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to call an abstract method.
Normally, this error is caught by the compiler; this error can
only occur at run time if the definition of some class has
incompatibly changed since the currently executing method was last
compiled.

@author  unascribed
@since   JDK1.0
"
      classrelation 3145090 // <generalisation>
	relation 3145090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3145090 // <generalisation>
	  b parent class_ref 928642 // IncompatibleClassChangeError
      end

      attribute 1660418 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1654391082989018462L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6946306 "AbstractMethodError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AbstractMethodError</code> with no detail  message.
"
      end

      operation 6946434 "AbstractMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AbstractMethodError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 928642 "IncompatibleClassChangeError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an incompatible class change has occurred to some class
definition. The definition of some class, on which the currently
executing method depends, has since changed.

@author  unascribed
@since   JDK1.0
"
      classrelation 3144962 // <generalisation>
	relation 3144962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3144962 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1660290 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4914975503642802119L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6946050 "IncompatibleClassChangeError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IncompatibleClassChangeError</code> with no
detail message.
"
      end

      operation 6946178 "IncompatibleClassChangeError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IncompatibleClassChangeError</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 928770 "AbstractStringBuilder"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A mutable sequence of characters.
<p>
Implements a modifiable string. At any point in time it contains some
particular sequence of characters, but the length and content of the
sequence can be changed through certain method calls.

<p>Unless otherwise noted, passing a {@code null} argument to a constructor
or method in this class will cause a {@link NullPointerException} to be
thrown.

@author      Michael McCloskey
@author      Martin Buchholz
@author      Ulf Zibis
@since       1.5
"
      classrelation 3145218 // <realization>
	relation 3145218 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3145218 // <realization>
	  b parent class_ref 548866 // Appendable
      end

      classrelation 3145346 // <realization>
	relation 3145346 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3145346 // <realization>
	  b parent class_ref 429442 // CharSequence
      end

      attribute 1660546 "value"
	package explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value is used for character storage.

"
      end

      attribute 1660674 "count"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The count is the number of characters used.

"
      end

      operation 6946562 "AbstractStringBuilder"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This no-arg constructor is necessary for serialization of subclasses.
"
      end

      operation 6946690 "AbstractStringBuilder"
	package explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AbstractStringBuilder of the specified capacity.
"
      end

      operation 6946818 "length"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the length (character count).

@return  the length of the sequence of characters currently
         represented by this object
"
      end

      operation 6946946 "capacity"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current capacity. The capacity is the amount of storage
available for newly inserted characters, beyond which an allocation
will occur.

@return  the current capacity
"
      end

      operation 6947074 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "minimumCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the capacity is at least equal to the specified minimum.
If the current capacity is less than the argument, then a new internal
array is allocated with greater capacity. The new capacity is the
larger of:
<ul>
<li>The {@code minimumCapacity} argument.
<li>Twice the old capacity, plus {@code 2}.
</ul>
If the {@code minimumCapacity} argument is nonpositive, this
method takes no action and simply returns.
Note that subsequent operations on this object can reduce the
actual capacity below that requested here.

@param   minimumCapacity   the minimum desired capacity.
"
      end

      operation 6947202 "ensureCapacityInternal"
	private explicit_return_type "void"
	nparams 1
	  param in name "minimumCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For positive values of {@code minimumCapacity}, this method
behaves like {@code ensureCapacity}, however it is never
synchronized.
If {@code minimumCapacity} is non positive due to numeric
overflow, this method throws {@code OutOfMemoryError}.
"
      end

      attribute 1660802 "MAX_ARRAY_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Integer.MAX_VALUE - 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The maximum size of array to allocate (unless necessary).
Some VMs reserve some header words in an array.
Attempts to allocate larger arrays may result in
OutOfMemoryError: Requested array size exceeds VM limit

"
      end

      operation 6947330 "newCapacity"
	private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a capacity at least as large as the given minimum capacity.
Returns the current capacity increased by the same amount + 2 if
that suffices.
Will not return a capacity greater than {@code MAX_ARRAY_SIZE}
unless the given minimum capacity is greater than that.

@param  minCapacity the desired minimum capacity
@throws OutOfMemoryError if minCapacity is less than zero or
        greater than Integer.MAX_VALUE
"
      end

      operation 6947458 "hugeCapacity"
	private explicit_return_type "int"
	nparams 1
	  param in name "minCapacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6947586 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to reduce storage used for the character sequence.
If the buffer is larger than necessary to hold its current sequence of
characters, then it may be resized to become more space efficient.
Calling this method may, but is not required to, affect the value
returned by a subsequent call to the {@link #capacity()} method.
"
      end

      operation 6947714 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "newLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the length of the character sequence.
The sequence is changed to a new character sequence
whose length is specified by the argument. For every nonnegative
index <i>k</i> less than {@code newLength}, the character at
index <i>k</i> in the new character sequence is the same as the
character at index <i>k</i> in the old sequence if <i>k</i> is less
than the length of the old character sequence; otherwise, it is the
null character {@code '\\u005Cu0000'}.

In other words, if the {@code newLength} argument is less than
the current length, the length is changed to the specified length.
<p>
If the {@code newLength} argument is greater than or equal
to the current length, sufficient null characters
({@code '\\u005Cu0000'}) are appended so that
length becomes the {@code newLength} argument.
<p>
The {@code newLength} argument must be greater than or equal
to {@code 0}.

@param      newLength   the new length
@throws     IndexOutOfBoundsException  if the
              {@code newLength} argument is negative.
"
      end

      operation 6947842 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the {@code char} value in this sequence at the specified index.
The first {@code char} value is at index {@code 0}, the next at index
{@code 1}, and so on, as in array indexing.
<p>
The index argument must be greater than or equal to
{@code 0}, and less than the length of this sequence.

<p>If the {@code char} value specified by the index is a
<a href=\"Character.html#unicode\">surrogate</a>, the surrogate
value is returned.

@param      index   the index of the desired {@code char} value.
@return     the {@code char} value at the specified index.
@throws     IndexOutOfBoundsException  if {@code index} is
            negative or greater than or equal to {@code length()}.
"
      end

      operation 6947970 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character (Unicode code point) at the specified
index. The index refers to {@code char} values
(Unicode code units) and ranges from {@code 0} to
{@link #length()}{@code  - 1}.

<p> If the {@code char} value specified at the given index
is in the high-surrogate range, the following index is less
than the length of this sequence, and the
{@code char} value at the following index is in the
low-surrogate range, then the supplementary code point
corresponding to this surrogate pair is returned. Otherwise,
the {@code char} value at the given index is returned.

@param      index the index to the {@code char} values
@return     the code point value of the character at the
            {@code index}
@exception  IndexOutOfBoundsException  if the {@code index}
            argument is negative or not less than the length of this
            sequence.
"
      end

      operation 6948098 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character (Unicode code point) before the specified
index. The index refers to {@code char} values
(Unicode code units) and ranges from {@code 1} to {@link
#length()}.

<p> If the {@code char} value at {@code (index - 1)}
is in the low-surrogate range, {@code (index - 2)} is not
negative, and the {@code char} value at {@code (index -
2)} is in the high-surrogate range, then the
supplementary code point value of the surrogate pair is
returned. If the {@code char} value at {@code index -
1} is an unpaired low-surrogate or a high-surrogate, the
surrogate value is returned.

@param     index the index following the code point that should be returned
@return    the Unicode code point value before the given index.
@exception IndexOutOfBoundsException if the {@code index}
           argument is less than 1 or greater than the length
           of this sequence.
"
      end

      operation 6948226 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of Unicode code points in the specified text
range of this sequence. The text range begins at the specified
{@code beginIndex} and extends to the {@code char} at
index {@code endIndex - 1}. Thus the length (in
{@code char}s) of the text range is
{@code endIndex-beginIndex}. Unpaired surrogates within
this sequence count as one code point each.

@param beginIndex the index to the first {@code char} of
the text range.
@param endIndex the index after the last {@code char} of
the text range.
@return the number of Unicode code points in the specified text
range
@exception IndexOutOfBoundsException if the
{@code beginIndex} is negative, or {@code endIndex}
is larger than the length of this sequence, or
{@code beginIndex} is larger than {@code endIndex}.
"
      end

      operation 6948354 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this sequence that is offset from the
given {@code index} by {@code codePointOffset} code
points. Unpaired surrogates within the text range given by
{@code index} and {@code codePointOffset} count as
one code point each.

@param index the index to be offset
@param codePointOffset the offset in code points
@return the index within this sequence
@exception IndexOutOfBoundsException if {@code index}
  is negative or larger then the length of this sequence,
  or if {@code codePointOffset} is positive and the subsequence
  starting with {@code index} has fewer than
  {@code codePointOffset} code points,
  or if {@code codePointOffset} is negative and the subsequence
  before {@code index} has fewer than the absolute value of
  {@code codePointOffset} code points.
"
      end

      operation 6948482 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "srcBegin" explicit_type "int"
	  param in name "srcEnd" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	multiplicity "[]"
	  param in name "dstBegin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Characters are copied from this sequence into the
destination character array {@code dst}. The first character to
be copied is at index {@code srcBegin}; the last character to
be copied is at index {@code srcEnd-1}. The total number of
characters to be copied is {@code srcEnd-srcBegin}. The
characters are copied into the subarray of {@code dst} starting
at index {@code dstBegin} and ending at index:
<pre>{@code
dstbegin + (srcEnd-srcBegin) - 1
}</pre>

@param      srcBegin   start copying at this offset.
@param      srcEnd     stop copying at this offset.
@param      dst        the array to copy the data into.
@param      dstBegin   offset into {@code dst}.
@throws     IndexOutOfBoundsException  if any of the following is true:
            <ul>
            <li>{@code srcBegin} is negative
            <li>{@code dstBegin} is negative
            <li>the {@code srcBegin} argument is greater than
            the {@code srcEnd} argument.
            <li>{@code srcEnd} is greater than
            {@code this.length()}.
            <li>{@code dstBegin+srcEnd-srcBegin} is greater than
            {@code dst.length}
            </ul>
"
      end

      operation 6948610 "setCharAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The character at the specified index is set to {@code ch}. This
sequence is altered to represent a new character sequence that is
identical to the old character sequence, except that it contains the
character {@code ch} at position {@code index}.
<p>
The index argument must be greater than or equal to
{@code 0}, and less than the length of this sequence.

@param      index   the index of the character to modify.
@param      ch      the new character.
@throws     IndexOutOfBoundsException  if {@code index} is
            negative or greater than or equal to {@code length()}.
"
      end

      operation 6948738 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code Object} argument.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(Object)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   obj   an {@code Object}.
@return  a reference to this object.
"
      end

      operation 6948866 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified string to this character sequence.
<p>
The characters of the {@code String} argument are appended, in
order, increasing the length of this sequence by the length of the
argument. If {@code str} is {@code null}, then the four
characters {@code \"null\"} are appended.
<p>
Let <i>n</i> be the length of this character sequence just prior to
execution of the {@code append} method. Then the character at
index <i>k</i> in the new character sequence is equal to the character
at index <i>k</i> in the old character sequence, if <i>k</i> is less
than <i>n</i>; otherwise, it is equal to the character at index
<i>k-n</i> in the argument {@code str}.

@param   str   a string.
@return  a reference to this object.
"
      end

      operation 6948994 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "sb" type class_ref 166018 // StringBuffer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Documentation in subclasses because of synchro difference"
      end

      operation 6949122 "append"
	package return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "asb" type class_ref 928770 // AbstractStringBuilder
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since 1.8
"
      end

      operation 6949250 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Documentation in subclasses because of synchro difference"
      end

      operation 6949378 "appendNull"
	private return_type class_ref 928770 // AbstractStringBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6949506 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 3
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Appends a subsequence of the specified {@code CharSequence} to this
sequence.
<p>
Characters of the argument {@code s}, starting at
index {@code start}, are appended, in order, to the contents of
this sequence up to the (exclusive) index {@code end}. The length
of this sequence is increased by the value of {@code end - start}.
<p>
Let <i>n</i> be the length of this character sequence just prior to
execution of the {@code append} method. Then the character at
index <i>k</i> in this character sequence becomes equal to the
character at index <i>k</i> in this sequence, if <i>k</i> is less than
<i>n</i>; otherwise, it is equal to the character at index
<i>k+start-n</i> in the argument {@code s}.
<p>
If {@code s} is {@code null}, then this method appends
characters as if the s parameter was a sequence containing the four
characters {@code \"null\"}.

@param   s the sequence to append.
@param   start   the starting index of the subsequence to be appended.
@param   end     the end index of the subsequence to be appended.
@return  a reference to this object.
@throws     IndexOutOfBoundsException if
            {@code start} is negative, or
            {@code start} is greater than {@code end} or
            {@code end} is greater than {@code s.length()}
"
      end

      operation 6949634 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code char} array
argument to this sequence.
<p>
The characters of the array argument are appended, in order, to
the contents of this sequence. The length of this sequence
increases by the length of the argument.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(char[])},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   str   the characters to be appended.
@return  a reference to this object.
"
      end

      operation 6949762 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 3
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of a subarray of the
{@code char} array argument to this sequence.
<p>
Characters of the {@code char} array {@code str}, starting at
index {@code offset}, are appended, in order, to the contents
of this sequence. The length of this sequence increases
by the value of {@code len}.
<p>
The overall effect is exactly as if the arguments were converted
to a string by the method {@link String#valueOf(char[],int,int)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   str      the characters to be appended.
@param   offset   the index of the first {@code char} to append.
@param   len      the number of {@code char}s to append.
@return  a reference to this object.
@throws IndexOutOfBoundsException
        if {@code offset < 0} or {@code len < 0}
        or {@code offset+len > str.length}
"
      end

      operation 6949890 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code boolean}
argument to the sequence.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(boolean)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   b   a {@code boolean}.
@return  a reference to this object.
"
      end

      operation 6950018 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Appends the string representation of the {@code char}
argument to this sequence.
<p>
The argument is appended to the contents of this sequence.
The length of this sequence increases by {@code 1}.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(char)},
and the character in that string were then
{@link #append(String) appended} to this character sequence.

@param   c   a {@code char}.
@return  a reference to this object.
"
      end

      operation 6950146 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code int}
argument to this sequence.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(int)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   i   an {@code int}.
@return  a reference to this object.
"
      end

      operation 6950274 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code long}
argument to this sequence.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(long)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   l   a {@code long}.
@return  a reference to this object.
"
      end

      operation 6950402 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code float}
argument to this sequence.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(float)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   f   a {@code float}.
@return  a reference to this object.
"
      end

      operation 6950530 "append"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code double}
argument to this sequence.
<p>
The overall effect is exactly as if the argument were converted
to a string by the method {@link String#valueOf(double)},
and the characters of that string were then
{@link #append(String) appended} to this character sequence.

@param   d   a {@code double}.
@return  a reference to this object.
"
      end

      operation 6950658 "delete"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the characters in a substring of this sequence.
The substring begins at the specified {@code start} and extends to
the character at index {@code end - 1} or to the end of the
sequence if no such character exists. If
{@code start} is equal to {@code end}, no changes are made.

@param      start  The beginning index, inclusive.
@param      end    The ending index, exclusive.
@return     This object.
@throws     StringIndexOutOfBoundsException  if {@code start}
            is negative, greater than {@code length()}, or
            greater than {@code end}.
"
      end

      operation 6950786 "appendCodePoint"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "codePoint" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the {@code codePoint}
argument to this sequence.

<p> The argument is appended to the contents of this sequence.
The length of this sequence increases by
{@link Character#charCount(int) Character.charCount(codePoint)}.

<p> The overall effect is exactly as if the argument were
converted to a {@code char} array by the method
{@link Character#toChars(int)} and the character in that array
were then {@link #append(char[]) appended} to this character
sequence.

@param   codePoint   a Unicode code point
@return  a reference to this object.
@exception IllegalArgumentException if the specified
{@code codePoint} isn't a valid Unicode code point
"
      end

      operation 6950914 "deleteCharAt"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the {@code char} at the specified position in this
sequence. This sequence is shortened by one {@code char}.

<p>Note: If the character at the given index is a supplementary
character, this method does not remove the entire character. If
correct handling of supplementary characters is required,
determine the number of {@code char}s to remove by calling
{@code Character.charCount(thisSequence.codePointAt(index))},
where {@code thisSequence} is this sequence.

@param       index  Index of {@code char} to remove
@return      This object.
@throws      StringIndexOutOfBoundsException  if the {@code index}
             is negative or greater than or equal to
             {@code length()}.
"
      end

      operation 6951042 "replace"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the characters in a substring of this sequence
with characters in the specified {@code String}. The substring
begins at the specified {@code start} and extends to the character
at index {@code end - 1} or to the end of the
sequence if no such character exists. First the
characters in the substring are removed and then the specified
{@code String} is inserted at {@code start}. (This
sequence will be lengthened to accommodate the
specified String if necessary.)

@param      start    The beginning index, inclusive.
@param      end      The ending index, exclusive.
@param      str   String that will replace previous contents.
@return     This object.
@throws     StringIndexOutOfBoundsException  if {@code start}
            is negative, greater than {@code length()}, or
            greater than {@code end}.
"
      end

      operation 6951170 "substring"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code String} that contains a subsequence of
characters currently contained in this character sequence. The
substring begins at the specified index and extends to the end of
this sequence.

@param      start    The beginning index, inclusive.
@return     The new string.
@throws     StringIndexOutOfBoundsException  if {@code start} is
            less than zero, or greater than the length of this object.
"
      end

      operation 6951298 "subSequence"
	public return_type class_ref 429442 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a new character sequence that is a subsequence of this sequence.

<p> An invocation of this method of the form

<pre>{@code
sb.subSequence(begin,&nbsp;end)}</pre>

behaves in exactly the same way as the invocation

<pre>{@code
sb.substring(begin,&nbsp;end)}</pre>

This method is provided so that this class can
implement the {@link CharSequence} interface.

@param      start   the start index, inclusive.
@param      end     the end index, exclusive.
@return     the specified subsequence.

@throws  IndexOutOfBoundsException
         if {@code start} or {@code end} are negative,
         if {@code end} is greater than {@code length()},
         or if {@code start} is greater than {@code end}
@spec JSR-51
"
      end

      operation 6951426 "substring"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code String} that contains a subsequence of
characters currently contained in this sequence. The
substring begins at the specified {@code start} and
extends to the character at index {@code end - 1}.

@param      start    The beginning index, inclusive.
@param      end      The ending index, exclusive.
@return     The new string.
@throws     StringIndexOutOfBoundsException  if {@code start}
            or {@code end} are negative or greater than
            {@code length()}, or {@code start} is
            greater than {@code end}.
"
      end

      operation 6951554 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of a subarray of the {@code str}
array argument into this sequence. The subarray begins at the
specified {@code offset} and extends {@code len} {@code char}s.
The characters of the subarray are inserted into this sequence at
the position indicated by {@code index}. The length of this
sequence increases by {@code len} {@code char}s.

@param      index    position at which to insert subarray.
@param      str       A {@code char} array.
@param      offset   the index of the first {@code char} in subarray to
            be inserted.
@param      len      the number of {@code char}s in the subarray to
            be inserted.
@return     This object
@throws     StringIndexOutOfBoundsException  if {@code index}
            is negative or greater than {@code length()}, or
            {@code offset} or {@code len} are negative, or
            {@code (offset+len)} is greater than
            {@code str.length}.
"
      end

      operation 6951682 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code Object}
argument into this character sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(Object)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      obj      an {@code Object}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6951810 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string into this character sequence.
<p>
The characters of the {@code String} argument are inserted, in
order, into this sequence at the indicated offset, moving up any
characters originally above that position and increasing the length
of this sequence by the length of the argument. If
{@code str} is {@code null}, then the four characters
{@code \"null\"} are inserted into this sequence.
<p>
The character at index <i>k</i> in the new character sequence is
equal to:
<ul>
<li>the character at index <i>k</i> in the old character sequence, if
<i>k</i> is less than {@code offset}
<li>the character at index <i>k</i>{@code -offset} in the
argument {@code str}, if <i>k</i> is not less than
{@code offset} but is less than {@code offset+str.length()}
<li>the character at index <i>k</i>{@code -str.length()} in the
old character sequence, if <i>k</i> is not less than
{@code offset+str.length()}
</ul><p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      str      a string.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6951938 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" explicit_type "char"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code char} array
argument into this sequence.
<p>
The characters of the array argument are inserted into the
contents of this sequence at the position indicated by
{@code offset}. The length of this sequence increases by
the length of the argument.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(char[])},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      str      a character array.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952066 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified {@code CharSequence} into this sequence.
<p>
The characters of the {@code CharSequence} argument are inserted,
in order, into this sequence at the indicated offset, moving up
any characters originally above that position and increasing the length
of this sequence by the length of the argument s.
<p>
The result of this method is exactly the same as if it were an
invocation of this object's
{@link #insert(int,CharSequence,int,int) insert}(dstOffset, s, 0, s.length())
method.

<p>If {@code s} is {@code null}, then the four characters
{@code \"null\"} are inserted into this sequence.

@param      dstOffset   the offset.
@param      s the sequence to be inserted
@return     a reference to this object.
@throws     IndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952194 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 4
	  param in name "dstOffset" explicit_type "int"
	  param inout name "s" type class_ref 429442 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a subsequence of the specified {@code CharSequence} into
this sequence.
<p>
The subsequence of the argument {@code s} specified by
{@code start} and {@code end} are inserted,
in order, into this sequence at the specified destination offset, moving
up any characters originally above that position. The length of this
sequence is increased by {@code end - start}.
<p>
The character at index <i>k</i> in this sequence becomes equal to:
<ul>
<li>the character at index <i>k</i> in this sequence, if
<i>k</i> is less than {@code dstOffset}
<li>the character at index <i>k</i>{@code +start-dstOffset} in
the argument {@code s}, if <i>k</i> is greater than or equal to
{@code dstOffset} but is less than {@code dstOffset+end-start}
<li>the character at index <i>k</i>{@code -(end-start)} in this
sequence, if <i>k</i> is greater than or equal to
{@code dstOffset+end-start}
</ul><p>
The {@code dstOffset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.
<p>The start argument must be nonnegative, and not greater than
{@code end}.
<p>The end argument must be greater than or equal to
{@code start}, and less than or equal to the length of s.

<p>If {@code s} is {@code null}, then this method inserts
characters as if the s parameter was a sequence containing the four
characters {@code \"null\"}.

@param      dstOffset   the offset in this sequence.
@param      s       the sequence to be inserted.
@param      start   the starting index of the subsequence to be inserted.
@param      end     the end index of the subsequence to be inserted.
@return     a reference to this object.
@throws     IndexOutOfBoundsException  if {@code dstOffset}
            is negative or greater than {@code this.length()}, or
             {@code start} or {@code end} are negative, or
             {@code start} is greater than {@code end} or
             {@code end} is greater than {@code s.length()}
"
      end

      operation 6952322 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code boolean}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(boolean)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      b        a {@code boolean}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952450 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code char}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(char)},
and the character in that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      c        a {@code char}.
@return     a reference to this object.
@throws     IndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952578 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the second {@code int}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(int)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      i        an {@code int}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952706 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "l" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code long}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(long)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      l        a {@code long}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952834 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code float}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(float)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      f        a {@code float}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6952962 "insert"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the {@code double}
argument into this sequence.
<p>
The overall effect is exactly as if the second argument were
converted to a string by the method {@link String#valueOf(double)},
and the characters of that string were then
{@link #insert(int,String) inserted} into this character
sequence at the indicated offset.
<p>
The {@code offset} argument must be greater than or equal to
{@code 0}, and less than or equal to the {@linkplain #length() length}
of this sequence.

@param      offset   the offset.
@param      d        a {@code double}.
@return     a reference to this object.
@throws     StringIndexOutOfBoundsException  if the offset is invalid.
"
      end

      operation 6953090 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring. The integer returned is the smallest value
<i>k</i> such that:
<pre>{@code
this.toString().startsWith(str, <i>k</i>)
}</pre>
is {@code true}.

@param   str   any string.
@return  if the string argument occurs as a substring within this
         object, then the index of the first character of the first
         such substring is returned; if it does not occur as a
         substring, {@code -1} is returned.
"
      end

      operation 6953218 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the first occurrence of the
specified substring, starting at the specified index.  The integer
returned is the smallest value {@code k} for which:
<pre>{@code
    k >= Math.min(fromIndex, this.length()) &&
                  this.toString().startsWith(str, k)
}</pre>
If no such value of <i>k</i> exists, then -1 is returned.

@param   str         the substring for which to search.
@param   fromIndex   the index from which to start the search.
@return  the index within this string of the first occurrence of the
         specified substring, starting at the specified index.
"
      end

      operation 6953346 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the rightmost occurrence
of the specified substring.  The rightmost empty string \"\" is
considered to occur at the index value {@code this.length()}.
The returned index is the largest value <i>k</i> such that
<pre>{@code
this.toString().startsWith(str, k)
}</pre>
is true.

@param   str   the substring to search for.
@return  if the string argument occurs one or more times as a substring
         within this object, then the index of the first character of
         the last such substring is returned. If it does not occur as
         a substring, {@code -1} is returned.
"
      end

      operation 6953474 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "str" type class_ref 128130 // String
	  param in name "fromIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this string of the last occurrence of the
specified substring. The integer returned is the largest value <i>k</i>
such that:
<pre>{@code
    k <= Math.min(fromIndex, this.length()) &&
                  this.toString().startsWith(str, k)
}</pre>
If no such value of <i>k</i> exists, then -1 is returned.

@param   str         the substring to search for.
@param   fromIndex   the index to start the search from.
@return  the index within this sequence of the last occurrence of the
         specified substring.
"
      end

      operation 6953602 "reverse"
	public return_type class_ref 928770 // AbstractStringBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes this character sequence to be replaced by the reverse of
the sequence. If there are any surrogate pairs included in the
sequence, these are treated as single characters for the
reverse operation. Thus, the order of the high-low surrogates
is never reversed.

Let <i>n</i> be the character length of this character sequence
(not the length in {@code char} values) just prior to
execution of the {@code reverse} method. Then the
character at index <i>k</i> in the new character sequence is
equal to the character at index <i>n-k-1</i> in the old
character sequence.

<p>Note that the reverse operation may result in producing
surrogate pairs that were unpaired low-surrogates and
high-surrogates before the operation. For example, reversing
\"\\u005CuDC00\\u005CuD800\" produces \"\\u005CuD800\\u005CuDC00\" which is
a valid surrogate pair.

@return  a reference to this object.
"
      end

      operation 6953730 "reverseAllValidSurrogatePairs"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Outlined helper method for reverse() "
      end

      operation 6953858 "toString"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representing the data in this sequence.
A new {@code String} object is allocated and initialized to
contain the character sequence currently represented by this
object. This {@code String} is then returned. Subsequent
changes to this sequence do not affect the contents of the
{@code String}.

@return  a string representation of this sequence of characters.
"
      end

      operation 6953986 "getValue"
	package explicit_return_type "char"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Needed by {@code String} for the contentEquals method.
"
      end
    end

    class 928898 "ApplicationShutdownHooks"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to track and run user level shutdown hooks registered through
<tt>{@link Runtime#addShutdownHook Runtime.addShutdownHook}</tt>.

@see java.lang.Runtime#addShutdownHook
@see java.lang.Runtime#removeShutdownHook
"
      classrelation 3145474 // hooks (<unidirectional association>)
	relation 3145474 --->
	  a role_name "hooks" class_relation private
	    comment " The set of registered hooks 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Thread, Thread> ${name}${value};
"
	    classrelation_ref 3145474 // hooks (<unidirectional association>)
	  b parent class_ref 500226 // IdentityHashMap
      end

      extra_member 156290 "initialization"
	
	cpp "" ""
	java "  static {
        try {
            Shutdown.add(1 /* shutdown hook invocation order */,
                false /* not registered if shutdown in progress */,
                new Runnable() {
                    public void run() {
                        runHooks();
                    }
                }
            );
            hooks = new IdentityHashMap<>();
        } catch (IllegalStateException e) {
            // application shutdown hooks cannot be added if
            // shutdown is in progress.
            hooks = null;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6954114 "ApplicationShutdownHooks"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6954242 "add"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "hook" type class_ref 128642 // Thread
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Add a new shutdown hook.  Checks the shutdown state and the hook itself,
but does not do any security checks.
"
      end

      operation 6954370 "remove"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "hook" type class_ref 128642 // Thread
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove a previously-registered hook.  Like the add method, this method
does not do any security checks.
"
      end

      operation 6954498 "runHooks"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Iterates over all application hooks creating a new thread for each
to run in. Hooks are run concurrently and this method waits for
them to finish.
"
      end
    end

    class 929026 "ArithmeticException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an exceptional arithmetic condition has occurred. For
example, an integer \"divide by zero\" throws an
instance of this class.

{@code ArithmeticException} objects may be constructed by the
virtual machine as if {@linkplain Throwable#Throwable(String,
Throwable, boolean, boolean) suppression were disabled and/or the
stack trace was not writable}.

@author  unascribed
@since   JDK1.0
"
      classrelation 3145602 // <generalisation>
	relation 3145602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3145602 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1660930 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2256477558314496007L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6954626 "ArithmeticException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code ArithmeticException} with no detail
message.
"
      end

      operation 6954754 "ArithmeticException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code ArithmeticException} with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 929154 "ArrayStoreException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an attempt has been made to store the
wrong type of object into an array of objects. For example, the
following code generates an <code>ArrayStoreException</code>:
<blockquote><pre>
    Object x[] = new String[3];
    x[0] = new Integer(0);
</pre></blockquote>

@author  unascribed
@since   JDK1.0
"
      classrelation 3145986 // <generalisation>
	relation 3145986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3145986 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1661314 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4522193890499838241L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6955522 "ArrayStoreException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ArrayStoreException</code> with no detail message.
"
      end

      operation 6955650 "ArrayStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>ArrayStoreException</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 929282 "AssertionError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an assertion has failed.

<p>The seven one-argument public constructors provided by this
class ensure that the assertion error returned by the invocation:
<pre>
    new AssertionError(<i>expression</i>)
</pre>
has as its detail message the <i>string conversion</i> of
<i>expression</i> (as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>),
regardless of the type of <i>expression</i>.

@since   1.4
"
      classrelation 3146114 // <generalisation>
	relation 3146114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3146114 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 1661442 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5013299493970297370L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6955778 "AssertionError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with no detail message.
"
      end

      operation 6955906 "AssertionError"
	private explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This internal constructor does no processing on its string argument,
even if it is a null reference.  The public constructors will
never call this constructor with a null argument.
"
      end

      operation 6956034 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified object, which is converted to a string as
defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.
<p>
If the specified object is an instance of {@code Throwable}, it
becomes the <i>cause</i> of the newly constructed assertion error.

@param detailMessage value to be used in constructing detail message
@see   Throwable#getCause()
"
      end

      operation 6956162 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>boolean</code>, which is converted to
a string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956290 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>char</code>, which is converted to a
string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956418 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>int</code>, which is converted to a
string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956546 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>long</code>, which is converted to a
string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956674 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>float</code>, which is converted to a
string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956802 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an AssertionError with its detail message derived
from the specified <code>double</code>, which is converted to a
string as defined in section 15.18.1.1 of
<cite>The Java&trade; Language Specification</cite>.

@param detailMessage value to be used in constructing detail message
"
      end

      operation 6956930 "AssertionError"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with the specified
detail message and cause.

<p>Note that the detail message associated with
{@code cause} is <i>not</i> automatically incorporated in
this error's detail message.

@param  message the detail message, may be {@code null}
@param  cause the cause, may be {@code null}

@since 1.7
"
      end
    end

    class 929410 "BootstrapMethodError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that an {@code invokedynamic} instruction has
failed to find its bootstrap method,
or the bootstrap method has failed to provide a
{@linkplain java.lang.invoke.CallSite call site} with a {@linkplain java.lang.invoke.CallSite#getTarget target}
of the correct {@linkplain java.lang.invoke.MethodHandle#type method type}.

@author John Rose, JSR 292 EG
@since 1.7
"
      classrelation 3147138 // <generalisation>
	relation 3147138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3147138 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1662210 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 292L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6959234 "BootstrapMethodError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code BootstrapMethodError} with no detail message.
"
      end

      operation 6959362 "BootstrapMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code BootstrapMethodError} with the specified
detail message.

@param s the detail message.
"
      end

      operation 6959490 "BootstrapMethodError"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code BootstrapMethodError} with the specified
detail message and cause.

@param s the detail message.
@param cause the cause, may be {@code null}.
"
      end

      operation 6959618 "BootstrapMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code BootstrapMethodError} with the specified
cause.

@param cause the cause, may be {@code null}.
"
      end
    end

    class 929666 "CharacterData"
      abstract visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 6963586 "getProperties"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6963714 "getType"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6963842 "isWhitespace"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6963970 "isMirrored"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964098 "isJavaIdentifierStart"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964226 "isJavaIdentifierPart"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964354 "isUnicodeIdentifierStart"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964482 "isUnicodeIdentifierPart"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964610 "isIdentifierIgnorable"
	abstract package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964738 "toLowerCase"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964866 "toUpperCase"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6964994 "toTitleCase"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965122 "digit"
	abstract package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965250 "getNumericValue"
	abstract package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965378 "getDirectionality"
	abstract package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965506 "toUpperCaseEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "need to implement for JSR204"
      end

      operation 6965634 "toUpperCaseCharArray"
	package explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965762 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6965890 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966018 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966146 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966274 "of"
	class_operation package return_type class_ref 929666 // CharacterData
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Character <= 0xff (basic latin) is handled by internal fast-path
 to avoid initializing large tables.
 Note: performance of this \"fast-path\" code may be sub-optimal
 in negative cases for some accessors due to complicated ranges.
 Should revisit after optimization of table initialization."
      end
    end

    class 929794 "CharacterData00"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The CharacterData00 class encapsulates the large tables once found in
java.lang.Character
"
      classrelation 3147906 // <generalisation>
	relation 3147906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3147906 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6966402 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character properties are currently encoded into 32 bits in the following manner:
1 bit   mirrored property
4 bits  directionality property
9 bits  signed offset used for converting case
1 bit   if 1, adding the signed offset converts the character to lowercase
1 bit   if 1, subtracting the signed offset converts the character to uppercase
1 bit   if 1, this character has a titlecase equivalent (possibly itself)
3 bits  0  may not be part of an identifier
1  ignorable control; may continue a Unicode identifier or Java identifier
2  may continue a Java identifier but not a Unicode identifier (unused)
3  may continue a Unicode identifier or Java identifier
4  is a Java whitespace character
5  may start or continue a Java identifier;
may continue but not start a Unicode identifier (underscores)
6  may start or continue a Java identifier but not a Unicode identifier ($)
7  may start or continue a Unicode identifier or Java identifier
Thus:
5, 6, 7 may start a Java identifier
1, 2, 3, 5, 6, 7 may continue a Java identifier
7 may start a Unicode identifier
1, 3, 5, 7 may continue a Unicode identifier
1 is ignorable within an identifier
4 is Java whitespace
2 bits  0  this character has no numeric property
1  adding the digit offset to the character code and then
masking with 0x1F will produce the desired numeric value
2  this character has a \"strange\" numeric value
3  a Java supradecimal digit: adding the digit offset to the
character code, then masking with 0x1F, then adding 10
will produce the desired numeric value
5 bits  digit offset
5 bits  character type

The encoding of character properties is subject to change at any time.
"
      end

      operation 6966530 "getPropertiesEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966658 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966786 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6966914 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967042 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967170 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967298 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967426 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967554 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967682 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967810 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6967938 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968066 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968194 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968322 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968450 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968578 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968706 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968834 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6968962 "toUpperCaseEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6969090 "toUpperCaseCharArray"
	package explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6969218 "findInCharMap"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the character in the uppercase mapping table.

@param ch the <code>char</code> to search
@return the index location ch in the table or -1 if not found
@since 1.4
"
      end

      classrelation 3148034 // instance (<unidirectional association>)
	relation 3148034 --->
	  a role_name "instance" init_value " new CharacterData00()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148034 // instance (<unidirectional association>)
	  b parent class_ref 929794 // CharacterData00
      end

      operation 6969346 "CharacterData00"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1663234 "charMap"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[][][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following tables and code generated using:
 java GenerateCharacter -plane 0 -template /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/characterdata/CharacterData00.java.template -spec /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/UnicodeData.txt -specialcasing /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/SpecialCasing.txt -proplist /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/PropList.txt -o /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/build/macosx-x86_64/jdk/gensrc/java/lang/CharacterData00.java -string -usecharforbyte 11 4 1
"
      end

      attribute 1663362 "X"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\020\\040\\060\\100\\120\\140\\160\\200\\220\\240\\260\\300\\320\\340\\360\\200\\u0100\"+
    \"\\u0110\\u0120\\u0130\\u0140\\u0150\\u0160\\u0170\\u0170\\u0180\\u0190\\u01A0\\u01B0\\u01C0\"+
    \"\\u01D0\\u01E0\\u01F0\\u0200\\200\\u0210\\200\\u0220\\200\\200\\u0230\\u0240\\u0250\\u0260\"+
    \"\\u0270\\u0280\\u0290\\u02A0\\u02B0\\u02C0\\u02D0\\u02B0\\u02B0\\u02E0\\u02F0\\u0300\\u0310\"+
    \"\\u0320\\u02B0\\u02B0\\u0330\\u0340\\u0350\\u0360\\u0370\\u0380\\u0390\\u0390\\u03A0\\u0390\"+
    \"\\u03B0\\u03C0\\u03D0\\u03E0\\u03F0\\u0400\\u0410\\u0420\\u0430\\u0440\\u0450\\u0460\\u0470\"+
    \"\\u0480\\u0490\\u04A0\\u04B0\\u0400\\u04C0\\u04D0\\u04E0\\u04F0\\u0500\\u0510\\u0520\\u0530\"+
    \"\\u0540\\u0550\\u0560\\u0570\\u0580\\u0590\\u05A0\\u0570\\u05B0\\u05C0\\u05D0\\u05E0\\u05F0\"+
    \"\\u0600\\u0610\\u0620\\u0630\\u0640\\u0390\\u0650\\u0660\\u0670\\u0390\\u0680\\u0690\\u06A0\"+
    \"\\u06B0\\u06C0\\u06D0\\u06E0\\u0390\\u06F0\\u0700\\u0710\\u0720\\u0730\\u0740\\u0750\\u0760\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u0770\\u06F0\\u0780\"+
    \"\\u0790\\u07A0\\u06F0\\u07B0\\u06F0\\u07C0\\u07D0\\u07E0\\u06F0\\u06F0\\u07F0\\u0800\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u0810\\u0820\\u06F0\\u06F0\\u0830\\u0840\\u0850\\u0860\\u0870\"+
    \"\\u06F0\\u0880\\u0890\\u08A0\\u08B0\\u06F0\\u08C0\\u08D0\\u06F0\\u08E0\\u06F0\\u08F0\\u0900\"+
    \"\\u0910\\u0920\\u0930\\u06F0\\u0940\\u0950\\u0960\\u0970\\u06F0\\u0980\\u0990\\u09A0\\u09B0\"+
    \"\\u0390\\u0390\\u09C0\\u09D0\\u09E0\\u09F0\\u0A00\\u0A10\\u06F0\\u0A20\\u06F0\\u0A30\\u0A40\"+
    \"\\u0A50\\u0390\\u0390\\u0A60\\u0A70\\u0A80\\u0A90\\u0AA0\\u0AB0\\u0AC0\\u0AA0\\u0170\\u0AD0\"+
    \"\\200\\200\\200\\200\\u0AE0\\200\\200\\200\\u0AF0\\u0B00\\u0B10\\u0B20\\u0B30\\u0B40\\u0B50\"+
    \"\\u0B60\\u0B70\\u0B80\\u0B90\\u0BA0\\u0BB0\\u0BC0\\u0BD0\\u0BE0\\u0BF0\\u0C00\\u0C10\\u0C20\"+
    \"\\u0C30\\u0C40\\u0C50\\u0C60\\u0C70\\u0C80\\u0C90\\u0CA0\\u0CB0\\u0CC0\\u0CD0\\u0CE0\\u0CF0\"+
    \"\\u0D00\\u0D10\\u0D20\\u0D30\\u0D40\\u0D50\\u0D60\\u0960\\u0D70\\u0D80\\u0D90\\u0DA0\\u0DB0\"+
    \"\\u0DC0\\u0DD0\\u0960\\u0960\\u0960\\u0960\\u0960\\u0DE0\\u0DF0\\u0E00\\u0960\\u0960\\u0960\"+
    \"\\u0E10\\u0960\\u0E20\\u0960\\u0960\\u0E30\\u0960\\u0960\\u0E40\\u0E50\\u0960\\u0E60\\u0E70\"+
    \"\\u0D10\\u0D10\\u0D10\\u0D10\\u0D10\\u0D10\\u0D10\\u0D10\\u0E80\\u0E80\\u0E80\\u0E80\\u0E90\"+
    \"\\u0EA0\\u0EB0\\u0EC0\\u0ED0\\u0EE0\\u0EF0\\u0F00\\u0F10\\u0F20\\u0F30\\u0F40\\u0960\\u0F50\"+
    \"\\u0F60\\u0390\\u0390\\u0390\\u0390\\u0390\\u0F70\\u0F80\\u0F90\\u0FA0\\200\\200\\200\\u0FB0\"+
    \"\\u0FC0\\u0FD0\\u06F0\\u0FE0\\u0FF0\\u1000\\u1000\\u1010\\u1020\\u1030\\u0390\\u0390\\u1040\"+
    \"\\u0960\\u0960\\u1050\\u0960\\u0960\\u0960\\u0960\\u0960\\u0960\\u1060\\u1070\\u1080\\u1090\"+
    \"\\u0620\\u06F0\\u10A0\\u0800\\u06F0\\u10B0\\u10C0\\u10D0\\u06F0\\u06F0\\u10E0\\u10F0\\u0960\"+
    \"\\u1100\\u1110\\u1120\\u1130\\u1140\\u1120\\u1150\\u1160\\u1170\\u0D10\\u0D10\\u0D10\\u1180\"+
    \"\\u0D10\\u0D10\\u1190\\u11A0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11C0\\u0960\\u0960\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\"+
    \"\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11B0\\u11D0\\u0390\\u11E0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u11F0\\u0960\\u1200\\u0A50\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u1210\\u1220\\200\\u1230\\u1240\\u06F0\\u06F0\"+
    \"\\u1250\\u1260\\u1270\\200\\u1280\\u1290\\u12A0\\u0390\\u12B0\\u12C0\\u12D0\\u06F0\\u12E0\"+
    \"\\u12F0\\u1300\\u1310\\u1320\\u1330\\u1340\\u1350\\u0900\\u03C0\\u1360\\u1370\\u0390\\u06F0\"+
    \"\\u1380\\u1390\\u13A0\\u06F0\\u13B0\\u13C0\\u13D0\\u13E0\\u13F0\\u0390\\u0390\\u0390\\u0390\"+
    \"\\u06F0\\u1400\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\\u06F0\"+
    \"\\u1410\\u1420\\u1430\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\"+
    \"\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\"+
    \"\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\"+
    \"\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\"+
    \"\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\\u1440\"+
    \"\\u1440\\u1440\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\"+
    \"\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u1450\\u11B0\\u11B0\\u11B0\\u1460\\u11B0\\u1470\"+
    \"\\u1480\\u1490\\u11B0\\u11B0\\u11B0\\u14A0\\u11B0\\u11B0\\u14B0\\u0390\\u14C0\\u14D0\\u14E0\"+
    \"\\u02B0\\u02B0\\u14F0\\u1500\\u02B0\\u02B0\\u02B0\\u02B0\\u02B0\\u02B0\\u02B0\\u02B0\\u02B0\"+
    \"\\u02B0\\u1510\\u1520\\u02B0\\u1530\\u02B0\\u1540\\u1550\\u1560\\u1570\\u1580\\u1590\\u02B0\"+
    \"\\u02B0\\u02B0\\u15A0\\u15B0\\040\\u15C0\\u15D0\\u15E0\\u15F0\\u1600\\u1610\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The X table has 2048 entries for a total of 4096 bytes.
"
      end

      attribute 1663490 "Y"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\002\\004\\006\\000\\000\\000\\000\\000\\000\\000\\010\\004\\012\\014\\016\"+
    \"\\020\\022\\024\\026\\030\\032\\032\\032\\032\\032\\034\\036\\040\\042\\044\\044\\044\\044\\044\"+
    \"\\044\\044\\044\\044\\044\\044\\044\\046\\050\\052\\054\\056\\056\\056\\056\\056\\056\\056\\056\"+
    \"\\056\\056\\056\\056\\060\\062\\064\\000\\000\\066\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\070\\072\\072\\074\\076\\100\\102\\104\\106\\110\\112\\020\\114\\116\\120\"+
    \"\\122\\124\\124\\124\\124\\124\\124\\124\\124\\124\\124\\124\\126\\124\\124\\124\\130\\132\\132\"+
    \"\\132\\132\\132\\132\\132\\132\\132\\132\\132\\134\\132\\132\\132\\136\\140\\140\\140\\140\\140\"+
    \"\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\"+
    \"\\142\\140\\140\\140\\144\\146\\146\\146\\146\\146\\146\\146\\150\\140\\140\\140\\140\\140\\140\"+
    \"\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\152\\146\"+
    \"\\146\\150\\154\\140\\140\\156\\160\\162\\164\\166\\170\\160\\172\\174\\140\\176\\200\\202\\140\"+
    \"\\140\\140\\204\\206\\210\\140\\204\\212\\214\\146\\216\\140\\220\\140\\222\\224\\224\\226\\230\"+
    \"\\232\\226\\234\\146\\146\\146\\146\\146\\146\\146\\236\\140\\140\\140\\140\\140\\140\\140\\140\"+
    \"\\140\\240\\232\\140\\242\\140\\140\\140\\140\\244\\140\\140\\140\\140\\140\\140\\140\\140\\140\"+
    \"\\210\\210\\210\\246\\250\\252\\254\\256\\260\\140\\140\\140\\140\\140\\262\\264\\266\\270\\272\"+
    \"\\274\\210\\210\\276\\300\\302\\304\\306\\302\\210\\310\\302\\312\\314\\210\\210\\210\\302\\210\"+
    \"\\316\\320\\210\\210\\322\\324\\326\\210\\210\\330\\332\\210\\210\\210\\210\\210\\210\\210\\210\"+
    \"\\210\\210\\210\\210\\210\\334\\334\\334\\334\\336\\340\\342\\342\\334\\344\\344\\346\\346\\346\"+
    \"\\346\\346\\342\\344\\344\\344\\344\\344\\344\\344\\334\\334\\350\\344\\344\\344\\352\\354\\344\"+
    \"\\344\\344\\344\\344\\344\\344\\344\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\"+
    \"\\356\\356\\356\\356\\356\\356\\360\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\"+
    \"\\356\\356\\356\\356\\356\\356\\356\\356\\356\\140\\140\\352\\140\\362\\364\\366\\370\\362\\362\"+
    \"\\344\\372\\374\\376\\u0100\\u0102\\u0104\\124\\124\\124\\124\\124\\124\\124\\124\\u0106\\124\"+
    \"\\124\\124\\124\\u0108\\u010A\\u010C\\132\\132\\132\\132\\132\\132\\132\\132\\u010E\\132\\132\"+
    \"\\132\\132\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\140\\140\\140\\140\\140\\140\\140\\140\"+
    \"\\140\\140\\140\\140\\u011C\\u011E\\u0120\\u0122\\u0124\\140\\u0126\\u0128\\u012A\\u012A\"+
    \"\\u012A\\u012A\\u012A\\u012A\\u012A\\u012A\\124\\124\\124\\124\\124\\124\\124\\124\\124\\124\"+
    \"\\124\\124\\124\\124\\124\\124\\132\\132\\132\\132\\132\\132\\132\\132\\132\\132\\132\\132\\132\"+
    \"\\132\\132\\132\\u012C\\u012C\\u012C\\u012C\\u012C\\u012C\\u012C\\u012C\\140\\u012E\\356\"+
    \"\\356\\u0130\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\u0132\\146\\146\\146\\146\"+
    \"\\146\\146\\u0134\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\362\\362\\362\"+
    \"\\362\\u0136\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\"+
    \"\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u013A\\u013C\\u013E\\u013E\\u013E\\u0140\"+
    \"\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\"+
    \"\\u0142\\u0142\\u0142\\u0142\\u0142\\u0144\\u0146\\u0148\\362\\u014A\\u014C\\356\\356\\356\"+
    \"\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\356\\u014E\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u0150\\u0152\\u0154\\u014E\\u0152\\362\\362\\362\\362\\u0156\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0158\\362\\362\"+
    \"\\u0156\\u015A\\u015C\\362\\362\\362\\362\\362\\u015E\\u015E\\u0160\\u0162\\u0164\\u0166\"+
    \"\\u0168\\u016A\\u014E\\u014E\\u014E\\u014E\\u014E\\u016C\\362\\u016E\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0172\\u0170\\u0170\\u0170\\u0170\\u0174\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u0176\"+
    \"\\u014E\\u014E\\u014E\\u0178\\u0178\\u0178\\u0178\\u0178\\u017A\\u017C\\u0170\\u017E\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0180\\u014E\\u014E\\u014E\\u0182\\u0184\\u0176\\u014E\\u0186\\u0188\"+
    \"\\u018A\\356\\u0176\\u0170\\032\\032\\032\\032\\032\\u0170\\u018C\\u018E\\u016E\\u016E\\u016E\"+
    \"\\u016E\\u016E\\u016E\\u016E\\u0190\\u0174\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u014E\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u014E\\356\\356\\356\\356\\356\\u0192\\u0194\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u014E\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u017E\\362\\362\\362\\362\\362\\362\\362\\u0196\\u0196\\u0196\\u0196\\u0196\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\"+
    \"\\u0156\\u0198\\356\\356\\356\\356\\u019A\\074\\020\\u019C\\362\\362\\u0156\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u014E\\356\\u019E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u019E\\u014E\\u019E\\u014E\\u01A0\\362\\u01A2\\u01A2\\u01A2\\u01A2\\u01A2\"+
    \"\\u01A2\\u01A2\\u015C\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0198\\356\\362\\u015C\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\362\\362\\362\\362\\u01A4\\u0170\\u0170\\u0170\\u0170\\u0170\\u01A4\\362\\362\\362\"+
    \"\\362\\362\\362\\362\\362\\362\\362\\362\\u014E\\u014E\\u014E\\356\\356\\356\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u014E\\u014E\\u014E\\u01A6\\u014E\\u01A8\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\u01A8\\u01AA\\u01AC\\u01AE\\u014E\\u014E\\u014E\\u01A8\\u01AC\\u01B0\\u01AC\\u01B2\"+
    \"\\356\\u0176\\u014E\\224\\224\\224\\224\\224\\u014E\\u013E\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\"+
    \"\\u01B6\\224\\224\\224\\u01B8\\224\\224\\224\\u01BA\\u01AC\\u01B8\\224\\224\\224\\u01BC\\u01B8\"+
    \"\\u01BC\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\\224\\224\\224\\u01BC\"+
    \"\\u01BC\\362\\224\\224\\362\\u01AA\\u01AC\\u01AE\\u014E\\u01A6\\u01BE\\u01C0\\u01BE\\u01B0\"+
    \"\\u01BC\\362\\362\\362\\u01BE\\362\\362\\224\\u01B8\\224\\u014E\\362\\u01B4\\u01B4\\u01B4\"+
    \"\\u01B4\\u01B4\\224\\072\\u01C2\\u01C2\\u01C4\\u01C6\\362\\362\\u01BA\\u01A8\\u01B8\\224\"+
    \"\\224\\u01BC\\362\\u01B8\\u01BC\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\"+
    \"\\224\\224\\224\\u01BC\\224\\u01B8\\u01BC\\224\\362\\u0192\\u01AC\\u01AE\\u01A6\\362\\u01BA\"+
    \"\\u01A6\\u01BA\\u01A0\\362\\u01BA\\362\\362\\362\\u01B8\\224\\u01BC\\u01BC\\362\\362\\362\"+
    \"\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u014E\\224\\u01C8\\362\\362\\362\\362\\362\\u01BA\\u01A8\"+
    \"\\u01B8\\224\\224\\224\\224\\u01B8\\224\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\u01BC\\224\\224\\224\\u01BC\\224\\u01B8\\224\\224\\362\\u01AA\\u01AC\\u01AE\\u014E\"+
    \"\\u014E\\u01BA\\u01A8\\u01BE\\u01B0\\362\\u01BC\\362\\362\\362\\362\\362\\362\\362\\224\\u014E\"+
    \"\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u01CA\\362\\362\\362\\362\\362\\362\\362\\224\\224\"+
    \"\\224\\224\\u01BC\\224\\224\\224\\u01BC\\224\\u01B8\\224\\224\\362\\u01AA\\u01AE\\u01AE\\u014E\"+
    \"\\u01A6\\u01BE\\u01C0\\u01BE\\u01B0\\362\\362\\362\\362\\u01A8\\362\\362\\224\\u01B8\\224\"+
    \"\\u014E\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u01CC\\u01C2\\u01C2\\u01C2\\362\\362\\362\"+
    \"\\362\\362\\u01CE\\u01B8\\224\\224\\u01BC\\362\\224\\u01BC\\224\\224\\362\\u01B8\\u01BC\\u01BC\"+
    \"\\224\\362\\u01B8\\u01BC\\362\\224\\u01BC\\362\\224\\224\\224\\224\\224\\224\\362\\362\\u01AC\"+
    \"\\u01A8\\u01C0\\362\\u01AC\\u01C0\\u01AC\\u01B0\\362\\u01BC\\362\\362\\u01BE\\362\\362\\362\"+
    \"\\362\\362\\362\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u01D0\\u01D2\\u016A\\u016A\\u01D4\"+
    \"\\u01D6\\362\\362\\u01BE\\u01AC\\u01B8\\224\\224\\224\\u01BC\\224\\u01BC\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\u01BC\\224\\224\\224\\224\\224\\u01B8\\224\\224\\362\\u01B8\"+
    \"\\u014E\\u01A8\\u01AC\\u01C0\\u014E\\u01A6\\u014E\\u01A0\\362\\362\\362\\u01BA\\u01A6\\224\"+
    \"\\362\\362\\362\\224\\u014E\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\362\\362\\362\\362\\u01D8\"+
    \"\\u01D8\\u01DA\\u01DC\\362\\u01AC\\u01B8\\224\\224\\224\\u01BC\\224\\u01BC\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\\224\\224\\224\\224\\224\\u01B8\\224\\224\\362\"+
    \"\\u01AA\\u01DE\\u01AC\\u01AC\\u01C0\\u01E0\\u01C0\\u01AC\\u01A0\\362\\362\\362\\u01BE\\u01C0\"+
    \"\\362\\362\\362\\u01BC\\224\\u014E\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u01B8\\u01BC\"+
    \"\\362\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\u01BC\\u01B8\\u01AC\\u01AE\\u014E\\u01A6\\u01AC\\u01C0\\u01AC\\u01B0\\u01BC\\362\\362\"+
    \"\\362\\u01BE\\362\\362\\362\\362\\224\\u014E\\362\\u01B4\\u01B4\\u01B4\\u01B4\\u01B4\\u01D0\"+
    \"\\u01C2\\u01C2\\362\\u01E2\\224\\224\\224\\362\\u01AC\\u01B8\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\u01BC\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01B8\\224\"+
    \"\\224\\224\\224\\u01B8\\362\\224\\224\\224\\u01BC\\362\\u0192\\362\\u01BE\\u01AC\\u014E\\u01A6\"+
    \"\\u01A6\\u01AC\\u01AC\\u01AC\\u01AC\\362\\362\\362\\362\\362\\362\\362\\362\\362\\u01AC\\u01E4\"+
    \"\\362\\362\\362\\362\\362\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01C8\\224\\u014E\\u014E\\u014E\\u01A6\"+
    \"\\362\\u014A\\224\\224\\224\\u01E6\\356\\356\\u0176\\u01E8\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\"+
    \"\\u013E\\362\\362\\u01B8\\u01BC\\u01BC\\u01B8\\u01BC\\u01BC\\u01B8\\362\\362\\362\\224\\224\"+
    \"\\u01B8\\224\\224\\224\\u01B8\\224\\u01B8\\u01B8\\362\\224\\u01B8\\224\\u01C8\\224\\u014E\"+
    \"\\u014E\\u014E\\u01BA\\u01CE\\362\\224\\224\\u01BC\\u01EC\\356\\356\\u0176\\362\\u01EA\\u01EA\"+
    \"\\u01EA\\u01EA\\u01EA\\362\\224\\224\\u01EE\\u01F0\\u013E\\u013E\\u013E\\u013E\\u013E\\u013E\"+
    \"\\u013E\\u01F2\\u01F2\\u01F0\\356\\u01F0\\u01F0\\u01F0\\u01F4\\u01F4\\u01F4\\u01F4\\u01F4\"+
    \"\\u01C2\\u01C2\\u01C2\\u01C2\\u01C2\\u012E\\u012E\\u012E\\022\\022\\u01F6\\224\\224\\224\"+
    \"\\224\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\u01BC\\362\\u01BA\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u01A8\\u014E\\356\\u01E8\"+
    \"\\356\\224\\224\\u01C8\\u014E\\u014E\\u014E\\u014E\\u014E\\u01BA\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u01A6\\u01F0\\u01F0\\u01F0\\u01F0\\u01F8\\u01F0\\u01F0\\u01FA\\u01F0\\u013E\\u013E\\u01F2\"+
    \"\\u01F0\\u01FC\\u01E4\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01FE\\u01AE\\u014E\\u01A8\\u014E\\u014E\\u01A0\"+
    \"\\u01B0\\u0200\\u01AE\\u01CE\\u01F4\\u01F4\\u01F4\\u01F4\\u01F4\\u013E\\u013E\\u013E\\224\"+
    \"\\224\\224\\u01AC\\u014E\\224\\224\\u014E\\u01CE\\u0202\\u0204\\u01FE\\u0202\\u01F6\\u01F6\"+
    \"\\224\\u01C8\\u014E\\u01CE\\224\\224\\224\\224\\224\\224\\u01A8\\u01AE\\u0206\\u01F6\\u01F6\"+
    \"\\u0208\\u020A\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\u01F6\\u01AE\\u01F0\\u020C\\u020C\\u020C\"+
    \"\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\\u020C\"+
    \"\\u020C\\u020C\\u020C\\u020E\\362\\362\\u020E\\362\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u0210\\u0212\\224\\224\\224\"+
    \"\\224\\224\\u01BC\\224\\224\\362\\224\\224\\224\\u01BC\\u01BC\\224\\224\\362\\224\\224\\224\"+
    \"\\224\\u01BC\\224\\224\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\u01BC\\224\\224\\362\\224\\224\\224\\u01BC\\u01BC\\224\\224\\362\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\u01BC\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\u01BC\\224\\224\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\u01BC\\u014C\\u0176\\u013E\\u013E\\u013E\\u013E\\u0214\\u0216\\u0216\\u0216\"+
    \"\\u0216\\u0218\\u021A\\u01C2\\u01C2\\u01C2\\u021C\\362\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\u016A\\u016A\\u016A\\u016A\\u016A\\362\\362\\362\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\u01BC\\362\\362\\362\\362\\362\\u021E\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u0210\\u0220\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\u0222\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\u0224\\u0226\\362\\224\\224\\224\\224\\224\\u0210\\u013E\\u0228\\u022A\\362\\362\\362\\362\"+
    \"\\362\\362\\362\\224\\224\\224\\224\\224\\224\\u01BC\\224\\224\\u014E\\u0192\\362\\362\\362\"+
    \"\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u014E\\u01E8\\u01E4\\362\\362\\362\"+
    \"\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u014E\\362\\362\\362\\362\\362\\362\\224\"+
    \"\\224\\224\\224\\224\\224\\u01BC\\224\\u01BC\\u014E\\362\\362\\362\\362\\362\\362\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\356\\u01AE\\u014E\\u014E\\u014E\\u01AC\\u01AC\\u01AC\"+
    \"\\u01AC\\u01A8\\u01B0\\356\\356\\356\\356\\356\\u013E\\u01B6\\u013E\\u01CA\\u01B2\\362\\u01F4\"+
    \"\\u01F4\\u01F4\\u01F4\\u01F4\\362\\362\\362\\u022C\\u022C\\u022C\\u022C\\u022C\\362\\362\"+
    \"\\362\\020\\020\\020\\u022E\\020\\u0230\\356\\u0232\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\"+
    \"\\362\\362\\224\\u0234\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\362\\362\\362\\362\\224\\224\\224\"+
    \"\\224\\u01C8\\u01BC\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\u01BC\\362\\u014E\\u01A8\\u01AC\\u01AE\\u01A8\\u01AC\\362\"+
    \"\\362\\u01AC\\u01A8\\u01AC\\u01AC\\u01B0\\356\\362\\362\\u01D6\\362\\020\\u01B4\\u01B4\\u01B4\"+
    \"\\u01B4\\u01B4\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\362\"+
    \"\\224\\224\\u01BC\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\\362\\362\\u01AC\\u01AC\"+
    \"\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u0236\\224\\224\\224\\u01AC\\362\\362\\362\\u01EA\"+
    \"\\u01EA\\u01EA\\u01EA\\u01EA\\u0238\\362\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\u01C8\\u01A8\\u01AC\\362\\u013E\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\u01FE\\u01A8\\u014E\\u014E\\u014E\\u01A6\\u0200\\u01A8\\u01AE\"+
    \"\\u014E\\u014E\\u014E\\u01A8\\u01AC\\u01AC\\u01AE\\u01A0\\356\\356\\356\\u0192\\u014C\\u01F4\"+
    \"\\u01F4\\u01F4\\u01F4\\u01F4\\362\\362\\362\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\\362\"+
    \"\\362\\u013E\\u013E\\u013E\\u01B6\\u013E\\u013E\\u013E\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\362\\u014E\\u014E\\u0236\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u0200\\u014E\\u014E\\u01A8\\u01A8\"+
    \"\\u01AC\\u01AC\\u01A8\\u0204\\224\\224\\224\\362\\362\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\"+
    \"\\u013E\\u013E\\u013E\\u01F2\\u01F0\\u01F0\\u01F0\\u01F0\\u012E\\356\\356\\356\\356\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01FA\\362\\u014E\\u0236\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\u01FE\\u014E\\u014E\\u01AC\\u014E\\u0208\\u01AC\\224\\u01EA\\u01EA\"+
    \"\\u01EA\\u01EA\\u01EA\\224\\224\\224\\224\\224\\224\\u0200\\u014E\\u01AC\\u01AE\\u01AE\\u014E\"+
    \"\\u01F6\\362\\362\\362\\362\\u013E\\u013E\\224\\224\\u01AC\\u01AC\\u01AC\\u01AC\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u01AC\\356\\362\\u0146\\u013E\\u013E\\u01F4\\u01F4\\u01F4\\u01F4\\u01F4\"+
    \"\\362\\u01B8\\224\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\342\\342\\342\\u013E\\u013E\\u013E\\u013E\\u013E\\362\"+
    \"\\362\\362\\362\\356\\u01E8\\356\\356\\356\\356\\356\\356\\u023A\\356\\356\\356\\u01AA\\224\"+
    \"\\u01B2\\224\\224\\u01AC\\u01AA\\u01BC\\362\\362\\362\\362\\210\\210\\210\\210\\210\\210\\210\"+
    \"\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\334\\334\\334\\334\"+
    \"\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\\334\"+
    \"\\334\\334\\334\\334\\334\\334\\334\\334\\u023C\\210\\210\\210\\210\\210\\210\\u023E\\210\\302\"+
    \"\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\210\\u0240\\334\\334\\356\"+
    \"\\356\\356\\u0192\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\356\\356\\140\\140\\140\"+
    \"\\140\\140\\140\\140\\140\\140\\140\\140\\262\\262\\u0242\\210\\u0244\\u0246\\u0246\\u0246\"+
    \"\\u0246\\u0248\\u0248\\u0248\\u0248\\u0246\\u0246\\u0246\\362\\u0248\\u0248\\u0248\\362\"+
    \"\\u0246\\u0246\\u0246\\u0246\\u0248\\u0248\\u0248\\u0248\\u0246\\u0246\\u0246\\u0246\\u0248\"+
    \"\\u0248\\u0248\\u0248\\u0246\\u0246\\u0246\\362\\u0248\\u0248\\u0248\\362\\u024A\\u024A\"+
    \"\\u024A\\u024A\\u024C\\u024C\\u024C\\u024C\\u0246\\u0246\\u0246\\u0246\\u0248\\u0248\\u0248\"+
    \"\\u0248\\u024E\\u0250\\u0250\\u0252\\u0254\\u0256\\u0258\\362\\262\\262\\262\\262\\u025A\"+
    \"\\u025A\\u025A\\u025A\\262\\262\\262\\262\\u025A\\u025A\\u025A\\u025A\\262\\262\\262\\262\"+
    \"\\u025A\\u025A\\u025A\\u025A\\u0246\\262\\u025C\\262\\u0248\\u025E\\u0260\\u0262\\344\\262\"+
    \"\\u025C\\262\\u0264\\u0264\\u0260\\344\\u0246\\262\\362\\262\\u0248\\u0266\\u0268\\344\\u0246\"+
    \"\\262\\u026A\\262\\u0248\\u026C\\u026E\\344\\362\\262\\u025C\\262\\u0270\\u0272\\u0260\\u0274\"+
    \"\\u0276\\u0276\\u0276\\u0278\\u0276\\u027A\\u027C\\u027E\\u0280\\u0280\\u0280\\020\\u0282\"+
    \"\\u0284\\u0282\\u0284\\020\\020\\020\\020\\u0286\\u0288\\u0288\\u028A\\u028C\\u028C\\u028E\"+
    \"\\020\\u0290\\u0292\\020\\u0294\\u0296\\020\\u0298\\u029A\\020\\020\\020\\020\\020\\u029C\"+
    \"\\u0296\\020\\020\\020\\020\\u029E\\u027C\\u027C\\u02A0\\362\\362\\u027C\\u027C\\u027C\\u02A2\"+
    \"\\362\\110\\110\\110\\u02A4\\u02A6\\u02A8\\u02AA\\u02AA\\u02AA\\u02AA\\u02AA\\u02A4\\u02A6\"+
    \"\\u0226\\334\\334\\334\\334\\334\\334\\u02AC\\362\\072\\072\\072\\072\\072\\072\\072\\072\\072\"+
    \"\\072\\072\\072\\072\\u02AE\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\356\\356\\356\"+
    \"\\356\\356\\356\\u02B0\\u0130\\u02B2\\u0130\\u02B2\\356\\356\\356\\356\\356\\u0192\\362\\362\"+
    \"\\362\\362\\362\\362\\362\\u016A\\u02B4\\u016A\\u02B6\\u016A\\u02B8\\u0116\\210\\u0116\\u02BA\"+
    \"\\u02B6\\u016A\\u02BC\\u0116\\u0116\\u016A\\u016A\\u016A\\u02B4\\u02BE\\u02B4\\u020C\\u0116\"+
    \"\\u02C0\\u0116\\u02C2\\220\\224\\332\\u016A\\210\\u0116\\036\\u0162\\u02BC\\210\\210\\u02C4\"+
    \"\\u016A\\u02C6\\120\\120\\120\\120\\120\\120\\120\\120\\u02C8\\u02C8\\u02C8\\u02C8\\u02C8\"+
    \"\\u02C8\\u02CA\\u02CA\\u02CC\\u02CC\\u02CC\\u02CC\\u02CC\\u02CC\\u02CE\\u02CE\\u02D0\\u02D2\"+
    \"\\u02D4\\u02D0\\u02D6\\362\\362\\362\\u0162\\u0162\\u02D8\\u016A\\u016A\\u0162\\u016A\\u016A\"+
    \"\\u02D8\\u02C4\\u016A\\u02D8\\u016A\\u016A\\u016A\\u02D8\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u0162\\u016A\\u02D8\"+
    \"\\u02D8\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u02DA\\u02DC\\036\\u0162\"+
    \"\\u02DC\\u02DC\\u02DC\\u0162\\u02DA\\u02DE\\u02DA\\036\\u0162\\u02DC\\u02DC\\u02DA\\u02DC\"+
    \"\\036\\036\\036\\u0162\\u02DA\\u02DC\\u02DC\\u02DC\\u02DC\\u0162\\u0162\\u02DA\\u02DA\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\036\\u0162\\u0162\\u02DC\\u02DC\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u02DA\\036\\036\\u02DC\\u02DC\\u02DC\\u02DC\\u0162\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\"+
    \"\\036\\u02DA\\u02DC\\036\\u0162\\u0162\\036\\u0162\\u0162\\u0162\\u0162\\u02DC\\u0162\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\036\\u0162\\u0162\\u02DC\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u02DA\\u02DC\\u02DC\\u0162\\u02DC\\u0162\\u0162\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u0162\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u016A\\u016A\\u016A\\u016A\\u02DC\\u02DC\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u02DC\\u016A\\u016A\\u016A\\u02E0\"+
    \"\\u02E2\\u016A\\u016A\\u016A\\u016A\\u016A\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u02E4\\u02D8\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u02E6\\u016A\\u016A\\u02C4\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u0162\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u0162\\u0162\"+
    \"\\u0162\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\362\\362\\362\\362\"+
    \"\\362\\362\\u016A\\u016A\\u016A\\u01D6\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\u016A\\u016A\\u016A\\u016A\\u016A\\u01D6\\362\\362\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02E8\\u02EA\\u02EA\"+
    \"\\u02EA\\u02EA\\u02EA\\u02EA\\u02EA\\u02EA\\u02EA\\u02EA\\u02EC\\u02EC\\u02EC\\u02EC\\u02EC\"+
    \"\\u02EC\\u02EC\\u02EC\\u02EC\\u02EC\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u02EE\\u02EE\\u02EE\\u02EE\\u02EE\\u02EE\\u02EE\\u02EE\"+
    \"\\u02EE\\u02EE\\u02EE\\u02EE\\u02EE\\u02F0\\u02F0\\u02F0\\u02F0\\u02F0\\u02F0\\u02F0\\u02F0\"+
    \"\\u02F0\\u02F0\\u02F0\\u02F0\\u02F0\\u02F2\\u02F4\\u02F4\\u02F4\\u02F4\\u02F6\\u02F8\\u02F8\"+
    \"\\u02F8\\u02F8\\u02FA\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u02C4\\u016A\\u016A\\u016A\\u016A\\u02C4\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u0162\\u0162\\u0162\\u0162\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u02C4\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u02E4\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u02FC\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\022\"+
    \"\\022\\022\\022\\022\\022\\022\\u02FE\\u02FE\\u02FE\\u02FE\\u02FE\\u02E8\\u02E8\\u02E8\\u02E8\"+
    \"\\u02E8\\u0300\\u0300\\u0300\\u0300\\u0300\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\036\"+
    \"\\u02DA\\u0302\\u0304\\u02DC\\u02DA\\u02DC\\u0162\\u0162\\u02DA\\u02DC\\036\\u0162\\u0162\"+
    \"\\u02DC\\036\\u0162\\u02DC\\u02DC\\022\\022\\022\\022\\022\\u0162\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u02A6\\u0306\\u0306\\u0306\\u0306\\u0306\"+
    \"\\u0306\\u0306\\u0306\\u0306\\u0306\\u0304\\u02DA\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u0162\\u0162\\u0162\\u0162\\036\\u0162\\u0162\\u0162\\u02DC\"+
    \"\\u02DC\\u02DC\\u0162\\u02DA\\u0162\\u0162\\u02DC\\u02DC\\036\\u02DC\\u0162\\022\\022\\036\"+
    \"\\u0162\\u02DA\\u02DA\\u02DC\\u0162\\u02DC\\u0162\\u0162\\u0162\\u0162\\u0162\\u02DC\\u02DC\"+
    \"\\u02DC\\u0162\\022\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u02DC\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\036\\u02DC\\u02DC\\u0162\\036\\036\\u02DA\\u02DA\\u02DC\"+
    \"\\036\\u0162\\u0162\\u02DC\\u0162\\u0162\\u0162\\u02DC\\036\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u0162\\u02DA\\036\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u02DC\\u0162\\u0162\\u02DC\\u02DC\\u02DA\\036\\u02DA\\036\\u0162\\u02DA\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u0162\\u02DC\\u02DC\\u02DC\\u02DC\\u02DA\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\"+
    \"\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\u02DC\\036\\u0162\\u0162\\036\\036\\u0162\\u02DC\\u02DC\"+
    \"\\036\\u0162\\u0162\\u02DC\\036\\u0162\\u02DA\\u0162\\u02DA\\u02DC\\u02DC\\u02DA\\u0162\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u0162\\u0162\\u0162\\u0162\\u0162\"+
    \"\\u0162\\u0162\\u0162\\u0162\\u0162\\u02D8\\u02C4\\u0162\\u0162\\u0308\\362\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\362\\362\\362\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\"+
    \"\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\\u0138\"+
    \"\\u0138\\u0138\\u013A\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\"+
    \"\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\\u0142\"+
    \"\\u030A\\140\\u020C\\252\\254\\146\\146\\u030C\\u020C\\u0244\\140\\144\\164\\210\\210\\334\"+
    \"\\u020C\\140\\140\\u030E\\u016A\\u016A\\u0310\\146\\u0312\\356\\140\\362\\362\\u0314\\020\"+
    \"\\u0316\\020\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\\262\"+
    \"\\262\\262\\262\\u0318\\362\\362\\u0318\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\362\\362\\362\\u013C\\u01E4\\362\\362\\362\\362\\362\\362\\u014C\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\\362\\362\\362\\362\\224\\224\\224\\u01BC\\224\"+
    \"\\224\\224\\u01BC\\224\\224\\224\\u01BC\\224\\224\\224\\u01BC\\u014E\\u014E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\u014E\\020\"+
    \"\\u031A\\u031A\\020\\u0290\\u0292\\u031A\\020\\020\\020\\020\\u031C\\020\\u022E\\u031A\\020\"+
    \"\\u031A\\022\\022\\022\\022\\020\\020\\u031E\\020\\020\\020\\020\\020\\u0280\\362\\362\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u02FC\"+
    \"\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\362\"+
    \"\\362\\362\\362\\362\\362\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\"+
    \"\\u016A\\u016A\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\u016A\\u016A\"+
    \"\\u016A\\u016A\\u016A\\u016A\\362\\362\\012\\020\\u0320\\u0322\\022\\022\\022\\022\\022\\u016A\"+
    \"\\022\\022\\022\\022\\u0324\\u0326\\u0328\\u032A\\u032A\\u032A\\u032A\\356\\356\\u01F6\\u032C\"+
    \"\\342\\342\\u016A\\u032E\\u0330\\u0332\\u016A\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\u01BC\\u014C\\u0334\\u0336\\u0212\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\u0332\\342\\u0212\\362\\362\\u01B8\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\362\\u01B8\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\\u01F0\\u0338\\u0338\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\u01BC\\362\\362\\u016A\\u016A\\362\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u02E4\\u01D6\\u033A\\u033A\\u033A\\u033A\\u033A\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u033C\"+
    \"\\u033E\\u01C2\\u01C2\\u0340\\u0342\\u0342\\u0342\\u0342\\u0342\\120\\120\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u016A\"+
    \"\\u02E6\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u0344\\120\\120\\120\\120\"+
    \"\\120\\120\\120\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u016A\\u016A\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01FA\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u02E4\\u016A\\u02E6\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u016A\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\\u01F0\"+
    \"\\u01F0\\u01F0\\u01F0\\u02E4\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0346\\u0346\\u0346\\362\\362\\362\\362\\362\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0348\\362\\362\\362\\362\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\u0234\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\"+
    \"\\362\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u016A\\u01D6\"+
    \"\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u034A\"+
    \"\\020\\224\\224\\224\\224\\224\\224\\224\\224\\u01F4\\u01F4\\u01F4\\u01F4\\u01F4\\224\\362\"+
    \"\\362\\362\\362\\362\\362\\362\\362\\362\\362\\140\\140\\140\\140\\140\\140\\140\\u01B2\\u0130\"+
    \"\\u034C\\u014E\\u014E\\u014E\\u014E\\356\\u031E\\140\\140\\140\\140\\140\\140\\140\\140\\140\"+
    \"\\140\\140\\140\\362\\362\\362\\u01BA\\224\\224\\224\\u034E\\u034E\\u034E\\u034E\\u0350\\356\"+
    \"\\u013E\\u013E\\u013E\\362\\362\\362\\362\\344\\344\\344\\344\\344\\344\\344\\344\\344\\344\"+
    \"\\344\\u0352\\346\\346\\346\\346\\344\\140\\140\\140\\140\\140\\140\\140\\210\\140\\140\\140\"+
    \"\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\140\\u023C\\210\\210\\210\\144\\146\"+
    \"\\u030C\\140\\140\\140\\140\\140\\u0354\\u0356\\u030C\\u0358\\140\\140\\362\\362\\362\\362\"+
    \"\\362\\362\\140\\140\\140\\140\\140\\u035A\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\334\\220\\224\\224\\224\\u01AA\"+
    \"\\224\\u01AA\\224\\u01B2\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01FE\\u01AE\"+
    \"\\u01A8\\u016A\\u016A\\362\\362\\u01C2\\u01C2\\u01C2\\u01F0\\u035C\\362\\362\\362\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\020\\020\\362\\362\\362\\362\\u01AC\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u01AC\\u0192\\362\\362\"+
    \"\\362\\362\\u013E\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\\362\\362\\356\\356\\356\\356\\356\"+
    \"\\356\\356\\356\\356\\224\\224\\224\\u013E\\u0220\\362\\362\\u01F4\\u01F4\\u01F4\\u01F4\\u01F4\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u014E\\u014E\\u01A0\"+
    \"\\356\\u013E\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01C8\\u014E\\u014E\\u014E\"+
    \"\\u014E\\u014E\\u0202\\362\\362\\362\\362\\362\\u0146\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\u01B2\\u01AC\\u014E\\u014E\\u01AC\\u01A8\\u01AC\\u035E\\u013E\\u013E\\u013E\\u013E\"+
    \"\\u013E\\u013E\\u013C\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\\362\\u013E\\224\\224\\224\"+
    \"\\224\\u01C8\\u014E\\u014E\\u01A8\\u01AE\\u01A8\\u01AE\\u01A6\\362\\362\\362\\362\\224\\u01C8\"+
    \"\\224\\224\\224\\224\\u01A8\\362\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\\u013E\\u013E\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\u0212\\224\\224\\u01EE\\u01F0\\u020A\\362\\362\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\u01CE\\u014E\\u01CE\\u01C8\\u01CE\\224\\224\\u01A0\\u01B2\"+
    \"\\u01BC\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\u01B8\\u0234\\u013E\\224\\224\"+
    \"\\224\\224\\224\\u01FE\\u014E\\u01AC\\u013E\\u0234\\u0360\\u0192\\362\\362\\362\\362\\u01B8\"+
    \"\\224\\224\\u01BC\\u01B8\\224\\224\\u01BC\\u01B8\\224\\224\\u01BC\\362\\362\\362\\362\\224\"+
    \"\\224\\224\\u01BC\\224\\224\\224\\u01BC\\362\\362\\362\\362\\362\\362\\362\\362\\224\\u01FE\"+
    \"\\u01AE\\u01AC\\u01A8\\u0362\\u0208\\362\\u01EA\\u01EA\\u01EA\\u01EA\\u01EA\\362\\362\\362\"+
    \"\\224\\224\\362\\362\\362\\362\\362\\362\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\u01BC\\362\\u01B8\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\362\\362\\u0364\\u0364\\u0364\\u0364\\u0364\"+
    \"\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0364\\u0366\\u0366\"+
    \"\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\\u0366\"+
    \"\\u0366\\u0346\\u0346\\u0346\\u0346\\u0346\\u0368\\u0346\\u0346\\u0346\\u036A\\u0346\\u0346\"+
    \"\\u036C\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u036E\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0370\\u0372\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0374\\u0346\"+
    \"\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\362\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\\u0346\"+
    \"\\u0346\\u0346\\u0346\\362\\362\\362\\262\\262\\262\\u025C\\362\\362\\362\\362\\362\\u0318\"+
    \"\\262\\262\\362\\362\\u0376\\u0378\\u0156\\u0156\\u0156\\u0156\\u037A\\u0156\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0156\\u0158\\u0156\\u0156\\u0158\\u0158\\u0156\\u0376\\u0158\\u0156\\u0156\"+
    \"\\u0156\\u0156\\u0156\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u037C\\u037C\\u037C\\u037C\\u037C\\u037C\"+
    \"\\u037C\\u037C\\362\\362\\362\\362\\362\\362\\362\\362\\u0194\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u037E\\362\\362\\362\\362\\362\\362\\362\\362\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\362\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\\362\"+
    \"\\362\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0380\\362\\356\\356\\356\\356\\356\\356\"+
    \"\\356\\356\\020\\020\\020\\u0382\\u0384\\362\\362\\362\\356\\356\\356\\u0192\\362\\362\\362\"+
    \"\\362\\u031C\\u0386\\u0388\\u038A\\u038A\\u038A\\u038A\\u038A\\u038A\\u038A\\u0384\\u0382\"+
    \"\\u0384\\020\\u0294\\u038C\\034\\u038E\\u0390\\020\\u0392\\u0306\\u0306\\u0394\\020\\u0396\"+
    \"\\u02DC\\u0308\\u0398\\u028E\\362\\362\\u0170\\u0170\\u01A4\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\\u0170\"+
    \"\\u0170\\u0170\\u01A4\\u039A\\u0314\\014\\016\\020\\022\\024\\026\\030\\032\\032\\032\\032\"+
    \"\\032\\034\\036\\040\\054\\056\\056\\056\\056\\056\\056\\056\\056\\056\\056\\056\\056\\060\\062\"+
    \"\\u02A6\\u029A\\022\\020\\224\\224\\224\\224\\224\\u0212\\224\\224\\224\\224\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\342\\224\\224\\224\"+
    \"\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\224\\u01BC\\362\\224\\224\\224\\362\"+
    \"\\224\\224\\224\\362\\224\\224\\224\\362\\224\\u01BC\\362\\072\\u039C\\u01D4\\u02AE\\u02C4\"+
    \"\\u0162\\u02D8\\u01D6\\362\\362\\362\\362\\u039E\\u03A0\\u016A\\362\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Y table has 5664 entries for a total of 11328 bytes.
"
      end

      attribute 1663618 "A"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int[930]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The A table has 930 entries for a total of 3720 bytes.
"
      end

      classrelation 3148162 // A_DATA (<unidirectional association>)
	relation 3148162 --->
	  a role_name "A_DATA" init_value "
    \"\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u5800\\u400F\\u5000\\u400F\\u5800\\u400F\\u6000\"+
    \"\\u400F\\u5000\\u400F\\u5000\\u400F\\u5000\\u400F\\u6000\\u400C\\u6800\\030\\u6800\\030\"+
    \"\\u2800\\030\\u2800\\u601A\\u2800\\030\\u6800\\030\\u6800\\030\\uE800\\025\\uE800\\026\\u6800\"+
    \"\\030\\u2000\\031\\u3800\\030\\u2000\\024\\u3800\\030\\u3800\\030\\u1800\\u3609\\u1800\\u3609\"+
    \"\\u3800\\030\\u6800\\030\\uE800\\031\\u6800\\031\\uE800\\031\\u6800\\030\\u6800\\030\\202\"+
    \"\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\uE800\\025\\u6800\\030\\uE800\\026\\u6800\\033\"+
    \"\\u6800\\u5017\\u6800\\033\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\uE800\\025\\u6800\"+
    \"\\031\\uE800\\026\\u6800\\031\\u4800\\u100F\\u4800\\u100F\\u5000\\u100F\\u3800\\014\\u6800\"+
    \"\\030\\u2800\\u601A\\u2800\\u601A\\u6800\\034\\u6800\\030\\u6800\\033\\u6800\\034\\000\\u7005\"+
    \"\\uE800\\035\\u6800\\031\\u4800\\u1010\\u6800\\034\\u6800\\033\\u2800\\034\\u2800\\031\\u1800\"+
    \"\\u060B\\u1800\\u060B\\u6800\\033\\u07FD\\u7002\\u6800\\033\\u1800\\u050B\\000\\u7005\\uE800\"+
    \"\\036\\u6800\\u080B\\u6800\\u080B\\u6800\\u080B\\u6800\\030\\202\\u7001\\202\\u7001\\202\"+
    \"\\u7001\\u6800\\031\\202\\u7001\\u07FD\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\u6800\"+
    \"\\031\\201\\u7002\\u061D\\u7002\\006\\u7001\\005\\u7002\\u07FF\\uF001\\u03A1\\u7002\\000\"+
    \"\\u7002\\006\\u7001\\005\\u7002\\006\\u7001\\005\\u7002\\u07FD\\u7002\\u061E\\u7001\\006\"+
    \"\\u7001\\u04F5\\u7002\\u034A\\u7001\\u033A\\u7001\\006\\u7001\\005\\u7002\\u0336\\u7001\"+
    \"\\u0336\\u7001\\006\\u7001\\005\\u7002\\000\\u7002\\u013E\\u7001\\u032A\\u7001\\u032E\\u7001\"+
    \"\\006\\u7001\\u033E\\u7001\\u067D\\u7002\\u034E\\u7001\\u0346\\u7001\\u0575\\u7002\\000\"+
    \"\\u7002\\u034E\\u7001\\u0356\\u7001\\u05F9\\u7002\\u035A\\u7001\\u036A\\u7001\\006\\u7001\"+
    \"\\005\\u7002\\u036A\\u7001\\000\\u7002\\000\\u7002\\005\\u7002\\u0366\\u7001\\u0366\\u7001\"+
    \"\\006\\u7001\\005\\u7002\\u036E\\u7001\\000\\u7002\\000\\u7005\\000\\u7002\\u0721\\u7002\"+
    \"\\000\\u7005\\000\\u7005\\012\\uF001\\007\\uF003\\011\\uF002\\012\\uF001\\007\\uF003\\011\"+
    \"\\uF002\\011\\uF002\\006\\u7001\\005\\u7002\\u013D\\u7002\\u07FD\\u7002\\012\\uF001\\u067E\"+
    \"\\u7001\\u0722\\u7001\\u05FA\\u7001\\000\\u7002\\u07FE\\u7001\\006\\u7001\\005\\u7002\\u0576\"+
    \"\\u7001\\u07FE\\u7001\\u07FD\\u7002\\u07FD\\u7002\\006\\u7001\\005\\u7002\\u04F6\\u7001\"+
    \"\\u0116\\u7001\\u011E\\u7001\\u07FD\\u7002\\u07FD\\u7002\\u07FD\\u7002\\u0349\\u7002\\u0339\"+
    \"\\u7002\\000\\u7002\\u0335\\u7002\\u0335\\u7002\\000\\u7002\\u0329\\u7002\\000\\u7002\\u032D\"+
    \"\\u7002\\u0335\\u7002\\000\\u7002\\000\\u7002\\u033D\\u7002\\000\\u7002\\u07FD\\u7002\\u07FD\"+
    \"\\u7002\\000\\u7002\\u0345\\u7002\\u034D\\u7002\\000\\u7002\\u034D\\u7002\\u0355\\u7002\"+
    \"\\000\\u7002\\000\\u7002\\u0359\\u7002\\u0369\\u7002\\000\\u7002\\000\\u7002\\u0369\\u7002\"+
    \"\\u0369\\u7002\\u0115\\u7002\\u0365\\u7002\\u0365\\u7002\\u011D\\u7002\\000\\u7002\\u036D\"+
    \"\\u7002\\000\\u7002\\000\\u7005\\000\\u7002\\000\\u7004\\000\\u7004\\000\\u7004\\u6800\\u7004\"+
    \"\\u6800\\u7004\\000\\u7004\\000\\u7004\\000\\u7004\\u6800\\033\\u6800\\033\\u6800\\u7004\"+
    \"\\u6800\\u7004\\000\\u7004\\u6800\\033\\u6800\\u7004\\u6800\\033\\000\\u7004\\u6800\\033\"+
    \"\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\u46B1\\u3006\\u7800\\000\\u7800\\000\\000\\u7004\"+
    \"\\u05F9\\u7002\\u05F9\\u7002\\u05F9\\u7002\\u6800\\030\\u7800\\000\\232\\u7001\\u6800\\030\"+
    \"\\226\\u7001\\226\\u7001\\226\\u7001\\u7800\\000\\u0102\\u7001\\u7800\\000\\376\\u7001\\376\"+
    \"\\u7001\\u07FD\\u7002\\202\\u7001\\u7800\\000\\202\\u7001\\231\\u7002\\225\\u7002\\225\\u7002\"+
    \"\\225\\u7002\\u07FD\\u7002\\201\\u7002\\175\\u7002\\201\\u7002\\u0101\\u7002\\375\\u7002\"+
    \"\\375\\u7002\\042\\u7001\\371\\u7002\\345\\u7002\\000\\u7001\\000\\u7001\\000\\u7001\\275\"+
    \"\\u7002\\331\\u7002\\041\\u7002\\u0159\\u7002\\u0141\\u7002\\u07E5\\u7002\\000\\u7002\\u0712\"+
    \"\\u7001\\u0181\\u7002\\u6800\\031\\006\\u7001\\005\\u7002\\u07E6\\u7001\\000\\u7002\\u05FA\"+
    \"\\u7001\\u05FA\\u7001\\u05FA\\u7001\\u0142\\u7001\\u0142\\u7001\\u0141\\u7002\\u0141\\u7002\"+
    \"\\000\\034\\u4000\\u3006\\u4000\\007\\u4000\\007\\076\\u7001\\006\\u7001\\005\\u7002\\075\"+
    \"\\u7002\\u7800\\000\\302\\u7001\\302\\u7001\\302\\u7001\\302\\u7001\\u7800\\000\\u7800\\000\"+
    \"\\000\\u7004\\000\\030\\000\\030\\u7800\\000\\301\\u7002\\301\\u7002\\301\\u7002\\301\\u7002\"+
    \"\\u07FD\\u7002\\u7800\\000\\000\\030\\u6800\\024\\u7800\\000\\u7800\\000\\u2800\\u601A\\u7800\"+
    \"\\000\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\u0800\\024\\u4000\\u3006\\u0800\\030\\u4000\"+
    \"\\u3006\\u4000\\u3006\\u0800\\030\\u0800\\u7005\\u0800\\u7005\\u0800\\u7005\\u7800\\000\"+
    \"\\u0800\\u7005\\u0800\\030\\u0800\\030\\u7800\\000\\u3000\\u1010\\u3000\\u1010\\u3000\\u1010\"+
    \"\\u7800\\000\\u6800\\031\\u6800\\031\\u1000\\031\\u2800\\030\\u2800\\030\\u1000\\u601A\\u3800\"+
    \"\\030\\u1000\\030\\u6800\\034\\u6800\\034\\u4000\\u3006\\u1000\\030\\u1000\\030\\u1000\\030\"+
    \"\\u1000\\u7005\\u1000\\u7005\\u1000\\u7004\\u1000\\u7005\\u1000\\u7005\\u4000\\u3006\\u4000\"+
    \"\\u3006\\u4000\\u3006\\u3000\\u3409\\u3000\\u3409\\u2800\\030\\u3000\\030\\u3000\\030\\u1000\"+
    \"\\030\\u4000\\u3006\\u1000\\u7005\\u1000\\030\\u1000\\u7005\\u4000\\u3006\\u3000\\u1010\"+
    \"\\u6800\\034\\u4000\\u3006\\u4000\\u3006\\u1000\\u7004\\u1000\\u7004\\u4000\\u3006\\u4000\"+
    \"\\u3006\\u6800\\034\\u1000\\u7005\\u1000\\034\\u1000\\034\\u1000\\u7005\\u7800\\000\\u1000\"+
    \"\\u1010\\u4000\\u3006\\u7800\\000\\u7800\\000\\u1000\\u7005\\u0800\\u3409\\u0800\\u3409\"+
    \"\\u0800\\u7005\\u4000\\u3006\\u0800\\u7004\\u0800\\u7004\\u0800\\u7004\\u7800\\000\\u0800\"+
    \"\\u7004\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\u0800\\030\\u0800\\030\\u1000\\u7005\"+
    \"\\u7800\\000\\u4000\\u3006\\u7800\\000\\u4000\\u3006\\000\\u3008\\u4000\\u3006\\000\\u7005\"+
    \"\\000\\u3008\\000\\u3008\\000\\u3008\\u4000\\u3006\\000\\u3008\\u4000\\u3006\\000\\u7005\"+
    \"\\u4000\\u3006\\000\\u3749\\000\\u3749\\000\\030\\000\\u7004\\u7800\\000\\000\\u7005\\u7800\"+
    \"\\000\\u4000\\u3006\\000\\u7005\\u7800\\000\\u7800\\000\\000\\u3008\\000\\u3008\\u7800\\000\"+
    \"\\000\\u080B\\000\\u080B\\000\\u080B\\000\\u06EB\\000\\034\\u2800\\u601A\\000\\u7005\\u4000\"+
    \"\\u3006\\000\\030\\u2800\\u601A\\000\\034\\000\\u7005\\u4000\\u3006\\000\\u7005\\000\\u074B\"+
    \"\\000\\u080B\\000\\u080B\\u6800\\034\\u6800\\034\\u2800\\u601A\\u6800\\034\\u7800\\000\\u6800\"+
    \"\\u050B\\u6800\\u050B\\u6800\\u04AB\\u6800\\u04AB\\u6800\\u04AB\\000\\034\\000\\u3008\\000\"+
    \"\\u3006\\000\\u3006\\000\\u3008\\u7800\\000\\000\\034\\000\\030\\u7800\\000\\000\\u7004\\u4000\"+
    \"\\u3006\\u4000\\u3006\\000\\030\\000\\u3609\\000\\u3609\\000\\u7004\\u7800\\000\\000\\u7005\"+
    \"\\000\\034\\000\\034\\000\\034\\000\\030\\000\\034\\000\\u3409\\000\\u3409\\000\\u3008\\000\"+
    \"\\u3008\\u4000\\u3006\\000\\034\\000\\034\\u7800\\000\\000\\034\\000\\030\\000\\u7005\\000\"+
    \"\\u3008\\u4000\\u3006\\000\\u3008\\000\\u3008\\000\\u3008\\000\\u3008\\000\\u7005\\u4000\"+
    \"\\u3006\\000\\u3008\\000\\u3008\\u4000\\u3006\\000\\u7005\\000\\u3008\\u07FE\\u7001\\u07FE\"+
    \"\\u7001\\u7800\\000\\u07FE\\u7001\\000\\u7005\\000\\030\\000\\u7004\\000\\u7005\\000\\030\"+
    \"\\000\\u070B\\000\\u070B\\000\\u070B\\000\\u070B\\000\\u042B\\000\\u054B\\000\\u080B\\000\"+
    \"\\u080B\\u7800\\000\\u6800\\024\\000\\u7005\\000\\030\\000\\u7005\\u6000\\u400C\\000\\u7005\"+
    \"\\000\\u7005\\uE800\\025\\uE800\\026\\u7800\\000\\000\\u746A\\000\\u746A\\000\\u746A\\u7800\"+
    \"\\000\\u6800\\u060B\\u6800\\u060B\\u6800\\024\\u6800\\030\\u6800\\030\\u4000\\u3006\\u6000\"+
    \"\\u400C\\u7800\\000\\000\\u7005\\000\\u7004\\000\\u3008\\000\\u7005\\000\\u04EB\\u7800\\000\"+
    \"\\u4000\\u3006\\000\\u3008\\000\\u7004\\000\\u7002\\000\\u7004\\u07FD\\u7002\\000\\u7002\"+
    \"\\000\\u7004\\u07FD\\u7002\\355\\u7002\\u07FE\\u7001\\000\\u7002\\u07E1\\u7002\\u07E1\\u7002\"+
    \"\\u07E2\\u7001\\u07E2\\u7001\\u07FD\\u7002\\u07E1\\u7002\\u7800\\000\\u07E2\\u7001\\u06D9\"+
    \"\\u7002\\u06D9\\u7002\\u06A9\\u7002\\u06A9\\u7002\\u0671\\u7002\\u0671\\u7002\\u0601\\u7002\"+
    \"\\u0601\\u7002\\u0641\\u7002\\u0641\\u7002\\u0609\\u7002\\u0609\\u7002\\u07FF\\uF003\\u07FF\"+
    \"\\uF003\\u07FD\\u7002\\u7800\\000\\u06DA\\u7001\\u06DA\\u7001\\u07FF\\uF003\\u6800\\033\"+
    \"\\u07FD\\u7002\\u6800\\033\\u06AA\\u7001\\u06AA\\u7001\\u0672\\u7001\\u0672\\u7001\\u7800\"+
    \"\\000\\u6800\\033\\u07FD\\u7002\\u07E5\\u7002\\u0642\\u7001\\u0642\\u7001\\u07E6\\u7001\"+
    \"\\u6800\\033\\u0602\\u7001\\u0602\\u7001\\u060A\\u7001\\u060A\\u7001\\u6800\\033\\u7800\"+
    \"\\000\\u6000\\u400C\\u6000\\u400C\\u6000\\u400C\\u6000\\014\\u6000\\u400C\\u4800\\u1010\"+
    \"\\u4800\\u1010\\u4800\\u1010\\000\\u1010\\u0800\\u1010\\u6800\\024\\u6800\\024\\u6800\\035\"+
    \"\\u6800\\036\\u6800\\025\\u6800\\035\\u6000\\u400D\\u5000\\u400E\\u7800\\u1010\\u7800\\u1010\"+
    \"\\u7800\\u1010\\u3800\\014\\u2800\\030\\u2800\\030\\u2800\\030\\u6800\\030\\u6800\\030\\uE800\"+
    \"\\035\\uE800\\036\\u6800\\030\\u6800\\030\\u6800\\u5017\\u6800\\u5017\\u6800\\030\\u3800\"+
    \"\\031\\uE800\\025\\uE800\\026\\u6800\\030\\u6800\\031\\u6800\\030\\u6800\\030\\u6000\\u400C\"+
    \"\\u4800\\u1010\\u7800\\000\\u1800\\u060B\\000\\u7004\\u2000\\031\\u2000\\031\\u6800\\031\"+
    \"\\uE800\\025\\uE800\\026\\000\\u7004\\u1800\\u040B\\u1800\\u040B\\000\\u7004\\u7800\\000\"+
    \"\\u2800\\u601A\\u7800\\000\\u4000\\u3006\\u4000\\007\\u4000\\007\\u4000\\u3006\\000\\u7001\"+
    \"\\u6800\\034\\u6800\\034\\000\\u7001\\000\\u7002\\000\\u7001\\000\\u7001\\000\\u7002\\u6800\"+
    \"\\031\\000\\u7001\\u07FE\\u7001\\u6800\\034\\u2800\\034\\000\\u7002\\162\\u7001\\000\\u7001\"+
    \"\\u6800\\034\\u6800\\031\\161\\u7002\\000\\034\\102\\u742A\\102\\u742A\\102\\u780A\\102\\u780A\"+
    \"\\101\\u762A\\101\\u762A\\101\\u780A\\101\\u780A\\000\\u780A\\000\\u780A\\000\\u780A\\006\"+
    \"\\u7001\\005\\u7002\\000\\u742A\\000\\u780A\\u6800\\u06EB\\u6800\\031\\u6800\\034\\u6800\"+
    \"\\031\\uE800\\031\\uE800\\031\\uE800\\031\\u2000\\031\\u2800\\031\\u6800\\034\\uE800\\025\"+
    \"\\uE800\\026\\u6800\\034\\000\\034\\u6800\\034\\u6800\\034\\000\\034\\u6800\\u042B\\u6800\"+
    \"\\u042B\\u6800\\u05AB\\u6800\\u05AB\\u1800\\u072B\\u1800\\u072B\\152\\034\\152\\034\\151\"+
    \"\\034\\151\\034\\u6800\\u06CB\\u6800\\u040B\\u6800\\u040B\\u6800\\u040B\\u6800\\u040B\\u6800\"+
    \"\\u058B\\u6800\\u058B\\u6800\\u058B\\u6800\\u058B\\u6800\\u042B\\u7800\\000\\u6800\\034\"+
    \"\\u6800\\u056B\\u6800\\u056B\\u6800\\u06EB\\u6800\\u06EB\\uE800\\031\\uE800\\025\\uE800\"+
    \"\\026\\u6800\\031\\uE800\\026\\uE800\\025\\u6800\\031\\u7800\\000\\301\\u7002\\u7800\\000\"+
    \"\\005\\u7002\\u07FE\\u7001\\000\\u7002\\u6800\\034\\u6800\\034\\006\\u7001\\005\\u7002\\u4000\"+
    \"\\u3006\\u7800\\000\\u6800\\030\\u6800\\030\\u6800\\u080B\\u7800\\000\\u07FD\\u7002\\uE800\"+
    \"\\035\\uE800\\036\\u6800\\030\\u6800\\024\\u6800\\030\\u6800\\u7004\\u6800\\034\\000\\u7004\"+
    \"\\000\\u7005\\000\\u772A\\u6800\\024\\u6800\\025\\u6800\\026\\u6800\\026\\u6800\\034\\000\"+
    \"\\u740A\\000\\u740A\\000\\u740A\\u6800\\024\\000\\u7004\\000\\u764A\\000\\u776A\\000\\u748A\"+
    \"\\000\\u7004\\000\\u7005\\u6800\\030\\u4000\\u3006\\u6800\\033\\u6800\\033\\000\\u7004\\000\"+
    \"\\u05EB\\000\\u05EB\\000\\u042B\\000\\u042B\\000\\u044B\\000\\u056B\\000\\u068B\\000\\u080B\"+
    \"\\u6800\\034\\u6800\\u048B\\u6800\\u048B\\u6800\\u048B\\000\\034\\u6800\\u080B\\000\\u7005\"+
    \"\\000\\u7005\\000\\u7005\\u7800\\000\\000\\u7004\\u6800\\030\\u4000\\007\\u6800\\030\\000\"+
    \"\\u776A\\000\\u776A\\000\\u776A\\000\\u762A\\u6800\\033\\u6800\\u7004\\u6800\\u7004\\000\"+
    \"\\033\\000\\033\\006\\u7001\\000\\u7002\\u7800\\000\\u07FE\\u7001\\u7800\\000\\u2800\\u601A\"+
    \"\\u2800\\034\\000\\u3008\\000\\030\\000\\u7004\\000\\u3008\\000\\u3008\\000\\030\\000\\023\"+
    \"\\000\\023\\000\\022\\000\\022\\000\\u7005\\000\\u7705\\000\\u7005\\000\\u76E5\\000\\u7545\"+
    \"\\000\\u7005\\000\\u75C5\\000\\u7005\\000\\u7005\\000\\u76A5\\000\\u7005\\000\\u7665\\000\"+
    \"\\u7005\\000\\u75A5\\u7800\\000\\u0800\\u7005\\u4000\\u3006\\u0800\\u7005\\u0800\\u7005\"+
    \"\\u2000\\031\\u1000\\033\\u1000\\033\\u6800\\025\\u6800\\026\\u1000\\u601A\\u6800\\034\\u6800\"+
    \"\\030\\u6800\\025\\u6800\\026\\u6800\\030\\u6800\\024\\u6800\\u5017\\u6800\\u5017\\u6800\"+
    \"\\025\\u6800\\026\\u6800\\025\\u6800\\u5017\\u6800\\u5017\\u3800\\030\\u7800\\000\\u6800\"+
    \"\\030\\u3800\\030\\u6800\\024\\uE800\\025\\uE800\\026\\u2800\\030\\u2000\\031\\u2000\\024\"+
    \"\\u6800\\030\\u2800\\u601A\\u7800\\000\\u4800\\u1010\\u6800\\031\\u6800\\033\\u7800\\000\"+
    \"\\u6800\\u1010\\u6800\\u1010\\u6800\\u1010\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148162 // A_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1663746 "B"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\001\\001\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\001\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\004\\000\\004\\000\\004\\004\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\000\\004\\000\\004\\000\\000\\000\\000\"+
    \"\\000\\000\\004\\000\\000\\000\\004\\000\\000\\000\\004\\000\\000\\004\\004\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\004\\000\"+
    \"\\000\\000\\000\\000\\004\\000\\004\\004\\000\\000\\004\\004\\004\\004\\004\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\004\\004\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\004\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\004\\004\\004\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\000\"+
    \"\\004\\004\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\"+
    \"\\000\\000\\001\\000\\001\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\001\\000\\000\"+
    \"\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\002\\002\\002\\002\\001\\001\\001\\001\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\006\\006\\005\\005\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\020\\020\\000\\000\\000\\000\\000\\020\\020\\020\\000\\000\\020\\020\\020\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\020\\020\\020\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\004\\000\\000\\000\\000\\000\\020\\020\"+
    \"\\020\\020\\020\\020\\020\\020\\020\\020\\020\\020\\020\\020\\000\\000\\004\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The B table has 930 entries for a total of 1860 bytes.
"
      end

      extra_member 156546 "initialization"
	
	cpp "" ""
	java "  static {
            charMap = new char[][][] {
        { {'\\u00DF'}, {'\\u0053', '\\u0053', } },
        { {'\\u0130'}, {'\\u0130', } },
        { {'\\u0149'}, {'\\u02BC', '\\u004E', } },
        { {'\\u01F0'}, {'\\u004A', '\\u030C', } },
        { {'\\u0390'}, {'\\u0399', '\\u0308', '\\u0301', } },
        { {'\\u03B0'}, {'\\u03A5', '\\u0308', '\\u0301', } },
        { {'\\u0587'}, {'\\u0535', '\\u0552', } },
        { {'\\u1E96'}, {'\\u0048', '\\u0331', } },
        { {'\\u1E97'}, {'\\u0054', '\\u0308', } },
        { {'\\u1E98'}, {'\\u0057', '\\u030A', } },
        { {'\\u1E99'}, {'\\u0059', '\\u030A', } },
        { {'\\u1E9A'}, {'\\u0041', '\\u02BE', } },
        { {'\\u1F50'}, {'\\u03A5', '\\u0313', } },
        { {'\\u1F52'}, {'\\u03A5', '\\u0313', '\\u0300', } },
        { {'\\u1F54'}, {'\\u03A5', '\\u0313', '\\u0301', } },
        { {'\\u1F56'}, {'\\u03A5', '\\u0313', '\\u0342', } },
        { {'\\u1F80'}, {'\\u1F08', '\\u0399', } },
        { {'\\u1F81'}, {'\\u1F09', '\\u0399', } },
        { {'\\u1F82'}, {'\\u1F0A', '\\u0399', } },
        { {'\\u1F83'}, {'\\u1F0B', '\\u0399', } },
        { {'\\u1F84'}, {'\\u1F0C', '\\u0399', } },
        { {'\\u1F85'}, {'\\u1F0D', '\\u0399', } },
        { {'\\u1F86'}, {'\\u1F0E', '\\u0399', } },
        { {'\\u1F87'}, {'\\u1F0F', '\\u0399', } },
        { {'\\u1F88'}, {'\\u1F08', '\\u0399', } },
        { {'\\u1F89'}, {'\\u1F09', '\\u0399', } },
        { {'\\u1F8A'}, {'\\u1F0A', '\\u0399', } },
        { {'\\u1F8B'}, {'\\u1F0B', '\\u0399', } },
        { {'\\u1F8C'}, {'\\u1F0C', '\\u0399', } },
        { {'\\u1F8D'}, {'\\u1F0D', '\\u0399', } },
        { {'\\u1F8E'}, {'\\u1F0E', '\\u0399', } },
        { {'\\u1F8F'}, {'\\u1F0F', '\\u0399', } },
        { {'\\u1F90'}, {'\\u1F28', '\\u0399', } },
        { {'\\u1F91'}, {'\\u1F29', '\\u0399', } },
        { {'\\u1F92'}, {'\\u1F2A', '\\u0399', } },
        { {'\\u1F93'}, {'\\u1F2B', '\\u0399', } },
        { {'\\u1F94'}, {'\\u1F2C', '\\u0399', } },
        { {'\\u1F95'}, {'\\u1F2D', '\\u0399', } },
        { {'\\u1F96'}, {'\\u1F2E', '\\u0399', } },
        { {'\\u1F97'}, {'\\u1F2F', '\\u0399', } },
        { {'\\u1F98'}, {'\\u1F28', '\\u0399', } },
        { {'\\u1F99'}, {'\\u1F29', '\\u0399', } },
        { {'\\u1F9A'}, {'\\u1F2A', '\\u0399', } },
        { {'\\u1F9B'}, {'\\u1F2B', '\\u0399', } },
        { {'\\u1F9C'}, {'\\u1F2C', '\\u0399', } },
        { {'\\u1F9D'}, {'\\u1F2D', '\\u0399', } },
        { {'\\u1F9E'}, {'\\u1F2E', '\\u0399', } },
        { {'\\u1F9F'}, {'\\u1F2F', '\\u0399', } },
        { {'\\u1FA0'}, {'\\u1F68', '\\u0399', } },
        { {'\\u1FA1'}, {'\\u1F69', '\\u0399', } },
        { {'\\u1FA2'}, {'\\u1F6A', '\\u0399', } },
        { {'\\u1FA3'}, {'\\u1F6B', '\\u0399', } },
        { {'\\u1FA4'}, {'\\u1F6C', '\\u0399', } },
        { {'\\u1FA5'}, {'\\u1F6D', '\\u0399', } },
        { {'\\u1FA6'}, {'\\u1F6E', '\\u0399', } },
        { {'\\u1FA7'}, {'\\u1F6F', '\\u0399', } },
        { {'\\u1FA8'}, {'\\u1F68', '\\u0399', } },
        { {'\\u1FA9'}, {'\\u1F69', '\\u0399', } },
        { {'\\u1FAA'}, {'\\u1F6A', '\\u0399', } },
        { {'\\u1FAB'}, {'\\u1F6B', '\\u0399', } },
        { {'\\u1FAC'}, {'\\u1F6C', '\\u0399', } },
        { {'\\u1FAD'}, {'\\u1F6D', '\\u0399', } },
        { {'\\u1FAE'}, {'\\u1F6E', '\\u0399', } },
        { {'\\u1FAF'}, {'\\u1F6F', '\\u0399', } },
        { {'\\u1FB2'}, {'\\u1FBA', '\\u0399', } },
        { {'\\u1FB3'}, {'\\u0391', '\\u0399', } },
        { {'\\u1FB4'}, {'\\u0386', '\\u0399', } },
        { {'\\u1FB6'}, {'\\u0391', '\\u0342', } },
        { {'\\u1FB7'}, {'\\u0391', '\\u0342', '\\u0399', } },
        { {'\\u1FBC'}, {'\\u0391', '\\u0399', } },
        { {'\\u1FC2'}, {'\\u1FCA', '\\u0399', } },
        { {'\\u1FC3'}, {'\\u0397', '\\u0399', } },
        { {'\\u1FC4'}, {'\\u0389', '\\u0399', } },
        { {'\\u1FC6'}, {'\\u0397', '\\u0342', } },
        { {'\\u1FC7'}, {'\\u0397', '\\u0342', '\\u0399', } },
        { {'\\u1FCC'}, {'\\u0397', '\\u0399', } },
        { {'\\u1FD2'}, {'\\u0399', '\\u0308', '\\u0300', } },
        { {'\\u1FD3'}, {'\\u0399', '\\u0308', '\\u0301', } },
        { {'\\u1FD6'}, {'\\u0399', '\\u0342', } },
        { {'\\u1FD7'}, {'\\u0399', '\\u0308', '\\u0342', } },
        { {'\\u1FE2'}, {'\\u03A5', '\\u0308', '\\u0300', } },
        { {'\\u1FE3'}, {'\\u03A5', '\\u0308', '\\u0301', } },
        { {'\\u1FE4'}, {'\\u03A1', '\\u0313', } },
        { {'\\u1FE6'}, {'\\u03A5', '\\u0342', } },
        { {'\\u1FE7'}, {'\\u03A5', '\\u0308', '\\u0342', } },
        { {'\\u1FF2'}, {'\\u1FFA', '\\u0399', } },
        { {'\\u1FF3'}, {'\\u03A9', '\\u0399', } },
        { {'\\u1FF4'}, {'\\u038F', '\\u0399', } },
        { {'\\u1FF6'}, {'\\u03A9', '\\u0342', } },
        { {'\\u1FF7'}, {'\\u03A9', '\\u0342', '\\u0399', } },
        { {'\\u1FFC'}, {'\\u03A9', '\\u0399', } },
        { {'\\uFB00'}, {'\\u0046', '\\u0046', } },
        { {'\\uFB01'}, {'\\u0046', '\\u0049', } },
        { {'\\uFB02'}, {'\\u0046', '\\u004C', } },
        { {'\\uFB03'}, {'\\u0046', '\\u0046', '\\u0049', } },
        { {'\\uFB04'}, {'\\u0046', '\\u0046', '\\u004C', } },
        { {'\\uFB05'}, {'\\u0053', '\\u0054', } },
        { {'\\uFB06'}, {'\\u0053', '\\u0054', } },
        { {'\\uFB13'}, {'\\u0544', '\\u0546', } },
        { {'\\uFB14'}, {'\\u0544', '\\u0535', } },
        { {'\\uFB15'}, {'\\u0544', '\\u053B', } },
        { {'\\uFB16'}, {'\\u054E', '\\u0546', } },
        { {'\\uFB17'}, {'\\u0544', '\\u053D', } },
    };
        { // THIS CODE WAS AUTOMATICALLY CREATED BY GenerateCharacter:
            char[] data = A_DATA.toCharArray();
            assert (data.length == (930 * 2));
            int i = 0, j = 0;
            while (i < (930 * 2)) {
                int entry = data[i++] << 16;
                A[j++] = entry | data[i++];
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 929922 "CharacterData01"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables once found in
 java.lang.Character. 
"
      classrelation 3148290 // <generalisation>
	relation 3148290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3148290 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6969474 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character properties are currently encoded into 32 bits in the following manner:
1 bit   mirrored property
4 bits  directionality property
9 bits  signed offset used for converting case
1 bit   if 1, adding the signed offset converts the character to lowercase
1 bit   if 1, subtracting the signed offset converts the character to uppercase
1 bit   if 1, this character has a titlecase equivalent (possibly itself)
3 bits  0  may not be part of an identifier
1  ignorable control; may continue a Unicode identifier or Java identifier
2  may continue a Java identifier but not a Unicode identifier (unused)
3  may continue a Unicode identifier or Java identifier
4  is a Java whitespace character
5  may start or continue a Java identifier;
may continue but not start a Unicode identifier (underscores)
6  may start or continue a Java identifier but not a Unicode identifier ($)
7  may start or continue a Unicode identifier or Java identifier
Thus:
5, 6, 7 may start a Java identifier
1, 2, 3, 5, 6, 7 may continue a Java identifier
7 may start a Unicode identifier
1, 3, 5, 7 may continue a Unicode identifier
1 is ignorable within an identifier
4 is Java whitespace
2 bits  0  this character has no numeric property
1  adding the digit offset to the character code and then
masking with 0x1F will produce the desired numeric value
2  this character has a \"strange\" numeric value
3  a Java supradecimal digit: adding the digit offset to the
character code, then masking with 0x1F, then adding 10
will produce the desired numeric value
5 bits  digit offset
5 bits  character type

The encoding of character properties is subject to change at any time.
"
      end

      operation 6969602 "getPropertiesEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6969730 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6969858 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6969986 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970114 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970242 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970370 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970498 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970626 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970754 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6970882 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971010 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971138 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971266 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971394 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971522 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971650 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971778 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6971906 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3148418 // instance (<unidirectional association>)
	relation 3148418 --->
	  a role_name "instance" init_value " new CharacterData01()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148418 // instance (<unidirectional association>)
	  b parent class_ref 929666 // CharacterData
      end

      operation 6972034 "CharacterData01"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1663874 "X"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\001\\002\\003\\004\\004\\004\\005\\006\\007\\010\\011\\012\\003\\013\\014\\003\\003\\003\"+
    \"\\003\\015\\004\\016\\003\\017\\020\\021\\003\\022\\004\\023\\003\\024\\025\\026\\004\\027\\030\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\031\\032\\033\\003\\003\\003\\003\\003\\034\\035\\003\\003\"+
    \"\\036\\037\\003\\003\\040\\041\\042\\043\\003\\003\\003\\003\\036\\044\\045\\046\\003\\003\\003\"+
    \"\\003\\036\\036\\047\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\050\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\051\\052\\053\\054\\055\"+
    \"\\056\\057\\060\\061\\062\\063\\003\\064\\065\\066\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\004\\067\\030\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\"+
    \"\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\070\\003\"+
    \"\\003\\003\\003\\071\\072\\073\\074\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\"+
    \"\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\070\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\004\\004\\004\\004\"+
    \"\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\075\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\004\\004\\076\\077\\100\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\101\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\102\\102\\102\\102\\102\\102\\102\\103\"+
    \"\\102\\104\\102\\105\\106\\107\\110\\003\\111\\111\\112\\003\\003\\003\\003\\003\\111\\111\\113\"+
    \"\\114\\003\\003\\003\\003\\115\\116\\117\\120\\121\\122\\123\\124\\125\\126\\127\\130\\131\\115\"+
    \"\\116\\132\\120\\133\\134\\135\\124\\136\\137\\140\\141\\142\\143\\144\\145\\146\\147\\150\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\151\\152\\153\\154\\155\\156\\003\\157\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\111\\160\\111\\111\\161\\162\\163\\003\\164\\165\\102\\166\\167\\003\\003\\170\\171\\167\"+
    \"\\172\\003\\003\\003\\003\\003\\111\\173\\111\\174\\161\\111\\175\\176\\111\\177\\200\\111\\111\"+
    \"\\111\\111\\201\\111\\202\\203\\204\\003\\003\\003\\205\\111\\111\\206\\003\\111\\111\\207\\003\"+
    \"\\111\\111\\111\\161\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following tables and code generated using:
 java GenerateCharacter -plane 1 -template /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/characterdata/CharacterData01.java.template -spec /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/UnicodeData.txt -specialcasing /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/SpecialCasing.txt -proplist /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/PropList.txt -o /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/build/macosx-x86_64/jdk/gensrc/java/lang/CharacterData01.java -string -usecharforbyte 11 4 1
 The X table has 2048 entries for a total of 4096 bytes.
"
      end

      attribute 1664002 "Y"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\002\\000\\000\\000\\000\\000\\000\\000\\000\\000\\002\\000\\001\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\003\\000\\000\\000\\000\\000\\000\\000\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\002\\003\"+
    \"\\003\\004\\005\\003\\006\\007\\007\\007\\007\\010\\011\\012\\012\\012\\012\\012\\012\\012\\012\"+
    \"\\012\\012\\012\\012\\012\\012\\012\\012\\003\\013\\014\\014\\014\\014\\015\\016\\015\\015\\017\"+
    \"\\015\\015\\020\\021\\015\\015\\022\\023\\024\\025\\026\\027\\030\\031\\015\\015\\015\\015\\015\"+
    \"\\015\\032\\033\\034\\035\\036\\036\\036\\036\\036\\036\\036\\036\\037\\003\\003\\036\\036\\036\"+
    \"\\036\\036\\036\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\014\\014\\014\\014\\014\\014\"+
    \"\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\040\\003\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\002\\003\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\002\\003\\003\\003\\003\\003\\003\\003\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\002\\041\\042\\003\\003\\003\\003\\003\\003\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\043\\000\\000\\000\\000\\044\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\045\"+
    \"\\000\\000\\003\\003\\000\\000\\000\\000\\046\\047\\050\\003\\003\\003\\003\\003\\051\\051\\051\"+
    \"\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\051\\052\\052\"+
    \"\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\052\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\003\\053\\053\\053\\053\\053\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\054\\054\\054\\003\\055\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\054\\054\\054\\054\\054\\054\\056\\055\\003\\055\\056\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\054\\054\\054\\057\\060\\061\\062\\063\\054\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\064\\065\\066\\003\\067\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\003\\003\\057\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\003\\003\\003\\054\\070\"+
    \"\\071\\072\\073\\003\\003\\071\\071\\054\\054\\056\\054\\056\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\054\\054\\054\\003\\003\\074\\075\\003\\076\\077\\077\\100\\063\\003\\003\\003\"+
    \"\\003\\101\\101\\101\\101\\102\\003\\003\\003\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\"+
    \"\\054\\054\\054\\054\\103\\104\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\003\\067\"+
    \"\\105\\105\\105\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\054\\003\\060\\060\\106\\063\"+
    \"\\054\\054\\054\\054\\054\\054\\054\\054\\054\\055\\003\\003\\060\\060\\106\\063\\054\\054\\054\"+
    \"\\054\\055\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\107\\107\\107\\107\\107\\110\"+
    \"\\111\\111\\111\\111\\111\\111\\111\\111\\111\\112\\113\\114\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\071\\071\\071\\071\\071\\071\\071\\115\\116\\116\\116\\003\\003\\117\\117\\117\\117\\117\\120\"+
    \"\\034\\034\\034\\034\\121\\121\\121\\121\\121\\003\\003\\003\\003\\003\\003\\003\\003\\074\\114\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\122\\113\\071\\123\\124\\115\\125\\116\\116\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\002\\003\\003\\003\\126\\126\\126\"+
    \"\\126\\126\\003\\003\\003\\071\\127\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\130\\071\\071\\113\\071\\071\\131\\075\\132\\132\\132\\132\\132\\116\"+
    \"\\116\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\071\\114\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\133\\122\\071\\071\\071\\071\\123\\134\\000\\135\\116\\005\\003\\003\\003\\126\\126\"+
    \"\\126\\126\\126\\003\\003\\003\\000\\000\\000\\000\\000\\130\\113\\122\\071\\071\\071\\136\\003\"+
    \"\\003\\003\\003\\000\\000\\000\\000\\000\\000\\000\\002\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\137\\137\\137\\137\\140\\140\\140\\141\\142\\142\\143\\144\\144\\144\\144\\145\\145\\146\\147\"+
    \"\\150\\150\\150\\142\\151\\152\\153\\154\\155\\144\\156\\157\\160\\161\\162\\163\\164\\165\\166\"+
    \"\\166\\167\\170\\171\\172\\153\\173\\153\\153\\153\\153\\044\\003\\003\\003\\003\\003\\003\\116\"+
    \"\\116\\003\\003\\003\\003\\003\\003\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\002\\003\\003\\003\\000\\000\\002\\003\\003\\003\\003\\003\\133\\122\\122\\122\\122\\122\\122\"+
    \"\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\122\\174\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\076\\074\\175\\176\\176\\176\\176\\176\\176\\000\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\014\\014\\014\\014\\014\\014\\014\\014\"+
    \"\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\"+
    \"\\003\\003\\003\\003\\003\\014\\014\\014\\177\\013\\014\\014\\014\\014\\014\\014\\014\\014\\014\"+
    \"\\014\\014\\014\\014\\200\\136\\074\\014\\200\\201\\201\\202\\203\\203\\203\\204\\074\\074\\074\"+
    \"\\205\\040\\074\\074\\074\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\"+
    \"\\014\\074\\074\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\"+
    \"\\014\\014\\014\\014\\014\\014\\014\\014\\003\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\074\\206\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\207\\003\\003\\003\\003\"+
    \"\\210\\210\\210\\210\\210\\211\\012\\012\\012\\003\\003\\003\\003\\003\\003\\003\\212\\212\\212\"+
    \"\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\213\\213\\213\\213\\213\\213\\213\\213\\213\"+
    \"\\213\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\213\\213\"+
    \"\\213\\214\\213\\213\\213\\213\\213\\213\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\212\\212\\212\\212\\212\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\215\"+
    \"\\212\\003\\215\\216\\215\\216\\212\\215\\212\\212\\212\\212\\213\\213\\217\\217\\213\\213\\213\"+
    \"\\217\\213\\213\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\212\\216\\212\\215\\216\\212\"+
    \"\\212\\212\\215\\212\\212\\212\\215\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\"+
    \"\\213\\212\\216\\212\\215\\212\\212\\215\\215\\003\\212\\212\\212\\215\\213\\213\\213\\213\\213\"+
    \"\\213\\213\\213\\213\\213\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\212\\212\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\212\\212\\212\\212\"+
    \"\\212\\212\\212\\213\\213\\213\\213\\213\\213\\213\\213\\213\\212\\213\\213\\213\\213\\213\\213\"+
    \"\\213\\213\\213\\213\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\212\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\212\\212\\212\\212\\212\"+
    \"\\212\\212\\212\\213\\213\\213\\003\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\220\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\221\\213\\213\\213\\212\\212\"+
    \"\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\220\\213\\213\\213\\213\\213\\213\\213\\213\"+
    \"\\213\\213\\213\\213\\221\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\212\\220\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\221\\213\\213\\213\\212\"+
    \"\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\\220\\213\\213\\213\\213\\213\\213\\213\"+
    \"\\213\\213\\213\\213\\213\\221\\213\\213\\213\\212\\212\\212\\212\\212\\212\\212\\212\\212\\212\"+
    \"\\212\\212\\220\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\213\\221\\213\\213\\213\"+
    \"\\222\\003\\223\\223\\223\\223\\223\\224\\224\\224\\224\\224\\225\\225\\225\\225\\225\\226\\226\"+
    \"\\226\\226\\226\\227\\227\\227\\227\\227\\230\\230\\231\\230\\230\\230\\230\\230\\230\\230\\230\"+
    \"\\230\\230\\230\\230\\230\\231\\232\\232\\231\\231\\230\\230\\230\\230\\232\\230\\230\\231\\231\"+
    \"\\003\\003\\003\\232\\003\\231\\231\\231\\231\\230\\231\\232\\232\\231\\231\\231\\231\\231\\231\"+
    \"\\232\\232\\231\\230\\232\\230\\230\\230\\232\\230\\230\\231\\230\\232\\232\\230\\230\\230\\230\"+
    \"\\230\\231\\230\\230\\230\\230\\230\\230\\230\\230\\003\\003\\231\\230\\231\\230\\230\\231\\230\"+
    \"\\230\\230\\230\\230\\230\\230\\230\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\233\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\036\\036\\036\\036\\036\\036\\003\\003\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\003\\003\\003\\003\\003\\003\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\207\\234\\036\\036\\036\\036\\036\\036\\207\\234\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\234\\036\\036\\036\\036\\036\\036\\036\\235\\236\\236\\236\\236\\237\"+
    \"\\003\\003\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\177\\014\"+
    \"\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\036\\003\\003\\014\\014\\014\\014\"+
    \"\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\177\\003\"+
    \"\\003\\003\\003\\003\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\177\"+
    \"\\003\\003\\003\\003\\003\\003\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\014\\177\"+
    \"\\003\\003\\003\\014\\003\\003\\003\\003\\003\\003\\003\\207\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\036\\036\\036\\234\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\207\\003\\036\\036\\207\\036\\036\\207\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\036\\036\\036\\036\\036\\036\\036\\036\\207\\003\\003\\003\\003\\003\\003\\003\\036\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\207\\207\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\234\\036\\207\\003\\036\\036\\036\\036\\036\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\003\\036\\036\\003\\003\\003\\003\\003\\003\\036\\036\\036\\036\\036\"+
    \"\\036\\036\\036\\036\\036\\036\\036\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\\234\\036\\036\\207\\003\\234\"+
    \"\\036\\036\\036\\036\\036\\003\\003\\003\\003\\003\\003\\003\\003\\036\\036\\036\\003\\003\\003\"+
    \"\\003\\003\\003\\003\\003\\003\\003\\003\\003\\003\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Y table has 2176 entries for a total of 4352 bytes.
"
      end

      attribute 1664130 "A"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int[320]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The A table has 320 entries for a total of 1280 bytes.
"
      end

      classrelation 3148546 // A_DATA (<unidirectional association>)
	relation 3148546 --->
	  a role_name "A_DATA" init_value "
    \"\\000\\u7005\\000\\u7005\\u7800\\000\\000\\u7005\\000\\u7005\\u7800\\000\\u7800\\000\\u7800\"+
    \"\\000\\000\\030\\u6800\\030\\000\\030\\u7800\\000\\u7800\\000\\000\\u074B\\000\\u074B\\000\"+
    \"\\u074B\\000\\u074B\\000\\u046B\\000\\u058B\\000\\u080B\\000\\u080B\\000\\u080B\\u7800\\000\"+
    \"\\000\\034\\000\\034\\000\\034\\u6800\\u780A\\u6800\\u780A\\u6800\\u77EA\\u6800\\u744A\\u6800\"+
    \"\\u77AA\\u6800\\u742A\\u6800\\u780A\\u6800\\u76CA\\u6800\\u774A\\u6800\\u780A\\u6800\\u780A\"+
    \"\\u6800\\u766A\\u6800\\u752A\\u6800\\u750A\\u6800\\u74EA\\u6800\\u74EA\\u6800\\u74CA\\u6800\"+
    \"\\u74AA\\u6800\\u748A\\u6800\\u74CA\\u6800\\u754A\\u6800\\u752A\\u6800\\u750A\\u6800\\u74EA\"+
    \"\\u6800\\u74CA\\u6800\\u772A\\u6800\\u780A\\u6800\\u764A\\u6800\\u780A\\u6800\\u080B\\u6800\"+
    \"\\u080B\\u6800\\u080B\\u6800\\u080B\\u6800\\034\\u6800\\034\\u6800\\034\\u6800\\u06CB\\u7800\"+
    \"\\000\\000\\034\\u4000\\u3006\\000\\u042B\\000\\u048B\\000\\u050B\\000\\u080B\\000\\u7005\"+
    \"\\000\\u780A\\000\\u780A\\u7800\\000\\u7800\\000\\000\\030\\000\\030\\000\\u760A\\000\\u760A\"+
    \"\\000\\u76EA\\000\\u740A\\000\\u780A\\242\\u7001\\242\\u7001\\241\\u7002\\241\\u7002\\000\"+
    \"\\u3409\\000\\u3409\\u0800\\u7005\\u0800\\u7005\\u0800\\u7005\\u7800\\000\\u7800\\000\\u0800\"+
    \"\\u7005\\u7800\\000\\u0800\\030\\u0800\\u052B\\u0800\\u052B\\u0800\\u052B\\u0800\\u05EB\"+
    \"\\u0800\\u070B\\u0800\\u080B\\u0800\\u080B\\u0800\\u080B\\u0800\\u056B\\u0800\\u066B\\u0800\"+
    \"\\u078B\\u0800\\u080B\\u0800\\u050B\\u0800\\u050B\\u7800\\000\\u6800\\030\\u0800\\u7005\"+
    \"\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\u7800\\000\\u4000\\u3006\\u4000\\u3006\\u7800\"+
    \"\\000\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\u7800\\000\\u7800\\000\\u4000\\u3006\\u0800\"+
    \"\\u042B\\u0800\\u042B\\u0800\\u04CB\\u0800\\u05EB\\u0800\\030\\u0800\\030\\u0800\\030\\u7800\"+
    \"\\000\\u0800\\u7005\\u0800\\u048B\\u0800\\u080B\\u0800\\030\\u6800\\030\\u6800\\030\\u0800\"+
    \"\\u05CB\\u0800\\u06EB\\u3000\\u042B\\u3000\\u042B\\u3000\\u054B\\u3000\\u066B\\u3000\\u080B\"+
    \"\\u3000\\u080B\\u3000\\u080B\\u7800\\000\\000\\u3008\\u4000\\u3006\\000\\u3008\\000\\u7005\"+
    \"\\u4000\\u3006\\000\\030\\000\\030\\000\\030\\u6800\\u05EB\\u6800\\u05EB\\u6800\\u070B\\u6800\"+
    \"\\u042B\\000\\u3749\\000\\u3749\\000\\u3008\\000\\u3008\\u4000\\u3006\\000\\u3008\\000\\u3008\"+
    \"\\u4000\\u3006\\000\\030\\000\\u1010\\000\\u3609\\000\\u3609\\u4000\\u3006\\000\\u7005\\000\"+
    \"\\u7005\\u4000\\u3006\\u4000\\u3006\\u4000\\u3006\\000\\u3549\\000\\u3549\\000\\u7005\\000\"+
    \"\\u3008\\000\\u3008\\000\\u7005\\000\\u7005\\000\\030\\000\\u3008\\u4000\\u3006\\000\\u744A\"+
    \"\\000\\u744A\\000\\u776A\\000\\u776A\\000\\u776A\\000\\u76AA\\000\\u76AA\\000\\u76AA\\000\"+
    \"\\u76AA\\000\\u758A\\000\\u758A\\000\\u758A\\000\\u746A\\000\\u746A\\000\\u746A\\000\\u77EA\"+
    \"\\000\\u77EA\\000\\u77CA\\000\\u77CA\\000\\u77CA\\000\\u76AA\\000\\u768A\\000\\u768A\\000\"+
    \"\\u768A\\000\\u780A\\000\\u780A\\000\\u75AA\\000\\u75AA\\000\\u75AA\\000\\u758A\\000\\u752A\"+
    \"\\000\\u750A\\000\\u750A\\000\\u74EA\\000\\u74CA\\000\\u74AA\\000\\u74CA\\000\\u74CA\\000\"+
    \"\\u74AA\\000\\u748A\\000\\u748A\\000\\u746A\\000\\u746A\\000\\u744A\\000\\u742A\\000\\u740A\"+
    \"\\000\\u770A\\000\\u770A\\000\\u770A\\000\\u764A\\000\\u764A\\000\\u764A\\000\\u764A\\000\"+
    \"\\u762A\\000\\u762A\\000\\u760A\\000\\u752A\\000\\u752A\\000\\u3008\\u7800\\000\\u4000\\u3006\"+
    \"\\000\\u7004\\000\\u7004\\000\\u7004\\000\\034\\u7800\\000\\000\\034\\000\\u3008\\000\\u3008\"+
    \"\\000\\u3008\\000\\u3008\\u4800\\u1010\\u4800\\u1010\\u4800\\u1010\\u4800\\u1010\\u4000\"+
    \"\\u3006\\u4000\\u3006\\000\\034\\u4000\\u3006\\u6800\\034\\u6800\\034\\u7800\\000\\000\\u042B\"+
    \"\\000\\u042B\\000\\u054B\\000\\u066B\\000\\u7001\\000\\u7001\\000\\u7002\\000\\u7002\\000\"+
    \"\\u7002\\u7800\\000\\000\\u7001\\u7800\\000\\u7800\\000\\000\\u7001\\u7800\\000\\000\\u7002\"+
    \"\\000\\u7001\\000\\031\\000\\u7002\\uE800\\031\\000\\u7001\\000\\u7002\\u1800\\u3649\\u1800\"+
    \"\\u3649\\u1800\\u3509\\u1800\\u3509\\u1800\\u37C9\\u1800\\u37C9\\u1800\\u3689\\u1800\\u3689\"+
    \"\\u1800\\u3549\\u1800\\u3549\\u1000\\u7005\\u1000\\u7005\\u7800\\000\\u1000\\u7005\\u1000\"+
    \"\\u7005\\u7800\\000\\u6800\\031\\u6800\\031\\u7800\\000\\u6800\\034\\u1800\\u040B\\u1800\"+
    \"\\u07EB\\u1800\\u07EB\\u1800\\u07EB\\u1800\\u07EB\\u7800\\000\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148546 // A_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1664258 "B"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\"+
    \"\\004\\004\\000\\004\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\004\"+
    \"\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\004\\004\\004\\004\\000\\000\"+
    \"\\000\\000\\000\\004\\000\\000\\004\\004\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The B table has 320 entries for a total of 640 bytes.
"
      end

      extra_member 156674 "initialization"
	
	cpp "" ""
	java "  static {
                { // THIS CODE WAS AUTOMATICALLY CREATED BY GenerateCharacter:
            char[] data = A_DATA.toCharArray();
            assert (data.length == (320 * 2));
            int i = 0, j = 0;
            while (i < (320 * 2)) {
                int entry = data[i++] << 16;
                A[j++] = entry | data[i++];
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 930050 "CharacterData02"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables found in
Java.lang.Character. "
      classrelation 3148674 // <generalisation>
	relation 3148674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3148674 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6972162 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character properties are currently encoded into 32 bits in the following manner:
1 bit   mirrored property
4 bits  directionality property
9 bits  signed offset used for converting case
1 bit   if 1, adding the signed offset converts the character to lowercase
1 bit   if 1, subtracting the signed offset converts the character to uppercase
1 bit   if 1, this character has a titlecase equivalent (possibly itself)
3 bits  0  may not be part of an identifier
1  ignorable control; may continue a Unicode identifier or Java identifier
2  may continue a Java identifier but not a Unicode identifier (unused)
3  may continue a Unicode identifier or Java identifier
4  is a Java whitespace character
5  may start or continue a Java identifier;
may continue but not start a Unicode identifier (underscores)
6  may start or continue a Java identifier but not a Unicode identifier ($)
7  may start or continue a Unicode identifier or Java identifier
Thus:
5, 6, 7 may start a Java identifier
1, 2, 3, 5, 6, 7 may continue a Java identifier
7 may start a Unicode identifier
1, 3, 5, 7 may continue a Unicode identifier
1 is ignorable within an identifier
4 is Java whitespace
2 bits  0  this character has no numeric property
1  adding the digit offset to the character code and then
masking with 0x1F will produce the desired numeric value
2  this character has a \"strange\" numeric value
3  a Java supradecimal digit: adding the digit offset to the
character code, then masking with 0x1F, then adding 10
will produce the desired numeric value
5 bits  digit offset
5 bits  character type

The encoding of character properties is subject to change at any time.
"
      end

      operation 6972290 "getPropertiesEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6972418 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6972546 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6972674 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6972802 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6972930 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973058 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973186 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973314 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973442 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973570 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973698 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973826 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6973954 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6974082 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6974210 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6974338 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6974466 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6974594 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3148802 // instance (<unidirectional association>)
	relation 3148802 --->
	  a role_name "instance" init_value " new CharacterData02()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148802 // instance (<unidirectional association>)
	  b parent class_ref 929666 // CharacterData
      end

      operation 6974722 "CharacterData02"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1664386 "X"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\020\\040\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\060\\000\\000\\000\\000\\000\\000\\100\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\000\\000\\000\\000\\120\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\100\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following tables and code generated using:
 java GenerateCharacter -plane 2 -template /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/characterdata/CharacterData02.java.template -spec /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/UnicodeData.txt -specialcasing /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/SpecialCasing.txt -proplist /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/PropList.txt -o /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/build/macosx-x86_64/jdk/gensrc/java/lang/CharacterData02.java -string -usecharforbyte 11 4 1
 The X table has 2048 entries for a total of 4096 bytes.
"
      end

      attribute 1664514 "Y"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\002\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\"+
    \"\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\002\\004\\004\\004\\004\\004\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000\\000\\006\\000\\000\\000\\000\\000\\000\"+
    \"\\000\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Y table has 96 entries for a total of 192 bytes.
"
      end

      attribute 1664642 "A"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The A table has 8 entries for a total of 32 bytes.
"
      end

      classrelation 3148930 // A_DATA (<unidirectional association>)
	relation 3148930 --->
	  a role_name "A_DATA" init_value "
    \"\\000\\u7005\\000\\u7005\\000\\u7005\\u7800\\000\\u7800\\000\\u7800\\000\\000\\u7725\\000\"+
    \"\\u7005\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3148930 // A_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1664770 "B"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\020\\020\\020\\000\\000\\000\\020\\020\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The B table has 8 entries for a total of 16 bytes.
"
      end

      extra_member 156802 "initialization"
	
	cpp "" ""
	java "  static {
                { // THIS CODE WAS AUTOMATICALLY CREATED BY GenerateCharacter:
            char[] data = A_DATA.toCharArray();
            assert (data.length == (8 * 2));
            int i = 0, j = 0;
            while (i < (8 * 2)) {
                int entry = data[i++] << 16;
                A[j++] = entry | data[i++];
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 930178 "CharacterData0E"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables found in
Java.lang.Character. "
      classrelation 3149058 // <generalisation>
	relation 3149058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3149058 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6974850 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character properties are currently encoded into 32 bits in the following manner:
1 bit   mirrored property
4 bits  directionality property
9 bits  signed offset used for converting case
1 bit   if 1, adding the signed offset converts the character to lowercase
1 bit   if 1, subtracting the signed offset converts the character to uppercase
1 bit   if 1, this character has a titlecase equivalent (possibly itself)
3 bits  0  may not be part of an identifier
1  ignorable control; may continue a Unicode identifier or Java identifier
2  may continue a Java identifier but not a Unicode identifier (unused)
3  may continue a Unicode identifier or Java identifier
4  is a Java whitespace character
5  may start or continue a Java identifier;
may continue but not start a Unicode identifier (underscores)
6  may start or continue a Java identifier but not a Unicode identifier ($)
7  may start or continue a Unicode identifier or Java identifier
Thus:
5, 6, 7 may start a Java identifier
1, 2, 3, 5, 6, 7 may continue a Java identifier
7 may start a Unicode identifier
1, 3, 5, 7 may continue a Unicode identifier
1 is ignorable within an identifier
4 is Java whitespace
2 bits  0  this character has no numeric property
1  adding the digit offset to the character code and then
masking with 0x1F will produce the desired numeric value
2  this character has a \"strange\" numeric value
3  a Java supradecimal digit: adding the digit offset to the
character code, then masking with 0x1F, then adding 10
will produce the desired numeric value
5 bits  digit offset
5 bits  character type

The encoding of character properties is subject to change at any time.
"
      end

      operation 6974978 "getPropertiesEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975106 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975234 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975362 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975490 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975618 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975746 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6975874 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976002 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976130 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976258 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976386 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976514 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976642 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976770 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6976898 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6977026 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6977154 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6977282 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3149186 // instance (<unidirectional association>)
	relation 3149186 --->
	  a role_name "instance" init_value " new CharacterData0E()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3149186 // instance (<unidirectional association>)
	  b parent class_ref 929666 // CharacterData
      end

      operation 6977410 "CharacterData0E"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1664898 "X"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\020\\020\\020\\040\\040\\040\\040\\060\\060\\060\\060\\060\\060\\060\\100\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\"+
    \"\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\\040\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following tables and code generated using:
 java GenerateCharacter -plane 14 -template /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/characterdata/CharacterData0E.java.template -spec /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/UnicodeData.txt -specialcasing /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/SpecialCasing.txt -proplist /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/PropList.txt -o /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/build/macosx-x86_64/jdk/gensrc/java/lang/CharacterData0E.java -string -usecharforbyte 11 4 1
 The X table has 2048 entries for a total of 4096 bytes.
"
      end

      attribute 1665026 "Y"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\004\\004\\004\"+
    \"\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\004\\002\\002\\002\\002\\002\\002\"+
    \"\\002\\002\\002\\002\\002\\002\\002\\002\\002\\002\\006\\006\\006\\006\\006\\006\\006\\006\\006\"+
    \"\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\006\\002\\002\\002\\002\"+
    \"\\002\\002\\002\\002\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The Y table has 80 entries for a total of 160 bytes.
"
      end

      attribute 1665154 "A"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int[8]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The A table has 8 entries for a total of 32 bytes.
"
      end

      classrelation 3149314 // A_DATA (<unidirectional association>)
	relation 3149314 --->
	  a role_name "A_DATA" init_value "
    \"\\u7800\\000\\u4800\\u1010\\u7800\\000\\u7800\\000\\u4800\\u1010\\u4800\\u1010\\u4000\\u3006\"+
    \"\\u4000\\u3006\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3149314 // A_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1665282 "B"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The B table has 8 entries for a total of 16 bytes.
"
      end

      extra_member 156930 "initialization"
	
	cpp "" ""
	java "  static {
                { // THIS CODE WAS AUTOMATICALLY CREATED BY GenerateCharacter:
            char[] data = A_DATA.toCharArray();
            assert (data.length == (8 * 2));
            int i = 0, j = 0;
            while (i < (8 * 2)) {
                int entry = data[i++] << 16;
                A[j++] = entry | data[i++];
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 930306 "CharacterDataLatin1"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables found in
Java.lang.Character. "
      classrelation 3149442 // <generalisation>
	relation 3149442 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3149442 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6977538 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character properties are currently encoded into 32 bits in the following manner:
1 bit   mirrored property
4 bits  directionality property
9 bits  signed offset used for converting case
1 bit   if 1, adding the signed offset converts the character to lowercase
1 bit   if 1, subtracting the signed offset converts the character to uppercase
1 bit   if 1, this character has a titlecase equivalent (possibly itself)
3 bits  0  may not be part of an identifier
1  ignorable control; may continue a Unicode identifier or Java identifier
2  may continue a Java identifier but not a Unicode identifier (unused)
3  may continue a Unicode identifier or Java identifier
4  is a Java whitespace character
5  may start or continue a Java identifier;
may continue but not start a Unicode identifier (underscores)
6  may start or continue a Java identifier but not a Unicode identifier ($)
7  may start or continue a Unicode identifier or Java identifier
Thus:
5, 6, 7 may start a Java identifier
1, 2, 3, 5, 6, 7 may continue a Java identifier
7 may start a Unicode identifier
1, 3, 5, 7 may continue a Unicode identifier
1 is ignorable within an identifier
4 is Java whitespace
2 bits  0  this character has no numeric property
1  adding the digit offset to the character code and then
masking with 0x1F will produce the desired numeric value
2  this character has a \"strange\" numeric value
3  a Java supradecimal digit: adding the digit offset to the
character code, then masking with 0x1F, then adding 10
will produce the desired numeric value
5 bits  digit offset
5 bits  character type

The encoding of character properties is subject to change at any time.
"
      end

      operation 6977666 "getPropertiesEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6977794 "isOtherLowercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6977922 "isOtherUppercase"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978050 "isOtherAlphabetic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978178 "isIdeographic"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978306 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978434 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978562 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978690 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978818 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6978946 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979074 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979202 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979330 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979458 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979586 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979714 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979842 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6979970 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6980098 "toUpperCaseEx"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1665410 "sharpsMap"
	class_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " new char[] {'S', 'S'}"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6980226 "toUpperCaseCharArray"
	package explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3149570 // instance (<unidirectional association>)
	relation 3149570 --->
	  a role_name "instance" init_value " new CharacterDataLatin1()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3149570 // instance (<unidirectional association>)
	  b parent class_ref 930306 // CharacterDataLatin1
      end

      operation 6980354 "CharacterDataLatin1"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1665538 "A"
	class_attribute const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " new int[256]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following tables and code generated using:
 java GenerateCharacter -template /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/characterdata/CharacterDataLatin1.java.template -spec /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/UnicodeData.txt -specialcasing /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/SpecialCasing.txt -proplist /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/jdk/make/data/unicodedata/PropList.txt -o /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u144/9417/build/macosx-x86_64/jdk/gensrc/java/lang/CharacterDataLatin1.java -string -usecharforbyte -latin1 8
 The A table has 256 entries for a total of 1024 bytes.
"
      end

      classrelation 3149698 // A_DATA (<unidirectional association>)
	relation 3149698 --->
	  a role_name "A_DATA" init_value "
    \"\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\"+
    \"\\u100F\\u4800\\u100F\\u4800\\u100F\\u5800\\u400F\\u5000\\u400F\\u5800\\u400F\\u6000\\u400F\"+
    \"\\u5000\\u400F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\"+
    \"\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\"+
    \"\\u4800\\u100F\\u4800\\u100F\\u5000\\u400F\\u5000\\u400F\\u5000\\u400F\\u5800\\u400F\\u6000\"+
    \"\\u400C\\u6800\\030\\u6800\\030\\u2800\\030\\u2800\\u601A\\u2800\\030\\u6800\\030\\u6800\"+
    \"\\030\\uE800\\025\\uE800\\026\\u6800\\030\\u2000\\031\\u3800\\030\\u2000\\024\\u3800\\030\"+
    \"\\u3800\\030\\u1800\\u3609\\u1800\\u3609\\u1800\\u3609\\u1800\\u3609\\u1800\\u3609\\u1800\"+
    \"\\u3609\\u1800\\u3609\\u1800\\u3609\\u1800\\u3609\\u1800\\u3609\\u3800\\030\\u6800\\030\"+
    \"\\uE800\\031\\u6800\\031\\uE800\\031\\u6800\\030\\u6800\\030\\202\\u7FE1\\202\\u7FE1\\202\"+
    \"\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\"+
    \"\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\"+
    \"\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\\202\\u7FE1\"+
    \"\\202\\u7FE1\\uE800\\025\\u6800\\030\\uE800\\026\\u6800\\033\\u6800\\u5017\\u6800\\033\\201\"+
    \"\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\"+
    \"\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\"+
    \"\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\"+
    \"\\201\\u7FE2\\201\\u7FE2\\201\\u7FE2\\uE800\\025\\u6800\\031\\uE800\\026\\u6800\\031\\u4800\"+
    \"\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u5000\\u100F\"+
    \"\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\"+
    \"\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\"+
    \"\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\"+
    \"\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\\u4800\\u100F\"+
    \"\\u3800\\014\\u6800\\030\\u2800\\u601A\\u2800\\u601A\\u2800\\u601A\\u2800\\u601A\\u6800\"+
    \"\\034\\u6800\\030\\u6800\\033\\u6800\\034\\000\\u7005\\uE800\\035\\u6800\\031\\u4800\\u1010\"+
    \"\\u6800\\034\\u6800\\033\\u2800\\034\\u2800\\031\\u1800\\u060B\\u1800\\u060B\\u6800\\033\"+
    \"\\u07FD\\u7002\\u6800\\030\\u6800\\030\\u6800\\033\\u1800\\u050B\\000\\u7005\\uE800\\036\"+
    \"\\u6800\\u080B\\u6800\\u080B\\u6800\\u080B\\u6800\\030\\202\\u7001\\202\\u7001\\202\\u7001\"+
    \"\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\"+
    \"\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\"+
    \"\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\u6800\\031\\202\\u7001\\202\"+
    \"\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\202\\u7001\\u07FD\\u7002\\201\\u7002\"+
    \"\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\"+
    \"\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\"+
    \"\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\u6800\"+
    \"\\031\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\\201\\u7002\"+
    \"\\u061D\\u7002\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3149698 // A_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1665666 "B"
	class_attribute const_attribute package explicit_type "char"
	multiplicity "[]"
	init_value " (
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"+
    \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\").toCharArray()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The B table has 256 entries for a total of 512 bytes.
"
      end

      extra_member 157058 "initialization"
	
	cpp "" ""
	java "  static {
                { // THIS CODE WAS AUTOMATICALLY CREATED BY GenerateCharacter:
            char[] data = A_DATA.toCharArray();
            assert (data.length == (256 * 2));
            int i = 0, j = 0;
            while (i < (256 * 2)) {
                int entry = data[i++] << 16;
                A[j++] = entry | data[i++];
            }
        }

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end
    end

    class 930434 "CharacterDataPrivateUse"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables found in
Java.lang.Character. "
      classrelation 3149826 // <generalisation>
	relation 3149826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3149826 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6980482 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6980610 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6980738 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6980866 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6980994 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981122 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981250 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981378 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981506 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981634 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981762 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6981890 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982018 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982146 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982274 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3149954 // instance (<unidirectional association>)
	relation 3149954 --->
	  a role_name "instance" init_value " new CharacterDataPrivateUse()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3149954 // instance (<unidirectional association>)
	  b parent class_ref 929666 // CharacterData
      end

      operation 6982402 "CharacterDataPrivateUse"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 930562 "CharacterDataUndefined"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The CharacterData class encapsulates the large tables found in
Java.lang.Character. "
      classrelation 3150082 // <generalisation>
	relation 3150082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3150082 // <generalisation>
	  b parent class_ref 929666 // CharacterData
      end

      operation 6982530 "getProperties"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982658 "getType"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982786 "isJavaIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6982914 "isJavaIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983042 "isUnicodeIdentifierStart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983170 "isUnicodeIdentifierPart"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983298 "isIdentifierIgnorable"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983426 "toLowerCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983554 "toUpperCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983682 "toTitleCase"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983810 "digit"
	package explicit_return_type "int"
	nparams 2
	  param in name "ch" explicit_type "int"
	  param in name "radix" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6983938 "getNumericValue"
	package explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6984066 "isWhitespace"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6984194 "getDirectionality"
	package explicit_return_type "byte"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6984322 "isMirrored"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3150210 // instance (<unidirectional association>)
	relation 3150210 --->
	  a role_name "instance" init_value " new CharacterDataUndefined()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3150210 // instance (<unidirectional association>)
	  b parent class_ref 929666 // CharacterData
      end

      operation 6984450 "CharacterDataUndefined"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 930690 "CharacterName"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3150338 // refStrPool (<unidirectional association>)
	relation 3150338 --->
	  a role_name "refStrPool" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<byte[]> ${name}${value};
"
	    classrelation_ref 3150338 // refStrPool (<unidirectional association>)
	  b parent class_ref 321026 // SoftReference
      end

      attribute 1665794 "lookup"
	class_attribute private explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6984578 "initNamePool"
	class_operation private explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6984706 "get"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "cp" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 931970 "ClassCircularityError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when the Java Virtual Machine detects a circularity in the
superclass hierarchy of a class being loaded.

@author     unascribed
@since      JDK1.0
"
      classrelation 3154434 // <generalisation>
	relation 3154434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3154434 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1668482 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1054362542914539689L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7006210 "ClassCircularityError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code ClassCircularityError} with no detail message.
"
      end

      operation 7006338 "ClassCircularityError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code ClassCircularityError} with the specified detail
message.

@param  s
        The detail message
"
      end
    end

    class 932098 "ClassLoaderHelper"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 7006722 "ClassLoaderHelper"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7006850 "mapAlternativeName"
	class_operation package return_type class_ref 131970 // File
	nparams 1
	  param inout name "lib" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an alternate path name for the given file
such that if the original pathname did not exist, then the
file may be located at the alternate location.
For most platforms, this behavior is not supported and returns null.
"
      end
    end

    class 932226 "ReflectiveOperationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Common superclass of exceptions thrown by reflective operations in
core reflection.

@see LinkageError
@since 1.7
"
      classrelation 3154690 // <generalisation>
	relation 3154690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3154690 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1668738 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 123456789L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7006978 "ReflectiveOperationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with {@code null} as its detail
message.  The cause is not initialized, and may subsequently be
initialized by a call to {@link #initCause}.
"
      end

      operation 7007106 "ReflectiveOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message.
The cause is not initialized, and may subsequently be
initialized by a call to {@link #initCause}.

@param   message   the detail message. The detail message is saved for
         later retrieval by the {@link #getMessage()} method.
"
      end

      operation 7007234 "ReflectiveOperationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified detail message
and cause.

<p>Note that the detail message associated with
{@code cause} is <em>not</em> automatically incorporated in
this exception's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
"
      end

      operation 7007362 "ReflectiveOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new exception with the specified cause and a detail
message of {@code (cause==null ? null : cause.toString())} (which
typically contains the class and detail message of {@code cause}).

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
"
      end
    end

    class 932354 "Compiler"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Compiler} class is provided to support Java-to-native-code
compilers and related services. By design, the {@code Compiler} class does
nothing; it serves as a placeholder for a JIT compiler implementation.

<p> When the Java Virtual Machine first starts, it determines if the system
property {@code java.compiler} exists. (System properties are accessible
through {@link System#getProperty(String)} and {@link
System#getProperty(String, String)}.  If so, it is assumed to be the name of
a library (with a platform-dependent exact location and type); {@link
System#loadLibrary} is called to load that library. If this loading
succeeds, the function named {@code java_lang_Compiler_start()} in that
library is called.

<p> If no compiler is available, these methods do nothing.

@author  Frank Yellin
@since   JDK1.0
"
      operation 7008386 "Compiler"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7008514 "initialize"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " don't make instances"
      end

      operation 7008642 "registerNatives"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      extra_member 157442 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
        java.security.AccessController.doPrivileged(
            new java.security.PrivilegedAction<Void>() {
                public Void run() {
                    boolean loaded = false;
                    String jit = System.getProperty(\"java.compiler\");
                    if ((jit != null) && (!jit.equals(\"NONE\")) &&
                        (!jit.equals(\"\")))
                    {
                        try {
                            System.loadLibrary(jit);
                            initialize();
                            loaded = true;
                        } catch (UnsatisfiedLinkError e) {
                            System.err.println(\"Warning: JIT compiler \\\"\" +
                              jit + \"\\\" not found. Will use interpreter.\");
                        }
                    }
                    String info = System.getProperty(\"java.vm.info\");
                    if (loaded) {
                        System.setProperty(\"java.vm.info\", info + \", \" + jit);
                    } else {
                        System.setProperty(\"java.vm.info\", info + \", nojit\");
                    }
                    return null;
                }
            });
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 7008770 "compileClass"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "clazz" type class_ref 130818 // Class
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
s"
	
	
	
	comment "Compiles the specified class.

@param  clazz
        A class

@return  {@code true} if the compilation succeeded; {@code false} if the
         compilation failed or no compiler is available

@throws  NullPointerException
         If {@code clazz} is {@code null}
"
      end

      operation 7008898 "compileClasses"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "string" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Compiles all classes whose name matches the specified string.

@param  string
        The name of the classes to compile

@return  {@code true} if the compilation succeeded; {@code false} if the
         compilation failed or no compiler is available

@throws  NullPointerException
         If {@code string} is {@code null}
"
      end

      operation 7009026 "command"
	class_operation public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "any" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Examines the argument type and its fields and perform some documented
operation.  No specific operations are required.

@param  any
        An argument

@return  A compiler-specific value, or {@code null} if no compiler is
         available

@throws  NullPointerException
         If {@code any} is {@code null}
"
      end

      operation 7009154 "enable"
	class_operation public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Cause the Compiler to resume operation.
"
      end

      operation 7009282 "disable"
	class_operation public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Cause the Compiler to cease operation.
"
      end
    end

    class 932482 "ConditionalSpecialCasing"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a utility class for <code>String.toLowerCase()</code> and
<code>String.toUpperCase()</code>, that handles special casing with
conditions.  In other words, it handles the mappings with conditions
that are defined in
<a href=\"http://www.unicode.org/Public/UNIDATA/SpecialCasing.txt\">Special
Casing Properties</a> file.
<p>
Note that the unconditional case mappings (including 1:M mappings)
are handled in <code>Character.toLower/UpperCase()</code>.
"
      attribute 1669122 "FINAL_CASED"
	class_attribute const_attribute package explicit_type "int"
	init_value "              1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " context conditions.
"
      end

      attribute 1669250 "AFTER_SOFT_DOTTED"
	class_attribute const_attribute package explicit_type "int"
	init_value "        2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1669378 "MORE_ABOVE"
	class_attribute const_attribute package explicit_type "int"
	init_value "               3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1669506 "AFTER_I"
	class_attribute const_attribute package explicit_type "int"
	init_value "                  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1669634 "NOT_BEFORE_DOT"
	class_attribute const_attribute package explicit_type "int"
	init_value "           5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1669762 "COMBINING_CLASS_ABOVE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 230"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " combining class definitions
"
      end

      class 932610 "Entry"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1669890 "ch"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1670018 "lower"
	  package explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1670146 "upper"
	  package explicit_type "char"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3155458 // lang (<unidirectional association>)
	  relation 3155458 --->
	    a role_name "lang" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3155458 // lang (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1670274 "condition"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7011074 "Entry"
	  package explicit_return_type ""
	  nparams 5
	    param in name "ch" explicit_type "int"
	    param inout name "lower" explicit_type "char"
	  multiplicity "[]"
	    param inout name "upper" explicit_type "char"
	  multiplicity "[]"
	    param inout name "lang" type class_ref 128130 // String
	    param in name "condition" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7011202 "getCodePoint"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7011330 "getLowerCase"
	  package explicit_return_type "char"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7011458 "getUpperCase"
	  package explicit_return_type "char"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7011586 "getLanguage"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7011714 "getCondition"
	  package explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3155202 // entry (<unidirectional association>)
	relation 3155202 --->
	  a role_name "entry" multiplicity "[]" init_value " {
        //# ================================================================================
        //# Conditional mappings
        //# ================================================================================
        new Entry(0x03A3, new char[]{0x03C2}, new char[]{0x03A3}, null, FINAL_CASED), // # GREEK CAPITAL LETTER SIGMA
        new Entry(0x0130, new char[]{0x0069, 0x0307}, new char[]{0x0130}, null, 0), // # LATIN CAPITAL LETTER I WITH DOT ABOVE

        //# ================================================================================
        //# Locale-sensitive mappings
        //# ================================================================================
        //# Lithuanian
        new Entry(0x0307, new char[]{0x0307}, new char[]{}, \"lt\",  AFTER_SOFT_DOTTED), // # COMBINING DOT ABOVE
        new Entry(0x0049, new char[]{0x0069, 0x0307}, new char[]{0x0049}, \"lt\", MORE_ABOVE), // # LATIN CAPITAL LETTER I
        new Entry(0x004A, new char[]{0x006A, 0x0307}, new char[]{0x004A}, \"lt\", MORE_ABOVE), // # LATIN CAPITAL LETTER J
        new Entry(0x012E, new char[]{0x012F, 0x0307}, new char[]{0x012E}, \"lt\", MORE_ABOVE), // # LATIN CAPITAL LETTER I WITH OGONEK
        new Entry(0x00CC, new char[]{0x0069, 0x0307, 0x0300}, new char[]{0x00CC}, \"lt\", 0), // # LATIN CAPITAL LETTER I WITH GRAVE
        new Entry(0x00CD, new char[]{0x0069, 0x0307, 0x0301}, new char[]{0x00CD}, \"lt\", 0), // # LATIN CAPITAL LETTER I WITH ACUTE
        new Entry(0x0128, new char[]{0x0069, 0x0307, 0x0303}, new char[]{0x0128}, \"lt\", 0), // # LATIN CAPITAL LETTER I WITH TILDE

        //# ================================================================================
        //# Turkish and Azeri
        new Entry(0x0130, new char[]{0x0069}, new char[]{0x0130}, \"tr\", 0), // # LATIN CAPITAL LETTER I WITH DOT ABOVE
        new Entry(0x0130, new char[]{0x0069}, new char[]{0x0130}, \"az\", 0), // # LATIN CAPITAL LETTER I WITH DOT ABOVE
        new Entry(0x0307, new char[]{}, new char[]{0x0307}, \"tr\", AFTER_I), // # COMBINING DOT ABOVE
        new Entry(0x0307, new char[]{}, new char[]{0x0307}, \"az\", AFTER_I), // # COMBINING DOT ABOVE
        new Entry(0x0049, new char[]{0x0131}, new char[]{0x0049}, \"tr\", NOT_BEFORE_DOT), // # LATIN CAPITAL LETTER I
        new Entry(0x0049, new char[]{0x0131}, new char[]{0x0049}, \"az\", NOT_BEFORE_DOT), // # LATIN CAPITAL LETTER I
        new Entry(0x0069, new char[]{0x0069}, new char[]{0x0130}, \"tr\", 0), // # LATIN SMALL LETTER I
        new Entry(0x0069, new char[]{0x0069}, new char[]{0x0130}, \"az\", 0)  // # LATIN SMALL LETTER I
    }" class_relation package
	    comment " Special case mapping entries
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3155202 // entry (<unidirectional association>)
	  b parent class_ref 932610 // Entry
      end

      classrelation 3155330 // entryTable (<unidirectional association>)
	relation 3155330 --->
	  a role_name "entryTable" init_value " new Hashtable<>()" class_relation package
	    comment " A hash table that contains the above entries
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer, HashSet<Entry>> ${name}${value};
"
	    classrelation_ref 3155330 // entryTable (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      extra_member 157570 "initialization"
	
	cpp "" ""
	java "  static {
        // create hashtable from the entry
        for (int i = 0; i < entry.length; i ++) {
            Entry cur = entry[i];
            Integer cp = new Integer(cur.getCodePoint());
            HashSet<Entry> set = entryTable.get(cp);
            if (set == null) {
                set = new HashSet<Entry>();
            }
            set.add(cur);
            entryTable.put(cp, set);
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 7009410 "toLowerCaseEx"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7009538 "toUpperCaseEx"
	class_operation package explicit_return_type "int"
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7009666 "toLowerCaseCharArray"
	class_operation package explicit_return_type "char"
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7009794 "toUpperCaseCharArray"
	class_operation package explicit_return_type "char"
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7009922 "lookUpTable"
	class_operation private explicit_return_type "char"
	nparams 4
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	  param inout name "bLowerCasing" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7010050 "isConditionMet"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	  param in name "condition" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7010178 "isFinalCased"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the \"Final_Cased\" condition

Specification: Within the closest word boundaries containing C, there is a cased
letter before C, and there is no cased letter after C.

Regular Expression:
  Before C: [{cased==true}][{wordBoundary!=true}]*
  After C: !([{wordBoundary!=true}]*[{cased}])
"
      end

      operation 7010306 "isAfterI"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the \"After_I\" condition

Specification: The last preceding base character was an uppercase I,
and there is no intervening combining character class 230 (ABOVE).

Regular Expression:
  Before C: [I]([{cc!=230}&{cc!=0}])*
"
      end

      operation 7010434 "isAfterSoftDotted"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the \"After_Soft_Dotted\" condition

Specification: The last preceding character with combining class
of zero before C was Soft_Dotted, and there is no intervening
combining character class 230 (ABOVE).

Regular Expression:
  Before C: [{Soft_Dotted==true}]([{cc!=230}&{cc!=0}])*
"
      end

      operation 7010562 "isMoreAbove"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the \"More_Above\" condition

Specification: C is followed by one or more characters of combining
class 230 (ABOVE) in the combining character sequence.

Regular Expression:
  After C: [{cc!=0}]*[{cc==230}]
"
      end

      operation 7010690 "isBeforeDot"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "src" type class_ref 128130 // String
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements the \"Before_Dot\" condition

Specification: C is followed by <code>U+0307 COMBINING DOT ABOVE</code>.
Any sequence of characters with a combining class that is
neither 0 nor 230 may intervene between the current character
and the combining dot above.

Regular Expression:
  After C: ([{cc!=230}&{cc!=0}])*[\\u0307]
"
      end

      operation 7010818 "isCased"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examines whether a character is 'cased'.

A character C is defined to be 'cased' if and only if at least one of
following are true for C: uppercase==true, or lowercase==true, or
general_category==titlecase_letter.

The uppercase and lowercase property values are specified in the data
file DerivedCoreProperties.txt in the Unicode Character Database.
"
      end

      operation 7010946 "isSoftDotted"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 932738 "Deprecated"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(value={CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE})
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A program element annotated &#64;Deprecated is one that programmers
are discouraged from using, typically because it is dangerous,
or because a better alternative exists.  Compilers warn when a
deprecated program element is used or overridden in non-deprecated code.

@author  Neal Gafter
@since 1.5
@jls 9.6.3.6 @Deprecated
"
    end

    class 932866 "EnumConstantNotPresentException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"rawtypes\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to access an enum constant by name
and the enum type contains no constant with the specified name.
This exception can be thrown by the {@linkplain
java.lang.reflect.AnnotatedElement API used to read annotations
reflectively}.

@author  Josh Bloch
@see     java.lang.reflect.AnnotatedElement
@since   1.5

 rawtypes are part of the public api "
      classrelation 3156354 // <generalisation>
	relation 3156354 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3156354 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1672066 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6046998521960521108L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3156482 // enumType (<unidirectional association>)
	relation 3156482 --->
	  a role_name "enumType" private
	    comment "
The type of the missing enum constant.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Enum> ${name}${value};
"
	    classrelation_ref 3156482 // enumType (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 3156610 // constantName (<unidirectional association>)
	relation 3156610 --->
	  a role_name "constantName" private
	    comment "
The name of the missing enum constant.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3156610 // constantName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7017346 "EnumConstantNotPresentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "enumType" type class_ref 130818 // Class
	  param inout name "constantName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends Enum> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <tt>EnumConstantNotPresentException</tt> for the
specified constant.

@param enumType the type of the missing enum constant
@param constantName the name of the missing enum constant
"
      end

      operation 7017474 "enumType"
	public return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Enum> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the missing enum constant.

@return the type of the missing enum constant
"
      end

      operation 7017602 "constantName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the missing enum constant.

@return the name of the missing enum constant
"
      end
    end

    class 932994 "FunctionalInterface"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An informative annotation type used to indicate that an interface
type declaration is intended to be a <i>functional interface</i> as
defined by the Java Language Specification.

Conceptually, a functional interface has exactly one abstract
method.  Since {@linkplain java.lang.reflect.Method#isDefault()
default methods} have an implementation, they are not abstract.  If
an interface declares an abstract method overriding one of the
public methods of {@code java.lang.Object}, that also does
<em>not</em> count toward the interface's abstract method count
since any implementation of the interface will have an
implementation from {@code java.lang.Object} or elsewhere.

<p>Note that instances of functional interfaces can be created with
lambda expressions, method references, or constructor references.

<p>If a type is annotated with this annotation type, compilers are
required to generate an error message unless:

<ul>
<li> The type is an interface type and not an annotation type, enum, or class.
<li> The annotated type satisfies the requirements of a functional interface.
</ul>

<p>However, the compiler will treat any interface meeting the
definition of a functional interface as a functional interface
regardless of whether or not a {@code FunctionalInterface}
annotation is present on the interface declaration.

@jls 4.3.2. The Class Object
@jls 9.8 Functional Interfaces
@jls 9.4.3 Interface Method Body
@since 1.8
"
    end

    class 933122 "IllegalAccessError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if an application attempts to access or modify a field, or
to call a method that it does not have access to.
<p>
Normally, this error is caught by the compiler; this error can
only occur at run time if the definition of a class has
incompatibly changed.

@author  unascribed
@since   JDK1.0
"
      classrelation 3157378 // <generalisation>
	relation 3157378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3157378 // <generalisation>
	  b parent class_ref 928642 // IncompatibleClassChangeError
      end

      attribute 1673858 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8988904074992417891L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7022338 "IllegalAccessError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalAccessError</code> with no detail message.
"
      end

      operation 7022466 "IllegalAccessError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalAccessError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 933250 "IllegalMonitorStateException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that a thread has attempted to wait on an
object's monitor or to notify other threads waiting on an object's
monitor without owning the specified monitor.

@author  unascribed
@see     java.lang.Object#notify()
@see     java.lang.Object#notifyAll()
@see     java.lang.Object#wait()
@see     java.lang.Object#wait(long)
@see     java.lang.Object#wait(long, int)
@since   JDK1.0
"
      classrelation 3157762 // <generalisation>
	relation 3157762 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3157762 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1674242 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3713306369498869069L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7023362 "IllegalMonitorStateException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalMonitorStateException</code> with no
detail message.
"
      end

      operation 7023490 "IllegalMonitorStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalMonitorStateException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 933378 "IllegalThreadStateException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that a thread is not in an appropriate state
for the requested operation. See, for example, the
<code>suspend</code> and <code>resume</code> methods in class
<code>Thread</code>.

@author  unascribed
@see     java.lang.Thread#resume()
@see     java.lang.Thread#suspend()
@since   JDK1.0
"
      classrelation 3157890 // <generalisation>
	relation 3157890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3157890 // <generalisation>
	  b parent class_ref 187778 // IllegalArgumentException
      end

      attribute 1674370 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7626246362397460174L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7023618 "IllegalThreadStateException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalThreadStateException</code> with no
detail message.
"
      end

      operation 7023746 "IllegalThreadStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IllegalThreadStateException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 933506 "InheritableThreadLocal"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 129282 // ThreadLocal
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class extends <tt>ThreadLocal</tt> to provide inheritance of values
from parent thread to child thread: when a child thread is created, the
child receives initial values for all inheritable thread-local variables
for which the parent has values.  Normally the child's values will be
identical to the parent's; however, the child's value can be made an
arbitrary function of the parent's by overriding the <tt>childValue</tt>
method in this class.

<p>Inheritable thread-local variables are used in preference to
ordinary thread-local variables when the per-thread-attribute being
maintained in the variable (e.g., User ID, Transaction ID) must be
automatically transmitted to any child threads that are created.

@author  Josh Bloch and Doug Lea
@see     ThreadLocal
@since   1.2
"
      classrelation 3158786 // <realization>
	relation 3158786 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3158786 // <realization>
	  b parent class_ref 129282 // ThreadLocal
      end

      operation 7027714 "childValue"
	cpp_inline protected explicit_return_type "T"
	nparams 1
	  param inout name "parentValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the child's initial value for this inheritable thread-local
variable as a function of the parent's value at the time the child
thread is created.  This method is called from within the parent
thread before the child is started.
<p>
This method merely returns its input argument, and should be overridden
if a different behavior is desired.

@param parentValue the parent thread's value
@return the child thread's initial value
"
      end

      operation 7027842 "getMap"
	cpp_inline package return_type class_ref 129410 // ThreadLocalMap
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the map associated with a ThreadLocal.

@param t the current thread
"
      end

      operation 7027970 "createMap"
	cpp_inline package explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 128642 // Thread
	  param inout name "firstValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the map associated with a ThreadLocal.

@param t the current thread
@param firstValue value for the initial entry of the table.
"
      end
    end

    class 934018 "InstantiationError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to use the Java <code>new</code>
construct to instantiate an abstract class or an interface.
<p>
Normally, this error is caught by the compiler; this error can
only occur at run time if the definition of a class has
incompatibly changed.

@author  unascribed
@since   JDK1.0
"
      classrelation 3158914 // <generalisation>
	relation 3158914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3158914 // <generalisation>
	  b parent class_ref 928642 // IncompatibleClassChangeError
      end

      attribute 1675138 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4885810657349421204L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7028098 "InstantiationError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InstantiationError</code> with no detail  message.
"
      end

      operation 7028226 "InstantiationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InstantiationError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 934274 "InternalError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate some unexpected internal error has occurred in
the Java Virtual Machine.

@author  unascribed
@since   JDK1.0
"
      classrelation 3159810 // <generalisation>
	relation 3159810 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3159810 // <generalisation>
	  b parent class_ref 934402 // VirtualMachineError
      end

      attribute 1677058 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9062593416125562365L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7036034 "InternalError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InternalError</code> with no detail message.
"
      end

      operation 7036162 "InternalError"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>InternalError</code> with the specified
detail message.

@param   message   the detail message.
"
      end

      operation 7036290 "InternalError"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InternalError} with the specified detail
message and cause.  <p>Note that the detail message associated
with {@code cause} is <i>not</i> automatically incorporated in
this error's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.8
"
      end

      operation 7036418 "InternalError"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code InternalError} with the specified cause
and a detail message of {@code (cause==null ? null :
cause.toString())} (which typically contains the class and
detail message of {@code cause}).

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.8
"
      end
    end

    class 934402 "VirtualMachineError"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown to indicate that the Java Virtual Machine is broken or has
run out of resources necessary for it to continue operating.


@author  Frank Yellin
@since   JDK1.0
"
      classrelation 3159682 // <generalisation>
	relation 3159682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3159682 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 1676930 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4161983926571568670L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7035522 "VirtualMachineError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>VirtualMachineError</code> with no detail message.
"
      end

      operation 7035650 "VirtualMachineError"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>VirtualMachineError</code> with the specified
detail message.

@param   message   the detail message.
"
      end

      operation 7035778 "VirtualMachineError"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@code VirtualMachineError} with the specified
detail message and cause.  <p>Note that the detail message
associated with {@code cause} is <i>not</i> automatically
incorporated in this error's detail message.

@param  message the detail message (which is saved for later retrieval
        by the {@link #getMessage()} method).
@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.8
"
      end

      operation 7035906 "VirtualMachineError"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an a {@code VirtualMachineError} with the specified
cause and a detail message of {@code (cause==null ? null :
cause.toString())} (which typically contains the class and
detail message of {@code cause}).

@param  cause the cause (which is saved for later retrieval by the
        {@link #getCause()} method).  (A {@code null} value is
        permitted, and indicates that the cause is nonexistent or
        unknown.)
@since  1.8
"
      end
    end

    class 934658 "Math"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class {@code Math} contains methods for performing basic
numeric operations such as the elementary exponential, logarithm,
square root, and trigonometric functions.

<p>Unlike some of the numeric methods of class
{@code StrictMath}, all implementations of the equivalent
functions of class {@code Math} are not defined to return the
bit-for-bit same results.  This relaxation permits
better-performing implementations where strict reproducibility is
not required.

<p>By default many of the {@code Math} methods simply call
the equivalent method in {@code StrictMath} for their
implementation.  Code generators are encouraged to use
platform-specific native libraries or microprocessor instructions,
where available, to provide higher-performance implementations of
{@code Math} methods.  Such higher-performance
implementations still must conform to the specification for
{@code Math}.

<p>The quality of implementation specifications concern two
properties, accuracy of the returned result and monotonicity of the
method.  Accuracy of the floating-point {@code Math} methods is
measured in terms of <i>ulps</i>, units in the last place.  For a
given floating-point format, an {@linkplain #ulp(double) ulp} of a
specific real number value is the distance between the two
floating-point values bracketing that numerical value.  When
discussing the accuracy of a method as a whole rather than at a
specific argument, the number of ulps cited is for the worst-case
error at any argument.  If a method always has an error less than
0.5 ulps, the method always returns the floating-point number
nearest the exact result; such a method is <i>correctly
rounded</i>.  A correctly rounded method is generally the best a
floating-point approximation can be; however, it is impractical for
many floating-point methods to be correctly rounded.  Instead, for
the {@code Math} class, a larger error bound of 1 or 2 ulps is
allowed for certain methods.  Informally, with a 1 ulp error bound,
when the exact result is a representable number, the exact result
should be returned as the computed result; otherwise, either of the
two floating-point values which bracket the exact result may be
returned.  For exact results large in magnitude, one of the
endpoints of the bracket may be infinite.  Besides accuracy at
individual arguments, maintaining proper relations between the
method at different arguments is also important.  Therefore, most
methods with more than 0.5 ulp errors are required to be
<i>semi-monotonic</i>: whenever the mathematical function is
non-decreasing, so is the floating-point approximation, likewise,
whenever the mathematical function is non-increasing, so is the
floating-point approximation.  Not all approximations that have 1
ulp accuracy will automatically meet the monotonicity requirements.

<p>
The platform uses signed two's complement integer arithmetic with
int and long primitive types.  The developer should choose
the primitive type to ensure that arithmetic operations consistently
produce correct results, which in some cases means the operations
will not overflow the range of values of the computation.
The best practice is to choose the primitive type and algorithm to avoid
overflow. In cases where the size is {@code int} or {@code long} and
overflow errors need to be detected, the methods {@code addExact},
{@code subtractExact}, {@code multiplyExact}, and {@code toIntExact}
throw an {@code ArithmeticException} when the results overflow.
For other arithmetic operations such as divide, absolute value,
increment, decrement, and negation overflow occurs only with
a specific minimum or maximum value and should be checked against
the minimum or maximum as appropriate.

@author  unascribed
@author  Joseph D. Darcy
@since   JDK1.0
"
      operation 7043714 "Math"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Don't let anyone instantiate this class.
"
      end

      attribute 1678082 "E"
	class_attribute const_attribute public explicit_type "double"
	init_value " 2.7182818284590452354"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The {@code double} value that is closer than any other to
<i>e</i>, the base of the natural logarithms.

"
      end

      attribute 1678210 "PI"
	class_attribute const_attribute public explicit_type "double"
	init_value " 3.14159265358979323846"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The {@code double} value that is closer than any other to
<i>pi</i>, the ratio of the circumference of a circle to its
diameter.

"
      end

      operation 7043842 "sin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trigonometric sine of an angle.  Special cases:
<ul><li>If the argument is NaN or an infinity, then the
result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   an angle, in radians.
@return  the sine of the argument.
"
      end

      operation 7043970 "cos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trigonometric cosine of an angle. Special cases:
<ul><li>If the argument is NaN or an infinity, then the
result is NaN.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   an angle, in radians.
@return  the cosine of the argument.
"
      end

      operation 7044098 "tan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trigonometric tangent of an angle.  Special cases:
<ul><li>If the argument is NaN or an infinity, then the result
is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   an angle, in radians.
@return  the tangent of the argument.
"
      end

      operation 7044226 "asin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arc sine of a value; the returned angle is in the
range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:
<ul><li>If the argument is NaN or its absolute value is greater
than 1, then the result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   the value whose arc sine is to be returned.
@return  the arc sine of the argument.
"
      end

      operation 7044354 "acos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arc cosine of a value; the returned angle is in the
range 0.0 through <i>pi</i>.  Special case:
<ul><li>If the argument is NaN or its absolute value is greater
than 1, then the result is NaN.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   the value whose arc cosine is to be returned.
@return  the arc cosine of the argument.
"
      end

      operation 7044482 "atan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the arc tangent of a value; the returned angle is in the
range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:
<ul><li>If the argument is NaN, then the result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   the value whose arc tangent is to be returned.
@return  the arc tangent of the argument.
"
      end

      operation 7044610 "toRadians"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angdeg" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an angle measured in degrees to an approximately
equivalent angle measured in radians.  The conversion from
degrees to radians is generally inexact.

@param   angdeg   an angle, in degrees
@return  the measurement of the angle {@code angdeg}
         in radians.
@since   1.2
"
      end

      operation 7044738 "toDegrees"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angrad" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an angle measured in radians to an approximately
equivalent angle measured in degrees.  The conversion from
radians to degrees is generally inexact; users should
<i>not</i> expect {@code cos(toRadians(90.0))} to exactly
equal {@code 0.0}.

@param   angrad   an angle, in radians
@return  the measurement of the angle {@code angrad}
         in degrees.
@since   1.2
"
      end

      operation 7044866 "exp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns Euler's number <i>e</i> raised to the power of a
{@code double} value.  Special cases:
<ul><li>If the argument is NaN, the result is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is negative infinity, then the result is
positive zero.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   the exponent to raise <i>e</i> to.
@return  the value <i>e</i><sup>{@code a}</sup>,
         where <i>e</i> is the base of the natural logarithms.
"
      end

      operation 7044994 "log"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the natural logarithm (base <i>e</i>) of a {@code double}
value.  Special cases:
<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is positive zero or negative zero, then the
result is negative infinity.</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   a value
@return  the value ln&nbsp;{@code a}, the natural logarithm of
         {@code a}.
"
      end

      operation 7045122 "log10"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base 10 logarithm of a {@code double} value.
Special cases:

<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is positive zero or negative zero, then the
result is negative infinity.
<li> If the argument is equal to 10<sup><i>n</i></sup> for
integer <i>n</i>, then the result is <i>n</i>.
</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   a value
@return  the base 10 logarithm of  {@code a}.
@since 1.5
"
      end

      operation 7045250 "sqrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the correctly rounded positive square root of a
{@code double} value.
Special cases:
<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is positive
infinity.
<li>If the argument is positive zero or negative zero, then the
result is the same as the argument.</ul>
Otherwise, the result is the {@code double} value closest to
the true mathematical square root of the argument value.

@param   a   a value.
@return  the positive square root of {@code a}.
         If the argument is NaN or less than zero, the result is NaN.
"
      end

      operation 7045378 "cbrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cube root of a {@code double} value.  For
positive finite {@code x}, {@code cbrt(-x) ==
-cbrt(x)}; that is, the cube root of a negative value is
the negative of the cube root of that value's magnitude.

Special cases:

<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is an infinity
with the same sign as the argument.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

<p>The computed result must be within 1 ulp of the exact result.

@param   a   a value.
@return  the cube root of {@code a}.
@since 1.5
"
      end

      operation 7045506 "IEEEremainder"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "f1" explicit_type "double"
	  param in name "f2" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the remainder operation on two arguments as prescribed
by the IEEE 754 standard.
The remainder value is mathematically equal to
<code>f1&nbsp;-&nbsp;f2</code>&nbsp;&times;&nbsp;<i>n</i>,
where <i>n</i> is the mathematical integer closest to the exact
mathematical value of the quotient {@code f1/f2}, and if two
mathematical integers are equally close to {@code f1/f2},
then <i>n</i> is the integer that is even. If the remainder is
zero, its sign is the same as the sign of the first argument.
Special cases:
<ul><li>If either argument is NaN, or the first argument is infinite,
or the second argument is positive zero or negative zero, then the
result is NaN.
<li>If the first argument is finite and the second argument is
infinite, then the result is the same as the first argument.</ul>

@param   f1   the dividend.
@param   f2   the divisor.
@return  the remainder when {@code f1} is divided by
         {@code f2}.
"
      end

      operation 7045634 "ceil"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smallest (closest to negative infinity)
{@code double} value that is greater than or equal to the
argument and is equal to a mathematical integer. Special cases:
<ul><li>If the argument value is already equal to a
mathematical integer, then the result is the same as the
argument.  <li>If the argument is NaN or an infinity or
positive zero or negative zero, then the result is the same as
the argument.  <li>If the argument value is less than zero but
greater than -1.0, then the result is negative zero.</ul> Note
that the value of {@code Math.ceil(x)} is exactly the
value of {@code -Math.floor(-x)}.


@param   a   a value.
@return  the smallest (closest to negative infinity)
         floating-point value that is greater than or equal to
         the argument and is equal to a mathematical integer.
"
      end

      operation 7045762 "floor"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code double} value that is less than or equal to the
argument and is equal to a mathematical integer. Special cases:
<ul><li>If the argument value is already equal to a
mathematical integer, then the result is the same as the
argument.  <li>If the argument is NaN or an infinity or
positive zero or negative zero, then the result is the same as
the argument.</ul>

@param   a   a value.
@return  the largest (closest to positive infinity)
         floating-point value that less than or equal to the argument
         and is equal to a mathematical integer.
"
      end

      operation 7045890 "rint"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code double} value that is closest in value
to the argument and is equal to a mathematical integer. If two
{@code double} values that are mathematical integers are
equally close, the result is the integer value that is
even. Special cases:
<ul><li>If the argument value is already equal to a mathematical
integer, then the result is the same as the argument.
<li>If the argument is NaN or an infinity or positive zero or negative
zero, then the result is the same as the argument.</ul>

@param   a   a {@code double} value.
@return  the closest floating-point value to {@code a} that is
         equal to a mathematical integer.
"
      end

      operation 7046018 "atan2"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "y" explicit_type "double"
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the angle <i>theta</i> from the conversion of rectangular
coordinates ({@code x},&nbsp;{@code y}) to polar
coordinates (r,&nbsp;<i>theta</i>).
This method computes the phase <i>theta</i> by computing an arc tangent
of {@code y/x} in the range of -<i>pi</i> to <i>pi</i>. Special
cases:
<ul><li>If either argument is NaN, then the result is NaN.
<li>If the first argument is positive zero and the second argument
is positive, or the first argument is positive and finite and the
second argument is positive infinity, then the result is positive
zero.
<li>If the first argument is negative zero and the second argument
is positive, or the first argument is negative and finite and the
second argument is positive infinity, then the result is negative zero.
<li>If the first argument is positive zero and the second argument
is negative, or the first argument is positive and finite and the
second argument is negative infinity, then the result is the
{@code double} value closest to <i>pi</i>.
<li>If the first argument is negative zero and the second argument
is negative, or the first argument is negative and finite and the
second argument is negative infinity, then the result is the
{@code double} value closest to -<i>pi</i>.
<li>If the first argument is positive and the second argument is
positive zero or negative zero, or the first argument is positive
infinity and the second argument is finite, then the result is the
{@code double} value closest to <i>pi</i>/2.
<li>If the first argument is negative and the second argument is
positive zero or negative zero, or the first argument is negative
infinity and the second argument is finite, then the result is the
{@code double} value closest to -<i>pi</i>/2.
<li>If both arguments are positive infinity, then the result is the
{@code double} value closest to <i>pi</i>/4.
<li>If the first argument is positive infinity and the second argument
is negative infinity, then the result is the {@code double}
value closest to 3*<i>pi</i>/4.
<li>If the first argument is negative infinity and the second argument
is positive infinity, then the result is the {@code double} value
closest to -<i>pi</i>/4.
<li>If both arguments are negative infinity, then the result is the
{@code double} value closest to -3*<i>pi</i>/4.</ul>

<p>The computed result must be within 2 ulps of the exact result.
Results must be semi-monotonic.

@param   y   the ordinate coordinate
@param   x   the abscissa coordinate
@return  the <i>theta</i> component of the point
         (<i>r</i>,&nbsp;<i>theta</i>)
         in polar coordinates that corresponds to the point
         (<i>x</i>,&nbsp;<i>y</i>) in Cartesian coordinates.
"
      end

      operation 7046146 "pow"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the first argument raised to the power of the
second argument. Special cases:

<ul><li>If the second argument is positive or negative zero, then the
result is 1.0.
<li>If the second argument is 1.0, then the result is the same as the
first argument.
<li>If the second argument is NaN, then the result is NaN.
<li>If the first argument is NaN and the second argument is nonzero,
then the result is NaN.

<li>If
<ul>
<li>the absolute value of the first argument is greater than 1
and the second argument is positive infinity, or
<li>the absolute value of the first argument is less than 1 and
the second argument is negative infinity,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the absolute value of the first argument is greater than 1 and
the second argument is negative infinity, or
<li>the absolute value of the
first argument is less than 1 and the second argument is positive
infinity,
</ul>
then the result is positive zero.

<li>If the absolute value of the first argument equals 1 and the
second argument is infinite, then the result is NaN.

<li>If
<ul>
<li>the first argument is positive zero and the second argument
is greater than zero, or
<li>the first argument is positive infinity and the second
argument is less than zero,
</ul>
then the result is positive zero.

<li>If
<ul>
<li>the first argument is positive zero and the second argument
is less than zero, or
<li>the first argument is positive infinity and the second
argument is greater than zero,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is greater than zero but not a finite odd integer, or
<li>the first argument is negative infinity and the second
argument is less than zero but not a finite odd integer,
</ul>
then the result is positive zero.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is a positive finite odd integer, or
<li>the first argument is negative infinity and the second
argument is a negative finite odd integer,
</ul>
then the result is negative zero.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is less than zero but not a finite odd integer, or
<li>the first argument is negative infinity and the second
argument is greater than zero but not a finite odd integer,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is a negative finite odd integer, or
<li>the first argument is negative infinity and the second
argument is a positive finite odd integer,
</ul>
then the result is negative infinity.

<li>If the first argument is finite and less than zero
<ul>
<li> if the second argument is a finite even integer, the
result is equal to the result of raising the absolute value of
the first argument to the power of the second argument

<li>if the second argument is a finite odd integer, the result
is equal to the negative of the result of raising the absolute
value of the first argument to the power of the second
argument

<li>if the second argument is finite and not an integer, then
the result is NaN.
</ul>

<li>If both arguments are integers, then the result is exactly equal
to the mathematical result of raising the first argument to the power
of the second argument if that result can in fact be represented
exactly as a {@code double} value.</ul>

<p>(In the foregoing descriptions, a floating-point value is
considered to be an integer if and only if it is finite and a
fixed point of the method {@link #ceil ceil} or,
equivalently, a fixed point of the method {@link #floor
floor}. A value is a fixed point of a one-argument
method if and only if the result of applying the method to the
value is equal to the value.)

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   a   the base.
@param   b   the exponent.
@return  the value {@code a}<sup>{@code b}</sup>.
"
      end

      operation 7046274 "round"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest {@code int} to the argument, with ties
rounding to positive infinity.

<p>
Special cases:
<ul><li>If the argument is NaN, the result is 0.
<li>If the argument is negative infinity or any value less than or
equal to the value of {@code Integer.MIN_VALUE}, the result is
equal to the value of {@code Integer.MIN_VALUE}.
<li>If the argument is positive infinity or any value greater than or
equal to the value of {@code Integer.MAX_VALUE}, the result is
equal to the value of {@code Integer.MAX_VALUE}.</ul>

@param   a   a floating-point value to be rounded to an integer.
@return  the value of the argument rounded to the nearest
         {@code int} value.
@see     java.lang.Integer#MAX_VALUE
@see     java.lang.Integer#MIN_VALUE
"
      end

      operation 7046402 "round"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest {@code long} to the argument, with ties
rounding to positive infinity.

<p>Special cases:
<ul><li>If the argument is NaN, the result is 0.
<li>If the argument is negative infinity or any value less than or
equal to the value of {@code Long.MIN_VALUE}, the result is
equal to the value of {@code Long.MIN_VALUE}.
<li>If the argument is positive infinity or any value greater than or
equal to the value of {@code Long.MAX_VALUE}, the result is
equal to the value of {@code Long.MAX_VALUE}.</ul>

@param   a   a floating-point value to be rounded to a
         {@code long}.
@return  the value of the argument rounded to the nearest
         {@code long} value.
@see     java.lang.Long#MAX_VALUE
@see     java.lang.Long#MIN_VALUE
"
      end

      class 934786 "RandomNumberGeneratorHolder"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3160578 // randomNumberGenerator (<unidirectional association>)
	  relation 3160578 --->
	    a role_name "randomNumberGenerator" init_value " new Random()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3160578 // randomNumberGenerator (<unidirectional association>)
	    b parent class_ref 934914 // Random
	end
      end

      operation 7046530 "random"
	class_operation public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code double} value with a positive sign, greater
than or equal to {@code 0.0} and less than {@code 1.0}.
Returned values are chosen pseudorandomly with (approximately)
uniform distribution from that range.

<p>When this method is first called, it creates a single new
pseudorandom-number generator, exactly as if by the expression

<blockquote>{@code new java.util.Random()}</blockquote>

This new pseudorandom-number generator is used thereafter for
all calls to this method and is used nowhere else.

<p>This method is properly synchronized to allow correct use by
more than one thread. However, if many threads need to generate
pseudorandom numbers at a great rate, it may reduce contention
for each thread to have its own pseudorandom-number generator.

@return  a pseudorandom {@code double} greater than or equal
to {@code 0.0} and less than {@code 1.0}.
@see Random#nextDouble()
"
      end

      operation 7046658 "addExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of its arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7046786 "addExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of its arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7046914 "subtractExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the difference of the arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value to subtract from the first
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7047042 "subtractExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the difference of the arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value to subtract from the first
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7047170 "multiplyExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the product of the arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7047298 "multiplyExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the product of the arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7047426 "incrementExact"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument incremented by one, throwing an exception if the
result overflows an {@code int}.

@param a the value to increment
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7047554 "incrementExact"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument incremented by one, throwing an exception if the
result overflows a {@code long}.

@param a the value to increment
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7047682 "decrementExact"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument decremented by one, throwing an exception if the
result overflows an {@code int}.

@param a the value to decrement
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7047810 "decrementExact"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument decremented by one, throwing an exception if the
result overflows a {@code long}.

@param a the value to decrement
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7047938 "negateExact"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the negation of the argument, throwing an exception if the
result overflows an {@code int}.

@param a the value to negate
@return the result
@throws ArithmeticException if the result overflows an int
@since 1.8
"
      end

      operation 7048066 "negateExact"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the negation of the argument, throwing an exception if the
result overflows a {@code long}.

@param a the value to negate
@return the result
@throws ArithmeticException if the result overflows a long
@since 1.8
"
      end

      operation 7048194 "toIntExact"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the {@code long} argument;
throwing an exception if the value overflows an {@code int}.

@param value the long value
@return the argument as an int
@throws ArithmeticException if the {@code argument} overflows an int
@since 1.8
"
      end

      operation 7048322 "floorDiv"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code int} value that is less than or equal to the algebraic quotient.
There is one special case, if the dividend is the
{@linkplain Integer#MIN_VALUE Integer.MIN_VALUE} and the divisor is {@code -1},
then integer overflow occurs and
the result is equal to the {@code Integer.MIN_VALUE}.
<p>
Normal integer division operates under the round to zero rounding mode
(truncation).  This operation instead acts under the round toward
negative infinity (floor) rounding mode.
The floor rounding mode gives different results than truncation
when the exact result is negative.
<ul>
  <li>If the signs of the arguments are the same, the results of
      {@code floorDiv} and the {@code /} operator are the same.  <br>
      For example, {@code floorDiv(4, 3) == 1} and {@code (4 / 3) == 1}.</li>
  <li>If the signs of the arguments are different,  the quotient is negative and
      {@code floorDiv} returns the integer less than or equal to the quotient
      and the {@code /} operator returns the integer closest to zero.<br>
      For example, {@code floorDiv(-4, 3) == -2},
      whereas {@code (-4 / 3) == -1}.
  </li>
</ul>
<p>

@param x the dividend
@param y the divisor
@return the largest (closest to positive infinity)
{@code int} value that is less than or equal to the algebraic quotient.
@throws ArithmeticException if the divisor {@code y} is zero
@see #floorMod(int, int)
@see #floor(double)
@since 1.8
"
      end

      operation 7048450 "floorDiv"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code long} value that is less than or equal to the algebraic quotient.
There is one special case, if the dividend is the
{@linkplain Long#MIN_VALUE Long.MIN_VALUE} and the divisor is {@code -1},
then integer overflow occurs and
the result is equal to the {@code Long.MIN_VALUE}.
<p>
Normal integer division operates under the round to zero rounding mode
(truncation).  This operation instead acts under the round toward
negative infinity (floor) rounding mode.
The floor rounding mode gives different results than truncation
when the exact result is negative.
<p>
For examples, see {@link #floorDiv(int, int)}.

@param x the dividend
@param y the divisor
@return the largest (closest to positive infinity)
{@code long} value that is less than or equal to the algebraic quotient.
@throws ArithmeticException if the divisor {@code y} is zero
@see #floorMod(long, long)
@see #floor(double)
@since 1.8
"
      end

      operation 7048578 "floorMod"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floor modulus of the {@code int} arguments.
<p>
The floor modulus is {@code x - (floorDiv(x, y) * y)},
has the same sign as the divisor {@code y}, and
is in the range of {@code -abs(y) < r < +abs(y)}.

<p>
The relationship between {@code floorDiv} and {@code floorMod} is such that:
<ul>
  <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}
</ul>
<p>
The difference in values between {@code floorMod} and
the {@code %} operator is due to the difference between
{@code floorDiv} that returns the integer less than or equal to the quotient
and the {@code /} operator that returns the integer closest to zero.
<p>
Examples:
<ul>
  <li>If the signs of the arguments are the same, the results
      of {@code floorMod} and the {@code %} operator are the same.  <br>
      <ul>
      <li>{@code floorMod(4, 3) == 1}; &nbsp; and {@code (4 % 3) == 1}</li>
      </ul>
  <li>If the signs of the arguments are different, the results differ from the {@code %} operator.<br>
     <ul>
     <li>{@code floorMod(+4, -3) == -2}; &nbsp; and {@code (+4 % -3) == +1} </li>
     <li>{@code floorMod(-4, +3) == +2}; &nbsp; and {@code (-4 % +3) == -1} </li>
     <li>{@code floorMod(-4, -3) == -1}; &nbsp; and {@code (-4 % -3) == -1 } </li>
     </ul>
  </li>
</ul>
<p>
If the signs of arguments are unknown and a positive modulus
is needed it can be computed as {@code (floorMod(x, y) + abs(y)) % abs(y)}.

@param x the dividend
@param y the divisor
@return the floor modulus {@code x - (floorDiv(x, y) * y)}
@throws ArithmeticException if the divisor {@code y} is zero
@see #floorDiv(int, int)
@since 1.8
"
      end

      operation 7048706 "floorMod"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floor modulus of the {@code long} arguments.
<p>
The floor modulus is {@code x - (floorDiv(x, y) * y)},
has the same sign as the divisor {@code y}, and
is in the range of {@code -abs(y) < r < +abs(y)}.

<p>
The relationship between {@code floorDiv} and {@code floorMod} is such that:
<ul>
  <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}
</ul>
<p>
For examples, see {@link #floorMod(int, int)}.

@param x the dividend
@param y the divisor
@return the floor modulus {@code x - (floorDiv(x, y) * y)}
@throws ArithmeticException if the divisor {@code y} is zero
@see #floorDiv(long, long)
@since 1.8
"
      end

      operation 7048834 "abs"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of an {@code int} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.

<p>Note that if the argument is equal to the value of
{@link Integer#MIN_VALUE}, the most negative representable
{@code int} value, the result is that same value, which is
negative.

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7048962 "abs"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code long} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.

<p>Note that if the argument is equal to the value of
{@link Long#MIN_VALUE}, the most negative representable
{@code long} value, the result is that same value, which
is negative.

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7049090 "abs"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code float} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.
Special cases:
<ul><li>If the argument is positive zero or negative zero, the
result is positive zero.
<li>If the argument is infinite, the result is positive infinity.
<li>If the argument is NaN, the result is NaN.</ul>
In other words, the result is the same as the value of the expression:
<p>{@code Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(a))}

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7049218 "abs"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code double} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.
Special cases:
<ul><li>If the argument is positive zero or negative zero, the result
is positive zero.
<li>If the argument is infinite, the result is positive infinity.
<li>If the argument is NaN, the result is NaN.</ul>
In other words, the result is the same as the value of the expression:
<p>{@code Double.longBitsToDouble((Double.doubleToLongBits(a)<<1)>>>1)}

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7049346 "max"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code int} values. That is, the
result is the argument closer to the value of
{@link Integer#MAX_VALUE}. If the arguments have the same value,
the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7049474 "max"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code long} values. That is, the
result is the argument closer to the value of
{@link Long#MAX_VALUE}. If the arguments have the same value,
the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      attribute 1678338 "negativeZeroFloatBits"
	class_attribute private explicit_type "long"
	init_value " Float.floatToRawIntBits(-0.0f)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Use raw bit-wise conversions on guaranteed non-NaN arguments.
"
      end

      attribute 1678466 "negativeZeroDoubleBits"
	class_attribute private explicit_type "long"
	init_value " Double.doubleToRawLongBits(-0.0d)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7049602 "max"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code float} values.  That is,
the result is the argument closer to positive infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other negative zero, the
result is positive zero.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7049730 "max"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code double} values.  That
is, the result is the argument closer to positive infinity. If
the arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other negative zero, the
result is positive zero.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7049858 "min"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code int} values. That is,
the result the argument closer to the value of
{@link Integer#MIN_VALUE}.  If the arguments have the same
value, the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7049986 "min"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code long} values. That is,
the result is the argument closer to the value of
{@link Long#MIN_VALUE}. If the arguments have the same
value, the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7050114 "min"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code float} values.  That is,
the result is the value closer to negative infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero.  If
one argument is positive zero and the other is negative zero,
the result is negative zero.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7050242 "min"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code double} values.  That
is, the result is the value closer to negative infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other is negative zero, the
result is negative zero.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7050370 "ulp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of an ulp of the argument.  An ulp, unit in
the last place, of a {@code double} value is the positive
distance between this floating-point value and the {@code
double} value next larger in magnitude.  Note that for non-NaN
<i>x</i>, <code>ulp(-<i>x</i>) == ulp(<i>x</i>)</code>.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive or negative infinity, then the
result is positive infinity.
<li> If the argument is positive or negative zero, then the result is
{@code Double.MIN_VALUE}.
<li> If the argument is &plusmn;{@code Double.MAX_VALUE}, then
the result is equal to 2<sup>971</sup>.
</ul>

@param d the floating-point value whose ulp is to be returned
@return the size of an ulp of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7050498 "ulp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of an ulp of the argument.  An ulp, unit in
the last place, of a {@code float} value is the positive
distance between this floating-point value and the {@code
float} value next larger in magnitude.  Note that for non-NaN
<i>x</i>, <code>ulp(-<i>x</i>) == ulp(<i>x</i>)</code>.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive or negative infinity, then the
result is positive infinity.
<li> If the argument is positive or negative zero, then the result is
{@code Float.MIN_VALUE}.
<li> If the argument is &plusmn;{@code Float.MAX_VALUE}, then
the result is equal to 2<sup>104</sup>.
</ul>

@param f the floating-point value whose ulp is to be returned
@return the size of an ulp of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7050626 "signum"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument; zero if the argument
is zero, 1.0 if the argument is greater than zero, -1.0 if the
argument is less than zero.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive zero or negative zero, then the
     result is the same as the argument.
</ul>

@param d the floating-point value whose signum is to be returned
@return the signum function of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7050754 "signum"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument; zero if the argument
is zero, 1.0f if the argument is greater than zero, -1.0f if the
argument is less than zero.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive zero or negative zero, then the
     result is the same as the argument.
</ul>

@param f the floating-point value whose signum is to be returned
@return the signum function of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7050882 "sinh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hyperbolic sine of a {@code double} value.
The hyperbolic sine of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup></i>)/2
where <i>e</i> is {@linkplain Math#E Euler's number}.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is an infinity
with the same sign as the argument.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

<p>The computed result must be within 2.5 ulps of the exact result.

@param   x The number whose hyperbolic sine is to be returned.
@return  The hyperbolic sine of {@code x}.
@since 1.5
"
      end

      operation 7051010 "cosh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hyperbolic cosine of a {@code double} value.
The hyperbolic cosine of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup></i>)/2
where <i>e</i> is {@linkplain Math#E Euler's number}.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is positive
infinity.

<li>If the argument is zero, then the result is {@code 1.0}.

</ul>

<p>The computed result must be within 2.5 ulps of the exact result.

@param   x The number whose hyperbolic cosine is to be returned.
@return  The hyperbolic cosine of {@code x}.
@since 1.5
"
      end

      operation 7051138 "tanh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hyperbolic tangent of a {@code double} value.
The hyperbolic tangent of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup></i>)/(<i>e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup></i>),
in other words, {@linkplain Math#sinh
sinh(<i>x</i>)}/{@linkplain Math#cosh cosh(<i>x</i>)}.  Note
that the absolute value of the exact tanh is always less than
1.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

<li>If the argument is positive infinity, then the result is
{@code +1.0}.

<li>If the argument is negative infinity, then the result is
{@code -1.0}.

</ul>

<p>The computed result must be within 2.5 ulps of the exact result.
The result of {@code tanh} for any finite input must have
an absolute value less than or equal to 1.  Note that once the
exact result of tanh is within 1/2 of an ulp of the limit value
of &plusmn;1, correctly signed &plusmn;{@code 1.0} should
be returned.

@param   x The number whose hyperbolic tangent is to be returned.
@return  The hyperbolic tangent of {@code x}.
@since 1.5
"
      end

      operation 7051266 "hypot"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)
without intermediate overflow or underflow.

<p>Special cases:
<ul>

<li> If either argument is infinite, then the result
is positive infinity.

<li> If either argument is NaN and neither argument is infinite,
then the result is NaN.

</ul>

<p>The computed result must be within 1 ulp of the exact
result.  If one parameter is held constant, the results must be
semi-monotonic in the other parameter.

@param x a value
@param y a value
@return sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)
without intermediate overflow or underflow
@since 1.5
"
      end

      operation 7051394 "expm1"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <i>e</i><sup>x</sup>&nbsp;-1.  Note that for values of
<i>x</i> near 0, the exact sum of
{@code expm1(x)}&nbsp;+&nbsp;1 is much closer to the true
result of <i>e</i><sup>x</sup> than {@code exp(x)}.

<p>Special cases:
<ul>
<li>If the argument is NaN, the result is NaN.

<li>If the argument is positive infinity, then the result is
positive infinity.

<li>If the argument is negative infinity, then the result is
-1.0.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.  The result of
{@code expm1} for any finite input must be greater than or
equal to {@code -1.0}.  Note that once the exact result of
<i>e</i><sup>{@code x}</sup>&nbsp;-&nbsp;1 is within 1/2
ulp of the limit value -1, {@code -1.0} should be
returned.

@param   x   the exponent to raise <i>e</i> to in the computation of
             <i>e</i><sup>{@code x}</sup>&nbsp;-1.
@return  the value <i>e</i><sup>{@code x}</sup>&nbsp;-&nbsp;1.
@since 1.5
"
      end

      operation 7051522 "log1p"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the natural logarithm of the sum of the argument and 1.
Note that for small values {@code x}, the result of
{@code log1p(x)} is much closer to the true result of ln(1
+ {@code x}) than the floating-point evaluation of
{@code log(1.0+x)}.

<p>Special cases:

<ul>

<li>If the argument is NaN or less than -1, then the result is
NaN.

<li>If the argument is positive infinity, then the result is
positive infinity.

<li>If the argument is negative one, then the result is
negative infinity.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

<p>The computed result must be within 1 ulp of the exact result.
Results must be semi-monotonic.

@param   x   a value
@return the value ln({@code x}&nbsp;+&nbsp;1), the natural
log of {@code x}&nbsp;+&nbsp;1
@since 1.5
"
      end

      operation 7051650 "copySign"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "magnitude" explicit_type "double"
	  param in name "sign" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first floating-point argument with the sign of the
second floating-point argument.  Note that unlike the {@link
StrictMath#copySign(double, double) StrictMath.copySign}
method, this method does not require NaN {@code sign}
arguments to be treated as positive values; implementations are
permitted to treat some NaN arguments as positive and other NaN
arguments as negative to allow greater performance.

@param magnitude  the parameter providing the magnitude of the result
@param sign   the parameter providing the sign of the result
@return a value with the magnitude of {@code magnitude}
and the sign of {@code sign}.
@since 1.6
"
      end

      operation 7051778 "copySign"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "magnitude" explicit_type "float"
	  param in name "sign" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first floating-point argument with the sign of the
second floating-point argument.  Note that unlike the {@link
StrictMath#copySign(float, float) StrictMath.copySign}
method, this method does not require NaN {@code sign}
arguments to be treated as positive values; implementations are
permitted to treat some NaN arguments as positive and other NaN
arguments as negative to allow greater performance.

@param magnitude  the parameter providing the magnitude of the result
@param sign   the parameter providing the sign of the result
@return a value with the magnitude of {@code magnitude}
and the sign of {@code sign}.
@since 1.6
"
      end

      operation 7051906 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased exponent used in the representation of a
{@code float}.  Special cases:

<ul>
<li>If the argument is NaN or infinite, then the result is
{@link Float#MAX_EXPONENT} + 1.
<li>If the argument is zero or subnormal, then the result is
{@link Float#MIN_EXPONENT} -1.
</ul>
@param f a {@code float} value
@return the unbiased exponent of the argument
@since 1.6
"
      end

      operation 7052034 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased exponent used in the representation of a
{@code double}.  Special cases:

<ul>
<li>If the argument is NaN or infinite, then the result is
{@link Double#MAX_EXPONENT} + 1.
<li>If the argument is zero or subnormal, then the result is
{@link Double#MIN_EXPONENT} -1.
</ul>
@param d a {@code double} value
@return the unbiased exponent of the argument
@since 1.6
"
      end

      operation 7052162 "nextAfter"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "start" explicit_type "double"
	  param in name "direction" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point number adjacent to the first
argument in the direction of the second argument.  If both
arguments compare as equal the second argument is returned.

<p>
Special cases:
<ul>
<li> If either argument is a NaN, then NaN is returned.

<li> If both arguments are signed zeros, {@code direction}
is returned unchanged (as implied by the requirement of
returning the second argument if the arguments compare as
equal).

<li> If {@code start} is
&plusmn;{@link Double#MIN_VALUE} and {@code direction}
has a value such that the result should have a smaller
magnitude, then a zero with the same sign as {@code start}
is returned.

<li> If {@code start} is infinite and
{@code direction} has a value such that the result should
have a smaller magnitude, {@link Double#MAX_VALUE} with the
same sign as {@code start} is returned.

<li> If {@code start} is equal to &plusmn;
{@link Double#MAX_VALUE} and {@code direction} has a
value such that the result should have a larger magnitude, an
infinity with same sign as {@code start} is returned.
</ul>

@param start  starting floating-point value
@param direction value indicating which of
{@code start}'s neighbors or {@code start} should
be returned
@return The floating-point number adjacent to {@code start} in the
direction of {@code direction}.
@since 1.6
"
      end

      operation 7052290 "nextAfter"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "start" explicit_type "float"
	  param in name "direction" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point number adjacent to the first
argument in the direction of the second argument.  If both
arguments compare as equal a value equivalent to the second argument
is returned.

<p>
Special cases:
<ul>
<li> If either argument is a NaN, then NaN is returned.

<li> If both arguments are signed zeros, a value equivalent
to {@code direction} is returned.

<li> If {@code start} is
&plusmn;{@link Float#MIN_VALUE} and {@code direction}
has a value such that the result should have a smaller
magnitude, then a zero with the same sign as {@code start}
is returned.

<li> If {@code start} is infinite and
{@code direction} has a value such that the result should
have a smaller magnitude, {@link Float#MAX_VALUE} with the
same sign as {@code start} is returned.

<li> If {@code start} is equal to &plusmn;
{@link Float#MAX_VALUE} and {@code direction} has a
value such that the result should have a larger magnitude, an
infinity with same sign as {@code start} is returned.
</ul>

@param start  starting floating-point value
@param direction value indicating which of
{@code start}'s neighbors or {@code start} should
be returned
@return The floating-point number adjacent to {@code start} in the
direction of {@code direction}.
@since 1.6
"
      end

      operation 7052418 "nextUp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code d} in
the direction of positive infinity.  This method is
semantically equivalent to {@code nextAfter(d,
Double.POSITIVE_INFINITY)}; however, a {@code nextUp}
implementation may run faster than its equivalent
{@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is positive infinity, the result is
positive infinity.

<li> If the argument is zero, the result is
{@link Double#MIN_VALUE}

</ul>

@param d starting floating-point value
@return The adjacent floating-point value closer to positive
infinity.
@since 1.6
"
      end

      operation 7052546 "nextUp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code f} in
the direction of positive infinity.  This method is
semantically equivalent to {@code nextAfter(f,
Float.POSITIVE_INFINITY)}; however, a {@code nextUp}
implementation may run faster than its equivalent
{@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is positive infinity, the result is
positive infinity.

<li> If the argument is zero, the result is
{@link Float#MIN_VALUE}

</ul>

@param f starting floating-point value
@return The adjacent floating-point value closer to positive
infinity.
@since 1.6
"
      end

      operation 7052674 "nextDown"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code d} in
the direction of negative infinity.  This method is
semantically equivalent to {@code nextAfter(d,
Double.NEGATIVE_INFINITY)}; however, a
{@code nextDown} implementation may run faster than its
equivalent {@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is negative infinity, the result is
negative infinity.

<li> If the argument is zero, the result is
{@code -Double.MIN_VALUE}

</ul>

@param d  starting floating-point value
@return The adjacent floating-point value closer to negative
infinity.
@since 1.8
"
      end

      operation 7052802 "nextDown"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code f} in
the direction of negative infinity.  This method is
semantically equivalent to {@code nextAfter(f,
Float.NEGATIVE_INFINITY)}; however, a
{@code nextDown} implementation may run faster than its
equivalent {@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is negative infinity, the result is
negative infinity.

<li> If the argument is zero, the result is
{@code -Float.MIN_VALUE}

</ul>

@param f  starting floating-point value
@return The adjacent floating-point value closer to negative
infinity.
@since 1.8
"
      end

      operation 7052930 "scalb"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d" explicit_type "double"
	  param in name "scaleFactor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} &times;
2<sup>{@code scaleFactor}</sup> rounded as if performed
by a single correctly rounded floating-point multiply to a
member of the double value set.  See the Java
Language Specification for a discussion of floating-point
value sets.  If the exponent of the result is between {@link
Double#MIN_EXPONENT} and {@link Double#MAX_EXPONENT}, the
answer is calculated exactly.  If the exponent of the result
would be larger than {@code Double.MAX_EXPONENT}, an
infinity is returned.  Note that if the result is subnormal,
precision may be lost; that is, when {@code scalb(x, n)}
is subnormal, {@code scalb(scalb(x, n), -n)} may not equal
<i>x</i>.  When the result is non-NaN, the result has the same
sign as {@code d}.

<p>Special cases:
<ul>
<li> If the first argument is NaN, NaN is returned.
<li> If the first argument is infinite, then an infinity of the
same sign is returned.
<li> If the first argument is zero, then a zero of the same
sign is returned.
</ul>

@param d number to be scaled by a power of two.
@param scaleFactor power of 2 used to scale {@code d}
@return {@code d} &times; 2<sup>{@code scaleFactor}</sup>
@since 1.6
"
      end

      operation 7053058 "scalb"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f" explicit_type "float"
	  param in name "scaleFactor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code f} &times;
2<sup>{@code scaleFactor}</sup> rounded as if performed
by a single correctly rounded floating-point multiply to a
member of the float value set.  See the Java
Language Specification for a discussion of floating-point
value sets.  If the exponent of the result is between {@link
Float#MIN_EXPONENT} and {@link Float#MAX_EXPONENT}, the
answer is calculated exactly.  If the exponent of the result
would be larger than {@code Float.MAX_EXPONENT}, an
infinity is returned.  Note that if the result is subnormal,
precision may be lost; that is, when {@code scalb(x, n)}
is subnormal, {@code scalb(scalb(x, n), -n)} may not equal
<i>x</i>.  When the result is non-NaN, the result has the same
sign as {@code f}.

<p>Special cases:
<ul>
<li> If the first argument is NaN, NaN is returned.
<li> If the first argument is infinite, then an infinity of the
same sign is returned.
<li> If the first argument is zero, then a zero of the same
sign is returned.
</ul>

@param f number to be scaled by a power of two.
@param scaleFactor power of 2 used to scale {@code f}
@return {@code f} &times; 2<sup>{@code scaleFactor}</sup>
@since 1.6
"
      end

      attribute 1678594 "twoToTheDoubleScaleUp"
	class_attribute package explicit_type "double"
	init_value " powerOfTwoD(512)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants used in scalb
"
      end

      attribute 1678722 "twoToTheDoubleScaleDown"
	class_attribute package explicit_type "double"
	init_value " powerOfTwoD(-512)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7053186 "powerOfTwoD"
	class_operation package explicit_return_type "double"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a floating-point power of two in the normal range.
"
      end

      operation 7053314 "powerOfTwoF"
	class_operation package explicit_return_type "float"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a floating-point power of two in the normal range.
"
      end
    end

    class 935042 "NegativeArraySizeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if an application tries to create an array with negative size.

@author  unascribed
@since   JDK1.0
"
      classrelation 3160706 // <generalisation>
	relation 3160706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3160706 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1678850 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8960118058596991861L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7053442 "NegativeArraySizeException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NegativeArraySizeException</code> with no
detail message.
"
      end

      operation 7053570 "NegativeArraySizeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NegativeArraySizeException</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 935170 "NoClassDefFoundError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if the Java Virtual Machine or a <code>ClassLoader</code> instance
tries to load in the definition of a class (as part of a normal method call
or as part of creating a new instance using the <code>new</code> expression)
and no definition of the class could be found.
<p>
The searched-for class definition existed when the currently
executing class was compiled, but the definition can no longer be
found.

@author  unascribed
@since   JDK1.0
"
      classrelation 3160834 // <generalisation>
	relation 3160834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3160834 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1678978 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9095859863287012458L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7053698 "NoClassDefFoundError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoClassDefFoundError</code> with no detail message.
"
      end

      operation 7053826 "NoClassDefFoundError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoClassDefFoundError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 935298 "NoSuchFieldError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if an application tries to access or modify a specified
field of an object, and that object no longer has that field.
<p>
Normally, this error is caught by the compiler; this error can
only occur at run time if the definition of a class has
incompatibly changed.

@author  unascribed
@since   JDK1.0
"
      classrelation 3160962 // <generalisation>
	relation 3160962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3160962 // <generalisation>
	  b parent class_ref 928642 // IncompatibleClassChangeError
      end

      attribute 1679106 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3456430195886129035L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7053954 "NoSuchFieldError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchFieldError</code> with no detail message.
"
      end

      operation 7054082 "NoSuchFieldError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchFieldError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 935426 "NoSuchMethodError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if an application tries to call a specified method of a
class (either static or instance), and that class no longer has a
definition of that method.
<p>
Normally, this error is caught by the compiler; this error can
only occur at run time if the definition of a class has
incompatibly changed.

@author  unascribed
@since   JDK1.0
"
      classrelation 3161218 // <generalisation>
	relation 3161218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161218 // <generalisation>
	  b parent class_ref 928642 // IncompatibleClassChangeError
      end

      attribute 1679362 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3765521442372831335L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7054466 "NoSuchMethodError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchMethodError</code> with no detail message.
"
      end

      operation 7054594 "NoSuchMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchMethodError</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 935554 "OutOfMemoryError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when the Java Virtual Machine cannot allocate an object
because it is out of memory, and no more memory could be made
available by the garbage collector.

{@code OutOfMemoryError} objects may be constructed by the virtual
machine as if {@linkplain Throwable#Throwable(String, Throwable,
boolean, boolean) suppression were disabled and/or the stack trace was not
writable}.

@author  unascribed
@since   JDK1.0
"
      classrelation 3161730 // <generalisation>
	relation 3161730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3161730 // <generalisation>
	  b parent class_ref 934402 // VirtualMachineError
      end

      attribute 1679874 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8228564086184010517L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7055618 "OutOfMemoryError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code OutOfMemoryError} with no detail message.
"
      end

      operation 7055746 "OutOfMemoryError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an {@code OutOfMemoryError} with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 935682 "Override"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.METHOD)
@Retention(RetentionPolicy.SOURCE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates that a method declaration is intended to override a
method declaration in a supertype. If a method is annotated with
this annotation type compilers are required to generate an error
message unless at least one of the following conditions hold:

<ul><li>
The method does override or implement a method declared in a
supertype.
</li><li>
The method has a signature that is override-equivalent to that of
any public method declared in {@linkplain Object}.
</li></ul>

@author  Peter von der Ah&eacute;
@author  Joshua Bloch
@jls 9.6.1.4 @Override
@since 1.5
"
    end

    class 936066 "ProcessBuilder"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to create operating system processes.

<p>Each {@code ProcessBuilder} instance manages a collection
of process attributes.  The {@link #start()} method creates a new
{@link Process} instance with those attributes.  The {@link
#start()} method can be invoked repeatedly from the same instance
to create new subprocesses with identical or related attributes.

<p>Each process builder manages these process attributes:

<ul>

<li>a <i>command</i>, a list of strings which signifies the
external program file to be invoked and its arguments, if any.
Which string lists represent a valid operating system command is
system-dependent.  For example, it is common for each conceptual
argument to be an element in this list, but there are operating
systems where programs are expected to tokenize command line
strings themselves - on such a system a Java implementation might
require commands to contain exactly two elements.

<li>an <i>environment</i>, which is a system-dependent mapping from
<i>variables</i> to <i>values</i>.  The initial value is a copy of
the environment of the current process (see {@link System#getenv()}).

<li>a <i>working directory</i>.  The default value is the current
working directory of the current process, usually the directory
named by the system property {@code user.dir}.

<li><a name=\"redirect-input\">a source of <i>standard input</i></a>.
By default, the subprocess reads input from a pipe.  Java code
can access this pipe via the output stream returned by
{@link Process#getOutputStream()}.  However, standard input may
be redirected to another source using
{@link #redirectInput(Redirect) redirectInput}.
In this case, {@link Process#getOutputStream()} will return a
<i>null output stream</i>, for which:

<ul>
<li>the {@link OutputStream#write(int) write} methods always
throw {@code IOException}
<li>the {@link OutputStream#close() close} method does nothing
</ul>

<li><a name=\"redirect-output\">a destination for <i>standard output</i>
and <i>standard error</i></a>.  By default, the subprocess writes standard
output and standard error to pipes.  Java code can access these pipes
via the input streams returned by {@link Process#getInputStream()} and
{@link Process#getErrorStream()}.  However, standard output and
standard error may be redirected to other destinations using
{@link #redirectOutput(Redirect) redirectOutput} and
{@link #redirectError(Redirect) redirectError}.
In this case, {@link Process#getInputStream()} and/or
{@link Process#getErrorStream()} will return a <i>null input
stream</i>, for which:

<ul>
<li>the {@link InputStream#read() read} methods always return
{@code -1}
<li>the {@link InputStream#available() available} method always returns
{@code 0}
<li>the {@link InputStream#close() close} method does nothing
</ul>

<li>a <i>redirectErrorStream</i> property.  Initially, this property
is {@code false}, meaning that the standard output and error
output of a subprocess are sent to two separate streams, which can
be accessed using the {@link Process#getInputStream()} and {@link
Process#getErrorStream()} methods.

<p>If the value is set to {@code true}, then:

<ul>
<li>standard error is merged with the standard output and always sent
to the same destination (this makes it easier to correlate error
messages with the corresponding output)
<li>the common destination of standard error and standard output can be
redirected using
{@link #redirectOutput(Redirect) redirectOutput}
<li>any redirection set by the
{@link #redirectError(Redirect) redirectError}
method is ignored when creating a subprocess
<li>the stream returned from {@link Process#getErrorStream()} will
always be a <a href=\"#redirect-output\">null input stream</a>
</ul>

</ul>

<p>Modifying a process builder's attributes will affect processes
subsequently started by that object's {@link #start()} method, but
will never affect previously started processes or the Java process
itself.

<p>Most error checking is performed by the {@link #start()} method.
It is possible to modify the state of an object so that {@link
#start()} will fail.  For example, setting the command attribute to
an empty list will not throw an exception unless {@link #start()}
is invoked.

<p><strong>Note that this class is not synchronized.</strong>
If multiple threads access a {@code ProcessBuilder} instance
concurrently, and at least one of the threads modifies one of the
attributes structurally, it <i>must</i> be synchronized externally.

<p>Starting a new process which uses the default working directory
and environment is easy:

<pre> {@code
Process p = new ProcessBuilder(\"myCommand\", \"myArg\").start();
}</pre>

<p>Here is an example that starts a process with a modified working
directory and environment, and redirects standard output and error
to be appended to a log file:

<pre> {@code
ProcessBuilder pb =
  new ProcessBuilder(\"myCommand\", \"myArg1\", \"myArg2\");
Map<String, String> env = pb.environment();
env.put(\"VAR1\", \"myValue\");
env.remove(\"OTHERVAR\");
env.put(\"VAR2\", env.get(\"VAR1\") + \"suffix\");
pb.directory(new File(\"myDir\"));
File log = new File(\"log\");
pb.redirectErrorStream(true);
pb.redirectOutput(Redirect.appendTo(log));
Process p = pb.start();
assert pb.redirectInput() == Redirect.PIPE;
assert pb.redirectOutput().file() == log;
assert p.getInputStream().read() == -1;
}</pre>

<p>To start a process with an explicit set of environment
variables, first call {@link java.util.Map#clear() Map.clear()}
before adding environment variables.

@author Martin Buchholz
@since 1.5
"
      classrelation 3163650 // command (<unidirectional association>)
	relation 3163650 --->
	  a role_name "command" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 3163650 // command (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 3163778 // directory (<unidirectional association>)
	relation 3163778 --->
	  a role_name "directory" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3163778 // directory (<unidirectional association>)
	  b parent class_ref 131970 // File
      end

      classrelation 3163906 // environment (<unidirectional association>)
	relation 3163906 --->
	  a role_name "environment" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,String> ${name}${value};
"
	    classrelation_ref 3163906 // environment (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1680002 "redirectErrorStream"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 936194 "Redirect"
	abstract visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	class 936578 "Type"
	  visibility public stereotype "enum"
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  attribute 1680130 "PIPE"
	    public type class_ref 936578 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "The type of {@link Redirect#PIPE Redirect.PIPE}.

"
	  end

	  attribute 1680258 "INHERIT"
	    public type class_ref 936578 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "The type of {@link Redirect#INHERIT Redirect.INHERIT}.

"
	  end

	  attribute 1680386 "READ"
	    public type class_ref 936578 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "The type of redirects returned from
{@link Redirect#from Redirect.from(File)}.

"
	  end

	  attribute 1680514 "WRITE"
	    public type class_ref 936578 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "The type of redirects returned from
{@link Redirect#to Redirect.to(File)}.

"
	  end

	  attribute 1680642 "APPEND"
	    public type class_ref 936578 // Type
	    cpp_decl ""
	    java_decl "  ${@}${name}${value},${comment}"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment "The type of redirects returned from
{@link Redirect#appendTo Redirect.appendTo(File)}.
"
	  end
	end

	operation 7062786 "type"
	  abstract public return_type class_ref 936578 // Type
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the type of this {@code Redirect}.
@return the type of this {@code Redirect}
"
	end

	classrelation 3164674 // PIPE (<unidirectional association>)
	  relation 3164674 --->
	    a role_name "PIPE" init_value " new Redirect() {
                public Type type() { return Type.PIPE; }
                public String toString() { return type().toString(); }}" class_relation const_relation public
	      comment "
Indicates that subprocess I/O will be connected to the
current Java process over a pipe.

This is the default handling of subprocess standard I/O.

<p>It will always be true that
 <pre> {@code
Redirect.PIPE.file() == null &&
Redirect.PIPE.type() == Redirect.Type.PIPE
}</pre>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3164674 // PIPE (<unidirectional association>)
	    b parent class_ref 936194 // Redirect
	end

	classrelation 3164802 // INHERIT (<unidirectional association>)
	  relation 3164802 --->
	    a role_name "INHERIT" init_value " new Redirect() {
                public Type type() { return Type.INHERIT; }
                public String toString() { return type().toString(); }}" class_relation const_relation public
	      comment "
Indicates that subprocess I/O source or destination will be the
same as those of the current process.  This is the normal
behavior of most operating system command interpreters (shells).

<p>It will always be true that
 <pre> {@code
Redirect.INHERIT.file() == null &&
Redirect.INHERIT.type() == Redirect.Type.INHERIT
}</pre>

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3164802 // INHERIT (<unidirectional association>)
	    b parent class_ref 936194 // Redirect
	end

	operation 7062914 "file"
	  public return_type class_ref 131970 // File
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the {@link File} source or destination associated
with this redirect, or {@code null} if there is no such file.

@return the file associated with this redirect,
        or {@code null} if there is no such file
"
	end

	operation 7063042 "append"
	  package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "When redirected to a destination file, indicates if the output
is to be written to the end of the file.
"
	end

	operation 7063170 "from"
	  class_operation public return_type class_ref 936194 // Redirect
	  nparams 1
	    param in name "file" type class_ref 131970 // File
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a redirect to read from the specified file.

<p>It will always be true that
 <pre> {@code
Redirect.from(file).file() == file &&
Redirect.from(file).type() == Redirect.Type.READ
}</pre>

@param file The {@code File} for the {@code Redirect}.
@throws NullPointerException if the specified file is null
@return a redirect to read from the specified file
"
	end

	operation 7063298 "to"
	  class_operation public return_type class_ref 936194 // Redirect
	  nparams 1
	    param in name "file" type class_ref 131970 // File
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a redirect to write to the specified file.
If the specified file exists when the subprocess is started,
its previous contents will be discarded.

<p>It will always be true that
 <pre> {@code
Redirect.to(file).file() == file &&
Redirect.to(file).type() == Redirect.Type.WRITE
}</pre>

@param file The {@code File} for the {@code Redirect}.
@throws NullPointerException if the specified file is null
@return a redirect to write to the specified file
"
	end

	operation 7063426 "appendTo"
	  class_operation public return_type class_ref 936194 // Redirect
	  nparams 1
	    param in name "file" type class_ref 131970 // File
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a redirect to append to the specified file.
Each write operation first advances the position to the
end of the file and then writes the requested data.
Whether the advancement of the position and the writing
of the data are done in a single atomic operation is
system-dependent and therefore unspecified.

<p>It will always be true that
 <pre> {@code
Redirect.appendTo(file).file() == file &&
Redirect.appendTo(file).type() == Redirect.Type.APPEND
}</pre>

@param file The {@code File} for the {@code Redirect}.
@throws NullPointerException if the specified file is null
@return a redirect to append to the specified file
"
	end

	operation 7063554 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compares the specified object with this {@code Redirect} for
equality.  Returns {@code true} if and only if the two
objects are identical or both objects are {@code Redirect}
instances of the same type associated with non-null equal
{@code File} instances.
"
	end

	operation 7063682 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a hash code value for this {@code Redirect}.
@return a hash code value for this {@code Redirect}
"
	end

	operation 7063810 "Redirect"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "No public constructors.  Clients must use predefined
static {@code Redirect} instances or factory methods.
"
	end
      end

      classrelation 3164034 // redirects (<unidirectional association>)
	relation 3164034 --->
	  a role_name "redirects" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3164034 // redirects (<unidirectional association>)
	  b parent class_ref 936194 // Redirect
      end

      operation 7060994 "ProcessBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "command" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a process builder with the specified operating
system program and arguments.  This constructor does <i>not</i>
make a copy of the {@code command} list.  Subsequent
updates to the list will be reflected in the state of the
process builder.  It is not checked whether
{@code command} corresponds to a valid operating system
command.

@param  command the list containing the program and its arguments
@throws NullPointerException if the argument is null
"
      end

      operation 7061122 "ProcessBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "" explicit_type "String...command"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a process builder with the specified operating
system program and arguments.  This is a convenience
constructor that sets the process builder's command to a string
list containing the same strings as the {@code command}
array, in the same order.  It is not checked whether
{@code command} corresponds to a valid operating system
command.

@param command a string array containing the program and its arguments
"
      end

      operation 7061250 "command"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "command" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's operating system program and
arguments.  This method does <i>not</i> make a copy of the
{@code command} list.  Subsequent updates to the list will
be reflected in the state of the process builder.  It is not
checked whether {@code command} corresponds to a valid
operating system command.

@param  command the list containing the program and its arguments
@return this process builder

@throws NullPointerException if the argument is null
"
      end

      operation 7061378 "command"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "" explicit_type "String...command"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's operating system program and
arguments.  This is a convenience method that sets the command
to a string list containing the same strings as the
{@code command} array, in the same order.  It is not
checked whether {@code command} corresponds to a valid
operating system command.

@param  command a string array containing the program and its arguments
@return this process builder
"
      end

      operation 7061506 "command"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's operating system program and
arguments.  The returned list is <i>not</i> a copy.  Subsequent
updates to the list will be reflected in the state of this
process builder.

@return this process builder's program and its arguments
"
      end

      operation 7061634 "environment"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string map view of this process builder's environment.

Whenever a process builder is created, the environment is
initialized to a copy of the current process environment (see
{@link System#getenv()}).  Subprocesses subsequently started by
this object's {@link #start()} method will use this map as
their environment.

<p>The returned object may be modified using ordinary {@link
java.util.Map Map} operations.  These modifications will be
visible to subprocesses started via the {@link #start()}
method.  Two {@code ProcessBuilder} instances always
contain independent process environments, so changes to the
returned map will never be reflected in any other
{@code ProcessBuilder} instance or the values returned by
{@link System#getenv System.getenv}.

<p>If the system does not support environment variables, an
empty map is returned.

<p>The returned map does not permit null keys or values.
Attempting to insert or query the presence of a null key or
value will throw a {@link NullPointerException}.
Attempting to query the presence of a key or value which is not
of type {@link String} will throw a {@link ClassCastException}.

<p>The behavior of the returned map is system-dependent.  A
system may not allow modifications to environment variables or
may forbid certain variable names or values.  For this reason,
attempts to modify the map may fail with
{@link UnsupportedOperationException} or
{@link IllegalArgumentException}
if the modification is not permitted by the operating system.

<p>Since the external format of environment variable names and
values is system-dependent, there may not be a one-to-one
mapping between them and Java's Unicode strings.  Nevertheless,
the map is implemented in such a way that environment variables
which are not modified by Java code will have an unmodified
native representation in the subprocess.

<p>The returned map and its collection views may not obey the
general contract of the {@link Object#equals} and
{@link Object#hashCode} methods.

<p>The returned map is typically case-sensitive on all platforms.

<p>If a security manager exists, its
{@link SecurityManager#checkPermission checkPermission} method
is called with a
{@link RuntimePermission}{@code (\"getenv.*\")} permission.
This may result in a {@link SecurityException} being thrown.

<p>When passing information to a Java subprocess,
<a href=System.html#EnvironmentVSSystemProperties>system properties</a>
are generally preferred over environment variables.

@return this process builder's environment

@throws SecurityException
        if a security manager exists and its
        {@link SecurityManager#checkPermission checkPermission}
        method doesn't allow access to the process environment

@see    Runtime#exec(String[],String[],java.io.File)
@see    System#getenv()
"
      end

      operation 7061762 "environment"
	package return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "envp" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only for use by Runtime.exec(...envp...)"
      end

      operation 7061890 "directory"
	public return_type class_ref 131970 // File
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's working directory.

Subprocesses subsequently started by this object's {@link
#start()} method will use this as their working directory.
The returned value may be {@code null} -- this means to use
the working directory of the current Java process, usually the
directory named by the system property {@code user.dir},
as the working directory of the child process.

@return this process builder's working directory
"
      end

      operation 7062018 "directory"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "directory" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's working directory.

Subprocesses subsequently started by this object's {@link
#start()} method will use this as their working directory.
The argument may be {@code null} -- this means to use the
working directory of the current Java process, usually the
directory named by the system property {@code user.dir},
as the working directory of the child process.

@param  directory the new working directory
@return this process builder
"
      end

      class 936322 "NullInputStream"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3164162 // <generalisation>
	  relation 3164162 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3164162 // <generalisation>
	    b parent class_ref 146434 // InputStream
	end

	classrelation 3164290 // INSTANCE (<unidirectional association>)
	  relation 3164290 --->
	    a role_name "INSTANCE" init_value " new NullInputStream()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3164290 // INSTANCE (<unidirectional association>)
	    b parent class_ref 936322 // NullInputStream
	end

	operation 7062146 "NullInputStream"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7062274 "read"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7062402 "available"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 936450 "NullOutputStream"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3164418 // <generalisation>
	  relation 3164418 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3164418 // <generalisation>
	    b parent class_ref 151298 // OutputStream
	end

	classrelation 3164546 // INSTANCE (<unidirectional association>)
	  relation 3164546 --->
	    a role_name "INSTANCE" init_value " new NullOutputStream()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3164546 // INSTANCE (<unidirectional association>)
	    b parent class_ref 936450 // NullOutputStream
	end

	operation 7062530 "NullOutputStream"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7062658 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "b" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7063938 "redirects"
	private return_type class_ref 936194 // Redirect
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7064066 "redirectInput"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "source" type class_ref 936194 // Redirect
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard input source.

Subprocesses subsequently started by this object's {@link #start()}
method obtain their standard input from this source.

<p>If the source is {@link Redirect#PIPE Redirect.PIPE}
(the initial value), then the standard input of a
subprocess can be written to using the output stream
returned by {@link Process#getOutputStream()}.
If the source is set to any other value, then
{@link Process#getOutputStream()} will return a
<a href=\"#redirect-input\">null output stream</a>.

@param  source the new standard input source
@return this process builder
@throws IllegalArgumentException
        if the redirect does not correspond to a valid source
        of data, that is, has type
        {@link Redirect.Type#WRITE WRITE} or
        {@link Redirect.Type#APPEND APPEND}
@since  1.7
"
      end

      operation 7064194 "redirectOutput"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "destination" type class_ref 936194 // Redirect
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard output destination.

Subprocesses subsequently started by this object's {@link #start()}
method send their standard output to this destination.

<p>If the destination is {@link Redirect#PIPE Redirect.PIPE}
(the initial value), then the standard output of a subprocess
can be read using the input stream returned by {@link
Process#getInputStream()}.
If the destination is set to any other value, then
{@link Process#getInputStream()} will return a
<a href=\"#redirect-output\">null input stream</a>.

@param  destination the new standard output destination
@return this process builder
@throws IllegalArgumentException
        if the redirect does not correspond to a valid
        destination of data, that is, has type
        {@link Redirect.Type#READ READ}
@since  1.7
"
      end

      operation 7064322 "redirectError"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "destination" type class_ref 936194 // Redirect
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard error destination.

Subprocesses subsequently started by this object's {@link #start()}
method send their standard error to this destination.

<p>If the destination is {@link Redirect#PIPE Redirect.PIPE}
(the initial value), then the error output of a subprocess
can be read using the input stream returned by {@link
Process#getErrorStream()}.
If the destination is set to any other value, then
{@link Process#getErrorStream()} will return a
<a href=\"#redirect-output\">null input stream</a>.

<p>If the {@link #redirectErrorStream redirectErrorStream}
attribute has been set {@code true}, then the redirection set
by this method has no effect.

@param  destination the new standard error destination
@return this process builder
@throws IllegalArgumentException
        if the redirect does not correspond to a valid
        destination of data, that is, has type
        {@link Redirect.Type#READ READ}
@since  1.7
"
      end

      operation 7064450 "redirectInput"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard input source to a file.

<p>This is a convenience method.  An invocation of the form
{@code redirectInput(file)}
behaves in exactly the same way as the invocation
{@link #redirectInput(Redirect) redirectInput}
{@code (Redirect.from(file))}.

@param  file the new standard input source
@return this process builder
@since  1.7
"
      end

      operation 7064578 "redirectOutput"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard output destination to a file.

<p>This is a convenience method.  An invocation of the form
{@code redirectOutput(file)}
behaves in exactly the same way as the invocation
{@link #redirectOutput(Redirect) redirectOutput}
{@code (Redirect.to(file))}.

@param  file the new standard output destination
@return this process builder
@since  1.7
"
      end

      operation 7064706 "redirectError"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "file" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's standard error destination to a file.

<p>This is a convenience method.  An invocation of the form
{@code redirectError(file)}
behaves in exactly the same way as the invocation
{@link #redirectError(Redirect) redirectError}
{@code (Redirect.to(file))}.

@param  file the new standard error destination
@return this process builder
@since  1.7
"
      end

      operation 7064834 "redirectInput"
	public return_type class_ref 936194 // Redirect
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's standard input source.

Subprocesses subsequently started by this object's {@link #start()}
method obtain their standard input from this source.
The initial value is {@link Redirect#PIPE Redirect.PIPE}.

@return this process builder's standard input source
@since  1.7
"
      end

      operation 7064962 "redirectOutput"
	public return_type class_ref 936194 // Redirect
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's standard output destination.

Subprocesses subsequently started by this object's {@link #start()}
method redirect their standard output to this destination.
The initial value is {@link Redirect#PIPE Redirect.PIPE}.

@return this process builder's standard output destination
@since  1.7
"
      end

      operation 7065090 "redirectError"
	public return_type class_ref 936194 // Redirect
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's standard error destination.

Subprocesses subsequently started by this object's {@link #start()}
method redirect their standard error to this destination.
The initial value is {@link Redirect#PIPE Redirect.PIPE}.

@return this process builder's standard error destination
@since  1.7
"
      end

      operation 7065218 "inheritIO"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the source and destination for subprocess standard I/O
to be the same as those of the current Java process.

<p>This is a convenience method.  An invocation of the form
 <pre> {@code
pb.inheritIO()
}</pre>
behaves in exactly the same way as the invocation
 <pre> {@code
pb.redirectInput(Redirect.INHERIT)
  .redirectOutput(Redirect.INHERIT)
  .redirectError(Redirect.INHERIT)
}</pre>

This gives behavior equivalent to most operating system
command interpreters, or the standard C library function
{@code system()}.

@return this process builder
@since  1.7
"
      end

      operation 7065346 "redirectErrorStream"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells whether this process builder merges standard error and
standard output.

<p>If this property is {@code true}, then any error output
generated by subprocesses subsequently started by this object's
{@link #start()} method will be merged with the standard
output, so that both can be read using the
{@link Process#getInputStream()} method.  This makes it easier
to correlate error messages with the corresponding output.
The initial value is {@code false}.

@return this process builder's {@code redirectErrorStream} property
"
      end

      operation 7065474 "redirectErrorStream"
	public return_type class_ref 936066 // ProcessBuilder
	nparams 1
	  param inout name "redirectErrorStream" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this process builder's {@code redirectErrorStream} property.

<p>If this property is {@code true}, then any error output
generated by subprocesses subsequently started by this object's
{@link #start()} method will be merged with the standard
output, so that both can be read using the
{@link Process#getInputStream()} method.  This makes it easier
to correlate error messages with the corresponding output.
The initial value is {@code false}.

@param  redirectErrorStream the new property value
@return this process builder
"
      end

      operation 7065602 "start"
	public return_type class_ref 140930 // Process
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a new process using the attributes of this process builder.

<p>The new process will
invoke the command and arguments given by {@link #command()},
in a working directory as given by {@link #directory()},
with a process environment as given by {@link #environment()}.

<p>This method checks that the command is a valid operating
system command.  Which commands are valid is system-dependent,
but at the very least the command must be a non-empty list of
non-null strings.

<p>A minimal set of system dependent environment variables may
be required to start a process on some operating systems.
As a result, the subprocess may inherit additional environment variable
settings beyond those in the process builder's {@link #environment()}.

<p>If there is a security manager, its
{@link SecurityManager#checkExec checkExec}
method is called with the first component of this object's
{@code command} array as its argument. This may result in
a {@link SecurityException} being thrown.

<p>Starting an operating system process is highly system-dependent.
Among the many things that can go wrong are:
<ul>
<li>The operating system program file was not found.
<li>Access to the program file was denied.
<li>The working directory does not exist.
</ul>

<p>In such cases an exception will be thrown.  The exact nature
of the exception is system-dependent, but it will always be a
subclass of {@link IOException}.

<p>Subsequent modifications to this process builder will not
affect the returned {@link Process}.

@return a new {@link Process} object for managing the subprocess

@throws NullPointerException
        if an element of the command list is null

@throws IndexOutOfBoundsException
        if the command is an empty list (has size {@code 0})

@throws SecurityException
        if a security manager exists and
        <ul>

        <li>its
        {@link SecurityManager#checkExec checkExec}
        method doesn't allow creation of the subprocess, or

        <li>the standard input to the subprocess was
        {@linkplain #redirectInput redirected from a file}
        and the security manager's
        {@link SecurityManager#checkRead checkRead} method
        denies read access to the file, or

        <li>the standard output or standard error of the
        subprocess was
        {@linkplain #redirectOutput redirected to a file}
        and the security manager's
        {@link SecurityManager#checkWrite checkWrite} method
        denies write access to the file

        </ul>

@throws IOException if an I/O error occurs

@see Runtime#exec(String[], String[], java.io.File)
"
      end
    end

    class 936706 "ProcessEnvironment"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      class 936834 "Variable"
	visibility private 
	nactuals 1
	actual class class_ref 194946 // Comparable
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3165314 // <generalisation>
	  relation 3165314 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3165314 // <generalisation>
	    b parent class_ref 936962 // ExternalData
	end

	classrelation 3165442 // <realization>
	  relation 3165442 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3165442 // <realization>
	    b parent class_ref 194946 // Comparable
	end

	operation 7067394 "Variable"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "str" type class_ref 128130 // String
	    param inout name "bytes" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067522 "valueOfQueryOnly"
	  class_operation public return_type class_ref 936834 // Variable
	  nparams 1
	    param inout name "str" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067650 "valueOfQueryOnly"
	  class_operation public return_type class_ref 936834 // Variable
	  nparams 1
	    param inout name "str" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067778 "valueOf"
	  class_operation public return_type class_ref 936834 // Variable
	  nparams 1
	    param inout name "str" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067906 "valueOf"
	  class_operation public return_type class_ref 936834 // Variable
	  nparams 1
	    param inout name "bytes" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068034 "compareTo"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "variable" type class_ref 936834 // Variable
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068162 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3164930 // theEnvironment (<unidirectional association>)
	relation 3164930 --->
	  a role_name "theEnvironment" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Variable,Value> ${name}${value};
"
	    classrelation_ref 3164930 // theEnvironment (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 3165058 // theUnmodifiableEnvironment (<unidirectional association>)
	relation 3165058 --->
	  a role_name "theUnmodifiableEnvironment" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String,String> ${name}${value};
"
	    classrelation_ref 3165058 // theUnmodifiableEnvironment (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 1680770 "MIN_NAME_LENGTH"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 157954 "initialization"
	
	cpp "" ""
	java "  static {
        // We cache the C environment.  This means that subsequent calls
        // to putenv/setenv from C will not be visible from Java code.
        byte[][] environ = environ();
        theEnvironment = new HashMap<>(environ.length/2 + 3);
        // Read environment variables back to front,
        // so that earlier variables override later ones.
        for (int i = environ.length-1; i > 0; i-=2)
            theEnvironment.put(Variable.valueOf(environ[i-1]),
                               Value.valueOf(environ[i]));

        theUnmodifiableEnvironment
            = Collections.unmodifiableMap
            (new StringEnvironment(theEnvironment));
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 7065730 "getenv"
	class_operation package return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only for use by System.getenv(String) "
      end

      operation 7065858 "getenv"
	class_operation package return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only for use by System.getenv() "
      end

      operation 7065986 "environment"
	class_operation package return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Only for use by ProcessBuilder.environment() "
      end

      operation 7066114 "emptyEnvironment"
	class_operation package return_type class_ref 130178 // Map
	nparams 1
	  param in name "capacity" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only for use by Runtime.exec(...String[]envp...) "
      end

      operation 7066242 "environ"
	class_operation private explicit_return_type "byte"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[][] ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 7066370 "ProcessEnvironment"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This class is not instantiable."
      end

      operation 7066498 "validateVariable"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check that name is suitable for insertion into Environment map"
      end

      operation 7066626 "validateValue"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Check that value is suitable for insertion into Environment map"
      end

      class 936962 "ExternalData"
	abstract visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3165186 // str (<unidirectional association>)
	  relation 3165186 --->
	    a role_name "str" const_relation protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3165186 // str (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1680898 "bytes"
	  const_attribute protected explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7066754 "ExternalData"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "str" type class_ref 128130 // String
	    param inout name "bytes" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7066882 "getBytes"
	  public explicit_return_type "byte"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067010 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067138 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7067266 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 937090 "Value"
	visibility private 
	nactuals 1
	actual class class_ref 194946 // Comparable
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3165570 // <generalisation>
	  relation 3165570 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3165570 // <generalisation>
	    b parent class_ref 936962 // ExternalData
	end

	classrelation 3165698 // <realization>
	  relation 3165698 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3165698 // <realization>
	    b parent class_ref 194946 // Comparable
	end

	operation 7068290 "Value"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "str" type class_ref 128130 // String
	    param inout name "bytes" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068418 "valueOfQueryOnly"
	  class_operation public return_type class_ref 937090 // Value
	  nparams 1
	    param inout name "str" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068546 "valueOfQueryOnly"
	  class_operation public return_type class_ref 937090 // Value
	  nparams 1
	    param inout name "str" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068674 "valueOf"
	  class_operation public return_type class_ref 937090 // Value
	  nparams 1
	    param inout name "str" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068802 "valueOf"
	  class_operation public return_type class_ref 937090 // Value
	  nparams 1
	    param inout name "bytes" explicit_type "byte"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7068930 "compareTo"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "value" type class_ref 937090 // Value
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069058 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 937218 "StringEnvironment"
	visibility private 
	nactuals 2
	actual class class_ref 192130 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 192130 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3165826 // <realization>
	  relation 3165826 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3165826 // <realization>
	    b parent class_ref 192130 // AbstractMap
	end

	classrelation 3165954 // m (<unidirectional association>)
	  relation 3165954 --->
	    a role_name "m" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Variable,Value> ${name}${value};
"
	      classrelation_ref 3165954 // m (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	operation 7069186 "toString"
	  class_operation private return_type class_ref 128130 // String
	  nparams 1
	    param inout name "v" type class_ref 937090 // Value
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069314 "StringEnvironment"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "m" type class_ref 130178 // Map
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Variable,Value> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069442 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069570 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069698 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069826 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7069954 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070082 "get"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070210 "put"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param inout name "key" type class_ref 128130 // String
	    param inout name "value" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070338 "remove"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "key" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070466 "keySet"
	  public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070594 "entrySet"
	  public return_type class_ref 192258 // Set
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<String,String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070722 "values"
	  public return_type class_ref 184194 // Collection
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7070850 "toEnvironmentBlock"
	  public explicit_return_type "byte"
	  nparams 1
	    param inout name "envc" explicit_type "int"
	  multiplicity "[]"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " It is technically feasible to provide a byte-oriented view
 as follows:
      public Map<byte[],byte[]> asByteArrayMap() {
          return new ByteArrayEnvironment(m);
      }
 Convert to Unix style environ as a monolithic byte array
 inspired by the Windows Environment Block, except we work
 exclusively with bytes instead of chars, and we need only
 one trailing NUL on Unix.
 This keeps the JNI as simple and efficient as possible."
	end
      end

      operation 7070978 "toEnvironmentBlock"
	class_operation package explicit_return_type "byte"
	nparams 2
	  param inout name "map" type class_ref 130178 // Map
	  param inout name "envc" explicit_type "int"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}<String,String> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 937346 "StringEntry"
	visibility private 
	nactuals 4
	actual class class_ref 130178 // Map
	  rank 0 explicit_value ""
	actual class class_ref 130178 // Map
	  rank 1 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 0 explicit_value ""
	actual class class_ref 192386 // Entry
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3166082 // <realization>
	  relation 3166082 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3166082 // <realization>
	    b parent class_ref 192386 // Entry
	end

	classrelation 3166210 // e (<unidirectional association>)
	  relation 3166210 --->
	    a role_name "e" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Variable,Value> ${name}${value};
"
	      classrelation_ref 3166210 // e (<unidirectional association>)
	    b parent class_ref 192386 // Entry
	end

	operation 7071106 "StringEntry"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "e" type class_ref 192386 // Entry
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Variable,Value> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071234 "getKey"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071362 "getValue"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071490 "setValue"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "newValue" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071618 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071746 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7071874 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 937474 "StringEntrySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3166338 // <realization>
	  relation 3166338 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3166338 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3166466 // s (<unidirectional association>)
	  relation 3166466 --->
	    a role_name "s" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Map.Entry<Variable,Value>> ${name}${value};
"
	      classrelation_ref 3166466 // s (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 7072002 "StringEntrySet"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Map.Entry<Variable,Value>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072130 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072258 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072386 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072514 "iterator"
	  public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Map.Entry<String,String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072642 "vvEntry"
	  class_operation private return_type class_ref 192386 // Entry
	  nparams 1
	    param in name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Variable,Value> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072770 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7072898 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073026 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073154 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 937602 "StringValues"
	visibility private 
	nactuals 1
	actual class class_ref 184066 // AbstractCollection
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3166594 // <realization>
	  relation 3166594 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3166594 // <realization>
	    b parent class_ref 184066 // AbstractCollection
	end

	classrelation 3166722 // c (<unidirectional association>)
	  relation 3166722 --->
	    a role_name "c" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Value> ${name}${value};
"
	      classrelation_ref 3166722 // c (<unidirectional association>)
	    b parent class_ref 184194 // Collection
	end

	operation 7073282 "StringValues"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Value> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073410 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073538 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073666 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073794 "iterator"
	  public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7073922 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074050 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074178 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074306 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 937730 "StringKeySet"
	visibility private 
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3166850 // <realization>
	  relation 3166850 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 3166850 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 3166978 // s (<unidirectional association>)
	  relation 3166978 --->
	    a role_name "s" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Variable> ${name}${value};
"
	      classrelation_ref 3166978 // s (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 7074434 "StringKeySet"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<Variable> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074562 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074690 "isEmpty"
	  public explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074818 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7074946 "iterator"
	  public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7075074 "contains"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7075202 "remove"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7075330 "arrayCompare"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "x" explicit_type "byte"
	multiplicity "[]"
	  param inout name "y" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Replace with general purpose method someday"
      end

      operation 7075458 "arrayEquals"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "x" explicit_type "byte"
	multiplicity "[]"
	  param inout name "y" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Replace with general purpose method someday"
      end

      operation 7075586 "arrayHash"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "x" explicit_type "byte"
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Replace with general purpose method someday"
      end
    end

    class 937858 "ProcessImpl"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for the exclusive use of ProcessBuilder.start() to
create new processes.

@author Martin Buchholz
@since   1.5
"
      attribute 1681026 "fdAccess"
	class_attribute const_attribute private explicit_type "sun.misc.JavaIOFileDescriptorAccess"
	init_value " sun.misc.SharedSecrets.getJavaIOFileDescriptorAccess()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7075714 "ProcessImpl"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7075842 "toCString"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Not instantiable"
      end

      operation 7075970 "start"
	class_operation package return_type class_ref 140930 // Process
	nparams 5
	  param inout name "cmdarray" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "environment" type class_ref 130178 // Map
	  param inout name "dir" type class_ref 128130 // String
	  param inout name "redirects" type class_ref 936194 // Redirect
	multiplicity "[]"
	  param inout name "redirectErrorStream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}<String,String> ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only for use by ProcessBuilder.start()"
      end
    end

    class 937986 "Runtime"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Every Java application has a single instance of class
<code>Runtime</code> that allows the application to interface with
the environment in which the application is running. The current
runtime can be obtained from the <code>getRuntime</code> method.
<p>
An application cannot create its own instance of this class.

@author  unascribed
@see     java.lang.Runtime#getRuntime()
@since   JDK1.0
"
      classrelation 3167106 // currentRuntime (<unidirectional association>)
	relation 3167106 --->
	  a role_name "currentRuntime" init_value " new Runtime()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3167106 // currentRuntime (<unidirectional association>)
	  b parent class_ref 937986 // Runtime
      end

      operation 7076098 "getRuntime"
	class_operation public return_type class_ref 937986 // Runtime
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the runtime object associated with the current Java application.
Most of the methods of class <code>Runtime</code> are instance
methods and must be invoked with respect to the current runtime object.

@return  the <code>Runtime</code> object associated with the current
         Java application.
"
      end

      operation 7076226 "Runtime"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Don't let anyone else instantiate this class "
      end

      operation 7076354 "exit"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminates the currently running Java virtual machine by initiating its
shutdown sequence.  This method never returns normally.  The argument
serves as a status code; by convention, a nonzero status code indicates
abnormal termination.

<p> The virtual machine's shutdown sequence consists of two phases.  In
the first phase all registered {@link #addShutdownHook shutdown hooks},
if any, are started in some unspecified order and allowed to run
concurrently until they finish.  In the second phase all uninvoked
finalizers are run if {@link #runFinalizersOnExit finalization-on-exit}
has been enabled.  Once this is done the virtual machine {@link #halt
halts}.

<p> If this method is invoked after the virtual machine has begun its
shutdown sequence then if shutdown hooks are being run this method will
block indefinitely.  If shutdown hooks have already been run and on-exit
finalization has been enabled then this method halts the virtual machine
with the given status code if the status is nonzero; otherwise, it
blocks indefinitely.

<p> The <tt>{@link System#exit(int) System.exit}</tt> method is the
conventional and convenient means of invoking this method. <p>

@param  status
        Termination status.  By convention, a nonzero status code
        indicates abnormal termination.

@throws SecurityException
        If a security manager is present and its <tt>{@link
        SecurityManager#checkExit checkExit}</tt> method does not permit
        exiting with the specified status

@see java.lang.SecurityException
@see java.lang.SecurityManager#checkExit(int)
@see #addShutdownHook
@see #removeShutdownHook
@see #runFinalizersOnExit
@see #halt(int)
"
      end

      operation 7076482 "addShutdownHook"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hook" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a new virtual-machine shutdown hook.

<p> The Java virtual machine <i>shuts down</i> in response to two kinds
of events:

  <ul>

  <li> The program <i>exits</i> normally, when the last non-daemon
  thread exits or when the <tt>{@link #exit exit}</tt> (equivalently,
  {@link System#exit(int) System.exit}) method is invoked, or

  <li> The virtual machine is <i>terminated</i> in response to a
  user interrupt, such as typing <tt>^C</tt>, or a system-wide event,
  such as user logoff or system shutdown.

  </ul>

<p> A <i>shutdown hook</i> is simply an initialized but unstarted
thread.  When the virtual machine begins its shutdown sequence it will
start all registered shutdown hooks in some unspecified order and let
them run concurrently.  When all the hooks have finished it will then
run all uninvoked finalizers if finalization-on-exit has been enabled.
Finally, the virtual machine will halt.  Note that daemon threads will
continue to run during the shutdown sequence, as will non-daemon threads
if shutdown was initiated by invoking the <tt>{@link #exit exit}</tt>
method.

<p> Once the shutdown sequence has begun it can be stopped only by
invoking the <tt>{@link #halt halt}</tt> method, which forcibly
terminates the virtual machine.

<p> Once the shutdown sequence has begun it is impossible to register a
new shutdown hook or de-register a previously-registered hook.
Attempting either of these operations will cause an
<tt>{@link IllegalStateException}</tt> to be thrown.

<p> Shutdown hooks run at a delicate time in the life cycle of a virtual
machine and should therefore be coded defensively.  They should, in
particular, be written to be thread-safe and to avoid deadlocks insofar
as possible.  They should also not rely blindly upon services that may
have registered their own shutdown hooks and therefore may themselves in
the process of shutting down.  Attempts to use other thread-based
services such as the AWT event-dispatch thread, for example, may lead to
deadlocks.

<p> Shutdown hooks should also finish their work quickly.  When a
program invokes <tt>{@link #exit exit}</tt> the expectation is
that the virtual machine will promptly shut down and exit.  When the
virtual machine is terminated due to user logoff or system shutdown the
underlying operating system may only allow a fixed amount of time in
which to shut down and exit.  It is therefore inadvisable to attempt any
user interaction or to perform a long-running computation in a shutdown
hook.

<p> Uncaught exceptions are handled in shutdown hooks just as in any
other thread, by invoking the <tt>{@link ThreadGroup#uncaughtException
uncaughtException}</tt> method of the thread's <tt>{@link
ThreadGroup}</tt> object.  The default implementation of this method
prints the exception's stack trace to <tt>{@link System#err}</tt> and
terminates the thread; it does not cause the virtual machine to exit or
halt.

<p> In rare circumstances the virtual machine may <i>abort</i>, that is,
stop running without shutting down cleanly.  This occurs when the
virtual machine is terminated externally, for example with the
<tt>SIGKILL</tt> signal on Unix or the <tt>TerminateProcess</tt> call on
Microsoft Windows.  The virtual machine may also abort if a native
method goes awry by, for example, corrupting internal data structures or
attempting to access nonexistent memory.  If the virtual machine aborts
then no guarantee can be made about whether or not any shutdown hooks
will be run. <p>

@param   hook
         An initialized but unstarted <tt>{@link Thread}</tt> object

@throws  IllegalArgumentException
         If the specified hook has already been registered,
         or if it can be determined that the hook is already running or
         has already been run

@throws  IllegalStateException
         If the virtual machine is already in the process
         of shutting down

@throws  SecurityException
         If a security manager is present and it denies
         <tt>{@link RuntimePermission}(\"shutdownHooks\")</tt>

@see #removeShutdownHook
@see #halt(int)
@see #exit(int)
@since 1.3
"
      end

      operation 7076610 "removeShutdownHook"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "hook" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "De-registers a previously-registered virtual-machine shutdown hook. <p>

@param hook the hook to remove
@return <tt>true</tt> if the specified hook had previously been
registered and was successfully de-registered, <tt>false</tt>
otherwise.

@throws  IllegalStateException
         If the virtual machine is already in the process of shutting
         down

@throws  SecurityException
         If a security manager is present and it denies
         <tt>{@link RuntimePermission}(\"shutdownHooks\")</tt>

@see #addShutdownHook
@see #exit(int)
@since 1.3
"
      end

      operation 7076738 "halt"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forcibly terminates the currently running Java virtual machine.  This
method never returns normally.

<p> This method should be used with extreme caution.  Unlike the
<tt>{@link #exit exit}</tt> method, this method does not cause shutdown
hooks to be started and does not run uninvoked finalizers if
finalization-on-exit has been enabled.  If the shutdown sequence has
already been initiated then this method does not wait for any running
shutdown hooks or finalizers to finish their work. <p>

@param  status
        Termination status.  By convention, a nonzero status code
        indicates abnormal termination.  If the <tt>{@link Runtime#exit
        exit}</tt> (equivalently, <tt>{@link System#exit(int)
        System.exit}</tt>) method has already been invoked then this
        status code will override the status code passed to that method.

@throws SecurityException
        If a security manager is present and its <tt>{@link
        SecurityManager#checkExit checkExit}</tt> method does not permit
        an exit with the specified status

@see #exit
@see #addShutdownHook
@see #removeShutdownHook
@since 1.3
"
      end

      operation 7076866 "runFinalizersOnExit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Enable or disable finalization on exit; doing so specifies that the
finalizers of all objects that have finalizers that have not yet been
automatically invoked are to be run before the Java runtime exits.
By default, finalization on exit is disabled.

<p>If there is a security manager,
its <code>checkExit</code> method is first called
with 0 as its argument to ensure the exit is allowed.
This could result in a SecurityException.

@param value true to enable finalization on exit, false to disable
@deprecated  This method is inherently unsafe.  It may result in
     finalizers being called on live objects while other threads are
     concurrently manipulating those objects, resulting in erratic
     behavior or deadlock.

@throws  SecurityException
       if a security manager exists and its <code>checkExit</code>
       method doesn't allow the exit.

@see     java.lang.Runtime#exit(int)
@see     java.lang.Runtime#gc()
@see     java.lang.SecurityManager#checkExit(int)
@since   JDK1.1
"
      end

      operation 7076994 "exec"
	public return_type class_ref 140930 // Process
	nparams 1
	  param inout name "command" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified string command in a separate process.

<p>This is a convenience method.  An invocation of the form
<tt>exec(command)</tt>
behaves in exactly the same way as the invocation
<tt>{@link #exec(String, String[], File) exec}(command, null, null)</tt>.

@param   command   a specified system command.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>command</code> is <code>null</code>

@throws  IllegalArgumentException
         If <code>command</code> is empty

@see     #exec(String[], String[], File)
@see     ProcessBuilder
"
      end

      operation 7077122 "exec"
	public return_type class_ref 140930 // Process
	nparams 2
	  param inout name "command" type class_ref 128130 // String
	  param inout name "envp" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified string command in a separate process with the
specified environment.

<p>This is a convenience method.  An invocation of the form
<tt>exec(command, envp)</tt>
behaves in exactly the same way as the invocation
<tt>{@link #exec(String, String[], File) exec}(command, envp, null)</tt>.

@param   command   a specified system command.

@param   envp      array of strings, each element of which
                   has environment variable settings in the format
                   <i>name</i>=<i>value</i>, or
                   <tt>null</tt> if the subprocess should inherit
                   the environment of the current process.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>command</code> is <code>null</code>,
         or one of the elements of <code>envp</code> is <code>null</code>

@throws  IllegalArgumentException
         If <code>command</code> is empty

@see     #exec(String[], String[], File)
@see     ProcessBuilder
"
      end

      operation 7077250 "exec"
	public return_type class_ref 140930 // Process
	nparams 3
	  param inout name "command" type class_ref 128130 // String
	  param inout name "envp" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "dir" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified string command in a separate process with the
specified environment and working directory.

<p>This is a convenience method.  An invocation of the form
<tt>exec(command, envp, dir)</tt>
behaves in exactly the same way as the invocation
<tt>{@link #exec(String[], String[], File) exec}(cmdarray, envp, dir)</tt>,
where <code>cmdarray</code> is an array of all the tokens in
<code>command</code>.

<p>More precisely, the <code>command</code> string is broken
into tokens using a {@link StringTokenizer} created by the call
<code>new {@link StringTokenizer}(command)</code> with no
further modification of the character categories.  The tokens
produced by the tokenizer are then placed in the new string
array <code>cmdarray</code>, in the same order.

@param   command   a specified system command.

@param   envp      array of strings, each element of which
                   has environment variable settings in the format
                   <i>name</i>=<i>value</i>, or
                   <tt>null</tt> if the subprocess should inherit
                   the environment of the current process.

@param   dir       the working directory of the subprocess, or
                   <tt>null</tt> if the subprocess should inherit
                   the working directory of the current process.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>command</code> is <code>null</code>,
         or one of the elements of <code>envp</code> is <code>null</code>

@throws  IllegalArgumentException
         If <code>command</code> is empty

@see     ProcessBuilder
@since 1.3
"
      end

      operation 7077378 "exec"
	public return_type class_ref 140930 // Process
	nparams 1
	  param inout name "cmdarray" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and arguments in a separate process.

<p>This is a convenience method.  An invocation of the form
<tt>exec(cmdarray)</tt>
behaves in exactly the same way as the invocation
<tt>{@link #exec(String[], String[], File) exec}(cmdarray, null, null)</tt>.

@param   cmdarray  array containing the command to call and
                   its arguments.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>cmdarray</code> is <code>null</code>,
         or one of the elements of <code>cmdarray</code> is <code>null</code>

@throws  IndexOutOfBoundsException
         If <code>cmdarray</code> is an empty array
         (has length <code>0</code>)

@see     ProcessBuilder
"
      end

      operation 7077506 "exec"
	public return_type class_ref 140930 // Process
	nparams 2
	  param inout name "cmdarray" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "envp" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and arguments in a separate process
with the specified environment.

<p>This is a convenience method.  An invocation of the form
<tt>exec(cmdarray, envp)</tt>
behaves in exactly the same way as the invocation
<tt>{@link #exec(String[], String[], File) exec}(cmdarray, envp, null)</tt>.

@param   cmdarray  array containing the command to call and
                   its arguments.

@param   envp      array of strings, each element of which
                   has environment variable settings in the format
                   <i>name</i>=<i>value</i>, or
                   <tt>null</tt> if the subprocess should inherit
                   the environment of the current process.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>cmdarray</code> is <code>null</code>,
         or one of the elements of <code>cmdarray</code> is <code>null</code>,
         or one of the elements of <code>envp</code> is <code>null</code>

@throws  IndexOutOfBoundsException
         If <code>cmdarray</code> is an empty array
         (has length <code>0</code>)

@see     ProcessBuilder
"
      end

      operation 7077634 "exec"
	public return_type class_ref 140930 // Process
	nparams 3
	  param inout name "cmdarray" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "envp" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "dir" type class_ref 131970 // File
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and arguments in a separate process with
the specified environment and working directory.

<p>Given an array of strings <code>cmdarray</code>, representing the
tokens of a command line, and an array of strings <code>envp</code>,
representing \"environment\" variable settings, this method creates
a new process in which to execute the specified command.

<p>This method checks that <code>cmdarray</code> is a valid operating
system command.  Which commands are valid is system-dependent,
but at the very least the command must be a non-empty list of
non-null strings.

<p>If <tt>envp</tt> is <tt>null</tt>, the subprocess inherits the
environment settings of the current process.

<p>A minimal set of system dependent environment variables may
be required to start a process on some operating systems.
As a result, the subprocess may inherit additional environment variable
settings beyond those in the specified environment.

<p>{@link ProcessBuilder#start()} is now the preferred way to
start a process with a modified environment.

<p>The working directory of the new subprocess is specified by <tt>dir</tt>.
If <tt>dir</tt> is <tt>null</tt>, the subprocess inherits the
current working directory of the current process.

<p>If a security manager exists, its
{@link SecurityManager#checkExec checkExec}
method is invoked with the first component of the array
<code>cmdarray</code> as its argument. This may result in a
{@link SecurityException} being thrown.

<p>Starting an operating system process is highly system-dependent.
Among the many things that can go wrong are:
<ul>
<li>The operating system program file was not found.
<li>Access to the program file was denied.
<li>The working directory does not exist.
</ul>

<p>In such cases an exception will be thrown.  The exact nature
of the exception is system-dependent, but it will always be a
subclass of {@link IOException}.


@param   cmdarray  array containing the command to call and
                   its arguments.

@param   envp      array of strings, each element of which
                   has environment variable settings in the format
                   <i>name</i>=<i>value</i>, or
                   <tt>null</tt> if the subprocess should inherit
                   the environment of the current process.

@param   dir       the working directory of the subprocess, or
                   <tt>null</tt> if the subprocess should inherit
                   the working directory of the current process.

@return  A new {@link Process} object for managing the subprocess

@throws  SecurityException
         If a security manager exists and its
         {@link SecurityManager#checkExec checkExec}
         method doesn't allow creation of the subprocess

@throws  IOException
         If an I/O error occurs

@throws  NullPointerException
         If <code>cmdarray</code> is <code>null</code>,
         or one of the elements of <code>cmdarray</code> is <code>null</code>,
         or one of the elements of <code>envp</code> is <code>null</code>

@throws  IndexOutOfBoundsException
         If <code>cmdarray</code> is an empty array
         (has length <code>0</code>)

@see     ProcessBuilder
@since 1.3
"
      end

      operation 7077762 "availableProcessors"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the number of processors available to the Java virtual machine.

<p> This value may change during a particular invocation of the virtual
machine.  Applications that are sensitive to the number of available
processors should therefore occasionally poll this property and adjust
their resource usage appropriately. </p>

@return  the maximum number of processors available to the virtual
         machine; never smaller than one
@since 1.4
"
      end

      operation 7077890 "freeMemory"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the amount of free memory in the Java Virtual Machine.
Calling the
<code>gc</code> method may result in increasing the value returned
by <code>freeMemory.</code>

@return  an approximation to the total amount of memory currently
         available for future allocated objects, measured in bytes.
"
      end

      operation 7078018 "totalMemory"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the total amount of memory in the Java virtual machine.
The value returned by this method may vary over time, depending on
the host environment.
<p>
Note that the amount of memory required to hold an object of any
given type may be implementation-dependent.

@return  the total amount of memory currently available for current
         and future objects, measured in bytes.
"
      end

      operation 7078146 "maxMemory"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the maximum amount of memory that the Java virtual machine will
attempt to use.  If there is no inherent limit then the value {@link
java.lang.Long#MAX_VALUE} will be returned.

@return  the maximum amount of memory that the virtual machine will
         attempt to use, measured in bytes
@since 1.4
"
      end

      operation 7078274 "gc"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Runs the garbage collector.
Calling this method suggests that the Java virtual machine expend
effort toward recycling unused objects in order to make the memory
they currently occupy available for quick reuse. When control
returns from the method call, the virtual machine has made
its best effort to recycle all discarded objects.
<p>
The name <code>gc</code> stands for \"garbage
collector\". The virtual machine performs this recycling
process automatically as needed, in a separate thread, even if the
<code>gc</code> method is not invoked explicitly.
<p>
The method {@link System#gc()} is the conventional and convenient
means of invoking this method.
"
      end

      operation 7078402 "runFinalization0"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " Wormhole for calling java.lang.ref.Finalizer.runFinalization "
      end

      operation 7078530 "runFinalization"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the finalization methods of any objects pending finalization.
Calling this method suggests that the Java virtual machine expend
effort toward running the <code>finalize</code> methods of objects
that have been found to be discarded but whose <code>finalize</code>
methods have not yet been run. When control returns from the
method call, the virtual machine has made a best effort to
complete all outstanding finalizations.
<p>
The virtual machine performs the finalization process
automatically as needed, in a separate thread, if the
<code>runFinalization</code> method is not invoked explicitly.
<p>
The method {@link System#runFinalization()} is the conventional
and convenient means of invoking this method.

@see     java.lang.Object#finalize()
"
      end

      operation 7078658 "traceInstructions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Enables/Disables tracing of instructions.
If the <code>boolean</code> argument is <code>true</code>, this
method suggests that the Java virtual machine emit debugging
information for each instruction in the virtual machine as it
is executed. The format of this information, and the file or other
output stream to which it is emitted, depends on the host environment.
The virtual machine may ignore this request if it does not support
this feature. The destination of the trace output is system
dependent.
<p>
If the <code>boolean</code> argument is <code>false</code>, this
method causes the virtual machine to stop performing the
detailed instruction trace it is performing.

@param   on   <code>true</code> to enable instruction tracing;
              <code>false</code> to disable this feature.
"
      end

      operation 7078786 "traceMethodCalls"
	public explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Enables/Disables tracing of method calls.
If the <code>boolean</code> argument is <code>true</code>, this
method suggests that the Java virtual machine emit debugging
information for each method in the virtual machine as it is
called. The format of this information, and the file or other output
stream to which it is emitted, depends on the host environment. The
virtual machine may ignore this request if it does not support
this feature.
<p>
Calling this method with argument false suggests that the
virtual machine cease emitting per-call debugging information.

@param   on   <code>true</code> to enable instruction tracing;
              <code>false</code> to disable this feature.
"
      end

      operation 7078914 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Loads the native library specified by the filename argument.  The filename
argument must be an absolute path name.
(for example
<code>Runtime.getRuntime().load(\"/home/avh/lib/libX11.so\");</code>).

If the filename argument, when stripped of any platform-specific library
prefix, path, and file extension, indicates a library whose name is,
for example, L, and a native library called L is statically linked
with the VM, then the JNI_OnLoad_L function exported by the library
is invoked rather than attempting to load a dynamic library.
A filename matching the argument does not have to exist in the file
system. See the JNI Specification for more details.

Otherwise, the filename argument is mapped to a native library image in
an implementation-dependent manner.
<p>
First, if there is a security manager, its <code>checkLink</code>
method is called with the <code>filename</code> as its argument.
This may result in a security exception.
<p>
This is similar to the method {@link #loadLibrary(String)}, but it
accepts a general file name as an argument rather than just a library
name, allowing any file of native code to be loaded.
<p>
The method {@link System#load(String)} is the conventional and
convenient means of invoking this method.

@param      filename   the file to load.
@exception  SecurityException  if a security manager exists and its
            <code>checkLink</code> method doesn't allow
            loading of the specified dynamic library
@exception  UnsatisfiedLinkError  if either the filename is not an
            absolute path name, the native library is not statically
            linked with the VM, or the library cannot be mapped to
            a native library image by the host system.
@exception  NullPointerException if <code>filename</code> is
            <code>null</code>
@see        java.lang.Runtime#getRuntime()
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkLink(java.lang.String)
"
      end

      operation 7079042 "load0"
	package explicit_return_type "void"
	nparams 2
	  param inout name "fromClass" type class_ref 130818 // Class
	  param inout name "filename" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7079170 "loadLibrary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Loads the native library specified by the <code>libname</code>
argument.  The <code>libname</code> argument must not contain any platform
specific prefix, file extension or path. If a native library
called <code>libname</code> is statically linked with the VM, then the
JNI_OnLoad_<code>libname</code> function exported by the library is invoked.
See the JNI Specification for more details.

Otherwise, the libname argument is loaded from a system library
location and mapped to a native library image in an implementation-
dependent manner.
<p>
First, if there is a security manager, its <code>checkLink</code>
method is called with the <code>libname</code> as its argument.
This may result in a security exception.
<p>
The method {@link System#loadLibrary(String)} is the conventional
and convenient means of invoking this method. If native
methods are to be used in the implementation of a class, a standard
strategy is to put the native code in a library file (call it
<code>LibFile</code>) and then to put a static initializer:
<blockquote><pre>
static { System.loadLibrary(\"LibFile\"); }
</pre></blockquote>
within the class declaration. When the class is loaded and
initialized, the necessary native code implementation for the native
methods will then be loaded as well.
<p>
If this method is called more than once with the same library
name, the second and subsequent calls are ignored.

@param      libname   the name of the library.
@exception  SecurityException  if a security manager exists and its
            <code>checkLink</code> method doesn't allow
            loading of the specified dynamic library
@exception  UnsatisfiedLinkError if either the libname argument
            contains a file path, the native library is not statically
            linked with the VM,  or the library cannot be mapped to a
            native library image by the host system.
@exception  NullPointerException if <code>libname</code> is
            <code>null</code>
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkLink(java.lang.String)
"
      end

      operation 7079298 "loadLibrary0"
	package explicit_return_type "void"
	nparams 2
	  param inout name "fromClass" type class_ref 130818 // Class
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7079426 "getLocalizedInputStream"
	public return_type class_ref 146434 // InputStream
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a localized version of an input stream. This method takes
an <code>InputStream</code> and returns an <code>InputStream</code>
equivalent to the argument in all respects except that it is
localized: as characters in the local character set are read from
the stream, they are automatically converted from the local
character set to Unicode.
<p>
If the argument is already a localized stream, it may be returned
as the result.

@param      in InputStream to localize
@return     a localized input stream
@see        java.io.InputStream
@see        java.io.BufferedReader#BufferedReader(java.io.Reader)
@see        java.io.InputStreamReader#InputStreamReader(java.io.InputStream)
@deprecated As of JDK&nbsp;1.1, the preferred way to translate a byte
stream in the local encoding into a character stream in Unicode is via
the <code>InputStreamReader</code> and <code>BufferedReader</code>
classes.
"
      end

      operation 7079554 "getLocalizedOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 1
	  param inout name "out" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Creates a localized version of an output stream. This method
takes an <code>OutputStream</code> and returns an
<code>OutputStream</code> equivalent to the argument in all respects
except that it is localized: as Unicode characters are written to
the stream, they are automatically converted to the local
character set.
<p>
If the argument is already a localized stream, it may be returned
as the result.

@deprecated As of JDK&nbsp;1.1, the preferred way to translate a
Unicode character stream into a byte stream in the local encoding is via
the <code>OutputStreamWriter</code>, <code>BufferedWriter</code>, and
<code>PrintWriter</code> classes.

@param      out OutputStream to localize
@return     a localized output stream
@see        java.io.OutputStream
@see        java.io.BufferedWriter#BufferedWriter(java.io.Writer)
@see        java.io.OutputStreamWriter#OutputStreamWriter(java.io.OutputStream)
@see        java.io.PrintWriter#PrintWriter(java.io.OutputStream)
"
      end
    end

    class 938114 "SafeVarargs"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.CONSTRUCTOR, ElementType.METHOD})
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A programmer assertion that the body of the annotated method or
constructor does not perform potentially unsafe operations on its
varargs parameter.  Applying this annotation to a method or
constructor suppresses unchecked warnings about a
<i>non-reifiable</i> variable arity (vararg) type and suppresses
unchecked warnings about parameterized array creation at call
sites.

<p> In addition to the usage restrictions imposed by its {@link
Target @Target} meta-annotation, compilers are required to implement
additional usage restrictions on this annotation type; it is a
compile-time error if a method or constructor declaration is
annotated with a {@code @SafeVarargs} annotation, and either:
<ul>
<li>  the declaration is a fixed arity method or constructor

<li> the declaration is a variable arity method that is neither
{@code static} nor {@code final}.

</ul>

<p> Compilers are encouraged to issue warnings when this annotation
type is applied to a method or constructor declaration where:

<ul>

<li> The variable arity parameter has a reifiable element type,
which includes primitive types, {@code Object}, and {@code String}.
(The unchecked warnings this annotation type suppresses already do
not occur for a reifiable element type.)

<li> The body of the method or constructor declaration performs
potentially unsafe operations, such as an assignment to an element
of the variable arity parameter's array that generates an unchecked
warning.  Some unsafe operations do not trigger an unchecked
warning.  For example, the aliasing in

<blockquote><pre>
&#64;SafeVarargs // Not actually safe!
static void m(List&lt;String&gt;... stringLists) {
  Object[] array = stringLists;
  List&lt;Integer&gt; tmpList = Arrays.asList(42);
  array[0] = tmpList; // Semantically invalid, but compiles without warnings
  String s = stringLists[0].get(0); // Oh no, ClassCastException at runtime!
}
</pre></blockquote>

leads to a {@code ClassCastException} at runtime.

<p>Future versions of the platform may mandate compiler errors for
such unsafe operations.

</ul>

@since 1.7
@jls 4.7 Reifiable Types
@jls 8.4.1 Formal Parameters
@jls 9.6.3.7 @SafeVarargs
"
    end

    class 938242 "SecurityManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The security manager is a class that allows
applications to implement a security policy. It allows an
application to determine, before performing a possibly unsafe or
sensitive operation, what the operation is and whether
it is being attempted in a security context that allows the
operation to be performed. The
application can allow or disallow the operation.
<p>
The <code>SecurityManager</code> class contains many methods with
names that begin with the word <code>check</code>. These methods
are called by various methods in the Java libraries before those
methods perform certain potentially sensitive operations. The
invocation of such a <code>check</code> method typically looks like this:
<blockquote><pre>
    SecurityManager security = System.getSecurityManager();
    if (security != null) {
        security.check<i>XXX</i>(argument, &nbsp;.&nbsp;.&nbsp;.&nbsp;);
    }
</pre></blockquote>
<p>
The security manager is thereby given an opportunity to prevent
completion of the operation by throwing an exception. A security
manager routine simply returns if the operation is permitted, but
throws a <code>SecurityException</code> if the operation is not
permitted. The only exception to this convention is
<code>checkTopLevelWindow</code>, which returns a
<code>boolean</code> value.
<p>
The current security manager is set by the
<code>setSecurityManager</code> method in class
<code>System</code>. The current security manager is obtained
by the <code>getSecurityManager</code> method.
<p>
The special method
{@link SecurityManager#checkPermission(java.security.Permission)}
determines whether an access request indicated by a specified
permission should be granted or denied. The
default implementation calls

<pre>
  AccessController.checkPermission(perm);
</pre>

<p>
If a requested access is allowed,
<code>checkPermission</code> returns quietly. If denied, a
<code>SecurityException</code> is thrown.
<p>
As of Java 2 SDK v1.2, the default implementation of each of the other
<code>check</code> methods in <code>SecurityManager</code> is to
call the <code>SecurityManager checkPermission</code> method
to determine if the calling thread has permission to perform the requested
operation.
<p>
Note that the <code>checkPermission</code> method with
just a single permission argument always performs security checks
within the context of the currently executing thread.
Sometimes a security check that should be made within a given context
will actually need to be done from within a
<i>different</i> context (for example, from within a worker thread).
The {@link SecurityManager#getSecurityContext getSecurityContext} method
and the {@link SecurityManager#checkPermission(java.security.Permission,
java.lang.Object) checkPermission}
method that includes a context argument are provided
for this situation. The
<code>getSecurityContext</code> method returns a \"snapshot\"
of the current calling context. (The default implementation
returns an AccessControlContext object.) A sample call is
the following:

<pre>
  Object context = null;
  SecurityManager sm = System.getSecurityManager();
  if (sm != null) context = sm.getSecurityContext();
</pre>

<p>
The <code>checkPermission</code> method
that takes a context object in addition to a permission
makes access decisions based on that context,
rather than on that of the current execution thread.
Code within a different context can thus call that method,
passing the permission and the
previously-saved context object. A sample call, using the
SecurityManager <code>sm</code> obtained as in the previous example,
is the following:

<pre>
  if (sm != null) sm.checkPermission(permission, context);
</pre>

<p>Permissions fall into these categories: File, Socket, Net,
Security, Runtime, Property, AWT, Reflect, and Serializable.
The classes managing these various
permission categories are <code>java.io.FilePermission</code>,
<code>java.net.SocketPermission</code>,
<code>java.net.NetPermission</code>,
<code>java.security.SecurityPermission</code>,
<code>java.lang.RuntimePermission</code>,
<code>java.util.PropertyPermission</code>,
<code>java.awt.AWTPermission</code>,
<code>java.lang.reflect.ReflectPermission</code>, and
<code>java.io.SerializablePermission</code>.

<p>All but the first two (FilePermission and SocketPermission) are
subclasses of <code>java.security.BasicPermission</code>, which itself
is an abstract subclass of the
top-level class for permissions, which is
<code>java.security.Permission</code>. BasicPermission defines the
functionality needed for all permissions that contain a name
that follows the hierarchical property naming convention
(for example, \"exitVM\", \"setFactory\", \"queuePrintJob\", etc).
An asterisk
may appear at the end of the name, following a \".\", or by itself, to
signify a wildcard match. For example: \"a.*\" or \"*\" is valid,
\"*a\" or \"a*b\" is not valid.

<p>FilePermission and SocketPermission are subclasses of the
top-level class for permissions
(<code>java.security.Permission</code>). Classes like these
that have a more complicated name syntax than that used by
BasicPermission subclass directly from Permission rather than from
BasicPermission. For example,
for a <code>java.io.FilePermission</code> object, the permission name is
the path name of a file (or directory).

<p>Some of the permission classes have an \"actions\" list that tells
the actions that are permitted for the object.  For example,
for a <code>java.io.FilePermission</code> object, the actions list
(such as \"read, write\") specifies which actions are granted for the
specified file (or for files in the specified directory).

<p>Other permission classes are for \"named\" permissions -
ones that contain a name but no actions list; you either have the
named permission or you don't.

<p>Note: There is also a <code>java.security.AllPermission</code>
permission that implies all permissions. It exists to simplify the work
of system administrators who might need to perform multiple
tasks that require all (or numerous) permissions.
<p>
See <a href =\"../../../technotes/guides/security/permissions.html\">
Permissions in the JDK</a> for permission-related information.
This document includes, for example, a table listing the various SecurityManager
<code>check</code> methods and the permission(s) the default
implementation of each such method requires.
It also contains a table of all the version 1.2 methods
that require permissions, and for each such method tells
which permission it requires.
<p>
For more information about <code>SecurityManager</code> changes made in
the JDK and advice regarding porting of 1.1-style security managers,
see the <a href=\"../../../technotes/guides/security/index.html\">security documentation</a>.

@author  Arthur van Hoff
@author  Roland Schemers

@see     java.lang.ClassLoader
@see     java.lang.SecurityException
@see     java.lang.SecurityManager#checkTopLevelWindow(java.lang.Object)
 checkTopLevelWindow
@see     java.lang.System#getSecurityManager() getSecurityManager
@see     java.lang.System#setSecurityManager(java.lang.SecurityManager)
 setSecurityManager
@see     java.security.AccessController AccessController
@see     java.security.AccessControlContext AccessControlContext
@see     java.security.AccessControlException AccessControlException
@see     java.security.Permission
@see     java.security.BasicPermission
@see     java.io.FilePermission
@see     java.net.SocketPermission
@see     java.util.PropertyPermission
@see     java.lang.RuntimePermission
@see     java.awt.AWTPermission
@see     java.security.Policy Policy
@see     java.security.SecurityPermission SecurityPermission
@see     java.security.ProtectionDomain

@since   JDK1.0
"
      attribute 1681410 "inCheck"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field is <code>true</code> if there is a security check in
progress; <code>false</code> otherwise.

@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.

"
      end

      attribute 1681538 "initialized"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Have we been initialized. Effective against finalizer attacks.

"
      end

      operation 7080450 "hasAllPermission"
	private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns true if the current context has been granted AllPermission
"
      end

      operation 7080578 "getInCheck"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Tests if there is a security check in progress.

@return the value of the <code>inCheck</code> field. This field
         should contain <code>true</code> if a security check is
         in progress,
         <code>false</code> otherwise.
@see     java.lang.SecurityManager#inCheck
@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.
"
      end

      operation 7080706 "SecurityManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new <code>SecurityManager</code>.

<p> If there is a security manager already installed, this method first
calls the security manager's <code>checkPermission</code> method
with the <code>RuntimePermission(\"createSecurityManager\")</code>
permission to ensure the calling thread has permission to create a new
security manager.
This may result in throwing a <code>SecurityException</code>.

@exception  java.lang.SecurityException if a security manager already
            exists and its <code>checkPermission</code> method
            doesn't allow creation of a new security manager.
@see        java.lang.System#getSecurityManager()
@see        #checkPermission(java.security.Permission) checkPermission
@see java.lang.RuntimePermission
"
      end

      operation 7080834 "getClassContext"
	protected return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the current execution stack as an array of classes.
<p>
The length of the array is the number of methods on the execution
stack. The element at index <code>0</code> is the class of the
currently executing method, the element at index <code>1</code> is
the class of that method's caller, and so on.

@return  the execution stack.
"
      end

      operation 7080962 "currentClassLoader"
	protected return_type class_ref 129026 // ClassLoader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the class loader of the most recently executing method from
a class defined using a non-system class loader. A non-system
class loader is defined as being a class loader that is not equal to
the system class loader (as returned
by {@link ClassLoader#getSystemClassLoader}) or one of its ancestors.
<p>
This method will return
<code>null</code> in the following three cases:
<ol>
  <li>All methods on the execution stack are from classes
  defined using the system class loader or one of its ancestors.

  <li>All methods on the execution stack up to the first
  \"privileged\" caller
  (see {@link java.security.AccessController#doPrivileged})
  are from classes
  defined using the system class loader or one of its ancestors.

  <li> A call to <code>checkPermission</code> with
  <code>java.security.AllPermission</code> does not
  result in a SecurityException.

</ol>

@return  the class loader of the most recent occurrence on the stack
         of a method from a class defined using a non-system class
         loader.

@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.

@see  java.lang.ClassLoader#getSystemClassLoader() getSystemClassLoader
@see  #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7081090 "currentClassLoader0"
	private return_type class_ref 129026 // ClassLoader
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 7081218 "currentLoadedClass"
	protected return_type class_ref 130818 // Class
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the class of the most recently executing method from
a class defined using a non-system class loader. A non-system
class loader is defined as being a class loader that is not equal to
the system class loader (as returned
by {@link ClassLoader#getSystemClassLoader}) or one of its ancestors.
<p>
This method will return
<code>null</code> in the following three cases:
<ol>
  <li>All methods on the execution stack are from classes
  defined using the system class loader or one of its ancestors.

  <li>All methods on the execution stack up to the first
  \"privileged\" caller
  (see {@link java.security.AccessController#doPrivileged})
  are from classes
  defined using the system class loader or one of its ancestors.

  <li> A call to <code>checkPermission</code> with
  <code>java.security.AllPermission</code> does not
  result in a SecurityException.

</ol>

@return  the class  of the most recent occurrence on the stack
         of a method from a class defined using a non-system class
         loader.

@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.

@see  java.lang.ClassLoader#getSystemClassLoader() getSystemClassLoader
@see  #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7081346 "classDepth"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the stack depth of the specified class.

@param   name   the fully qualified name of the class to search for.
@return  the depth on the stack frame of the first occurrence of a
         method from a class with the specified name;
         <code>-1</code> if such a frame cannot be found.
@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.

"
      end

      operation 7081474 "classLoaderDepth"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the stack depth of the most recently executing method
from a class defined using a non-system class loader.  A non-system
class loader is defined as being a class loader that is not equal to
the system class loader (as returned
by {@link ClassLoader#getSystemClassLoader}) or one of its ancestors.
<p>
This method will return
-1 in the following three cases:
<ol>
  <li>All methods on the execution stack are from classes
  defined using the system class loader or one of its ancestors.

  <li>All methods on the execution stack up to the first
  \"privileged\" caller
  (see {@link java.security.AccessController#doPrivileged})
  are from classes
  defined using the system class loader or one of its ancestors.

  <li> A call to <code>checkPermission</code> with
  <code>java.security.AllPermission</code> does not
  result in a SecurityException.

</ol>

@return the depth on the stack frame of the most recent occurrence of
         a method from a class defined using a non-system class loader.

@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.

@see   java.lang.ClassLoader#getSystemClassLoader() getSystemClassLoader
@see   #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7081602 "classLoaderDepth0"
	private explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 7081730 "inClass"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Tests if a method from a class with the specified
        name is on the execution stack.

@param  name   the fully qualified name of the class.
@return <code>true</code> if a method from a class with the specified
        name is on the execution stack; <code>false</code> otherwise.
@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.
"
      end

      operation 7081858 "inClassLoader"
	protected explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Basically, tests if a method from a class defined using a
         class loader is on the execution stack.

@return  <code>true</code> if a call to <code>currentClassLoader</code>
         has a non-null return value.

@deprecated This type of security checking is not recommended.
 It is recommended that the <code>checkPermission</code>
 call be used instead.
@see        #currentClassLoader() currentClassLoader
"
      end

      operation 7081986 "getSecurityContext"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an object that encapsulates the current execution
environment. The result of this method is used, for example, by the
three-argument <code>checkConnect</code> method and by the
two-argument <code>checkRead</code> method.
These methods are needed because a trusted method may be called
on to read a file or open a socket on behalf of another method.
The trusted method needs to determine if the other (possibly
untrusted) method would be allowed to perform the operation on its
own.
<p> The default implementation of this method is to return
an <code>AccessControlContext</code> object.

@return  an implementation-dependent object that encapsulates
         sufficient information about the current execution environment
         to perform some security checks later.
@see     java.lang.SecurityManager#checkConnect(java.lang.String, int,
  java.lang.Object) checkConnect
@see     java.lang.SecurityManager#checkRead(java.lang.String,
  java.lang.Object) checkRead
@see     java.security.AccessControlContext AccessControlContext
"
      end

      operation 7082114 "checkPermission"
	public explicit_return_type "void"
	nparams 1
	  param inout name "perm" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the requested
access, specified by the given permission, is not permitted based
on the security policy currently in effect.
<p>
This method calls <code>AccessController.checkPermission</code>
with the given permission.

@param     perm   the requested permission.
@exception SecurityException if access is not permitted based on
           the current security policy.
@exception NullPointerException if the permission argument is
           <code>null</code>.
@since     1.2
"
      end

      operation 7082242 "checkPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "perm" type class_ref 257538 // Permission
	  param inout name "context" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
specified security context is denied access to the resource
specified by the given permission.
The context must be a security
context returned by a previous call to
<code>getSecurityContext</code> and the access control
decision is based upon the configured security policy for
that security context.
<p>
If <code>context</code> is an instance of
<code>AccessControlContext</code> then the
<code>AccessControlContext.checkPermission</code> method is
invoked with the specified permission.
<p>
If <code>context</code> is not an instance of
<code>AccessControlContext</code> then a
<code>SecurityException</code> is thrown.

@param      perm      the specified permission
@param      context   a system-dependent security context.
@exception  SecurityException  if the specified security context
            is not an instance of <code>AccessControlContext</code>
            (e.g., is <code>null</code>), or is denied access to the
            resource specified by the given permission.
@exception  NullPointerException if the permission argument is
            <code>null</code>.
@see        java.lang.SecurityManager#getSecurityContext()
@see java.security.AccessControlContext#checkPermission(java.security.Permission)
@since      1.2
"
      end

      operation 7082370 "checkCreateClassLoader"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to create a new class loader.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"createClassLoader\")</code>
permission.
<p>
If you override this method, then you should make a call to
<code>super.checkCreateClassLoader</code>
at the point the overridden method would normally throw an
exception.

@exception SecurityException if the calling thread does not
            have permission
            to create a new class loader.
@see        java.lang.ClassLoader#ClassLoader()
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      classrelation 3167490 // rootGroup (<unidirectional association>)
	relation 3167490 --->
	  a role_name "rootGroup" init_value " getRootGroup()" class_relation private
	    comment "
reference to the root thread group, used for the checkAccess
methods.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3167490 // rootGroup (<unidirectional association>)
	  b parent class_ref 128898 // ThreadGroup
      end

      operation 7082498 "getRootGroup"
	class_operation private return_type class_ref 128898 // ThreadGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7082626 "checkAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "t" type class_ref 128642 // Thread
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to modify the thread argument.
<p>
This method is invoked for the current security manager by the
<code>stop</code>, <code>suspend</code>, <code>resume</code>,
<code>setPriority</code>, <code>setName</code>, and
<code>setDaemon</code> methods of class <code>Thread</code>.
<p>
If the thread argument is a system thread (belongs to
the thread group with a <code>null</code> parent) then
this method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"modifyThread\")</code> permission.
If the thread argument is <i>not</i> a system thread,
this method just returns silently.
<p>
Applications that want a stricter policy should override this
method. If this method is overridden, the method that overrides
it should additionally check to see if the calling thread has the
<code>RuntimePermission(\"modifyThread\")</code> permission, and
if so, return silently. This is to ensure that code granted
that permission (such as the JDK itself) is allowed to
manipulate any thread.
<p>
If this method is overridden, then
<code>super.checkAccess</code> should
be called by the first statement in the overridden method, or the
equivalent security check should be placed in the overridden method.

@param      t   the thread to be checked.
@exception  SecurityException  if the calling thread does not have
            permission to modify the thread.
@exception  NullPointerException if the thread argument is
            <code>null</code>.
@see        java.lang.Thread#resume() resume
@see        java.lang.Thread#setDaemon(boolean) setDaemon
@see        java.lang.Thread#setName(java.lang.String) setName
@see        java.lang.Thread#setPriority(int) setPriority
@see        java.lang.Thread#stop() stop
@see        java.lang.Thread#suspend() suspend
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7082754 "checkAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 128898 // ThreadGroup
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to modify the thread group argument.
<p>
This method is invoked for the current security manager when a
new child thread or child thread group is created, and by the
<code>setDaemon</code>, <code>setMaxPriority</code>,
<code>stop</code>, <code>suspend</code>, <code>resume</code>, and
<code>destroy</code> methods of class <code>ThreadGroup</code>.
<p>
If the thread group argument is the system thread group (
has a <code>null</code> parent) then
this method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"modifyThreadGroup\")</code> permission.
If the thread group argument is <i>not</i> the system thread group,
this method just returns silently.
<p>
Applications that want a stricter policy should override this
method. If this method is overridden, the method that overrides
it should additionally check to see if the calling thread has the
<code>RuntimePermission(\"modifyThreadGroup\")</code> permission, and
if so, return silently. This is to ensure that code granted
that permission (such as the JDK itself) is allowed to
manipulate any thread.
<p>
If this method is overridden, then
<code>super.checkAccess</code> should
be called by the first statement in the overridden method, or the
equivalent security check should be placed in the overridden method.

@param      g   the thread group to be checked.
@exception  SecurityException  if the calling thread does not have
            permission to modify the thread group.
@exception  NullPointerException if the thread group argument is
            <code>null</code>.
@see        java.lang.ThreadGroup#destroy() destroy
@see        java.lang.ThreadGroup#resume() resume
@see        java.lang.ThreadGroup#setDaemon(boolean) setDaemon
@see        java.lang.ThreadGroup#setMaxPriority(int) setMaxPriority
@see        java.lang.ThreadGroup#stop() stop
@see        java.lang.ThreadGroup#suspend() suspend
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7082882 "checkExit"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to cause the Java Virtual Machine to
halt with the specified status code.
<p>
This method is invoked for the current security manager by the
<code>exit</code> method of class <code>Runtime</code>. A status
of <code>0</code> indicates success; other values indicate various
errors.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"exitVM.\"+status)</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkExit</code>
at the point the overridden method would normally throw an
exception.

@param      status   the exit status.
@exception SecurityException if the calling thread does not have
             permission to halt the Java Virtual Machine with
             the specified status.
@see        java.lang.Runtime#exit(int) exit
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083010 "checkExec"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cmd" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to create a subprocess.
<p>
This method is invoked for the current security manager by the
<code>exec</code> methods of class <code>Runtime</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>FilePermission(cmd,\"execute\")</code> permission
if cmd is an absolute path, otherwise it calls
<code>checkPermission</code> with
<code>FilePermission(\"&lt;&lt;ALL FILES&gt;&gt;\",\"execute\")</code>.
<p>
If you override this method, then you should make a call to
<code>super.checkExec</code>
at the point the overridden method would normally throw an
exception.

@param      cmd   the specified system command.
@exception  SecurityException if the calling thread does not have
            permission to create a subprocess.
@exception  NullPointerException if the <code>cmd</code> argument is
            <code>null</code>.
@see     java.lang.Runtime#exec(java.lang.String)
@see     java.lang.Runtime#exec(java.lang.String, java.lang.String[])
@see     java.lang.Runtime#exec(java.lang.String[])
@see     java.lang.Runtime#exec(java.lang.String[], java.lang.String[])
@see     #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083138 "checkLink"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lib" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to dynamic link the library code
specified by the string argument file. The argument is either a
simple library name or a complete filename.
<p>
This method is invoked for the current security manager by
methods <code>load</code> and <code>loadLibrary</code> of class
<code>Runtime</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"loadLibrary.\"+lib)</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkLink</code>
at the point the overridden method would normally throw an
exception.

@param      lib   the name of the library.
@exception  SecurityException if the calling thread does not have
            permission to dynamically link the library.
@exception  NullPointerException if the <code>lib</code> argument is
            <code>null</code>.
@see        java.lang.Runtime#load(java.lang.String)
@see        java.lang.Runtime#loadLibrary(java.lang.String)
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083266 "checkRead"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to read from the specified file
descriptor.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"readFileDescriptor\")</code>
permission.
<p>
If you override this method, then you should make a call to
<code>super.checkRead</code>
at the point the overridden method would normally throw an
exception.

@param      fd   the system-dependent file descriptor.
@exception  SecurityException  if the calling thread does not have
            permission to access the specified file descriptor.
@exception  NullPointerException if the file descriptor argument is
            <code>null</code>.
@see        java.io.FileDescriptor
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083394 "checkRead"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to read the file specified by the
string argument.
<p>
This method calls <code>checkPermission</code> with the
<code>FilePermission(file,\"read\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkRead</code>
at the point the overridden method would normally throw an
exception.

@param      file   the system-dependent file name.
@exception  SecurityException if the calling thread does not have
            permission to access the specified file.
@exception  NullPointerException if the <code>file</code> argument is
            <code>null</code>.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083522 "checkRead"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" type class_ref 128130 // String
	  param inout name "context" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
specified security context is not allowed to read the file
specified by the string argument. The context must be a security
context returned by a previous call to
<code>getSecurityContext</code>.
<p> If <code>context</code> is an instance of
<code>AccessControlContext</code> then the
<code>AccessControlContext.checkPermission</code> method will
be invoked with the <code>FilePermission(file,\"read\")</code> permission.
<p> If <code>context</code> is not an instance of
<code>AccessControlContext</code> then a
<code>SecurityException</code> is thrown.
<p>
If you override this method, then you should make a call to
<code>super.checkRead</code>
at the point the overridden method would normally throw an
exception.

@param      file      the system-dependent filename.
@param      context   a system-dependent security context.
@exception  SecurityException  if the specified security context
            is not an instance of <code>AccessControlContext</code>
            (e.g., is <code>null</code>), or does not have permission
            to read the specified file.
@exception  NullPointerException if the <code>file</code> argument is
            <code>null</code>.
@see        java.lang.SecurityManager#getSecurityContext()
@see        java.security.AccessControlContext#checkPermission(java.security.Permission)
"
      end

      operation 7083650 "checkWrite"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 923778 // FileDescriptor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to write to the specified file
descriptor.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"writeFileDescriptor\")</code>
permission.
<p>
If you override this method, then you should make a call to
<code>super.checkWrite</code>
at the point the overridden method would normally throw an
exception.

@param      fd   the system-dependent file descriptor.
@exception SecurityException  if the calling thread does not have
            permission to access the specified file descriptor.
@exception  NullPointerException if the file descriptor argument is
            <code>null</code>.
@see        java.io.FileDescriptor
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083778 "checkWrite"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to write to the file specified by
the string argument.
<p>
This method calls <code>checkPermission</code> with the
<code>FilePermission(file,\"write\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkWrite</code>
at the point the overridden method would normally throw an
exception.

@param      file   the system-dependent filename.
@exception  SecurityException  if the calling thread does not
            have permission to access the specified file.
@exception  NullPointerException if the <code>file</code> argument is
            <code>null</code>.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7083906 "checkDelete"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to delete the specified file.
<p>
This method is invoked for the current security manager by the
<code>delete</code> method of class <code>File</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>FilePermission(file,\"delete\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkDelete</code>
at the point the overridden method would normally throw an
exception.

@param      file   the system-dependent filename.
@exception  SecurityException if the calling thread does not
            have permission to delete the file.
@exception  NullPointerException if the <code>file</code> argument is
            <code>null</code>.
@see        java.io.File#delete()
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084034 "checkConnect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to open a socket connection to the
specified host and port number.
<p>
A port number of <code>-1</code> indicates that the calling
method is attempting to determine the IP address of the specified
host name.
<p>
This method calls <code>checkPermission</code> with the
<code>SocketPermission(host+\":\"+port,\"connect\")</code> permission if
the port is not equal to -1. If the port is equal to -1, then
it calls <code>checkPermission</code> with the
<code>SocketPermission(host,\"resolve\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkConnect</code>
at the point the overridden method would normally throw an
exception.

@param      host   the host name port to connect to.
@param      port   the protocol port to connect to.
@exception  SecurityException  if the calling thread does not have
            permission to open a socket connection to the specified
              <code>host</code> and <code>port</code>.
@exception  NullPointerException if the <code>host</code> argument is
            <code>null</code>.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084162 "checkConnect"
	public explicit_return_type "void"
	nparams 3
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	  param inout name "context" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
specified security context is not allowed to open a socket
connection to the specified host and port number.
<p>
A port number of <code>-1</code> indicates that the calling
method is attempting to determine the IP address of the specified
host name.
<p> If <code>context</code> is not an instance of
<code>AccessControlContext</code> then a
<code>SecurityException</code> is thrown.
<p>
Otherwise, the port number is checked. If it is not equal
to -1, the <code>context</code>'s <code>checkPermission</code>
method is called with a
<code>SocketPermission(host+\":\"+port,\"connect\")</code> permission.
If the port is equal to -1, then
the <code>context</code>'s <code>checkPermission</code> method
is called with a
<code>SocketPermission(host,\"resolve\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkConnect</code>
at the point the overridden method would normally throw an
exception.

@param      host      the host name port to connect to.
@param      port      the protocol port to connect to.
@param      context   a system-dependent security context.
@exception  SecurityException if the specified security context
            is not an instance of <code>AccessControlContext</code>
            (e.g., is <code>null</code>), or does not have permission
            to open a socket connection to the specified
            <code>host</code> and <code>port</code>.
@exception  NullPointerException if the <code>host</code> argument is
            <code>null</code>.
@see        java.lang.SecurityManager#getSecurityContext()
@see        java.security.AccessControlContext#checkPermission(java.security.Permission)
"
      end

      operation 7084290 "checkListen"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to wait for a connection request on
the specified local port number.
<p>
This method calls <code>checkPermission</code> with the
<code>SocketPermission(\"localhost:\"+port,\"listen\")</code>.
<p>
If you override this method, then you should make a call to
<code>super.checkListen</code>
at the point the overridden method would normally throw an
exception.

@param      port   the local port.
@exception  SecurityException  if the calling thread does not have
            permission to listen on the specified port.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084418 "checkAccept"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 128130 // String
	  param in name "port" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not permitted to accept a socket connection from
the specified host and port number.
<p>
This method is invoked for the current security manager by the
<code>accept</code> method of class <code>ServerSocket</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>SocketPermission(host+\":\"+port,\"accept\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkAccept</code>
at the point the overridden method would normally throw an
exception.

@param      host   the host name of the socket connection.
@param      port   the port number of the socket connection.
@exception  SecurityException  if the calling thread does not have
            permission to accept the connection.
@exception  NullPointerException if the <code>host</code> argument is
            <code>null</code>.
@see        java.net.ServerSocket#accept()
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084546 "checkMulticast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maddr" type class_ref 513154 // InetAddress
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to use
(join/leave/send/receive) IP multicast.
<p>
This method calls <code>checkPermission</code> with the
<code>java.net.SocketPermission(maddr.getHostAddress(),
\"accept,connect\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkMulticast</code>
at the point the overridden method would normally throw an
exception.

@param      maddr  Internet group address to be used.
@exception  SecurityException  if the calling thread is not allowed to
 use (join/leave/send/receive) IP multicast.
@exception  NullPointerException if the address argument is
            <code>null</code>.
@since      JDK1.1
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084674 "checkMulticast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "maddr" type class_ref 513154 // InetAddress
	  param in name "ttl" explicit_type "byte"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to use
(join/leave/send/receive) IP multicast.
<p>
This method calls <code>checkPermission</code> with the
<code>java.net.SocketPermission(maddr.getHostAddress(),
\"accept,connect\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkMulticast</code>
at the point the overridden method would normally throw an
exception.

@param      maddr  Internet group address to be used.
@param      ttl        value in use, if it is multicast send.
Note: this particular implementation does not use the ttl
parameter.
@exception  SecurityException  if the calling thread is not allowed to
 use (join/leave/send/receive) IP multicast.
@exception  NullPointerException if the address argument is
            <code>null</code>.
@since      JDK1.1
@deprecated Use #checkPermission(java.security.Permission) instead
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084802 "checkPropertiesAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access or modify the system
properties.
<p>
This method is used by the <code>getProperties</code> and
<code>setProperties</code> methods of class <code>System</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>PropertyPermission(\"*\", \"read,write\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkPropertiesAccess</code>
at the point the overridden method would normally throw an
exception.
<p>

@exception  SecurityException  if the calling thread does not have
            permission to access or modify the system properties.
@see        java.lang.System#getProperties()
@see        java.lang.System#setProperties(java.util.Properties)
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7084930 "checkPropertyAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access the system property with
the specified <code>key</code> name.
<p>
This method is used by the <code>getProperty</code> method of
class <code>System</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>PropertyPermission(key, \"read\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkPropertyAccess</code>
at the point the overridden method would normally throw an
exception.

@param      key   a system property key.

@exception  SecurityException  if the calling thread does not have
            permission to access the specified system property.
@exception  NullPointerException if the <code>key</code> argument is
            <code>null</code>.
@exception  IllegalArgumentException if <code>key</code> is empty.

@see        java.lang.System#getProperty(java.lang.String)
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085058 "checkTopLevelWindow"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "window" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns <code>false</code> if the calling
thread is not trusted to bring up the top-level window indicated
by the <code>window</code> argument. In this case, the caller can
still decide to show the window, but the window should include
some sort of visual warning. If the method returns
<code>true</code>, then the window can be shown without any
special restrictions.
<p>
See class <code>Window</code> for more information on trusted and
untrusted windows.
<p>
This method calls
<code>checkPermission</code> with the
<code>AWTPermission(\"showWindowWithoutWarningBanner\")</code> permission,
and returns <code>true</code> if a SecurityException is not thrown,
otherwise it returns <code>false</code>.
In the case of subset Profiles of Java SE that do not include the
{@code java.awt} package, {@code checkPermission} is instead called
to check the permission {@code java.security.AllPermission}.
<p>
If you override this method, then you should make a call to
<code>super.checkTopLevelWindow</code>
at the point the overridden method would normally return
<code>false</code>, and the value of
<code>super.checkTopLevelWindow</code> should
be returned.

@param      window   the new window that is being created.
@return     <code>true</code> if the calling thread is trusted to put up
            top-level windows; <code>false</code> otherwise.
@exception  NullPointerException if the <code>window</code> argument is
            <code>null</code>.
@deprecated The dependency on {@code AWTPermission} creates an
            impediment to future modularization of the Java platform.
            Users of this method should instead invoke
            {@link #checkPermission} directly.
            This method will be changed in a future release to check
            the permission {@code java.security.AllPermission}.
@see        java.awt.Window
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085186 "checkPrintJobAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to initiate a print job request.
<p>
This method calls
<code>checkPermission</code> with the
<code>RuntimePermission(\"queuePrintJob\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkPrintJobAccess</code>
at the point the overridden method would normally throw an
exception.
<p>

@exception  SecurityException  if the calling thread does not have
            permission to initiate a print job request.
@since   JDK1.1
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085314 "checkSystemClipboardAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access the system clipboard.
<p>
This method calls <code>checkPermission</code> with the
<code>AWTPermission(\"accessClipboard\")</code>
permission.
In the case of subset Profiles of Java SE that do not include the
{@code java.awt} package, {@code checkPermission} is instead called
to check the permission {@code java.security.AllPermission}.
<p>
If you override this method, then you should make a call to
<code>super.checkSystemClipboardAccess</code>
at the point the overridden method would normally throw an
exception.

@since   JDK1.1
@exception  SecurityException  if the calling thread does not have
            permission to access the system clipboard.
@deprecated The dependency on {@code AWTPermission} creates an
            impediment to future modularization of the Java platform.
            Users of this method should instead invoke
            {@link #checkPermission} directly.
            This method will be changed in a future release to check
            the permission {@code java.security.AllPermission}.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085442 "checkAwtEventQueueAccess"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access the AWT event queue.
<p>
This method calls <code>checkPermission</code> with the
<code>AWTPermission(\"accessEventQueue\")</code> permission.
In the case of subset Profiles of Java SE that do not include the
{@code java.awt} package, {@code checkPermission} is instead called
to check the permission {@code java.security.AllPermission}.

<p>
If you override this method, then you should make a call to
<code>super.checkAwtEventQueueAccess</code>
at the point the overridden method would normally throw an
exception.

@since   JDK1.1
@exception  SecurityException  if the calling thread does not have
            permission to access the AWT event queue.
@deprecated The dependency on {@code AWTPermission} creates an
            impediment to future modularization of the Java platform.
            Users of this method should instead invoke
            {@link #checkPermission} directly.
            This method will be changed in a future release to check
            the permission {@code java.security.AllPermission}.
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      attribute 1681666 "packageAccessValid"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "We have an initial invalid bit (initially false) for the class
variables which tell if the cache is valid.  If the underlying
java.security.Security property changes via setProperty(), the
Security class uses reflection to change the variable and thus
invalidate the cache.

Locking is handled by synchronization to the
packageAccessLock/packageDefinitionLock objects.  They are only
used in this class.

Note that cache invalidation as a result of the property change
happens without using these locks, so there may be a delay between
when a thread updates the property and when other threads updates
the cache.

"
      end

      classrelation 3167618 // packageAccess (<unidirectional association>)
	relation 3167618 --->
	  a role_name "packageAccess" multiplicity "[]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3167618 // packageAccess (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3167746 // packageAccessLock (<unidirectional association>)
	relation 3167746 --->
	  a role_name "packageAccessLock" init_value " new Object()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3167746 // packageAccessLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 1681794 "packageDefinitionValid"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3167874 // packageDefinition (<unidirectional association>)
	relation 3167874 --->
	  a role_name "packageDefinition" multiplicity "[]" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3167874 // packageDefinition (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3168002 // packageDefinitionLock (<unidirectional association>)
	relation 3168002 --->
	  a role_name "packageDefinitionLock" init_value " new Object()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3168002 // packageDefinitionLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7085570 "getPackages"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "p" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7085698 "checkPackageAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pkg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access the package specified by
the argument.
<p>
This method is used by the <code>loadClass</code> method of class
loaders.
<p>
This method first gets a list of
restricted packages by obtaining a comma-separated list from
a call to
<code>java.security.Security.getProperty(\"package.access\")</code>,
and checks to see if <code>pkg</code> starts with or equals
any of the restricted packages. If it does, then
<code>checkPermission</code> gets called with the
<code>RuntimePermission(\"accessClassInPackage.\"+pkg)</code>
permission.
<p>
If this method is overridden, then
<code>super.checkPackageAccess</code> should be called
as the first line in the overridden method.

@param      pkg   the package name.
@exception  SecurityException  if the calling thread does not have
            permission to access the specified package.
@exception  NullPointerException if the package name argument is
            <code>null</code>.
@see        java.lang.ClassLoader#loadClass(java.lang.String, boolean)
 loadClass
@see        java.security.Security#getProperty getProperty
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085826 "checkPackageDefinition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pkg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to define classes in the package
specified by the argument.
<p>
This method is used by the <code>loadClass</code> method of some
class loaders.
<p>
This method first gets a list of restricted packages by
obtaining a comma-separated list from a call to
<code>java.security.Security.getProperty(\"package.definition\")</code>,
and checks to see if <code>pkg</code> starts with or equals
any of the restricted packages. If it does, then
<code>checkPermission</code> gets called with the
<code>RuntimePermission(\"defineClassInPackage.\"+pkg)</code>
permission.
<p>
If this method is overridden, then
<code>super.checkPackageDefinition</code> should be called
as the first line in the overridden method.

@param      pkg   the package name.
@exception  SecurityException  if the calling thread does not have
            permission to define classes in the specified package.
@see        java.lang.ClassLoader#loadClass(java.lang.String, boolean)
@see        java.security.Security#getProperty getProperty
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7085954 "checkSetFactory"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to set the socket factory used by
<code>ServerSocket</code> or <code>Socket</code>, or the stream
handler factory used by <code>URL</code>.
<p>
This method calls <code>checkPermission</code> with the
<code>RuntimePermission(\"setFactory\")</code> permission.
<p>
If you override this method, then you should make a call to
<code>super.checkSetFactory</code>
at the point the overridden method would normally throw an
exception.
<p>

@exception  SecurityException  if the calling thread does not have
            permission to specify a socket factory or a stream
            handler factory.

@see        java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory) setSocketFactory
@see        java.net.Socket#setSocketImplFactory(java.net.SocketImplFactory) setSocketImplFactory
@see        java.net.URL#setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory) setURLStreamHandlerFactory
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7086082 "checkMemberAccess"
	public explicit_return_type "void"
	nparams 2
	  param inout name "clazz" type class_ref 130818 // Class
	  param in name "which" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@CallerSensitive
"
	
	
	
	comment "Throws a <code>SecurityException</code> if the
calling thread is not allowed to access members.
<p>
The default policy is to allow access to PUBLIC members, as well
as access to classes that have the same class loader as the caller.
In all other cases, this method calls <code>checkPermission</code>
with the <code>RuntimePermission(\"accessDeclaredMembers\")
</code> permission.
<p>
If this method is overridden, then a call to
<code>super.checkMemberAccess</code> cannot be made,
as the default implementation of <code>checkMemberAccess</code>
relies on the code being checked being at a stack depth of
4.

@param clazz the class that reflection is to be performed on.

@param which type of access, PUBLIC or DECLARED.

@exception  SecurityException if the caller does not have
            permission to access members.
@exception  NullPointerException if the <code>clazz</code> argument is
            <code>null</code>.

@deprecated This method relies on the caller being at a stack depth
            of 4 which is error-prone and cannot be enforced by the runtime.
            Users of this method should instead invoke {@link #checkPermission}
            directly.  This method will be changed in a future release
            to check the permission {@code java.security.AllPermission}.

@see java.lang.reflect.Member
@since JDK1.1
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7086210 "checkSecurityAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether the permission with the specified permission target
name should be granted or denied.

<p> If the requested permission is allowed, this method returns
quietly. If denied, a SecurityException is raised.

<p> This method creates a <code>SecurityPermission</code> object for
the given permission target name and calls <code>checkPermission</code>
with it.

<p> See the documentation for
<code>{@link java.security.SecurityPermission}</code> for
a list of possible permission target names.

<p> If you override this method, then you should make a call to
<code>super.checkSecurityAccess</code>
at the point the overridden method would normally throw an
exception.

@param target the target name of the <code>SecurityPermission</code>.

@exception SecurityException if the calling thread does not have
permission for the requested access.
@exception NullPointerException if <code>target</code> is null.
@exception IllegalArgumentException if <code>target</code> is empty.

@since   JDK1.1
@see        #checkPermission(java.security.Permission) checkPermission
"
      end

      operation 7086338 "currentLoadedClass0"
	private return_type class_ref 130818 // Class
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
s"
	
	
	
      end

      operation 7086466 "getThreadGroup"
	public return_type class_ref 128898 // ThreadGroup
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the thread group into which to instantiate any new
thread being created at the time this is being called.
By default, it returns the thread group of the current
thread. This should be overridden by a specific security
manager to return the appropriate thread group.

@return  ThreadGroup that new threads are instantiated into
@since   JDK1.1
@see     java.lang.ThreadGroup
"
      end
    end

    class 938370 "Short"
      visibility public 
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The {@code Short} class wraps a value of primitive type {@code
short} in an object.  An object of type {@code Short} contains a
single field whose type is {@code short}.

<p>In addition, this class provides several methods for converting
a {@code short} to a {@code String} and a {@code String} to a
{@code short}, as well as other constants and methods useful when
dealing with a {@code short}.

@author  Nakul Saraiya
@author  Joseph D. Darcy
@see     java.lang.Number
@since   JDK1.1
"
      classrelation 3168130 // <generalisation>
	relation 3168130 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3168130 // <generalisation>
	  b parent class_ref 398210 // Number
      end

      classrelation 3168258 // <realization>
	relation 3168258 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 3168258 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      attribute 1681922 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "short"
	init_value " -32768"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the minimum value a {@code short} can
have, -2<sup>15</sup>.

"
      end

      attribute 1682050 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 32767"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant holding the maximum value a {@code short} can
have, 2<sup>15</sup>-1.

"
      end

      classrelation 3168386 // TYPE (<unidirectional association>)
	relation 3168386 --->
	  a role_name "TYPE" init_value " (Class<Short>) Class.getPrimitiveClass(\"short\")" class_relation const_relation public
	    comment "
The {@code Class} instance representing the primitive type
{@code short}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Short> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 3168386 // TYPE (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      operation 7086594 "toString"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param in name "s" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@code String} object representing the
specified {@code short}. The radix is assumed to be 10.

@param s the {@code short} to be converted
@return the string representation of the specified {@code short}
@see java.lang.Integer#toString(int)
"
      end

      operation 7086722 "parseShort"
	class_operation public explicit_return_type "short"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed {@code short} in the
radix specified by the second argument. The characters in the
string must all be digits, of the specified radix (as
determined by whether {@link java.lang.Character#digit(char,
int)} returns a nonnegative value) except that the first
character may be an ASCII minus sign {@code '-'}
({@code '\\u005Cu002D'}) to indicate a negative value or an
ASCII plus sign {@code '+'} ({@code '\\u005Cu002B'}) to
indicate a positive value.  The resulting {@code short} value
is returned.

<p>An exception of type {@code NumberFormatException} is
thrown if any of the following situations occurs:
<ul>
<li> The first argument is {@code null} or is a string of
length zero.

<li> The radix is either smaller than {@link
java.lang.Character#MIN_RADIX} or larger than {@link
java.lang.Character#MAX_RADIX}.

<li> Any character of the string is not a digit of the
specified radix, except that the first character may be a minus
sign {@code '-'} ({@code '\\u005Cu002D'}) or plus sign
{@code '+'} ({@code '\\u005Cu002B'}) provided that the
string is longer than length 1.

<li> The value represented by the string is not a value of type
{@code short}.
</ul>

@param s         the {@code String} containing the
                 {@code short} representation to be parsed
@param radix     the radix to be used while parsing {@code s}
@return          the {@code short} represented by the string
                 argument in the specified radix.
@throws          NumberFormatException If the {@code String}
                 does not contain a parsable {@code short}.
"
      end

      operation 7086850 "parseShort"
	class_operation public explicit_return_type "short"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the string argument as a signed decimal {@code
short}. The characters in the string must all be decimal
digits, except that the first character may be an ASCII minus
sign {@code '-'} ({@code '\\u005Cu002D'}) to indicate a
negative value or an ASCII plus sign {@code '+'}
({@code '\\u005Cu002B'}) to indicate a positive value.  The
resulting {@code short} value is returned, exactly as if the
argument and the radix 10 were given as arguments to the {@link
#parseShort(java.lang.String, int)} method.

@param s a {@code String} containing the {@code short}
         representation to be parsed
@return  the {@code short} value represented by the
         argument in decimal.
@throws  NumberFormatException If the string does not
         contain a parsable {@code short}.
"
      end

      operation 7086978 "valueOf"
	class_operation public return_type class_ref 938370 // Short
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Short} object holding the value
extracted from the specified {@code String} when parsed
with the radix given by the second argument. The first argument
is interpreted as representing a signed {@code short} in
the radix specified by the second argument, exactly as if the
argument were given to the {@link #parseShort(java.lang.String,
int)} method. The result is a {@code Short} object that
represents the {@code short} value specified by the string.

<p>In other words, this method returns a {@code Short} object
equal to the value of:

<blockquote>
 {@code new Short(Short.parseShort(s, radix))}
</blockquote>

@param s         the string to be parsed
@param radix     the radix to be used in interpreting {@code s}
@return          a {@code Short} object holding the value
                 represented by the string argument in the
                 specified radix.
@throws          NumberFormatException If the {@code String} does
                 not contain a parsable {@code short}.
"
      end

      operation 7087106 "valueOf"
	class_operation public return_type class_ref 938370 // Short
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Short} object holding the
value given by the specified {@code String}. The argument
is interpreted as representing a signed decimal
{@code short}, exactly as if the argument were given to
the {@link #parseShort(java.lang.String)} method. The result is
a {@code Short} object that represents the
{@code short} value specified by the string.

<p>In other words, this method returns a {@code Short} object
equal to the value of:

<blockquote>
 {@code new Short(Short.parseShort(s))}
</blockquote>

@param s the string to be parsed
@return  a {@code Short} object holding the value
         represented by the string argument
@throws  NumberFormatException If the {@code String} does
         not contain a parsable {@code short}.
"
      end

      class 938498 "ShortCache"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 7087234 "ShortCache"
	  private explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3168514 // cache (<unidirectional association>)
	  relation 3168514 --->
	    a role_name "cache" multiplicity "[]" init_value " new Short[-(-128) + 127 + 1]" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 3168514 // cache (<unidirectional association>)
	    b parent class_ref 938370 // Short
	end

	extra_member 158082 "initialization"
	  
	  cpp "" ""
	  java "  static {
            for(int i = 0; i < cache.length; i++)
                cache[i] = new Short((short)(i - 128));
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end
      end

      operation 7087362 "valueOf"
	class_operation public return_type class_ref 938370 // Short
	nparams 1
	  param in name "s" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Short} instance representing the specified
{@code short} value.
If a new {@code Short} instance is not required, this method
should generally be used in preference to the constructor
{@link #Short(short)}, as this method is likely to yield
significantly better space and time performance by caching
frequently requested values.

This method will always cache values in the range -128 to 127,
inclusive, and may cache other values outside of this range.

@param  s a short value.
@return a {@code Short} instance representing {@code s}.
@since  1.5
"
      end

      operation 7087490 "decode"
	class_operation public return_type class_ref 938370 // Short
	nparams 1
	  param inout name "nm" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes a {@code String} into a {@code Short}.
Accepts decimal, hexadecimal, and octal numbers given by
the following grammar:

<blockquote>
<dl>
<dt><i>DecodableString:</i>
<dd><i>Sign<sub>opt</sub> DecimalNumeral</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0x} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0X} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code #} <i>HexDigits</i>
<dd><i>Sign<sub>opt</sub></i> {@code 0} <i>OctalDigits</i>

<dt><i>Sign:</i>
<dd>{@code -}
<dd>{@code +}
</dl>
</blockquote>

<i>DecimalNumeral</i>, <i>HexDigits</i>, and <i>OctalDigits</i>
are as defined in section 3.10.1 of
<cite>The Java&trade; Language Specification</cite>,
except that underscores are not accepted between digits.

<p>The sequence of characters following an optional
sign and/or radix specifier (\"{@code 0x}\", \"{@code 0X}\",
\"{@code #}\", or leading zero) is parsed as by the {@code
Short.parseShort} method with the indicated radix (10, 16, or
8).  This sequence of characters must represent a positive
value or a {@link NumberFormatException} will be thrown.  The
result is negated if first character of the specified {@code
String} is the minus sign.  No whitespace characters are
permitted in the {@code String}.

@param     nm the {@code String} to decode.
@return    a {@code Short} object holding the {@code short}
           value represented by {@code nm}
@throws    NumberFormatException  if the {@code String} does not
           contain a parsable {@code short}.
@see java.lang.Short#parseShort(java.lang.String, int)
"
      end

      attribute 1682178 "value"
	const_attribute private explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The value of the {@code Short}.

@serial

"
      end

      operation 7087618 "Short"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Short} object that
represents the specified {@code short} value.

@param value     the value to be represented by the
                 {@code Short}.
"
      end

      operation 7087746 "Short"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 516098 // NumberFormatException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a newly allocated {@code Short} object that
represents the {@code short} value indicated by the
{@code String} parameter. The string is converted to a
{@code short} value in exactly the manner used by the
{@code parseShort} method for radix 10.

@param s the {@code String} to be converted to a
         {@code Short}
@throws  NumberFormatException If the {@code String}
         does not contain a parsable {@code short}.
@see     java.lang.Short#parseShort(java.lang.String, int)
"
      end

      operation 7087874 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as a {@code byte} after
a narrowing primitive conversion.
@jls 5.1.3 Narrowing Primitive Conversions
"
      end

      operation 7088002 "shortValue"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as a
{@code short}.
"
      end

      operation 7088130 "intValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as an {@code int} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7088258 "longValue"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as a {@code long} after
a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7088386 "floatValue"
	public explicit_return_type "float"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as a {@code float}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7088514 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of this {@code Short} as a {@code double}
after a widening primitive conversion.
@jls 5.1.2 Widening Primitive Conversions
"
      end

      operation 7088642 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} object representing this
{@code Short}'s value.  The value is converted to signed
decimal representation and returned as a string, exactly as if
the {@code short} value were given as an argument to the
{@link java.lang.Short#toString(short)} method.

@return  a string representation of the value of this object in
         base&nbsp;10.
"
      end

      operation 7088770 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a hash code for this {@code Short}; equal to the result
of invoking {@code intValue()}.

@return a hash code value for this {@code Short}
"
      end

      operation 7088898 "hashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code for a {@code short} value; compatible with
{@code Short.hashCode()}.

@param value the value to hash
@return a hash code value for a {@code short} value.
@since 1.8
"
      end

      operation 7089026 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object.  The result is
{@code true} if and only if the argument is not
{@code null} and is a {@code Short} object that
contains the same {@code short} value as this object.

@param obj       the object to compare with
@return          {@code true} if the objects are the same;
                 {@code false} otherwise.
"
      end

      operation 7089154 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "anotherShort" type class_ref 938370 // Short
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code Short} objects numerically.

@param   anotherShort   the {@code Short} to be compared.
@return  the value {@code 0} if this {@code Short} is
         equal to the argument {@code Short}; a value less than
         {@code 0} if this {@code Short} is numerically less
         than the argument {@code Short}; and a value greater than
          {@code 0} if this {@code Short} is numerically
          greater than the argument {@code Short} (signed
          comparison).
@since   1.2
"
      end

      operation 7089282 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "short"
	  param in name "y" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code short} values numerically.
The value returned is identical to what would be returned by:
<pre>
   Short.valueOf(x).compareTo(Short.valueOf(y))
</pre>

@param  x the first {@code short} to compare
@param  y the second {@code short} to compare
@return the value {@code 0} if {@code x == y};
        a value less than {@code 0} if {@code x < y}; and
        a value greater than {@code 0} if {@code x > y}
@since 1.7
"
      end

      attribute 1682306 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bits used to represent a {@code short} value in two's
complement binary form.
@since 1.5

"
      end

      attribute 1682434 "BYTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " SIZE / Byte.SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of bytes used to represent a {@code short} value in two's
complement binary form.

@since 1.8

"
      end

      operation 7089410 "reverseBytes"
	class_operation public explicit_return_type "short"
	nparams 1
	  param in name "i" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value obtained by reversing the order of the bytes in the
two's complement representation of the specified {@code short} value.

@param i the value whose bytes are to be reversed
@return the value obtained by reversing (or, equivalently, swapping)
    the bytes in the specified {@code short} value.
@since 1.5
"
      end

      operation 7089538 "toUnsignedInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the argument to an {@code int} by an unsigned
conversion.  In an unsigned conversion to an {@code int}, the
high-order 16 bits of the {@code int} are zero and the
low-order 16 bits are equal to the bits of the {@code short} argument.

Consequently, zero and positive {@code short} values are mapped
to a numerically equal {@code int} value and negative {@code
short} values are mapped to an {@code int} value equal to the
input plus 2<sup>16</sup>.

@param  x the value to convert to an unsigned {@code int}
@return the argument converted to {@code int} by an unsigned
        conversion
@since 1.8
"
      end

      operation 7089666 "toUnsignedLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "x" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the argument to a {@code long} by an unsigned
conversion.  In an unsigned conversion to a {@code long}, the
high-order 48 bits of the {@code long} are zero and the
low-order 16 bits are equal to the bits of the {@code short} argument.

Consequently, zero and positive {@code short} values are mapped
to a numerically equal {@code long} value and negative {@code
short} values are mapped to a {@code long} value equal to the
input plus 2<sup>16</sup>.

@param  x the value to convert to an unsigned {@code long}
@return the argument converted to {@code long} by an unsigned
        conversion
@since 1.8
"
      end

      attribute 1682562 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7515723908773894738L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " use serialVersionUID from JDK 1.1. for interoperability 
"
      end
    end

    class 938626 "Shutdown"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Package-private utility class containing data structures and logic
governing the virtual-machine shutdown sequence.

@author   Mark Reinhold
@since    1.3
"
      attribute 1682690 "RUNNING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Shutdown state 
"
      end

      attribute 1682818 "HOOKS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1682946 "FINALIZERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1683074 "state"
	class_attribute private explicit_type "int"
	init_value " RUNNING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1683202 "runFinalizersOnExit"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Should we run all finalizers upon exit? 
"
      end

      attribute 1683330 "MAX_SYSTEM_HOOKS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The system shutdown hooks are registered with a predefined slot.
 The list of shutdown hooks is as follows:
 (0) Console restore hook
 (1) Application hooks
 (2) DeleteOnExit hook
"
      end

      classrelation 3168642 // hooks (<unidirectional association>)
	relation 3168642 --->
	  a role_name "hooks" multiplicity "[]" init_value " new Runnable[MAX_SYSTEM_HOOKS]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3168642 // hooks (<unidirectional association>)
	  b parent class_ref 128770 // Runnable
      end

      attribute 1683458 "currentRunningHook"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " the index of the currently running shutdown hook to the hooks array
"
      end

      class 938754 "Lock"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 3168770 // lock (<unidirectional association>)
	relation 3168770 --->
	  a role_name "lock" init_value " new Lock()" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3168770 // lock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3168898 // haltLock (<unidirectional association>)
	relation 3168898 --->
	  a role_name "haltLock" init_value " new Lock()" class_relation private
	    comment " Lock object for the native halt method 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3168898 // haltLock (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 7089794 "setRunFinalizersOnExit"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "run" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked by Runtime.runFinalizersOnExit "
      end

      operation 7089922 "add"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "slot" explicit_type "int"
	  param inout name "registerShutdownInProgress" explicit_type "boolean"
	  param inout name "hook" type class_ref 128770 // Runnable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new shutdown hook.  Checks the shutdown state and the hook itself,
but does not do any security checks.

The registerShutdownInProgress parameter should be false except
registering the DeleteOnExitHook since the first file may
be added to the delete on exit list by the application shutdown
hooks.

@params slot  the slot in the shutdown hook array, whose element
              will be invoked in order during shutdown
@params registerShutdownInProgress true to allow the hook
              to be registered even if the shutdown is in progress.
@params hook  the hook to be registered

@throw IllegalStateException
       if registerShutdownInProgress is false and shutdown is in progress; or
       if registerShutdownInProgress is true and the shutdown process
          already passes the given slot
"
      end

      operation 7090050 "runHooks"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Run all registered shutdown hooks
"
      end

      operation 7090178 "halt"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The halt method is synchronized on the halt lock
to avoid corruption of the delete-on-shutdown file list.
It invokes the true native halt method.
"
      end

      operation 7090306 "halt0"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7090434 "runAllFinalizers"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " Wormhole for invoking java.lang.ref.Finalizer.runAllFinalizers "
      end

      operation 7090562 "sequence"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The actual shutdown sequence is defined here.

If it weren't for runFinalizersOnExit, this would be simple -- we'd just
run the hooks and then halt.  Instead we need to keep track of whether
we're running hooks or finalizers.  In the latter case a finalizer could
invoke exit(1) to cause immediate termination, while in the former case
any further invocations of exit(n), for any n, simply stall.  Note that
if on-exit finalizers are enabled they're run iff the shutdown is
initiated by an exit(0); they're never run on exit(n) for n != 0 or in
response to SIGINT, SIGTERM, etc.
"
      end

      operation 7090690 "exit"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked by Runtime.exit, which does all the security checks.
Also invoked by handlers for system-provided termination events,
which should pass a nonzero status code.
"
      end

      operation 7090818 "shutdown"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invoked by the JNI DestroyJavaVM procedure when the last non-daemon
thread has finished.  Unlike the exit method, this method does not
actually halt the VM.
"
      end
    end

    class 938882 "StackOverflowError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when a stack overflow occurs because an application
recurses too deeply.

@author unascribed
@since   JDK1.0
"
      classrelation 3169026 // <generalisation>
	relation 3169026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3169026 // <generalisation>
	  b parent class_ref 934402 // VirtualMachineError
      end

      attribute 1683586 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8609175038441759607L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7090946 "StackOverflowError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>StackOverflowError</code> with no detail message.
"
      end

      operation 7091074 "StackOverflowError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>StackOverflowError</code> with the specified
detail message.

@param   s   the detail message.
"
      end
    end

    class 939010 "StrictMath"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class {@code StrictMath} contains methods for performing basic
numeric operations such as the elementary exponential, logarithm,
square root, and trigonometric functions.

<p>To help ensure portability of Java programs, the definitions of
some of the numeric functions in this package require that they
produce the same results as certain published algorithms. These
algorithms are available from the well-known network library
{@code netlib} as the package \"Freely Distributable Math
Library,\" <a
href=\"ftp://ftp.netlib.org/fdlibm.tar\">{@code fdlibm}</a>. These
algorithms, which are written in the C programming language, are
then to be understood as executed with all floating-point
operations following the rules of Java floating-point arithmetic.

<p>The Java math library is defined with respect to
{@code fdlibm} version 5.3. Where {@code fdlibm} provides
more than one definition for a function (such as
{@code acos}), use the \"IEEE 754 core function\" version
(residing in a file whose name begins with the letter
{@code e}).  The methods which require {@code fdlibm}
semantics are {@code sin}, {@code cos}, {@code tan},
{@code asin}, {@code acos}, {@code atan},
{@code exp}, {@code log}, {@code log10},
{@code cbrt}, {@code atan2}, {@code pow},
{@code sinh}, {@code cosh}, {@code tanh},
{@code hypot}, {@code expm1}, and {@code log1p}.

<p>
The platform uses signed two's complement integer arithmetic with
int and long primitive types.  The developer should choose
the primitive type to ensure that arithmetic operations consistently
produce correct results, which in some cases means the operations
will not overflow the range of values of the computation.
The best practice is to choose the primitive type and algorithm to avoid
overflow. In cases where the size is {@code int} or {@code long} and
overflow errors need to be detected, the methods {@code addExact},
{@code subtractExact}, {@code multiplyExact}, and {@code toIntExact}
throw an {@code ArithmeticException} when the results overflow.
For other arithmetic operations such as divide, absolute value,
increment, decrement, and negation overflow occurs only with
a specific minimum or maximum value and should be checked against
the minimum or maximum as appropriate.

@author  unascribed
@author  Joseph D. Darcy
@since   1.3
"
      operation 7092354 "StrictMath"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Don't let anyone instantiate this class.
"
      end

      attribute 1683970 "E"
	class_attribute const_attribute public explicit_type "double"
	init_value " 2.7182818284590452354"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The {@code double} value that is closer than any other to
<i>e</i>, the base of the natural logarithms.

"
      end

      attribute 1684098 "PI"
	class_attribute const_attribute public explicit_type "double"
	init_value " 3.14159265358979323846"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The {@code double} value that is closer than any other to
<i>pi</i>, the ratio of the circumference of a circle to its
diameter.

"
      end

      operation 7092482 "sin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the trigonometric sine of an angle. Special cases:
<ul><li>If the argument is NaN or an infinity, then the
result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

@param   a   an angle, in radians.
@return  the sine of the argument.
"
      end

      operation 7092610 "cos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the trigonometric cosine of an angle. Special cases:
<ul><li>If the argument is NaN or an infinity, then the
result is NaN.</ul>

@param   a   an angle, in radians.
@return  the cosine of the argument.
"
      end

      operation 7092738 "tan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the trigonometric tangent of an angle. Special cases:
<ul><li>If the argument is NaN or an infinity, then the result
is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

@param   a   an angle, in radians.
@return  the tangent of the argument.
"
      end

      operation 7092866 "asin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the arc sine of a value; the returned angle is in the
range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:
<ul><li>If the argument is NaN or its absolute value is greater
than 1, then the result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

@param   a   the value whose arc sine is to be returned.
@return  the arc sine of the argument.
"
      end

      operation 7092994 "acos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the arc cosine of a value; the returned angle is in the
range 0.0 through <i>pi</i>.  Special case:
<ul><li>If the argument is NaN or its absolute value is greater
than 1, then the result is NaN.</ul>

@param   a   the value whose arc cosine is to be returned.
@return  the arc cosine of the argument.
"
      end

      operation 7093122 "atan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the arc tangent of a value; the returned angle is in the
range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:
<ul><li>If the argument is NaN, then the result is NaN.
<li>If the argument is zero, then the result is a zero with the
same sign as the argument.</ul>

@param   a   the value whose arc tangent is to be returned.
@return  the arc tangent of the argument.
"
      end

      operation 7093250 "toRadians"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angdeg" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}strictfp ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an angle measured in degrees to an approximately
equivalent angle measured in radians.  The conversion from
degrees to radians is generally inexact.

@param   angdeg   an angle, in degrees
@return  the measurement of the angle {@code angdeg}
         in radians.
"
      end

      operation 7093378 "toDegrees"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angrad" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}strictfp ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an angle measured in radians to an approximately
equivalent angle measured in degrees.  The conversion from
radians to degrees is generally inexact; users should
<i>not</i> expect {@code cos(toRadians(90.0))} to exactly
equal {@code 0.0}.

@param   angrad   an angle, in radians
@return  the measurement of the angle {@code angrad}
         in degrees.
"
      end

      operation 7093506 "exp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns Euler's number <i>e</i> raised to the power of a
{@code double} value. Special cases:
<ul><li>If the argument is NaN, the result is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is negative infinity, then the result is
positive zero.</ul>

@param   a   the exponent to raise <i>e</i> to.
@return  the value <i>e</i><sup>{@code a}</sup>,
         where <i>e</i> is the base of the natural logarithms.
"
      end

      operation 7093634 "log"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the natural logarithm (base <i>e</i>) of a {@code double}
value. Special cases:
<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is positive zero or negative zero, then the
result is negative infinity.</ul>

@param   a   a value
@return  the value ln&nbsp;{@code a}, the natural logarithm of
         {@code a}.
"
      end

      operation 7093762 "log10"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the base 10 logarithm of a {@code double} value.
Special cases:

<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is
positive infinity.
<li>If the argument is positive zero or negative zero, then the
result is negative infinity.
<li> If the argument is equal to 10<sup><i>n</i></sup> for
integer <i>n</i>, then the result is <i>n</i>.
</ul>

@param   a   a value
@return  the base 10 logarithm of  {@code a}.
@since 1.5
"
      end

      operation 7093890 "sqrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the correctly rounded positive square root of a
{@code double} value.
Special cases:
<ul><li>If the argument is NaN or less than zero, then the result
is NaN.
<li>If the argument is positive infinity, then the result is positive
infinity.
<li>If the argument is positive zero or negative zero, then the
result is the same as the argument.</ul>
Otherwise, the result is the {@code double} value closest to
the true mathematical square root of the argument value.

@param   a   a value.
@return  the positive square root of {@code a}.
"
      end

      operation 7094018 "cbrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the cube root of a {@code double} value.  For
positive finite {@code x}, {@code cbrt(-x) ==
-cbrt(x)}; that is, the cube root of a negative value is
the negative of the cube root of that value's magnitude.
Special cases:

<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is an infinity
with the same sign as the argument.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

@param   a   a value.
@return  the cube root of {@code a}.
@since 1.5
"
      end

      operation 7094146 "IEEEremainder"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "f1" explicit_type "double"
	  param in name "f2" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
	comment "Computes the remainder operation on two arguments as prescribed
by the IEEE 754 standard.
The remainder value is mathematically equal to
<code>f1&nbsp;-&nbsp;f2</code>&nbsp;&times;&nbsp;<i>n</i>,
where <i>n</i> is the mathematical integer closest to the exact
mathematical value of the quotient {@code f1/f2}, and if two
mathematical integers are equally close to {@code f1/f2},
then <i>n</i> is the integer that is even. If the remainder is
zero, its sign is the same as the sign of the first argument.
Special cases:
<ul><li>If either argument is NaN, or the first argument is infinite,
or the second argument is positive zero or negative zero, then the
result is NaN.
<li>If the first argument is finite and the second argument is
infinite, then the result is the same as the first argument.</ul>

@param   f1   the dividend.
@param   f2   the divisor.
@return  the remainder when {@code f1} is divided by
         {@code f2}.
"
      end

      operation 7094274 "ceil"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smallest (closest to negative infinity)
{@code double} value that is greater than or equal to the
argument and is equal to a mathematical integer. Special cases:
<ul><li>If the argument value is already equal to a
mathematical integer, then the result is the same as the
argument.  <li>If the argument is NaN or an infinity or
positive zero or negative zero, then the result is the same as
the argument.  <li>If the argument value is less than zero but
greater than -1.0, then the result is negative zero.</ul> Note
that the value of {@code StrictMath.ceil(x)} is exactly the
value of {@code -StrictMath.floor(-x)}.

@param   a   a value.
@return  the smallest (closest to negative infinity)
         floating-point value that is greater than or equal to
         the argument and is equal to a mathematical integer.
"
      end

      operation 7094402 "floor"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code double} value that is less than or equal to the
argument and is equal to a mathematical integer. Special cases:
<ul><li>If the argument value is already equal to a
mathematical integer, then the result is the same as the
argument.  <li>If the argument is NaN or an infinity or
positive zero or negative zero, then the result is the same as
the argument.</ul>

@param   a   a value.
@return  the largest (closest to positive infinity)
         floating-point value that less than or equal to the argument
         and is equal to a mathematical integer.
"
      end

      operation 7094530 "floorOrCeil"
	class_operation private explicit_return_type "double"
	nparams 4
	  param in name "a" explicit_type "double"
	  param in name "negativeBoundary" explicit_type "double"
	  param in name "positiveBoundary" explicit_type "double"
	  param in name "sign" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal method to share logic between floor and ceil.

@param a the value to be floored or ceiled
@param negativeBoundary result for values in (-1, 0)
@param positiveBoundary result for values in (0, 1)
@param increment value to add when the argument is non-integral
"
      end

      operation 7094658 "rint"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code double} value that is closest in value
to the argument and is equal to a mathematical integer. If two
{@code double} values that are mathematical integers are
equally close to the value of the argument, the result is the
integer value that is even. Special cases:
<ul><li>If the argument value is already equal to a mathematical
integer, then the result is the same as the argument.
<li>If the argument is NaN or an infinity or positive zero or negative
zero, then the result is the same as the argument.</ul>

@param   a   a value.
@return  the closest floating-point value to {@code a} that is
         equal to a mathematical integer.
@author Joseph D. Darcy
"
      end

      operation 7094786 "atan2"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "y" explicit_type "double"
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
	comment "Returns the angle <i>theta</i> from the conversion of rectangular
coordinates ({@code x},&nbsp;{@code y}) to polar
coordinates (r,&nbsp;<i>theta</i>).
This method computes the phase <i>theta</i> by computing an arc tangent
of {@code y/x} in the range of -<i>pi</i> to <i>pi</i>. Special
cases:
<ul><li>If either argument is NaN, then the result is NaN.
<li>If the first argument is positive zero and the second argument
is positive, or the first argument is positive and finite and the
second argument is positive infinity, then the result is positive
zero.
<li>If the first argument is negative zero and the second argument
is positive, or the first argument is negative and finite and the
second argument is positive infinity, then the result is negative zero.
<li>If the first argument is positive zero and the second argument
is negative, or the first argument is positive and finite and the
second argument is negative infinity, then the result is the
{@code double} value closest to <i>pi</i>.
<li>If the first argument is negative zero and the second argument
is negative, or the first argument is negative and finite and the
second argument is negative infinity, then the result is the
{@code double} value closest to -<i>pi</i>.
<li>If the first argument is positive and the second argument is
positive zero or negative zero, or the first argument is positive
infinity and the second argument is finite, then the result is the
{@code double} value closest to <i>pi</i>/2.
<li>If the first argument is negative and the second argument is
positive zero or negative zero, or the first argument is negative
infinity and the second argument is finite, then the result is the
{@code double} value closest to -<i>pi</i>/2.
<li>If both arguments are positive infinity, then the result is the
{@code double} value closest to <i>pi</i>/4.
<li>If the first argument is positive infinity and the second argument
is negative infinity, then the result is the {@code double}
value closest to 3*<i>pi</i>/4.
<li>If the first argument is negative infinity and the second argument
is positive infinity, then the result is the {@code double} value
closest to -<i>pi</i>/4.
<li>If both arguments are negative infinity, then the result is the
{@code double} value closest to -3*<i>pi</i>/4.</ul>

@param   y   the ordinate coordinate
@param   x   the abscissa coordinate
@return  the <i>theta</i> component of the point
         (<i>r</i>,&nbsp;<i>theta</i>)
         in polar coordinates that corresponds to the point
         (<i>x</i>,&nbsp;<i>y</i>) in Cartesian coordinates.
"
      end

      operation 7094914 "pow"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
	comment "Returns the value of the first argument raised to the power of the
second argument. Special cases:

<ul><li>If the second argument is positive or negative zero, then the
result is 1.0.
<li>If the second argument is 1.0, then the result is the same as the
first argument.
<li>If the second argument is NaN, then the result is NaN.
<li>If the first argument is NaN and the second argument is nonzero,
then the result is NaN.

<li>If
<ul>
<li>the absolute value of the first argument is greater than 1
and the second argument is positive infinity, or
<li>the absolute value of the first argument is less than 1 and
the second argument is negative infinity,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the absolute value of the first argument is greater than 1 and
the second argument is negative infinity, or
<li>the absolute value of the
first argument is less than 1 and the second argument is positive
infinity,
</ul>
then the result is positive zero.

<li>If the absolute value of the first argument equals 1 and the
second argument is infinite, then the result is NaN.

<li>If
<ul>
<li>the first argument is positive zero and the second argument
is greater than zero, or
<li>the first argument is positive infinity and the second
argument is less than zero,
</ul>
then the result is positive zero.

<li>If
<ul>
<li>the first argument is positive zero and the second argument
is less than zero, or
<li>the first argument is positive infinity and the second
argument is greater than zero,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is greater than zero but not a finite odd integer, or
<li>the first argument is negative infinity and the second
argument is less than zero but not a finite odd integer,
</ul>
then the result is positive zero.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is a positive finite odd integer, or
<li>the first argument is negative infinity and the second
argument is a negative finite odd integer,
</ul>
then the result is negative zero.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is less than zero but not a finite odd integer, or
<li>the first argument is negative infinity and the second
argument is greater than zero but not a finite odd integer,
</ul>
then the result is positive infinity.

<li>If
<ul>
<li>the first argument is negative zero and the second argument
is a negative finite odd integer, or
<li>the first argument is negative infinity and the second
argument is a positive finite odd integer,
</ul>
then the result is negative infinity.

<li>If the first argument is finite and less than zero
<ul>
<li> if the second argument is a finite even integer, the
result is equal to the result of raising the absolute value of
the first argument to the power of the second argument

<li>if the second argument is a finite odd integer, the result
is equal to the negative of the result of raising the absolute
value of the first argument to the power of the second
argument

<li>if the second argument is finite and not an integer, then
the result is NaN.
</ul>

<li>If both arguments are integers, then the result is exactly equal
to the mathematical result of raising the first argument to the power
of the second argument if that result can in fact be represented
exactly as a {@code double} value.</ul>

<p>(In the foregoing descriptions, a floating-point value is
considered to be an integer if and only if it is finite and a
fixed point of the method {@link #ceil ceil} or,
equivalently, a fixed point of the method {@link #floor
floor}. A value is a fixed point of a one-argument
method if and only if the result of applying the method to the
value is equal to the value.)

@param   a   base.
@param   b   the exponent.
@return  the value {@code a}<sup>{@code b}</sup>.
"
      end

      operation 7095042 "round"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest {@code int} to the argument, with ties
rounding to positive infinity.

<p>Special cases:
<ul><li>If the argument is NaN, the result is 0.
<li>If the argument is negative infinity or any value less than or
equal to the value of {@code Integer.MIN_VALUE}, the result is
equal to the value of {@code Integer.MIN_VALUE}.
<li>If the argument is positive infinity or any value greater than or
equal to the value of {@code Integer.MAX_VALUE}, the result is
equal to the value of {@code Integer.MAX_VALUE}.</ul>

@param   a   a floating-point value to be rounded to an integer.
@return  the value of the argument rounded to the nearest
         {@code int} value.
@see     java.lang.Integer#MAX_VALUE
@see     java.lang.Integer#MIN_VALUE
"
      end

      operation 7095170 "round"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest {@code long} to the argument, with ties
rounding to positive infinity.

<p>Special cases:
<ul><li>If the argument is NaN, the result is 0.
<li>If the argument is negative infinity or any value less than or
equal to the value of {@code Long.MIN_VALUE}, the result is
equal to the value of {@code Long.MIN_VALUE}.
<li>If the argument is positive infinity or any value greater than or
equal to the value of {@code Long.MAX_VALUE}, the result is
equal to the value of {@code Long.MAX_VALUE}.</ul>

@param   a  a floating-point value to be rounded to a
         {@code long}.
@return  the value of the argument rounded to the nearest
         {@code long} value.
@see     java.lang.Long#MAX_VALUE
@see     java.lang.Long#MIN_VALUE
"
      end

      class 939138 "RandomNumberGeneratorHolder"
	visibility private 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3169666 // randomNumberGenerator (<unidirectional association>)
	  relation 3169666 --->
	    a role_name "randomNumberGenerator" init_value " new Random()" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3169666 // randomNumberGenerator (<unidirectional association>)
	    b parent class_ref 934914 // Random
	end
      end

      operation 7095298 "random"
	class_operation public explicit_return_type "double"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code double} value with a positive sign, greater
than or equal to {@code 0.0} and less than {@code 1.0}.
Returned values are chosen pseudorandomly with (approximately)
uniform distribution from that range.

<p>When this method is first called, it creates a single new
pseudorandom-number generator, exactly as if by the expression

<blockquote>{@code new java.util.Random()}</blockquote>

This new pseudorandom-number generator is used thereafter for
all calls to this method and is used nowhere else.

<p>This method is properly synchronized to allow correct use by
more than one thread. However, if many threads need to generate
pseudorandom numbers at a great rate, it may reduce contention
for each thread to have its own pseudorandom-number generator.

@return  a pseudorandom {@code double} greater than or equal
to {@code 0.0} and less than {@code 1.0}.
@see Random#nextDouble()
"
      end

      operation 7095426 "addExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of its arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows an int
@see Math#addExact(int,int)
@since 1.8
"
      end

      operation 7095554 "addExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sum of its arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows a long
@see Math#addExact(long,long)
@since 1.8
"
      end

      operation 7095682 "subtractExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the difference of the arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value to subtract from the first
@return the result
@throws ArithmeticException if the result overflows an int
@see Math#subtractExact(int,int)
@since 1.8
"
      end

      operation 7095810 "subtractExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the difference of the arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value to subtract from the first
@return the result
@throws ArithmeticException if the result overflows a long
@see Math#subtractExact(long,long)
@since 1.8
"
      end

      operation 7095938 "multiplyExact"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the product of the arguments,
throwing an exception if the result overflows an {@code int}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows an int
@see Math#multiplyExact(int,int)
@since 1.8
"
      end

      operation 7096066 "multiplyExact"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the product of the arguments,
throwing an exception if the result overflows a {@code long}.

@param x the first value
@param y the second value
@return the result
@throws ArithmeticException if the result overflows a long
@see Math#multiplyExact(long,long)
@since 1.8
"
      end

      operation 7096194 "toIntExact"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the {@code long} argument;
throwing an exception if the value overflows an {@code int}.

@param value the long value
@return the argument as an int
@throws ArithmeticException if the {@code argument} overflows an int
@see Math#toIntExact(long)
@since 1.8
"
      end

      operation 7096322 "floorDiv"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code int} value that is less than or equal to the algebraic quotient.
There is one special case, if the dividend is the
{@linkplain Integer#MIN_VALUE Integer.MIN_VALUE} and the divisor is {@code -1},
then integer overflow occurs and
the result is equal to the {@code Integer.MIN_VALUE}.
<p>
See {@link Math#floorDiv(int, int) Math.floorDiv} for examples and
a comparison to the integer division {@code /} operator.

@param x the dividend
@param y the divisor
@return the largest (closest to positive infinity)
{@code int} value that is less than or equal to the algebraic quotient.
@throws ArithmeticException if the divisor {@code y} is zero
@see Math#floorDiv(int, int)
@see Math#floor(double)
@since 1.8
"
      end

      operation 7096450 "floorDiv"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest (closest to positive infinity)
{@code long} value that is less than or equal to the algebraic quotient.
There is one special case, if the dividend is the
{@linkplain Long#MIN_VALUE Long.MIN_VALUE} and the divisor is {@code -1},
then integer overflow occurs and
the result is equal to the {@code Long.MIN_VALUE}.
<p>
See {@link Math#floorDiv(int, int) Math.floorDiv} for examples and
a comparison to the integer division {@code /} operator.

@param x the dividend
@param y the divisor
@return the largest (closest to positive infinity)
{@code long} value that is less than or equal to the algebraic quotient.
@throws ArithmeticException if the divisor {@code y} is zero
@see Math#floorDiv(long, long)
@see Math#floor(double)
@since 1.8
"
      end

      operation 7096578 "floorMod"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floor modulus of the {@code int} arguments.
<p>
The floor modulus is {@code x - (floorDiv(x, y) * y)},
has the same sign as the divisor {@code y}, and
is in the range of {@code -abs(y) < r < +abs(y)}.
<p>
The relationship between {@code floorDiv} and {@code floorMod} is such that:
<ul>
  <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}
</ul>
<p>
See {@link Math#floorMod(int, int) Math.floorMod} for examples and
a comparison to the {@code %} operator.

@param x the dividend
@param y the divisor
@return the floor modulus {@code x - (floorDiv(x, y) * y)}
@throws ArithmeticException if the divisor {@code y} is zero
@see Math#floorMod(int, int)
@see StrictMath#floorDiv(int, int)
@since 1.8
"
      end

      operation 7096706 "floorMod"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "x" explicit_type "long"
	  param in name "y" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floor modulus of the {@code long} arguments.
<p>
The floor modulus is {@code x - (floorDiv(x, y) * y)},
has the same sign as the divisor {@code y}, and
is in the range of {@code -abs(y) < r < +abs(y)}.
<p>
The relationship between {@code floorDiv} and {@code floorMod} is such that:
<ul>
  <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}
</ul>
<p>
See {@link Math#floorMod(int, int) Math.floorMod} for examples and
a comparison to the {@code %} operator.

@param x the dividend
@param y the divisor
@return the floor modulus {@code x - (floorDiv(x, y) * y)}
@throws ArithmeticException if the divisor {@code y} is zero
@see Math#floorMod(long, long)
@see StrictMath#floorDiv(long, long)
@since 1.8
"
      end

      operation 7096834 "abs"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "a" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of an {@code int} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.

<p>Note that if the argument is equal to the value of
{@link Integer#MIN_VALUE}, the most negative representable
{@code int} value, the result is that same value, which is
negative.

@param   a   the  argument whose absolute value is to be determined.
@return  the absolute value of the argument.
"
      end

      operation 7096962 "abs"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "a" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code long} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.

<p>Note that if the argument is equal to the value of
{@link Long#MIN_VALUE}, the most negative representable
{@code long} value, the result is that same value, which
is negative.

@param   a   the  argument whose absolute value is to be determined.
@return  the absolute value of the argument.
"
      end

      operation 7097090 "abs"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "a" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code float} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.
Special cases:
<ul><li>If the argument is positive zero or negative zero, the
result is positive zero.
<li>If the argument is infinite, the result is positive infinity.
<li>If the argument is NaN, the result is NaN.</ul>
In other words, the result is the same as the value of the expression:
<p>{@code Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(a))}

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7097218 "abs"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "a" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of a {@code double} value.
If the argument is not negative, the argument is returned.
If the argument is negative, the negation of the argument is returned.
Special cases:
<ul><li>If the argument is positive zero or negative zero, the result
is positive zero.
<li>If the argument is infinite, the result is positive infinity.
<li>If the argument is NaN, the result is NaN.</ul>
In other words, the result is the same as the value of the expression:
<p>{@code Double.longBitsToDouble((Double.doubleToLongBits(a)<<1)>>>1)}

@param   a   the argument whose absolute value is to be determined
@return  the absolute value of the argument.
"
      end

      operation 7097346 "max"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code int} values. That is, the
result is the argument closer to the value of
{@link Integer#MAX_VALUE}. If the arguments have the same value,
the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7097474 "max"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code long} values. That is, the
result is the argument closer to the value of
{@link Long#MAX_VALUE}. If the arguments have the same value,
the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7097602 "max"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code float} values.  That is,
the result is the argument closer to positive infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other negative zero, the
result is positive zero.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7097730 "max"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the greater of two {@code double} values.  That
is, the result is the argument closer to positive infinity. If
the arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other negative zero, the
result is positive zero.

@param   a   an argument.
@param   b   another argument.
@return  the larger of {@code a} and {@code b}.
"
      end

      operation 7097858 "min"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code int} values. That is,
the result the argument closer to the value of
{@link Integer#MIN_VALUE}.  If the arguments have the same
value, the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7097986 "min"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "a" explicit_type "long"
	  param in name "b" explicit_type "long"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code long} values. That is,
the result is the argument closer to the value of
{@link Long#MIN_VALUE}. If the arguments have the same
value, the result is that same value.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7098114 "min"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code float} values.  That is,
the result is the value closer to negative infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero.  If
one argument is positive zero and the other is negative zero,
the result is negative zero.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b.}
"
      end

      operation 7098242 "min"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the smaller of two {@code double} values.  That
is, the result is the value closer to negative infinity. If the
arguments have the same value, the result is that same
value. If either value is NaN, then the result is NaN.  Unlike
the numerical comparison operators, this method considers
negative zero to be strictly smaller than positive zero. If one
argument is positive zero and the other is negative zero, the
result is negative zero.

@param   a   an argument.
@param   b   another argument.
@return  the smaller of {@code a} and {@code b}.
"
      end

      operation 7098370 "ulp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of an ulp of the argument.  An ulp, unit in
the last place, of a {@code double} value is the positive
distance between this floating-point value and the {@code
double} value next larger in magnitude.  Note that for non-NaN
<i>x</i>, <code>ulp(-<i>x</i>) == ulp(<i>x</i>)</code>.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive or negative infinity, then the
result is positive infinity.
<li> If the argument is positive or negative zero, then the result is
{@code Double.MIN_VALUE}.
<li> If the argument is &plusmn;{@code Double.MAX_VALUE}, then
the result is equal to 2<sup>971</sup>.
</ul>

@param d the floating-point value whose ulp is to be returned
@return the size of an ulp of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7098498 "ulp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of an ulp of the argument.  An ulp, unit in
the last place, of a {@code float} value is the positive
distance between this floating-point value and the {@code
float} value next larger in magnitude.  Note that for non-NaN
<i>x</i>, <code>ulp(-<i>x</i>) == ulp(<i>x</i>)</code>.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive or negative infinity, then the
result is positive infinity.
<li> If the argument is positive or negative zero, then the result is
{@code Float.MIN_VALUE}.
<li> If the argument is &plusmn;{@code Float.MAX_VALUE}, then
the result is equal to 2<sup>104</sup>.
</ul>

@param f the floating-point value whose ulp is to be returned
@return the size of an ulp of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7098626 "signum"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument; zero if the argument
is zero, 1.0 if the argument is greater than zero, -1.0 if the
argument is less than zero.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive zero or negative zero, then the
     result is the same as the argument.
</ul>

@param d the floating-point value whose signum is to be returned
@return the signum function of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7098754 "signum"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument; zero if the argument
is zero, 1.0f if the argument is greater than zero, -1.0f if the
argument is less than zero.

<p>Special Cases:
<ul>
<li> If the argument is NaN, then the result is NaN.
<li> If the argument is positive zero or negative zero, then the
     result is the same as the argument.
</ul>

@param f the floating-point value whose signum is to be returned
@return the signum function of the argument
@author Joseph D. Darcy
@since 1.5
"
      end

      operation 7098882 "sinh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the hyperbolic sine of a {@code double} value.
The hyperbolic sine of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup></i>)/2
where <i>e</i> is {@linkplain Math#E Euler's number}.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is an infinity
with the same sign as the argument.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

@param   x The number whose hyperbolic sine is to be returned.
@return  The hyperbolic sine of {@code x}.
@since 1.5
"
      end

      operation 7099010 "cosh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the hyperbolic cosine of a {@code double} value.
The hyperbolic cosine of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup></i>)/2
where <i>e</i> is {@linkplain Math#E Euler's number}.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is infinite, then the result is positive
infinity.

<li>If the argument is zero, then the result is {@code 1.0}.

</ul>

@param   x The number whose hyperbolic cosine is to be returned.
@return  The hyperbolic cosine of {@code x}.
@since 1.5
"
      end

      operation 7099138 "tanh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the hyperbolic tangent of a {@code double} value.
The hyperbolic tangent of <i>x</i> is defined to be
(<i>e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup></i>)/(<i>e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup></i>),
in other words, {@linkplain Math#sinh
sinh(<i>x</i>)}/{@linkplain Math#cosh cosh(<i>x</i>)}.  Note
that the absolute value of the exact tanh is always less than
1.

<p>Special cases:
<ul>

<li>If the argument is NaN, then the result is NaN.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

<li>If the argument is positive infinity, then the result is
{@code +1.0}.

<li>If the argument is negative infinity, then the result is
{@code -1.0}.

</ul>

@param   x The number whose hyperbolic tangent is to be returned.
@return  The hyperbolic tangent of {@code x}.
@since 1.5
"
      end

      operation 7099266 "hypot"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
	comment "Returns sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)
without intermediate overflow or underflow.

<p>Special cases:
<ul>

<li> If either argument is infinite, then the result
is positive infinity.

<li> If either argument is NaN and neither argument is infinite,
then the result is NaN.

</ul>

@param x a value
@param y a value
@return sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)
without intermediate overflow or underflow
@since 1.5
"
      end

      operation 7099394 "expm1"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns <i>e</i><sup>x</sup>&nbsp;-1.  Note that for values of
<i>x</i> near 0, the exact sum of
{@code expm1(x)}&nbsp;+&nbsp;1 is much closer to the true
result of <i>e</i><sup>x</sup> than {@code exp(x)}.

<p>Special cases:
<ul>
<li>If the argument is NaN, the result is NaN.

<li>If the argument is positive infinity, then the result is
positive infinity.

<li>If the argument is negative infinity, then the result is
-1.0.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

@param   x   the exponent to raise <i>e</i> to in the computation of
             <i>e</i><sup>{@code x}</sup>&nbsp;-1.
@return  the value <i>e</i><sup>{@code x}</sup>&nbsp;-&nbsp;1.
@since 1.5
"
      end

      operation 7099522 "log1p"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "x" explicit_type "double"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the natural logarithm of the sum of the argument and 1.
Note that for small values {@code x}, the result of
{@code log1p(x)} is much closer to the true result of ln(1
+ {@code x}) than the floating-point evaluation of
{@code log(1.0+x)}.

<p>Special cases:
<ul>

<li>If the argument is NaN or less than -1, then the result is
NaN.

<li>If the argument is positive infinity, then the result is
positive infinity.

<li>If the argument is negative one, then the result is
negative infinity.

<li>If the argument is zero, then the result is a zero with the
same sign as the argument.

</ul>

@param   x   a value
@return the value ln({@code x}&nbsp;+&nbsp;1), the natural
log of {@code x}&nbsp;+&nbsp;1
@since 1.5
"
      end

      operation 7099650 "copySign"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "magnitude" explicit_type "double"
	  param in name "sign" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first floating-point argument with the sign of the
second floating-point argument.  For this method, a NaN
{@code sign} argument is always treated as if it were
positive.

@param magnitude  the parameter providing the magnitude of the result
@param sign   the parameter providing the sign of the result
@return a value with the magnitude of {@code magnitude}
and the sign of {@code sign}.
@since 1.6
"
      end

      operation 7099778 "copySign"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "magnitude" explicit_type "float"
	  param in name "sign" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first floating-point argument with the sign of the
second floating-point argument.  For this method, a NaN
{@code sign} argument is always treated as if it were
positive.

@param magnitude  the parameter providing the magnitude of the result
@param sign   the parameter providing the sign of the result
@return a value with the magnitude of {@code magnitude}
and the sign of {@code sign}.
@since 1.6
"
      end

      operation 7099906 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased exponent used in the representation of a
{@code float}.  Special cases:

<ul>
<li>If the argument is NaN or infinite, then the result is
{@link Float#MAX_EXPONENT} + 1.
<li>If the argument is zero or subnormal, then the result is
{@link Float#MIN_EXPONENT} -1.
</ul>
@param f a {@code float} value
@return the unbiased exponent of the argument
@since 1.6
"
      end

      operation 7100034 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased exponent used in the representation of a
{@code double}.  Special cases:

<ul>
<li>If the argument is NaN or infinite, then the result is
{@link Double#MAX_EXPONENT} + 1.
<li>If the argument is zero or subnormal, then the result is
{@link Double#MIN_EXPONENT} -1.
</ul>
@param d a {@code double} value
@return the unbiased exponent of the argument
@since 1.6
"
      end

      operation 7100162 "nextAfter"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "start" explicit_type "double"
	  param in name "direction" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point number adjacent to the first
argument in the direction of the second argument.  If both
arguments compare as equal the second argument is returned.

<p>Special cases:
<ul>
<li> If either argument is a NaN, then NaN is returned.

<li> If both arguments are signed zeros, {@code direction}
is returned unchanged (as implied by the requirement of
returning the second argument if the arguments compare as
equal).

<li> If {@code start} is
&plusmn;{@link Double#MIN_VALUE} and {@code direction}
has a value such that the result should have a smaller
magnitude, then a zero with the same sign as {@code start}
is returned.

<li> If {@code start} is infinite and
{@code direction} has a value such that the result should
have a smaller magnitude, {@link Double#MAX_VALUE} with the
same sign as {@code start} is returned.

<li> If {@code start} is equal to &plusmn;
{@link Double#MAX_VALUE} and {@code direction} has a
value such that the result should have a larger magnitude, an
infinity with same sign as {@code start} is returned.
</ul>

@param start  starting floating-point value
@param direction value indicating which of
{@code start}'s neighbors or {@code start} should
be returned
@return The floating-point number adjacent to {@code start} in the
direction of {@code direction}.
@since 1.6
"
      end

      operation 7100290 "nextAfter"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "start" explicit_type "float"
	  param in name "direction" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point number adjacent to the first
argument in the direction of the second argument.  If both
arguments compare as equal a value equivalent to the second argument
is returned.

<p>Special cases:
<ul>
<li> If either argument is a NaN, then NaN is returned.

<li> If both arguments are signed zeros, a value equivalent
to {@code direction} is returned.

<li> If {@code start} is
&plusmn;{@link Float#MIN_VALUE} and {@code direction}
has a value such that the result should have a smaller
magnitude, then a zero with the same sign as {@code start}
is returned.

<li> If {@code start} is infinite and
{@code direction} has a value such that the result should
have a smaller magnitude, {@link Float#MAX_VALUE} with the
same sign as {@code start} is returned.

<li> If {@code start} is equal to &plusmn;
{@link Float#MAX_VALUE} and {@code direction} has a
value such that the result should have a larger magnitude, an
infinity with same sign as {@code start} is returned.
</ul>

@param start  starting floating-point value
@param direction value indicating which of
{@code start}'s neighbors or {@code start} should
be returned
@return The floating-point number adjacent to {@code start} in the
direction of {@code direction}.
@since 1.6
"
      end

      operation 7100418 "nextUp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code d} in
the direction of positive infinity.  This method is
semantically equivalent to {@code nextAfter(d,
Double.POSITIVE_INFINITY)}; however, a {@code nextUp}
implementation may run faster than its equivalent
{@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is positive infinity, the result is
positive infinity.

<li> If the argument is zero, the result is
{@link Double#MIN_VALUE}

</ul>

@param d starting floating-point value
@return The adjacent floating-point value closer to positive
infinity.
@since 1.6
"
      end

      operation 7100546 "nextUp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code f} in
the direction of positive infinity.  This method is
semantically equivalent to {@code nextAfter(f,
Float.POSITIVE_INFINITY)}; however, a {@code nextUp}
implementation may run faster than its equivalent
{@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is positive infinity, the result is
positive infinity.

<li> If the argument is zero, the result is
{@link Float#MIN_VALUE}

</ul>

@param f starting floating-point value
@return The adjacent floating-point value closer to positive
infinity.
@since 1.6
"
      end

      operation 7100674 "nextDown"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code d} in
the direction of negative infinity.  This method is
semantically equivalent to {@code nextAfter(d,
Double.NEGATIVE_INFINITY)}; however, a
{@code nextDown} implementation may run faster than its
equivalent {@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is negative infinity, the result is
negative infinity.

<li> If the argument is zero, the result is
{@code -Double.MIN_VALUE}

</ul>

@param d  starting floating-point value
@return The adjacent floating-point value closer to negative
infinity.
@since 1.8
"
      end

      operation 7100802 "nextDown"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the floating-point value adjacent to {@code f} in
the direction of negative infinity.  This method is
semantically equivalent to {@code nextAfter(f,
Float.NEGATIVE_INFINITY)}; however, a
{@code nextDown} implementation may run faster than its
equivalent {@code nextAfter} call.

<p>Special Cases:
<ul>
<li> If the argument is NaN, the result is NaN.

<li> If the argument is negative infinity, the result is
negative infinity.

<li> If the argument is zero, the result is
{@code -Float.MIN_VALUE}

</ul>

@param f  starting floating-point value
@return The adjacent floating-point value closer to negative
infinity.
@since 1.8
"
      end

      operation 7100930 "scalb"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d" explicit_type "double"
	  param in name "scaleFactor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} &times;
2<sup>{@code scaleFactor}</sup> rounded as if performed
by a single correctly rounded floating-point multiply to a
member of the double value set.  See the Java
Language Specification for a discussion of floating-point
value sets.  If the exponent of the result is between {@link
Double#MIN_EXPONENT} and {@link Double#MAX_EXPONENT}, the
answer is calculated exactly.  If the exponent of the result
would be larger than {@code Double.MAX_EXPONENT}, an
infinity is returned.  Note that if the result is subnormal,
precision may be lost; that is, when {@code scalb(x, n)}
is subnormal, {@code scalb(scalb(x, n), -n)} may not equal
<i>x</i>.  When the result is non-NaN, the result has the same
sign as {@code d}.

<p>Special cases:
<ul>
<li> If the first argument is NaN, NaN is returned.
<li> If the first argument is infinite, then an infinity of the
same sign is returned.
<li> If the first argument is zero, then a zero of the same
sign is returned.
</ul>

@param d number to be scaled by a power of two.
@param scaleFactor power of 2 used to scale {@code d}
@return {@code d} &times; 2<sup>{@code scaleFactor}</sup>
@since 1.6
"
      end

      operation 7101058 "scalb"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f" explicit_type "float"
	  param in name "scaleFactor" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code f} &times;
2<sup>{@code scaleFactor}</sup> rounded as if performed
by a single correctly rounded floating-point multiply to a
member of the float value set.  See the Java
Language Specification for a discussion of floating-point
value sets.  If the exponent of the result is between {@link
Float#MIN_EXPONENT} and {@link Float#MAX_EXPONENT}, the
answer is calculated exactly.  If the exponent of the result
would be larger than {@code Float.MAX_EXPONENT}, an
infinity is returned.  Note that if the result is subnormal,
precision may be lost; that is, when {@code scalb(x, n)}
is subnormal, {@code scalb(scalb(x, n), -n)} may not equal
<i>x</i>.  When the result is non-NaN, the result has the same
sign as {@code f}.

<p>Special cases:
<ul>
<li> If the first argument is NaN, NaN is returned.
<li> If the first argument is infinite, then an infinity of the
same sign is returned.
<li> If the first argument is zero, then a zero of the same
sign is returned.
</ul>

@param f number to be scaled by a power of two.
@param scaleFactor power of 2 used to scale {@code f}
@return {@code f} &times; 2<sup>{@code scaleFactor}</sup>
@since 1.6
"
      end
    end

    class 939394 "StringCoding"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for string encoding and decoding.
"
      operation 7125762 "StringCoding"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3171586 // decoder (<unidirectional association>)
	relation 3171586 --->
	  a role_name "decoder" init_value "
        new ThreadLocal<>()" class_relation const_relation private
	    comment " The cached coders for each thread 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SoftReference<StringDecoder>> ${name}${value};
"
	    classrelation_ref 3171586 // decoder (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      classrelation 3171714 // encoder (<unidirectional association>)
	relation 3171714 --->
	  a role_name "encoder" init_value "
        new ThreadLocal<>()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SoftReference<StringEncoder>> ${name}${value};
"
	    classrelation_ref 3171714 // encoder (<unidirectional association>)
	  b parent class_ref 129282 // ThreadLocal
      end

      attribute 1685122 "warnUnsupportedCharset"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7125890 "deref"
	class_operation private explicit_return_type "T"
	nparams 1
	  param inout name "tl" type class_ref 129282 // ThreadLocal
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<SoftReference<T>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7126018 "set"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "tl" type class_ref 129282 // ThreadLocal
	  param inout name "ob" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<SoftReference<T>> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7126146 "safeTrim"
	class_operation private explicit_return_type "byte"
	nparams 4
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	  param inout name "cs" type class_ref 853634 // Charset
	  param inout name "isTrusted" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Trim the given byte array to the given length
"
      end

      operation 7126274 "safeTrim"
	class_operation private explicit_return_type "char"
	nparams 4
	  param inout name "ca" explicit_type "char"
	multiplicity "[]"
	  param in name "len" explicit_type "int"
	  param inout name "cs" type class_ref 853634 // Charset
	  param inout name "isTrusted" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Trim the given char array to the given length
"
      end

      operation 7126402 "scale"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "len" explicit_type "int"
	  param in name "expansionFactor" explicit_type "float"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7126530 "lookupCharset"
	class_operation private return_type class_ref 853634 // Charset
	nparams 1
	  param inout name "csn" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7126658 "warnUnsupportedCharset"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "csn" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 939522 "StringDecoder"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3171842 // requestedCharsetName (<unidirectional association>)
	  relation 3171842 --->
	    a role_name "requestedCharsetName" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3171842 // requestedCharsetName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 3171970 // cs (<unidirectional association>)
	  relation 3171970 --->
	    a role_name "cs" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3171970 // cs (<unidirectional association>)
	    b parent class_ref 853634 // Charset
	end

	classrelation 3172098 // cd (<unidirectional association>)
	  relation 3172098 --->
	    a role_name "cd" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3172098 // cd (<unidirectional association>)
	    b parent class_ref 167554 // CharsetDecoder
	end

	attribute 1685250 "isTrusted"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7126786 "StringDecoder"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "cs" type class_ref 853634 // Charset
	    param inout name "rcn" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7126914 "charsetName"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7127042 "requestedCharsetName"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7127170 "decode"
	  package explicit_return_type "char"
	  nparams 3
	    param inout name "ba" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7127298 "decode"
	class_operation package explicit_return_type "char"
	nparams 4
	  param inout name "charsetName" type class_ref 128130 // String
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7127426 "decode"
	class_operation package explicit_return_type "char"
	nparams 4
	  param inout name "cs" type class_ref 853634 // Charset
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7127554 "decode"
	class_operation package explicit_return_type "char"
	nparams 3
	  param inout name "ba" explicit_type "byte"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 939650 "StringEncoder"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3172226 // cs (<unidirectional association>)
	  relation 3172226 --->
	    a role_name "cs" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3172226 // cs (<unidirectional association>)
	    b parent class_ref 853634 // Charset
	end

	classrelation 3172354 // ce (<unidirectional association>)
	  relation 3172354 --->
	    a role_name "ce" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3172354 // ce (<unidirectional association>)
	    b parent class_ref 167682 // CharsetEncoder
	end

	classrelation 3172482 // requestedCharsetName (<unidirectional association>)
	  relation 3172482 --->
	    a role_name "requestedCharsetName" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3172482 // requestedCharsetName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1685378 "isTrusted"
	  const_attribute private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7127682 "StringEncoder"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "cs" type class_ref 853634 // Charset
	    param inout name "rcn" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7127810 "charsetName"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7127938 "requestedCharsetName"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7128066 "encode"
	  package explicit_return_type "byte"
	  nparams 3
	    param inout name "ca" explicit_type "char"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7128194 "encode"
	class_operation package explicit_return_type "byte"
	nparams 4
	  param inout name "charsetName" type class_ref 128130 // String
	  param inout name "ca" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 173826 // UnsupportedEncodingException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7128322 "encode"
	class_operation package explicit_return_type "byte"
	nparams 4
	  param inout name "cs" type class_ref 853634 // Charset
	  param inout name "ca" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7128450 "encode"
	class_operation package explicit_return_type "byte"
	nparams 3
	  param inout name "ca" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 939778 "SuppressWarnings"
      visibility public stereotype "@interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE})
@Retention(RetentionPolicy.SOURCE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Indicates that the named compiler warnings should be suppressed in the
annotated element (and in all program elements contained in the annotated
element).  Note that the set of warnings suppressed in a given element is
a superset of the warnings suppressed in all containing elements.  For
example, if you annotate a class to suppress one warning and annotate a
method to suppress another, both warnings will be suppressed in the method.

<p>As a matter of style, programmers should always use this annotation
on the most deeply nested element where it is effective.  If you want to
suppress a warning in a particular method, you should annotate that
method rather than its class.

@author Josh Bloch
@since 1.5
@jls 4.8 Raw Types
@jls 4.12.2 Variables of Reference Type
@jls 5.1.9 Unchecked Conversion
@jls 5.5.2 Checked Casts and Unchecked Casts
@jls 9.6.3.5 @SuppressWarnings
"
      operation 7128962 "value"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The set of warnings that are to be suppressed by the compiler in the
annotated element.  Duplicate names are permitted.  The second and
successive occurrences of a name are ignored.  The presence of
unrecognized warning names is <i>not</i> an error: Compilers must
ignore any warning names they do not recognize.  They are, however,
free to emit a warning if an annotation contains an unrecognized
warning name.

<p> The string {@code \"unchecked\"} is used to suppress
unchecked warnings. Compiler vendors should document the
additional warning names they support in conjunction with this
annotation type. They are encouraged to cooperate to ensure
that the same names work across multiple compilers.
@return the set of warnings to be suppressed
"
      end
    end

    class 939906 "System"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>System</code> class contains several useful class fields
and methods. It cannot be instantiated.

<p>Among the facilities provided by the <code>System</code> class
are standard input, standard output, and error output streams;
access to externally defined properties and environment
variables; a means of loading files and libraries; and a utility
method for quickly copying a portion of an array.

@author  unascribed
@since   JDK1.0
"
      operation 7129090 "registerNatives"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment " register the natives via the static initializer.

VM will invoke the initializeSystemClass method to complete
the initialization for this class separated from clinit.
Note that to use properties set by the VM, see the constraints
described in the initializeSystemClass method.
"
      end

      extra_member 158210 "initialization"
	
	cpp "" ""
	java "  static {
        registerNatives();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 7129218 "System"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Don't let anyone instantiate this class "
      end

      classrelation 3172738 // in (<unidirectional association>)
	relation 3172738 --->
	  a role_name "in" init_value " null" class_relation const_relation public
	    comment "
The \"standard\" input stream. This stream is already
open and ready to supply input data. Typically this stream
corresponds to keyboard input or another input source specified by
the host environment or user.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3172738 // in (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      classrelation 3172866 // out (<unidirectional association>)
	relation 3172866 --->
	  a role_name "out" init_value " null" class_relation const_relation public
	    comment "
The \"standard\" output stream. This stream is already
open and ready to accept output data. Typically this stream
corresponds to display output or another output destination
specified by the host environment or user.
<p>
For simple stand-alone Java applications, a typical way to write
a line of output data is:
<blockquote><pre>
    System.out.println(data)
</pre></blockquote>
<p>
See the <code>println</code> methods in class <code>PrintStream</code>.

@see     java.io.PrintStream#println()
@see     java.io.PrintStream#println(boolean)
@see     java.io.PrintStream#println(char)
@see     java.io.PrintStream#println(char[])
@see     java.io.PrintStream#println(double)
@see     java.io.PrintStream#println(float)
@see     java.io.PrintStream#println(int)
@see     java.io.PrintStream#println(long)
@see     java.io.PrintStream#println(java.lang.Object)
@see     java.io.PrintStream#println(java.lang.String)

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3172866 // out (<unidirectional association>)
	  b parent class_ref 128258 // PrintStream
      end

      classrelation 3172994 // err (<unidirectional association>)
	relation 3172994 --->
	  a role_name "err" init_value " null" class_relation const_relation public
	    comment "
The \"standard\" error output stream. This stream is already
open and ready to accept output data.
<p>
Typically this stream corresponds to display output or another
output destination specified by the host environment or user. By
convention, this output stream is used to display error messages
or other information that should come to the immediate attention
of a user even if the principal output stream, the value of the
variable <code>out</code>, has been redirected to a file or other
destination that is typically not continuously monitored.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3172994 // err (<unidirectional association>)
	  b parent class_ref 128258 // PrintStream
      end

      classrelation 3173122 // security (<unidirectional association>)
	relation 3173122 --->
	  a role_name "security" init_value " null" class_relation volatile private
	    comment " The security manager for the system.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3173122 // security (<unidirectional association>)
	  b parent class_ref 938242 // SecurityManager
      end

      operation 7129346 "setIn"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reassigns the \"standard\" input stream.

<p>First, if there is a security manager, its <code>checkPermission</code>
method is called with a <code>RuntimePermission(\"setIO\")</code> permission
 to see if it's ok to reassign the \"standard\" input stream.
<p>

@param in the new standard input stream.

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       reassigning of the standard input stream.

@see SecurityManager#checkPermission
@see java.lang.RuntimePermission

@since   JDK1.1
"
      end

      operation 7129474 "setOut"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reassigns the \"standard\" output stream.

<p>First, if there is a security manager, its <code>checkPermission</code>
method is called with a <code>RuntimePermission(\"setIO\")</code> permission
 to see if it's ok to reassign the \"standard\" output stream.

@param out the new standard output stream

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       reassigning of the standard output stream.

@see SecurityManager#checkPermission
@see java.lang.RuntimePermission

@since   JDK1.1
"
      end

      operation 7129602 "setErr"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "err" type class_ref 128258 // PrintStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reassigns the \"standard\" error output stream.

<p>First, if there is a security manager, its <code>checkPermission</code>
method is called with a <code>RuntimePermission(\"setIO\")</code> permission
 to see if it's ok to reassign the \"standard\" error output stream.

@param err the new standard error output stream.

@throws SecurityException
       if a security manager exists and its
       <code>checkPermission</code> method doesn't allow
       reassigning of the standard error output stream.

@see SecurityManager#checkPermission
@see java.lang.RuntimePermission

@since   JDK1.1
"
      end

      classrelation 3173250 // cons (<unidirectional association>)
	relation 3173250 --->
	  a role_name "cons" init_value " null" class_relation volatile private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3173250 // cons (<unidirectional association>)
	  b parent class_ref 922242 // Console
      end

      operation 7129730 "console"
	class_operation public return_type class_ref 922242 // Console
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique {@link java.io.Console Console} object associated
with the current Java virtual machine, if any.

@return  The system console, if any, otherwise <tt>null</tt>.

@since   1.6
"
      end

      operation 7129858 "inheritedChannel"
	class_operation public return_type class_ref 940034 // Channel
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the channel inherited from the entity that created this
Java virtual machine.

<p> This method returns the channel obtained by invoking the
{@link java.nio.channels.spi.SelectorProvider#inheritedChannel
inheritedChannel} method of the system-wide default
{@link java.nio.channels.spi.SelectorProvider} object. </p>

<p> In addition to the network-oriented channels described in
{@link java.nio.channels.spi.SelectorProvider#inheritedChannel
inheritedChannel}, this method may return other kinds of
channels in the future.

@return  The inherited channel, if any, otherwise <tt>null</tt>.

@throws  IOException
         If an I/O error occurs

@throws  SecurityException
         If a security manager is present and it does not
         permit access to the channel.

@since 1.5
"
      end

      operation 7129986 "checkIO"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7130114 "setIn0"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 146434 // InputStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7130242 "setOut0"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128258 // PrintStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7130370 "setErr0"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "err" type class_ref 128258 // PrintStream
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7130498 "setSecurityManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "s" type class_ref 938242 // SecurityManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the System security.

<p> If there is a security manager already installed, this method first
calls the security manager's <code>checkPermission</code> method
with a <code>RuntimePermission(\"setSecurityManager\")</code>
permission to ensure it's ok to replace the existing
security manager.
This may result in throwing a <code>SecurityException</code>.

<p> Otherwise, the argument is established as the current
security manager. If the argument is <code>null</code> and no
security manager has been established, then no action is taken and
the method simply returns.

@param      s   the security manager.
@exception  SecurityException  if the security manager has already
            been set and its <code>checkPermission</code> method
            doesn't allow it to be replaced.
@see #getSecurityManager
@see SecurityManager#checkPermission
@see java.lang.RuntimePermission
"
      end

      operation 7130626 "setSecurityManager0"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "s" type class_ref 938242 // SecurityManager
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7130754 "getSecurityManager"
	class_operation public return_type class_ref 938242 // SecurityManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system security interface.

@return  if a security manager has already been established for the
         current application, then that security manager is returned;
         otherwise, <code>null</code> is returned.
@see     #setSecurityManager
"
      end

      operation 7130882 "currentTimeMillis"
	class_operation public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the current time in milliseconds.  Note that
while the unit of time of the return value is a millisecond,
the granularity of the value depends on the underlying
operating system and may be larger.  For example, many
operating systems measure time in units of tens of
milliseconds.

<p> See the description of the class <code>Date</code> for
a discussion of slight discrepancies that may arise between
\"computer time\" and coordinated universal time (UTC).

@return  the difference, measured in milliseconds, between
         the current time and midnight, January 1, 1970 UTC.
@see     java.util.Date
"
      end

      operation 7131010 "nanoTime"
	class_operation public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
	comment "Returns the current value of the running Java Virtual Machine's
high-resolution time source, in nanoseconds.

<p>This method can only be used to measure elapsed time and is
not related to any other notion of system or wall-clock time.
The value returned represents nanoseconds since some fixed but
arbitrary <i>origin</i> time (perhaps in the future, so values
may be negative).  The same origin is used by all invocations of
this method in an instance of a Java virtual machine; other
virtual machine instances are likely to use a different origin.

<p>This method provides nanosecond precision, but not necessarily
nanosecond resolution (that is, how frequently the value changes)
- no guarantees are made except that the resolution is at least as
good as that of {@link #currentTimeMillis()}.

<p>Differences in successive calls that span greater than
approximately 292 years (2<sup>63</sup> nanoseconds) will not
correctly compute elapsed time due to numerical overflow.

<p>The values returned by this method become meaningful only when
the difference between two such values, obtained within the same
instance of a Java virtual machine, is computed.

<p> For example, to measure how long some code takes to execute:
 <pre> {@code
long startTime = System.nanoTime();
// ... the code being measured ...
long estimatedTime = System.nanoTime() - startTime;}</pre>

<p>To compare two nanoTime values
 <pre> {@code
long t0 = System.nanoTime();
...
long t1 = System.nanoTime();}</pre>

one should use {@code t1 - t0 < 0}, not {@code t1 < t0},
because of the possibility of numerical overflow.

@return the current value of the running Java Virtual Machine's
        high-resolution time source, in nanoseconds
@since 1.5
"
      end

      operation 7131138 "arraycopy"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "src" type class_ref 129538 // Object
	  param in name "srcPos" explicit_type "int"
	  param inout name "dest" type class_ref 129538 // Object
	  param in name "destPos" explicit_type "int"
	  param in name "length" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	
	
	
	comment "Copies an array from the specified source array, beginning at the
specified position, to the specified position of the destination array.
A subsequence of array components are copied from the source
array referenced by <code>src</code> to the destination array
referenced by <code>dest</code>. The number of components copied is
equal to the <code>length</code> argument. The components at
positions <code>srcPos</code> through
<code>srcPos+length-1</code> in the source array are copied into
positions <code>destPos</code> through
<code>destPos+length-1</code>, respectively, of the destination
array.
<p>
If the <code>src</code> and <code>dest</code> arguments refer to the
same array object, then the copying is performed as if the
components at positions <code>srcPos</code> through
<code>srcPos+length-1</code> were first copied to a temporary
array with <code>length</code> components and then the contents of
the temporary array were copied into positions
<code>destPos</code> through <code>destPos+length-1</code> of the
destination array.
<p>
If <code>dest</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown.
<p>
If <code>src</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown and the destination
array is not modified.
<p>
Otherwise, if any of the following is true, an
<code>ArrayStoreException</code> is thrown and the destination is
not modified:
<ul>
<li>The <code>src</code> argument refers to an object that is not an
    array.
<li>The <code>dest</code> argument refers to an object that is not an
    array.
<li>The <code>src</code> argument and <code>dest</code> argument refer
    to arrays whose component types are different primitive types.
<li>The <code>src</code> argument refers to an array with a primitive
   component type and the <code>dest</code> argument refers to an array
    with a reference component type.
<li>The <code>src</code> argument refers to an array with a reference
   component type and the <code>dest</code> argument refers to an array
    with a primitive component type.
</ul>
<p>
Otherwise, if any of the following is true, an
<code>IndexOutOfBoundsException</code> is
thrown and the destination is not modified:
<ul>
<li>The <code>srcPos</code> argument is negative.
<li>The <code>destPos</code> argument is negative.
<li>The <code>length</code> argument is negative.
<li><code>srcPos+length</code> is greater than
    <code>src.length</code>, the length of the source array.
<li><code>destPos+length</code> is greater than
    <code>dest.length</code>, the length of the destination array.
</ul>
<p>
Otherwise, if any actual component of the source array from
position <code>srcPos</code> through
<code>srcPos+length-1</code> cannot be converted to the component
type of the destination array by assignment conversion, an
<code>ArrayStoreException</code> is thrown. In this case, let
<b><i>k</i></b> be the smallest nonnegative integer less than
length such that <code>src[srcPos+</code><i>k</i><code>]</code>
cannot be converted to the component type of the destination
array; when the exception is thrown, source array components from
positions <code>srcPos</code> through
<code>srcPos+</code><i>k</i><code>-1</code>
will already have been copied to destination array positions
<code>destPos</code> through
<code>destPos+</code><i>k</I><code>-1</code> and no other
positions of the destination array will have been modified.
(Because of the restrictions already itemized, this
paragraph effectively applies only to the situation where both
arrays have component types that are reference types.)

@param      src      the source array.
@param      srcPos   starting position in the source array.
@param      dest     the destination array.
@param      destPos  starting position in the destination data.
@param      length   the number of array elements to be copied.
@exception  IndexOutOfBoundsException  if copying would cause
              access of data outside array bounds.
@exception  ArrayStoreException  if an element in the <code>src</code>
              array could not be stored into the <code>dest</code> array
              because of a type mismatch.
@exception  NullPointerException if either <code>src</code> or
              <code>dest</code> is <code>null</code>.
"
      end

      operation 7131266 "identityHashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "x" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Returns the same hash code for the given object as
would be returned by the default method hashCode(),
whether or not the given object's class overrides
hashCode().
The hash code for the null reference is zero.

@param x object for which the hashCode is to be calculated
@return  the hashCode
@since   JDK1.1
"
      end

      classrelation 3173378 // props (<unidirectional association>)
	relation 3173378 --->
	  a role_name "props" class_relation private
	    comment "
System properties. The following properties are guaranteed to be defined:
<dl>
<dt>java.version         <dd>Java version number
<dt>java.vendor          <dd>Java vendor specific string
<dt>java.vendor.url      <dd>Java vendor URL
<dt>java.home            <dd>Java installation directory
<dt>java.class.version   <dd>Java class version number
<dt>java.class.path      <dd>Java classpath
<dt>os.name              <dd>Operating System Name
<dt>os.arch              <dd>Operating System Architecture
<dt>os.version           <dd>Operating System Version
<dt>file.separator       <dd>File separator (\"/\" on Unix)
<dt>path.separator       <dd>Path separator (\":\" on Unix)
<dt>line.separator       <dd>Line separator (\"\\n\" on Unix)
<dt>user.name            <dd>User account name
<dt>user.home            <dd>User home directory
<dt>user.dir             <dd>User's current working directory
</dl>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3173378 // props (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      operation 7131394 "initProperties"
	class_operation private return_type class_ref 240130 // Properties
	nparams 1
	  param inout name "props" type class_ref 240130 // Properties
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 7131522 "getProperties"
	class_operation public return_type class_ref 240130 // Properties
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the current system properties.
<p>
First, if there is a security manager, its
<code>checkPropertiesAccess</code> method is called with no
arguments. This may result in a security exception.
<p>
The current set of system properties for use by the
{@link #getProperty(String)} method is returned as a
<code>Properties</code> object. If there is no current set of
system properties, a set of system properties is first created and
initialized. This set of system properties always includes values
for the following keys:
<table summary=\"Shows property keys and associated values\">
<tr><th>Key</th>
    <th>Description of Associated Value</th></tr>
<tr><td><code>java.version</code></td>
    <td>Java Runtime Environment version</td></tr>
<tr><td><code>java.vendor</code></td>
    <td>Java Runtime Environment vendor</td></tr>
<tr><td><code>java.vendor.url</code></td>
    <td>Java vendor URL</td></tr>
<tr><td><code>java.home</code></td>
    <td>Java installation directory</td></tr>
<tr><td><code>java.vm.specification.version</code></td>
    <td>Java Virtual Machine specification version</td></tr>
<tr><td><code>java.vm.specification.vendor</code></td>
    <td>Java Virtual Machine specification vendor</td></tr>
<tr><td><code>java.vm.specification.name</code></td>
    <td>Java Virtual Machine specification name</td></tr>
<tr><td><code>java.vm.version</code></td>
    <td>Java Virtual Machine implementation version</td></tr>
<tr><td><code>java.vm.vendor</code></td>
    <td>Java Virtual Machine implementation vendor</td></tr>
<tr><td><code>java.vm.name</code></td>
    <td>Java Virtual Machine implementation name</td></tr>
<tr><td><code>java.specification.version</code></td>
    <td>Java Runtime Environment specification  version</td></tr>
<tr><td><code>java.specification.vendor</code></td>
    <td>Java Runtime Environment specification  vendor</td></tr>
<tr><td><code>java.specification.name</code></td>
    <td>Java Runtime Environment specification  name</td></tr>
<tr><td><code>java.class.version</code></td>
    <td>Java class format version number</td></tr>
<tr><td><code>java.class.path</code></td>
    <td>Java class path</td></tr>
<tr><td><code>java.library.path</code></td>
    <td>List of paths to search when loading libraries</td></tr>
<tr><td><code>java.io.tmpdir</code></td>
    <td>Default temp file path</td></tr>
<tr><td><code>java.compiler</code></td>
    <td>Name of JIT compiler to use</td></tr>
<tr><td><code>java.ext.dirs</code></td>
    <td>Path of extension directory or directories
        <b>Deprecated.</b> <i>This property, and the mechanism
           which implements it, may be removed in a future
           release.</i> </td></tr>
<tr><td><code>os.name</code></td>
    <td>Operating system name</td></tr>
<tr><td><code>os.arch</code></td>
    <td>Operating system architecture</td></tr>
<tr><td><code>os.version</code></td>
    <td>Operating system version</td></tr>
<tr><td><code>file.separator</code></td>
    <td>File separator (\"/\" on UNIX)</td></tr>
<tr><td><code>path.separator</code></td>
    <td>Path separator (\":\" on UNIX)</td></tr>
<tr><td><code>line.separator</code></td>
    <td>Line separator (\"\\n\" on UNIX)</td></tr>
<tr><td><code>user.name</code></td>
    <td>User's account name</td></tr>
<tr><td><code>user.home</code></td>
    <td>User's home directory</td></tr>
<tr><td><code>user.dir</code></td>
    <td>User's current working directory</td></tr>
</table>
<p>
Multiple paths in a system property value are separated by the path
separator character of the platform.
<p>
Note that even if the security manager does not permit the
<code>getProperties</code> operation, it may choose to permit the
{@link #getProperty(String)} operation.

@return     the system properties
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow access
             to the system properties.
@see        #setProperties
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkPropertiesAccess()
@see        java.util.Properties
"
      end

      operation 7131650 "lineSeparator"
	class_operation public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system-dependent line separator string.  It always
returns the same value - the initial value of the {@linkplain
#getProperty(String) system property} {@code line.separator}.

<p>On UNIX systems, it returns {@code \"\\n\"}; on Microsoft
Windows systems it returns {@code \"\\r\\n\"}.

@return the system-dependent line separator string
@since 1.7
"
      end

      classrelation 3173506 // lineSeparator (<unidirectional association>)
	relation 3173506 --->
	  a role_name "lineSeparator" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3173506 // lineSeparator (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7131778 "setProperties"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "props" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system properties to the <code>Properties</code>
argument.
<p>
First, if there is a security manager, its
<code>checkPropertiesAccess</code> method is called with no
arguments. This may result in a security exception.
<p>
The argument becomes the current set of system properties for use
by the {@link #getProperty(String)} method. If the argument is
<code>null</code>, then the current set of system properties is
forgotten.

@param      props   the new system properties.
@exception  SecurityException  if a security manager exists and its
            <code>checkPropertiesAccess</code> method doesn't allow access
             to the system properties.
@see        #getProperties
@see        java.util.Properties
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkPropertiesAccess()
"
      end

      operation 7131906 "getProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system property indicated by the specified key.
<p>
First, if there is a security manager, its
<code>checkPropertyAccess</code> method is called with the key as
its argument. This may result in a SecurityException.
<p>
If there is no current set of system properties, a set of system
properties is first created and initialized in the same manner as
for the <code>getProperties</code> method.

@param      key   the name of the system property.
@return     the string value of the system property,
            or <code>null</code> if there is no property with that key.

@exception  SecurityException  if a security manager exists and its
            <code>checkPropertyAccess</code> method doesn't allow
             access to the specified system property.
@exception  NullPointerException if <code>key</code> is
            <code>null</code>.
@exception  IllegalArgumentException if <code>key</code> is empty.
@see        #setProperty
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkPropertyAccess(java.lang.String)
@see        java.lang.System#getProperties()
"
      end

      operation 7132034 "getProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "def" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the system property indicated by the specified key.
<p>
First, if there is a security manager, its
<code>checkPropertyAccess</code> method is called with the
<code>key</code> as its argument.
<p>
If there is no current set of system properties, a set of system
properties is first created and initialized in the same manner as
for the <code>getProperties</code> method.

@param      key   the name of the system property.
@param      def   a default value.
@return     the string value of the system property,
            or the default value if there is no property with that key.

@exception  SecurityException  if a security manager exists and its
            <code>checkPropertyAccess</code> method doesn't allow
            access to the specified system property.
@exception  NullPointerException if <code>key</code> is
            <code>null</code>.
@exception  IllegalArgumentException if <code>key</code> is empty.
@see        #setProperty
@see        java.lang.SecurityManager#checkPropertyAccess(java.lang.String)
@see        java.lang.System#getProperties()
"
      end

      operation 7132162 "setProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system property indicated by the specified key.
<p>
First, if a security manager exists, its
<code>SecurityManager.checkPermission</code> method
is called with a <code>PropertyPermission(key, \"write\")</code>
permission. This may result in a SecurityException being thrown.
If no exception is thrown, the specified property is set to the given
value.
<p>

@param      key   the name of the system property.
@param      value the value of the system property.
@return     the previous value of the system property,
            or <code>null</code> if it did not have one.

@exception  SecurityException  if a security manager exists and its
            <code>checkPermission</code> method doesn't allow
            setting of the specified property.
@exception  NullPointerException if <code>key</code> or
            <code>value</code> is <code>null</code>.
@exception  IllegalArgumentException if <code>key</code> is empty.
@see        #getProperty
@see        java.lang.System#getProperty(java.lang.String)
@see        java.lang.System#getProperty(java.lang.String, java.lang.String)
@see        java.util.PropertyPermission
@see        SecurityManager#checkPermission
@since      1.2
"
      end

      operation 7132290 "clearProperty"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the system property indicated by the specified key.
<p>
First, if a security manager exists, its
<code>SecurityManager.checkPermission</code> method
is called with a <code>PropertyPermission(key, \"write\")</code>
permission. This may result in a SecurityException being thrown.
If no exception is thrown, the specified property is removed.
<p>

@param      key   the name of the system property to be removed.
@return     the previous string value of the system property,
            or <code>null</code> if there was no property with that key.

@exception  SecurityException  if a security manager exists and its
            <code>checkPropertyAccess</code> method doesn't allow
             access to the specified system property.
@exception  NullPointerException if <code>key</code> is
            <code>null</code>.
@exception  IllegalArgumentException if <code>key</code> is empty.
@see        #getProperty
@see        #setProperty
@see        java.util.Properties
@see        java.lang.SecurityException
@see        java.lang.SecurityManager#checkPropertiesAccess()
@since 1.5
"
      end

      operation 7132418 "checkKey"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7132546 "getenv"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of the specified environment variable. An
environment variable is a system-dependent external named
value.

<p>If a security manager exists, its
{@link SecurityManager#checkPermission checkPermission}
method is called with a
<code>{@link RuntimePermission}(\"getenv.\"+name)</code>
permission.  This may result in a {@link SecurityException}
being thrown.  If no exception is thrown the value of the
variable <code>name</code> is returned.

<p><a name=\"EnvironmentVSSystemProperties\"><i>System
properties</i> and <i>environment variables</i></a> are both
conceptually mappings between names and values.  Both
mechanisms can be used to pass user-defined information to a
Java process.  Environment variables have a more global effect,
because they are visible to all descendants of the process
which defines them, not just the immediate Java subprocess.
They can have subtly different semantics, such as case
insensitivity, on different operating systems.  For these
reasons, environment variables are more likely to have
unintended side effects.  It is best to use system properties
where possible.  Environment variables should be used when a
global effect is desired, or when an external system interface
requires an environment variable (such as <code>PATH</code>).

<p>On UNIX systems the alphabetic case of <code>name</code> is
typically significant, while on Microsoft Windows systems it is
typically not.  For example, the expression
<code>System.getenv(\"FOO\").equals(System.getenv(\"foo\"))</code>
is likely to be true on Microsoft Windows.

@param  name the name of the environment variable
@return the string value of the variable, or <code>null</code>
        if the variable is not defined in the system environment
@throws NullPointerException if <code>name</code> is <code>null</code>
@throws SecurityException
        if a security manager exists and its
        {@link SecurityManager#checkPermission checkPermission}
        method doesn't allow access to the environment variable
        <code>name</code>
@see    #getenv()
@see    ProcessBuilder#environment()
"
      end

      operation 7132674 "getenv"
	class_operation public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String,String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable string map view of the current system environment.
The environment is a system-dependent mapping from names to
values which is passed from parent to child processes.

<p>If the system does not support environment variables, an
empty map is returned.

<p>The returned map will never contain null keys or values.
Attempting to query the presence of a null key or value will
throw a {@link NullPointerException}.  Attempting to query
the presence of a key or value which is not of type
{@link String} will throw a {@link ClassCastException}.

<p>The returned map and its collection views may not obey the
general contract of the {@link Object#equals} and
{@link Object#hashCode} methods.

<p>The returned map is typically case-sensitive on all platforms.

<p>If a security manager exists, its
{@link SecurityManager#checkPermission checkPermission}
method is called with a
<code>{@link RuntimePermission}(\"getenv.*\")</code>
permission.  This may result in a {@link SecurityException} being
thrown.

<p>When passing information to a Java subprocess,
<a href=#EnvironmentVSSystemProperties>system properties</a>
are generally preferred over environment variables.

@return the environment as a map of variable names to values
@throws SecurityException
        if a security manager exists and its
        {@link SecurityManager#checkPermission checkPermission}
        method doesn't allow access to the process environment
@see    #getenv(String)
@see    ProcessBuilder#environment()
@since  1.5
"
      end

      operation 7132802 "exit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminates the currently running Java Virtual Machine. The
argument serves as a status code; by convention, a nonzero status
code indicates abnormal termination.
<p>
This method calls the <code>exit</code> method in class
<code>Runtime</code>. This method never returns normally.
<p>
The call <code>System.exit(n)</code> is effectively equivalent to
the call:
<blockquote><pre>
Runtime.getRuntime().exit(n)
</pre></blockquote>

@param      status   exit status.
@throws  SecurityException
       if a security manager exists and its <code>checkExit</code>
       method doesn't allow exit with the specified status.
@see        java.lang.Runtime#exit(int)
"
      end

      operation 7132930 "gc"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the garbage collector.
<p>
Calling the <code>gc</code> method suggests that the Java Virtual
Machine expend effort toward recycling unused objects in order to
make the memory they currently occupy available for quick reuse.
When control returns from the method call, the Java Virtual
Machine has made a best effort to reclaim space from all discarded
objects.
<p>
The call <code>System.gc()</code> is effectively equivalent to the
call:
<blockquote><pre>
Runtime.getRuntime().gc()
</pre></blockquote>

@see     java.lang.Runtime#gc()
"
      end

      operation 7133058 "runFinalization"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the finalization methods of any objects pending finalization.
<p>
Calling this method suggests that the Java Virtual Machine expend
effort toward running the <code>finalize</code> methods of objects
that have been found to be discarded but whose <code>finalize</code>
methods have not yet been run. When control returns from the
method call, the Java Virtual Machine has made a best effort to
complete all outstanding finalizations.
<p>
The call <code>System.runFinalization()</code> is effectively
equivalent to the call:
<blockquote><pre>
Runtime.getRuntime().runFinalization()
</pre></blockquote>

@see     java.lang.Runtime#runFinalization()
"
      end

      operation 7133186 "runFinalizersOnExit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Enable or disable finalization on exit; doing so specifies that the
finalizers of all objects that have finalizers that have not yet been
automatically invoked are to be run before the Java runtime exits.
By default, finalization on exit is disabled.

<p>If there is a security manager,
its <code>checkExit</code> method is first called
with 0 as its argument to ensure the exit is allowed.
This could result in a SecurityException.

@deprecated  This method is inherently unsafe.  It may result in
     finalizers being called on live objects while other threads are
     concurrently manipulating those objects, resulting in erratic
     behavior or deadlock.
@param value indicating enabling or disabling of finalization
@throws  SecurityException
       if a security manager exists and its <code>checkExit</code>
       method doesn't allow the exit.

@see     java.lang.Runtime#exit(int)
@see     java.lang.Runtime#gc()
@see     java.lang.SecurityManager#checkExit(int)
@since   JDK1.1
"
      end

      operation 7133314 "load"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "filename" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Loads the native library specified by the filename argument.  The filename
argument must be an absolute path name.

If the filename argument, when stripped of any platform-specific library
prefix, path, and file extension, indicates a library whose name is,
for example, L, and a native library called L is statically linked
with the VM, then the JNI_OnLoad_L function exported by the library
is invoked rather than attempting to load a dynamic library.
A filename matching the argument does not have to exist in the
file system.
See the JNI Specification for more details.

Otherwise, the filename argument is mapped to a native library image in
an implementation-dependent manner.

<p>
The call <code>System.load(name)</code> is effectively equivalent
to the call:
<blockquote><pre>
Runtime.getRuntime().load(name)
</pre></blockquote>

@param      filename   the file to load.
@exception  SecurityException  if a security manager exists and its
            <code>checkLink</code> method doesn't allow
            loading of the specified dynamic library
@exception  UnsatisfiedLinkError  if either the filename is not an
            absolute path name, the native library is not statically
            linked with the VM, or the library cannot be mapped to
            a native library image by the host system.
@exception  NullPointerException if <code>filename</code> is
            <code>null</code>
@see        java.lang.Runtime#load(java.lang.String)
@see        java.lang.SecurityManager#checkLink(java.lang.String)
"
      end

      operation 7133442 "loadLibrary"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallerSensitive
"
	
	
	
	comment "Loads the native library specified by the <code>libname</code>
argument.  The <code>libname</code> argument must not contain any platform
specific prefix, file extension or path. If a native library
called <code>libname</code> is statically linked with the VM, then the
JNI_OnLoad_<code>libname</code> function exported by the library is invoked.
See the JNI Specification for more details.

Otherwise, the libname argument is loaded from a system library
location and mapped to a native library image in an implementation-
dependent manner.
<p>
The call <code>System.loadLibrary(name)</code> is effectively
equivalent to the call
<blockquote><pre>
Runtime.getRuntime().loadLibrary(name)
</pre></blockquote>

@param      libname   the name of the library.
@exception  SecurityException  if a security manager exists and its
            <code>checkLink</code> method doesn't allow
            loading of the specified dynamic library
@exception  UnsatisfiedLinkError if either the libname argument
            contains a file path, the native library is not statically
            linked with the VM,  or the library cannot be mapped to a
            native library image by the host system.
@exception  NullPointerException if <code>libname</code> is
            <code>null</code>
@see        java.lang.Runtime#loadLibrary(java.lang.String)
@see        java.lang.SecurityManager#checkLink(java.lang.String)
"
      end

      operation 7133570 "mapLibraryName"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "libname" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment "Maps a library name into a platform-specific string representing
a native library.

@param      libname the name of the library.
@return     a platform-dependent native library name.
@exception  NullPointerException if <code>libname</code> is
            <code>null</code>
@see        java.lang.System#loadLibrary(java.lang.String)
@see        java.lang.ClassLoader#findLibrary(java.lang.String)
@since      1.2
"
      end

      operation 7133698 "newPrintStream"
	class_operation private return_type class_ref 128258 // PrintStream
	nparams 2
	  param inout name "fos" type class_ref 924162 // FileOutputStream
	  param inout name "enc" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create PrintStream for stdout/err based on encoding.
"
      end

      operation 7133826 "initializeSystemClass"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the system class.  Called after thread initialization.
"
      end

      operation 7133954 "setJavaLangAccess"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940162 "Terminator"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Package-private utility class for setting up and tearing down
platform-specific support for termination-triggered shutdowns.

@author   Mark Reinhold
@since    1.3
"
      attribute 1685634 "handler"
	class_attribute private explicit_type "SignalHandler"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7134082 "setup"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Invocations of setup and teardown are already synchronized
on the shutdown lock, so no further synchronization is needed here
"
      end

      operation 7134210 "teardown"
	class_operation package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 940290 "ThreadDeath"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of {@code ThreadDeath} is thrown in the victim thread
when the (deprecated) {@link Thread#stop()} method is invoked.

<p>An application should catch instances of this class only if it
must clean up after being terminated asynchronously.  If
{@code ThreadDeath} is caught by a method, it is important that it
be rethrown so that the thread actually dies.

<p>The {@linkplain ThreadGroup#uncaughtException top-level error
handler} does not print out a message if {@code ThreadDeath} is
never caught.

<p>The class {@code ThreadDeath} is specifically a subclass of
{@code Error} rather than {@code Exception}, even though it is a
\"normal occurrence\", because many applications catch all
occurrences of {@code Exception} and then discard the exception.

@since   JDK1.0
"
      classrelation 3173634 // <generalisation>
	relation 3173634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3173634 // <generalisation>
	  b parent class_ref 195842 // Error
      end

      attribute 1685762 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4417128565033088268L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 940418 "TypeNotPresentException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an application tries to access a type using a string
representing the type's name, but no definition for the type with
the specified name can be found.   This exception differs from
{@link ClassNotFoundException} in that <tt>ClassNotFoundException</tt> is a
checked exception, whereas this exception is unchecked.

<p>Note that this exception may be used when undefined type variables
are accessed as well as when types (e.g., classes, interfaces or
annotation types) are loaded.
In particular, this exception can be thrown by the {@linkplain
java.lang.reflect.AnnotatedElement API used to read annotations
reflectively}.

@author  Josh Bloch
@see     java.lang.reflect.AnnotatedElement
@since 1.5
"
      classrelation 3174402 // <generalisation>
	relation 3174402 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3174402 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1686786 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5101214195716534496L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3174530 // typeName (<unidirectional association>)
	relation 3174530 --->
	  a role_name "typeName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3174530 // typeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 7139458 "TypeNotPresentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "typeName" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <tt>TypeNotPresentException</tt> for the named type
with the specified cause.

@param typeName the fully qualified name of the unavailable type
@param cause the exception that was thrown when the system attempted to
   load the named type, or <tt>null</tt> if unavailable or inapplicable
"
      end

      operation 7139586 "typeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified name of the unavailable type.

@return the fully qualified name of the unavailable type
"
      end
    end

    class 940546 "UNIXProcess"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "java.lang.Process subclass in the UNIX environment.

@author Mario Wolczko and Ross Knippel.
@author Konstantin Kladko (ported to Linux and Bsd)
@author Martin Buchholz
@author Volker Simonis (ported to AIX)
"
      classrelation 3174658 // <generalisation>
	relation 3174658 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3174658 // <generalisation>
	  b parent class_ref 140930 // Process
      end

      attribute 1686914 "fdAccess"
	class_attribute const_attribute private explicit_type "sun.misc.JavaIOFileDescriptorAccess"
	init_value " sun.misc.SharedSecrets.getJavaIOFileDescriptorAccess()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1687042 "pid"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1687170 "exitcode"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1687298 "hasExited"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3174786 // stdin (<unidirectional association>)
	relation 3174786 --->
	  a role_name "stdin" private
	    comment " final "
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3174786 // stdin (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      classrelation 3174914 // stdout (<unidirectional association>)
	relation 3174914 --->
	  a role_name "stdout" private
	    comment " final "
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3174914 // stdout (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      classrelation 3175042 // stderr (<unidirectional association>)
	relation 3175042 --->
	  a role_name "stderr" private
	    comment " final "
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3175042 // stderr (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      class 940674 "DeferredCloseInputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3176322 // <generalisation>
	  relation 3176322 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3176322 // <generalisation>
	    b parent class_ref 580226 // FileInputStream
	end

	operation 7143426 "DeferredCloseInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "fd" type class_ref 923778 // FileDescriptor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 3176450 // lock (<unidirectional association>)
	  relation 3176450 --->
	    a role_name "lock" init_value " new Object()" private
	      comment " For the following fields"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3176450 // lock (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	attribute 1688450 "closePending"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1688578 "useCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3176578 // streamToClose (<unidirectional association>)
	  relation 3176578 --->
	    a role_name "streamToClose" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3176578 // streamToClose (<unidirectional association>)
	    b parent class_ref 146434 // InputStream
	end

	operation 7143554 "raise"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7143682 "lower"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7143810 "closeDeferred"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "stc" type class_ref 146434 // InputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " stc is the actual stream to be closed; it might be this object, or
 it might be an upstream object for which this object is downstream.
"
	end

	operation 7143938 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144066 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144194 "read"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144322 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144450 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144578 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3175170 // stdout_inner_stream (<unidirectional association>)
	relation 3175170 --->
	  a role_name "stdout_inner_stream" private
	    comment " only used on Solaris
 final "
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3175170 // stdout_inner_stream (<unidirectional association>)
	  b parent class_ref 940674 // DeferredCloseInputStream
      end

      class 940802 "LaunchMechanism"
	visibility private stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1687426 "FORK"
	  public type class_ref 940802 // LaunchMechanism
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " order IS important!
"
	end

	attribute 1687554 "POSIX_SPAWN"
	  public type class_ref 940802 // LaunchMechanism
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1687682 "VFORK"
	  public type class_ref 940802 // LaunchMechanism
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 940930 "Platform"
	visibility private stereotype "enum"
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 1687810 "LINUX"
	  public type class_ref 940930 // Platform
	  cpp_decl ""
	  java_decl "  ${@}${name}(LaunchMechanism.VFORK, LaunchMechanism.FORK),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1687938 "BSD"
	  public type class_ref 940930 // Platform
	  cpp_decl ""
	  java_decl "  ${@}${name}(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1688066 "SOLARIS"
	  public type class_ref 940930 // Platform
	  cpp_decl ""
	  java_decl "  ${@}${name}(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1688194 "AIX"
	  public type class_ref 940930 // Platform
	  cpp_decl ""
	  java_decl "  ${@}${name}(LaunchMechanism.POSIX_SPAWN, LaunchMechanism.FORK),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3175298 // defaultLaunchMechanism (<unidirectional association>)
	  relation 3175298 --->
	    a role_name "defaultLaunchMechanism" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3175298 // defaultLaunchMechanism (<unidirectional association>)
	    b parent class_ref 940802 // LaunchMechanism
	end

	classrelation 3175426 // validLaunchMechanisms (<unidirectional association>)
	  relation 3175426 --->
	    a role_name "validLaunchMechanisms" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LaunchMechanism> ${name}${value};
"
	      classrelation_ref 3175426 // validLaunchMechanisms (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 7139714 "Platform"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "launchMechanisms" type class_ref 940802 // LaunchMechanism
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ... ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7139842 "helperPath"
	  private return_type class_ref 128130 // String
	  nparams 2
	    param inout name "javahome" type class_ref 128130 // String
	    param inout name "osArch" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7139970 "helperPath"
	  package return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7140098 "launchMechanism"
	  package return_type class_ref 940802 // LaunchMechanism
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7140226 "get"
	  class_operation package return_type class_ref 940930 // Platform
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3175554 // platform (<unidirectional association>)
	relation 3175554 --->
	  a role_name "platform" init_value " Platform.get()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3175554 // platform (<unidirectional association>)
	  b parent class_ref 940930 // Platform
      end

      classrelation 3175682 // launchMechanism (<unidirectional association>)
	relation 3175682 --->
	  a role_name "launchMechanism" init_value " platform.launchMechanism()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3175682 // launchMechanism (<unidirectional association>)
	  b parent class_ref 940802 // LaunchMechanism
      end

      attribute 1688322 "helperpath"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " toCString(platform.helperPath())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7140354 "toCString"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7140482 "waitForProcessExit"
	private explicit_return_type "int"
	nparams 1
	  param in name "pid" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
	comment " this is for the reaping thread "
      end

      operation 7140610 "forkAndExec"
	private explicit_return_type "int"
	nparams 10
	  param in name "mode" explicit_type "int"
	  param inout name "helperpath" explicit_type "byte"
	multiplicity "[]"
	  param inout name "prog" explicit_type "byte"
	multiplicity "[]"
	  param inout name "argBlock" explicit_type "byte"
	multiplicity "[]"
	  param in name "argc" explicit_type "int"
	  param inout name "envBlock" explicit_type "byte"
	multiplicity "[]"
	  param in name "envc" explicit_type "int"
	  param inout name "dir" explicit_type "byte"
	multiplicity "[]"
	  param inout name "fds" explicit_type "int"
	multiplicity "[]"
	  param inout name "redirectErrorStream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}, ${t7}[] ${p7}, ${t8}[] ${p8}, ${t9} ${p9}${)}${throws};
s"
	
	
	
	comment "Creates a process. Depending on the {@code mode} flag, this is done by
one of the following mechanisms:
<pre>
  1 - fork(2) and exec(2)
  2 - posix_spawn(3P)
  3 - vfork(2) and exec(2)

 (4 - clone(2) and exec(2) - obsolete and currently disabled in native code)
</pre>
@param fds an array of three file descriptors.
       Indexes 0, 1, and 2 correspond to standard input,
       standard output and standard error, respectively.  On
       input, a value of -1 means to create a pipe to connect
       child and parent processes.  On output, a value which
       is not -1 is the parent pipe fd corresponding to the
       pipe which has been created.  An element of this array
       is -1 on input if and only if it is <em>not</em> -1 on
       output.
@return the pid of the subprocess
"
      end

      classrelation 3175810 // processReaperExecutor (<unidirectional association>)
	relation 3175810 --->
	  a role_name "processReaperExecutor" init_value "
        doPrivileged((PrivilegedAction<Executor>) () -> {

            ThreadGroup tg = Thread.currentThread().getThreadGroup();
            while (tg.getParent() != null) tg = tg.getParent();
            ThreadGroup systemThreadGroup = tg;

            ThreadFactory threadFactory = grimReaper -> {
                long stackSize = Boolean.getBoolean(\"jdk.lang.processReaperUseDefaultStackSize\") ? 0 : 32768;
                Thread t = new Thread(systemThreadGroup, grimReaper,\"process reaper\", stackSize);
                t.setDaemon(true);
                // A small attempt (probably futile) to avoid priority inversion
                t.setPriority(Thread.MAX_PRIORITY);
                return t;
            };

            return Executors.newCachedThreadPool(threadFactory);
        })" class_relation const_relation private
	    comment "
The thread pool of \"process reaper\" daemon threads.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3175810 // processReaperExecutor (<unidirectional association>)
	  b parent class_ref 503426 // Executor
      end

      operation 7140738 "UNIXProcess"
	package explicit_return_type ""
	nparams 8
	  param in name "prog" explicit_type "byte"
	multiplicity "[]"
	  param in name "argBlock" explicit_type "byte"
	multiplicity "[]"
	  param in name "argc" explicit_type "int"
	  param in name "envBlock" explicit_type "byte"
	multiplicity "[]"
	  param in name "envc" explicit_type "int"
	  param in name "dir" explicit_type "byte"
	multiplicity "[]"
	  param in name "fds" explicit_type "int"
	multiplicity "[]"
	  param in name "redirectErrorStream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0}[] ${p0}, final ${t1}[] ${p1}, final ${t2} ${p2}, final ${t3}[] ${p3}, final ${t4} ${p4}, final ${t5}[] ${p5}, final ${t6}[] ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7140866 "newFileDescriptor"
	class_operation package return_type class_ref 923778 // FileDescriptor
	nparams 1
	  param in name "fd" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7140994 "initStreams"
	package explicit_return_type "void"
	nparams 1
	  param inout name "fds" explicit_type "int"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141122 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141250 "getInputStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141378 "getErrorStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141506 "waitFor"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141634 "waitFor"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param inout name "unit" type class_ref 935938 // TimeUnit
	nexceptions 1
	  exception class_ref 129666 // InterruptedException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7141762 "exitValue"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7141890 "destroyProcess"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param inout name "force" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	
      end

      operation 7142018 "destroy"
	private explicit_return_type "void"
	nparams 1
	  param inout name "force" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7142146 "destroy"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 7142274 "destroyForcibly"
	public return_type class_ref 140930 // Process
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7142402 "isAlive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 7142530 "init"
	class_operation private explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	
      end

      extra_member 158338 "initialization"
	
	cpp "" ""
	java "  static {
        init();
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 941058 "ProcessPipeInputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3175938 // <generalisation>
	  relation 3175938 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3175938 // <generalisation>
	    b parent class_ref 921346 // BufferedInputStream
	end

	classrelation 3176066 // closeLock (<unidirectional association>)
	  relation 3176066 --->
	    a role_name "closeLock" init_value " new Object()" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3176066 // closeLock (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	operation 7142658 "ProcessPipeInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param in name "fd" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7142786 "drainInputStream"
	  class_operation private explicit_return_type "byte"
	  nparams 1
	    param inout name "in" type class_ref 146434 // InputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7142914 "processExited"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called by the process reaper thread when the process exits. "
	end

	operation 7143042 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 941186 "ProcessPipeOutputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3176194 // <generalisation>
	  relation 3176194 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3176194 // <generalisation>
	    b parent class_ref 921602 // BufferedOutputStream
	end

	operation 7143170 "ProcessPipeOutputStream"
	  package explicit_return_type ""
	  nparams 1
	    param in name "fd" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7143298 "processExited"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called by the process reaper thread when the process exits. "
	end
      end

      class 941314 "DeferredCloseProcessPipeInputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3176706 // <generalisation>
	  relation 3176706 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 3176706 // <generalisation>
	    b parent class_ref 921346 // BufferedInputStream
	end

	classrelation 3176834 // closeLock (<unidirectional association>)
	  relation 3176834 --->
	    a role_name "closeLock" init_value " new Object()" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3176834 // closeLock (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	attribute 1688706 "useCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 1688834 "closePending"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 7144706 "DeferredCloseProcessPipeInputStream"
	  package explicit_return_type ""
	  nparams 1
	    param in name "fd" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144834 "drainInputStream"
	  private return_type class_ref 146434 // InputStream
	  nparams 1
	    param inout name "in" type class_ref 146434 // InputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7144962 "processExited"
	  package explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called by the process reaper thread when the process exits. "
	end

	operation 7145090 "raise"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7145218 "lower"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 7145346 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 7145474 "read"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 7145602 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	  multiplicity "[]"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 7145730 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 7145858 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 7145986 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 941442 "UnknownError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an unknown but serious exception has occurred in the
Java Virtual Machine.

@author unascribed
@since   JDK1.0
"
      classrelation 3176962 // <generalisation>
	relation 3176962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3176962 // <generalisation>
	  b parent class_ref 934402 // VirtualMachineError
      end

      attribute 1688962 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2524784860676771849L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7146114 "UnknownError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnknownError</code> with no detail message.
"
      end

      operation 7146242 "UnknownError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnknownError</code> with the specified detail
message.

@param   s   the detail message.
"
      end
    end

    class 941570 "UnsatisfiedLinkError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown if the Java Virtual Machine cannot find an appropriate
native-language definition of a method declared <code>native</code>.

@author unascribed
@see     java.lang.Runtime
@since   JDK1.0
"
      classrelation 3177090 // <generalisation>
	relation 3177090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3177090 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1689090 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4019343241616879428L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7146370 "UnsatisfiedLinkError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnsatisfiedLinkError</code> with no detail message.
"
      end

      operation 7146498 "UnsatisfiedLinkError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnsatisfiedLinkError</code> with the
specified detail message.

@param   s   the detail message.
"
      end
    end

    class 941698 "UnsupportedClassVersionError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when the Java Virtual Machine attempts to read a class
file and determines that the major and minor version numbers
in the file are not supported.

@since   1.2
"
      classrelation 3177218 // <generalisation>
	relation 3177218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3177218 // <generalisation>
	  b parent class_ref 319746 // ClassFormatError
      end

      attribute 1689218 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7123279212883497373L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7146626 "UnsupportedClassVersionError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>UnsupportedClassVersionError</code>
with no detail message.
"
      end

      operation 7146754 "UnsupportedClassVersionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>UnsupportedClassVersionError</code> with
the specified detail message.

@param   s   the detail message.
"
      end
    end

    class 941826 "VerifyError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when the \"verifier\" detects that a class file,
though well formed, contains some sort of internal inconsistency
or security problem.

@author  unascribed
@since   JDK1.0
"
      classrelation 3177346 // <generalisation>
	relation 3177346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3177346 // <generalisation>
	  b parent class_ref 625794 // LinkageError
      end

      attribute 1689346 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7001962396098498785L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 7146882 "VerifyError"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>VerifyError</code> with no detail message.
"
      end

      operation 7147010 "VerifyError"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>VerifyError</code> with the specified detail message.

@param   s   the detail message.
"
      end
    end
  end

  deploymentview 128130 "lang"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 128130 "Runnable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 128770 // Runnable
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 128514 "Thread"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.WeakReference;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.PrivilegedAction;
import java.util.Map;
import java.util.HashMap;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.locks.LockSupport;
import sun.nio.ch.Interruptible;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 128642 // Thread
      end
      comment "Copyright (c) 1994, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 133122 "AutoCloseable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 146690 // AutoCloseable
      end
      comment "Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 153858 "Iterable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.Objects;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.Consumer;
${definition}"
      associated_elems
	class_ref 184322 // Iterable
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 154754 "Cloneable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 185858 // Cloneable
      end
      comment "Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 156802 "ClassValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ClassValue.ClassValueMap;
import java.util.WeakHashMap;
import java.lang.ref.WeakReference;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_elems
	class_ref 191234 // ClassValue
      end
      comment "Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 157314 "Comparable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_elems
	class_ref 194946 // Comparable
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 157570 "Throwable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 129922 // Throwable
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 157698 "Exception"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 132226 // Exception
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 158082 "Error"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 195842 // Error
      end
      comment "Copyright (c) 1995, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 204674 "RuntimeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 214786 // RuntimeException
      end
      comment "Copyright (c) 1995, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 259330 "ClassLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
import java.io.File;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.CodeSource;
import java.security.Policy;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.security.ProtectionDomain;
import java.security.cert.Certificate;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import java.util.Stack;
import java.util.Map;
import java.util.Vector;
import java.util.Hashtable;
import java.util.WeakHashMap;
import java.util.concurrent.ConcurrentHashMap;
import sun.misc.CompoundEnumeration;
import sun.misc.Resource;
import sun.misc.URLClassPath;
import sun.misc.VM;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import sun.reflect.misc.ReflectUtil;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 129026 // ClassLoader
	class_ref 320386 // SystemClassLoaderAction
      end
      comment "Copyright (c) 2013, 2015, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 297730 "CharSequence"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.NoSuchElementException;
import java.util.PrimitiveIterator;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.IntConsumer;
import java.util.stream.IntStream;
import java.util.stream.StreamSupport;
${definition}"
      associated_elems
	class_ref 429442 // CharSequence
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 306178 "Object"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 129538 // Object
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 367106 "Readable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 548354 // Readable
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 367490 "Appendable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 548866 // Appendable
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 624898 "UnsupportedOperationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 193538 // UnsupportedOperationException
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 625154 "IllegalStateException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 254850 // IllegalStateException
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 644994 "Character"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 577026 // Character
      end
      comment "Copyright (c) 2002, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 673666 "LinkageError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 625794 // LinkageError
      end
      comment "Copyright (c) 1995, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 673794 "IncompatibleClassChangeError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 928642 // IncompatibleClassChangeError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 673922 "AbstractMethodError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 928514 // AbstractMethodError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674050 "AbstractStringBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.FloatingDecimal;
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 928770 // AbstractStringBuilder
      end
      comment "Copyright (c) 2003, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674178 "ApplicationShutdownHooks"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_elems
	class_ref 928898 // ApplicationShutdownHooks
      end
      comment "Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674306 "ArithmeticException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929026 // ArithmeticException
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674434 "IndexOutOfBoundsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 881154 // IndexOutOfBoundsException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674562 "ArrayIndexOutOfBoundsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 742274 // ArrayIndexOutOfBoundsException
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674690 "ArrayStoreException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929154 // ArrayStoreException
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674818 "AssertionError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929282 // AssertionError
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 674946 "AssertionStatusDirectives"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 320258 // AssertionStatusDirectives
      end
      comment "Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675074 "Boolean"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 315010 // Boolean
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675202 "BootstrapMethodError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929410 // BootstrapMethodError
      end
      comment "Copyright (c) 2008, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675330 "Number"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 398210 // Number
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675458 "Byte"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 515842 // Byte
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675586 "CharacterData"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929666 // CharacterData
      end
      comment "Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675714 "CharacterData00"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929794 // CharacterData00
      end
      comment " This file was generated AUTOMATICALLY from a template file Fri Jul 21 22:11:13 PDT 2017

Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675842 "CharacterData01"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 929922 // CharacterData01
      end
      comment " This file was generated AUTOMATICALLY from a template file Fri Jul 21 22:11:13 PDT 2017

Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 675970 "CharacterData02"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 930050 // CharacterData02
      end
      comment " This file was generated AUTOMATICALLY from a template file Fri Jul 21 22:11:13 PDT 2017

Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 676098 "CharacterData0E"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 930178 // CharacterData0E
      end
      comment " This file was generated AUTOMATICALLY from a template file Fri Jul 21 22:11:13 PDT 2017

Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 676226 "CharacterDataLatin1"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 930306 // CharacterDataLatin1
      end
      comment " This file was generated AUTOMATICALLY from a template file Fri Jul 21 22:11:12 PDT 2017

Copyright (c) 2002, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 676354 "CharacterDataPrivateUse"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 930434 // CharacterDataPrivateUse
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 676482 "CharacterDataUndefined"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 930562 // CharacterDataUndefined
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 676610 "CharacterName"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.DataInputStream;
import java.io.InputStream;
import java.lang.ref.SoftReference;
import java.util.Arrays;
import java.util.zip.InflaterInputStream;
import java.security.AccessController;
import java.security.PrivilegedAction;
${definition}"
      associated_elems
	class_ref 930690 // CharacterName
      end
      comment "Copyright (c) 2010, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677122 "Class"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.Array;
import java.lang.reflect.GenericArrayType;
import java.lang.reflect.GenericDeclaration;
import java.lang.reflect.Member;
import java.lang.reflect.Field;
import java.lang.reflect.Executable;
import java.lang.reflect.Method;
import java.lang.reflect.Constructor;
import java.lang.reflect.Modifier;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.AnnotatedType;
import java.lang.ref.SoftReference;
import java.io.InputStream;
import java.io.ObjectStreamField;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.HashMap;
import java.util.Objects;
import sun.misc.Unsafe;
import sun.reflect.CallerSensitive;
import sun.reflect.ConstantPool;
import sun.reflect.Reflection;
import sun.reflect.ReflectionFactory;
import sun.reflect.generics.factory.CoreReflectionFactory;
import sun.reflect.generics.factory.GenericsFactory;
import sun.reflect.generics.repository.ClassRepository;
import sun.reflect.generics.repository.MethodRepository;
import sun.reflect.generics.repository.ConstructorRepository;
import sun.reflect.generics.scope.ClassScope;
import sun.security.util.SecurityConstants;
import java.lang.annotation.Annotation;
import java.lang.reflect.Proxy;
import sun.reflect.annotation.*;
import sun.reflect.misc.ReflectUtil;
${definition}"
      associated_elems
	class_ref 130818 // Class
      end
      comment "Copyright (c) 1994, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677250 "ClassCastException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 207490 // ClassCastException
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677378 "ClassCircularityError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 931970 // ClassCircularityError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677506 "ClassFormatError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 319746 // ClassFormatError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677634 "ClassLoaderHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
${definition}"
      associated_elems
	class_ref 932098 // ClassLoaderHelper
      end
      comment "Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677762 "ReflectiveOperationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 932226 // ReflectiveOperationException
      end
      comment "Copyright (c) 2009, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 677890 "ClassNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 169730 // ClassNotFoundException
      end
      comment "Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678018 "CloneNotSupportedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 129794 // CloneNotSupportedException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678146 "Compiler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 932354 // Compiler
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678274 "ConditionalSpecialCasing"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.BreakIterator;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Locale;
import sun.text.Normalizer;
${definition}"
      associated_elems
	class_ref 932482 // ConditionalSpecialCasing
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678402 "Deprecated"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
import static java.lang.annotation.ElementType.*;
${definition}"
      associated_elems
	class_ref 932738 // Deprecated
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678530 "Double"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.FloatingDecimal;
import sun.misc.FpUtils;
import sun.misc.DoubleConsts;
${definition}"
      associated_elems
	class_ref 377218 // Double
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678658 "Enum"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.ObjectStreamException;
${definition}"
      associated_elems
	class_ref 172034 // Enum
      end
      comment "Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678786 "EnumConstantNotPresentException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 932866 // EnumConstantNotPresentException
      end
      comment "Copyright (c) 2004, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 678914 "ExceptionInInitializerError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 625666 // ExceptionInInitializerError
      end
      comment "Copyright (c) 1996, 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679042 "Float"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.FloatingDecimal;
import sun.misc.FloatConsts;
import sun.misc.DoubleConsts;
${definition}"
      associated_elems
	class_ref 889218 // Float
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679170 "FunctionalInterface"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
${definition}"
      associated_elems
	class_ref 932994 // FunctionalInterface
      end
      comment "Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679298 "IllegalAccessError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 933122 // IllegalAccessError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679426 "IllegalAccessException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 321538 // IllegalAccessException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679554 "IllegalArgumentException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 187778 // IllegalArgumentException
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679682 "IllegalMonitorStateException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 933250 // IllegalMonitorStateException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679810 "IllegalThreadStateException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 933378 // IllegalThreadStateException
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 679938 "ThreadLocal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.*;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.Supplier;
${definition}"
      associated_elems
	class_ref 129282 // ThreadLocal
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680066 "InheritableThreadLocal"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.*;
${definition}"
      associated_elems
	class_ref 933506 // InheritableThreadLocal
      end
      comment "Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680194 "InstantiationError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 934018 // InstantiationError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680322 "InstantiationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 193282 // InstantiationException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680450 "Integer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 137602 // Integer
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680578 "VirtualMachineError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 934402 // VirtualMachineError
      end
      comment "Copyright (c) 1995, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680706 "InternalError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 934274 // InternalError
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680834 "InterruptedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 129666 // InterruptedException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 680962 "Long"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
import java.math.*;
${definition}"
      associated_elems
	class_ref 251778 // Long
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681090 "Math"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Random;
import sun.misc.FloatConsts;
import sun.misc.DoubleConsts;
${definition}"
      associated_elems
	class_ref 934658 // Math
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681218 "NegativeArraySizeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 935042 // NegativeArraySizeException
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681346 "NoClassDefFoundError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 935170 // NoClassDefFoundError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681474 "NoSuchFieldError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 935298 // NoSuchFieldError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681602 "NoSuchFieldException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 189954 // NoSuchFieldException
      end
      comment "Copyright (c) 1996, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681730 "NoSuchMethodError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 935426 // NoSuchMethodError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681858 "NoSuchMethodException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 742530 // NoSuchMethodException
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 681986 "NullPointerException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 521346 // NullPointerException
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682114 "NumberFormatException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 516098 // NumberFormatException
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682242 "OutOfMemoryError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 935554 // OutOfMemoryError
      end
      comment "Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682370 "Override"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
${definition}"
      associated_elems
	class_ref 935682 // Override
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682498 "Package"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.AnnotatedElement;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.StringTokenizer;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.net.MalformedURLException;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.jar.JarInputStream;
import java.util.jar.Manifest;
import java.util.jar.Attributes;
import java.util.jar.Attributes.Name;
import java.util.jar.JarException;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import sun.net.www.ParseUtil;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import java.lang.annotation.Annotation;
${definition}"
      associated_elems
	class_ref 320002 // Package
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682626 "Process"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.concurrent.TimeUnit;
${definition}"
      associated_elems
	class_ref 140930 // Process
      end
      comment "Copyright (c) 1995, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682754 "ProcessBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 936066 // ProcessBuilder
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 682882 "ProcessEnvironment"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 936706 // ProcessEnvironment
      end
      comment "Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.





















 We use APIs that access the standard Unix environ array, which
is defined by UNIX98 to look like:

   char **environ;

These are unsorted, case-sensitive, null-terminated arrays of bytes
of the form FOO=BAR\\000 which are usually encoded in the user's
default encoding (file.encoding is an excellent choice for
encoding/decoding these).  However, even though the user cannot
directly access the underlying byte representation, we take pains
to pass on the child the exact byte representation we inherit from
the parent process for any environment name or value not created by
Javaland.  So we keep track of all the byte representations.

Internally, we define the types Variable and Value that exhibit
String/byteArray duality.  The internal representation of the
environment then looks like a Map<Variable,Value>.  But we don't
expose this to the user -- we only provide a Map<String,String>
view, although we could also provide a Map<byte[],byte[]> view.

The non-private methods in this class are not for general use even
within this package.  Instead, they are the system-dependent parts
of the system-independent method of the same name.  Don't even
think of using this class unless your method's name appears below.

@author  Martin Buchholz
@since   1.5
"
    end

    artifact 683010 "ProcessImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.lang.ProcessBuilder.Redirect;
import java.lang.ProcessBuilder.Redirect;
${definition}"
      associated_elems
	class_ref 937858 // ProcessImpl
      end
      comment "Copyright (c) 2003, 2010, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683138 "Runtime"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.util.StringTokenizer;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
${definition}"
      associated_elems
	class_ref 937986 // Runtime
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683266 "RuntimePermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.StringTokenizer;
${definition}"
      associated_elems
	class_ref 130306 // RuntimePermission
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683394 "SafeVarargs"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
${definition}"
      associated_elems
	class_ref 938114 // SafeVarargs
      end
      comment "Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683522 "SecurityException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 171138 // SecurityException
      end
      comment "Copyright (c) 1995, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683650 "SecurityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
import java.io.FileDescriptor;
import java.io.File;
import java.io.FilePermission;
import java.awt.AWTPermission;
import java.util.PropertyPermission;
import java.lang.RuntimePermission;
import java.net.SocketPermission;
import java.net.NetPermission;
import java.util.Hashtable;
import java.net.InetAddress;
import java.lang.reflect.*;
import java.net.URL;
import sun.reflect.CallerSensitive;
import sun.security.util.SecurityConstants;
${definition}"
      associated_elems
	class_ref 938242 // SecurityManager
      end
      comment "Copyright (c) 1995, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683778 "Short"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 938370 // Short
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 683906 "Shutdown"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 938626 // Shutdown
      end
      comment "Copyright (c) 1999, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684034 "StackOverflowError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 938882 // StackOverflowError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684162 "StackTraceElement"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 130050 // StackTraceElement
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684290 "StrictMath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Random;
import sun.misc.DoubleConsts;
${definition}"
      associated_elems
	class_ref 939010 // StrictMath
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684418 "String"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ObjectStreamField;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Formatter;
import java.util.Locale;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
${definition}"
      associated_elems
	class_ref 128130 // String
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684546 "StringBuffer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_elems
	class_ref 166018 // StringBuffer
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684674 "StringBuilder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 173058 // StringBuilder
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684802 "StringCoding"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.UnsupportedEncodingException;
import java.lang.ref.SoftReference;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.CoderResult;
import java.nio.charset.CodingErrorAction;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Arrays;
import sun.misc.MessageUtils;
import sun.nio.cs.HistoricallyNamedCharset;
import sun.nio.cs.ArrayDecoder;
import sun.nio.cs.ArrayEncoder;
${definition}"
      associated_elems
	class_ref 939394 // StringCoding
      end
      comment "Copyright (c) 2000, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 684930 "StringIndexOutOfBoundsException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 552706 // StringIndexOutOfBoundsException
      end
      comment "Copyright (c) 1994, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685058 "SuppressWarnings"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.*;
import static java.lang.annotation.ElementType.*;
${definition}"
      associated_elems
	class_ref 939778 // SuppressWarnings
      end
      comment "Copyright (c) 2004, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685186 "System"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.*;
import java.lang.reflect.Executable;
import java.lang.annotation.Annotation;
import java.security.AccessControlContext;
import java.util.Properties;
import java.util.PropertyPermission;
import java.util.StringTokenizer;
import java.util.Map;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.AllPermission;
import java.nio.channels.Channel;
import java.nio.channels.spi.SelectorProvider;
import sun.nio.ch.Interruptible;
import sun.reflect.CallerSensitive;
import sun.reflect.Reflection;
import sun.security.util.SecurityConstants;
import sun.reflect.annotation.AnnotationType;
${definition}"
      associated_elems
	class_ref 939906 // System
      end
      comment "Copyright (c) 1994, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685314 "Terminator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.misc.Signal;
import sun.misc.SignalHandler;
${definition}"
      associated_elems
	class_ref 940162 // Terminator
      end
      comment "Copyright (c) 1999, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685442 "ThreadDeath"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 940290 // ThreadDeath
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685570 "ThreadGroup"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.PrintStream;
import java.util.Arrays;
import sun.misc.VM;
${definition}"
      associated_elems
	class_ref 128898 // ThreadGroup
      end
      comment "Copyright (c) 1995, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685698 "TypeNotPresentException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 940418 // TypeNotPresentException
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685826 "UNIXProcess"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.EnumSet;
import java.util.Locale;
import java.util.Set;
import java.util.concurrent.Executors;
import java.util.concurrent.Executor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import static java.security.AccessController.doPrivileged;
${definition}"
      associated_elems
	class_ref 940546 // UNIXProcess
      end
      comment "Copyright (c) 1995, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 685954 "UnknownError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 941442 // UnknownError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 686082 "UnsatisfiedLinkError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 941570 // UnsatisfiedLinkError
      end
      comment "Copyright (c) 1994, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 686210 "UnsupportedClassVersionError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 941698 // UnsupportedClassVersionError
      end
      comment "Copyright (c) 1998, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 686338 "VerifyError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 941826 // VerifyError
      end
      comment "Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 686466 "Void"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 146946 // Void
      end
      comment "Copyright (c) 1996, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 130050 // ref

  package_ref 130946 // reflect

  package_ref 157314 // annotation

  package_ref 181506 // instrument

  package_ref 181634 // invoke

  package_ref 181762 // management
end
