format 222
"interfaces" // jdk1.8::java::security::interfaces
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/security/interfaces/"
  java_package "java.security.interfaces"
  classview 175746 "interfaces"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1032322 "DSAKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to a DSA public or private key. DSA (Digital Signature
Algorithm) is defined in NIST's FIPS-186.

@see DSAParams
@see java.security.Key
@see java.security.Signature

@author Benjamin Renaud
@author Josh Bloch
"
      operation 8072706 "getParams"
	public return_type class_ref 1032450 // DSAParams
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the DSA-specific key parameters. These parameters are
never secret.

@return the DSA-specific key parameters.

@see DSAParams
"
      end
    end

    class 1032450 "DSAParams"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Interface to a DSA-specific set of key parameters, which defines a
DSA <em>key family</em>. DSA (Digital Signature Algorithm) is defined
in NIST's FIPS-186.

@see DSAKey
@see java.security.Key
@see java.security.Signature

@author Benjamin Renaud
@author Josh Bloch
"
      operation 8073090 "getP"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime, {@code p}.

@return the prime, {@code p}.
"
      end

      operation 8073218 "getQ"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subprime, {@code q}.

@return the subprime, {@code q}.
"
      end

      operation 8073346 "getG"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base, {@code g}.

@return the base, {@code g}.
"
      end
    end

    class 1032578 "DSAKeyPairGenerator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface to an object capable of generating DSA key pairs.

<p>The {@code initialize} methods may each be called any number
of times. If no {@code initialize} method is called on a
DSAKeyPairGenerator, the default is to generate 1024-bit keys, using
precomputed p, q and g parameters and an instance of SecureRandom as
the random bit source.

<p>Users wishing to indicate DSA-specific parameters, and to generate a key
pair suitable for use with the DSA algorithm typically

<ol>

<li>Get a key pair generator for the DSA algorithm by calling the
KeyPairGenerator {@code getInstance} method with \"DSA\"
as its argument.

<li>Initialize the generator by casting the result to a DSAKeyPairGenerator
and calling one of the
{@code initialize} methods from this DSAKeyPairGenerator interface.

<li>Generate a key pair by calling the {@code generateKeyPair}
method from the KeyPairGenerator class.

</ol>

<p>Note: it is not always necessary to do do algorithm-specific
initialization for a DSA key pair generator. That is, it is not always
necessary to call an {@code initialize} method in this interface.
Algorithm-independent initialization using the {@code initialize} method
in the KeyPairGenerator
interface is all that is needed when you accept defaults for algorithm-specific
parameters.

<p>Note: Some earlier implementations of this interface may not support
larger sizes of DSA parameters such as 2048 and 3072-bit.

@see java.security.KeyPairGenerator
"
      operation 8072834 "initialize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 1032450 // DSAParams
	  param inout name "random" type class_ref 753154 // SecureRandom
	nexceptions 1
	  exception class_ref 1017474 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator using the DSA family parameters
(p,q and g) and an optional SecureRandom bit source. If a
SecureRandom bit source is needed but not supplied, i.e. null, a
default SecureRandom instance will be used.

@param params the parameters to use to generate the keys.

@param random the random bit source to use to generate key bits;
can be null.

@exception InvalidParameterException if the {@code params}
value is invalid, null, or unsupported.
"
      end

      operation 8072962 "initialize"
	public explicit_return_type "void"
	nparams 3
	  param in name "modlen" explicit_type "int"
	  param inout name "genParams" explicit_type "boolean"
	  param inout name "random" type class_ref 753154 // SecureRandom
	nexceptions 1
	  exception class_ref 1017474 // InvalidParameterException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the key pair generator for a given modulus length
(instead of parameters), and an optional SecureRandom bit source.
If a SecureRandom bit source is needed but not supplied, i.e.
null, a default SecureRandom instance will be used.

<p>If {@code genParams} is true, this method generates new
p, q and g parameters. If it is false, the method uses precomputed
parameters for the modulus length requested. If there are no
precomputed parameters for that modulus length, an exception will be
thrown. It is guaranteed that there will always be
default parameters for modulus lengths of 512 and 1024 bits.

@param modlen the modulus length in bits. Valid values are any
multiple of 64 between 512 and 1024, inclusive, 2048, and 3072.

@param random the random bit source to use to generate key bits;
can be null.

@param genParams whether or not to generate new parameters for
the modulus length requested.

@exception InvalidParameterException if {@code modlen} is
invalid, or unsupported, or if {@code genParams} is false and there
are no precomputed parameters for the requested modulus length.
"
      end
    end

    class 1032706 "DSAPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The standard interface to a DSA private key. DSA (Digital Signature
Algorithm) is defined in NIST's FIPS-186.

@see java.security.Key
@see java.security.Signature
@see DSAKey
@see DSAPublicKey

@author Benjamin Renaud
"
      classrelation 3385090 // <generalisation>
	relation 3385090 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385090 // <generalisation>
	  b parent class_ref 1032322 // DSAKey
      end

      classrelation 3385218 // <generalisation>
	relation 3385218 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385218 // <generalisation>
	  b parent class_ref 767362 // PrivateKey
      end

      attribute 1872386 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 7776497482533790279L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Declare serialVersionUID to be compatible with JDK1.1

The class fingerprint that is set to indicate
serialization compatibility with a previous
version of the class.

"
      end

      operation 8073474 "getX"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the private key, {@code x}.

@return the value of the private key, {@code x}.
"
      end
    end

    class 1032834 "DSAPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to a DSA public key. DSA (Digital Signature Algorithm)
is defined in NIST's FIPS-186.

@see java.security.Key
@see java.security.Signature
@see DSAKey
@see DSAPrivateKey

@author Benjamin Renaud
"
      classrelation 3385346 // <generalisation>
	relation 3385346 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385346 // <generalisation>
	  b parent class_ref 1032322 // DSAKey
      end

      classrelation 3385474 // <generalisation>
	relation 3385474 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385474 // <generalisation>
	  b parent class_ref 765826 // PublicKey
      end

      attribute 1872514 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1234526332779022332L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Declare serialVersionUID to be compatible with JDK1.1

The class fingerprint that is set to indicate
serialization compatibility with a previous
version of the class.

"
      end

      operation 8073602 "getY"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the public key, {@code y}.

@return the value of the public key, {@code y}.
"
      end
    end

    class 1032962 "ECKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an elliptic curve (EC) key.

@author Valerie Peng

@since 1.5
"
      operation 8073730 "getParams"
	public return_type class_ref 1033090 // ECParameterSpec
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the domain parameters associated
with this key. The domain parameters are
either explicitly specified or implicitly
created during key generation.
@return the associated domain parameters.
"
      end
    end

    class 1033218 "ECPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an elliptic curve (EC) private key.

@author Valerie Peng


@see PrivateKey
@see ECKey

@since 1.5
"
      classrelation 3385602 // <generalisation>
	relation 3385602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385602 // <generalisation>
	  b parent class_ref 767362 // PrivateKey
      end

      classrelation 3385730 // <generalisation>
	relation 3385730 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385730 // <generalisation>
	  b parent class_ref 1032962 // ECKey
      end

      attribute 1872642 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -7896394956925609184L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The class fingerprint that is set to indicate
serialization compatibility.

"
      end

      operation 8073858 "getS"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private value S.
@return the private value S.
"
      end
    end

    class 1033346 "ECPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an elliptic curve (EC) public key.

@author Valerie Peng


@see PublicKey
@see ECKey
@see java.security.spec.ECPoint

@since 1.5
"
      classrelation 3385858 // <generalisation>
	relation 3385858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385858 // <generalisation>
	  b parent class_ref 765826 // PublicKey
      end

      classrelation 3385986 // <generalisation>
	relation 3385986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3385986 // <generalisation>
	  b parent class_ref 1032962 // ECKey
      end

      attribute 1872770 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -3314988629879632826L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The class fingerprint that is set to indicate
serialization compatibility.

"
      end

      operation 8073986 "getW"
	public return_type class_ref 1033474 // ECPoint
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public point W.
@return the public point W.
"
      end
    end

    class 1033602 "RSAKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an RSA public or private key.

@author Jan Luehe

@see RSAPublicKey
@see RSAPrivateKey

@since 1.3
"
      operation 8074114 "getModulus"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus.

@return the modulus
"
      end
    end

    class 1033730 "RSAMultiPrimePrivateCrtKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an RSA multi-prime private key, as defined in the
PKCS#1 v2.1, using the <i>Chinese Remainder Theorem</i>
(CRT) information values.

@author Valerie Peng


@see java.security.spec.RSAPrivateKeySpec
@see java.security.spec.RSAMultiPrimePrivateCrtKeySpec
@see RSAPrivateKey
@see RSAPrivateCrtKey

@since 1.4
"
      classrelation 3386370 // <generalisation>
	relation 3386370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386370 // <generalisation>
	  b parent class_ref 1033858 // RSAPrivateKey
      end

      attribute 1873026 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 618058533534628008L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type fingerprint that is set to indicate
serialization compatibility with a previous
version of the type.

"
      end

      operation 8074370 "getPublicExponent"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent.
"
      end

      operation 8074498 "getPrimeP"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP.
"
      end

      operation 8074626 "getPrimeQ"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ.
"
      end

      operation 8074754 "getPrimeExponentP"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP.
"
      end

      operation 8074882 "getPrimeExponentQ"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ.
"
      end

      operation 8075010 "getCrtCoefficient"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient.
"
      end

      operation 8075138 "getOtherPrimeInfo"
	public return_type class_ref 1033986 // RSAOtherPrimeInfo
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the otherPrimeInfo or null if there are only
two prime factors (p and q).

@return the otherPrimeInfo.
"
      end
    end

    class 1033858 "RSAPrivateKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an RSA private key.

@author Jan Luehe


@see RSAPrivateCrtKey
"
      classrelation 3386114 // <generalisation>
	relation 3386114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386114 // <generalisation>
	  b parent class_ref 767362 // PrivateKey
      end

      classrelation 3386242 // <generalisation>
	relation 3386242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386242 // <generalisation>
	  b parent class_ref 1033602 // RSAKey
      end

      attribute 1872898 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 5187144804936595022L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type fingerprint that is set to indicate
serialization compatibility with a previous
version of the type.

"
      end

      operation 8074242 "getPrivateExponent"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private exponent.

@return the private exponent
"
      end
    end

    class 1034114 "RSAPrivateCrtKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an RSA private key, as defined in the PKCS#1 standard,
using the <i>Chinese Remainder Theorem</i> (CRT) information values.

@author Jan Luehe


@see RSAPrivateKey
"
      classrelation 3386498 // <generalisation>
	relation 3386498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386498 // <generalisation>
	  b parent class_ref 1033858 // RSAPrivateKey
      end

      attribute 1873154 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -5682214253527700368L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type fingerprint that is set to indicate
serialization compatibility with a previous
version of the type.

"
      end

      operation 8075266 "getPublicExponent"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent
"
      end

      operation 8075394 "getPrimeP"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeP.

@return the primeP
"
      end

      operation 8075522 "getPrimeQ"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeQ.

@return the primeQ
"
      end

      operation 8075650 "getPrimeExponentP"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentP.

@return the primeExponentP
"
      end

      operation 8075778 "getPrimeExponentQ"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the primeExponentQ.

@return the primeExponentQ
"
      end

      operation 8075906 "getCrtCoefficient"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the crtCoefficient.

@return the crtCoefficient
"
      end
    end

    class 1034242 "RSAPublicKey"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface to an RSA public key.

@author Jan Luehe

"
      classrelation 3386626 // <generalisation>
	relation 3386626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386626 // <generalisation>
	  b parent class_ref 765826 // PublicKey
      end

      classrelation 3386754 // <generalisation>
	relation 3386754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3386754 // <generalisation>
	  b parent class_ref 1033602 // RSAKey
      end

      attribute 1873282 "serialVersionUID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -8727434096241101194L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type fingerprint that is set to indicate
serialization compatibility with a previous
version of the type.

"
      end

      operation 8076034 "getPublicExponent"
	public return_type class_ref 686338 // BigInteger
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent.

@return the public exponent
"
      end
    end
  end

  deploymentview 169474 "interfaces"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 765186 "DSAKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1032322 // DSAKey
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765314 "DSAKeyPairGenerator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
${definition}"
      associated_elems
	class_ref 1032578 // DSAKeyPairGenerator
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765442 "DSAParams"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1032450 // DSAParams
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765570 "DSAPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1032706 // DSAPrivateKey
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765698 "DSAPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1032834 // DSAPublicKey
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765826 "ECKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.spec.ECParameterSpec;
${definition}"
      associated_elems
	class_ref 1032962 // ECKey
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 765954 "ECPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.PrivateKey;
${definition}"
      associated_elems
	class_ref 1033218 // ECPrivateKey
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766082 "ECPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.PublicKey;
import java.security.spec.ECPoint;
${definition}"
      associated_elems
	class_ref 1033346 // ECPublicKey
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766210 "RSAKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1033602 // RSAKey
      end
      comment "Copyright (c) 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766338 "RSAPrivateKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1033858 // RSAPrivateKey
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766466 "RSAMultiPrimePrivateCrtKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.spec.RSAOtherPrimeInfo;
${definition}"
      associated_elems
	class_ref 1033730 // RSAMultiPrimePrivateCrtKey
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766594 "RSAPrivateCrtKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1034114 // RSAPrivateCrtKey
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 766722 "RSAPublicKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_elems
	class_ref 1034242 // RSAPublicKey
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
