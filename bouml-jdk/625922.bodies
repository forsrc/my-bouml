class NthIterator
!!!4004610.java!!!	NthIterator(inout source : DTMAxisIterator, in n : int)
        _source = source;
        _position = n;
!!!4004738.java!!!	setRestartable(inout isRestartable : boolean) : void
        _isRestartable = isRestartable;
        _source.setRestartable(isRestartable);
!!!4004866.java!!!	cloneIterator() : DTMAxisIterator
        try {
            final NthIterator clone = (NthIterator) super.clone();
            clone._source = _source.cloneIterator();    // resets source
            clone._isRestartable = false;
            return clone;
        }
        catch (CloneNotSupportedException e) {
            BasisLibrary.runTimeError(BasisLibrary.ITERATOR_CLONE_ERR,
                                      e.toString());
            return null;
        }
!!!4004994.java!!!	next() : int
        if (_ready) {
            _ready = false;
            return _source.getNodeByPosition(_position);
        }
        return DTMAxisIterator.END;
        /*
        if (_ready && _position > 0) {
            final int pos = _source.isReverse()
                                       ? _source.getLast() - _position + 1
                                       : _position;

            _ready = false;
            int node;
            while ((node = _source.next()) != DTMAxisIterator.END) {
                if (pos == _source.getPosition()) {
                    return node;
                }
            }
        }
        return DTMAxisIterator.END;
        */
!!!4005122.java!!!	setStartNode(in node : int) : DTMAxisIterator
        if (_isRestartable) {
            _source.setStartNode(node);
            _ready = true;
        }
        return this;
!!!4005250.java!!!	reset() : DTMAxisIterator
        _source.reset();
        _ready = true;
        return this;
!!!4005378.java!!!	getLast() : int
        return 1;
!!!4005506.java!!!	getPosition() : int
        return 1;
!!!4005634.java!!!	setMark() : void
        _source.setMark();
!!!4005762.java!!!	gotoMark() : void
        _source.gotoMark();
