class Collator
!!!8259970.java!!!	getInstance() : Collator
        return getInstance(Locale.getDefault());
!!!8260098.java!!!	getInstance(inout desiredLocale : Locale) : Collator
        SoftReference<Collator> ref = cache.get(desiredLocale);
        Collator result = (ref != null) ? ref.get() : null;
        if (result == null) {
            LocaleProviderAdapter adapter;
            adapter = LocaleProviderAdapter.getAdapter(CollatorProvider.class,
                                                       desiredLocale);
            CollatorProvider provider = adapter.getCollatorProvider();
            result = provider.getInstance(desiredLocale);
            if (result == null) {
                result = LocaleProviderAdapter.forJRE()
                             .getCollatorProvider().getInstance(desiredLocale);
            }
            while (true) {
                if (ref != null) {
                    // Remove the empty SoftReference if any
                    cache.remove(desiredLocale, ref);
                }
                ref = cache.putIfAbsent(desiredLocale, new SoftReference<>(result));
                if (ref == null) {
                    break;
                }
                Collator cachedColl = ref.get();
                if (cachedColl != null) {
                    result = cachedColl;
                    break;
                }
            }
        }
        return (Collator) result.clone(); // make the world safe
!!!8260354.java!!!	compare(inout o1 : Object, inout o2 : Object) : int
    return compare((String)o1, (String)o2);
!!!8260610.java!!!	equals(inout source : String, inout target : String) : boolean
        return (compare(source, target) == Collator.EQUAL);
!!!8260738.java!!!	getStrength() : int
        return strength;
!!!8260866.java!!!	setStrength(in newStrength : int) : void
        if ((newStrength != PRIMARY) &&
            (newStrength != SECONDARY) &&
            (newStrength != TERTIARY) &&
            (newStrength != IDENTICAL)) {
            throw new IllegalArgumentException("Incorrect comparison level.");
        }
        strength = newStrength;
!!!8260994.java!!!	getDecomposition() : int
        return decmp;
!!!8261122.java!!!	setDecomposition(in decompositionMode : int) : void
        if ((decompositionMode != NO_DECOMPOSITION) &&
            (decompositionMode != CANONICAL_DECOMPOSITION) &&
            (decompositionMode != FULL_DECOMPOSITION)) {
            throw new IllegalArgumentException("Wrong decomposition mode.");
        }
        decmp = decompositionMode;
!!!8261250.java!!!	getAvailableLocales() : Locale
        LocaleServiceProviderPool pool =
            LocaleServiceProviderPool.getPool(CollatorProvider.class);
        return pool.getAvailableLocales();
!!!8261378.java!!!	clone() : Object
        try {
            return (Collator)super.clone();
        } catch (CloneNotSupportedException e) {
            throw new InternalError(e);
        }
!!!8261506.java!!!	equals(inout that : Object) : boolean
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Collator other = (Collator) that;
        return ((strength == other.strength) &&
                (decmp == other.decmp));
!!!8261762.java!!!	Collator()
        strength = TERTIARY;
        decmp = CANONICAL_DECOMPOSITION;
