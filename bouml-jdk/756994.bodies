class C14nHelper
!!!5322626.java!!!	C14nHelper()
        // don't allow instantiation
!!!5322754.java!!!	namespaceIsRelative(inout namespace : Attr) : boolean
        return !namespaceIsAbsolute(namespace);
!!!5322882.java!!!	namespaceIsRelative(inout namespaceValue : String) : boolean
        return !namespaceIsAbsolute(namespaceValue);
!!!5323010.java!!!	namespaceIsAbsolute(inout namespace : Attr) : boolean
        return namespaceIsAbsolute(namespace.getValue());
!!!5323138.java!!!	namespaceIsAbsolute(inout namespaceValue : String) : boolean
        // assume empty namespaces are absolute
        if (namespaceValue.length() == 0) {
            return true;
        }
        return namespaceValue.indexOf(':') > 0;
!!!5323266.java!!!	assertNotRelativeNS(inout attr : Attr) : void
        if (attr == null) {
            return;
        }

        String nodeAttrName = attr.getNodeName();
        boolean definesDefaultNS = nodeAttrName.equals("xmlns");
        boolean definesNonDefaultNS = nodeAttrName.startsWith("xmlns:");

        if ((definesDefaultNS || definesNonDefaultNS) && namespaceIsRelative(attr)) {
            String parentName = attr.getOwnerElement().getTagName();
            String attrValue = attr.getValue();
            Object exArgs[] = { parentName, nodeAttrName, attrValue };

            throw new CanonicalizationException(
                "c14n.Canonicalizer.RelativeNamespace", exArgs
            );
        }
!!!5323394.java!!!	checkTraversability(inout document : Document) : void
        if (!document.isSupported("Traversal", "2.0")) {
            Object exArgs[] = {document.getImplementation().getClass().getName() };

            throw new CanonicalizationException(
                "c14n.Canonicalizer.TraversalNotSupported", exArgs
            );
        }
!!!5323522.java!!!	checkForRelativeNamespace(inout ctxNode : Element) : void
        if (ctxNode != null) {
            NamedNodeMap attributes = ctxNode.getAttributes();

            for (int i = 0; i < attributes.getLength(); i++) {
                C14nHelper.assertNotRelativeNS((Attr) attributes.item(i));
            }
        } else {
            throw new CanonicalizationException("Called checkForRelativeNamespace() on null");
        }
