class KeySpliterator
!!!9065474.java!!!	KeySpliterator(inout tab : ConcurrentHashMap::Node [[]], in size : int, in index : int, in limit : int, in est : long)
            super(tab, size, index, limit);
            this.est = est;
!!!9065602.java!!!	trySplit() : Spliterator
            int i, f, h;
            return (h = ((i = baseIndex) + (f = baseLimit)) >>> 1) <= i ? null :
                new KeySpliterator<K,V>(tab, baseSize, baseLimit = h,
                                        f, est >>>= 1);
!!!9065730.java!!!	forEachRemaining(inout action : Consumer) : void
            if (action == null) throw new NullPointerException();
            for (Node<K,V> p; (p = advance()) != null;)
                action.accept(p.key);
!!!9065858.java!!!	tryAdvance(inout action : Consumer) : boolean
            if (action == null) throw new NullPointerException();
            Node<K,V> p;
            if ((p = advance()) == null)
                return false;
            action.accept(p.key);
            return true;
!!!9065986.java!!!	estimateSize() : long
 return est;
!!!9066114.java!!!	characteristics() : int
            return Spliterator.DISTINCT | Spliterator.CONCURRENT |
                Spliterator.NONNULL;
