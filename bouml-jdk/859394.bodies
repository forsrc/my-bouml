class MenuItem
!!!6122498.java!!!	MenuItem()
        this("", null);
!!!6122626.java!!!	MenuItem(inout label : String)
        this(label, null);
!!!6122754.java!!!	MenuItem(inout label : String, inout s : MenuShortcut)
        this.label = label;
        this.shortcut = s;
!!!6122882.java!!!	constructComponentName() : String
        synchronized (MenuItem.class) {
            return base + nameCounter++;
        }
!!!6123010.java!!!	addNotify() : void
        synchronized (getTreeLock()) {
            if (peer == null)
                peer = Toolkit.getDefaultToolkit().createMenuItem(this);
        }
!!!6123138.java!!!	getLabel() : String
        return label;
!!!6123266.java!!!	setLabel(inout label : String) : void
        this.label = label;
        MenuItemPeer peer = (MenuItemPeer)this.peer;
        if (peer != null) {
            peer.setLabel(label);
        }
!!!6123394.java!!!	isEnabled() : boolean
        return enabled;
!!!6123522.java!!!	setEnabled(inout b : boolean) : void
        enable(b);
!!!6123650.java!!!	enable() : void
        enabled = true;
        MenuItemPeer peer = (MenuItemPeer)this.peer;
        if (peer != null) {
            peer.setEnabled(true);
        }
!!!6123778.java!!!	enable(inout b : boolean) : void
        if (b) {
            enable();
        } else {
            disable();
        }
!!!6123906.java!!!	disable() : void
        enabled = false;
        MenuItemPeer peer = (MenuItemPeer)this.peer;
        if (peer != null) {
            peer.setEnabled(false);
        }
!!!6124034.java!!!	getShortcut() : MenuShortcut
        return shortcut;
!!!6124162.java!!!	setShortcut(inout s : MenuShortcut) : void
        shortcut = s;
        MenuItemPeer peer = (MenuItemPeer)this.peer;
        if (peer != null) {
            peer.setLabel(label);
        }
!!!6124290.java!!!	deleteShortcut() : void
        shortcut = null;
        MenuItemPeer peer = (MenuItemPeer)this.peer;
        if (peer != null) {
            peer.setLabel(label);
        }
!!!6124418.java!!!	deleteShortcut(inout s : MenuShortcut) : void
        if (s.equals(shortcut)) {
            shortcut = null;
            MenuItemPeer peer = (MenuItemPeer)this.peer;
            if (peer != null) {
                peer.setLabel(label);
            }
        }
!!!6124546.java!!!	doMenuEvent(in when : long, in modifiers : int) : void
        Toolkit.getEventQueue().postEvent(
            new ActionEvent(this, ActionEvent.ACTION_PERFORMED,
                            getActionCommand(), when, modifiers));
!!!6124674.java!!!	isItemEnabled() : boolean
        // Fix For 6185151: Menu shortcuts of all menuitems within a menu
        // should be disabled when the menu itself is disabled
        if (!isEnabled()) {
            return false;
        }
        MenuContainer container = getParent_NoClientCode();
        do {
            if (!(container instanceof Menu)) {
                return true;
            }
            Menu menu = (Menu)container;
            if (!menu.isEnabled()) {
                return false;
            }
            container = menu.getParent_NoClientCode();
        } while (container != null);
        return true;
!!!6124802.java!!!	handleShortcut(inout e : KeyEvent) : boolean
        MenuShortcut s = new MenuShortcut(e.getKeyCode(),
                             (e.getModifiers() & InputEvent.SHIFT_MASK) > 0);
        MenuShortcut sE = new MenuShortcut(e.getExtendedKeyCode(),
                             (e.getModifiers() & InputEvent.SHIFT_MASK) > 0);
        // Fix For 6185151: Menu shortcuts of all menuitems within a menu
        // should be disabled when the menu itself is disabled
        if ((s.equals(shortcut) || sE.equals(shortcut)) && isItemEnabled()) {
            // MenuShortcut match -- issue an event on keydown.
            if (e.getID() == KeyEvent.KEY_PRESSED) {
                doMenuEvent(e.getWhen(), e.getModifiers());
            } else {
                // silently eat key release.
            }
            return true;
        }
        return false;
!!!6124930.java!!!	getShortcutMenuItem(inout s : MenuShortcut) : MenuItem
        return (s.equals(shortcut)) ? this : null;
!!!6125058.java!!!	enableEvents(in eventsToEnable : long) : void
        eventMask |= eventsToEnable;
        newEventsOnly = true;
!!!6125186.java!!!	disableEvents(in eventsToDisable : long) : void
        eventMask &= ~eventsToDisable;
!!!6125314.java!!!	setActionCommand(inout command : String) : void
        actionCommand = command;
!!!6125442.java!!!	getActionCommand() : String
        return getActionCommandImpl();
!!!6125570.java!!!	getActionCommandImpl() : String
        return (actionCommand == null? label : actionCommand);
!!!6125698.java!!!	addActionListener(inout l : ActionListener) : void
        if (l == null) {
            return;
        }
        actionListener = AWTEventMulticaster.add(actionListener, l);
        newEventsOnly = true;
!!!6125826.java!!!	removeActionListener(inout l : ActionListener) : void
        if (l == null) {
            return;
        }
        actionListener = AWTEventMulticaster.remove(actionListener, l);
!!!6125954.java!!!	getActionListeners() : ActionListener
        return getListeners(ActionListener.class);
!!!6126082.java!!!	getListeners(inout listenerType : Class) : T
        EventListener l = null;
        if  (listenerType == ActionListener.class) {
            l = actionListener;
        }
        return AWTEventMulticaster.getListeners(l, listenerType);
!!!6126210.java!!!	processEvent(inout e : AWTEvent) : void
        if (e instanceof ActionEvent) {
            processActionEvent((ActionEvent)e);
        }
!!!6126338.java!!!	eventEnabled(inout e : AWTEvent) : boolean
        if (e.id == ActionEvent.ACTION_PERFORMED) {
            if ((eventMask & AWTEvent.ACTION_EVENT_MASK) != 0 ||
                actionListener != null) {
                return true;
            }
            return false;
        }
        return super.eventEnabled(e);
!!!6126466.java!!!	processActionEvent(inout e : ActionEvent) : void
        ActionListener listener = actionListener;
        if (listener != null) {
            listener.actionPerformed(e);
        }
!!!6126594.java!!!	paramString() : String
        String str = ",label=" + label;
        if (shortcut != null) {
            str += ",shortcut=" + shortcut;
        }
        return super.paramString() + str;
!!!6126722.java!!!	writeObject(inout s : ObjectOutputStream) : void
      s.defaultWriteObject();

      AWTEventMulticaster.save(s, actionListenerK, actionListener);
      s.writeObject(null);
!!!6126850.java!!!	readObject(inout s : ObjectInputStream) : void
      // HeadlessException will be thrown from MenuComponent's readObject
      s.defaultReadObject();

      Object keyOrNull;
      while(null != (keyOrNull = s.readObject())) {
        String key = ((String)keyOrNull).intern();

        if (actionListenerK == key)
          addActionListener((ActionListener)(s.readObject()));

        else // skip value for unrecognized key
          s.readObject();
      }
!!!6127106.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleAWTMenuItem();
        }
        return accessibleContext;
