class DescendingSubMap
!!!8964866.java!!!	DescendingSubMap(inout m : TreeMap, inout fromStart : boolean, inout lo : K, inout loInclusive : boolean, inout toEnd : boolean, inout hi : K, inout hiInclusive : boolean)
            super(m, fromStart, lo, loInclusive, toEnd, hi, hiInclusive);
!!!8964994.java!!!	comparator() : Comparator
            return reverseComparator;
!!!8965122.java!!!	subMap(inout fromKey : K, inout fromInclusive : boolean, inout toKey : K, inout toInclusive : boolean) : NavigableMap
            if (!inRange(fromKey, fromInclusive))
                throw new IllegalArgumentException("fromKey out of range");
            if (!inRange(toKey, toInclusive))
                throw new IllegalArgumentException("toKey out of range");
            return new DescendingSubMap<>(m,
                                          false, toKey,   toInclusive,
                                          false, fromKey, fromInclusive);
!!!8965250.java!!!	headMap(inout toKey : K, inout inclusive : boolean) : NavigableMap
            if (!inRange(toKey, inclusive))
                throw new IllegalArgumentException("toKey out of range");
            return new DescendingSubMap<>(m,
                                          false, toKey, inclusive,
                                          toEnd, hi,    hiInclusive);
!!!8965378.java!!!	tailMap(inout fromKey : K, inout inclusive : boolean) : NavigableMap
            if (!inRange(fromKey, inclusive))
                throw new IllegalArgumentException("fromKey out of range");
            return new DescendingSubMap<>(m,
                                          fromStart, lo, loInclusive,
                                          false, fromKey, inclusive);
!!!8965506.java!!!	descendingMap() : NavigableMap
            NavigableMap<K,V> mv = descendingMapView;
            return (mv != null) ? mv :
                (descendingMapView =
                 new AscendingSubMap<>(m,
                                       fromStart, lo, loInclusive,
                                       toEnd,     hi, hiInclusive));
!!!8965634.java!!!	keyIterator() : Iterator
            return new DescendingSubMapKeyIterator(absHighest(), absLowFence());
!!!8965762.java!!!	keySpliterator() : Spliterator
            return new DescendingSubMapKeyIterator(absHighest(), absLowFence());
!!!8965890.java!!!	descendingKeyIterator() : Iterator
            return new SubMapKeyIterator(absLowest(), absHighFence());
!!!8966146.java!!!	entrySet() : Set
            EntrySetView es = entrySetView;
            return (es != null) ? es : (entrySetView = new DescendingEntrySetView());
!!!8966274.java!!!	subLowest() : Map::Entry
 return absHighest();
!!!8966402.java!!!	subHighest() : Map::Entry
 return absLowest();
!!!8966530.java!!!	subCeiling(inout key : K) : Map::Entry
 return absFloor(key);
!!!8966658.java!!!	subHigher(inout key : K) : Map::Entry
 return absLower(key);
!!!8966786.java!!!	subFloor(inout key : K) : Map::Entry
 return absCeiling(key);
!!!8966914.java!!!	subLower(inout key : K) : Map::Entry
 return absHigher(key);
