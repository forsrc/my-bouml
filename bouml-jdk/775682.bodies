class Expression
!!!5465346.java!!!	canTraverseOutsideSubtree() : boolean
    return false;
!!!5465474.java!!!	execute(inout xctxt : XPathContext, in currentNode : int) : XObject

    // For now, the current node is already pushed.
    return execute(xctxt);
!!!5465602.java!!!	execute(inout xctxt : XPathContext, in currentNode : int, inout dtm : DTM, in expType : int) : XObject

    // For now, the current node is already pushed.
    return execute(xctxt);
!!!5465858.java!!!	execute(inout xctxt : XPathContext, inout destructiveOK : boolean) : XObject
        return execute(xctxt);
!!!5465986.java!!!	num(inout xctxt : XPathContext) : double
    return execute(xctxt).num();
!!!5466114.java!!!	bool(inout xctxt : XPathContext) : boolean
    return execute(xctxt).bool();
!!!5466242.java!!!	xstr(inout xctxt : XPathContext) : XMLString
    return execute(xctxt).xstr();
!!!5466370.java!!!	isNodesetExpr() : boolean
    return false;
!!!5466498.java!!!	asNode(inout xctxt : XPathContext) : int
        DTMIterator iter = execute(xctxt).iter();
    return iter.nextNode();
!!!5466626.java!!!	asIterator(inout xctxt : XPathContext, in contextNode : int) : DTMIterator

    try
    {
      xctxt.pushCurrentNodeAndExpression(contextNode, contextNode);

      return execute(xctxt).iter();
    }
    finally
    {
      xctxt.popCurrentNodeAndExpression();
    }
!!!5466754.java!!!	asIteratorRaw(inout xctxt : XPathContext, in contextNode : int) : DTMIterator

    try
    {
      xctxt.pushCurrentNodeAndExpression(contextNode, contextNode);

      XNodeSet nodeset = (XNodeSet)execute(xctxt);
      return nodeset.iterRaw();
    }
    finally
    {
      xctxt.popCurrentNodeAndExpression();
    }
!!!5466882.java!!!	executeCharsToContentHandler(inout xctxt : XPathContext, inout handler : ContentHandler) : void

    XObject obj = execute(xctxt);

    obj.dispatchCharactersEvents(handler);
    obj.detach();
!!!5467010.java!!!	isStableNumber() : boolean
    return false;
!!!5467394.java!!!	isSameClass(inout expr : Expression) : boolean
        if(null == expr)
          return false;

        return (getClass() == expr.getClass());
!!!5467522.java!!!	warn(inout xctxt : XPathContext, inout msg : String, inout args : Object [[]]) : void

    java.lang.String fmsg = XSLMessages.createXPATHWarning(msg, args);

    if (null != xctxt)
    {
      ErrorListener eh = xctxt.getErrorListener();

      // TO DO: Need to get stylesheet Locator from here.
      eh.warning(new TransformerException(fmsg, xctxt.getSAXLocator()));
    }
!!!5467650.java!!!	assertion(inout b : boolean, inout msg : String) : void

    if (!b)
    {
      java.lang.String fMsg = XSLMessages.createXPATHMessage(
        XPATHErrorResources.ER_INCORRECT_PROGRAMMER_ASSERTION,
        new Object[]{ msg });

      throw new RuntimeException(fMsg);
    }
!!!5467778.java!!!	error(inout xctxt : XPathContext, inout msg : String, inout args : Object [[]]) : void

    java.lang.String fmsg = XSLMessages.createXPATHMessage(msg, args);

    if (null != xctxt)
    {
      ErrorListener eh = xctxt.getErrorListener();
      TransformerException te = new TransformerException(fmsg, this);

      eh.fatalError(te);
    }
!!!5467906.java!!!	getExpressionOwner() : ExpressionNode
        ExpressionNode parent = exprGetParent();
        while((null != parent) && (parent instanceof Expression))
                parent = parent.exprGetParent();
        return parent;
!!!5468034.java!!!	exprSetParent(inout n : ExpressionNode) : void
        assertion(n != this, "Can not parent an expression to itself!");
        m_parent = n;
!!!5468162.java!!!	exprGetParent() : ExpressionNode
        return m_parent;
!!!5468290.java!!!	exprAddChild(inout n : ExpressionNode, in i : int) : void
        assertion(false, "exprAddChild method not implemented!");
!!!5468418.java!!!	exprGetChild(in i : int) : ExpressionNode
        return null;
!!!5468546.java!!!	exprGetNumChildren() : int
        return 0;
!!!5468674.java!!!	getPublicId() : String
        if(null == m_parent)
          return null;
        return m_parent.getPublicId();
!!!5468802.java!!!	getSystemId() : String
        if(null == m_parent)
          return null;
        return m_parent.getSystemId();
!!!5468930.java!!!	getLineNumber() : int
        if(null == m_parent)
          return 0;
        return m_parent.getLineNumber();
!!!5469058.java!!!	getColumnNumber() : int
        if(null == m_parent)
          return 0;
        return m_parent.getColumnNumber();
