class GradientPaint
!!!6213378.java!!!	GradientPaint(in x1 : float, in y1 : float, inout color1 : Color, in x2 : float, in y2 : float, inout color2 : Color)
        if ((color1 == null) || (color2 == null)) {
            throw new NullPointerException("Colors cannot be null");
        }

        p1 = new Point2D.Float(x1, y1);
        p2 = new Point2D.Float(x2, y2);
        this.color1 = color1;
        this.color2 = color2;
!!!6213506.java!!!	GradientPaint(inout pt1 : Point2D, inout color1 : Color, inout pt2 : Point2D, inout color2 : Color)
        if ((color1 == null) || (color2 == null) ||
            (pt1 == null) || (pt2 == null)) {
            throw new NullPointerException("Colors and points should be non-null");
        }

        p1 = new Point2D.Float((float)pt1.getX(), (float)pt1.getY());
        p2 = new Point2D.Float((float)pt2.getX(), (float)pt2.getY());
        this.color1 = color1;
        this.color2 = color2;
!!!6213634.java!!!	GradientPaint(in x1 : float, in y1 : float, inout color1 : Color, in x2 : float, in y2 : float, inout color2 : Color, inout cyclic : boolean)
        this (x1, y1, color1, x2, y2, color2);
        this.cyclic = cyclic;
!!!6213762.java!!!	GradientPaint(inout pt1 : Point2D, inout color1 : Color, inout pt2 : Point2D, inout color2 : Color, inout cyclic : boolean)
        this (pt1, color1, pt2, color2);
        this.cyclic = cyclic;
!!!6213890.java!!!	getPoint1() : Point2D
        return new Point2D.Float(p1.x, p1.y);
!!!6214018.java!!!	getColor1() : Color
        return color1;
!!!6214146.java!!!	getPoint2() : Point2D
        return new Point2D.Float(p2.x, p2.y);
!!!6214274.java!!!	getColor2() : Color
        return color2;
!!!6214402.java!!!	isCyclic() : boolean
        return cyclic;
!!!6214530.java!!!	createContext(inout cm : ColorModel, inout deviceBounds : Rectangle, inout userBounds : Rectangle2D, inout xform : AffineTransform, inout hints : RenderingHints) : PaintContext

        return new GradientPaintContext(cm, p1, p2, xform,
                                        color1, color2, cyclic);
!!!6214658.java!!!	getTransparency() : int
        int a1 = color1.getAlpha();
        int a2 = color2.getAlpha();
        return (((a1 & a2) == 0xff) ? OPAQUE : TRANSLUCENT);
