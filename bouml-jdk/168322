format 222
"events" // jdk1.8::com::sun::org::apache::xerces::internal::dom::events
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/dom/events/"
  java_package "com.sun.org.apache.xerces.internal.dom.events"
  classview 161666 "events"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 665474 "EventImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EventImpl is an implementation of the basic \"generic\" DOM Level 2 Event
object. It may be subclassed by more specialized event sets.
Note that in our implementation, events are re-dispatchable (dispatch
clears the stopPropagation and preventDefault flags before it starts);
I believe that is the DOM's intent but I don't see an explicit statement
to this effect.

@xerces.internal

"
      classrelation 1815554 // <realization>
	relation 1815554 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1815554 // <realization>
	  b parent class_ref 647682 // Event
      end

      classrelation 1815682 // type (<unidirectional association>)
	relation 1815682 --->
	  a role_name "type" init_value "null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815682 // type (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1815810 // target (<unidirectional association>)
	relation 1815810 --->
	  a role_name "target" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815810 // target (<unidirectional association>)
	  b parent class_ref 647426 // EventTarget
      end

      classrelation 1815938 // currentTarget (<unidirectional association>)
	relation 1815938 --->
	  a role_name "currentTarget" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815938 // currentTarget (<unidirectional association>)
	  b parent class_ref 647426 // EventTarget
      end

      attribute 913154 "eventPhase"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913282 "initialized"
	public explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913410 "bubbles"
	public explicit_type "boolean"
	init_value "true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913538 "cancelable"
	public explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913666 "stopPropagation"
	public explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913794 "preventDefault"
	public explicit_type "boolean"
	init_value "false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 913922 "timeStamp"
	protected explicit_type "long"
	init_value " System.currentTimeMillis()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4337666 "initEvent"
	public explicit_return_type "void"
	nparams 3
	  param inout name "eventTypeArg" type class_ref 128130 // String
	  param inout name "canBubbleArg" explicit_type "boolean"
	  param inout name "cancelableArg" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The DOM doesn't deal with constructors, so instead we have an
initializer call to set most of the read-only fields. The
others are set, and reset, by the event subsystem during dispatch.
<p>
Note that init() -- and the subclass-specific initWhatever() calls --
may be reinvoked. At least one initialization is required; repeated
initializations overwrite the event with new values of their
parameters.
"
      end

      operation 4337794 "getBubbles"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return true iff this Event is of a class and type which supports
bubbling. In the generic case, this is True.
"
      end

      operation 4337922 "getCancelable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return true iff this Event is of a class and type which (a) has a
Default Behavior in this DOM, and (b)allows cancellation (blocking)
of that behavior. In the generic case, this is False.
"
      end

      operation 4338050 "getCurrentTarget"
	public return_type class_ref 647426 // EventTarget
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the Node (EventTarget) whose EventListeners are currently
being processed. During capture and bubble phases, this may not be
the target node. "
      end

      operation 4338178 "getEventPhase"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the current processing phase for this event --
CAPTURING_PHASE, AT_TARGET, BUBBLING_PHASE. (There may be
an internal DEFAULT_PHASE as well, but the users won't see it.) "
      end

      operation 4338306 "getTarget"
	public return_type class_ref 647426 // EventTarget
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the EventTarget (Node) to which the event was originally
dispatched.
"
      end

      operation 4338434 "getType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return event name as a string
"
      end

      operation 4338562 "getTimeStamp"
	public explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4338690 "stopPropagation"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Causes exit from in-progress event dispatch before the next
currentTarget is selected. Replaces the preventBubble() and
preventCapture() methods which were present in early drafts;
they may be reintroduced in future levels of the DOM. "
      end

      operation 4338818 "preventDefault"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Prevents any default processing built into the target node from
occurring.
"
      end
    end

    class 665602 "MutationEventImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@xerces.internal

"
      classrelation 1816066 // <generalisation>
	relation 1816066 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1816066 // <generalisation>
	  b parent class_ref 665474 // EventImpl
      end

      classrelation 1816322 // <realization>
	relation 1816322 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1816322 // <realization>
	  b parent class_ref 665730 // MutationEvent
      end

      classrelation 1816450 // relatedNode (<unidirectional association>)
	relation 1816450 --->
	  a role_name "relatedNode" init_value "null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816450 // relatedNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1816578 // prevValue (<unidirectional association>)
	relation 1816578 --->
	  a role_name "prevValue" init_value "null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816578 // prevValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1816706 // newValue (<unidirectional association>)
	relation 1816706 --->
	  a role_name "newValue" init_value "null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816706 // newValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1816834 // attrName (<unidirectional association>)
	relation 1816834 --->
	  a role_name "attrName" init_value "null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816834 // attrName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 914434 "attrChange"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " REVISIT: The DOM Level 2 PR has a bug: the init method should let this
 attribute be specified. Since it doesn't we have to give write access.
"
      end

      classrelation 1816962 // DOM_SUBTREE_MODIFIED (<unidirectional association>)
	relation 1816962 --->
	  a role_name "DOM_SUBTREE_MODIFIED" init_value " \"DOMSubtreeModified\"" class_relation const_relation public
	    comment " NON-DOM CONSTANTS: Storage efficiency, avoid risk of typos.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1816962 // DOM_SUBTREE_MODIFIED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817090 // DOM_NODE_INSERTED (<unidirectional association>)
	relation 1817090 --->
	  a role_name "DOM_NODE_INSERTED" init_value " \"DOMNodeInserted\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817090 // DOM_NODE_INSERTED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817218 // DOM_NODE_REMOVED (<unidirectional association>)
	relation 1817218 --->
	  a role_name "DOM_NODE_REMOVED" init_value " \"DOMNodeRemoved\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817218 // DOM_NODE_REMOVED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817346 // DOM_NODE_REMOVED_FROM_DOCUMENT (<unidirectional association>)
	relation 1817346 --->
	  a role_name "DOM_NODE_REMOVED_FROM_DOCUMENT" init_value " \"DOMNodeRemovedFromDocument\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817346 // DOM_NODE_REMOVED_FROM_DOCUMENT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817474 // DOM_NODE_INSERTED_INTO_DOCUMENT (<unidirectional association>)
	relation 1817474 --->
	  a role_name "DOM_NODE_INSERTED_INTO_DOCUMENT" init_value " \"DOMNodeInsertedIntoDocument\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817474 // DOM_NODE_INSERTED_INTO_DOCUMENT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817602 // DOM_ATTR_MODIFIED (<unidirectional association>)
	relation 1817602 --->
	  a role_name "DOM_ATTR_MODIFIED" init_value " \"DOMAttrModified\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817602 // DOM_ATTR_MODIFIED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1817730 // DOM_CHARACTER_DATA_MODIFIED (<unidirectional association>)
	relation 1817730 --->
	  a role_name "DOM_CHARACTER_DATA_MODIFIED" init_value " \"DOMCharacterDataModified\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1817730 // DOM_CHARACTER_DATA_MODIFIED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4339714 "getAttrName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the name of the Attr which
changed, for DOMAttrModified events.
Undefined for others.
"
      end

      operation 4339842 "getAttrChange"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <code>attrChange</code> indicates the type of change which triggered
the DOMAttrModified event. The values can be <code>MODIFICATION</code>
, <code>ADDITION</code>, or <code>REMOVAL</code>.
"
      end

      operation 4339970 "getNewValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the new string value of the Attr for DOMAttrModified events, or
of the CharacterData node for DOMCharDataModifed events.
Undefined for others.
"
      end

      operation 4340098 "getPrevValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the previous string value of the Attr for DOMAttrModified events, or
of the CharacterData node for DOMCharDataModifed events.
Undefined for others.
"
      end

      operation 4340226 "getRelatedNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return a Node related to this event, other than the target that the
node was dispatched to. For DOMNodeRemoved, it is the node which
was removed.
No other uses are currently defined.
"
      end

      operation 4340354 "initMutationEvent"
	public explicit_return_type "void"
	nparams 8
	  param inout name "typeArg" type class_ref 128130 // String
	  param inout name "canBubbleArg" explicit_type "boolean"
	  param inout name "cancelableArg" explicit_type "boolean"
	  param inout name "relatedNodeArg" type class_ref 317570 // Node
	  param inout name "prevValueArg" type class_ref 128130 // String
	  param inout name "newValueArg" type class_ref 128130 // String
	  param inout name "attrNameArg" type class_ref 128130 // String
	  param in name "attrChangeArg" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize a mutation event, or overwrite the event's current
settings with new values of the parameters.
"
      end
    end
  end

  deploymentview 154882 "events"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 459522 "EventImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.events.Event;
import org.w3c.dom.events.EventTarget;
${definition}"
      associated_elems
	class_ref 665474 // EventImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 459778 "MutationEventImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.events.MutationEvent;
${definition}"
      associated_elems
	class_ref 665602 // MutationEventImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
