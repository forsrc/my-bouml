class AtomicReference
!!!9274370.java!!!	AtomicReference(inout initialValue : V)
        value = initialValue;
!!!9274626.java!!!	get() : V
        return value;
!!!9274754.java!!!	set(inout newValue : V) : void
        value = newValue;
!!!9274882.java!!!	lazySet(inout newValue : V) : void
        unsafe.putOrderedObject(this, valueOffset, newValue);
!!!9275010.java!!!	compareAndSet(inout expect : V, inout update : V) : boolean
        return unsafe.compareAndSwapObject(this, valueOffset, expect, update);
!!!9275138.java!!!	weakCompareAndSet(inout expect : V, inout update : V) : boolean
        return unsafe.compareAndSwapObject(this, valueOffset, expect, update);
!!!9275266.java!!!	getAndSet(inout newValue : V) : V
        return (V)unsafe.getAndSetObject(this, valueOffset, newValue);
!!!9275394.java!!!	getAndUpdate(inout updateFunction : UnaryOperator) : V
        V prev, next;
        do {
            prev = get();
            next = updateFunction.apply(prev);
        } while (!compareAndSet(prev, next));
        return prev;
!!!9275522.java!!!	updateAndGet(inout updateFunction : UnaryOperator) : V
        V prev, next;
        do {
            prev = get();
            next = updateFunction.apply(prev);
        } while (!compareAndSet(prev, next));
        return next;
!!!9275650.java!!!	getAndAccumulate(inout x : V, inout accumulatorFunction : BinaryOperator) : V
        V prev, next;
        do {
            prev = get();
            next = accumulatorFunction.apply(prev, x);
        } while (!compareAndSet(prev, next));
        return prev;
!!!9275778.java!!!	accumulateAndGet(inout x : V, inout accumulatorFunction : BinaryOperator) : V
        V prev, next;
        do {
            prev = get();
            next = accumulatorFunction.apply(prev, x);
        } while (!compareAndSet(prev, next));
        return next;
!!!9275906.java!!!	toString() : String
        return String.valueOf(get());
