format 222
"auth" // jdk1.8::javax::security::auth
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/security/auth/"
  java_package "javax.security.auth"
  classview 152962 "auth"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 503042 "Subject"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> A {@code Subject} represents a grouping of related information
for a single entity, such as a person.
Such information includes the Subject's identities as well as
its security-related attributes
(passwords and cryptographic keys, for example).

<p> Subjects may potentially have multiple identities.
Each identity is represented as a {@code Principal}
within the {@code Subject}.  Principals simply bind names to a
{@code Subject}.  For example, a {@code Subject} that happens
to be a person, Alice, might have two Principals:
one which binds \"Alice Bar\", the name on her driver license,
to the {@code Subject}, and another which binds,
\"999-99-9999\", the number on her student identification card,
to the {@code Subject}.  Both Principals refer to the same
{@code Subject} even though each has a different name.

<p> A {@code Subject} may also own security-related attributes,
which are referred to as credentials.
Sensitive credentials that require special protection, such as
private cryptographic keys, are stored within a private credential
{@code Set}.  Credentials intended to be shared, such as
public key certificates or Kerberos server tickets are stored
within a public credential {@code Set}.  Different permissions
are required to access and modify the different credential Sets.

<p> To retrieve all the Principals associated with a {@code Subject},
invoke the {@code getPrincipals} method.  To retrieve
all the public or private credentials belonging to a {@code Subject},
invoke the {@code getPublicCredentials} method or
{@code getPrivateCredentials} method, respectively.
To modify the returned {@code Set} of Principals and credentials,
use the methods defined in the {@code Set} class.
For example:
<pre>
     Subject subject;
     Principal principal;
     Object credential;

     // add a Principal and credential to the Subject
     subject.getPrincipals().add(principal);
     subject.getPublicCredentials().add(credential);
</pre>

<p> This {@code Subject} class implements {@code Serializable}.
While the Principals associated with the {@code Subject} are serialized,
the credentials associated with the {@code Subject} are not.
Note that the {@code java.security.Principal} class
does not implement {@code Serializable}.  Therefore all concrete
{@code Principal} implementations associated with Subjects
must implement {@code Serializable}.

@see java.security.Principal
@see java.security.DomainCombiner
"
      classrelation 4009986 // <realization>
	relation 4009986 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4009986 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 2344322 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8308522755600156056L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4010114 // principals (<unidirectional association>)
	relation 4010114 --->
	  a role_name "principals" package
	    comment "
A {@code Set} that provides a view of all of this
Subject's Principals

<p>

@serial Each element in this set is a
         {@code java.security.Principal}.
         The set is a {@code Subject.SecureSet}.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Principal> ${name}${value};
"
	    classrelation_ref 4010114 // principals (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 4010242 // pubCredentials (<unidirectional association>)
	relation 4010242 --->
	  a role_name "pubCredentials" package
	    comment "
Sets that provide a view of all of this
Subject's Credentials

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 4010242 // pubCredentials (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 4010370 // privCredentials (<unidirectional association>)
	relation 4010370 --->
	  a role_name "privCredentials" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 4010370 // privCredentials (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      attribute 2344450 "readOnly"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Whether this Subject is read-only

@serial

"
      end

      attribute 2344578 "PRINCIPAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2344706 "PUB_CREDENTIAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2344834 "PRIV_CREDENTIAL_SET"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4010498 // NULL_PD_ARRAY (<unidirectional association>)
	relation 4010498 --->
	  a role_name "NULL_PD_ARRAY" multiplicity "[]" init_value " new ProtectionDomain[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4010498 // NULL_PD_ARRAY (<unidirectional association>)
	  b parent class_ref 319618 // ProtectionDomain
      end

      operation 10212866 "Subject"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a {@code Subject}
with an empty {@code Set} of Principals and empty
Sets of public and private credentials.

<p> The newly constructed Sets check whether this {@code Subject}
has been set read-only before permitting subsequent modifications.
The newly created Sets also prevent illegal modifications
by ensuring that callers have sufficient permissions.

<p> To modify the Principals Set, the caller must have
{@code AuthPermission(\"modifyPrincipals\")}.
To modify the public credential Set, the caller must have
{@code AuthPermission(\"modifyPublicCredentials\")}.
To modify the private credential Set, the caller must have
{@code AuthPermission(\"modifyPrivateCredentials\")}.
"
      end

      operation 10212994 "Subject"
	public explicit_return_type ""
	nparams 4
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "principals" type class_ref 192258 // Set
	  param inout name "pubCredentials" type class_ref 192258 // Set
	  param inout name "privCredentials" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<? extends Principal> ${p1}, ${t2}<?> ${p2}, ${t3}<?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an instance of a {@code Subject} with
Principals and credentials.

<p> The Principals and credentials from the specified Sets
are copied into newly constructed Sets.
These newly created Sets check whether this {@code Subject}
has been set read-only before permitting subsequent modifications.
The newly created Sets also prevent illegal modifications
by ensuring that callers have sufficient permissions.

<p> To modify the Principals Set, the caller must have
{@code AuthPermission(\"modifyPrincipals\")}.
To modify the public credential Set, the caller must have
{@code AuthPermission(\"modifyPublicCredentials\")}.
To modify the private credential Set, the caller must have
{@code AuthPermission(\"modifyPrivateCredentials\")}.
<p>

@param readOnly true if the {@code Subject} is to be read-only,
         and false otherwise. <p>

@param principals the {@code Set} of Principals
         to be associated with this {@code Subject}. <p>

@param pubCredentials the {@code Set} of public credentials
         to be associated with this {@code Subject}. <p>

@param privCredentials the {@code Set} of private credentials
         to be associated with this {@code Subject}.

@exception NullPointerException if the specified
         {@code principals}, {@code pubCredentials},
         or {@code privCredentials} are {@code null}.
"
      end

      operation 10213122 "setReadOnly"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set this {@code Subject} to be read-only.

<p> Modifications (additions and removals) to this Subject's
{@code Principal} {@code Set} and
credential Sets will be disallowed.
The {@code destroy} operation on this Subject's credentials will
still be permitted.

<p> Subsequent attempts to modify the Subject's {@code Principal}
and credential Sets will result in an
{@code IllegalStateException} being thrown.
Also, once a {@code Subject} is read-only,
it can not be reset to being writable again.

<p>

@exception SecurityException if the caller does not have permission
         to set this {@code Subject} to be read-only.
"
      end

      operation 10213250 "isReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query whether this {@code Subject} is read-only.

<p>

@return true if this {@code Subject} is read-only, false otherwise.
"
      end

      operation 10213378 "getSubject"
	class_operation public return_type class_ref 503042 // Subject
	nparams 1
	  param in name "acc" type class_ref 129154 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@code Subject} associated with the provided
{@code AccessControlContext}.

<p> The {@code AccessControlContext} may contain many
Subjects (from nested {@code doAs} calls).
In this situation, the most recent {@code Subject} associated
with the {@code AccessControlContext} is returned.

<p>

@param  acc the {@code AccessControlContext} from which to retrieve
         the {@code Subject}.

@return  the {@code Subject} associated with the provided
         {@code AccessControlContext}, or {@code null}
         if no {@code Subject} is associated
         with the provided {@code AccessControlContext}.

@exception SecurityException if the caller does not have permission
         to get the {@code Subject}. <p>

@exception NullPointerException if the provided
         {@code AccessControlContext} is {@code null}.
"
      end

      operation 10213506 "doAs"
	class_operation public explicit_return_type "T"
	nparams 2
	  param in name "subject" type class_ref 503042 // Subject
	  param in name "action" type class_ref 250114 // PrivilegedAction
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform work as a particular {@code Subject}.

<p> This method first retrieves the current Thread's
{@code AccessControlContext} via
{@code AccessController.getContext},
and then instantiates a new {@code AccessControlContext}
using the retrieved context along with a new
{@code SubjectDomainCombiner} (constructed using
the provided {@code Subject}).
Finally, this method invokes {@code AccessController.doPrivileged},
passing it the provided {@code PrivilegedAction},
as well as the newly constructed {@code AccessControlContext}.

<p>

@param subject the {@code Subject} that the specified
                 {@code action} will run as.  This parameter
                 may be {@code null}. <p>

@param <T> the type of the value returned by the PrivilegedAction's
                 {@code run} method.

@param action the code to be run as the specified
                 {@code Subject}. <p>

@return the value returned by the PrivilegedAction's
                 {@code run} method.

@exception NullPointerException if the {@code PrivilegedAction}
                 is {@code null}. <p>

@exception SecurityException if the caller does not have permission
                 to invoke this method.
"
      end

      operation 10213634 "doAs"
	class_operation public explicit_return_type "T"
	nparams 2
	  param in name "subject" type class_ref 503042 // Subject
	  param in name "action" type class_ref 320514 // PrivilegedExceptionAction
	nexceptions 1
	  exception class_ref 189826 // PrivilegedActionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform work as a particular {@code Subject}.

<p> This method first retrieves the current Thread's
{@code AccessControlContext} via
{@code AccessController.getContext},
and then instantiates a new {@code AccessControlContext}
using the retrieved context along with a new
{@code SubjectDomainCombiner} (constructed using
the provided {@code Subject}).
Finally, this method invokes {@code AccessController.doPrivileged},
passing it the provided {@code PrivilegedExceptionAction},
as well as the newly constructed {@code AccessControlContext}.

<p>

@param subject the {@code Subject} that the specified
                 {@code action} will run as.  This parameter
                 may be {@code null}. <p>

@param <T> the type of the value returned by the
                 PrivilegedExceptionAction's {@code run} method.

@param action the code to be run as the specified
                 {@code Subject}. <p>

@return the value returned by the
                 PrivilegedExceptionAction's {@code run} method.

@exception PrivilegedActionException if the
                 {@code PrivilegedExceptionAction.run}
                 method throws a checked exception. <p>

@exception NullPointerException if the specified
                 {@code PrivilegedExceptionAction} is
                 {@code null}. <p>

@exception SecurityException if the caller does not have permission
                 to invoke this method.
"
      end

      operation 10213762 "doAsPrivileged"
	class_operation public explicit_return_type "T"
	nparams 3
	  param in name "subject" type class_ref 503042 // Subject
	  param in name "action" type class_ref 250114 // PrivilegedAction
	  param in name "acc" type class_ref 129154 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1}<T> ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform privileged work as a particular {@code Subject}.

<p> This method behaves exactly as {@code Subject.doAs},
except that instead of retrieving the current Thread's
{@code AccessControlContext}, it uses the provided
{@code AccessControlContext}.  If the provided
{@code AccessControlContext} is {@code null},
this method instantiates a new {@code AccessControlContext}
with an empty collection of ProtectionDomains.

<p>

@param subject the {@code Subject} that the specified
                 {@code action} will run as.  This parameter
                 may be {@code null}. <p>

@param <T> the type of the value returned by the PrivilegedAction's
                 {@code run} method.

@param action the code to be run as the specified
                 {@code Subject}. <p>

@param acc the {@code AccessControlContext} to be tied to the
                 specified <i>subject</i> and <i>action</i>. <p>

@return the value returned by the PrivilegedAction's
                 {@code run} method.

@exception NullPointerException if the {@code PrivilegedAction}
                 is {@code null}. <p>

@exception SecurityException if the caller does not have permission
                 to invoke this method.
"
      end

      operation 10213890 "doAsPrivileged"
	class_operation public explicit_return_type "T"
	nparams 3
	  param in name "subject" type class_ref 503042 // Subject
	  param in name "action" type class_ref 320514 // PrivilegedExceptionAction
	  param in name "acc" type class_ref 129154 // AccessControlContext
	nexceptions 1
	  exception class_ref 189826 // PrivilegedActionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1}<T> ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform privileged work as a particular {@code Subject}.

<p> This method behaves exactly as {@code Subject.doAs},
except that instead of retrieving the current Thread's
{@code AccessControlContext}, it uses the provided
{@code AccessControlContext}.  If the provided
{@code AccessControlContext} is {@code null},
this method instantiates a new {@code AccessControlContext}
with an empty collection of ProtectionDomains.

<p>

@param subject the {@code Subject} that the specified
                 {@code action} will run as.  This parameter
                 may be {@code null}. <p>

@param <T> the type of the value returned by the
                 PrivilegedExceptionAction's {@code run} method.

@param action the code to be run as the specified
                 {@code Subject}. <p>

@param acc the {@code AccessControlContext} to be tied to the
                 specified <i>subject</i> and <i>action</i>. <p>

@return the value returned by the
                 PrivilegedExceptionAction's {@code run} method.

@exception PrivilegedActionException if the
                 {@code PrivilegedExceptionAction.run}
                 method throws a checked exception. <p>

@exception NullPointerException if the specified
                 {@code PrivilegedExceptionAction} is
                 {@code null}. <p>

@exception SecurityException if the caller does not have permission
                 to invoke this method.
"
      end

      operation 10214018 "createContext"
	class_operation private return_type class_ref 129154 // AccessControlContext
	nparams 2
	  param in name "subject" type class_ref 503042 // Subject
	  param in name "acc" type class_ref 129154 // AccessControlContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10214146 "getPrincipals"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Principal> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@code Set} of Principals associated with this
{@code Subject}.  Each {@code Principal} represents
an identity for this {@code Subject}.

<p> The returned {@code Set} is backed by this Subject's
internal {@code Principal} {@code Set}.  Any modification
to the returned {@code Set} affects the internal
{@code Principal} {@code Set} as well.

<p>

@return  The {@code Set} of Principals associated with this
         {@code Subject}.
"
      end

      operation 10214274 "getPrincipals"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Principal> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@code Set} of Principals associated with this
{@code Subject} that are instances or subclasses of the specified
{@code Class}.

<p> The returned {@code Set} is not backed by this Subject's
internal {@code Principal} {@code Set}.  A new
{@code Set} is created and returned for each method invocation.
Modifications to the returned {@code Set}
will not affect the internal {@code Principal} {@code Set}.

<p>

@param <T> the type of the class modeled by {@code c}

@param c the returned {@code Set} of Principals will all be
         instances of this class.

@return a {@code Set} of Principals that are instances of the
         specified {@code Class}.

@exception NullPointerException if the specified {@code Class}
                 is {@code null}.
"
      end

      operation 10214402 "getPublicCredentials"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@code Set} of public credentials held by this
{@code Subject}.

<p> The returned {@code Set} is backed by this Subject's
internal public Credential {@code Set}.  Any modification
to the returned {@code Set} affects the internal public
Credential {@code Set} as well.

<p>

@return  A {@code Set} of public credentials held by this
         {@code Subject}.
"
      end

      operation 10214530 "getPrivateCredentials"
	public return_type class_ref 192258 // Set
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@code Set} of private credentials held by this
{@code Subject}.

<p> The returned {@code Set} is backed by this Subject's
internal private Credential {@code Set}.  Any modification
to the returned {@code Set} affects the internal private
Credential {@code Set} as well.

<p> A caller requires permissions to access the Credentials
in the returned {@code Set}, or to modify the
{@code Set} itself.  A {@code SecurityException}
is thrown if the caller does not have the proper permissions.

<p> While iterating through the {@code Set},
a {@code SecurityException} is thrown
if the caller does not have permission to access a
particular Credential.  The {@code Iterator}
is nevertheless advanced to next element in the {@code Set}.

<p>

@return  A {@code Set} of private credentials held by this
         {@code Subject}.
"
      end

      operation 10214658 "getPublicCredentials"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@code Set} of public credentials associated with this
{@code Subject} that are instances or subclasses of the specified
{@code Class}.

<p> The returned {@code Set} is not backed by this Subject's
internal public Credential {@code Set}.  A new
{@code Set} is created and returned for each method invocation.
Modifications to the returned {@code Set}
will not affect the internal public Credential {@code Set}.

<p>

@param <T> the type of the class modeled by {@code c}

@param c the returned {@code Set} of public credentials will all be
         instances of this class.

@return a {@code Set} of public credentials that are instances
         of the  specified {@code Class}.

@exception NullPointerException if the specified {@code Class}
         is {@code null}.
"
      end

      operation 10214786 "getPrivateCredentials"
	public return_type class_ref 192258 // Set
	nparams 1
	  param inout name "c" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a {@code Set} of private credentials associated with this
{@code Subject} that are instances or subclasses of the specified
{@code Class}.

<p> The caller must have permission to access all of the
requested Credentials, or a {@code SecurityException}
will be thrown.

<p> The returned {@code Set} is not backed by this Subject's
internal private Credential {@code Set}.  A new
{@code Set} is created and returned for each method invocation.
Modifications to the returned {@code Set}
will not affect the internal private Credential {@code Set}.

<p>

@param <T> the type of the class modeled by {@code c}

@param c the returned {@code Set} of private credentials will all be
         instances of this class.

@return a {@code Set} of private credentials that are instances
         of the  specified {@code Class}.

@exception NullPointerException if the specified {@code Class}
         is {@code null}.
"
      end

      operation 10214914 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified Object with this {@code Subject}
for equality.  Returns true if the given object is also a Subject
and the two {@code Subject} instances are equivalent.
More formally, two {@code Subject} instances are
equal if their {@code Principal} and {@code Credential}
Sets are equal.

<p>

@param o Object to be compared for equality with this
         {@code Subject}.

@return true if the specified Object is equal to this
         {@code Subject}.

@exception SecurityException if the caller does not have permission
         to access the private credentials for this {@code Subject},
         or if the caller does not have permission to access the
         private credentials for the provided {@code Subject}.
"
      end

      operation 10215042 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the String representation of this {@code Subject}.

<p>

@return the String representation of this {@code Subject}.
"
      end

      operation 10215170 "toString"
	package return_type class_ref 128130 // String
	nparams 1
	  param inout name "includePrivateCredentials" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package private convenience method to print out the Subject
without firing off a security check when trying to access
the Private Credentials
"
      end

      operation 10215298 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hashcode for this {@code Subject}.

<p>

@return a hashcode for this {@code Subject}.

@exception SecurityException if the caller does not have permission
         to access this Subject's private credentials.
"
      end

      operation 10215426 "getCredHashCode"
	private explicit_return_type "int"
	nparams 1
	  param inout name "o" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get a credential's hashcode
"
      end

      operation 10215554 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oos" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes this object out to a stream (i.e., serializes it).
"
      end

      operation 10215682 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)
"
      end

      class 1242882 "SecureSet"
	visibility private 
	nformals 1
	formal name "E" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4010626 // <realization>
	  relation 4010626 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4010626 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	classrelation 4010754 // <realization>
	  relation 4010754 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4010754 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2344962 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 7911754171111800359L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4010882 // serialPersistentFields (<unidirectional association>)
	  relation 4010882 --->
	    a role_name "serialPersistentFields" multiplicity "[]" init_value " {
            new ObjectStreamField(\"this$0\", Subject.class),
            new ObjectStreamField(\"elements\", LinkedList.class),
            new ObjectStreamField(\"which\", int.class)
        }" class_relation const_relation private
	      comment "
@serialField this$0 Subject The outer Subject instance.
@serialField elements LinkedList The elements in this set.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 4010882 // serialPersistentFields (<unidirectional association>)
	    b parent class_ref 193154 // ObjectStreamField
	end

	classrelation 4011010 // subject (<unidirectional association>)
	  relation 4011010 --->
	    a role_name "subject" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4011010 // subject (<unidirectional association>)
	    b parent class_ref 503042 // Subject
	end

	classrelation 4011138 // elements (<unidirectional association>)
	  relation 4011138 --->
	    a role_name "elements" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<E> ${name}${value};
"
	      classrelation_ref 4011138 // elements (<unidirectional association>)
	    b parent class_ref 163074 // LinkedList
	end

	attribute 2345090 "which"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "@serial An integer identifying the type of objects contained
     in this set.  If {@code which == 1},
     this is a Principal set and all the elements are
     of type {@code java.security.Principal}.
     If {@code which == 2}, this is a public credential
     set and all the elements are of type {@code Object}.
     If {@code which == 3}, this is a private credential
     set and all the elements are of type {@code Object}.

"
	end

	operation 10215810 "SecureSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "subject" type class_ref 503042 // Subject
	    param in name "which" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10215938 "SecureSet"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "subject" type class_ref 503042 // Subject
	    param in name "which" explicit_type "int"
	    param inout name "set" type class_ref 192258 // Set
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<? extends E> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216066 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216194 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216322 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "E"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216450 "remove"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216578 "contains"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216706 "removeAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216834 "retainAll"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "c" type class_ref 184194 // Collection
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10216962 "clear"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10217090 "writeObject"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "oos" type class_ref 173442 // ObjectOutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Writes this object out to a stream (i.e., serializes it).

<p>

@serialData If this is a private credential set,
     a security check is performed to ensure that
     the caller has permission to access each credential
     in the set.  If the security check passes,
     the set is serialized.
"
	end

	operation 10217218 "readObject"
	  cpp_inline private explicit_return_type "void"
	  nparams 1
	    param inout name "ois" type class_ref 168962 // ObjectInputStream
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end

      class 1243010 "ClassSet"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 255618 // AbstractSet
	  rank 0 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4011266 // <realization>
	  relation 4011266 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4011266 // <realization>
	    b parent class_ref 255618 // AbstractSet
	end

	attribute 2345218 "which"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4011394 // c (<unidirectional association>)
	  relation 4011394 --->
	    a role_name "c" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 4011394 // c (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 4011522 // set (<unidirectional association>)
	  relation 4011522 --->
	    a role_name "set" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 4011522 // set (<unidirectional association>)
	    b parent class_ref 192258 // Set
	end

	operation 10217346 "ClassSet"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param in name "which" explicit_type "int"
	    param inout name "c" type class_ref 130818 // Class
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10217474 "populateSet"
	  cpp_inline private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end

	operation 10217602 "size"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10217730 "iterator"
	  cpp_inline public return_type class_ref 132994 // Iterator
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10217858 "add"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" explicit_type "T"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1243138 "AuthPermissionHolder"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4011650 // DO_AS_PERMISSION (<unidirectional association>)
	  relation 4011650 --->
	    a role_name "DO_AS_PERMISSION" init_value "
            new AuthPermission(\"doAs\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4011650 // DO_AS_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4011778 // DO_AS_PRIVILEGED_PERMISSION (<unidirectional association>)
	  relation 4011778 --->
	    a role_name "DO_AS_PRIVILEGED_PERMISSION" init_value "
            new AuthPermission(\"doAsPrivileged\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4011778 // DO_AS_PRIVILEGED_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4011906 // SET_READ_ONLY_PERMISSION (<unidirectional association>)
	  relation 4011906 --->
	    a role_name "SET_READ_ONLY_PERMISSION" init_value "
            new AuthPermission(\"setReadOnly\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4011906 // SET_READ_ONLY_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4012034 // GET_SUBJECT_PERMISSION (<unidirectional association>)
	  relation 4012034 --->
	    a role_name "GET_SUBJECT_PERMISSION" init_value "
            new AuthPermission(\"getSubject\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4012034 // GET_SUBJECT_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4012162 // MODIFY_PRINCIPALS_PERMISSION (<unidirectional association>)
	  relation 4012162 --->
	    a role_name "MODIFY_PRINCIPALS_PERMISSION" init_value "
            new AuthPermission(\"modifyPrincipals\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4012162 // MODIFY_PRINCIPALS_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4012290 // MODIFY_PUBLIC_CREDENTIALS_PERMISSION (<unidirectional association>)
	  relation 4012290 --->
	    a role_name "MODIFY_PUBLIC_CREDENTIALS_PERMISSION" init_value "
            new AuthPermission(\"modifyPublicCredentials\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4012290 // MODIFY_PUBLIC_CREDENTIALS_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end

	classrelation 4012418 // MODIFY_PRIVATE_CREDENTIALS_PERMISSION (<unidirectional association>)
	  relation 4012418 --->
	    a role_name "MODIFY_PRIVATE_CREDENTIALS_PERMISSION" init_value "
            new AuthPermission(\"modifyPrivateCredentials\")" class_relation const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4012418 // MODIFY_PRIVATE_CREDENTIALS_PERMISSION (<unidirectional association>)
	    b parent class_ref 1242242 // AuthPermission
	end
      end
    end

    class 510210 "SubjectDomainCombiner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@code SubjectDomainCombiner} updates ProtectionDomains
with Principals from the {@code Subject} associated with this
{@code SubjectDomainCombiner}.

"
      classrelation 998146 // <realization>
	relation 998146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 998146 // <realization>
	  b parent class_ref 510338 // DomainCombiner
      end

      classrelation 998274 // subject (<unidirectional association>)
	relation 998274 --->
	  a role_name "subject" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 998274 // subject (<unidirectional association>)
	  b parent class_ref 503042 // Subject
      end

      class 510466 "WeakKeyValueMap"
	visibility private 
	nformals 2
	formal name "K" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "V" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 192002 // WeakHashMap
	  rank 0 explicit_value ""
	actual class class_ref 192002 // WeakHashMap
	  rank 1 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 998786 // <realization>
	  relation 998786 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 998786 // <realization>
	    b parent class_ref 192002 // WeakHashMap
	end

	operation 3038466 "getValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 1
	    param inout name "key" explicit_type "K"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3038594 "putValue"
	  cpp_inline public explicit_return_type "V"
	  nparams 2
	    param inout name "key" explicit_type "K"
	    param inout name "value" explicit_type "V"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 998402 // cachedPDs (<unidirectional association>)
	relation 998402 --->
	  a role_name "cachedPDs" init_value "
                new WeakKeyValueMap<>()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ProtectionDomain, ProtectionDomain> ${name}${value};
"
	    classrelation_ref 998402 // cachedPDs (<unidirectional association>)
	  b parent class_ref 510466 // WeakKeyValueMap
      end

      classrelation 998530 // principalSet (<unidirectional association>)
	relation 998530 --->
	  a role_name "principalSet" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Principal> ${name}${value};
"
	    classrelation_ref 998530 // principalSet (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 998658 // principals (<unidirectional association>)
	relation 998658 --->
	  a role_name "principals" multiplicity "[]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 998658 // principals (<unidirectional association>)
	  b parent class_ref 510594 // Principal
      end

      attribute 628866 "debug"
	class_attribute const_attribute private explicit_type "sun.security.util.Debug"
	init_value "
        sun.security.util.Debug.getInstance(\"combiner\",
                                        \"\\t[SubjectDomainCombiner]\")"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 628994 "useJavaxPolicy"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "
        javax.security.auth.Policy.isCustomPolicySet(debug)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 629122 "allowCaching"
	class_attribute const_attribute private explicit_type "boolean"
	init_value "
                                        (useJavaxPolicy && cachePolicy())"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Relevant only when useJavaxPolicy is true
"
      end

      attribute 629250 "pdAccess"
	class_attribute const_attribute private explicit_type "JavaSecurityProtectionDomainAccess"
	init_value "
        SharedSecrets.getJavaSecurityProtectionDomainAccess()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 3037442 "SubjectDomainCombiner"
	public explicit_return_type ""
	nparams 1
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate the provided {@code Subject} with this
{@code SubjectDomainCombiner}.

<p>

@param subject the {@code Subject} to be associated with
         with this {@code SubjectDomainCombiner}.
"
      end

      operation 3037570 "getSubject"
	public return_type class_ref 503042 // Subject
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@code Subject} associated with this
{@code SubjectDomainCombiner}.

<p>

@return the {@code Subject} associated with this
         {@code SubjectDomainCombiner}, or {@code null}
         if no {@code Subject} is associated with this
         {@code SubjectDomainCombiner}.

@exception SecurityException if the caller does not have permission
         to get the {@code Subject} associated with this
         {@code SubjectDomainCombiner}.
"
      end

      operation 3037698 "combine"
	public return_type class_ref 319618 // ProtectionDomain
	nparams 2
	  param inout name "currentDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	  param inout name "assignedDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the relevant ProtectionDomains with the Principals
from the {@code Subject} associated with this
{@code SubjectDomainCombiner}.

<p> A new {@code ProtectionDomain} instance is created
for each {@code ProtectionDomain} in the
<i>currentDomains</i> array.  Each new {@code ProtectionDomain}
instance is created using the {@code CodeSource},
{@code Permission}s and {@code ClassLoader}
from the corresponding {@code ProtectionDomain} in
<i>currentDomains</i>, as well as with the Principals from
the {@code Subject} associated with this
{@code SubjectDomainCombiner}.

<p> All of the newly instantiated ProtectionDomains are
combined into a new array.  The ProtectionDomains from the
<i>assignedDomains</i> array are appended to this new array,
and the result is returned.

<p> Note that optimizations such as the removal of duplicate
ProtectionDomains may have occurred.
In addition, caching of ProtectionDomains may be permitted.

<p>

@param currentDomains the ProtectionDomains associated with the
         current execution Thread, up to the most recent
         privileged {@code ProtectionDomain}.
         The ProtectionDomains are are listed in order of execution,
         with the most recently executing {@code ProtectionDomain}
         residing at the beginning of the array. This parameter may
         be {@code null} if the current execution Thread
         has no associated ProtectionDomains.<p>

@param assignedDomains the ProtectionDomains inherited from the
         parent Thread, or the ProtectionDomains from the
         privileged <i>context</i>, if a call to
         AccessController.doPrivileged(..., <i>context</i>)
         had occurred  This parameter may be {@code null}
         if there were no ProtectionDomains inherited from the
         parent Thread, or from the privileged <i>context</i>.

@return a new array consisting of the updated ProtectionDomains,
         or {@code null}.
"
      end

      operation 3037826 "combineJavaxPolicy"
	private return_type class_ref 319618 // ProtectionDomain
	nparams 2
	  param inout name "currentDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	  param inout name "assignedDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the javax.security.auth.Policy implementation
"
      end

      operation 3037954 "optimize"
	class_operation private return_type class_ref 319618 // ProtectionDomain
	nparams 1
	  param inout name "domains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3038082 "cachePolicy"
	class_operation private explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3038210 "printInputDomains"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "currentDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	  param inout name "assignedDomains" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3038338 "printDomain"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param in name "pd" type class_ref 319618 // ProtectionDomain
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 830338 "Policy"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p> This is an abstract class for representing the system policy for
Subject-based authorization.  A subclass implementation
of this class provides a means to specify a Subject-based
access control {@code Policy}.

<p> A {@code Policy} object can be queried for the set of
Permissions granted to code running as a
{@code Principal} in the following manner:

<pre>
     policy = Policy.getPolicy();
     PermissionCollection perms = policy.getPermissions(subject,
                                                     codeSource);
</pre>

The {@code Policy} object consults the local policy and returns
and appropriate {@code Permissions} object with the
Permissions granted to the Principals associated with the
provided <i>subject</i>, and granted to the code specified
by the provided <i>codeSource</i>.

<p> A {@code Policy} contains the following information.
Note that this example only represents the syntax for the default
{@code Policy} implementation. Subclass implementations of this class
may implement alternative syntaxes and may retrieve the
{@code Policy} from any source such as files, databases,
or servers.

<p> Each entry in the {@code Policy} is represented as
a <b><i>grant</i></b> entry.  Each <b><i>grant</i></b> entry
specifies a codebase, code signers, and Principals triplet,
as well as the Permissions granted to that triplet.

<pre>
     grant CodeBase [\"URL\"], Signedby [\"signers\"],
           Principal [Principal_Class] \"Principal_Name\" {
         Permission Permission_Class [\"Target_Name\"]
                                     [, \"Permission_Actions\"]
                                     [, signedBy \"SignerName\"];
     };
</pre>

The CodeBase and Signedby components of the triplet name/value pairs
are optional.  If they are not present, then any any codebase will match,
and any signer (including unsigned code) will match.
For Example,

<pre>
     grant CodeBase \"foo.com\", Signedby \"foo\",
           Principal com.sun.security.auth.SolarisPrincipal \"duke\" {
         permission java.io.FilePermission \"/home/duke\", \"read, write\";
     };
</pre>

This <b><i>grant</i></b> entry specifies that code from \"foo.com\",
signed by \"foo', and running as a {@code SolarisPrincipal} with the
name, duke, has one {@code Permission}.  This {@code Permission}
permits the executing code to read and write files in the directory,
\"/home/duke\".

<p> To \"run\" as a particular {@code Principal},
code invokes the {@code Subject.doAs(subject, ...)} method.
After invoking that method, the code runs as all the Principals
associated with the specified {@code Subject}.
Note that this {@code Policy} (and the Permissions
granted in this {@code Policy}) only become effective
after the call to {@code Subject.doAs} has occurred.

<p> Multiple Principals may be listed within one <b><i>grant</i></b> entry.
All the Principals in the grant entry must be associated with
the {@code Subject} provided to {@code Subject.doAs}
for that {@code Subject} to be granted the specified Permissions.

<pre>
     grant Principal com.sun.security.auth.SolarisPrincipal \"duke\",
           Principal com.sun.security.auth.SolarisNumericUserPrincipal \"0\" {
         permission java.io.FilePermission \"/home/duke\", \"read, write\";
         permission java.net.SocketPermission \"duke.com\", \"connect\";
     };
</pre>

This entry grants any code running as both \"duke\" and \"0\"
permission to read and write files in duke's home directory,
as well as permission to make socket connections to \"duke.com\".

<p> Note that non Principal-based grant entries are not permitted
in this {@code Policy}.  Therefore, grant entries such as:

<pre>
     grant CodeBase \"foo.com\", Signedby \"foo\" {
         permission java.io.FilePermission \"/tmp/scratch\", \"read, write\";
     };
</pre>

are rejected.  Such permission must be listed in the
{@code java.security.Policy}.

<p> The default {@code Policy} implementation can be changed by
setting the value of the {@code auth.policy.provider} security property to
the fully qualified name of the desired {@code Policy} implementation class.

@deprecated  as of JDK version 1.4 -- Replaced by java.security.Policy.
             java.security.Policy has a method:
<pre>
     public PermissionCollection getPermissions
         (java.security.ProtectionDomain pd)

</pre>
and ProtectionDomain has a constructor:
<pre>
     public ProtectionDomain
         (CodeSource cs,
          PermissionCollection permissions,
          ClassLoader loader,
          Principal[] principals)
</pre>

These two APIs provide callers the means to query the
Policy for Principal-based Permission entries.

@see java.security.Security security properties
"
      classrelation 2842242 // policy (<unidirectional association>)
	relation 2842242 --->
	  a role_name "policy" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2842242 // policy (<unidirectional association>)
	  b parent class_ref 830338 // Policy
      end

      classrelation 2842370 // AUTH_POLICY (<unidirectional association>)
	relation 2842370 --->
	  a role_name "AUTH_POLICY" init_value "
        \"sun.security.provider.AuthPolicyFile\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2842370 // AUTH_POLICY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2842498 // acc (<unidirectional association>)
	relation 2842498 --->
	  a role_name "acc" init_value "
            java.security.AccessController.getContext()" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2842498 // acc (<unidirectional association>)
	  b parent class_ref 129154 // AccessControlContext
      end

      attribute 1294210 "isCustomPolicy"
	class_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " true if a custom (not AUTH_POLICY) system-wide policy object is set
"
      end

      operation 5966210 "Policy"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sole constructor.  (For invocation by subclass constructors, typically
implicit.)
"
      end

      operation 5966338 "getPolicy"
	class_operation public return_type class_ref 830338 // Policy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object.
This method first calls
{@code SecurityManager.checkPermission} with the
{@code AuthPermission(\"getPolicy\")} permission
to ensure the caller has permission to get the Policy object.

<p>

@return the installed Policy.  The return value cannot be
         {@code null}.

@exception java.lang.SecurityException if the current thread does not
     have permission to get the Policy object.

@see #setPolicy
"
      end

      operation 5966466 "getPolicyNoCheck"
	class_operation package return_type class_ref 830338 // Policy
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the installed Policy object, skipping the security check.

@return the installed Policy.

"
      end

      operation 5966594 "setPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "policy" type class_ref 830338 // Policy
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the system-wide Policy object. This method first calls
{@code SecurityManager.checkPermission} with the
{@code AuthPermission(\"setPolicy\")}
permission to ensure the caller has permission to set the Policy.

<p>

@param policy the new system Policy object.

@exception java.lang.SecurityException if the current thread does not
         have permission to set the Policy.

@see #getPolicy
"
      end

      operation 5966722 "isCustomPolicySet"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "debug" explicit_type "Debug"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a custom (not AUTH_POLICY) system-wide policy object
has been set or installed. This method is called by
SubjectDomainCombiner to provide backwards compatibility for
developers that provide their own javax.security.auth.Policy
implementations.

@return true if a custom (not AUTH_POLICY) system-wide policy object
has been set; false otherwise
"
      end

      operation 5966850 "getPermissions"
	abstract public return_type class_ref 257794 // PermissionCollection
	nparams 2
	  param inout name "subject" type class_ref 503042 // Subject
	  param inout name "cs" type class_ref 319874 // CodeSource
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the Permissions granted to the Principals associated with
the specified {@code CodeSource}.

<p>

@param subject the {@code Subject}
                 whose associated Principals,
                 in conjunction with the provided
                 {@code CodeSource}, determines the Permissions
                 returned by this method.  This parameter
                 may be {@code null}. <p>

@param cs the code specified by its {@code CodeSource}
                 that determines, in conjunction with the provided
                 {@code Subject}, the Permissions
                 returned by this method.  This parameter may be
                 {@code null}.

@return the Collection of Permissions granted to all the
                 {@code Subject} and code specified in
                 the provided <i>subject</i> and <i>cs</i>
                 parameters.
"
      end

      operation 5966978 "refresh"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Refresh and reload the Policy.

<p>This method causes this object to refresh/reload its current
Policy. This is implementation-dependent.
For example, if the Policy object is stored in
a file, calling {@code refresh} will cause the file to be re-read.

<p>

@exception SecurityException if the caller does not have permission
                         to refresh the Policy.
"
      end
    end

    class 1019266 "Destroyable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Objects such as credentials may optionally implement this interface
to provide the capability to destroy its contents.

@see javax.security.auth.Subject
"
      operation 7960194 "destroy"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1019394 // DestroyFailedException
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroy this {@code Object}.

<p> Sensitive information associated with this {@code Object}
is destroyed or cleared.  Subsequent calls to certain methods
on this {@code Object} will result in an
{@code IllegalStateException} being thrown.

<p>
The default implementation throws {@code DestroyFailedException}.

@exception DestroyFailedException if the destroy operation fails. <p>

@exception SecurityException if the caller does not have permission
         to destroy this {@code Object}.
"
      end

      operation 7960322 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent default java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if this {@code Object} has been destroyed.

<p>
The default implementation returns false.

@return true if this {@code Object} has been destroyed,
         false otherwise.
"
      end
    end

    class 1019394 "DestroyFailedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a {@code destroy} operation failed.

<p> This exception is thrown by credentials implementing
the {@code Destroyable} interface when the {@code destroy}
method fails.

"
      classrelation 4008706 // <generalisation>
	relation 4008706 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4008706 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2343682 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7790152857282749162L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10210050 "DestroyFailedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DestroyFailedException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10210178 "DestroyFailedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a DestroyFailedException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end

    class 1242242 "AuthPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for authentication permissions.
An AuthPermission contains a name
(also referred to as a \"target name\")
but no actions list; you either have the named permission
or you don't.

<p> The target name is the name of a security configuration parameter
(see below).  Currently the AuthPermission object is used to
guard access to the Policy, Subject, LoginContext,
and Configuration objects.

<p> The possible target names for an Authentication Permission are:

<pre>
     doAs -                  allow the caller to invoke the
                             {@code Subject.doAs} methods.

     doAsPrivileged -        allow the caller to invoke the
                             {@code Subject.doAsPrivileged} methods.

     getSubject -            allow for the retrieval of the
                             Subject(s) associated with the
                             current Thread.

     getSubjectFromDomainCombiner -  allow for the retrieval of the
                             Subject associated with the
                             a {@code SubjectDomainCombiner}.

     setReadOnly -           allow the caller to set a Subject
                             to be read-only.

     modifyPrincipals -      allow the caller to modify the {@code Set}
                             of Principals associated with a
                             {@code Subject}

     modifyPublicCredentials - allow the caller to modify the
                             {@code Set} of public credentials
                             associated with a {@code Subject}

     modifyPrivateCredentials - allow the caller to modify the
                             {@code Set} of private credentials
                             associated with a {@code Subject}

     refreshCredential -     allow code to invoke the {@code refresh}
                             method on a credential which implements
                             the {@code Refreshable} interface.

     destroyCredential -     allow code to invoke the {@code destroy}
                             method on a credential {@code object}
                             which implements the {@code Destroyable}
                             interface.

     createLoginContext.{name} -  allow code to instantiate a
                             {@code LoginContext} with the
                             specified <i>name</i>.  <i>name</i>
                             is used as the index into the installed login
                             {@code Configuration}
                             (that returned by
                             {@code Configuration.getConfiguration()}).
                             <i>name</i> can be wildcarded (set to '*')
                             to allow for any name.

     getLoginConfiguration - allow for the retrieval of the system-wide
                             login Configuration.

     createLoginConfiguration.{type} - allow code to obtain a Configuration
                             object via
                             {@code Configuration.getInstance}.

     setLoginConfiguration - allow for the setting of the system-wide
                             login Configuration.

     refreshLoginConfiguration - allow for the refreshing of the system-wide
                             login Configuration.
</pre>

<p> The following target name has been deprecated in favor of
{@code createLoginContext.{name}}.

<pre>
     createLoginContext -    allow code to instantiate a
                             {@code LoginContext}.
</pre>

<p> {@code javax.security.auth.Policy} has been
deprecated in favor of {@code java.security.Policy}.
Therefore, the following target names have also been deprecated:

<pre>
     getPolicy -             allow the caller to retrieve the system-wide
                             Subject-based access control policy.

     setPolicy -             allow the caller to set the system-wide
                             Subject-based access control policy.

     refreshPolicy -         allow the caller to refresh the system-wide
                             Subject-based access control policy.
</pre>

"
      classrelation 4008578 // <generalisation>
	relation 4008578 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4008578 // <generalisation>
	  b parent class_ref 257410 // BasicPermission
      end

      attribute 2343554 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5806031445061587174L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10209794 "AuthPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AuthPermission with the specified name.
The name is the symbolic name of the AuthPermission.

<p>

@param name the name of the AuthPermission

@throws NullPointerException if {@code name} is {@code null}.
@throws IllegalArgumentException if {@code name} is empty.
"
      end

      operation 10209922 "AuthPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AuthPermission object with the specified name.
The name is the symbolic name of the AuthPermission, and the
actions String is currently unused and should be null.

<p>

@param name the name of the AuthPermission <p>

@param actions should be null.

@throws NullPointerException if {@code name} is {@code null}.
@throws IllegalArgumentException if {@code name} is empty.
"
      end
    end

    class 1242370 "PrivateCredentialPermission"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to protect access to private Credentials
belonging to a particular {@code Subject}.  The {@code Subject}
is represented by a Set of Principals.

<p> The target name of this {@code Permission} specifies
a Credential class name, and a Set of Principals.
The only valid value for this Permission's actions is, \"read\".
The target name must abide by the following syntax:

<pre>
     CredentialClass {PrincipalClass \"PrincipalName\"}*
</pre>

For example, the following permission grants access to the
com.sun.PrivateCredential owned by Subjects which have
a com.sun.Principal with the name, \"duke\".  Note that although
this example, as well as all the examples below, do not contain
Codebase, SignedBy, or Principal information in the grant statement
(for simplicity reasons), actual policy configurations should
specify that information when appropriate.

<pre>

   grant {
     permission javax.security.auth.PrivateCredentialPermission
             \"com.sun.PrivateCredential com.sun.Principal \\\"duke\\\"\",
             \"read\";
   };
</pre>

If CredentialClass is \"*\", then access is granted to
all private Credentials belonging to the specified
{@code Subject}.
If \"PrincipalName\" is \"*\", then access is granted to the
specified Credential owned by any {@code Subject} that has the
specified {@code Principal} (the actual PrincipalName doesn't matter).
For example, the following grants access to the
a.b.Credential owned by any {@code Subject} that has
an a.b.Principal.

<pre>
   grant {
     permission javax.security.auth.PrivateCredentialPermission
             \"a.b.Credential a.b.Principal \"*\"\",
             \"read\";
   };
</pre>

If both the PrincipalClass and \"PrincipalName\" are \"*\",
then access is granted to the specified Credential owned by
any {@code Subject}.

<p> In addition, the PrincipalClass/PrincipalName pairing may be repeated:

<pre>
   grant {
     permission javax.security.auth.PrivateCredentialPermission
             \"a.b.Credential a.b.Principal \"duke\" c.d.Principal \"dukette\"\",
             \"read\";
   };
</pre>

The above grants access to the private Credential, \"a.b.Credential\",
belonging to a {@code Subject} with at least two associated Principals:
\"a.b.Principal\" with the name, \"duke\", and \"c.d.Principal\", with the name,
\"dukette\".

"
      classrelation 4008834 // <generalisation>
	relation 4008834 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4008834 // <generalisation>
	  b parent class_ref 257538 // Permission
      end

      attribute 2343810 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5284372143517237068L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 1242498 "CredOwner"
	visibility package 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4009474 // <realization>
	  relation 4009474 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4009474 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 2344066 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -5607449830436408266L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 4009602 // principalClass (<unidirectional association>)
	  relation 4009602 --->
	    a role_name "principalClass" package
	      comment "
@serial

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4009602 // principalClass (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 4009730 // principalName (<unidirectional association>)
	  relation 4009730 --->
	    a role_name "principalName" package
	      comment "
@serial

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 4009730 // principalName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 10211970 "CredOwner"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "principalClass" type class_ref 128130 // String
	    param inout name "principalName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10212098 "implies"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 10212226 "toString"
	  public return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 4008962 // EMPTY_PRINCIPALS (<unidirectional association>)
	relation 4008962 --->
	  a role_name "EMPTY_PRINCIPALS" multiplicity "[]" init_value " new CredOwner[0]" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4008962 // EMPTY_PRINCIPALS (<unidirectional association>)
	  b parent class_ref 1242498 // CredOwner
      end

      classrelation 4009090 // credentialClass (<unidirectional association>)
	relation 4009090 --->
	  a role_name "credentialClass" private
	    comment "
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4009090 // credentialClass (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4009218 // principals (<unidirectional association>)
	relation 4009218 --->
	  a role_name "principals" private
	    comment "
@serial The Principals associated with this permission.
         The set contains elements of type,
         {@code PrivateCredentialPermission.CredOwner}.

 ignored - kept around for compatibility"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Principal> ${name}${value};
"
	    classrelation_ref 4009218 // principals (<unidirectional association>)
	  b parent class_ref 192258 // Set
      end

      classrelation 4009346 // credOwners (<unidirectional association>)
	relation 4009346 --->
	  a role_name "credOwners" multiplicity "[]" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 4009346 // credOwners (<unidirectional association>)
	  b parent class_ref 1242498 // CredOwner
      end

      attribute 2343938 "testing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@serial

"
      end

      operation 10210306 "PrivateCredentialPermission"
	package explicit_return_type ""
	nparams 2
	  param inout name "credentialClass" type class_ref 128130 // String
	  param inout name "principals" type class_ref 192258 // Set
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<Principal> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new {@code PrivateCredentialPermission}
with the specified {@code credentialClass} and Principals.
"
      end

      operation 10210434 "PrivateCredentialPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "actions" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PrivateCredentialPermission}
with the specified {@code name}.  The {@code name}
specifies both a Credential class and a {@code Principal} Set.

<p>

@param name the name specifying the Credential class and
         {@code Principal} Set. <p>

@param actions the actions specifying that the Credential can be read.

@throws IllegalArgumentException if {@code name} does not conform
         to the correct syntax or if {@code actions} is not \"read\".
"
      end

      operation 10210562 "getCredentialClass"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Class name of the Credential associated with this
{@code PrivateCredentialPermission}.

<p>

@return the Class name of the Credential associated with this
         {@code PrivateCredentialPermission}.
"
      end

      operation 10210690 "getPrincipals"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Principal} classes and names
associated with this {@code PrivateCredentialPermission}.
The information is returned as a two-dimensional array (array[x][y]).
The 'x' value corresponds to the number of {@code Principal}
class and name pairs.  When (y==0), it corresponds to
the {@code Principal} class value, and when (y==1),
it corresponds to the {@code Principal} name value.
For example, array[0][0] corresponds to the class name of
the first {@code Principal} in the array.  array[0][1]
corresponds to the {@code Principal} name of the
first {@code Principal} in the array.

<p>

@return the {@code Principal} class and names associated
         with this {@code PrivateCredentialPermission}.
"
      end

      operation 10210818 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 257538 // Permission
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this {@code PrivateCredentialPermission} implies
the specified {@code Permission}.

<p>

This method returns true if:
<ul>
<li> <i>p</i> is an instanceof PrivateCredentialPermission and
<li> the target name for <i>p</i> is implied by this object's
         target name.  For example:
<pre>
 [* P1 \"duke\"] implies [a.b.Credential P1 \"duke\"].
 [C1 P1 \"duke\"] implies [C1 P1 \"duke\" P2 \"dukette\"].
 [C1 P2 \"dukette\"] implies [C1 P1 \"duke\" P2 \"dukette\"].
</pre>
</ul>

<p>

@param p the {@code Permission} to check against.

@return true if this {@code PrivateCredentialPermission} implies
the specified {@code Permission}, false if not.
"
      end

      operation 10210946 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks two {@code PrivateCredentialPermission} objects for
equality.  Checks that <i>obj</i> is a
{@code PrivateCredentialPermission},
and has the same credential class as this object,
as well as the same Principals as this object.
The order of the Principals in the respective Permission's
target names is not relevant.

<p>

@param obj the object we are testing for equality with this object.

@return true if obj is a {@code PrivateCredentialPermission},
         has the same credential class as this object,
         and has the same Principals as this object.
"
      end

      operation 10211074 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hash code value for this object.

@return a hash code value for this object.
"
      end

      operation 10211202 "getActions"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"canonical string representation\" of the actions.
This method always returns the String, \"read\".

<p>

@return the actions (always returns \"read\").
"
      end

      operation 10211330 "newPermissionCollection"
	public return_type class_ref 257794 // PermissionCollection
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a homogeneous collection of PrivateCredentialPermissions
in a {@code PermissionCollection}.
No such {@code PermissionCollection} is defined,
so this method always returns {@code null}.

<p>

@return null in all cases.
"
      end

      operation 10211458 "init"
	private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10211586 "impliesCredentialClass"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "thisC" type class_ref 128130 // String
	  param inout name "thatC" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10211714 "impliesPrincipalSet"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "thisP" type class_ref 1242498 // CredOwner
	multiplicity "[]"
	  param inout name "thatP" type class_ref 1242498 // CredOwner
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10211842 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads this object from a stream (i.e., deserializes it)
"
      end
    end

    class 1242626 "Refreshable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Objects such as credentials may optionally implement this
interface to provide the capability to refresh itself.
For example, a credential with a particular time-restricted lifespan
may implement this interface to allow callers to refresh the time period
for which it is valid.

@see javax.security.auth.Subject
"
      operation 10212354 "isCurrent"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if this {@code Object} is current.

<p>

@return true if this {@code Object} is currently current,
         false otherwise.
"
      end

      operation 10212482 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 1242754 // RefreshFailedException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update or extend the validity period for this
{@code Object}.

<p>

@exception SecurityException if the caller does not have permission
         to update or extend the validity period for this
         {@code Object}. <p>

@exception RefreshFailedException if the refresh attempt failed.
"
      end
    end

    class 1242754 "RefreshFailedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Signals that a {@code refresh} operation failed.

<p> This exception is thrown by credentials implementing
the {@code Refreshable} interface when the {@code refresh}
method fails.

"
      classrelation 4009858 // <generalisation>
	relation 4009858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4009858 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 2344194 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5058444488565265840L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 10212610 "RefreshFailedException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a RefreshFailedException with no detail message. A detail
message is a String that describes this particular exception.
"
      end

      operation 10212738 "RefreshFailedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a RefreshFailedException with the specified detail
message.  A detail message is a String that describes this particular
exception.

<p>

@param msg the detail message.
"
      end
    end
  end

  package_ref 158850 // spi

  package_ref 158978 // callback

  package_ref 159106 // login

  deploymentview 147458 "auth"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 333570 "SubjectDomainCombiner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.Permission;
import java.security.Permissions;
import java.security.PermissionCollection;
import java.security.Policy;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.ProtectionDomain;
import java.security.Security;
import java.util.Set;
import java.util.WeakHashMap;
import java.lang.ref.WeakReference;
import sun.misc.SharedSecrets;
import sun.misc.JavaSecurityProtectionDomainAccess;
${definition}"
      associated_elems
	class_ref 510210 // SubjectDomainCombiner
      end
      comment "Copyright (c) 1999, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 596866 "Policy"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.Security;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.util.Objects;
import sun.security.util.Debug;
${definition}"
      associated_elems
	class_ref 830338 // Policy
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 754306 "Destroyable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1019266 // Destroyable
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 903810 "AuthPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1242242 // AuthPermission
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 903938 "DestroyFailedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1019394 // DestroyFailedException
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 904066 "PrivateCredentialPermission"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.text.MessageFormat;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.Principal;
import sun.security.util.ResourcesMgr;
${definition}"
      associated_elems
	class_ref 1242370 // PrivateCredentialPermission
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 904194 "Refreshable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1242626 // Refreshable
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 904322 "RefreshFailedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1242754 // RefreshFailedException
      end
      comment "Copyright (c) 1999, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 904450 "Subject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
import java.io.*;
import java.lang.reflect.*;
import java.text.MessageFormat;
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.DomainCombiner;
import java.security.Permission;
import java.security.PermissionCollection;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.PrivilegedExceptionAction;
import java.security.PrivilegedActionException;
import java.security.ProtectionDomain;
import sun.security.util.ResourcesMgr;
${definition}"
      associated_elems
	class_ref 503042 // Subject
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 178306 // x500

  package_ref 178434 // kerberos
end
