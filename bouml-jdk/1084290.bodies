class Entry
!!!8817282.java!!!	Entry(in index : int)
                this.index = index;
!!!8817410.java!!!	getKey() : K
                checkIndexForEntryUse();
                return (K) unmaskNull(traversalTable[index]);
!!!8817538.java!!!	getValue() : V
                checkIndexForEntryUse();
                return (V) traversalTable[index+1];
!!!8817666.java!!!	setValue(inout value : V) : V
                checkIndexForEntryUse();
                V oldValue = (V) traversalTable[index+1];
                traversalTable[index+1] = value;
                // if shadowing, force into main table
                if (traversalTable != IdentityHashMap.this.table)
                    put((K) traversalTable[index], value);
                return oldValue;
!!!8817794.java!!!	equals(inout o : Object) : boolean
                if (index < 0)
                    return super.equals(o);

                if (!(o instanceof Map.Entry))
                    return false;
                Map.Entry<?,?> e = (Map.Entry<?,?>)o;
                return (e.getKey() == unmaskNull(traversalTable[index]) &&
                       e.getValue() == traversalTable[index+1]);
!!!8817922.java!!!	hashCode() : int
                if (lastReturnedIndex < 0)
                    return super.hashCode();

                return (System.identityHashCode(unmaskNull(traversalTable[index])) ^
                       System.identityHashCode(traversalTable[index+1]));
!!!8818050.java!!!	toString() : String
                if (index < 0)
                    return super.toString();

                return (unmaskNull(traversalTable[index]) + "="
                        + traversalTable[index+1]);
!!!8818178.java!!!	checkIndexForEntryUse() : void
                if (index < 0)
                    throw new IllegalStateException("Entry was removed");
