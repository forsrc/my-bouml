class CharArrayReader
!!!6850690.java!!!	CharArrayReader(inout buf : char [[]])
        this.buf = buf;
        this.pos = 0;
        this.count = buf.length;
!!!6850818.java!!!	CharArrayReader(inout buf : char [[]], in offset : int, in length : int)
        if ((offset < 0) || (offset > buf.length) || (length < 0) ||
            ((offset + length) < 0)) {
            throw new IllegalArgumentException();
        }
        this.buf = buf;
        this.pos = offset;
        this.count = Math.min(offset + length, buf.length);
        this.markedPos = offset;
!!!6850946.java!!!	ensureOpen() : void
        if (buf == null)
            throw new IOException("Stream closed");
!!!6851074.java!!!	read() : int
        synchronized (lock) {
            ensureOpen();
            if (pos >= count)
                return -1;
            else
                return buf[pos++];
        }
!!!6851202.java!!!	read(inout b : char [[]], in off : int, in len : int) : int
        synchronized (lock) {
            ensureOpen();
            if ((off < 0) || (off > b.length) || (len < 0) ||
                ((off + len) > b.length) || ((off + len) < 0)) {
                throw new IndexOutOfBoundsException();
            } else if (len == 0) {
                return 0;
            }

            if (pos >= count) {
                return -1;
            }
            if (pos + len > count) {
                len = count - pos;
            }
            if (len <= 0) {
                return 0;
            }
            System.arraycopy(buf, pos, b, off, len);
            pos += len;
            return len;
        }
!!!6851330.java!!!	skip(in n : long) : long
        synchronized (lock) {
            ensureOpen();
            if (pos + n > count) {
                n = count - pos;
            }
            if (n < 0) {
                return 0;
            }
            pos += n;
            return n;
        }
!!!6851458.java!!!	ready() : boolean
        synchronized (lock) {
            ensureOpen();
            return (count - pos) > 0;
        }
!!!6851586.java!!!	markSupported() : boolean
        return true;
!!!6851714.java!!!	mark(in readAheadLimit : int) : void
        synchronized (lock) {
            ensureOpen();
            markedPos = pos;
        }
!!!6851842.java!!!	reset() : void
        synchronized (lock) {
            ensureOpen();
            pos = markedPos;
        }
!!!6851970.java!!!	close() : void
        buf = null;
