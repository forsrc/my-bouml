format 222
"metadata" // jdk1.8::javax::imageio::metadata
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/imageio/metadata/"
  java_package "javax.imageio.metadata"
  classview 144002 "metadata"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 313730 "IIOMetadata"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract class to be extended by objects that represent metadata
(non-image data) associated with images and streams.  Plug-ins
represent metadata using opaque, plug-in specific objects.  These
objects, however, provide the ability to access their internal
information as a tree of <code>IIOMetadataNode</code> objects that
support the XML DOM interfaces as well as additional interfaces for
storing non-textual data and retrieving information about legal
data values.  The format of such trees is plug-in dependent, but
plug-ins may choose to support a plug-in neutral format described
below.  A single plug-in may support multiple metadata formats,
whose names maybe determined by calling
<code>getMetadataFormatNames</code>.  The plug-in may also support
a single special format, referred to as the \"native\" format, which
is designed to encode its metadata losslessly.  This format will
typically be designed specifically to work with a specific file
format, so that images may be loaded and saved in the same format
with no loss of metadata, but may be less useful for transferring
metadata between an <code>ImageReader</code> and an
<code>ImageWriter</code> for different image formats.  To convert
between two native formats as losslessly as the image file formats
will allow, an <code>ImageTranscoder</code> object must be used.

@see javax.imageio.ImageReader#getImageMetadata
@see javax.imageio.ImageReader#getStreamMetadata
@see javax.imageio.ImageReader#readAll
@see javax.imageio.ImageWriter#getDefaultStreamMetadata
@see javax.imageio.ImageWriter#getDefaultImageMetadata
@see javax.imageio.ImageWriter#write
@see javax.imageio.ImageWriter#convertImageMetadata
@see javax.imageio.ImageWriter#convertStreamMetadata
@see javax.imageio.IIOImage
@see javax.imageio.ImageTranscoder

"
      attribute 361090 "standardFormatSupported"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A boolean indicating whether the concrete subclass supports the
standard metadata format, set via the constructor.

"
      end

      classrelation 532226 // nativeMetadataFormatName (<unidirectional association>)
	relation 532226 --->
	  a role_name "nativeMetadataFormatName" init_value " null" protected
	    comment "
The name of the native metadata format for this object,
initialized to <code>null</code> and set via the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 532226 // nativeMetadataFormatName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 532354 // nativeMetadataFormatClassName (<unidirectional association>)
	relation 532354 --->
	  a role_name "nativeMetadataFormatClassName" init_value " null" protected
	    comment "
The name of the class implementing <code>IIOMetadataFormat</code>
and representing the native metadata format, initialized to
<code>null</code> and set via the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 532354 // nativeMetadataFormatClassName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 532482 // extraMetadataFormatNames (<unidirectional association>)
	relation 532482 --->
	  a role_name "extraMetadataFormatNames" multiplicity "[]" init_value " null" protected
	    comment "
An array of names of formats, other than the standard and
native formats, that are supported by this plug-in,
initialized to <code>null</code> and set via the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 532482 // extraMetadataFormatNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 532610 // extraMetadataFormatClassNames (<unidirectional association>)
	relation 532610 --->
	  a role_name "extraMetadataFormatClassNames" multiplicity "[]" init_value " null" protected
	    comment "
An array of names of classes implementing <code>IIOMetadataFormat</code>
and representing the metadata formats, other than the standard and
native formats, that are supported by this plug-in,
initialized to <code>null</code> and set via the constructor.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 532610 // extraMetadataFormatClassNames (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 532738 // defaultController (<unidirectional association>)
	relation 532738 --->
	  a role_name "defaultController" init_value " null" protected
	    comment "
An <code>IIOMetadataController</code> that is suggested for use
as the controller for this <code>IIOMetadata</code> object.  It
may be retrieved via <code>getDefaultController</code>.  To
install the default controller, call
<code>setController(getDefaultController())</code>.  This
instance variable should be set by subclasses that choose to
provide their own default controller, usually a GUI, for
setting parameters.

@see IIOMetadataController
@see #getDefaultController

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 532738 // defaultController (<unidirectional association>)
	  b parent class_ref 317442 // IIOMetadataController
      end

      classrelation 532866 // controller (<unidirectional association>)
	relation 532866 --->
	  a role_name "controller" init_value " null" protected
	    comment "
The <code>IIOMetadataController</code> that will be
used to provide settings for this <code>IIOMetadata</code>
object when the <code>activateController</code> method
is called.  This value overrides any default controller,
even when <code>null</code>.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #hasController()
@see #activateController()

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 532866 // controller (<unidirectional association>)
	  b parent class_ref 317442 // IIOMetadataController
      end

      operation 1703682 "IIOMetadata"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <code>IIOMetadata</code> object.  The
subclass is responsible for supplying values for all protected
instance variables that will allow any non-overridden default
implementations of methods to satisfy their contracts.  For example,
<code>extraMetadataFormatNames</code> should not have length 0.
"
      end

      operation 1703810 "IIOMetadata"
	protected explicit_return_type ""
	nparams 5
	  param inout name "standardMetadataFormatSupported" explicit_type "boolean"
	  param inout name "nativeMetadataFormatName" type class_ref 128130 // String
	  param inout name "nativeMetadataFormatClassName" type class_ref 128130 // String
	  param inout name "extraMetadataFormatNames" type class_ref 128130 // String
	multiplicity "[]"
	  param inout name "extraMetadataFormatClassNames" type class_ref 128130 // String
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOMetadata</code> object with the given
format names and format class names, as well as a boolean
indicating whether the standard format is supported.

<p> This constructor does not attempt to check the class names
for validity.  Invalid class names may cause exceptions in
subsequent calls to <code>getMetadataFormat</code>.

@param standardMetadataFormatSupported <code>true</code> if
this object can return or accept a DOM tree using the standard
metadata format.
@param nativeMetadataFormatName the name of the native metadata
format, as a <code>String</code>, or <code>null</code> if there
is no native format.
@param nativeMetadataFormatClassName the name of the class of
the native metadata format, or <code>null</code> if there is
no native format.
@param extraMetadataFormatNames an array of <code>String</code>s
indicating additional formats supported by this object, or
<code>null</code> if there are none.
@param extraMetadataFormatClassNames an array of <code>String</code>s
indicating the class names of any additional formats supported by
this object, or <code>null</code> if there are none.

@exception IllegalArgumentException if
<code>extraMetadataFormatNames</code> has length 0.
@exception IllegalArgumentException if
<code>extraMetadataFormatNames</code> and
<code>extraMetadataFormatClassNames</code> are neither both
<code>null</code>, nor of the same length.
"
      end

      operation 1703938 "isStandardMetadataFormatSupported"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the standard metadata format is
supported by <code>getMetadataFormat</code>,
<code>getAsTree</code>, <code>setFromTree</code>, and
<code>mergeTree</code>.

<p> The default implementation returns the value of the
<code>standardFormatSupported</code> instance variable.

@return <code>true</code> if the standard metadata format
is supported.

@see #getAsTree
@see #setFromTree
@see #mergeTree
@see #getMetadataFormat
"
      end

      operation 1704066 "isReadOnly"
	abstract public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this object does not support the
<code>mergeTree</code>, <code>setFromTree</code>, and
<code>reset</code> methods.

@return true if this <code>IIOMetadata</code> object cannot be
modified.
"
      end

      operation 1704194 "getNativeMetadataFormatName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the \"native\" metadata format for this
plug-in, which typically allows for lossless encoding and
transmission of the metadata stored in the format handled by
this plug-in.  If no such format is supported,
<code>null</code>will be returned.

<p> The structure and contents of the \"native\" metadata format
are defined by the plug-in that created this
<code>IIOMetadata</code> object.  Plug-ins for simple formats
will usually create a dummy node for the root, and then a
series of child nodes representing individual tags, chunks, or
keyword/value pairs.  A plug-in may choose whether or not to
document its native format.

<p> The default implementation returns the value of the
<code>nativeMetadataFormatName</code> instance variable.

@return the name of the native format, or <code>null</code>.

@see #getExtraMetadataFormatNames
@see #getMetadataFormatNames
"
      end

      operation 1704322 "getExtraMetadataFormatNames"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of additional metadata formats, other than the native and standard
formats, recognized by this plug-in's
<code>getAsTree</code>, <code>setFromTree</code>, and
<code>mergeTree</code> methods.  If there are no such additional
formats, <code>null</code> is returned.

<p> The default implementation returns a clone of the
<code>extraMetadataFormatNames</code> instance variable.

@return an array of <code>String</code>s with length at least
1, or <code>null</code>.

@see #getAsTree
@see #setFromTree
@see #mergeTree
@see #getNativeMetadataFormatName
@see #getMetadataFormatNames
"
      end

      operation 1704450 "getMetadataFormatNames"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the names
of all metadata formats, including the native and standard
formats, recognized by this plug-in's <code>getAsTree</code>,
<code>setFromTree</code>, and <code>mergeTree</code> methods.
If there are no such formats, <code>null</code> is returned.

<p> The default implementation calls
<code>getNativeMetadataFormatName</code>,
<code>isStandardMetadataFormatSupported</code>, and
<code>getExtraMetadataFormatNames</code> and returns the
combined results.

@return an array of <code>String</code>s.

@see #getNativeMetadataFormatName
@see #isStandardMetadataFormatSupported
@see #getExtraMetadataFormatNames
"
      end

      operation 1704578 "getMetadataFormat"
	public return_type class_ref 315778 // IIOMetadataFormat
	nparams 1
	  param inout name "formatName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
given metadata format, or <code>null</code> if no description
is available.  The supplied name must be one of those returned
by <code>getMetadataFormatNames</code> (<i>i.e.</i>, either the
native format name, the standard format name, or one of those
returned by <code>getExtraMetadataFormatNames</code>).

<p> The default implementation checks the name against the
global standard metadata format name, and returns that format
if it is supported.  Otherwise, it checks against the native
format names followed by any additional format names.  If a
match is found, it retrieves the name of the
<code>IIOMetadataFormat</code> class from
<code>nativeMetadataFormatClassName</code> or
<code>extraMetadataFormatClassNames</code> as appropriate, and
constructs an instance of that class using its
<code>getInstance</code> method.

@param formatName the desired metadata format.

@return an <code>IIOMetadataFormat</code> object.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names recognized by
the plug-in.
@exception IllegalStateException if the class corresponding to
the format name cannot be loaded.
"
      end

      operation 1704706 "getAsTree"
	abstract public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "formatName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an XML DOM <code>Node</code> object that represents the
root of a tree of metadata contained within this object
according to the conventions defined by a given metadata
format.

<p> The names of the available metadata formats may be queried
using the <code>getMetadataFormatNames</code> method.

@param formatName the desired metadata format.

@return an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.

@see #getMetadataFormatNames
@see #setFromTree
@see #mergeTree
"
      end

      operation 1704834 "mergeTree"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "formatName" type class_ref 128130 // String
	  param inout name "root" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 317698 // IIOInvalidTreeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Alters the internal state of this <code>IIOMetadata</code>
object from a tree of XML DOM <code>Node</code>s whose syntax
is defined by the given metadata format.  The previous state is
altered only as necessary to accommodate the nodes that are
present in the given tree.  If the tree structure or contents
are invalid, an <code>IIOInvalidTreeException</code> will be
thrown.

<p> As the semantics of how a tree or subtree may be merged with
another tree are completely format-specific, plug-in authors may
implement this method in whatever manner is most appropriate for
the format, including simply replacing all existing state with the
contents of the given tree.

@param formatName the desired metadata format.
@param root an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalStateException if this object is read-only.
@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.
@exception IllegalArgumentException if <code>root</code> is
<code>null</code>.
@exception IIOInvalidTreeException if the tree cannot be parsed
successfully using the rules of the given format.

@see #getMetadataFormatNames
@see #getAsTree
@see #setFromTree
"
      end

      operation 1704962 "getStandardChromaNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the chroma
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705090 "getStandardCompressionNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
compression information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705218 "getStandardDataNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the data
format information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705346 "getStandardDimensionNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
dimension information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705474 "getStandardDocumentNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the document
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705602 "getStandardTextNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the textual
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705730 "getStandardTileNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the tiling
information of the standard <code>javax_imageio_1.0</code>
metadata format, or <code>null</code> if no such information is
available.  This method is intended to be called by the utility
routine <code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.

@see #getStandardTree
"
      end

      operation 1705858 "getStandardTransparencyNode"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataNode</code> representing the
transparency information of the standard
<code>javax_imageio_1.0</code> metadata format, or
<code>null</code> if no such information is available.  This
method is intended to be called by the utility routine
<code>getStandardTree</code>.

<p> The default implementation returns <code>null</code>.

<p> Subclasses should override this method to produce an
appropriate subtree if they wish to support the standard
metadata format.

@return an <code>IIOMetadataNode</code>, or <code>null</code>.
"
      end

      operation 1705986 "append"
	private explicit_return_type "void"
	nparams 2
	  param inout name "root" type class_ref 317826 // IIOMetadataNode
	  param inout name "node" type class_ref 317826 // IIOMetadataNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a new node to an existing node, if the new node is
non-<code>null</code>.
"
      end

      operation 1706114 "getStandardTree"
	protected return_type class_ref 317826 // IIOMetadataNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A utility method to return a tree of
<code>IIOMetadataNode</code>s representing the metadata
contained within this object according to the conventions of
the standard <code>javax_imageio_1.0</code> metadata format.

<p> This method calls the various <code>getStandard*Node</code>
methods to supply each of the subtrees rooted at the children
of the root node.  If any of those methods returns
<code>null</code>, the corresponding subtree will be omitted.
If all of them return <code>null</code>, a tree consisting of a
single root node will be returned.

@return an <code>IIOMetadataNode</code> representing the root
of a metadata tree in the <code>javax_imageio_1.0</code>
format.

@see #getStandardChromaNode
@see #getStandardCompressionNode
@see #getStandardDataNode
@see #getStandardDimensionNode
@see #getStandardDocumentNode
@see #getStandardTextNode
@see #getStandardTileNode
@see #getStandardTransparencyNode
"
      end

      operation 1706242 "setFromTree"
	public explicit_return_type "void"
	nparams 2
	  param inout name "formatName" type class_ref 128130 // String
	  param inout name "root" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 317698 // IIOInvalidTreeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the internal state of this <code>IIOMetadata</code> object
from a tree of XML DOM <code>Node</code>s whose syntax is
defined by the given metadata format.  The previous state is
discarded.  If the tree's structure or contents are invalid, an
<code>IIOInvalidTreeException</code> will be thrown.

<p> The default implementation calls <code>reset</code>
followed by <code>mergeTree(formatName, root)</code>.

@param formatName the desired metadata format.
@param root an XML DOM <code>Node</code> object forming the
root of a tree.

@exception IllegalStateException if this object is read-only.
@exception IllegalArgumentException if <code>formatName</code>
is <code>null</code> or is not one of the names returned by
<code>getMetadataFormatNames</code>.
@exception IllegalArgumentException if <code>root</code> is
<code>null</code>.
@exception IIOInvalidTreeException if the tree cannot be parsed
successfully using the rules of the given format.

@see #getMetadataFormatNames
@see #getAsTree
@see #mergeTree
"
      end

      operation 1706370 "reset"
	abstract public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resets all the data stored in this object to default values,
usually to the state this object was in immediately after
construction, though the precise semantics are plug-in specific.
Note that there are many possible default values, depending on
how the object was created.

@exception IllegalStateException if this object is read-only.

@see javax.imageio.ImageReader#getStreamMetadata
@see javax.imageio.ImageReader#getImageMetadata
@see javax.imageio.ImageWriter#getDefaultStreamMetadata
@see javax.imageio.ImageWriter#getDefaultImageMetadata
"
      end

      operation 1706498 "setController"
	public explicit_return_type "void"
	nparams 1
	  param inout name "controller" type class_ref 317442 // IIOMetadataController
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>IIOMetadataController</code> to be used
to provide settings for this <code>IIOMetadata</code>
object when the <code>activateController</code> method
is called, overriding any default controller.  If the
argument is <code>null</code>, no controller will be
used, including any default.  To restore the default, use
<code>setController(getDefaultController())</code>.

<p> The default implementation sets the <code>controller</code>
instance variable to the supplied value.

@param controller An appropriate
<code>IIOMetadataController</code>, or <code>null</code>.

@see IIOMetadataController
@see #getController
@see #getDefaultController
@see #hasController
@see #activateController()
"
      end

      operation 1706626 "getController"
	public return_type class_ref 317442 // IIOMetadataController
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whatever <code>IIOMetadataController</code> is currently
installed.  This could be the default if there is one,
<code>null</code>, or the argument of the most recent call
to <code>setController</code>.

<p> The default implementation returns the value of the
<code>controller</code> instance variable.

@return the currently installed
<code>IIOMetadataController</code>, or <code>null</code>.

@see IIOMetadataController
@see #setController
@see #getDefaultController
@see #hasController
@see #activateController()
"
      end

      operation 1706754 "getDefaultController"
	public return_type class_ref 317442 // IIOMetadataController
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default <code>IIOMetadataController</code>, if there
is one, regardless of the currently installed controller.  If
there is no default controller, returns <code>null</code>.

<p> The default implementation returns the value of the
<code>defaultController</code> instance variable.

@return the default <code>IIOMetadataController</code>, or
<code>null</code>.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #hasController
@see #activateController()
"
      end

      operation 1706882 "hasController"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if there is a controller installed
for this <code>IIOMetadata</code> object.

<p> The default implementation returns <code>true</code> if the
<code>getController</code> method returns a
non-<code>null</code> value.

@return <code>true</code> if a controller is installed.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #getDefaultController
@see #activateController()
"
      end

      operation 1707010 "activateController"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Activates the installed <code>IIOMetadataController</code> for
this <code>IIOMetadata</code> object and returns the resulting
value.  When this method returns <code>true</code>, all values for this
<code>IIOMetadata</code> object will be ready for the next write
operation.  If <code>false</code> is
returned, no settings in this object will have been disturbed
(<i>i.e.</i>, the user canceled the operation).

<p> Ordinarily, the controller will be a GUI providing a user
interface for a subclass of <code>IIOMetadata</code> for a
particular plug-in.  Controllers need not be GUIs, however.

<p> The default implementation calls <code>getController</code>
and the calls <code>activate</code> on the returned object if
<code>hasController</code> returns <code>true</code>.

@return <code>true</code> if the controller completed normally.

@exception IllegalStateException if there is no controller
currently installed.

@see IIOMetadataController
@see #setController(IIOMetadataController)
@see #getController
@see #getDefaultController
@see #hasController
"
      end
    end

    class 315778 "IIOMetadataFormat"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object describing the structure of metadata documents returned
from <code>IIOMetadata.getAsTree</code> and passed to
<code>IIOMetadata.setFromTree</code> and <code>mergeTree</code>.
Document structures are described by a set of constraints on the
type and number of child elements that may belong to a given parent
element type, the names, types, and values of attributes that may
belong to an element, and the type and values of
<code>Object</code> reference that may be stored at a node.

<p> N.B: classes that implement this interface should contain a
method declared as <code>public static getInstance()</code> which
returns an instance of the class.  Commonly, an implementation will
construct only a single instance and cache it for future
invocations of <code>getInstance</code>.

<p> The structures that may be described by this class are a subset
of those expressible using XML document type definitions (DTDs),
with the addition of some basic information on the datatypes of
attributes and the ability to store an <code>Object</code>
reference within a node.  In the future, XML Schemas could be used
to represent these structures, and many others.

<p> The differences between
<code>IIOMetadataFormat</code>-described structures and DTDs are as
follows:

<ul>
<li> Elements may not contain text or mix text with embedded
tags.

<li> The children of an element must conform to one of a few simple
patterns, described in the documentation for the
<code>CHILD_*</code> constants;

<li> The in-memory representation of an elements may contain a
reference to an <code>Object</code>.  There is no provision for
representing such objects textually.
</ul>

"
      attribute 365314 "CHILD_POLICY_EMPTY"
	public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Child policies

A constant returned by <code>getChildPolicy</code> to indicate
that an element may not have any children.  In other words, it
is required to be a leaf node.

"
      end

      attribute 365442 "CHILD_POLICY_ALL"
	public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have a single instance of each of its
legal child elements, in order.  In DTD terms, the contents of
the element are defined by a sequence <code>a,b,c,d,...</code>.

"
      end

      attribute 365570 "CHILD_POLICY_SOME"
	public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or one instance of each of its
legal child elements, in order.  In DTD terms, the contents of
the element are defined by a sequence
<code>a?,b?,c?,d?,...</code>.

"
      end

      attribute 365698 "CHILD_POLICY_CHOICE"
	public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or one children, selected from
among its legal child elements.  In DTD terms, the contents of
the element are defined by a selection
<code>a|b|c|d|...</code>.

"
      end

      attribute 365826 "CHILD_POLICY_SEQUENCE"
	public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have a sequence of instances of any of its
legal child elements.  In DTD terms, the contents of the
element are defined by a sequence <code>(a|b|c|d|...)*</code>.

"
      end

      attribute 365954 "CHILD_POLICY_REPEAT"
	public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getChildPolicy</code> to indicate
that an element must have zero or more instances of its unique
legal child element.  In DTD terms, the contents of the element
are defined by a starred expression <code>a*</code>.

"
      end

      attribute 366082 "CHILD_POLICY_MAX"
	public explicit_type "int"
	init_value " CHILD_POLICY_REPEAT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The largest valid <code>CHILD_POLICY_*</code> constant,
to be used for range checks.

"
      end

      attribute 366210 "VALUE_NONE"
	public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getObjectValueType</code> to
indicate the absence of a user object.

"
      end

      attribute 366338 "VALUE_ARBITRARY"
	public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a single, arbitrary value.

"
      end

      attribute 366466 "VALUE_RANGE"
	public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a range of values.  Both the minimum
and maximum values of the range are exclusive.  It is
recommended that ranges of integers be inclusive on both ends,
and that exclusive ranges be used only for floating-point data.

@see #VALUE_RANGE_MIN_MAX_INCLUSIVE

"
      end

      attribute 366594 "VALUE_RANGE_MIN_INCLUSIVE_MASK"
	public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value that may be or'ed with <code>VALUE_RANGE</code> to
obtain <code>VALUE_RANGE_MIN_INCLUSIVE</code>, and with
<code>VALUE_RANGE_MAX_INCLUSIVE</code> to obtain
<code>VALUE_RANGE_MIN_MAX_INCLUSIVE</code>.

<p> Similarly, the value may be and'ed with the value of
<code>getAttributeValueType</code>or
<code>getObjectValueType</code> to determine if the minimum
value of the range is inclusive.

"
      end

      attribute 366722 "VALUE_RANGE_MAX_INCLUSIVE_MASK"
	public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A value that may be or'ed with <code>VALUE_RANGE</code> to
obtain <code>VALUE_RANGE_MAX_INCLUSIVE</code>, and with
<code>VALUE_RANGE_MIN_INCLUSIVE</code> to obtain
<code>VALUE_RANGE_MIN_MAX_INCLUSIVE</code>.

<p> Similarly, the value may be and'ed with the value of
<code>getAttributeValueType</code>or
<code>getObjectValueType</code> to determine if the maximum
value of the range is inclusive.

"
      end

      attribute 366850 "VALUE_RANGE_MIN_INCLUSIVE"
	public explicit_type "int"
	init_value " VALUE_RANGE |
        VALUE_RANGE_MIN_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a range of values.  The minimum
(but not the maximum) value of the range is inclusive.

"
      end

      attribute 366978 "VALUE_RANGE_MAX_INCLUSIVE"
	public explicit_type "int"
	init_value " VALUE_RANGE |
        VALUE_RANGE_MAX_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a range of values.  The maximum
(but not the minimum) value of the range is inclusive.

"
      end

      attribute 367106 "VALUE_RANGE_MIN_MAX_INCLUSIVE"
	public explicit_type "int"
	init_value "
        VALUE_RANGE |
        VALUE_RANGE_MIN_INCLUSIVE_MASK |
        VALUE_RANGE_MAX_INCLUSIVE_MASK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set a range of values.  Both the minimum
and maximum values of the range are inclusive.  It is
recommended that ranges of integers be inclusive on both ends,
and that exclusive ranges be used only for floating-point data.

"
      end

      attribute 367234 "VALUE_ENUMERATION"
	public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set one of a number of enumerated values.
In the case of attributes, these values are
<code>String</code>s; for objects, they are
<code>Object</code>s implementing a given class or interface.

<p> Attribute values of type <code>DATATYPE_BOOLEAN</code>
should be marked as enumerations.

"
      end

      attribute 367362 "VALUE_LIST"
	public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeValueType</code> and
<code>getObjectValueType</code> to indicate that the attribute
or user object may be set to a list or array of values.  In the
case of attributes, the list will consist of
whitespace-separated values within a <code>String</code>; for
objects, an array will be used.

"
      end

      attribute 367490 "DATATYPE_STRING"
	public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a general Unicode
string.

"
      end

      attribute 367618 "DATATYPE_BOOLEAN"
	public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is one of the boolean
values 'true' or 'false'.
Attribute values of type DATATYPE_BOOLEAN should be marked as
enumerations, and the permitted values should be the string
literal values \"TRUE\" or \"FALSE\", although a plugin may also
recognise lower or mixed case equivalents.

"
      end

      attribute 367746 "DATATYPE_INTEGER"
	public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of an integer.

"
      end

      attribute 367874 "DATATYPE_FLOAT"
	public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of a decimal floating-point number.

"
      end

      attribute 368002 "DATATYPE_DOUBLE"
	public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A constant returned by <code>getAttributeDataType</code>
indicating that the value of an attribute is a string
representation of a double-precision decimal floating-point
number.

"
      end

      operation 1709058 "getRootName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Root

Returns the name of the root element of the format.

@return a <code>String</code>.
"
      end

      operation 1709186 "canNodeAppear"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "imageType" type class_ref 313474 // ImageTypeSpecifier
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Multiplicity

Returns <code>true</code> if the element (and the subtree below
it) is allowed to appear in a metadata document for an image of
the given type, defined by an <code>ImageTypeSpecifier</code>.
For example, a metadata document format might contain an
element that describes the primary colors of the image, which
would not be allowed when writing a grayscale image.

@param elementName the name of the element being queried.
@param imageType an <code>ImageTypeSpecifier</code> indicating
the type of the image that will be associated with the
metadata.

@return <code>true</code> if the node is meaningful for images
of the given type.
"
      end

      operation 1709314 "getElementMinChildren"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of children of the named element
with child policy <code>CHILD_POLICY_REPEAT</code>.  For
example, an element representing color primary information
might be required to have at least 3 children, one for each
primary.

@param elementName the name of the element being queried.

@return an <code>int</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element does
not have a child policy of <code>CHILD_POLICY_REPEAT</code>.
"
      end

      operation 1709442 "getElementMaxChildren"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of children of the named element
with child policy <code>CHILD_POLICY_REPEAT</code>.  For
example, an element representing an entry in an 8-bit color
palette might be allowed to repeat up to 256 times.  A value of
<code>Integer.MAX_VALUE</code> may be used to specify that
there is no upper bound.

@param elementName the name of the element being queried.

@return an <code>int</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element does
not have a child policy of <code>CHILD_POLICY_REPEAT</code>.
"
      end

      operation 1709570 "getElementDescription"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named element, or <code>null</code>.  The description will be
localized for the supplied <code>Locale</code> if possible.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the element description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
"
      end

      operation 1709698 "getChildPolicy"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Children

Returns one of the constants starting with
<code>CHILD_POLICY_</code>, indicating the legal pattern of
children for the named element.

@param elementName the name of the element being queried.

@return one of the <code>CHILD_POLICY_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
"
      end

      operation 1709826 "getChildNames"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s indicating the names
of the element which are allowed to be children of the named
element, in the order in which they should appear.  If the
element cannot have children, <code>null</code> is returned.

@param elementName the name of the element being queried.

@return an array of <code>String</code>s, or null.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
"
      end

      operation 1709954 "getAttributeNames"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attributes

Returns an array of <code>String</code>s listing the names of
the attributes that may be associated with the named element.

@param elementName the name of the element being queried.

@return an array of <code>String</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
"
      end

      operation 1710082 "getAttributeValueType"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns one of the constants starting with <code>VALUE_</code>,
indicating whether the values of the given attribute within the
named element are arbitrary, constrained to lie within a
specified range, constrained to be one of a set of enumerated
values, or are a whitespace-separated list of arbitrary values.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return one of the <code>VALUE_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
"
      end

      operation 1710210 "getAttributeDataType"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns one of the constants starting with
<code>DATATYPE_</code>, indicating the format and
interpretation of the value of the given attribute within the
named element.  If <code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>, then the legal value is a
whitespace-spearated list of values of the returned datatype.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return one of the <code>DATATYPE_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
"
      end

      operation 1710338 "isAttributeRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the named attribute must be
present within the named element.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return <code>true</code> if the attribute must be present.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
"
      end

      operation 1710466 "getAttributeDefaultValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of the named attribute, if it is not
explicitly present within the named element, as a
<code>String</code>, or <code>null</code> if no default value
is available.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the default value, or
<code>null</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
"
      end

      operation 1710594 "getAttributeEnumerations"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>String</code>s containing the legal
enumerated values for the given attribute within the named
element.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_ENUMERATION</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return an array of <code>String</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as an enumeration.
"
      end

      operation 1710722 "getAttributeMinValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum legal value for the attribute.  Whether
this value is inclusive or exclusive may be determined by the
value of <code>getAttributeValueType</code>.  The value is
returned as a <code>String</code>; its interpretation is
dependent on the value of <code>getAttributeDataType</code>.
This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_RANGE_*</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the smallest legal
value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a range.
"
      end

      operation 1710850 "getAttributeMaxValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum legal value for the attribute.  Whether
this value is inclusive or exclusive may be determined by the
value of <code>getAttributeValueType</code>.  The value is
returned as a <code>String</code>; its interpretation is
dependent on the value of <code>getAttributeDataType</code>.
This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_RANGE_*</code>.

@param elementName the name of the element being queried, as a
<code>String</code>.
@param attrName the name of the attribute being queried.

@return a <code>String</code> containing the largest legal
value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a range.
"
      end

      operation 1710978 "getAttributeListMinLength"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of list items that may be used to
define this attribute.  The attribute itself is defined as a
<code>String</code> containing multiple whitespace-separated
items.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return the smallest legal number of list items for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a list.
"
      end

      operation 1711106 "getAttributeListMaxLength"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of list items that may be used to
define this attribute.  A value of
<code>Integer.MAX_VALUE</code> may be used to specify that
there is no upper bound.  The attribute itself is defined as a
<code>String</code> containing multiple whitespace-separated
items.  This method should only be called if
<code>getAttributeValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.
@param attrName the name of the attribute being queried.

@return the largest legal number of list items for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
@exception IllegalArgumentException if the given attribute is
not defined as a list.
"
      end

      operation 1711234 "getAttributeDescription"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named attribute, or <code>null</code>.  The description will be
localized for the supplied <code>Locale</code> if possible.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param attrName the name of the attribute.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the attribute description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.
"
      end

      operation 1711362 "getObjectValueType"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object value

Returns one of the enumerated values starting with
<code>VALUE_</code>, indicating the type of values
(enumeration, range, or array) that are allowed for the
<code>Object</code> reference.  If no object value can be
stored within the given element, the result of this method will
be <code>VALUE_NONE</code>.

<p> <code>Object</code> references whose legal values are
defined as a range must implement the <code>Comparable</code>
interface.

@param elementName the name of the element being queried.

@return one of the <code>VALUE_*</code> constants.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.

@see Comparable
"
      end

      operation 1711490 "getObjectClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Class</code> type of the <code>Object</code>
reference stored within the element.  If this element may not
contain an <code>Object</code> reference, an
<code>IllegalArgumentException</code> will be thrown.  If the
class type is an array, this field indicates the underlying
class type (<i>e.g</i>, for an array of <code>int</code>s, this
method would return <code>int.class</code>).

<p> <code>Object</code> references whose legal values are
defined as a range must implement the <code>Comparable</code>
interface.

@param elementName the name of the element being queried.

@return a <code>Class</code> object.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
"
      end

      operation 1711618 "getObjectDefaultValue"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code>s containing the default
value for the <code>Object</code> reference within
the named element.

@param elementName the name of the element being queried.

@return an <code>Object</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
"
      end

      operation 1711746 "getObjectEnumerations"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of <code>Object</code>s containing the legal
enumerated values for the <code>Object</code> reference within
the named element.  This method should only be called if
<code>getObjectValueType</code> returns
<code>VALUE_ENUMERATION</code>.

<p> The <code>Object</code> associated with a node that accepts
enumerated values must be equal to one of the values returned by
this method, as defined by the <code>==</code> operator (as
opposed to the <code>Object.equals</code> method).

@param elementName the name of the element being queried.

@return an array of <code>Object</code>s.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as an enumeration.
"
      end

      operation 1711874 "getObjectMinValue"
	public return_type class_ref 194946 // Comparable
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum legal value for the <code>Object</code>
reference within the named element.  Whether this value is
inclusive or exclusive may be determined by the value of
<code>getObjectValueType</code>.  This method should only be
called if <code>getObjectValueType</code> returns one of the
constants starting with <code>VALUE_RANGE</code>.

@param elementName the name of the element being queried.

@return the smallest legal value for the attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as a range.
"
      end

      operation 1712002 "getObjectMaxValue"
	public return_type class_ref 194946 // Comparable
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum legal value for the <code>Object</code>
reference within the named element.  Whether this value is
inclusive or exclusive may be determined by the value of
<code>getObjectValueType</code>.  This method should only be
called if <code>getObjectValueType</code> returns one of the
constants starting with <code>VALUE_RANGE</code>.

@return the smallest legal value for the attribute.

@param elementName the name of the element being queried.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code>
is not defined as a range.
"
      end

      operation 1712130 "getObjectArrayMinLength"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum number of array elements that may be used
to define the <code>Object</code> reference within the named
element.  This method should only be called if
<code>getObjectValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.

@return the smallest valid array length for the
<code>Object</code> reference.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code> is not
an array.
"
      end

      operation 1712258 "getObjectArrayMaxLength"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of array elements that may be used
to define the <code>Object</code> reference within the named
element.  A value of <code>Integer.MAX_VALUE</code> may be used
to specify that there is no upper bound.  This method should
only be called if <code>getObjectValueType</code> returns
<code>VALUE_LIST</code>.

@param elementName the name of the element being queried.

@return the largest valid array length for the
<code>Object</code> reference.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code> or is not a legal element name for this
format.
@exception IllegalArgumentException if the named element cannot
contain an object value (<i>i.e.</i>, if
<code>getObjectValueType(elementName) == VALUE_NONE</code>).
@exception IllegalArgumentException if the <code>Object</code> is not
an array.
"
      end
    end

    class 317442 "IIOMetadataController"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface to be implemented by objects that can determine the
settings of an <code>IIOMetadata</code> object, either by putting
up a GUI to obtain values from a user, or by other means.  This
interface merely specifies a generic <code>activate</code> method
that invokes the controller, without regard for how the controller
obtains values (<i>i.e.</i>, whether the controller puts up a GUI
or merely computes a set of values is irrelevant to this
interface).

<p> Within the <code>activate</code> method, a controller obtains
initial values by querying the <code>IIOMetadata</code> object's
settings, either using the XML DOM tree or a plug-in specific
interface, modifies values by whatever means, then modifies the
<code>IIOMetadata</code> object's settings, using either the
<code>setFromTree</code> or <code>mergeTree</code> methods, or a
plug-in specific interface.  In general, applications may expect
that when the <code>activate</code> method returns
<code>true</code>, the <code>IIOMetadata</code> object is ready for
use in a write operation.

<p> Vendors may choose to provide GUIs for the
<code>IIOMetadata</code> subclasses they define for a particular
plug-in.  These can be set up as default controllers in the
corresponding <code>IIOMetadata</code> subclasses.

<p> Alternatively, an algorithmic process such as a database lookup
or the parsing of a command line could be used as a controller, in
which case the <code>activate</code> method would simply look up or
compute the settings, call methods on <code>IIOMetadata</code> to
set its state, and return <code>true</code>.

@see IIOMetadata#setController
@see IIOMetadata#getController
@see IIOMetadata#getDefaultController
@see IIOMetadata#hasController
@see IIOMetadata#activateController

"
      operation 9664514 "activate"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "metadata" type class_ref 313730 // IIOMetadata
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Activates the controller.  If <code>true</code> is returned,
all settings in the <code>IIOMetadata</code> object should be
ready for use in a write operation.  If <code>false</code> is
returned, no settings in the <code>IIOMetadata</code> object
will be disturbed (<i>i.e.</i>, the user canceled the
operation).

@param metadata the <code>IIOMetadata</code> object to be modified.

@return <code>true</code> if the <code>IIOMetadata</code> has been
modified, <code>false</code> otherwise.

@exception IllegalArgumentException if <code>metadata</code> is
<code>null</code> or is not an instance of the correct class.
"
      end
    end

    class 317698 "IIOInvalidTreeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>IIOInvalidTreeException</code> is thrown when an attempt
by an <code>IIOMetadata</code> object to parse a tree of
<code>IIOMetadataNode</code>s fails.  The node that led to the
parsing error may be stored.  As with any parsing error, the actual
error may occur at a different point that that where it is
detected.  The node returned by <code>getOffendingNode</code>
should merely be considered as a clue to the actual nature of the
problem.

@see IIOMetadata#setFromTree
@see IIOMetadata#mergeTree
@see IIOMetadataNode

"
      classrelation 3758722 // <generalisation>
	relation 3758722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3758722 // <generalisation>
	  b parent class_ref 314242 // IIOException
      end

      classrelation 3758850 // offendingNode (<unidirectional association>)
	relation 3758850 --->
	  a role_name "offendingNode" init_value " null" protected
	    comment "
The <code>Node</code> that led to the parsing error, or
<code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3758850 // offendingNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 9664130 "IIOInvalidTreeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 128130 // String
	  param inout name "offendingNode" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOInvalidTreeException</code> with a
message string and a reference to the <code>Node</code> that
caused the parsing error.

@param message a <code>String</code> containing the reason for
the parsing failure.
@param offendingNode the DOM <code>Node</code> that caused the
exception, or <code>null</code>.
"
      end

      operation 9664258 "IIOInvalidTreeException"
	public explicit_return_type ""
	nparams 3
	  param inout name "message" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	  param inout name "offendingNode" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOInvalidTreeException</code> with a
message string, a reference to an exception that caused this
exception, and a reference to the <code>Node</code> that caused
the parsing error.

@param message a <code>String</code> containing the reason for
the parsing failure.
@param cause the <code>Throwable</code> (<code>Error</code> or
<code>Exception</code>) that caused this exception to occur,
or <code>null</code>.
@param offendingNode the DOM <code>Node</code> that caused the
exception, or <code>null</code>.
"
      end

      operation 9664386 "getOffendingNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Node</code> that caused the error in parsing.

@return the offending <code>Node</code>.
"
      end
    end

    class 317826 "IIOMetadataNode"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class representing a node in a meta-data tree, which implements
the <a
href=\"../../../../api/org/w3c/dom/Element.html\">
<code>org.w3c.dom.Element</code></a> interface and additionally allows
for the storage of non-textual objects via the
<code>getUserObject</code> and <code>setUserObject</code> methods.

<p> This class is not intended to be used for general XML
processing. In particular, <code>Element</code> nodes created
within the Image I/O API are not compatible with those created by
Sun's standard implementation of the <code>org.w3.dom</code> API.
In particular, the implementation is tuned for simple uses and may
not perform well for intensive processing.

<p> Namespaces are ignored in this implementation.  The terms \"tag
name\" and \"node name\" are always considered to be synonymous.

<em>Note:</em>
The DOM Level 3 specification added a number of new methods to the
{@code Node}, {@code Element} and {@code Attr} interfaces that are not
of value to the {@code IIOMetadataNode} implementation or specification.

Calling such methods on an {@code IIOMetadataNode}, or an {@code Attr}
instance returned from an {@code IIOMetadataNode} will result in a
{@code DOMException} being thrown.

@see IIOMetadata#getAsTree
@see IIOMetadata#setFromTree
@see IIOMetadata#mergeTree

"
      classrelation 3760258 // <realization>
	relation 3760258 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3760258 // <realization>
	  b parent class_ref 648194 // Element
      end

      classrelation 3760386 // <realization>
	relation 3760386 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3760386 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 3760514 // nodeName (<unidirectional association>)
	relation 3760514 --->
	  a role_name "nodeName" init_value " null" private
	    comment "
The name of the node as a <code>String</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760514 // nodeName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3760642 // nodeValue (<unidirectional association>)
	relation 3760642 --->
	  a role_name "nodeValue" init_value " null" private
	    comment "
The value of the node as a <code>String</code>.  The Image I/O
API typically does not make use of the node value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760642 // nodeValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3760770 // userObject (<unidirectional association>)
	relation 3760770 --->
	  a role_name "userObject" init_value " null" private
	    comment "
The <code>Object</code> value associated with this node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760770 // userObject (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 3760898 // parent (<unidirectional association>)
	relation 3760898 --->
	  a role_name "parent" init_value " null" private
	    comment "
The parent node of this node, or <code>null</code> if this node
forms the root of its own tree.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760898 // parent (<unidirectional association>)
	  b parent class_ref 317826 // IIOMetadataNode
      end

      attribute 2247938 "numChildren"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The number of child nodes.

"
      end

      classrelation 3761026 // firstChild (<unidirectional association>)
	relation 3761026 --->
	  a role_name "firstChild" init_value " null" private
	    comment "
The first (leftmost) child node of this node, or
<code>null</code> if this node is a leaf node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3761026 // firstChild (<unidirectional association>)
	  b parent class_ref 317826 // IIOMetadataNode
      end

      classrelation 3761154 // lastChild (<unidirectional association>)
	relation 3761154 --->
	  a role_name "lastChild" init_value " null" private
	    comment "
The last (rightmost) child node of this node, or
<code>null</code> if this node is a leaf node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3761154 // lastChild (<unidirectional association>)
	  b parent class_ref 317826 // IIOMetadataNode
      end

      classrelation 3761282 // nextSibling (<unidirectional association>)
	relation 3761282 --->
	  a role_name "nextSibling" init_value " null" private
	    comment "
The next (right) sibling node of this node, or
<code>null</code> if this node is its parent's last child node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3761282 // nextSibling (<unidirectional association>)
	  b parent class_ref 317826 // IIOMetadataNode
      end

      classrelation 3761410 // previousSibling (<unidirectional association>)
	relation 3761410 --->
	  a role_name "previousSibling" init_value " null" private
	    comment "
The previous (left) sibling node of this node, or
<code>null</code> if this node is its parent's first child node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3761410 // previousSibling (<unidirectional association>)
	  b parent class_ref 317826 // IIOMetadataNode
      end

      classrelation 3761538 // attributes (<unidirectional association>)
	relation 3761538 --->
	  a role_name "attributes" init_value " new ArrayList()" private
	    comment "
A <code>List</code> of <code>IIOAttr</code> nodes representing
attributes.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3761538 // attributes (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 9667842 "IIOMetadataNode"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an empty <code>IIOMetadataNode</code>.
"
      end

      operation 9667970 "IIOMetadataNode"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodeName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>IIOMetadataNode</code> with a given node
name.

@param nodeName the name of the node, as a <code>String</code>.
"
      end

      operation 9668098 "checkNode"
	private explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the node is either <code>null</code> or an
<code>IIOMetadataNode</code>.
"
      end

      operation 9668226 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from Node

Returns the node name associated with this node.

@return the node name, as a <code>String</code>.
"
      end

      operation 9668354 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with this node.

@return the node value, as a <code>String</code>.
"
      end

      operation 9668482 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nodeValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>String</code> value associated with this node.
"
      end

      operation 9668610 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the node type, which is always
<code>ELEMENT_NODE</code>.

@return the <code>short</code> value <code>ELEMENT_NODE</code>.
"
      end

      operation 9668738 "getParentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent of this node.  A <code>null</code> value
indicates that the node is the root of its own tree.  To add a
node to an existing tree, use one of the
<code>insertBefore</code>, <code>replaceChild</code>, or
<code>appendChild</code> methods.

@return the parent, as a <code>Node</code>.

@see #insertBefore
@see #replaceChild
@see #appendChild
"
      end

      operation 9668866 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>NodeList</code> that contains all children of this node.
If there are no children, this is a <code>NodeList</code> containing
no nodes.

@return the children as a <code>NodeList</code>
"
      end

      operation 9668994 "getFirstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the first child of this node, or <code>null</code> if
the node has no children.

@return the first child, as a <code>Node</code>, or
<code>null</code>
"
      end

      operation 9669122 "getLastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last child of this node, or <code>null</code> if
the node has no children.

@return the last child, as a <code>Node</code>, or
<code>null</code>.
"
      end

      operation 9669250 "getPreviousSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the previous sibling of this node, or <code>null</code>
if this node has no previous sibling.

@return the previous sibling, as a <code>Node</code>, or
<code>null</code>.
"
      end

      operation 9669378 "getNextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next sibling of this node, or <code>null</code> if
the node has no next sibling.

@return the next sibling, as a <code>Node</code>, or
<code>null</code>.
"
      end

      operation 9669506 "getAttributes"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>NamedNodeMap</code> containing the attributes of
this node.

@return a <code>NamedNodeMap</code> containing the attributes of
this node.
"
      end

      operation 9669634 "getOwnerDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since <code>IIOMetadataNode</code>s
do not belong to any <code>Document</code>.

@return <code>null</code>.
"
      end

      operation 9669762 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the node <code>newChild</code> before the existing
child node <code>refChild</code>. If <code>refChild</code> is
<code>null</code>, insert <code>newChild</code> at the end of
the list of children.

@param newChild the <code>Node</code> to insert.
@param refChild the reference <code>Node</code>.

@return the node being inserted.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>.
"
      end

      operation 9669890 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the child node <code>oldChild</code> with
<code>newChild</code> in the list of children, and returns the
<code>oldChild</code> node.

@param newChild the <code>Node</code> to insert.
@param oldChild the <code>Node</code> to be replaced.

@return the node replaced.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>.
"
      end

      operation 9670018 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the child node indicated by <code>oldChild</code> from
the list of children, and returns it.

@param oldChild the <code>Node</code> to be removed.

@return the node removed.

@exception IllegalArgumentException if <code>oldChild</code> is
<code>null</code>.
"
      end

      operation 9670146 "appendChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "newChild" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the node <code>newChild</code> to the end of the list of
children of this node.

@param newChild the <code>Node</code> to insert.

@return the node added.

@exception IllegalArgumentException if <code>newChild</code> is
<code>null</code>.
"
      end

      operation 9670274 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this node has child nodes.

@return <code>true</code> if this node has children.
"
      end

      operation 9670402 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a duplicate of this node.  The duplicate node has no
parent (<code>getParentNode</code> returns <code>null</code>).
If a shallow clone is being performed (<code>deep</code> is
<code>false</code>), the new node will not have any children or
siblings.  If a deep clone is being performed, the new node
will form the root of a complete cloned subtree.

@param deep if <code>true</code>, recursively clone the subtree
under the specified node; if <code>false</code>, clone only the
node itself.

@return the duplicate node.
"
      end

      operation 9670530 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing, since <code>IIOMetadataNode</code>s do not
contain <code>Text</code> children.
"
      end

      operation 9670658 "isSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>false</code> since DOM features are not
supported.

@return <code>false</code>.

@param feature a <code>String</code>, which is ignored.
@param version a <code>String</code>, which is ignored.
"
      end

      operation 9670786 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since namespaces are not supported.
"
      end

      operation 9670914 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>null</code>, since namespaces are not supported.

@return <code>null</code>.

@see #setPrefix
"
      end

      operation 9671042 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing, since namespaces are not supported.

@param prefix a <code>String</code>, which is ignored.

@see #getPrefix
"
      end

      operation 9671170 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getNodeName</code>.

@return the node name, as a <code>String</code>.
"
      end

      operation 9671298 "getTagName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from Element

Equivalent to <code>getNodeName</code>.

@return the node name, as a <code>String</code>
"
      end

      operation 9671426 "getAttribute"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves an attribute value by name.
@param name The name of the attribute to retrieve.
@return The <code>Attr</code> value as a string, or the empty string
if that attribute does not have a specified or default value.
"
      end

      operation 9671554 "getAttributeNS"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getAttribute(localName)</code>.

@see #setAttributeNS
"
      end

      operation 9671682 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9671810 "setAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setAttribute(qualifiedName, value)</code>.

@see #getAttributeNS
"
      end

      operation 9671938 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9672066 "removeAttribute"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "checkPresent" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9672194 "removeAttributeNS"
	public explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>removeAttribute(localName)</code>.
"
      end

      operation 9672322 "getAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9672450 "getAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getAttributeNode(localName)</code>.

@see #setAttributeNodeNS
"
      end

      operation 9672578 "setAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9672706 "setAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setAttributeNode(newAttr)</code>.

@see #getAttributeNodeNS
"
      end

      operation 9672834 "removeAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "oldAttr" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9672962 "getElementsByTagName"
	public return_type class_ref 333058 // NodeList
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9673090 "getElementsByTagName"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "l" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9673218 "getElementsByTagNameNS"
	public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getElementsByTagName(localName)</code>.
"
      end

      operation 9673346 "hasAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9673474 "hasAttribute"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9673602 "hasAttributeNS"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>hasAttribute(localName)</code>.
"
      end

      operation 9673730 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods from NodeList"
      end

      operation 9673858 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9673986 "getUserObject"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Object</code> value associated with this node.

@return the user <code>Object</code>.

@see #setUserObject
"
      end

      operation 9674114 "setUserObject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "userObject" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value associated with this node.

@param userObject the user <code>Object</code>.

@see #getUserObject
"
      end

      operation 9674242 "setIdAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Start of dummy methods for DOM L3.

This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9674370 "setIdAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9674498 "setIdAttributeNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "idAttr" type class_ref 648066 // Attr
	  param inout name "isId" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9674626 "getSchemaTypeInfo"
	public return_type class_ref 648322 // TypeInfo
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9674754 "setUserData"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "data" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 647298 // UserDataHandler
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9674882 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675010 "getFeature"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675138 "isSameNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675266 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675394 "lookupNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675522 "isDefaultNamespace"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675650 "lookupPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675778 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9675906 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9676034 "compareDocumentPosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end

      operation 9676162 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This DOM Level 3 method is not supported for {@code IIOMetadataNode}
and will throw a {@code DOMException}.
@throws DOMException - always.
"
      end
    end

    class 318082 "IIOMetadataFormatImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A concrete class providing a reusable implementation of the
<code>IIOMetadataFormat</code> interface.  In addition, a static
instance representing the standard, plug-in neutral
<code>javax_imageio_1.0</code> format is provided by the
<code>getStandardFormatInstance</code> method.

<p> In order to supply localized descriptions of elements and
attributes, a <code>ResourceBundle</code> with a base name of
<code>this.getClass().getName() + \"Resources\"</code> should be
supplied via the usual mechanism used by
<code>ResourceBundle.getBundle</code>.  Briefly, the subclasser
supplies one or more additional classes according to a naming
convention (by default, the fully-qualified name of the subclass
extending <code>IIMetadataFormatImpl</code>, plus the string
\"Resources\", plus the country, language, and variant codes
separated by underscores).  At run time, calls to
<code>getElementDescription</code> or
<code>getAttributeDescription</code> will attempt to load such
classes dynamically according to the supplied locale, and will use
either the element name, or the element name followed by a '/'
character followed by the attribute name as a key.  This key will
be supplied to the <code>ResourceBundle</code>'s
<code>getString</code> method, and the resulting localized
description of the node or attribute is returned.

<p> The subclass may supply a different base name for the resource
bundles using the <code>setResourceBaseName</code> method.

<p> A subclass may choose its own localization mechanism, if so
desired, by overriding the supplied implementations of
<code>getElementDescription</code> and
<code>getAttributeDescription</code>.

@see ResourceBundle#getBundle(String,Locale)

"
      classrelation 533634 // <realization>
	relation 533634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 533634 // <realization>
	  b parent class_ref 315778 // IIOMetadataFormat
      end

      classrelation 533762 // standardMetadataFormatName (<unidirectional association>)
	relation 533762 --->
	  a role_name "standardMetadataFormatName" init_value "
        \"javax_imageio_1.0\"" class_relation const_relation public
	    comment "
A <code>String</code> constant containing the standard format
name, <code>\"javax_imageio_1.0\"</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 533762 // standardMetadataFormatName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 533890 // standardFormat (<unidirectional association>)
	relation 533890 --->
	  a role_name "standardFormat" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 533890 // standardFormat (<unidirectional association>)
	  b parent class_ref 315778 // IIOMetadataFormat
      end

      classrelation 534018 // resourceBaseName (<unidirectional association>)
	relation 534018 --->
	  a role_name "resourceBaseName" init_value " this.getClass().getName() + \"Resources\"" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 534018 // resourceBaseName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 534146 // rootName (<unidirectional association>)
	relation 534146 --->
	  a role_name "rootName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 534146 // rootName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 534274 // elementMap (<unidirectional association>)
	relation 534274 --->
	  a role_name "elementMap" init_value " new HashMap()" private
	    comment " Element name (String) -> Element
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 534274 // elementMap (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      class 318210 "Element"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 534402 // elementName (<unidirectional association>)
	  relation 534402 --->
	    a role_name "elementName" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 534402 // elementName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 368130 "childPolicy"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 368258 "minChildren"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 368386 "maxChildren"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 534530 // childList (<unidirectional association>)
	  relation 534530 --->
	    a role_name "childList" init_value " new ArrayList()" package
	      comment " Child names (Strings)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 534530 // childList (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 534658 // parentList (<unidirectional association>)
	  relation 534658 --->
	    a role_name "parentList" init_value " new ArrayList()" package
	      comment " Parent names (Strings)
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 534658 // parentList (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 534786 // attrList (<unidirectional association>)
	  relation 534786 --->
	    a role_name "attrList" init_value " new ArrayList()" package
	      comment " List of attribute names in the order they were added
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 534786 // attrList (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 534914 // attrMap (<unidirectional association>)
	  relation 534914 --->
	    a role_name "attrMap" init_value " new HashMap()" package
	      comment " Attr name (String) -> Attribute
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 534914 // attrMap (<unidirectional association>)
	    b parent class_ref 130178 // Map
	end

	classrelation 535042 // objectValue (<unidirectional association>)
	  relation 535042 --->
	    a role_name "objectValue" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535042 // objectValue (<unidirectional association>)
	    b parent class_ref 318338 // ObjectValue
	end
      end

      class 318338 "ObjectValue"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 369154 "valueType"
	  package explicit_type "int"
	  init_value " VALUE_NONE"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 535810 // classType (<unidirectional association>)
	  relation 535810 --->
	    a role_name "classType" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535810 // classType (<unidirectional association>)
	    b parent class_ref 130818 // Class
	end

	classrelation 535938 // defaultValue (<unidirectional association>)
	  relation 535938 --->
	    a role_name "defaultValue" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535938 // defaultValue (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 536066 // enumeratedValues (<unidirectional association>)
	  relation 536066 --->
	    a role_name "enumeratedValues" init_value " null" package
	      comment " Meaningful only if valueType == VALUE_ENUMERATION
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 536066 // enumeratedValues (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 536194 // minValue (<unidirectional association>)
	  relation 536194 --->
	    a role_name "minValue" init_value " null" package
	      comment " Meaningful only if valueType == VALUE_RANGE
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 536194 // minValue (<unidirectional association>)
	    b parent class_ref 194946 // Comparable
	end

	classrelation 536322 // maxValue (<unidirectional association>)
	  relation 536322 --->
	    a role_name "maxValue" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 536322 // maxValue (<unidirectional association>)
	    b parent class_ref 194946 // Comparable
	end

	attribute 369282 "arrayMinLength"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Meaningful only if valueType == VALUE_LIST
"
	end

	attribute 369410 "arrayMaxLength"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 318466 "Attribute"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 535170 // attrName (<unidirectional association>)
	  relation 535170 --->
	    a role_name "attrName" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535170 // attrName (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 368514 "valueType"
	  package explicit_type "int"
	  init_value " VALUE_ARBITRARY"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 368642 "dataType"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 368770 "required"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 535298 // defaultValue (<unidirectional association>)
	  relation 535298 --->
	    a role_name "defaultValue" init_value " null" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535298 // defaultValue (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 535426 // enumeratedValues (<unidirectional association>)
	  relation 535426 --->
	    a role_name "enumeratedValues" package
	      comment " enumeration
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535426 // enumeratedValues (<unidirectional association>)
	    b parent class_ref 175362 // List
	end

	classrelation 535554 // minValue (<unidirectional association>)
	  relation 535554 --->
	    a role_name "minValue" package
	      comment " range
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535554 // minValue (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 535682 // maxValue (<unidirectional association>)
	  relation 535682 --->
	    a role_name "maxValue" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 535682 // maxValue (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 368898 "listMinLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " list
"
	end

	attribute 369026 "listMaxLength"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 1712386 "IIOMetadataFormatImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "rootName" type class_ref 128130 // String
	  param in name "childPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>IIOMetadataFormatImpl</code> instance,
with a given root element name and child policy (other than
<code>CHILD_POLICY_REPEAT</code>).  Additional elements, and
their attributes and <code>Object</code> reference information
may be added using the various <code>add</code> methods.

@param rootName the name of the root element.
@param childPolicy one of the <code>CHILD_POLICY_*</code> constants,
other than <code>CHILD_POLICY_REPEAT</code>.

@exception IllegalArgumentException if <code>rootName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>childPolicy</code> is
not one of the predefined constants.
"
      end

      operation 1712514 "IIOMetadataFormatImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "rootName" type class_ref 128130 // String
	  param in name "minChildren" explicit_type "int"
	  param in name "maxChildren" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a blank <code>IIOMetadataFormatImpl</code> instance,
with a given root element name and a child policy of
<code>CHILD_POLICY_REPEAT</code>.  Additional elements, and
their attributes and <code>Object</code> reference information
may be added using the various <code>add</code> methods.

@param rootName the name of the root element.
@param minChildren the minimum number of children of the node.
@param maxChildren the maximum number of children of the node.

@exception IllegalArgumentException if <code>rootName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>minChildren</code>
is negative or larger than <code>maxChildren</code>.
"
      end

      operation 1712642 "setResourceBaseName"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "resourceBaseName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a new base name for locating <code>ResourceBundle</code>s
containing descriptions of elements and attributes for this
format.

<p> Prior to the first time this method is called, the base
name will be equal to <code>this.getClass().getName() +
\"Resources\"</code>.

@param resourceBaseName a <code>String</code> containing the new
base name.

@exception IllegalArgumentException if
<code>resourceBaseName</code> is <code>null</code>.

@see #getResourceBaseName
"
      end

      operation 1712770 "getResourceBaseName"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently set base name for locating
<code>ResourceBundle</code>s.

@return a <code>String</code> containing the base name.

@see #setResourceBaseName
"
      end

      operation 1712898 "getElement"
	private return_type class_ref 318210 // Element
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "mustAppear" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for locating an element.

@param mustAppear if <code>true</code>, throw an
<code>IllegalArgumentException</code> if no such node exists;
if <code>false</code>, just return null.
"
      end

      operation 1713026 "getElement"
	private return_type class_ref 318210 // Element
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1713154 "getAttribute"
	private return_type class_ref 318466 // Attribute
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method for locating an attribute"
      end

      operation 1713282 "addElement"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "parentName" type class_ref 128130 // String
	  param in name "childPolicy" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup

Adds a new element type to this metadata document format with a
child policy other than <code>CHILD_POLICY_REPEAT</code>.

@param elementName the name of the new element.
@param parentName the name of the element that will be the
parent of the new element.
@param childPolicy one of the <code>CHILD_POLICY_*</code>
constants, other than <code>CHILD_POLICY_REPEAT</code>,
indicating the child policy of the new element.

@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>childPolicy</code>
is not one of the predefined constants.
"
      end

      operation 1713410 "addElement"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "parentName" type class_ref 128130 // String
	  param in name "minChildren" explicit_type "int"
	  param in name "maxChildren" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new element type to this metadata document format with a
child policy of <code>CHILD_POLICY_REPEAT</code>.

@param elementName the name of the new element.
@param parentName the name of the element that will be the
parent of the new element.
@param minChildren the minimum number of children of the node.
@param maxChildren the maximum number of children of the node.

@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>minChildren</code>
is negative or larger than <code>maxChildren</code>.
"
      end

      operation 1713538 "addChildElement"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "parentName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an existing element to the list of legal children for a
given parent node type.

@param parentName the name of the element that will be the
new parent of the element.
@param elementName the name of the element to be added as a
child.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>parentName</code>
is <code>null</code>, or is not a legal element name for this
format.
"
      end

      operation 1713666 "removeElement"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an element from the format.  If no element with the
given name was present, nothing happens and no exception is
thrown.

@param elementName the name of the element to be removed.
"
      end

      operation 1713794 "addAttribute"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that may
be set to an arbitrary value.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
"
      end

      operation 1713922 "addAttribute"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" type class_ref 128130 // String
	  param inout name "enumeratedValues" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}<String> ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a set of enumerated values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.
@param enumeratedValues a <code>List</code> of
<code>String</code>s containing the legal values for the
attribute.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
@exception IllegalArgumentException if
<code>enumeratedValues</code> is <code>null</code>.
@exception IllegalArgumentException if
<code>enumeratedValues</code> does not contain at least one
entry.
@exception IllegalArgumentException if
<code>enumeratedValues</code> contains an element that is not a
<code>String</code> or is <code>null</code>.
"
      end

      operation 1714050 "addAttribute"
	protected explicit_return_type "void"
	nparams 9
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" type class_ref 128130 // String
	  param inout name "minValue" type class_ref 128130 // String
	  param inout name "maxValue" type class_ref 128130 // String
	  param inout name "minInclusive" explicit_type "boolean"
	  param inout name "maxInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a range of values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param defaultValue the default value for the attribute, or
<code>null</code>.
@param minValue the smallest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
attribute, as a <code>String</code>.
@param maxValue the largest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
attribute, as a <code>String</code>.
@param minInclusive <code>true</code> if <code>minValue</code>
is inclusive.
@param maxInclusive <code>true</code> if <code>maxValue</code>
is inclusive.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
"
      end

      operation 1714178 "addAttribute"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param in name "dataType" explicit_type "int"
	  param inout name "required" explicit_type "boolean"
	  param in name "listMinLength" explicit_type "int"
	  param in name "listMaxLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by a list of values.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param dataType the data type (string format) of the attribute,
one of the <code>DATATYPE_*</code> constants.
@param required <code>true</code> if the attribute must be present.
@param listMinLength the smallest legal number of list items.
@param listMaxLength the largest legal number of list items.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
@exception IllegalArgumentException if <code>dataType</code> is
not one of the predefined constants.
@exception IllegalArgumentException if
<code>listMinLength</code> is negative or larger than
<code>listMaxLength</code>.
"
      end

      operation 1714306 "addBooleanAttribute"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "hasDefaultValue" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new attribute to a previously defined element that will
be defined by the enumerated values <code>TRUE</code> and
<code>FALSE</code>, with a datatype of
<code>DATATYPE_BOOLEAN</code>.

@param elementName the name of the element.
@param attrName the name of the attribute being added.
@param hasDefaultValue <code>true</code> if a default value
should be present.
@param defaultValue the default value for the attribute as a
<code>boolean</code>, ignored if <code>hasDefaultValue</code>
is <code>false</code>.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code>.
"
      end

      operation 1714434 "removeAttribute"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an attribute from a previously defined element.  If no
attribute with the given name was present in the given element,
nothing happens and no exception is thrown.

@param elementName the name of the element.
@param attrName the name of the attribute being removed.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
"
      end

      operation 1714562 "addObjectValue"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "classType" type class_ref 130818 // Class
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "T"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> is unconstrained other than by
its class type.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param required <code>true</code> if an object value must be present.
@param defaultValue the default value for the
<code>Object</code> reference, or <code>null</code>.
@param <T> the type of the object.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
"
      end

      operation 1714690 "addObjectValue"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "classType" type class_ref 130818 // Class
	  param inout name "required" explicit_type "boolean"
	  param inout name "defaultValue" explicit_type "T"
	  param inout name "enumeratedValues" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}<? extends T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must be one of the values
given by <code>enumeratedValues</code>.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param required <code>true</code> if an object value must be present.
@param defaultValue the default value for the
<code>Object</code> reference, or <code>null</code>.
@param enumeratedValues a <code>List</code> of
<code>Object</code>s containing the legal values for the
object reference.
@param <T> the type of the object.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if
<code>enumeratedValues</code> is <code>null</code>.
@exception IllegalArgumentException if
<code>enumeratedValues</code> does not contain at least one
entry.
@exception IllegalArgumentException if
<code>enumeratedValues</code> contains an element that is not
an instance of the class type denoted by <code>classType</code>
or is <code>null</code>.
"
      end

      operation 1714818 "addObjectValue"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "classType" type class_ref 130818 // Class
	  param inout name "defaultValue" explicit_type "T"
	  param inout name "minValue" type class_ref 194946 // Comparable
	  param inout name "maxValue" type class_ref 194946 // Comparable
	  param inout name "minInclusive" explicit_type "boolean"
	  param inout name "maxInclusive" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object & Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3}<? super T> ${p3}, ${t4}<? super T> ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must be within the range given
by <code>minValue</code> and <code>maxValue</code>.
Furthermore, the class type must implement the
<code>Comparable</code> interface.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param defaultValue the default value for the
@param minValue the smallest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
object value, as a <code>String</code>.
@param maxValue the largest (inclusive or exclusive depending
on the value of <code>minInclusive</code>) legal value for the
object value, as a <code>String</code>.
@param minInclusive <code>true</code> if <code>minValue</code>
is inclusive.
@param maxInclusive <code>true</code> if <code>maxValue</code>
is inclusive.
@param <T> the type of the object.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this
format.
"
      end

      operation 1714946 "addObjectValue"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "classType" type class_ref 130818 // Class
	  param in name "arrayMinLength" explicit_type "int"
	  param in name "arrayMaxLength" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an <code>Object</code> reference of a given class type
to be stored in nodes implementing the named element.  The
value of the <code>Object</code> must an array of objects of
class type given by <code>classType</code>, with at least
<code>arrayMinLength</code> and at most
<code>arrayMaxLength</code> elements.

<p> If an <code>Object</code> reference was previously allowed,
the previous settings are overwritten.

@param elementName the name of the element.
@param classType a <code>Class</code> variable indicating the
legal class type for the object value.
@param arrayMinLength the smallest legal length for the array.
@param arrayMaxLength the largest legal length for the array.

@exception IllegalArgumentException if <code>elementName</code> is
not a legal element name for this format.
"
      end

      operation 1715074 "removeObjectValue"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disallows an <code>Object</code> reference from being stored in
nodes implementing the named element.

@param elementName the name of the element.

@exception IllegalArgumentException if <code>elementName</code> is
not a legal element name for this format.
"
      end

      operation 1715202 "getRootName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Utility method
 Methods from IIOMetadataFormat
 Root"
      end

      operation 1715330 "canNodeAppear"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "imageType" type class_ref 313474 // ImageTypeSpecifier
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Multiplicity"
      end

      operation 1715458 "getElementMinChildren"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1715586 "getElementMaxChildren"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1715714 "getResource"
	private return_type class_ref 128130 // String
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1715842 "getElementDescription"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named element, or <code>null</code>.  The description will be
localized for the supplied <code>Locale</code> if possible.

<p> The default implementation will first locate a
<code>ResourceBundle</code> using the current resource base
name set by <code>setResourceBaseName</code> and the supplied
<code>Locale</code>, using the fallback mechanism described in
the comments for <code>ResourceBundle.getBundle</code>.  If a
<code>ResourceBundle</code> is found, the element name will be
used as a key to its <code>getString</code> method, and the
result returned.  If no <code>ResourceBundle</code> is found,
or no such key is present, <code>null</code> will be returned.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param locale the <code>Locale</code> for which localization
will be attempted.

@return the element description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.

@see #setResourceBaseName
"
      end

      operation 1715970 "getChildPolicy"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Children"
      end

      operation 1716098 "getChildNames"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716226 "getAttributeNames"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attributes"
      end

      operation 1716354 "getAttributeValueType"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716482 "getAttributeDataType"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716610 "isAttributeRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716738 "getAttributeDefaultValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716866 "getAttributeEnumerations"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1716994 "getAttributeMinValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717122 "getAttributeMaxValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717250 "getAttributeListMinLength"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717378 "getAttributeListMaxLength"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717506 "getAttributeDescription"
	public return_type class_ref 128130 // String
	nparams 3
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "locale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>String</code> containing a description of the
named attribute, or <code>null</code>.  The description will be
localized for the supplied <code>Locale</code> if possible.

<p> The default implementation will first locate a
<code>ResourceBundle</code> using the current resource base
name set by <code>setResourceBaseName</code> and the supplied
<code>Locale</code>, using the fallback mechanism described in
the comments for <code>ResourceBundle.getBundle</code>.  If a
<code>ResourceBundle</code> is found, the element name followed
by a \"/\" character followed by the attribute name
(<code>elementName + \"/\" + attrName</code>) will be used as a
key to its <code>getString</code> method, and the result
returned.  If no <code>ResourceBundle</code> is found, or no
such key is present, <code>null</code> will be returned.

<p> If <code>locale</code> is <code>null</code>, the current
default <code>Locale</code> returned by <code>Locale.getLocale</code>
will be used.

@param elementName the name of the element.
@param attrName the name of the attribute.
@param locale the <code>Locale</code> for which localization
will be attempted, or <code>null</code>.

@return the attribute description.

@exception IllegalArgumentException if <code>elementName</code>
is <code>null</code>, or is not a legal element name for this format.
@exception IllegalArgumentException if <code>attrName</code> is
<code>null</code> or is not a legal attribute name for this
element.

@see #setResourceBaseName
"
      end

      operation 1717634 "getObjectValue"
	private return_type class_ref 318338 // ObjectValue
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717762 "getObjectValueType"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1717890 "getObjectClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718018 "getObjectDefaultValue"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718146 "getObjectEnumerations"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718274 "getObjectMinValue"
	public return_type class_ref 194946 // Comparable
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718402 "getObjectMaxValue"
	public return_type class_ref 194946 // Comparable
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718530 "getObjectArrayMinLength"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718658 "getObjectArrayMaxLength"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1718786 "createStandardFormat"
	class_operation private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Standard format descriptor"
      end

      operation 1718914 "getStandardFormatInstance"
	class_operation public return_type class_ref 315778 // IIOMetadataFormat
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>IIOMetadataFormat</code> object describing the
standard, plug-in neutral <code>javax.imageio_1.0</code>
metadata document format described in the comment of the
<code>javax.imageio.metadata</code> package.

@return a predefined <code>IIOMetadataFormat</code> instance.
"
      end
    end

    class 1176834 "IIODOMException"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3758978 // <generalisation>
	relation 3758978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3758978 // <generalisation>
	  b parent class_ref 646658 // DOMException
      end

      operation 9664642 "IIODOMException"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1176962 "IIONamedNodeMap"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3759106 // <realization>
	relation 3759106 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3759106 // <realization>
	  b parent class_ref 327042 // NamedNodeMap
      end

      classrelation 3759234 // nodes (<unidirectional association>)
	relation 3759234 --->
	  a role_name "nodes" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3759234 // nodes (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 9664770 "IIONamedNodeMap"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodes" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9664898 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9665026 "getNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9665154 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9665282 "removeNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9665410 "setNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9665538 "getNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>getNamedItem(localName)</code>.
"
      end

      operation 9665666 "setNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setNamedItem(arg)</code>.
"
      end

      operation 9665794 "removeNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>removeNamedItem(localName)</code>.
"
      end
    end

    class 1177090 "IIONodeList"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3759362 // <realization>
	relation 3759362 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3759362 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 3759490 // nodes (<unidirectional association>)
	relation 3759490 --->
	  a role_name "nodes" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3759490 // nodes (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      operation 9665922 "IIONodeList"
	public explicit_return_type ""
	nparams 1
	  param inout name "nodes" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666050 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666178 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1177218 "IIOAttr"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 3759618 // <generalisation>
	relation 3759618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3759618 // <generalisation>
	  b parent class_ref 317826 // IIOMetadataNode
      end

      classrelation 3759746 // <realization>
	relation 3759746 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3759746 // <realization>
	  b parent class_ref 648066 // Attr
      end

      classrelation 3759874 // owner (<unidirectional association>)
	relation 3759874 --->
	  a role_name "owner" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3759874 // owner (<unidirectional association>)
	  b parent class_ref 648194 // Element
      end

      classrelation 3760002 // name (<unidirectional association>)
	relation 3760002 --->
	  a role_name "name" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760002 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 3760130 // value (<unidirectional association>)
	relation 3760130 --->
	  a role_name "value" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3760130 // value (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 9666306 "IIOAttr"
	public explicit_return_type ""
	nparams 3
	  param inout name "owner" type class_ref 648194 // Element
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666434 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666562 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666690 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666818 "getSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9666946 "getValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667074 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667202 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667330 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667458 "getOwnerElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667586 "setOwnerElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9667714 "isId"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This method is new in the DOM L3 for Attr interface.
Could throw DOMException here, but its probably OK
to always return false. One reason for this, is we have no good
way to document this exception, since this class, IIOAttr,
is not a public class. The rest of the methods that throw
DOMException are publically documented as such on IIOMetadataNode.
@return false
"
      end
    end
  end

  deploymentview 140034 "metadata"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 258690 "IIOMetadata"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import java.lang.reflect.Method;
${definition}"
      associated_elems
	class_ref 313730 // IIOMetadata
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 258946 "IIOMetadataFormat"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import javax.imageio.ImageTypeSpecifier;
${definition}"
      associated_elems
	class_ref 315778 // IIOMetadataFormat
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 259074 "IIOMetadataFormatImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.imageio.ImageTypeSpecifier;
import com.sun.imageio.plugins.common.StandardMetadataFormat;
${definition}"
      associated_elems
	class_ref 318082 // IIOMetadataFormatImpl
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 837890 "IIOInvalidTreeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.imageio.IIOException;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 317698 // IIOInvalidTreeException
      end
      comment "Copyright (c) 2000, 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 838018 "IIOMetadataController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 317442 // IIOMetadataController
      end
      comment "Copyright (c) 2000, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 838146 "IIOMetadataNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.DOMException;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.TypeInfo;
import org.w3c.dom.UserDataHandler;
${definition}"
      associated_elems
	class_ref 1176834 // IIODOMException
	class_ref 1176962 // IIONamedNodeMap
	class_ref 1177090 // IIONodeList
	class_ref 1177218 // IIOAttr
	class_ref 317826 // IIOMetadataNode
      end
      comment "Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
