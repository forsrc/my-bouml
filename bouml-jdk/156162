format 222
"javadoc" // jdk1.8::com::sun::javadoc
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/javadoc/"
  java_package "com.sun.javadoc"
  classview 151426 "javadoc"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 480770 "AnnotatedType"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an annotated type.
For example:
<pre>
     {@code @NonNull String}
     {@code @Positive int}
</pre>

@author Mahmood Ali
@since 1.8
"
      classrelation 954114 // <generalisation>
	relation 954114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954114 // <generalisation>
	  b parent class_ref 480898 // Type
      end

      operation 2893698 "annotations"
	public return_type class_ref 481666 // AnnotationDesc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2893826 "underlyingType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 480898 "Type"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a type.  A type can be a class or interface, an
invocation (like {@code List<String>}) of a generic class or interface,
a type variable, a wildcard type (\"<code>?</code>\"),
or a primitive data type (like <code>char</code>).

@since 1.2
@author Kaiyang Liu (original)
@author Robert Field (rewrite)
@author Scott Seligman (generics)
"
      operation 2892034 "typeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return unqualified name of type excluding any dimension information.
<p>
For example, a two dimensional array of String returns
\"<code>String</code>\".
"
      end

      operation 2892162 "qualifiedTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return qualified name of type excluding any dimension information.
<p>
For example, a two dimensional array of String
returns \"<code>java.lang.String</code>\".
"
      end

      operation 2892290 "simpleTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the simple name of this type excluding any dimension information.
This is the unqualified name of the type, except that for nested types
only the identifier of the innermost type is included.
<p>
For example, the class {@code Outer.Inner} returns
\"<code>Inner</code>\".

@since 1.5
"
      end

      operation 2892418 "dimension"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type's dimension information, as a string.
<p>
For example, a two dimensional array of String returns
\"<code>[][]</code>\".
"
      end

      operation 2892546 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string representation of the type.
This includes any dimension information and type arguments.
<p>
For example, a two dimensional array of String may return
\"<code>java.lang.String[][]</code>\",
and the parameterized type {@code List<Integer>} may return
\"{@code java.util.List<java.lang.Integer>}\".

@return a string representation of the type.
"
      end

      operation 2892674 "isPrimitive"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this type represents a primitive type.

@return true if this type represents a primitive type.
@since 1.5
"
      end

      operation 2892802 "asClassDoc"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this type as a <code>ClassDoc</code> if it represents a class
or interface.  Array dimensions are ignored.
If this type is a <code>ParameterizedType</code>,
<code>TypeVariable</code>, or <code>WildcardType</code>, return
the <code>ClassDoc</code> of the type's erasure.  If this is an
<code>AnnotationTypeDoc</code>, return this as a <code>ClassDoc</code>
(but see {@link #asAnnotationTypeDoc()}).
If this is a primitive type, return null.

@return the <code>ClassDoc</code> of this type,
        or null if it is a primitive type.
"
      end

      operation 2892930 "asParameterizedType"
	public return_type class_ref 481154 // ParameterizedType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this type as a <code>ParameterizedType</code> if it represents
an invocation of a generic class or interface.  Array dimensions
are ignored.

@return a <code>ParameterizedType</code> if the type is an
        invocation of a generic type, or null if it is not.
@since 1.5
"
      end

      operation 2893058 "asTypeVariable"
	public return_type class_ref 481282 // TypeVariable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this type as a <code>TypeVariable</code> if it represents
a type variable.  Array dimensions are ignored.

@return a <code>TypeVariable</code> if the type is a type variable,
        or null if it is not.
@since 1.5
"
      end

      operation 2893186 "asWildcardType"
	public return_type class_ref 481410 // WildcardType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this type as a <code>WildcardType</code> if it represents
a wildcard type.

@return a <code>WildcardType</code> if the type is a wildcard type,
        or null if it is not.
@since 1.5
"
      end

      operation 2893314 "asAnnotatedType"
	public return_type class_ref 480770 // AnnotatedType
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this type as a <code>AnnotatedType</code> if it represents
an annotated type.

@return a <code>AnnotatedType</code> if the type if an annotated type,
        or null if it is not
@since 1.8
"
      end

      operation 2893442 "asAnnotationTypeDoc"
	public return_type class_ref 481538 // AnnotationTypeDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return this type as an <code>AnnotationTypeDoc</code> if it represents
an annotation type.  Array dimensions are ignored.

@return an <code>AnnotationTypeDoc</code> if the type is an annotation
        type, or null if it is not.
@since 1.5
"
      end

      operation 2893570 "getElementType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this type is an array type, return the element type of the
array. Otherwise, return null.

@return a <code>Type</code> representing the element type or null.
@since 1.8
"
      end
    end

    class 481026 "ClassDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a java class or interface and provides access to
information about the class, the class's comment and tags, and the
members of the class.  A ClassDoc only exists if it was
processed in this run of javadoc.  References to classes
which may or may not have been processed in this run are
referred to using Type (which can be converted to ClassDoc,
if possible).

@see Type

@since 1.2
@author Kaiyang Liu (original)
@author Robert Field (rewrite)
"
      classrelation 954498 // <generalisation>
	relation 954498 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954498 // <generalisation>
	  b parent class_ref 482178 // ProgramElementDoc
      end

      classrelation 954626 // <generalisation>
	relation 954626 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954626 // <generalisation>
	  b parent class_ref 480898 // Type
      end

      operation 2899202 "isAbstract"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this class is abstract.  Return true
for all interfaces.
"
      end

      operation 2899330 "isSerializable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this class implements or interface extends
<code>java.io.Serializable</code>.

Since <code>java.io.Externalizable</code> extends
<code>java.io.Serializable</code>,
Externalizable objects are also Serializable.
"
      end

      operation 2899458 "isExternalizable"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this class implements or interface extends
<code>java.io.Externalizable</code>.
"
      end

      operation 2899586 "serializationMethods"
	public return_type class_ref 482946 // MethodDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the serialization methods for this class or
interface.

@return an array of MethodDoc objects that represents
        the serialization methods for this class or interface.
"
      end

      operation 2899714 "serializableFields"
	public return_type class_ref 483074 // FieldDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Serializable fields of this class or interface.
<p>
Return either a list of default fields documented by
<code>serial</code> tag<br>
or return a single <code>FieldDoc</code> for
<code>serialPersistentField</code> member.
There should be a <code>serialField</code> tag for
each Serializable field defined by an <code>ObjectStreamField</code>
array component of <code>serialPersistentField</code>.

@return an array of <code>FieldDoc</code> objects for the Serializable
        fields of this class or interface.

@see #definesSerializableFields()
@see SerialFieldTag
"
      end

      operation 2899842 "definesSerializableFields"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return true if Serializable fields are explicitly defined with
 the special class member <code>serialPersistentFields</code>.

@see #serializableFields()
@see SerialFieldTag
"
      end

      operation 2899970 "superclass"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the superclass of this class.  Return null if this is an
interface.

<p> <i>This method cannot accommodate certain generic type constructs.
The <code>superclassType</code> method should be used instead.</i>

@return the ClassDoc for the superclass of this class, null if
        there is no superclass.
@see #superclassType
"
      end

      operation 2900098 "superclassType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the superclass of this class.  Return null if this is an
interface.  A superclass is represented by either a
<code>ClassDoc</code> or a <code>ParametrizedType</code>.

@return the superclass of this class, or null if there is no superclass.
@since 1.5
"
      end

      operation 2900226 "subclassOf"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cd" type class_ref 481026 // ClassDoc
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this class is a subclass of the specified class.
If this is an interface, return false for all classes except
<code>java.lang.Object</code> (we must keep this unexpected
behavior for compatibility reasons).

@param cd the candidate superclass.
@return true if cd is a superclass of this class.
"
      end

      operation 2900354 "interfaces"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return interfaces implemented by this class or interfaces extended
by this interface. Includes only directly-declared interfaces, not
inherited interfaces.
Return an empty array if there are no interfaces.

<p> <i>This method cannot accommodate certain generic type constructs.
The <code>interfaceTypes</code> method should be used instead.</i>

@return an array of ClassDoc objects representing the interfaces.
@see #interfaceTypes
"
      end

      operation 2900482 "interfaceTypes"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return interfaces implemented by this class or interfaces extended
by this interface. Includes only directly-declared interfaces, not
inherited interfaces.
Return an empty array if there are no interfaces.

@return an array of interfaces, each represented by a
        <code>ClassDoc</code> or a <code>ParametrizedType</code>.
@since 1.5
"
      end

      operation 2900610 "typeParameters"
	public return_type class_ref 481282 // TypeVariable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the formal type parameters of this class or interface.
Return an empty array if there are none.

@return the formal type parameters of this class or interface.
@since 1.5
"
      end

      operation 2900738 "typeParamTags"
	public return_type class_ref 483202 // ParamTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type parameter tags of this class or interface.
Return an empty array if there are none.

@return the type parameter tags of this class or interface.
@since 1.5
"
      end

      operation 2900866 "fields"
	public return_type class_ref 483074 // FieldDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
fields in this class or interface.
Excludes enum constants if this is an enum type.

@return an array of FieldDoc objects representing the included
        fields in this class or interface.
"
      end

      operation 2900994 "fields"
	public return_type class_ref 483074 // FieldDoc
	nparams 1
	  param inout name "filter" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return fields in this class or interface, filtered to the specified
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">access
modifier option</a>.
Excludes enum constants if this is an enum type.

@param filter Specify true to filter according to the specified access
              modifier option.
              Specify false to include all fields regardless of
              access modifier option.
@return       an array of FieldDoc objects representing the included
              fields in this class or interface.
"
      end

      operation 2901122 "enumConstants"
	public return_type class_ref 483074 // FieldDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the enum constants if this is an enum type.
Return an empty array if there are no enum constants, or if
this is not an enum type.

@return the enum constants if this is an enum type.
"
      end

      operation 2901250 "methods"
	public return_type class_ref 482946 // MethodDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
methods in this class or interface.
Same as <code>methods(true)</code>.

@return an array of MethodDoc objects representing the included
        methods in this class or interface.  Does not include
        constructors or annotation type elements.
"
      end

      operation 2901378 "methods"
	public return_type class_ref 482946 // MethodDoc
	nparams 1
	  param inout name "filter" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return methods in this class or interface, filtered to the specified
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">access
modifier option</a>.  Does not include constructors or annotation
         type elements.

@param filter Specify true to filter according to the specified access
              modifier option.
              Specify false to include all methods regardless of
              access modifier option.
@return       an array of MethodDoc objects representing the included
              methods in this class or interface.
"
      end

      operation 2901506 "constructors"
	public return_type class_ref 483330 // ConstructorDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
constructors in this class.  An array containing the default
no-arg constructor is returned if no other constructors exist.
Return empty array if this is an interface.

@return an array of ConstructorDoc objects representing the included
        constructors in this class.
"
      end

      operation 2901634 "constructors"
	public return_type class_ref 483330 // ConstructorDoc
	nparams 1
	  param inout name "filter" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return constructors in this class, filtered to the specified
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">access
modifier option</a>.  Return an array containing the default
no-arg constructor if no other constructors exist.

@param filter Specify true to filter according to the specified access
              modifier option.
              Specify false to include all constructors regardless of
              access modifier option.
@return       an array of ConstructorDoc objects representing the included
              constructors in this class.
"
      end

      operation 2901762 "innerClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
nested classes and interfaces within this class or interface.
This includes both static and non-static nested classes.
(This method should have been named <code>nestedClasses()</code>,
as inner classes are technically non-static.)  Anonymous and local classes
or interfaces are not included.

@return an array of ClassDoc objects representing the included classes
        and interfaces defined in this class or interface.
"
      end

      operation 2901890 "innerClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 1
	  param inout name "filter" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return nested classes and interfaces within this class or interface
filtered to the specified
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">access
modifier option</a>.
This includes both static and non-static nested classes.
Anonymous and local classes are not included.

@param filter Specify true to filter according to the specified access
              modifier option.
              Specify false to include all nested classes regardless of
              access modifier option.
@return       a filtered array of ClassDoc objects representing the included
              classes and interfaces defined in this class or interface.
"
      end

      operation 2902018 "findClass"
	public return_type class_ref 481026 // ClassDoc
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the specified class or interface within the context of this class doc.
Search order: 1) qualified name, 2) nested in this class or interface,
3) in this package, 4) in the class imports, 5) in the package imports.
Return the ClassDoc if found, null if not found.
"
      end

      operation 2902146 "importedClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Get the list of classes and interfaces declared as imported.
These are called \"single-type-import declarations\" in
<cite>The Java&trade; Language Specification</cite>.

@return an array of ClassDoc representing the imported classes.

@deprecated  Import declarations are implementation details that
         should not be exposed here.  In addition, not all imported
         classes are imported through single-type-import declarations.
"
      end

      operation 2902274 "importedPackages"
	public return_type class_ref 482818 // PackageDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Get the list of packages declared as imported.
These are called \"type-import-on-demand declarations\" in
<cite>The Java&trade; Language Specification</cite>.

@return an array of PackageDoc representing the imported packages.

@deprecated  Import declarations are implementation details that
         should not be exposed here.  In addition, this method's
         return type does not allow for all type-import-on-demand
         declarations to be returned.
"
      end
    end

    class 481154 "ParameterizedType"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an invocation of a generic class or interface.  For example,
given the generic interface {@code List<E>}, possible invocations
include:
<pre>
     {@code List<String>}
     {@code List<T extends Number>}
     {@code List<?>}
</pre>
A generic inner class {@code Outer<T>.Inner<S>} might be invoked as:
<pre>
     {@code Outer<Number>.Inner<String>}
</pre>

@author Scott Seligman
@since 1.5
"
      classrelation 955778 // <generalisation>
	relation 955778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955778 // <generalisation>
	  b parent class_ref 480898 // Type
      end

      operation 2909570 "asClassDoc"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the generic class or interface that declared this type.

@return the generic class or interface that declared this type.
"
      end

      operation 2909698 "typeArguments"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual type arguments of this type.
For a generic type that is nested within some other generic type
(such as {@code Outer<T>.Inner<S>}),
only the type arguments of the innermost type are included.

@return the actual type arguments of this type.
"
      end

      operation 2909826 "superclassType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class type that is a direct supertype of this one.
This is the superclass of this type's declaring class,
with type arguments substituted in.
Return null if this is an interface type.

<p> For example, if this parameterized type is
{@code java.util.ArrayList<String>}, the result will be
{@code java.util.AbstractList<String>}.

@return the class type that is a direct supertype of this one.
"
      end

      operation 2909954 "interfaceTypes"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the interface types directly implemented by or extended by this
parameterized type.
These are the interfaces directly implemented or extended
by this type's declaring class or interface,
with type arguments substituted in.
Return an empty array if there are no interfaces.

<p> For example, the interface extended by
{@code java.util.Set<String>} is {@code java.util.Collection<String>}.

@return the interface types directly implemented by or extended by this
parameterized type.
"
      end

      operation 2910082 "containingType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type that contains this type as a member.
Return null is this is a top-level type.

<p> For example, the containing type of
{@code AnInterface.Nested<Number>} is the <code>ClassDoc</code>
representing {@code AnInterface}, and the containing type of
{@code Outer<String>.Inner<Number>} is the
<code>ParameterizedType</code> representing {@code Outer<String>}.

@return the type that contains this type as a member.
"
      end
    end

    class 481282 "TypeVariable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a type variable.
For example, the generic interface {@code List<E>} has a single
type variable {@code E}.
A type variable may have explicit bounds, as in
{@code C<R extends Remote>}.

@author Scott Seligman
@since 1.5
"
      classrelation 956802 // <generalisation>
	relation 956802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956802 // <generalisation>
	  b parent class_ref 480898 // Type
      end

      operation 2914818 "bounds"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the bounds of this type variable.
These are the types given by the <i>extends</i> clause.
Return an empty array if there are no explicit bounds.

@return the bounds of this type variable.
"
      end

      operation 2914946 "owner"
	public return_type class_ref 482178 // ProgramElementDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class, interface, method, or constructor within
which this type variable is declared.

@return the class, interface, method, or constructor within
        which this type variable is declared.
"
      end

      operation 2915074 "annotations"
	public return_type class_ref 481666 // AnnotationDesc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the annotations of this program element.
Return an empty array if there are none.
"
      end
    end

    class 481410 "WildcardType"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a wildcard type argument.
Examples include:    <pre>
{@code <?>}
{@code <? extends E>}
{@code <? super T>}
</pre>
A wildcard type can have explicit <i>extends</i> bounds
or explicit <i>super</i> bounds or neither, but not both.

@author Scott Seligman
@since 1.5
"
      classrelation 956930 // <generalisation>
	relation 956930 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956930 // <generalisation>
	  b parent class_ref 480898 // Type
      end

      operation 2915202 "extendsBounds"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the upper bounds of this wildcard type argument
as given by the <i>extends</i> clause.
Return an empty array if no such bounds are explicitly given.

@return the extends bounds of this wildcard type argument
"
      end

      operation 2915330 "superBounds"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the lower bounds of this wildcard type argument
as given by the <i>super</i> clause.
Return an empty array if no such bounds are explicitly given.

@return the super bounds of this wildcard type argument
"
      end
    end

    class 481538 "AnnotationTypeDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an annotation type.

@author Scott Seligman
@since 1.5
"
      classrelation 954754 // <generalisation>
	relation 954754 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954754 // <generalisation>
	  b parent class_ref 481026 // ClassDoc
      end

      operation 2902402 "elements"
	public return_type class_ref 481922 // AnnotationTypeElementDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the elements of this annotation type.
Returns an empty array if there are none.

@return the elements of this annotation type.
"
      end
    end

    class 481666 "AnnotationDesc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an annotation.
An annotation associates a value with each element of an annotation type.

@author Scott Seligman
@since 1.5
"
      operation 2893954 "annotationType"
	public return_type class_ref 481538 // AnnotationTypeDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the annotation type of this annotation.

@return the annotation type of this annotation.
"
      end

      class 481794 "ElementValuePair"
	visibility public stereotype "interface"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 2894338 "element"
	  public return_type class_ref 481922 // AnnotationTypeElementDoc
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the annotation type element.

@return the annotation type element.
"
	end

	operation 2894466 "value"
	  public return_type class_ref 482050 // AnnotationValue
	  nparams 0
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value associated with the annotation type element.

@return the value associated with the annotation type element.
"
	end
      end

      operation 2894082 "elementValues"
	public return_type class_ref 481794 // ElementValuePair
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this annotation's elements and their values.
Only those explicitly present in the annotation are
included, not those assuming their default values.
Returns an empty array if there are none.

@return this annotation's elements and their values.
"
      end

      operation 2894210 "isSynthesized"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check for the synthesized bit on the annotation.

@return true if the annotation is synthesized.
"
      end
    end

    class 481922 "AnnotationTypeElementDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an element of an annotation type.

@author Scott Seligman
@since 1.5
"
      classrelation 955266 // <generalisation>
	relation 955266 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955266 // <generalisation>
	  b parent class_ref 482946 // MethodDoc
      end

      operation 2905218 "defaultValue"
	public return_type class_ref 482050 // AnnotationValue
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default value of this element.
Returns null if this element has no default.

@return the default value of this element.
"
      end
    end

    class 482050 "AnnotationValue"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a value of an annotation type element.

@author Scott Seligman
@since 1.5
"
      operation 2905346 "value"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value.
The type of the returned object is one of the following:
<ul><li> a wrapper class for a primitive type
    <li> <code>String</code>
    <li> <code>Type</code> (representing a class literal)
    <li> <code>FieldDoc</code> (representing an enum constant)
    <li> <code>AnnotationDesc</code>
    <li> <code>AnnotationValue[]</code>
</ul>

@return the value.
"
      end

      operation 2905474 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the value.

@return the text of a Java language annotation value expression
         whose value is the value of this element.
"
      end
    end

    class 482178 "ProgramElementDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a java program element: class, interface, field,
constructor, or method.
This is an abstract class dealing with information common to
these elements.

@see MemberDoc
@see ClassDoc

@author Robert Field
"
      classrelation 954370 // <generalisation>
	relation 954370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954370 // <generalisation>
	  b parent class_ref 482306 // Doc
      end

      operation 2897666 "containingClass"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the containing class or interface of this program element.

@return a ClassDoc for this element's containing class or interface.
If this is a top-level class or interface, return null.
"
      end

      operation 2897794 "containingPackage"
	public return_type class_ref 482818 // PackageDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package that this program element is contained in.

@return a PackageDoc for this element containing package.
If in the unnamed package, this PackageDoc will have the
name \"\".
"
      end

      operation 2897922 "qualifiedName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the fully qualified name of this program element.
For example, for the class <code>java.util.Hashtable</code>,
return \"java.util.Hashtable\".
<p>
For the method <code>bar()</code> in class <code>Foo</code>
in the unnamed package, return \"Foo.bar\".

@return the qualified name of the program element as a String.
"
      end

      operation 2898050 "modifierSpecifier"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the modifier specifier integer.

@see java.lang.reflect.Modifier
"
      end

      operation 2898178 "modifiers"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get modifiers string.
For example, for:
<pre>
  public abstract int foo() { ... }
</pre>
return \"public abstract\".
Annotations are not included.
"
      end

      operation 2898306 "annotations"
	public return_type class_ref 481666 // AnnotationDesc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the annotations of this program element.
Return an empty array if there are none.

@return the annotations of this program element.
@since 1.5
"
      end

      operation 2898434 "isPublic"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is public.
"
      end

      operation 2898562 "isProtected"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is protected.
"
      end

      operation 2898690 "isPrivate"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is private.
"
      end

      operation 2898818 "isPackagePrivate"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is package private.
"
      end

      operation 2898946 "isStatic"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is static.
"
      end

      operation 2899074 "isFinal"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this program element is final.
"
      end
    end

    class 482306 "Doc"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents Java language constructs (package, class, constructor,
method, field) which have comments and have been processed by this
run of javadoc.  All Doc objects are unique, that is, they
are == comparable.

@since 1.2
@author Robert Field
@author Scott Seligman (generics, enums, annotations)
"
      classrelation 954242 // <realization>
	relation 954242 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 954242 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      operation 2894594 "commentText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the text of the comment for this doc item.
Tags have been removed.
"
      end

      operation 2894722 "tags"
	public return_type class_ref 482434 // Tag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return all tags in this Doc item.

@return an array of {@link Tag} objects containing all tags on
        this Doc item.
"
      end

      operation 2894850 "tags"
	public return_type class_ref 482434 // Tag
	nparams 1
	  param inout name "tagname" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return tags of the specified {@linkplain Tag#kind() kind} in
this Doc item.

For example, if 'tagname' has value \"@serial\", all tags in
this Doc item of kind \"@serial\" will be returned.

@param tagname name of the tag kind to search for.
@return an array of Tag containing all tags whose 'kind()'
matches 'tagname'.
"
      end

      operation 2894978 "seeTags"
	public return_type class_ref 482562 // SeeTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the see also tags in this Doc item.

@return an array of SeeTag containing all @see tags.
"
      end

      operation 2895106 "inlineTags"
	public return_type class_ref 482434 // Tag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return comment as an array of tags. Includes inline tags
(i.e. {&#64;link <i>reference</i>} tags)  but not
block tags.
Each section of plain text is represented as a {@link Tag}
of {@linkplain Tag#kind() kind} \"Text\".
Inline tags are represented as a {@link SeeTag} of kind \"@see\"
and name \"@link\".

@return an array of {@link Tag}s representing the comment
"
      end

      operation 2895234 "firstSentenceTags"
	public return_type class_ref 482434 // Tag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first sentence of the comment as an array of tags.
Includes inline tags
(i.e. {&#64;link <i>reference</i>} tags)  but not
block tags.
Each section of plain text is represented as a {@link Tag}
of {@linkplain Tag#kind() kind} \"Text\".
Inline tags are represented as a {@link SeeTag} of kind \"@see\"
and name \"@link\".
<p>
If the locale is English language, the first sentence is
determined by the rules described in the Java Language
Specification (first version): &quot;This sentence ends
at the first period that is followed by a blank, tab, or
line terminator or at the first tagline.&quot;, in
addition a line will be terminated by block
HTML tags: &lt;p&gt;  &lt;/p&gt;  &lt;h1&gt;
&lt;h2&gt;  &lt;h3&gt; &lt;h4&gt;  &lt;h5&gt;  &lt;h6&gt;
&lt;hr&gt;  &lt;pre&gt;  or &lt;/pre&gt;.
If the locale is not English, the sentence end will be
determined by
{@link BreakIterator#getSentenceInstance(Locale)}.

@return an array of {@link Tag}s representing the
first sentence of the comment
"
      end

      operation 2895362 "getRawCommentText"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the full unprocessed text of the comment.  Tags
are included as text.  Used mainly for store and retrieve
operations like internalization.
"
      end

      operation 2895490 "setRawCommentText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rawDocumentation" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the full unprocessed text of the comment.  Tags
are included as text.  Used mainly for store and retrieve
operations like internalization.
"
      end

      operation 2895618 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the non-qualified name of this Doc item.

@return  the name
"
      end

      operation 2895746 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this doc object with the specified object for order.  Returns a
negative integer, zero, or a positive integer as this doc object is less
than, equal to, or greater than the given object.
<p>
This method satisfies the {@link java.lang.Comparable} interface.

@param   obj  the <code>Object</code> to be compared.
@return  a negative integer, zero, or a positive integer as this Object
     is less than, equal to, or greater than the given Object.
@exception ClassCastException the specified Object's type prevents it
       from being compared to this Object.
"
      end

      operation 2895874 "isField"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item a field (but not an enum constant)?

@return true if it represents a field
"
      end

      operation 2896002 "isEnumConstant"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an enum constant?

@return true if it represents an enum constant
@since 1.5
"
      end

      operation 2896130 "isConstructor"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item a constructor?

@return true if it represents a constructor
"
      end

      operation 2896258 "isMethod"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item a method (but not a constructor or annotation
type element)?

@return true if it represents a method
"
      end

      operation 2896386 "isAnnotationTypeElement"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an annotation type element?

@return true if it represents an annotation type element
@since 1.5
"
      end

      operation 2896514 "isInterface"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an interface (but not an annotation type)?

@return true if it represents an interface
"
      end

      operation 2896642 "isException"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an exception class?

@return true if it represents an exception
"
      end

      operation 2896770 "isError"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an error class?

@return true if it represents a error
"
      end

      operation 2896898 "isEnum"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an enum type?

@return true if it represents an enum type
@since 1.5
"
      end

      operation 2897026 "isAnnotationType"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an annotation type?

@return true if it represents an annotation type
@since 1.5
"
      end

      operation 2897154 "isOrdinaryClass"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item an
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#class\">ordinary
class</a>?
(i.e. not an interface, annotation type, enum, exception, or error)?

@return true if it represents an ordinary class
"
      end

      operation 2897282 "isClass"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this Doc item a
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#class\">class</a>
(and not an interface or annotation type)?
This includes ordinary classes, enums, errors and exceptions.

@return true if it represents a class
"
      end

      operation 2897410 "isIncluded"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this Doc item is
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
in the result set.
"
      end

      operation 2897538 "position"
	public return_type class_ref 482690 // SourcePosition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the source position of the first line of the
corresponding declaration, or null if
no position is available.  A default constructor returns
null because it has no location in the source file.

@since 1.4
"
      end
    end

    class 482434 "Tag"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a simple documentation tag, such as @since, @author, @version.
Given a tag (e.g. \"@since 1.2\"), holds tag name (e.g. \"@since\")
and tag text (e.g. \"1.2\").  Tags with structure or which require
special processing are handled by subclasses such as ParamTag
(for @param), SeeTag (for @see and {&#064;link}), and ThrowsTag
(for @throws).

@author Robert Field
@author Atul M Dambalkar
@see SeeTag
@see ParamTag
@see ThrowsTag
@see SerialFieldTag
@see Doc#tags()

"
      operation 2910210 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of this tag.  The name is the string
starting with \"@\" that is used in a doc comment, such as
<code>@return</code>.  For inline tags, such as
<code>{&#064;link}</code>, the curly brackets
are not part of the name, so in this example the name
would be simply <code>@link</code>.

@return the name of this tag
"
      end

      operation 2910338 "holder"
	public return_type class_ref 482306 // Doc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the containing {@link Doc} of this Tag element.

@return the containing {@link Doc} of this Tag element
"
      end

      operation 2910466 "kind"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the kind of this tag.
For most tags,
<code>kind()&nbsp;==&nbsp;name()</code>;
the following table lists those cases where there is more
than one tag of a given kind:

<table border=\"1\" cellpadding=\"4\" cellspacing=\"0\" summary=\"related tags\">
<tr><th>{@code kind()  }</th>  <th>{@code name()      }</th></tr>
<tr><td>{@code @throws }</td>  <td>{@code @throws     }</td></tr>
<tr><td>{@code @throws }</td>  <td>{@code @exception  }</td></tr>
<tr><td>{@code @see    }</td>  <td>{@code @see        }</td></tr>
<tr><td>{@code @see    }</td>  <td>{@code @link       }</td></tr>
<tr><td>{@code @see    }</td>  <td>{@code @linkplain  }</td></tr>
<tr><td>{@code @serial }</td>  <td>{@code @serial     }</td></tr>
<tr><td>{@code @serial }</td>  <td>{@code @serialData }</td></tr>
</table>

@return the kind of this tag.
"
      end

      operation 2910594 "text"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the text of this tag, that is, the portion beyond tag name.

@return the text of this tag
"
      end

      operation 2910722 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert this object to a string.
"
      end

      operation 2910850 "inlineTags"
	public return_type class_ref 482434 // Tag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For a documentation comment with embedded <code>{&#064;link}</code>
tags, return an array of <code>Tag</code> objects.  The entire
doc comment is broken down into strings separated by
<code>{&#064;link}</code> tags, where each successive element
of the array represents either a string or
<code>{&#064;link}</code> tag, in order, from start to end.
Each string is represented by a <code>Tag</code> object of
name \"Text\", where {@link #text()} returns the string.  Each
<code>{&#064;link}</code> tag is represented by a
{@link SeeTag} of name \"@link\" and kind \"@see\".
For example, given the following comment
tag:
<p>
 <code>This is a {&#064;link Doc commentlabel} example.</code>
<p>
return an array of Tag objects:
<ul>
   <li> tags[0] is a {@link Tag} with name \"Text\" and text consisting
        of \"This is a \"
   <li> tags[1] is a {@link SeeTag} with name \"@link\", referenced
        class <code>Doc</code> and label \"commentlabel\"
   <li> tags[2] is a {@link Tag} with name \"Text\" and text consisting
        of \" example.\"
</ul>

@return Tag[] array of tags
@see ParamTag
@see ThrowsTag
"
      end

      operation 2910978 "firstSentenceTags"
	public return_type class_ref 482434 // Tag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first sentence of the comment as an array of tags.
Includes inline tags
(i.e. {&#64;link <i>reference</i>} tags)  but not
block tags.
Each section of plain text is represented as a {@link Tag}
of kind \"Text\".
Inline tags are represented as a {@link SeeTag} of kind \"@link\".
If the locale is English language, the first sentence is
determined by the rules described in the Java Language
Specification (first version): &quot;This sentence ends
at the first period that is followed by a blank, tab, or
line terminator or at the first tagline.&quot;, in
addition a line will be terminated by paragraph and
section terminating HTML tags: &lt;p&gt;  &lt;/p&gt;  &lt;h1&gt;
&lt;h2&gt;  &lt;h3&gt; &lt;h4&gt;  &lt;h5&gt;  &lt;h6&gt;
&lt;hr&gt;  &lt;pre&gt;  or &lt;/pre&gt;.
If the locale is not English, the sentence end will be
determined by
{@link BreakIterator#getSentenceInstance(Locale)}.

@return an array of {@link Tag} objects representing the
        first sentence of the comment
"
      end

      operation 2911106 "position"
	public return_type class_ref 482690 // SourcePosition
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the source position of this tag.
@return the source position of this tag.
"
      end
    end

    class 482562 "SeeTag"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a user-defined cross-reference to related documentation.
The tag can reference a package, class or member, or can hold
plain text.  (The plain text might be a reference
to something not online, such as a printed book, or be a hard-coded
HTML link.)  The reference can either be inline with the comment,
using <code>&#123;@link}</code>, or a separate block comment,
using <code>@see</code>.
Method <code>name()</code> returns \"@link\" (no curly braces) or
\"@see\", depending on the tag.
Method <code>kind()</code> returns \"@see\" for both tags.

@author Kaiyang Liu (original)
@author Robert Field (rewrite)
@author Atul M Dambalkar

"
      classrelation 956290 // <generalisation>
	relation 956290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956290 // <generalisation>
	  b parent class_ref 482434 // Tag
      end

      operation 2912386 "label"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the label of the <code>@see</code> tag.
Return null if no label is present.
For example, for:
<p>
   &nbsp;&nbsp;<code>@see String#trim() the trim method</code>
</p>
return \"the trim method\".
"
      end

      operation 2912514 "referencedPackage"
	public return_type class_ref 482818 // PackageDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package doc when <code>@see</code> references only a package.
Return null if the package cannot be found, or if
<code>@see</code> references any other element (class,
interface, field, constructor, method) or non-element.
For example, for:
<p>
  &nbsp;&nbsp;<code>@see java.lang</code>
</p>
return the <code>PackageDoc</code> for <code>java.lang</code>.
"
      end

      operation 2912642 "referencedClassName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the class or interface name of the <code>@see</code> reference.
The name is fully qualified if the name specified in the
original <code>@see</code> tag was fully qualified, or if the class
or interface can be found; otherwise it is unqualified.
If <code>@see</code> references only a package name, then return
the package name instead.
For example, for:
<p>
  &nbsp;&nbsp;<code>@see String#valueOf(java.lang.Object)</code>
</p>
return \"java.lang.String\".
For \"<code>@see java.lang</code>\", return \"java.lang\".
Return null if <code>@see</code> references a non-element, such as
<code>@see &lt;a href=\"java.sun.com\"&gt;</code>.
"
      end

      operation 2912770 "referencedClass"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the class doc referenced by the class name part of @see.
Return null if the class cannot be found.
For example, for:
<p>
  &nbsp;&nbsp;<code>@see String#valueOf(java.lang.Object)</code>
</p>
return the <code>ClassDoc</code> for <code>java.lang.String</code>.
"
      end

      operation 2912898 "referencedMemberName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the field, constructor or method substring of the <code>@see</code>
reference. Return null if the reference is to any other
element or to any non-element.
References to member classes (nested classes) return null.
For example, for:
<p>
  &nbsp;&nbsp;<code>@see String#startsWith(String)</code>
</p>
return \"startsWith(String)\".
"
      end

      operation 2913026 "referencedMember"
	public return_type class_ref 483586 // MemberDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the member doc for the field, constructor or method
referenced by <code>@see</code>. Return null if the member cannot
be found or if the reference is to any other element or to any
non-element.
References to member classes (nested classes) return null.
For example, for:
<p>
  &nbsp;&nbsp;<code>@see String#startsWith(java.lang.String)</code>
</p>
return the <code>MethodDoc</code> for <code>startsWith</code>.
"
      end
    end

    class 482690 "SourcePosition"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface describes a source position: filename, line number,
and column number.

@since 1.4
@author Neal M Gafter
"
      operation 2913794 "file"
	public return_type class_ref 131970 // File
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The source file. Returns null if no file information is
 available. "
      end

      operation 2913922 "line"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The line in the source file. The first line is numbered 1;
 0 means no line number information is available. "
      end

      operation 2914050 "column"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The column in the source file. The first column is
 numbered 1; 0 means no column information is available.
 Columns count characters in the input stream; a tab
 advances the column number to the next 8-column tab stop.
"
      end

      operation 2914178 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convert the source position to the form \"Filename:line\". "
      end
    end

    class 482818 "PackageDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a java package.  Provides access to information
about the package, the package's comment and tags, and the
classes in the package.
<p>
Each method whose return type is an array will return an empty
array (never null) when there are no objects in the result.

@since 1.2
@author Kaiyang Liu (original)
@author Robert Field (rewrite)
"
      classrelation 955650 // <generalisation>
	relation 955650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955650 // <generalisation>
	  b parent class_ref 482306 // Doc
      end

      operation 2907650 "allClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 1
	  param inout name "filter" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get all classes and interfaces in the package, filtered to the specified
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">access
modifier option</a>.

@return       filtered classes and interfaces in this package
@param filter Specifying true filters according to the specified access
              modifier option.
              Specifying false includes all classes and interfaces
              regardless of access modifier option.
@since 1.4
"
      end

      operation 2907778 "allClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get all
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#included\">included</a>
classes and interfaces in the package.  Same as allClasses(true).

@return all included classes and interfaces in this package.
"
      end

      operation 2907906 "ordinaryClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included
<a href=\"{@docRoot}/com/sun/javadoc/package-summary.html#class\">ordinary</a>
classes (that is, exclude exceptions, errors, enums, interfaces, and
annotation types)
in this package.

@return included ordinary classes in this package.
"
      end

      operation 2908034 "exceptions"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included Exception classes in this package.

@return included Exceptions in this package.
"
      end

      operation 2908162 "errors"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included Error classes in this package.

@return included Errors in this package.
"
      end

      operation 2908290 "enums"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included enum types in this package.

@return included enum types in this package.
@since 1.5
"
      end

      operation 2908418 "interfaces"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included interfaces in this package, omitting annotation types.

@return included interfaces in this package.
"
      end

      operation 2908546 "annotationTypes"
	public return_type class_ref 481538 // AnnotationTypeDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get included annotation types in this package.

@return included annotation types in this package.
@since 1.5
"
      end

      operation 2908674 "annotations"
	public return_type class_ref 481666 // AnnotationDesc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the annotations of this package.
Return an empty array if there are none.

@return the annotations of this package.
@since 1.5
"
      end

      operation 2908802 "findClass"
	public return_type class_ref 481026 // ClassDoc
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lookup a class or interface within this package.

@return ClassDoc of found class or interface,
or null if not found.
"
      end
    end

    class 482946 "MethodDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a method of a java class.

@since 1.2
@author Robert Field
"
      classrelation 955138 // <generalisation>
	relation 955138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955138 // <generalisation>
	  b parent class_ref 483458 // ExecutableMemberDoc
      end

      operation 2904322 "isAbstract"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this method is abstract
"
      end

      operation 2904450 "isDefault"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this method is default
"
      end

      operation 2904578 "returnType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get return type.

@return the return type of this method, null if it
is a constructor.
"
      end

      operation 2904706 "overriddenClass"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class containing the method that this method overrides.

<p> <i>The <code>overriddenClass</code> method cannot
accommodate certain generic type constructs.  The
<code>overriddenType</code> method should be used instead.</i>

@return a ClassDoc representing the superclass
        defining a method that this method overrides, or null if
        this method does not override.
"
      end

      operation 2904834 "overriddenType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type containing the method that this method overrides.
It may be a <code>ClassDoc</code> or a <code>ParameterizedType</code>.

@return the supertype whose method is overridden, or null if this
        method does not override another in a superclass
@since 1.5
"
      end

      operation 2904962 "overriddenMethod"
	public return_type class_ref 482946 // MethodDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the method that this method overrides.

@return a MethodDoc representing a method definition
in a superclass this method overrides, null if
this method does not override.
"
      end

      operation 2905090 "overrides"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "meth" type class_ref 482946 // MethodDoc
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this method overrides another.
The overridden method may be one declared in a superclass or
a superinterface (unlike {@link #overriddenMethod()}).

<p> When a non-abstract method overrides an abstract one, it is
also said to <i>implement</i> the other.

@param meth  the other method to examine
@return <tt>true</tt> if this method overrides the other
@since 1.5
"
      end
    end

    class 483074 "FieldDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a field in a java class.

@see MemberDoc

@since 1.2
@author Robert Field
"
      classrelation 955522 // <generalisation>
	relation 955522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955522 // <generalisation>
	  b parent class_ref 483586 // MemberDoc
      end

      operation 2906882 "type"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get type of this field.
"
      end

      operation 2907010 "isTransient"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this field is transient
"
      end

      operation 2907138 "isVolatile"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this field is volatile
"
      end

      operation 2907266 "serialFieldTags"
	public return_type class_ref 484482 // SerialFieldTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the serialField tags in this FieldDoc item.

@return an array of <tt>SerialFieldTag</tt> objects containing
        all <code>@serialField</code> tags.
"
      end

      operation 2907394 "constantValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of a constant field.

@return the value of a constant field. The value is
automatically wrapped in an object if it has a primitive type.
If the field is not constant, returns null.
"
      end

      operation 2907522 "constantValueExpression"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of a constant field.

@return the text of a Java language expression whose value
is the value of the constant. The expression uses no identifiers
other than primitive literals. If the field is
not constant, returns null.
"
      end
    end

    class 483202 "ParamTag"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an @param documentation tag.
Stores the name and comment parts of the parameter tag.
An @param tag may represent either a method or constructor parameter,
or a type parameter.

@author Robert Field

"
      classrelation 955906 // <generalisation>
	relation 955906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955906 // <generalisation>
	  b parent class_ref 482434 // Tag
      end

      operation 2911234 "parameterName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the parameter or type parameter
associated with this <code>ParamTag</code>.
The angle brackets delimiting a type parameter are not part of
its name.

@return the parameter name.
"
      end

      operation 2911362 "parameterComment"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the parameter comment
associated with this <code>ParamTag</code>.

@return the parameter comment.
"
      end

      operation 2911490 "isTypeParameter"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this <code>ParamTag</code> corresponds to a type
parameter.  Return false if it corresponds to an ordinary parameter
of a method or constructor.

@return true if this <code>ParamTag</code> corresponds to a type
parameter.
@since 1.5
"
      end
    end

    class 483330 "ConstructorDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a constructor of a java class.

@since 1.2
@author Robert Field
"
      classrelation 955394 // <generalisation>
	relation 955394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955394 // <generalisation>
	  b parent class_ref 483458 // ExecutableMemberDoc
      end
    end

    class 483458 "ExecutableMemberDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a method or constructor of a java class.

@since 1.2
@author Robert Field
"
      classrelation 955010 // <generalisation>
	relation 955010 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 955010 // <generalisation>
	  b parent class_ref 483586 // MemberDoc
      end

      operation 2902658 "thrownExceptions"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return exceptions this method or constructor throws.
If the type of the exception is a type variable, return the
<code>ClassDoc</code> of its erasure.

<p> <i>The <code>thrownExceptions</code> method cannot
accommodate certain generic type constructs.  The
<code>thrownExceptionTypes</code> method should be used
instead.</i>

@return an array of ClassDoc[] representing the exceptions
        thrown by this method.
@see #thrownExceptionTypes
"
      end

      operation 2902786 "thrownExceptionTypes"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return exceptions this method or constructor throws.

@return an array representing the exceptions thrown by this method.
        Each array element is either a <code>ClassDoc</code> or a
        <code>TypeVariable</code>.
@since 1.5
"
      end

      operation 2902914 "isNative"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this method is native
"
      end

      operation 2903042 "isSynchronized"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this method is synchronized
"
      end

      operation 2903170 "isVarArgs"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this method was declared to take a variable number
of arguments.

@since 1.5
"
      end

      operation 2903298 "parameters"
	public return_type class_ref 483714 // Parameter
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get argument information.

@see Parameter

@return an array of Parameter, one element per argument
in the order the arguments are present.
"
      end

      operation 2903426 "receiverType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the receiver type of this executable element.

@return the receiver type of this executable element.
@since 1.8
"
      end

      operation 2903554 "throwsTags"
	public return_type class_ref 483842 // ThrowsTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the throws tags in this method.

@return an array of ThrowTag containing all <code>&#64;exception</code>
and <code>&#64;throws</code> tags.
"
      end

      operation 2903682 "paramTags"
	public return_type class_ref 483202 // ParamTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the param tags in this method, excluding the type
parameter tags.

@return an array of ParamTag containing all <code>&#64;param</code> tags
corresponding to the parameters of this method.
"
      end

      operation 2903810 "typeParamTags"
	public return_type class_ref 483202 // ParamTag
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type parameter tags in this method.

@return an array of ParamTag containing all <code>&#64;param</code> tags
corresponding to the type parameters of this method.
@since 1.5
"
      end

      operation 2903938 "signature"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the signature. It is the parameter list, type is qualified.
     For instance, for a method <code>mymethod(String x, int y)</code>,
     it will return <code>(java.lang.String,int)</code>.
"
      end

      operation 2904066 "flatSignature"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get flat signature.  all types are not qualified.
     return a String, which is the flat signiture of this member.
     It is the parameter list, type is not qualified.
     For instance, for a method <code>mymethod(String x, int y)</code>,
     it will return <code>(String, int)</code>.
"
      end

      operation 2904194 "typeParameters"
	public return_type class_ref 481282 // TypeVariable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the formal type parameters of this method or constructor.
Return an empty array if this method or constructor is not generic.

@return the formal type parameters of this method or constructor.
@since 1.5
"
      end
    end

    class 483586 "MemberDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a member of a java class: field, constructor, or method.
This is an abstract class dealing with information common to
method, constructor and field members. Class members of a class
(innerclasses) are represented instead by ClassDoc.

@see MethodDoc
@see FieldDoc
@see ClassDoc

@author Kaiyang Liu (original)
@author Robert Field (rewrite)
"
      classrelation 954882 // <generalisation>
	relation 954882 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 954882 // <generalisation>
	  b parent class_ref 482178 // ProgramElementDoc
      end

      operation 2902530 "isSynthetic"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this member was synthesized by the compiler.
"
      end
    end

    class 483714 "Parameter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Parameter information.
This includes a parameter type and parameter name.

@author Robert Field
"
      operation 2908930 "type"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the type of this parameter.
"
      end

      operation 2909058 "name"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get local name of this parameter.
For example if parameter is the short 'index', returns \"index\".
"
      end

      operation 2909186 "typeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get type name of this parameter.
For example if parameter is the short 'index', returns \"short\".
<p>
This method returns a complete string
representation of the type, including the dimensions of arrays and
the type arguments of parameterized types.  Names are qualified.
"
      end

      operation 2909314 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of the parameter.
<p>
For example if parameter is the short 'index', returns \"short index\".

@return type and parameter name of this parameter.
"
      end

      operation 2909442 "annotations"
	public return_type class_ref 481666 // AnnotationDesc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the annotations of this parameter.
Return an empty array if there are none.

@return the annotations of this parameter.
@since 1.5
"
      end
    end

    class 483842 "ThrowsTag"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a @throws or @exception documentation tag.
Parses and holds the exception name and exception comment.
Note: @exception is a backwards compatible synonymy for @throws.

@author Robert Field
@author Atul M Dambalkar
@see ExecutableMemberDoc#throwsTags()

"
      classrelation 956674 // <generalisation>
	relation 956674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956674 // <generalisation>
	  b parent class_ref 482434 // Tag
      end

      operation 2914306 "exceptionName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the exception
associated with this <code>ThrowsTag</code>.

@return name of the exception.
"
      end

      operation 2914434 "exceptionComment"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the exception comment
associated with this <code>ThrowsTag</code>.

@return exception comment.
"
      end

      operation 2914562 "exception"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <code>ClassDoc</code> that represents the exception.
If the type of the exception is a type variable, return the
<code>ClassDoc</code> of its erasure.

<p> <i>This method cannot accommodate certain generic type
constructs.  The <code>exceptionType</code> method
should be used instead.</i>

@return <code>ClassDoc</code> that represents the exception.
@see #exceptionType
"
      end

      operation 2914690 "exceptionType"
	public return_type class_ref 480898 // Type
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type of the exception
associated with this <code>ThrowsTag</code>.
This may be a <code>ClassDoc</code> or a <code>TypeVariable</code>.

@return the type of the exception.
@since 1.5
"
      end
    end

    class 483970 "DocErrorReporter"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface provides error, warning and notice printing.

@since 1.2
@author Robert Field
"
      operation 2905602 "printError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print error message and increment error count.

@param msg message to print
"
      end

      operation 2905730 "printError"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pos" type class_ref 482690 // SourcePosition
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print an error message and increment error count.

@param pos the position item where the error occurs
@param msg message to print
@since 1.4
"
      end

      operation 2905858 "printWarning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print warning message and increment warning count.

@param msg message to print
"
      end

      operation 2905986 "printWarning"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pos" type class_ref 482690 // SourcePosition
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print warning message and increment warning count.

@param pos the position item where the warning occurs
@param msg message to print
@since 1.4
"
      end

      operation 2906114 "printNotice"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print a message.

@param msg message to print
"
      end

      operation 2906242 "printNotice"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pos" type class_ref 482690 // SourcePosition
	  param inout name "msg" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print a message.

@param pos the position item where the message occurs
@param msg message to print
@since 1.4
"
      end
    end

    class 484098 "Doclet"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an example of a starting class for a doclet,
showing the entry-point methods.  A starting class must
import com.sun.javadoc.* and implement the
<code>start(RootDoc)</code> method, as described in the
<a href=\"package-summary.html#package_description\">package
description</a>.  If the doclet takes command line options,
it must also implement <code>optionLength</code> and
<code>validOptions</code>.

<p> A doclet supporting the language features added since 1.1
(such as generics and annotations) should indicate this
by implementing <code>languageVersion</code>.  In the absence of
this the doclet should not invoke any of the Doclet API methods
added since 1.5, and
the results of several other methods are modified so as
to conceal the new constructs (such as type parameters) from
the doclet.

<p> To start the doclet, pass
<code>-doclet</code> followed by the fully-qualified
name of the starting class on the javadoc tool command line.
"
      operation 2906370 "start"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "root" type class_ref 484226 // RootDoc
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate documentation here.
This method is required for all doclets.

@return true on success.
"
      end

      operation 2906498 "optionLength"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "option" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check for doclet-added options.  Returns the number of
arguments you must specify on the command line for the
given option.  For example, \"-d docs\" would return 2.
<P>
This method is required if the doclet contains any options.
If this method is missing, Javadoc will print an invalid flag
error for every option.

@return number of arguments on the command line for an option
        including the option name itself.  Zero return means
        option not known.  Negative value means error occurred.
"
      end

      operation 2906626 "validOptions"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "options" type class_ref 128130 // String
	multiplicity "[][]"
	  param inout name "reporter" type class_ref 483970 // DocErrorReporter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that options have the correct arguments.
<P>
This method is not required, but is recommended,
as every option will be considered valid if this method
is not present.  It will default gracefully (to true)
if absent.
<P>
Printing option related error messages (using the provided
DocErrorReporter) is the responsibility of this method.

@return true if the options are valid.
"
      end

      operation 2906754 "languageVersion"
	class_operation public return_type class_ref 484354 // LanguageVersion
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the version of the Java Programming Language supported
by this doclet.
<p>
This method is required by any doclet supporting a language version
newer than 1.1.

@return  the language version supported by this doclet.
@since 1.5
"
      end
    end

    class 484226 "RootDoc"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents the root of the program structure information
for one run of javadoc.  From this root all other program
structure information can be extracted.
Also represents the command line information -- the
packages, classes and options specified by the user.

@since 1.2
@author Robert Field
"
      classrelation 956034 // <generalisation>
	relation 956034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956034 // <generalisation>
	  b parent class_ref 482306 // Doc
      end

      classrelation 956162 // <generalisation>
	relation 956162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956162 // <generalisation>
	  b parent class_ref 483970 // DocErrorReporter
      end

      operation 2911618 "options"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Command line options.
<p>
For example, given:
<pre>
    javadoc -foo this that -bar other ...</pre>

this method will return:
<pre>
     options()[0][0] = \"-foo\"
     options()[0][1] = \"this\"
     options()[0][2] = \"that\"
     options()[1][0] = \"-bar\"
     options()[1][1] = \"other\"</pre>

@return an array of arrays of String.
"
      end

      operation 2911746 "specifiedPackages"
	public return_type class_ref 482818 // PackageDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the packages
<a href=\"package-summary.html#included\">specified</a>
on the command line.
If <code>-subpackages</code> and <code>-exclude</code> options
are used, return all the non-excluded packages.

@return packages specified on the command line.
"
      end

      operation 2911874 "specifiedClasses"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the classes and interfaces
<a href=\"package-summary.html#included\">specified</a>
as source file names on the command line.

@return classes and interfaces specified on the command line.
"
      end

      operation 2912002 "classes"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the
<a href=\"package-summary.html#included\">included</a>
classes and interfaces in all packages.

@return included classes and interfaces in all packages.
"
      end

      operation 2912130 "packageNamed"
	public return_type class_ref 482818 // PackageDoc
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a PackageDoc for the specified package name.

@param name package name

@return a PackageDoc holding the specified package, null if
this package is not referenced.
"
      end

      operation 2912258 "classNamed"
	public return_type class_ref 481026 // ClassDoc
	nparams 1
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a ClassDoc for the specified class or interface name.

@param qualifiedName
<a href=\"package-summary.html#qualified\">qualified</a>
class or package name

@return a ClassDoc holding the specified class, null if
this class is not referenced.
"
      end
    end

    class 484354 "LanguageVersion"
      visibility public stereotype "enum"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Java Programming Language version.  The constants of this enum
identify the JDK and J2SE releases containing language changes
relevant to doclets.
<p>
All doclets support at least the 1.1 language version.
The first release subsequent to this with language changes
affecting doclets is 1.5.

@since 1.5
"
      attribute 619778 "JAVA_1_1"
	public type class_ref 484354 // LanguageVersion
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 1.1 added nested classes and interfaces. 
"
      end

      attribute 619906 "JAVA_1_5"
	public type class_ref 484354 // LanguageVersion
	cpp_decl ""
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 1.5 added generic types, annotations, enums, and varArgs. "
      end
    end

    class 484482 "SerialFieldTag"
      visibility public stereotype "interface"
      nactuals 1
      actual class class_ref 194946 // Comparable
        rank 0 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Documents a Serializable field defined by an ObjectStreamField.
<pre>
The class parses and stores the three serialField tag parameters:

- field name
- field type name
     (fully-qualified or visible from the current import context)
- description of the valid values for the field

</pre>
This tag is only allowed in the javadoc for the special member
serialPersistentFields.

@author Joe Fialli

@see java.io.ObjectStreamField
"
      classrelation 956418 // <generalisation>
	relation 956418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 956418 // <generalisation>
	  b parent class_ref 482434 // Tag
      end

      classrelation 956546 // <realization>
	relation 956546 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 956546 // <realization>
	  b parent class_ref 194946 // Comparable
      end

      operation 2913154 "fieldName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the serializable field name.
"
      end

      operation 2913282 "fieldType"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the field type string.
"
      end

      operation 2913410 "fieldTypeDoc"
	public return_type class_ref 481026 // ClassDoc
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ClassDoc for field type.

@return null if no ClassDoc for field type is visible from
        containingClass context.
"
      end

      operation 2913538 "description"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the field comment. If there is no serialField comment, return
javadoc comment of corresponding FieldDoc.
"
      end

      operation 2913666 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this Object with the specified Object for order.  Returns a
negative integer, zero, or a positive integer as this Object is less
than, equal to, or greater than the given Object.
<p>
Included to make SerialFieldTag items java.lang.Comparable.

@param   obj the <code>Object</code> to be compared.
@return  a negative integer, zero, or a positive integer as this Object
         is less than, equal to, or greater than the given Object.
@exception ClassCastException the specified Object's type prevents it
           from being compared to this Object.
@since 1.2
"
      end
    end
  end

  deploymentview 145410 "javadoc"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 319618 "Type"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 480898 // Type
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 319746 "AnnotatedType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 480770 // AnnotatedType
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 319874 "AnnotationDesc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481666 // AnnotationDesc
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320002 "Doc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.BreakIterator;
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 482306 // Doc
      end
      comment "Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320130 "ProgramElementDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 482178 // ProgramElementDoc
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320258 "ClassDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481026 // ClassDoc
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320386 "AnnotationTypeDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481538 // AnnotationTypeDoc
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320514 "MemberDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483586 // MemberDoc
      end
      comment "Copyright (c) 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320642 "ExecutableMemberDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483458 // ExecutableMemberDoc
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320770 "MethodDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 482946 // MethodDoc
      end
      comment "Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 320898 "AnnotationTypeElementDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481922 // AnnotationTypeElementDoc
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321026 "AnnotationValue"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 482050 // AnnotationValue
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321154 "ConstructorDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483330 // ConstructorDoc
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321282 "DocErrorReporter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483970 // DocErrorReporter
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321410 "Doclet"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 484098 // Doclet
      end
      comment "Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321538 "FieldDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483074 // FieldDoc
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321666 "LanguageVersion"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 484354 // LanguageVersion
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321794 "PackageDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 482818 // PackageDoc
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 321922 "Parameter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483714 // Parameter
      end
      comment "Copyright (c) 1998, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322050 "ParameterizedType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481154 // ParameterizedType
      end
      comment "Copyright (c) 2003, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322178 "Tag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.BreakIterator;
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 482434 // Tag
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322306 "ParamTag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483202 // ParamTag
      end
      comment "Copyright (c) 1998, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322434 "RootDoc"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 484226 // RootDoc
      end
      comment "Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322562 "SeeTag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 482562 // SeeTag
      end
      comment "Copyright (c) 1998, 2002, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322690 "SerialFieldTag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 484482 // SerialFieldTag
      end
      comment "Copyright (c) 1998, 2012, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322818 "SourcePosition"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
${definition}"
      associated_elems
	class_ref 482690 // SourcePosition
      end
      comment "Copyright (c) 2001, 2002, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 322946 "ThrowsTag"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 483842 // ThrowsTag
      end
      comment "Copyright (c) 1998, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 323074 "TypeVariable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481282 // TypeVariable
      end
      comment "Copyright (c) 2003, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 323202 "WildcardType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 481410 // WildcardType
      end
      comment "Copyright (c) 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
