format 222
"login" // jdk1.8::com::sun::security::auth::login
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/security/auth/login/"
  java_package "com.sun.security.auth.login"
  classview 171138 "login"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 832258 "ConfigFile"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@jdk.Exported
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " NOTE: As of JDK 8, this class instantiates
 sun.security.provider.ConfigFile.Spi and forwards all methods to that
 implementation. All implementation fixes and enhancements should be made to
 sun.security.provider.ConfigFile.Spi and not this class.
 See JDK-8005117 for more information.

This class represents a default implementation for
{@code javax.security.auth.login.Configuration}.

<p> This object stores the runtime login configuration representation,
and is the amalgamation of multiple static login
configurations that resides in files.
The algorithm for locating the login configuration file(s) and reading their
information into this {@code Configuration} object is:

<ol>
<li>
  Loop through the security properties,
  <i>login.config.url.1</i>, <i>login.config.url.2</i>, ...,
  <i>login.config.url.X</i>.
  Each property value specifies a {@code URL} pointing to a
  login configuration file to be loaded.  Read in and load
  each configuration.

<li>
  The {@code java.lang.System} property
  <i>java.security.auth.login.config</i>
  may also be set to a {@code URL} pointing to another
  login configuration file
  (which is the case when a user uses the -D switch at runtime).
  If this property is defined, and its use is allowed by the
  security property file (the Security property,
  <i>policy.allowSystemProperty</i> is set to <i>true</i>),
  also load that login configuration.

<li>
  If the <i>java.security.auth.login.config</i> property is defined using
  \"==\" (rather than \"=\"), then ignore all other specified
  login configurations and only load this configuration.

<li>
  If no system or security properties were set, try to read from the file,
  ${user.home}/.java.login.config, where ${user.home} is the value
  represented by the \"user.home\" System property.
</ol>

<p> The configuration syntax supported by this implementation
is exactly that syntax specified in the
{@code javax.security.auth.login.Configuration} class.

@see javax.security.auth.login.LoginContext
@see java.security.Security security properties
"
      classrelation 2847106 // <generalisation>
	relation 2847106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2847106 // <generalisation>
	  b parent class_ref 509058 // Configuration
      end

      attribute 1296514 "spi"
	const_attribute private explicit_type "sun.security.provider.ConfigFile.Spi"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5975426 "ConfigFile"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new {@code Configuration} object.

@throws SecurityException if the {@code Configuration} can not be
                          initialized
"
      end

      operation 5975554 "ConfigFile"
	public explicit_return_type ""
	nparams 1
	  param inout name "uri" type class_ref 783874 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new {@code Configuration} object from the specified {@code URI}.

@param uri the {@code URI}
@throws SecurityException if the {@code Configuration} can not be
                          initialized
@throws NullPointerException if {@code uri} is null
"
      end

      operation 5975682 "getAppConfigurationEntry"
	public return_type class_ref 509698 // AppConfigurationEntry
	nparams 1
	  param inout name "applicationName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Retrieve an entry from the {@code Configuration} using an application
name as an index.

@param applicationName the name used to index the {@code Configuration}
@return an array of {@code AppConfigurationEntry} which correspond to
        the stacked configuration of {@code LoginModule}s for this
        application, or null if this application has no configured
        {@code LoginModule}s.
"
      end

      operation 5975810 "refresh"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Refresh and reload the {@code Configuration} by re-reading all of the
login configurations.

@throws SecurityException if the caller does not have permission
                          to refresh the {@code Configuration}
"
      end
    end
  end

  deploymentview 164738 "login"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 598530 "ConfigFile"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.login.AppConfigurationEntry;
import javax.security.auth.login.Configuration;
import java.net.URI;
${definition}"
      associated_elems
	class_ref 832258 // ConfigFile
      end
      comment "Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
