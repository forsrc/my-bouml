class ValuesView
!!!9075074.java!!!	ValuesView(inout map : ConcurrentHashMap)
 super(map);
!!!9075202.java!!!	contains(inout o : Object) : boolean
            return map.containsValue(o);
!!!9075330.java!!!	remove(inout o : Object) : boolean
            if (o != null) {
                for (Iterator<V> it = iterator(); it.hasNext();) {
                    if (o.equals(it.next())) {
                        it.remove();
                        return true;
                    }
                }
            }
            return false;
!!!9075458.java!!!	iterator() : Iterator
            ConcurrentHashMap<K,V> m = map;
            Node<K,V>[] t;
            int f = (t = m.table) == null ? 0 : t.length;
            return new ValueIterator<K,V>(t, f, 0, f, m);
!!!9075586.java!!!	add(inout e : V) : boolean
            throw new UnsupportedOperationException();
!!!9075714.java!!!	addAll(inout c : Collection) : boolean
            throw new UnsupportedOperationException();
!!!9075842.java!!!	spliterator() : Spliterator
            Node<K,V>[] t;
            ConcurrentHashMap<K,V> m = map;
            long n = m.sumCount();
            int f = (t = m.table) == null ? 0 : t.length;
            return new ValueSpliterator<K,V>(t, f, 0, f, n < 0L ? 0L : n);
!!!9075970.java!!!	forEach(inout action : Consumer) : void
            if (action == null) throw new NullPointerException();
            Node<K,V>[] t;
            if ((t = map.table) != null) {
                Traverser<K,V> it = new Traverser<K,V>(t, t.length, 0, t.length);
                for (Node<K,V> p; (p = it.advance()) != null; )
                    action.accept(p.val);
            }
