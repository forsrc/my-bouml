class SymbolTable
!!!3793026.java!!!	getDecimalFormatting(inout name : QName) : DecimalFormatting
        if (_decimalFormats == null) return null;
        return(_decimalFormats.get(name.getStringRep()));
!!!3793154.java!!!	addDecimalFormatting(inout name : QName, inout symbols : DecimalFormatting) : void
        if (_decimalFormats == null) _decimalFormats = new HashMap<>();
        _decimalFormats.put(name.getStringRep(), symbols);
!!!3793282.java!!!	getKey(inout name : QName) : Key
        if (_keys == null) return null;
        return _keys.get(name.getStringRep());
!!!3793410.java!!!	addKey(inout name : QName, inout key : Key) : void
        if (_keys == null) _keys = new HashMap<>();
        _keys.put(name.getStringRep(), key);
!!!3793538.java!!!	addStylesheet(inout name : QName, inout node : Stylesheet) : Stylesheet
        return _stylesheets.put(name.getStringRep(), node);
!!!3793666.java!!!	lookupStylesheet(inout name : QName) : Stylesheet
        return _stylesheets.get(name.getStringRep());
!!!3793794.java!!!	addTemplate(inout template : Template) : Template
        final QName name = template.getName();
        if (_templates == null) _templates = new HashMap<>();
        return _templates.put(name.getStringRep(), template);
!!!3793922.java!!!	lookupTemplate(inout name : QName) : Template
        if (_templates == null) return null;
        return _templates.get(name.getStringRep());
!!!3794050.java!!!	addVariable(inout variable : Variable) : Variable
        if (_variables == null) _variables = new HashMap<>();
        final String name = variable.getName().getStringRep();
        return (Variable)_variables.put(name, variable);
!!!3794178.java!!!	addParam(inout parameter : Param) : Param
        if (_variables == null) _variables = new HashMap<>();
        final String name = parameter.getName().getStringRep();
        return (Param)_variables.put(name, parameter);
!!!3794306.java!!!	lookupVariable(inout qname : QName) : Variable
        if (_variables == null) return null;
        final String name = qname.getStringRep();
        final VariableBase obj = _variables.get(name);
        return obj instanceof Variable ? (Variable)obj : null;
!!!3794434.java!!!	lookupParam(inout qname : QName) : Param
        if (_variables == null) return null;
        final String name = qname.getStringRep();
        final VariableBase obj = _variables.get(name);
        return obj instanceof Param ? (Param)obj : null;
!!!3794562.java!!!	lookupName(inout qname : QName) : SyntaxTreeNode
        if (_variables == null) return null;
        final String name = qname.getStringRep();
        return (SyntaxTreeNode)_variables.get(name);
!!!3794690.java!!!	addAttributeSet(inout atts : AttributeSet) : AttributeSet
        if (_attributeSets == null) _attributeSets = new HashMap<>();
        return _attributeSets.put(atts.getName().getStringRep(), atts);
!!!3794818.java!!!	lookupAttributeSet(inout name : QName) : AttributeSet
        if (_attributeSets == null) return null;
        return _attributeSets.get(name.getStringRep());
!!!3794946.java!!!	addPrimop(inout name : String, inout mtype : MethodType) : void
        Vector methods = _primops.get(name);
        if (methods == null) {
            _primops.put(name, methods = new Vector());
        }
        methods.addElement(mtype);
!!!3795074.java!!!	lookupPrimop(inout name : String) : Vector
        return _primops.get(name);
!!!3795202.java!!!	generateNamespacePrefix() : String
        return("ns"+(_nsCounter++));
!!!3795330.java!!!	setCurrentNode(inout node : SyntaxTreeNode) : void
        _current = node;
!!!3795458.java!!!	lookupNamespace(inout prefix : String) : String
        if (_current == null) return(Constants.EMPTYSTRING);
        return(_current.lookupNamespace(prefix));
!!!3795586.java!!!	addPrefixAlias(inout prefix : String, inout alias : String) : void
        if (_aliases == null) _aliases = new HashMap<>();
        _aliases.put(prefix,alias);
!!!3795714.java!!!	lookupPrefixAlias(inout prefix : String) : String
        if (_aliases == null) return null;
        return _aliases.get(prefix);
!!!3795842.java!!!	excludeURI(inout uri : String) : void
        // The null-namespace cannot be excluded
        if (uri == null) return;

        // Create a new map of exlcuded URIs if none exists
        if (_excludedURI == null) _excludedURI = new HashMap<>();

        // Register the namespace URI
        Integer refcnt = _excludedURI.get(uri);
        if (refcnt == null)
            refcnt = 1;
        else
            refcnt = refcnt + 1;
        _excludedURI.put(uri,refcnt);
!!!3795970.java!!!	excludeNamespaces(inout prefixes : String) : void
        if (prefixes != null) {
            StringTokenizer tokens = new StringTokenizer(prefixes);
            while (tokens.hasMoreTokens()) {
                final String prefix = tokens.nextToken();
                final String uri;
                if (prefix.equals("#default"))
                    uri = lookupNamespace(Constants.EMPTYSTRING);
                else
                    uri = lookupNamespace(prefix);
                if (uri != null) excludeURI(uri);
            }
        }
!!!3796098.java!!!	isExcludedNamespace(inout uri : String) : boolean
        if (uri != null && _excludedURI != null) {
            final Integer refcnt = _excludedURI.get(uri);
            return (refcnt != null && refcnt > 0);
        }
        return false;
!!!3796226.java!!!	unExcludeNamespaces(inout prefixes : String) : void
        if (_excludedURI == null) return;
        if (prefixes != null) {
            StringTokenizer tokens = new StringTokenizer(prefixes);
            while (tokens.hasMoreTokens()) {
                final String prefix = tokens.nextToken();
                final String uri;
                if (prefix.equals("#default"))
                    uri = lookupNamespace(Constants.EMPTYSTRING);
                else
                    uri = lookupNamespace(prefix);
                Integer refcnt = _excludedURI.get(uri);
                if (refcnt != null)
                    _excludedURI.put(uri, refcnt - 1);
            }
        }
!!!3796354.java!!!	pushExcludedNamespacesContext() : void
        if (_excludedURIStack == null) {
            _excludedURIStack = new Stack();
        }
        _excludedURIStack.push(_excludedURI);
        _excludedURI = null;
!!!3796482.java!!!	popExcludedNamespacesContext() : void
        _excludedURI = _excludedURIStack.pop();
        if (_excludedURIStack.isEmpty()) {
            _excludedURIStack = null;
        }
