class StringVector
!!!5703554.java!!!	StringVector()

    m_blocksize = 8;
    m_mapSize = m_blocksize;
    m_map = new String[m_blocksize];
!!!5703682.java!!!	StringVector(in blocksize : int)

    m_blocksize = blocksize;
    m_mapSize = blocksize;
    m_map = new String[blocksize];
!!!5703810.java!!!	getLength() : int
    return m_firstFree;
!!!5703938.java!!!	size() : int
    return m_firstFree;
!!!5704066.java!!!	addElement(inout value : String) : void

    if ((m_firstFree + 1) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      String newMap[] = new String[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_map[m_firstFree] = value;

    m_firstFree++;
!!!5704194.java!!!	elementAt(in i : int) : String
    return m_map[i];
!!!5704322.java!!!	contains(inout s : String) : boolean

    if (null == s)
      return false;

    for (int i = 0; i < m_firstFree; i++)
    {
      if (m_map[i].equals(s))
        return true;
    }

    return false;
!!!5704450.java!!!	containsIgnoreCase(inout s : String) : boolean

    if (null == s)
      return false;

    for (int i = 0; i < m_firstFree; i++)
    {
      if (m_map[i].equalsIgnoreCase(s))
        return true;
    }

    return false;
!!!5704578.java!!!	push(inout s : String) : void

    if ((m_firstFree + 1) >= m_mapSize)
    {
      m_mapSize += m_blocksize;

      String newMap[] = new String[m_mapSize];

      System.arraycopy(m_map, 0, newMap, 0, m_firstFree + 1);

      m_map = newMap;
    }

    m_map[m_firstFree] = s;

    m_firstFree++;
!!!5704706.java!!!	pop() : String

    if (m_firstFree <= 0)
      return null;

    m_firstFree--;

    String s = m_map[m_firstFree];

    m_map[m_firstFree] = null;

    return s;
!!!5704834.java!!!	peek() : String
    return (m_firstFree <= 0) ? null : m_map[m_firstFree - 1];
