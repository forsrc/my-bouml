class CompoundName
!!!10008834.java!!!	CompoundName(inout comps : Enumeration, inout syntax : Properties)
        if (syntax == null) {
            throw new NullPointerException();
        }
        mySyntax = syntax;
        impl = new NameImpl(syntax, comps);
!!!10008962.java!!!	CompoundName(inout n : String, inout syntax : Properties)
        if (syntax == null) {
            throw new NullPointerException();
        }
        mySyntax = syntax;
        impl = new NameImpl(syntax, n);
!!!10009090.java!!!	toString() : String
        return (impl.toString());
!!!10009218.java!!!	equals(inout obj : Object) : boolean
        // %%% check syntax too?
        return (obj != null &&
                obj instanceof CompoundName &&
                impl.equals(((CompoundName)obj).impl));
!!!10009346.java!!!	hashCode() : int
        return impl.hashCode();
!!!10009474.java!!!	clone() : Object
        return (new CompoundName(getAll(), mySyntax));
!!!10009602.java!!!	compareTo(inout obj : Object) : int
        if (!(obj instanceof CompoundName)) {
            throw new ClassCastException("Not a CompoundName");
        }
        return impl.compareTo(((CompoundName)obj).impl);
!!!10009730.java!!!	size() : int
        return (impl.size());
!!!10009858.java!!!	isEmpty() : boolean
        return (impl.isEmpty());
!!!10009986.java!!!	getAll() : Enumeration
        return (impl.getAll());
!!!10010114.java!!!	get(in posn : int) : String
        return (impl.get(posn));
!!!10010242.java!!!	getPrefix(in posn : int) : Name
        Enumeration<String> comps = impl.getPrefix(posn);
        return (new CompoundName(comps, mySyntax));
!!!10010370.java!!!	getSuffix(in posn : int) : Name
        Enumeration<String> comps = impl.getSuffix(posn);
        return (new CompoundName(comps, mySyntax));
!!!10010498.java!!!	startsWith(inout n : Name) : boolean
        if (n instanceof CompoundName) {
            return (impl.startsWith(n.size(), n.getAll()));
        } else {
            return false;
        }
!!!10010626.java!!!	endsWith(inout n : Name) : boolean
        if (n instanceof CompoundName) {
            return (impl.endsWith(n.size(), n.getAll()));
        } else {
            return false;
        }
!!!10010754.java!!!	addAll(inout suffix : Name) : Name
        if (suffix instanceof CompoundName) {
            impl.addAll(suffix.getAll());
            return this;
        } else {
            throw new InvalidNameException("Not a compound name: " +
                suffix.toString());
        }
!!!10010882.java!!!	addAll(in posn : int, inout n : Name) : Name
        if (n instanceof CompoundName) {
            impl.addAll(posn, n.getAll());
            return this;
        } else {
            throw new InvalidNameException("Not a compound name: " +
                n.toString());
        }
!!!10011010.java!!!	add(inout comp : String) : Name
        impl.add(comp);
        return this;
!!!10011138.java!!!	add(in posn : int, inout comp : String) : Name
        impl.add(posn, comp);
        return this;
!!!10011266.java!!!	remove(in posn : int) : Object
        return impl.remove(posn);
!!!10011394.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.writeObject(mySyntax);
        s.writeInt(size());
        Enumeration<String> comps = getAll();
        while (comps.hasMoreElements()) {
            s.writeObject(comps.nextElement());
        }
!!!10011522.java!!!	readObject(inout s : ObjectInputStream) : void
        mySyntax = (Properties)s.readObject();
        impl = new NameImpl(mySyntax);
        int n = s.readInt();    // number of components
        try {
            while (--n >= 0) {
                add((String)s.readObject());
            }
        } catch (InvalidNameException e) {
            throw (new java.io.StreamCorruptedException("Invalid name"));
        }
