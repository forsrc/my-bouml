format 222
"dnd" // jdk1.8::java::awt::dnd
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/awt/dnd/"
  java_package "java.awt.dnd"
  classview 146818 "dnd"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 341250 "DropTarget"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DropTarget</code> is associated
with a <code>Component</code> when that <code>Component</code>
wishes
to accept drops during Drag and Drop operations.
<P>
 Each
<code>DropTarget</code> is associated with a <code>FlavorMap</code>.
The default <code>FlavorMap</code> hereafter designates the
<code>FlavorMap</code> returned by <code>SystemFlavorMap.getDefaultFlavorMap()</code>.

@since 1.2
"
      classrelation 611330 // <realization>
	relation 611330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 611330 // <realization>
	  b parent class_ref 353026 // DropTargetListener
      end

      classrelation 611458 // <realization>
	relation 611458 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 611458 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 455682 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6283860791671019047L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1975170 "DropTarget"
	public explicit_return_type ""
	nparams 5
	  param inout name "c" type class_ref 338818 // Component
	  param in name "ops" explicit_type "int"
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	  param inout name "act" explicit_type "boolean"
	  param inout name "fm" type class_ref 353794 // FlavorMap
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new DropTarget given the <code>Component</code>
to associate itself with, an <code>int</code> representing
the default acceptable action(s) to
support, a <code>DropTargetListener</code>
to handle event processing, a <code>boolean</code> indicating
if the <code>DropTarget</code> is currently accepting drops, and
a <code>FlavorMap</code> to use (or null for the default <CODE>FlavorMap</CODE>).
<P>
The Component will receive drops only if it is enabled.
@param c         The <code>Component</code> with which this <code>DropTarget</code> is associated
@param ops       The default acceptable actions for this <code>DropTarget</code>
@param dtl       The <code>DropTargetListener</code> for this <code>DropTarget</code>
@param act       Is the <code>DropTarget</code> accepting drops.
@param fm        The <code>FlavorMap</code> to use, or null for the default <CODE>FlavorMap</CODE>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 1975298 "DropTarget"
	public explicit_return_type ""
	nparams 4
	  param inout name "c" type class_ref 338818 // Component
	  param in name "ops" explicit_type "int"
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	  param inout name "act" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DropTarget</code> given the <code>Component</code>
to associate itself with, an <code>int</code> representing
the default acceptable action(s)
to support, a <code>DropTargetListener</code>
to handle event processing, and a <code>boolean</code> indicating
if the <code>DropTarget</code> is currently accepting drops.
<P>
The Component will receive drops only if it is enabled.
@param c         The <code>Component</code> with which this <code>DropTarget</code> is associated
@param ops       The default acceptable actions for this <code>DropTarget</code>
@param dtl       The <code>DropTargetListener</code> for this <code>DropTarget</code>
@param act       Is the <code>DropTarget</code> accepting drops.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 1975426 "DropTarget"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DropTarget</code>.
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 1975554 "DropTarget"
	public explicit_return_type ""
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DropTarget</code> given the <code>Component</code>
to associate itself with, and the <code>DropTargetListener</code>
to handle event processing.
<P>
The Component will receive drops only if it is enabled.
@param c         The <code>Component</code> with which this <code>DropTarget</code> is associated
@param dtl       The <code>DropTargetListener</code> for this <code>DropTarget</code>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 1975682 "DropTarget"
	public explicit_return_type ""
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "ops" explicit_type "int"
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>DropTarget</code> given the <code>Component</code>
to associate itself with, an <code>int</code> representing
the default acceptable action(s) to support, and a
<code>DropTargetListener</code> to handle event processing.
<P>
The Component will receive drops only if it is enabled.
@param c         The <code>Component</code> with which this <code>DropTarget</code> is associated
@param ops       The default acceptable actions for this <code>DropTarget</code>
@param dtl       The <code>DropTargetListener</code> for this <code>DropTarget</code>
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 1975810 "setComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Note: this interface is required to permit the safe association
of a DropTarget with a Component in one of two ways, either:
<code> component.setDropTarget(droptarget); </code>
or <code> droptarget.setComponent(component); </code>
<P>
The Component will receive drops only if it is enabled.
@param c The new <code>Component</code> this <code>DropTarget</code>
is to be associated with.
"
      end

      operation 1975938 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>Component</code> associated
with this <code>DropTarget</code>.
<P>
@return the current <code>Component</code>
"
      end

      operation 1976066 "setDefaultActions"
	public explicit_return_type "void"
	nparams 1
	  param in name "ops" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default acceptable actions for this <code>DropTarget</code>
<P>
@param ops the default actions
@see java.awt.dnd.DnDConstants
"
      end

      operation 1976194 "doSetDefaultActions"
	package explicit_return_type "void"
	nparams 1
	  param in name "ops" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by DropTargetContext.setTargetActions()
with appropriate synchronization.
"
      end

      operation 1976322 "getDefaultActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an <code>int</code> representing the
current action(s) supported by this <code>DropTarget</code>.
<P>
@return the current default actions
"
      end

      operation 1976450 "setActive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isActive" explicit_type "boolean"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the DropTarget active if <code>true</code>,
inactive if <code>false</code>.
<P>
@param isActive sets the <code>DropTarget</code> (in)active.
"
      end

      operation 1976578 "isActive"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether or not
this <code>DropTarget</code>
is currently active (ready to accept drops).
<P>
@return <CODE>true</CODE> if active, <CODE>false</CODE> if not
"
      end

      operation 1976706 "addDropTargetListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	nexceptions 1
	  exception class_ref 353922 // TooManyListenersException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a new <code>DropTargetListener</code> (UNICAST SOURCE).
<P>
@param dtl The new <code>DropTargetListener</code>
<P>
@throws TooManyListenersException if a
<code>DropTargetListener</code> is already added to this
<code>DropTarget</code>.
"
      end

      operation 1976834 "removeDropTargetListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtl" type class_ref 353026 // DropTargetListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the current <code>DropTargetListener</code> (UNICAST SOURCE).
<P>
@param dtl the DropTargetListener to deregister.
"
      end

      operation 1976962 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragEnter</code> on the registered
<code>DropTargetListener</code> and passes it
the specified <code>DropTargetDragEvent</code>.
Has no effect if this <code>DropTarget</code>
is not active.

@param dtde the <code>DropTargetDragEvent</code>

@throws NullPointerException if this <code>DropTarget</code>
        is active and <code>dtde</code> is <code>null</code>

@see #isActive
"
      end

      operation 1977090 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragOver</code> on the registered
<code>DropTargetListener</code> and passes it
the specified <code>DropTargetDragEvent</code>.
Has no effect if this <code>DropTarget</code>
is not active.

@param dtde the <code>DropTargetDragEvent</code>

@throws NullPointerException if this <code>DropTarget</code>
        is active and <code>dtde</code> is <code>null</code>

@see #isActive
"
      end

      operation 1977218 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dropActionChanged</code> on the registered
<code>DropTargetListener</code> and passes it
the specified <code>DropTargetDragEvent</code>.
Has no effect if this <code>DropTarget</code>
is not active.

@param dtde the <code>DropTargetDragEvent</code>

@throws NullPointerException if this <code>DropTarget</code>
        is active and <code>dtde</code> is <code>null</code>

@see #isActive
"
      end

      operation 1977346 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dte" type class_ref 351874 // DropTargetEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragExit</code> on the registered
<code>DropTargetListener</code> and passes it
the specified <code>DropTargetEvent</code>.
Has no effect if this <code>DropTarget</code>
is not active.
<p>
This method itself does not throw any exception
for null parameter but for exceptions thrown by
the respective method of the listener.

@param dte the <code>DropTargetEvent</code>

@see #isActive
"
      end

      operation 1977474 "drop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353666 // DropTargetDropEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>drop</code> on the registered
<code>DropTargetListener</code> and passes it
the specified <code>DropTargetDropEvent</code>
if this <code>DropTarget</code> is active.

@param dtde the <code>DropTargetDropEvent</code>

@throws NullPointerException if <code>dtde</code> is null
        and at least one of the following is true: this
        <code>DropTarget</code> is not active, or there is
        no a <code>DropTargetListener</code> registered.

@see #isActive
"
      end

      operation 1977602 "getFlavorMap"
	public return_type class_ref 353794 // FlavorMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>FlavorMap</code>
associated with this <code>DropTarget</code>.
If no <code>FlavorMap</code> has been set for this
<code>DropTarget</code>, it is associated with the default
<code>FlavorMap</code>.
<P>
@return the FlavorMap for this DropTarget
"
      end

      operation 1977730 "setFlavorMap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fm" type class_ref 353794 // FlavorMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>FlavorMap</code> associated
with this <code>DropTarget</code>.
<P>
@param fm the new <code>FlavorMap</code>, or null to
associate the default FlavorMap with this DropTarget.
"
      end

      operation 1977858 "addNotify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "peer" type class_ref 340738 // ComponentPeer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the DropTarget that it has been associated with a Component

*********************************************************************
This method is usually called from java.awt.Component.addNotify() of
the Component associated with this DropTarget to notify the DropTarget
that a ComponentPeer has been associated with that Component.

Calling this method, other than to notify this DropTarget of the
association of the ComponentPeer with the Component may result in
a malfunction of the DnD system.
*********************************************************************
<P>
@param peer The Peer of the Component we are associated with!

"
      end

      operation 1977986 "removeNotify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "peer" type class_ref 340738 // ComponentPeer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the DropTarget that it has been disassociated from a Component

*********************************************************************
This method is usually called from java.awt.Component.removeNotify() of
the Component associated with this DropTarget to notify the DropTarget
that a ComponentPeer has been disassociated with that Component.

Calling this method, other than to notify this DropTarget of the
disassociation of the ComponentPeer from the Component may result in
a malfunction of the DnD system.
*********************************************************************
<P>
@param peer The Peer of the Component we are being disassociated from!
"
      end

      operation 1978114 "getDropTargetContext"
	public return_type class_ref 354050 // DropTargetContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>DropTargetContext</code> associated
with this <code>DropTarget</code>.
<P>
@return the <code>DropTargetContext</code> associated with this <code>DropTarget</code>.
"
      end

      operation 1978242 "createDropTargetContext"
	protected return_type class_ref 354050 // DropTargetContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the DropTargetContext associated with this DropTarget.
Subclasses may override this method to instantiate their own
DropTargetContext subclass.

This call is typically *only* called by the platform's
DropTargetContextPeer as a drag operation encounters this
DropTarget. Accessing the Context while no Drag is current
has undefined results.
"
      end

      operation 1978370 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>DropTarget</code>. Performs default serialization,
and then writes out this object's <code>DropTargetListener</code> if and
only if it can be serialized. If not, <code>null</code> is written
instead.

@serialData The default serializable fields, in alphabetical order,
            followed by either a <code>DropTargetListener</code>
            instance, or <code>null</code>.
@since 1.4
"
      end

      operation 1978498 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>DropTarget</code>. This method first performs
default deserialization for all non-<code>transient</code> fields. An
attempt is then made to deserialize this object's
<code>DropTargetListener</code> as well. This is first attempted by
deserializing the field <code>dtListener</code>, because, in releases
prior to 1.4, a non-<code>transient</code> field of this name stored the
<code>DropTargetListener</code>. If this fails, the next object in the
stream is used instead.

@since 1.4
"
      end

      class 354178 "DropTargetAutoScroller"
	visibility protected 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 611714 // <realization>
	  relation 611714 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 611714 // <realization>
	    b parent class_ref 354306 // ActionListener
	end

	operation 1978754 "DropTargetAutoScroller"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 338818 // Component
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "construct a DropTargetAutoScroller
<P>
@param c the <code>Component</code>
@param p the <code>Point</code>
"
	end

	operation 1978882 "updateRegion"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "update the geometry of the autoscroll region
"
	end

	operation 1979010 "updateLocation"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "newLocn" type class_ref 323714 // Point
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "cause autoscroll to occur
<P>
@param newLocn the <code>Point</code>
"
	end

	operation 1979138 "stop"
	  protected explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "cause autoscrolling to stop
"
	end

	operation 1979266 "actionPerformed"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" type class_ref 354434 // ActionEvent
	  
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "cause autoscroll to occur
<P>
@param e the <code>ActionEvent</code>
"
	end

	classrelation 611842 // component (<unidirectional association>)
	  relation 611842 --->
	    a role_name "component" private
	      comment "
fields

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 611842 // component (<unidirectional association>)
	    b parent class_ref 338818 // Component
	end

	classrelation 611970 // autoScroll (<unidirectional association>)
	  relation 611970 --->
	    a role_name "autoScroll" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 611970 // autoScroll (<unidirectional association>)
	    b parent class_ref 354562 // Autoscroll
	end

	classrelation 612098 // timer (<unidirectional association>)
	  relation 612098 --->
	    a role_name "timer" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 612098 // timer (<unidirectional association>)
	    b parent class_ref 354690 // Timer
	end

	classrelation 612226 // locn (<unidirectional association>)
	  relation 612226 --->
	    a role_name "locn" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 612226 // locn (<unidirectional association>)
	    b parent class_ref 323714 // Point
	end

	classrelation 612354 // prev (<unidirectional association>)
	  relation 612354 --->
	    a role_name "prev" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 612354 // prev (<unidirectional association>)
	    b parent class_ref 323714 // Point
	end

	classrelation 612482 // outer (<unidirectional association>)
	  relation 612482 --->
	    a role_name "outer" init_value " new Rectangle()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 612482 // outer (<unidirectional association>)
	    b parent class_ref 314114 // Rectangle
	end

	classrelation 612610 // inner (<unidirectional association>)
	  relation 612610 --->
	    a role_name "inner" init_value " new Rectangle()" private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 612610 // inner (<unidirectional association>)
	    b parent class_ref 314114 // Rectangle
	end

	attribute 455810 "hysteresis"
	  private explicit_type "int"
	  init_value " 10"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 1979394 "createDropTargetAutoScroller"
	protected return_type class_ref 354178 // DropTargetAutoScroller
	nparams 2
	  param inout name "c" type class_ref 338818 // Component
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "create an embedded autoscroller
<P>
@param c the <code>Component</code>
@param p the <code>Point</code>
"
      end

      operation 1979522 "initializeAutoscrolling"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "initialize autoscrolling
<P>
@param p the <code>Point</code>
"
      end

      operation 1979650 "updateAutoscroll"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "dragCursorLocn" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "update autoscrolling with current cursor location
<P>
@param dragCursorLocn the <code>Point</code>
"
      end

      operation 1979778 "clearAutoscroll"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "clear autoscrolling
"
      end

      classrelation 612738 // dropTargetContext (<unidirectional association>)
	relation 612738 --->
	  a role_name "dropTargetContext" init_value " createDropTargetContext()" private
	    comment "
The DropTargetContext associated with this DropTarget.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612738 // dropTargetContext (<unidirectional association>)
	  b parent class_ref 354050 // DropTargetContext
      end

      classrelation 612866 // component (<unidirectional association>)
	relation 612866 --->
	  a role_name "component" private
	    comment "
The Component associated with this DropTarget.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612866 // component (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 612994 // componentPeer (<unidirectional association>)
	relation 612994 --->
	  a role_name "componentPeer" private
	    comment "
That Component's  Peer

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612994 // componentPeer (<unidirectional association>)
	  b parent class_ref 340738 // ComponentPeer
      end

      classrelation 613122 // nativePeer (<unidirectional association>)
	relation 613122 --->
	  a role_name "nativePeer" private
	    comment "
That Component's \"native\" Peer

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 613122 // nativePeer (<unidirectional association>)
	  b parent class_ref 340738 // ComponentPeer
      end

      attribute 455938 "actions"
	package explicit_type "int"
	init_value " DnDConstants.ACTION_COPY_OR_MOVE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Default permissible actions supported by this DropTarget.

@see #setDefaultActions
@see #getDefaultActions
@serial

"
      end

      attribute 456066 "active"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>true</code> if the DropTarget is accepting Drag &amp; Drop operations.

@serial

"
      end

      classrelation 613250 // autoScroller (<unidirectional association>)
	relation 613250 --->
	  a role_name "autoScroller" private
	    comment "
the auto scrolling object

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 613250 // autoScroller (<unidirectional association>)
	  b parent class_ref 354178 // DropTargetAutoScroller
      end

      classrelation 613378 // dtListener (<unidirectional association>)
	relation 613378 --->
	  a role_name "dtListener" private
	    comment "
The delegate

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 613378 // dtListener (<unidirectional association>)
	  b parent class_ref 353026 // DropTargetListener
      end

      classrelation 613506 // flavorMap (<unidirectional association>)
	relation 613506 --->
	  a role_name "flavorMap" private
	    comment "
The FlavorMap

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 613506 // flavorMap (<unidirectional association>)
	  b parent class_ref 353794 // FlavorMap
      end

      attribute 456194 "isDraggingInside"
	private explicit_type "boolean"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If the dragging is currently inside this drop target

"
      end
    end

    class 351874 "DropTargetEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DropTargetEvent</code> is the base
class for both the <code>DropTargetDragEvent</code>
and the <code>DropTargetDropEvent</code>.
It encapsulates the current state of the Drag and
Drop operations, in particular the current
<code>DropTargetContext</code>.

@since 1.2

"
      classrelation 3003138 // <generalisation>
	relation 3003138 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3003138 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 1464962 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2821229066521922993L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6424194 "DropTargetEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "dtc" type class_ref 354050 // DropTargetContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DropTargetEvent</code> object with
the specified <code>DropTargetContext</code>.
<P>
@param dtc The <code>DropTargetContext</code>
@throws NullPointerException if {@code dtc} equals {@code null}.
@see #getSource()
@see #getDropTargetContext()
"
      end

      operation 6424322 "getDropTargetContext"
	public return_type class_ref 354050 // DropTargetContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>DropTargetContext</code>
associated with this <code>DropTargetEvent</code>.
<P>
@return the <code>DropTargetContext</code>
"
      end

      classrelation 3003266 // context (<unidirectional association>)
	relation 3003266 --->
	  a role_name "context" protected
	    comment "
The <code>DropTargetContext</code> associated with this
<code>DropTargetEvent</code>.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3003266 // context (<unidirectional association>)
	  b parent class_ref 354050 // DropTargetContext
      end
    end

    class 353026 "DropTargetListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DropTargetListener</code> interface
is the callback interface used by the
<code>DropTarget</code> class to provide
notification of DnD operations that involve
the subject <code>DropTarget</code>. Methods of
this interface may be implemented to provide
\"drag under\" visual feedback to the user throughout
the Drag and Drop operation.
<p>
Create a listener object by implementing the interface and then register it
with a <code>DropTarget</code>. When the drag enters, moves over, or exits
the operable part of the drop site for that <code>DropTarget</code>, when
the drop action changes, and when the drop occurs, the relevant method in
the listener object is invoked, and the <code>DropTargetEvent</code> is
passed to it.
<p>
The operable part of the drop site for the <code>DropTarget</code> is
the part of the associated <code>Component</code>'s geometry that is not
obscured by an overlapping top-level window or by another
<code>Component</code> higher in the Z-order that has an associated active
<code>DropTarget</code>.
<p>
During the drag, the data associated with the current drag operation can be
retrieved by calling <code>getTransferable()</code> on
<code>DropTargetDragEvent</code> instances passed to the listener's
methods.
<p>
Note that <code>getTransferable()</code> on the
<code>DropTargetDragEvent</code> instance should only be called within the
respective listener's method and all the necessary data should be retrieved
from the returned <code>Transferable</code> before that method returns.

@since 1.2
"
      classrelation 611202 // <generalisation>
	relation 611202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 611202 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 1974530 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called while a drag operation is ongoing, when the mouse pointer enters
the operable part of the drop site for the <code>DropTarget</code>
registered with this listener.

@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 1974658 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a drag operation is ongoing, while the mouse pointer is still
over the operable part of the drop site for the <code>DropTarget</code>
registered with this listener.

@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 1974786 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called if the user has modified
the current drop gesture.
<P>
@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 1974914 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dte" type class_ref 351874 // DropTargetEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called while a drag operation is ongoing, when the mouse pointer has
exited the operable part of the drop site for the
<code>DropTarget</code> registered with this listener.

@param dte the <code>DropTargetEvent</code>
"
      end

      operation 1975042 "drop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353666 // DropTargetDropEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the drag operation has terminated with a drop on
the operable part of the drop site for the <code>DropTarget</code>
registered with this listener.
<p>
This method is responsible for undertaking
the transfer of the data associated with the
gesture. The <code>DropTargetDropEvent</code>
provides a means to obtain a <code>Transferable</code>
object that represents the data object(s) to
be transfered.<P>
From this method, the <code>DropTargetListener</code>
shall accept or reject the drop via the
acceptDrop(int dropAction) or rejectDrop() methods of the
<code>DropTargetDropEvent</code> parameter.
<P>
Subsequent to acceptDrop(), but not before,
<code>DropTargetDropEvent</code>'s getTransferable()
method may be invoked, and data transfer may be
performed via the returned <code>Transferable</code>'s
getTransferData() method.
<P>
At the completion of a drop, an implementation
of this method is required to signal the success/failure
of the drop by passing an appropriate
<code>boolean</code> to the <code>DropTargetDropEvent</code>'s
dropComplete(boolean success) method.
<P>
Note: The data transfer should be completed before the call  to the
<code>DropTargetDropEvent</code>'s dropComplete(boolean success) method.
After that, a call to the getTransferData() method of the
<code>Transferable</code> returned by
<code>DropTargetDropEvent.getTransferable()</code> is guaranteed to
succeed only if the data transfer is local; that is, only if
<code>DropTargetDropEvent.isLocalTransfer()</code> returns
<code>true</code>. Otherwise, the behavior of the call is
implementation-dependent.
<P>
@param dtde the <code>DropTargetDropEvent</code>
"
      end
    end

    class 353538 "DropTargetDragEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DropTargetDragEvent</code> is delivered to a
<code>DropTargetListener</code> via its
dragEnter() and dragOver() methods.
<p>
The <code>DropTargetDragEvent</code> reports the <i>source drop actions</i>
and the <i>user drop action</i> that reflect the current state of
the drag operation.
<p>
<i>Source drop actions</i> is a bitwise mask of <code>DnDConstants</code>
that represents the set of drop actions supported by the drag source for
this drag operation.
<p>
<i>User drop action</i> depends on the drop actions supported by the drag
source and the drop action selected by the user. The user can select a drop
action by pressing modifier keys during the drag operation:
<pre>
  Ctrl + Shift -&gt; ACTION_LINK
  Ctrl         -&gt; ACTION_COPY
  Shift        -&gt; ACTION_MOVE
</pre>
If the user selects a drop action, the <i>user drop action</i> is one of
<code>DnDConstants</code> that represents the selected drop action if this
drop action is supported by the drag source or
<code>DnDConstants.ACTION_NONE</code> if this drop action is not supported
by the drag source.
<p>
If the user doesn't select a drop action, the set of
<code>DnDConstants</code> that represents the set of drop actions supported
by the drag source is searched for <code>DnDConstants.ACTION_MOVE</code>,
then for <code>DnDConstants.ACTION_COPY</code>, then for
<code>DnDConstants.ACTION_LINK</code> and the <i>user drop action</i> is the
first constant found. If no constant is found the <i>user drop action</i>
is <code>DnDConstants.ACTION_NONE</code>.

@since 1.2
"
      classrelation 3003394 // <generalisation>
	relation 3003394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3003394 // <generalisation>
	  b parent class_ref 351874 // DropTargetEvent
      end

      attribute 1465090 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8422265619058953682L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6424450 "DropTargetDragEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "dtc" type class_ref 354050 // DropTargetContext
	  param inout name "cursorLocn" type class_ref 323714 // Point
	  param in name "dropAction" explicit_type "int"
	  param in name "srcActions" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DropTargetDragEvent</code> given the
<code>DropTargetContext</code> for this operation,
the location of the \"Drag\" <code>Cursor</code>'s hotspot
in the <code>Component</code>'s coordinates, the
user drop action, and the source drop actions.
<P>
@param dtc        The DropTargetContext for this operation
@param cursorLocn The location of the \"Drag\" Cursor's
hotspot in Component coordinates
@param dropAction The user drop action
@param srcActions The source drop actions

@throws NullPointerException if cursorLocn is null
@throws IllegalArgumentException if dropAction is not one of
        <code>DnDConstants</code>.
@throws IllegalArgumentException if srcActions is not
        a bitwise mask of <code>DnDConstants</code>.
@throws IllegalArgumentException if dtc is <code>null</code>.
"
      end

      operation 6424578 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>Point</code>
indicating the <code>Cursor</code>'s current
location within the <code>Component'</code>s
coordinates.
<P>
@return the current cursor location in
<code>Component</code>'s coords.
"
      end

      operation 6424706 "getCurrentDataFlavors"
	public return_type class_ref 352130 // DataFlavor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the current <code>DataFlavor</code>s from the
<code>DropTargetContext</code>.
<P>
@return current DataFlavors from the DropTargetContext
"
      end

      operation 6424834 "getCurrentDataFlavorsAsList"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<DataFlavor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the current <code>DataFlavor</code>s
as a <code>java.util.List</code>
<P>
@return a <code>java.util.List</code> of the Current <code>DataFlavor</code>s
"
      end

      operation 6424962 "isDataFlavorSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "df" type class_ref 352130 // DataFlavor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>boolean</code> indicating
if the specified <code>DataFlavor</code> is supported.
<P>
@param df the <code>DataFlavor</code> to test
<P>
@return if a particular DataFlavor is supported
"
      end

      operation 6425090 "getSourceActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the source drop actions.

@return the source drop actions
"
      end

      operation 6425218 "getDropAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the user drop action.

@return the user drop action
"
      end

      operation 6425346 "getTransferable"
	public return_type class_ref 352002 // Transferable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the Transferable object that represents
the data associated with the current drag operation.

@return the Transferable associated with the drag operation
@throws InvalidDnDOperationException if the data associated with the drag
        operation is not available

@since 1.5
"
      end

      operation 6425474 "acceptDrag"
	public explicit_return_type "void"
	nparams 1
	  param in name "dragOperation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts the drag.

This method should be called from a
<code>DropTargetListeners</code> <code>dragEnter</code>,
<code>dragOver</code>, and <code>dropActionChanged</code>
methods if the implementation wishes to accept an operation
from the srcActions other than the one selected by
the user as represented by the <code>dropAction</code>.

@param dragOperation the operation accepted by the target
"
      end

      operation 6425602 "rejectDrag"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rejects the drag as a result of examining either the
<code>dropAction</code> or the available <code>DataFlavor</code>
types.
"
      end

      classrelation 3003522 // location (<unidirectional association>)
	relation 3003522 --->
	  a role_name "location" private
	    comment "
fields


The location of the drag cursor's hotspot in Component coordinates.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3003522 // location (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      attribute 1465218 "actions"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The source drop actions.

@serial

"
      end

      attribute 1465346 "dropAction"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user drop action.

@serial

"
      end
    end

    class 353666 "DropTargetDropEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DropTargetDropEvent</code> is delivered
via the <code>DropTargetListener</code> drop() method.
<p>
The <code>DropTargetDropEvent</code> reports the <i>source drop actions</i>
and the <i>user drop action</i> that reflect the current state of the
drag-and-drop operation.
<p>
<i>Source drop actions</i> is a bitwise mask of <code>DnDConstants</code>
that represents the set of drop actions supported by the drag source for
this drag-and-drop operation.
<p>
<i>User drop action</i> depends on the drop actions supported by the drag
source and the drop action selected by the user. The user can select a drop
action by pressing modifier keys during the drag operation:
<pre>
  Ctrl + Shift -&gt; ACTION_LINK
  Ctrl         -&gt; ACTION_COPY
  Shift        -&gt; ACTION_MOVE
</pre>
If the user selects a drop action, the <i>user drop action</i> is one of
<code>DnDConstants</code> that represents the selected drop action if this
drop action is supported by the drag source or
<code>DnDConstants.ACTION_NONE</code> if this drop action is not supported
by the drag source.
<p>
If the user doesn't select a drop action, the set of
<code>DnDConstants</code> that represents the set of drop actions supported
by the drag source is searched for <code>DnDConstants.ACTION_MOVE</code>,
then for <code>DnDConstants.ACTION_COPY</code>, then for
<code>DnDConstants.ACTION_LINK</code> and the <i>user drop action</i> is the
first constant found. If no constant is found the <i>user drop action</i>
is <code>DnDConstants.ACTION_NONE</code>.

@since 1.2
"
      classrelation 3003650 // <generalisation>
	relation 3003650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3003650 // <generalisation>
	  b parent class_ref 351874 // DropTargetEvent
      end

      attribute 1465474 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1721911170440459322L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6425730 "DropTargetDropEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "dtc" type class_ref 354050 // DropTargetContext
	  param inout name "cursorLocn" type class_ref 323714 // Point
	  param in name "dropAction" explicit_type "int"
	  param in name "srcActions" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DropTargetDropEvent</code> given
the <code>DropTargetContext</code> for this operation,
the location of the drag <code>Cursor</code>'s
hotspot in the <code>Component</code>'s coordinates,
the currently
selected user drop action, and the current set of
actions supported by the source.
By default, this constructor
assumes that the target is not in the same virtual machine as
the source; that is, {@link #isLocalTransfer()} will
return <code>false</code>.
<P>
@param dtc        The <code>DropTargetContext</code> for this operation
@param cursorLocn The location of the \"Drag\" Cursor's
hotspot in <code>Component</code> coordinates
@param dropAction the user drop action.
@param srcActions the source drop actions.

@throws NullPointerException
if cursorLocn is <code>null</code>
@throws IllegalArgumentException
        if dropAction is not one of  <code>DnDConstants</code>.
@throws IllegalArgumentException
        if srcActions is not a bitwise mask of <code>DnDConstants</code>.
@throws IllegalArgumentException if dtc is <code>null</code>.
"
      end

      operation 6425858 "DropTargetDropEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "dtc" type class_ref 354050 // DropTargetContext
	  param inout name "cursorLocn" type class_ref 323714 // Point
	  param in name "dropAction" explicit_type "int"
	  param in name "srcActions" explicit_type "int"
	  param inout name "isLocal" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DropTargetEvent</code> given the
<code>DropTargetContext</code> for this operation,
the location of the drag <code>Cursor</code>'s hotspot
in the <code>Component</code>'s
coordinates, the currently selected user drop action,
the current set of actions supported by the source,
and a <code>boolean</code> indicating if the source is in the same JVM
as the target.
<P>
@param dtc        The DropTargetContext for this operation
@param cursorLocn The location of the \"Drag\" Cursor's
hotspot in Component's coordinates
@param dropAction the user drop action.
@param srcActions the source drop actions.
@param isLocal  True if the source is in the same JVM as the target

@throws NullPointerException
        if cursorLocn is  <code>null</code>
@throws IllegalArgumentException
        if dropAction is not one of <code>DnDConstants</code>.
@throws IllegalArgumentException if srcActions is not a bitwise mask of <code>DnDConstants</code>.
@throws IllegalArgumentException  if dtc is <code>null</code>.
"
      end

      operation 6425986 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>Point</code>
indicating the <code>Cursor</code>'s current
location in the <code>Component</code>'s coordinates.
<P>
@return the current <code>Cursor</code> location in Component's coords.
"
      end

      operation 6426114 "getCurrentDataFlavors"
	public return_type class_ref 352130 // DataFlavor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the current DataFlavors.
<P>
@return current DataFlavors
"
      end

      operation 6426242 "getCurrentDataFlavorsAsList"
	public return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<DataFlavor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the currently available
<code>DataFlavor</code>s as a <code>java.util.List</code>.
<P>
@return the currently available DataFlavors as a java.util.List
"
      end

      operation 6426370 "isDataFlavorSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "df" type class_ref 352130 // DataFlavor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>boolean</code> indicating if the
specified <code>DataFlavor</code> is available
from the source.
<P>
@param df the <code>DataFlavor</code> to test
<P>
@return if the DataFlavor specified is available from the source
"
      end

      operation 6426498 "getSourceActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the source drop actions.

@return the source drop actions.
"
      end

      operation 6426626 "getDropAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the user drop action.

@return the user drop actions.
"
      end

      operation 6426754 "getTransferable"
	public return_type class_ref 352002 // Transferable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>Transferable</code> object
associated with the drop.
<P>
@return the <code>Transferable</code> associated with the drop
"
      end

      operation 6426882 "acceptDrop"
	public explicit_return_type "void"
	nparams 1
	  param in name "dropAction" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "accept the drop, using the specified action.
<P>
@param dropAction the specified action
"
      end

      operation 6427010 "rejectDrop"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "reject the Drop.
"
      end

      operation 6427138 "dropComplete"
	public explicit_return_type "void"
	nparams 1
	  param inout name "success" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the <code>DragSource</code>
that the drop transfer(s) are completed.
<P>
@param success a <code>boolean</code> indicating that the drop transfer(s) are completed.
"
      end

      operation 6427266 "isLocalTransfer"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an <code>int</code> indicating if
the source is in the same JVM as the target.
<P>
@return if the Source is in the same JVM
"
      end

      classrelation 3003778 // zero (<unidirectional association>)
	relation 3003778 --->
	  a role_name "zero" init_value " new Point(0,0)" class_relation const_relation private
	    comment "
fields

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3003778 // zero (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      classrelation 3003906 // location (<unidirectional association>)
	relation 3003906 --->
	  a role_name "location" init_value " zero" private
	    comment "
The location of the drag cursor's hotspot in Component coordinates.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3003906 // location (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      attribute 1465602 "actions"
	private explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The source drop actions.

@serial

"
      end

      attribute 1465730 "dropAction"
	private explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user drop action.

@serial

"
      end

      attribute 1465858 "isLocalTx"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>true</code> if the source is in the same JVM as the target.

@serial

"
      end
    end

    class 354050 "DropTargetContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>DropTargetContext</code> is created
whenever the logical cursor associated
with a Drag and Drop operation coincides with the visible geometry of
a <code>Component</code> associated with a <code>DropTarget</code>.
The <code>DropTargetContext</code> provides
the mechanism for a potential receiver
of a drop operation to both provide the end user with the appropriate
drag under feedback, but also to effect the subsequent data transfer
if appropriate.

@since 1.2
"
      classrelation 3002370 // <realization>
	relation 3002370 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3002370 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1464578 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -634158968993743371L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6421378 "DropTargetContext"
	package explicit_return_type ""
	nparams 1
	  param inout name "dt" type class_ref 341250 // DropTarget
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DropTargetContext</code>
given a specified <code>DropTarget</code>.
<P>
@param dt the DropTarget to associate with
"
      end

      operation 6421506 "getDropTarget"
	public return_type class_ref 341250 // DropTarget
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>DropTarget</code> associated with this
<code>DropTargetContext</code>.
<P>
@return the <code>DropTarget</code> associated with this <code>DropTargetContext</code>
"
      end

      operation 6421634 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>Component</code> associated with
this <code>DropTargetContext</code>.
<P>
@return the Component associated with this Context
"
      end

      operation 6421762 "addNotify"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtcp" type class_ref 885762 // DropTargetContextPeer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when associated with the <code>DropTargetContextPeer</code>.
<P>
@param dtcp the <code>DropTargetContextPeer</code>
"
      end

      operation 6421890 "removeNotify"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when disassociated with the <code>DropTargetContextPeer</code>.
"
      end

      operation 6422018 "setTargetActions"
	protected explicit_return_type "void"
	nparams 1
	  param in name "actions" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets the current actions acceptable to
this <code>DropTarget</code>.
<P>
@param actions an <code>int</code> representing the supported action(s)
"
      end

      operation 6422146 "getTargetActions"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an <code>int</code> representing the
current actions this <code>DropTarget</code> will accept.
<P>
@return the current actions acceptable to this <code>DropTarget</code>
"
      end

      operation 6422274 "dropComplete"
	public explicit_return_type "void"
	nparams 1
	  param inout name "success" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method signals that the drop is completed and
if it was successful or not.
<P>
@param success true for success, false if not
<P>
@throws InvalidDnDOperationException if a drop is not outstanding/extant
"
      end

      operation 6422402 "acceptDrag"
	protected explicit_return_type "void"
	nparams 1
	  param in name "dragOperation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "accept the Drag.
<P>
@param dragOperation the supported action(s)
"
      end

      operation 6422530 "rejectDrag"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "reject the Drag.
"
      end

      operation 6422658 "acceptDrop"
	protected explicit_return_type "void"
	nparams 1
	  param in name "dropOperation" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called to signal that the drop is acceptable
using the specified operation.
must be called during DropTargetListener.drop method invocation.
<P>
@param dropOperation the supported action(s)
"
      end

      operation 6422786 "rejectDrop"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "called to signal that the drop is unacceptable.
must be called during DropTargetListener.drop method invocation.
"
      end

      operation 6422914 "getCurrentDataFlavors"
	protected return_type class_ref 352130 // DataFlavor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get the available DataFlavors of the
<code>Transferable</code> operand of this operation.
<P>
@return a <code>DataFlavor[]</code> containing the
supported <code>DataFlavor</code>s of the
<code>Transferable</code> operand.
"
      end

      operation 6423042 "getCurrentDataFlavorsAsList"
	protected return_type class_ref 175362 // List
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<DataFlavor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a the currently available DataFlavors
of the <code>Transferable</code> operand
as a <code>java.util.List</code>.
<P>
@return the currently available
DataFlavors as a <code>java.util.List</code>
"
      end

      operation 6423170 "isDataFlavorSupported"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "df" type class_ref 352130 // DataFlavor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>boolean</code>
indicating if the given <code>DataFlavor</code> is
supported by this <code>DropTargetContext</code>.
<P>
@param df the <code>DataFlavor</code>
<P>
@return if the <code>DataFlavor</code> specified is supported
"
      end

      operation 6423298 "getTransferable"
	protected return_type class_ref 352002 // Transferable
	nparams 0
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get the Transferable (proxy) operand of this operation
<P>
@throws InvalidDnDOperationException if a drag is not outstanding/extant
<P>
@return the <code>Transferable</code>
"
      end

      operation 6423426 "getDropTargetContextPeer"
	package return_type class_ref 885762 // DropTargetContextPeer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the <code>DropTargetContextPeer</code>
<P>
@return the platform peer
"
      end

      operation 6423554 "createTransferableProxy"
	protected return_type class_ref 352002 // Transferable
	nparams 2
	  param inout name "t" type class_ref 352002 // Transferable
	  param inout name "local" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a TransferableProxy to proxy for the specified
Transferable.

@param t the <tt>Transferable</tt> to be proxied
@param local <tt>true</tt> if <tt>t</tt> represents
       the result of a local drag-n-drop operation.
@return the new <tt>TransferableProxy</tt> instance.
"
      end

      class 885890 "TransferableProxy"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3002498 // <realization>
	  relation 3002498 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 3002498 // <realization>
	    b parent class_ref 352002 // Transferable
	end

	operation 6423682 "TransferableProxy"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "t" type class_ref 352002 // Transferable
	    param inout name "local" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>TransferableProxy</code> given
a specified <code>Transferable</code> object representing
data transfer for a particular drag-n-drop operation and
a <code>boolean</code> which indicates whether the
drag-n-drop operation is local (within the same JVM).
<p>
@param t the <code>Transferable</code> object
@param local <code>true</code>, if <code>t</code> represents
       the result of local drag-n-drop operation
"
	end

	operation 6423810 "getTransferDataFlavors"
	  public return_type class_ref 352130 // DataFlavor
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an array of DataFlavor objects indicating the flavors
the data can be provided in by the encapsulated transferable.
<p>
@return an array of data flavors in which the data can be
        provided by the encapsulated transferable
"
	end

	operation 6423938 "isDataFlavorSupported"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "flavor" type class_ref 352130 // DataFlavor
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether or not the specified data flavor is supported by
the encapsulated transferable.
@param flavor the requested flavor for the data
@return <code>true</code> if the data flavor is supported,
        <code>false</code> otherwise
"
	end

	operation 6424066 "getTransferData"
	  public return_type class_ref 129538 // Object
	  nparams 1
	    param inout name "df" type class_ref 352130 // DataFlavor
	  nexceptions 2
	    exception class_ref 353282 // UnsupportedFlavorException
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns an object which represents the data provided by
the encapsulated transferable for the requested data flavor.
<p>
In case of local transfer a serialized copy of the object
returned by the encapsulated transferable is provided when
the data is requested in application/x-java-serialized-object
data flavor.

@param df the requested flavor for the data
@throws IOException if the data is no longer available
             in the requested flavor.
@throws UnsupportedFlavorException if the requested data flavor is
             not supported.
"
	end

	classrelation 3002626 // transferable (<unidirectional association>)
	  relation 3002626 --->
	    a role_name "transferable" protected
	      comment "
fields

 We don't need to worry about client code changing the values of
 these variables. Since TransferableProxy is a protected class, only
 subclasses of DropTargetContext can access it. And DropTargetContext
 cannot be subclassed by client code because it does not have a
 public constructor.

The encapsulated <code>Transferable</code> object.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3002626 // transferable (<unidirectional association>)
	    b parent class_ref 352002 // Transferable
	end

	attribute 1464706 "isLocal"
	  protected explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "A <code>boolean</code> indicating if the encapsulated
<code>Transferable</code> object represents the result
of local drag-n-drop operation (within the same JVM).

"
	end

	attribute 1464834 "proxy"
	  private explicit_type "sun.awt.datatransfer.TransferableProxy"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 3002754 // dropTarget (<unidirectional association>)
	relation 3002754 --->
	  a role_name "dropTarget" private
	    comment "
fields


The DropTarget associated with this DropTargetContext.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3002754 // dropTarget (<unidirectional association>)
	  b parent class_ref 341250 // DropTarget
      end

      classrelation 3002882 // dropTargetContextPeer (<unidirectional association>)
	relation 3002882 --->
	  a role_name "dropTargetContextPeer" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3002882 // dropTargetContextPeer (<unidirectional association>)
	  b parent class_ref 885762 // DropTargetContextPeer
      end

      classrelation 3003010 // transferable (<unidirectional association>)
	relation 3003010 --->
	  a role_name "transferable" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3003010 // transferable (<unidirectional association>)
	  b parent class_ref 352002 // Transferable
      end
    end

    class 354562 "Autoscroll"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "During DnD operations it is possible that a user may wish to drop the
subject of the operation on a region of a scrollable GUI control that is
not currently visible to the user.
<p>
In such situations it is desirable that the GUI control detect this
and institute a scroll operation in order to make obscured region(s)
visible to the user. This feature is known as autoscrolling.
<p>
If a GUI control is both an active <code>DropTarget</code>
and is also scrollable, it
can receive notifications of autoscrolling gestures by the user from
the DnD system by implementing this interface.
<p>
An autoscrolling gesture is initiated by the user by keeping the drag
cursor motionless with a border region of the <code>Component</code>,
referred to as
the \"autoscrolling region\", for a predefined period of time, this will
result in repeated scroll requests to the <code>Component</code>
until the drag <code>Cursor</code> resumes its motion.

@since 1.2
"
      operation 6406914 "getAutoscrollInsets"
	public return_type class_ref 343938 // Insets
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>Insets</code> describing
the autoscrolling region or border relative
to the geometry of the implementing Component.
<P>
This value is read once by the <code>DropTarget</code>
upon entry of the drag <code>Cursor</code>
into the associated <code>Component</code>.
<P>
@return the Insets
"
      end

      operation 6407042 "autoscroll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursorLocn" type class_ref 323714 // Point
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "notify the <code>Component</code> to autoscroll
<P>
@param cursorLocn A <code>Point</code> indicating the
location of the cursor that triggered this operation.
"
      end
    end

    class 355330 "DragGestureListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The listener interface for receiving drag gesture events.
This interface is intended for a drag gesture recognition
implementation. See a specification for {@code DragGestureRecognizer}
for details on how to register the listener interface.
Upon recognition of a drag gesture the {@code
DragGestureRecognizer} calls this interface's
{@link #dragGestureRecognized dragGestureRecognized()}
method and passes a {@code DragGestureEvent}.


@see java.awt.dnd.DragGestureRecognizer
@see java.awt.dnd.DragGestureEvent
@see java.awt.dnd.DragSource
"
      classrelation 615298 // <generalisation>
	relation 615298 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 615298 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 1982466 "dragGestureRecognized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dge" type class_ref 355458 // DragGestureEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is invoked by the {@code DragGestureRecognizer}
when the {@code DragGestureRecognizer} detects a platform-dependent
drag initiating gesture. To initiate the drag and drop operation,
if appropriate, {@link DragGestureEvent#startDrag startDrag()} method on
the {@code DragGestureEvent} has to be invoked.
<P>
@see java.awt.dnd.DragGestureRecognizer
@see java.awt.dnd.DragGestureEvent
@param dge the <code>DragGestureEvent</code> describing
the gesture that has just occurred
"
      end
    end

    class 355458 "DragGestureEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>DragGestureEvent</code> is passed
to <code>DragGestureListener</code>'s
dragGestureRecognized() method
when a particular <code>DragGestureRecognizer</code> detects that a
platform dependent drag initiating gesture has occurred
on the <code>Component</code> that it is tracking.

The {@code action} field of any {@code DragGestureEvent} instance should take one of the following
values:
<ul>
<li> {@code DnDConstants.ACTION_COPY}
<li> {@code DnDConstants.ACTION_MOVE}
<li> {@code DnDConstants.ACTION_LINK}
</ul>
Assigning the value different from listed above will cause an unspecified behavior.

@see java.awt.dnd.DragGestureRecognizer
@see java.awt.dnd.DragGestureListener
@see java.awt.dnd.DragSource
@see java.awt.dnd.DnDConstants
"
      classrelation 2998146 // <generalisation>
	relation 2998146 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2998146 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 1461506 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9080172649166731306L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6409346 "DragGestureEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "dgr" type class_ref 356098 // DragGestureRecognizer
	  param in name "act" explicit_type "int"
	  param inout name "ori" type class_ref 323714 // Point
	  param inout name "evs" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<? extends InputEvent> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DragGestureEvent</code> object given by the
<code>DragGestureRecognizer</code> instance firing this event,
an {@code act} parameter representing
the user's preferred action, an {@code ori} parameter
indicating the origin of the drag, and a {@code List} of
events that comprise the gesture({@code evs} parameter).
<P>
@param dgr The <code>DragGestureRecognizer</code> firing this event
@param act The user's preferred action.
           For information on allowable values, see
           the class description for {@link DragGestureEvent}
@param ori The origin of the drag
@param evs The <code>List</code> of events that comprise the gesture
<P>
@throws IllegalArgumentException if any parameter equals {@code null}
@throws IllegalArgumentException if the act parameter does not comply with
                                 the values given in the class
                                 description for {@link DragGestureEvent}
@see java.awt.dnd.DnDConstants
"
      end

      operation 6409474 "getSourceAsDragGestureRecognizer"
	public return_type class_ref 356098 // DragGestureRecognizer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the source as a <code>DragGestureRecognizer</code>.
<P>
@return the source as a <code>DragGestureRecognizer</code>
"
      end

      operation 6409602 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Component</code> associated
with this <code>DragGestureEvent</code>.
<P>
@return the Component
"
      end

      operation 6409730 "getDragSource"
	public return_type class_ref 356226 // DragSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>DragSource</code>.
<P>
@return the <code>DragSource</code>
"
      end

      operation 6409858 "getDragOrigin"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>Point</code> in the coordinates
of the <code>Component</code> over which the drag originated.
<P>
@return the Point where the drag originated in Component coords.
"
      end

      operation 6409986 "iterator"
	public return_type class_ref 132994 // Iterator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<InputEvent> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an <code>Iterator</code> for the events
comprising the gesture.
<P>
@return an Iterator for the events comprising the gesture
"
      end

      operation 6410114 "toArray"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Object</code> array of the
events comprising the drag gesture.
<P>
@return an array of the events comprising the gesture
"
      end

      operation 6410242 "toArray"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "array" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array of the events comprising the drag gesture.
<P>
@param array the array of <code>EventObject</code> sub(types)
<P>
@return an array of the events comprising the gesture
"
      end

      operation 6410370 "getDragAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>int</code> representing the
action selected by the user.
<P>
@return the action selected by the user
"
      end

      operation 6410498 "getTriggerEvent"
	public return_type class_ref 352386 // InputEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the initial event that triggered the gesture.
<P>
@return the first \"triggering\" event in the sequence of the gesture
"
      end

      operation 6410626 "startDrag"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "transferable" type class_ref 352002 // Transferable
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the drag operation given the <code>Cursor</code> for this drag
operation and the <code>Transferable</code> representing the source data
for this drag operation.
<br>
If a <code>null</code> <code>Cursor</code> is specified no exception will
be thrown and default drag cursors will be used instead.
<br>
If a <code>null</code> <code>Transferable</code> is specified
<code>NullPointerException</code> will be thrown.
@param dragCursor     The initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see
                      <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism
                      during drag and drop
@param transferable The <code>Transferable</code> representing the source
                    data for this drag operation.

@throws InvalidDnDOperationException if the Drag and Drop
        system is unable to initiate a drag operation, or if the user
        attempts to start a drag while an existing drag operation is
        still executing.
@throws NullPointerException if the {@code Transferable} is {@code null}
@since 1.4
"
      end

      operation 6410754 "startDrag"
	public explicit_return_type "void"
	nparams 3
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the drag given the initial <code>Cursor</code> to display,
the <code>Transferable</code> object,
and the <code>DragSourceListener</code> to use.
<P>
@param dragCursor     The initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see
                      <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism
                      during drag and drop
@param transferable The source's Transferable
@param dsl          The source's DragSourceListener
<P>
@throws InvalidDnDOperationException if
the Drag and Drop system is unable to
initiate a drag operation, or if the user
attempts to start a drag while an existing
drag operation is still executing.
"
      end

      operation 6410882 "startDrag"
	public explicit_return_type "void"
	nparams 5
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "dragImage" type class_ref 340098 // Image
	  param inout name "imageOffset" type class_ref 323714 // Point
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the drag given the initial <code>Cursor</code> to display,
a drag <code>Image</code>, the offset of
the <code>Image</code>,
the <code>Transferable</code> object, and
the <code>DragSourceListener</code> to use.
<P>
@param dragCursor     The initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see
                      <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism
                      during drag and drop
@param dragImage    The source's dragImage
@param imageOffset  The dragImage's offset
@param transferable The source's Transferable
@param dsl          The source's DragSourceListener
<P>
@throws InvalidDnDOperationException if
the Drag and Drop system is unable to
initiate a drag operation, or if the user
attempts to start a drag while an existing
drag operation is still executing.
"
      end

      operation 6411010 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>DragGestureEvent</code>. Performs default
serialization and then writes out this object's <code>List</code> of
gesture events if and only if the <code>List</code> can be serialized.
If not, <code>null</code> is written instead. In this case, a
<code>DragGestureEvent</code> created from the resulting deserialized
stream will contain an empty <code>List</code> of gesture events.

@serialData The default serializable fields, in alphabetical order,
            followed by either a <code>List</code> instance, or
            <code>null</code>.
@since 1.4
"
      end

      operation 6411138 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>DragGestureEvent</code>. This method first
performs default deserialization for all non-<code>transient</code>
fields. An attempt is then made to deserialize this object's
<code>List</code> of gesture events as well. This is first attempted
by deserializing the field <code>events</code>, because, in releases
prior to 1.4, a non-<code>transient</code> field of this name stored the
<code>List</code> of gesture events. If this fails, the next object in
the stream is used instead. If the resulting <code>List</code> is
<code>null</code>, this object's <code>List</code> of gesture events
is set to an empty <code>List</code>.

@since 1.4
"
      end

      classrelation 2998274 // events (<unidirectional association>)
	relation 2998274 --->
	  a role_name "events" private
	    comment "
fields

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"rawtypes\")
"
	    classrelation_ref 2998274 // events (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 2998402 // dragSource (<unidirectional association>)
	relation 2998402 --->
	  a role_name "dragSource" private
	    comment "
The DragSource associated with this DragGestureEvent.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2998402 // dragSource (<unidirectional association>)
	  b parent class_ref 356226 // DragSource
      end

      classrelation 2998530 // component (<unidirectional association>)
	relation 2998530 --->
	  a role_name "component" private
	    comment "
The Component associated with this DragGestureEvent.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2998530 // component (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 2998658 // origin (<unidirectional association>)
	relation 2998658 --->
	  a role_name "origin" private
	    comment "
The origin of the drag.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2998658 // origin (<unidirectional association>)
	  b parent class_ref 323714 // Point
      end

      attribute 1461634 "action"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user's preferred action.

@serial

"
      end
    end

    class 355586 "DragSourceListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragSourceListener</code> defines the
event interface for originators of
Drag and Drop operations to track the state of the user's gesture, and to
provide appropriate &quot;drag over&quot;
feedback to the user throughout the
Drag and Drop operation.
<p>
The drop site is <i>associated with the previous <code>dragEnter()</code>
invocation</i> if the latest invocation of <code>dragEnter()</code> on this
listener:
<ul>
<li>corresponds to that drop site and
<li> is not followed by a <code>dragExit()</code> invocation on this listener.
</ul>

@since 1.2
"
      classrelation 615554 // <generalisation>
	relation 615554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 615554 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 1982594 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot enters a platform-dependent drop site.
This method is invoked when all the following conditions are true:
<UL>
<LI>The cursor's hotspot enters the operable part of a platform-
dependent drop site.
<LI>The drop site is active.
<LI>The drop site accepts the drag.
</UL>

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 1982722 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot moves over a platform-dependent drop site.
This method is invoked when all the following conditions are true:
<UL>
<LI>The cursor's hotspot has moved, but still intersects the
operable part of the drop site associated with the previous
dragEnter() invocation.
<LI>The drop site is still active.
<LI>The drop site accepts the drag.
</UL>

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 1982850 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the user has modified the drop gesture.
This method is invoked when the state of the input
device(s) that the user is interacting with changes.
Such devices are typically the mouse buttons or keyboard
modifiers that the user is interacting with.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 1982978 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dse" type class_ref 355842 // DragSourceEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot exits a platform-dependent drop site.
This method is invoked when any of the following conditions are true:
<UL>
<LI>The cursor's hotspot no longer intersects the operable part
of the drop site associated with the previous dragEnter() invocation.
</UL>
OR
<UL>
<LI>The drop site associated with the previous dragEnter() invocation
is no longer active.
</UL>
OR
<UL>
<LI> The drop site associated with the previous dragEnter() invocation
has rejected the drag.
</UL>

@param dse the <code>DragSourceEvent</code>
"
      end

      operation 1983106 "dragDropEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is invoked to signify that the Drag and Drop
operation is complete. The getDropSuccess() method of
the <code>DragSourceDropEvent</code> can be used to
determine the termination state. The getDropAction() method
returns the operation that the drop site selected
to apply to the Drop operation. Once this method is complete, the
current <code>DragSourceContext</code> and
associated resources become invalid.

@param dsde the <code>DragSourceDropEvent</code>
"
      end
    end

    class 355714 "DragSourceDragEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragSourceDragEvent</code> is
delivered from the <code>DragSourceContextPeer</code>,
via the <code>DragSourceContext</code>, to the <code>DragSourceListener</code>
registered with that <code>DragSourceContext</code> and with its associated
<code>DragSource</code>.
<p>
The <code>DragSourceDragEvent</code> reports the <i>target drop action</i>
and the <i>user drop action</i> that reflect the current state of
the drag operation.
<p>
<i>Target drop action</i> is one of <code>DnDConstants</code> that represents
the drop action selected by the current drop target if this drop action is
supported by the drag source or <code>DnDConstants.ACTION_NONE</code> if this
drop action is not supported by the drag source.
<p>
<i>User drop action</i> depends on the drop actions supported by the drag
source and the drop action selected by the user. The user can select a drop
action by pressing modifier keys during the drag operation:
<pre>
  Ctrl + Shift -&gt; ACTION_LINK
  Ctrl         -&gt; ACTION_COPY
  Shift        -&gt; ACTION_MOVE
</pre>
If the user selects a drop action, the <i>user drop action</i> is one of
<code>DnDConstants</code> that represents the selected drop action if this
drop action is supported by the drag source or
<code>DnDConstants.ACTION_NONE</code> if this drop action is not supported
by the drag source.
<p>
If the user doesn't select a drop action, the set of
<code>DnDConstants</code> that represents the set of drop actions supported
by the drag source is searched for <code>DnDConstants.ACTION_MOVE</code>,
then for <code>DnDConstants.ACTION_COPY</code>, then for
<code>DnDConstants.ACTION_LINK</code> and the <i>user drop action</i> is the
first constant found. If no constant is found the <i>user drop action</i>
is <code>DnDConstants.ACTION_NONE</code>.

@since 1.2

"
      classrelation 3001986 // <generalisation>
	relation 3001986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3001986 // <generalisation>
	  b parent class_ref 355842 // DragSourceEvent
      end

      attribute 1463298 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 481346297933902471L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6419074 "DragSourceDragEvent"
	public explicit_return_type ""
	nparams 4
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	  param in name "dropAction" explicit_type "int"
	  param in name "action" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DragSourceDragEvent</code>.
This class is typically
instantiated by the <code>DragSourceContextPeer</code>
rather than directly
by client code.
The coordinates for this <code>DragSourceDragEvent</code>
are not specified, so <code>getLocation</code> will return
<code>null</code> for this event.
<p>
The arguments <code>dropAction</code> and <code>action</code> should
be one of <code>DnDConstants</code> that represents a single action.
The argument <code>modifiers</code> should be either a bitwise mask
of old <code>java.awt.event.InputEvent.*_MASK</code> constants or a
bitwise mask of extended <code>java.awt.event.InputEvent.*_DOWN_MASK</code>
constants.
This constructor does not throw any exception for invalid <code>dropAction</code>,
<code>action</code> and <code>modifiers</code>.

@param dsc the <code>DragSourceContext</code> that is to manage
           notifications for this event.
@param dropAction the user drop action.
@param action the target drop action.
@param modifiers the modifier keys down during event (shift, ctrl,
       alt, meta)
       Either extended _DOWN_MASK or old _MASK modifiers
       should be used, but both models should not be mixed
       in one event. Use of the extended modifiers is
       preferred.

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@see java.awt.event.InputEvent
@see DragSourceEvent#getLocation
"
      end

      operation 6419202 "DragSourceDragEvent"
	public explicit_return_type ""
	nparams 6
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	  param in name "dropAction" explicit_type "int"
	  param in name "action" explicit_type "int"
	  param in name "modifiers" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>DragSourceDragEvent</code> given the specified
<code>DragSourceContext</code>, user drop action, target drop action,
modifiers and coordinates.
<p>
The arguments <code>dropAction</code> and <code>action</code> should
be one of <code>DnDConstants</code> that represents a single action.
The argument <code>modifiers</code> should be either a bitwise mask
of old <code>java.awt.event.InputEvent.*_MASK</code> constants or a
bitwise mask of extended <code>java.awt.event.InputEvent.*_DOWN_MASK</code>
constants.
This constructor does not throw any exception for invalid <code>dropAction</code>,
<code>action</code> and <code>modifiers</code>.

@param dsc the <code>DragSourceContext</code> associated with this
       event.
@param dropAction the user drop action.
@param action the target drop action.
@param modifiers the modifier keys down during event (shift, ctrl,
       alt, meta)
       Either extended _DOWN_MASK or old _MASK modifiers
       should be used, but both models should not be mixed
       in one event. Use of the extended modifiers is
       preferred.
@param x   the horizontal coordinate for the cursor location
@param y   the vertical coordinate for the cursor location

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@see java.awt.event.InputEvent
@since 1.4
"
      end

      operation 6419330 "getTargetActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the target drop action.

@return the target drop action.
"
      end

      attribute 1463426 "JDK_1_3_MODIFIERS"
	class_attribute const_attribute private explicit_type "int"
	init_value " InputEvent.SHIFT_DOWN_MASK - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1463554 "JDK_1_4_MODIFIERS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
            ((InputEvent.ALT_GRAPH_DOWN_MASK << 1) - 1) & ~JDK_1_3_MODIFIERS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6419458 "getGestureModifiers"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an <code>int</code> representing
the current state of the input device modifiers
associated with the user's gesture. Typically these
would be mouse buttons or keyboard modifiers.
<P>
If the <code>modifiers</code> passed to the constructor
are invalid, this method returns them unchanged.

@return the current state of the input device modifiers
"
      end

      operation 6419586 "getGestureModifiersEx"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an <code>int</code> representing
the current state of the input device extended modifiers
associated with the user's gesture.
See {@link InputEvent#getModifiersEx}
<P>
If the <code>modifiers</code> passed to the constructor
are invalid, this method returns them unchanged.

@return the current state of the input device extended modifiers
@since 1.4
"
      end

      operation 6419714 "getUserAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the user drop action.

@return the user drop action.
"
      end

      operation 6419842 "getDropAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the logical intersection of
the target drop action and the set of drop actions supported by
the drag source.

@return the logical intersection of the target drop action and
        the set of drop actions supported by the drag source.
"
      end

      attribute 1463682 "targetActions"
	private explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "fields


The target drop action.

@serial

"
      end

      attribute 1463810 "dropAction"
	private explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The user drop action.

@serial

"
      end

      attribute 1463938 "gestureModifiers"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The state of the input device modifiers associated with the user
gesture.

@serial

"
      end

      attribute 1464066 "invalidModifiers"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Indicates whether the <code>gestureModifiers</code> are invalid.

@serial

"
      end

      operation 6419970 "setNewModifiers"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets new modifiers by the old ones.
The mouse modifiers have higher priority than overlaying key
modifiers.
"
      end

      operation 6420098 "setOldModifiers"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets old modifiers by the new ones.
"
      end
    end

    class 355842 "DragSourceEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is the base class for
<code>DragSourceDragEvent</code> and
<code>DragSourceDropEvent</code>.
<p>
<code>DragSourceEvent</code>s are generated whenever the drag enters, moves
over, or exits a drop site, when the drop action changes, and when the drag
ends. The location for the generated <code>DragSourceEvent</code> specifies
the mouse cursor location in screen coordinates at the moment this event
occurred.
<p>
In a multi-screen environment without a virtual device, the cursor location is
specified in the coordinate system of the <i>initiator</i>
<code>GraphicsConfiguration</code>. The <i>initiator</i>
<code>GraphicsConfiguration</code> is the <code>GraphicsConfiguration</code>
of the <code>Component</code> on which the drag gesture for the current drag
operation was recognized. If the cursor location is outside the bounds of
the initiator <code>GraphicsConfiguration</code>, the reported coordinates are
clipped to fit within the bounds of that <code>GraphicsConfiguration</code>.
<p>
In a multi-screen environment with a virtual device, the location is specified
in the corresponding virtual coordinate system. If the cursor location is
outside the bounds of the virtual device the reported coordinates are
clipped to fit within the bounds of the virtual device.

@since 1.2
"
      classrelation 3001858 // <generalisation>
	relation 3001858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3001858 // <generalisation>
	  b parent class_ref 525698 // EventObject
      end

      attribute 1462786 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -763287114604032641L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1462914 "locationSpecified"
	const_attribute private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The <code>boolean</code> indicating whether the cursor location
is specified for this event.

@serial

"
      end

      attribute 1463042 "x"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The horizontal coordinate for the cursor location at the moment this
event occurred if the cursor location is specified for this event;
otherwise zero.

@serial

"
      end

      attribute 1463170 "y"
	const_attribute private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The vertical coordinate for the cursor location at the moment this event
occurred if the cursor location is specified for this event;
otherwise zero.

@serial

"
      end

      operation 6418306 "DragSourceEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DragSourceEvent</code>
given a specified <code>DragSourceContext</code>.
The coordinates for this <code>DragSourceEvent</code>
are not specified, so <code>getLocation</code> will return
<code>null</code> for this event.

@param dsc the <code>DragSourceContext</code>

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@see #getLocation
"
      end

      operation 6418434 "DragSourceEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DragSourceEvent</code> given a specified
<code>DragSourceContext</code>, and coordinates of the cursor
location.

@param dsc the <code>DragSourceContext</code>
@param x   the horizontal coordinate for the cursor location
@param y   the vertical coordinate for the cursor location

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@since 1.4
"
      end

      operation 6418562 "getDragSourceContext"
	public return_type class_ref 885378 // DragSourceContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>DragSourceContext</code> that
originated the event.
<P>
@return the <code>DragSourceContext</code> that originated the event
"
      end

      operation 6418690 "getLocation"
	public return_type class_ref 323714 // Point
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>Point</code> indicating the cursor
location in screen coordinates at the moment this event occurred, or
<code>null</code> if the cursor location is not specified for this
event.

@return the <code>Point</code> indicating the cursor location
        or <code>null</code> if the cursor location is not specified
@since 1.4
"
      end

      operation 6418818 "getX"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the horizontal coordinate of the cursor location in
screen coordinates at the moment this event occurred, or zero if the
cursor location is not specified for this event.

@return an integer indicating the horizontal coordinate of the cursor
        location or zero if the cursor location is not specified
@since 1.4
"
      end

      operation 6418946 "getY"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the vertical coordinate of the cursor location in
screen coordinates at the moment this event occurred, or zero if the
cursor location is not specified for this event.

@return an integer indicating the vertical coordinate of the cursor
        location or zero if the cursor location is not specified
@since 1.4
"
      end
    end

    class 355970 "DragSourceDropEvent"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragSourceDropEvent</code> is delivered
from the <code>DragSourceContextPeer</code>,
via the <code>DragSourceContext</code>, to the <code>dragDropEnd</code>
method of <code>DragSourceListener</code>s registered with that
<code>DragSourceContext</code> and with its associated
<code>DragSource</code>.
It contains sufficient information for the
originator of the operation
to provide appropriate feedback to the end user
when the operation completes.
<P>
@since 1.2
"
      classrelation 3002114 // <generalisation>
	relation 3002114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3002114 // <generalisation>
	  b parent class_ref 355842 // DragSourceEvent
      end

      attribute 1464194 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5571321229470821891L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6420226 "DragSourceDropEvent"
	public explicit_return_type ""
	nparams 3
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	  param in name "action" explicit_type "int"
	  param inout name "success" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DragSourceDropEvent</code> for a drop,
given the
<code>DragSourceContext</code>, the drop action,
and a <code>boolean</code> indicating if the drop was successful.
The coordinates for this <code>DragSourceDropEvent</code>
are not specified, so <code>getLocation</code> will return
<code>null</code> for this event.
<p>
The argument <code>action</code> should be one of <code>DnDConstants</code>
that represents a single action.
This constructor does not throw any exception for invalid <code>action</code>.

@param dsc the <code>DragSourceContext</code>
associated with this <code>DragSourceDropEvent</code>
@param action the drop action
@param success a boolean indicating if the drop was successful

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@see DragSourceEvent#getLocation
"
      end

      operation 6420354 "DragSourceDropEvent"
	public explicit_return_type ""
	nparams 5
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	  param in name "action" explicit_type "int"
	  param inout name "success" explicit_type "boolean"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DragSourceDropEvent</code> for a drop, given the
<code>DragSourceContext</code>, the drop action, a <code>boolean</code>
indicating if the drop was successful, and coordinates.
<p>
The argument <code>action</code> should be one of <code>DnDConstants</code>
that represents a single action.
This constructor does not throw any exception for invalid <code>action</code>.

@param dsc the <code>DragSourceContext</code>
associated with this <code>DragSourceDropEvent</code>
@param action the drop action
@param success a boolean indicating if the drop was successful
@param x   the horizontal coordinate for the cursor location
@param y   the vertical coordinate for the cursor location

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@since 1.4
"
      end

      operation 6420482 "DragSourceDropEvent"
	public explicit_return_type ""
	nparams 1
	  param inout name "dsc" type class_ref 885378 // DragSourceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a <code>DragSourceDropEvent</code>
for a drag that does not result in a drop.
The coordinates for this <code>DragSourceDropEvent</code>
are not specified, so <code>getLocation</code> will return
<code>null</code> for this event.

@param dsc the <code>DragSourceContext</code>

@throws IllegalArgumentException if <code>dsc</code> is <code>null</code>.

@see DragSourceEvent#getLocation
"
      end

      operation 6420610 "getDropSuccess"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns a <code>boolean</code> indicating
if the drop was successful.

@return <code>true</code> if the drop target accepted the drop and
        successfully performed a drop action;
        <code>false</code> if the drop target rejected the drop or
        if the drop target accepted the drop, but failed to perform
        a drop action.
"
      end

      operation 6420738 "getDropAction"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an <code>int</code> representing
the action performed by the target on the subject of the drop.

@return the action performed by the target on the subject of the drop
        if the drop target accepted the drop and the target drop action
        is supported by the drag source; otherwise,
        <code>DnDConstants.ACTION_NONE</code>.
"
      end

      attribute 1464322 "dropSuccess"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "fields


<code>true</code> if the drop was successful.

@serial

"
      end

      attribute 1464450 "dropAction"
	private explicit_type "int"
	init_value " DnDConstants.ACTION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The drop action.

@serial

"
      end
    end

    class 356098 "DragGestureRecognizer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragGestureRecognizer</code> is an
abstract base class for the specification
of a platform-dependent listener that can be associated with a particular
<code>Component</code> in order to
identify platform-dependent drag initiating gestures.
<p>
The appropriate <code>DragGestureRecognizer</code>
subclass instance is obtained from the
{@link DragSource} associated with
a particular <code>Component</code>, or from the <code>Toolkit</code> object via its
{@link java.awt.Toolkit#createDragGestureRecognizer createDragGestureRecognizer()}
method.
<p>
Once the <code>DragGestureRecognizer</code>
is associated with a particular <code>Component</code>
it will register the appropriate listener interfaces on that
<code>Component</code>
in order to track the input events delivered to the <code>Component</code>.
<p>
Once the <code>DragGestureRecognizer</code> identifies a sequence of events
on the <code>Component</code> as a drag initiating gesture, it will notify
its unicast <code>DragGestureListener</code> by
invoking its
{@link java.awt.dnd.DragGestureListener#dragGestureRecognized gestureRecognized()}
method.
<P>
When a concrete <code>DragGestureRecognizer</code>
instance detects a drag initiating
gesture on the <code>Component</code> it is associated with,
it fires a {@link DragGestureEvent} to
the <code>DragGestureListener</code> registered on
its unicast event source for <code>DragGestureListener</code>
events. This <code>DragGestureListener</code> is responsible
for causing the associated
<code>DragSource</code> to start the Drag and Drop operation (if
appropriate).
<P>
@author Laurence P. G. Cable
@see java.awt.dnd.DragGestureListener
@see java.awt.dnd.DragGestureEvent
@see java.awt.dnd.DragSource
"
      classrelation 615810 // <realization>
	relation 615810 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 615810 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 456706 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8996673345831063337L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 1984002 "DragGestureRecognizer"
	protected explicit_return_type ""
	nparams 4
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	  param in name "sa" explicit_type "int"
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>DragGestureRecognizer</code>
given the <code>DragSource</code> to be used
in this Drag and Drop operation, the <code>Component</code>
this <code>DragGestureRecognizer</code> should \"observe\"
for drag initiating gestures, the action(s) supported
for this Drag and Drop operation, and the
<code>DragGestureListener</code> to notify
once a drag initiating gesture has been detected.
<P>
@param ds  the <code>DragSource</code> this
<code>DragGestureRecognizer</code>
will use to process the Drag and Drop operation

@param c the <code>Component</code>
this <code>DragGestureRecognizer</code>
should \"observe\" the event stream to,
in order to detect a drag initiating gesture.
If this value is <code>null</code>, the
<code>DragGestureRecognizer</code>
is not associated with any <code>Component</code>.

@param sa  the set (logical OR) of the
<code>DnDConstants</code>
that this Drag and Drop operation will support

@param dgl the <code>DragGestureRecognizer</code>
to notify when a drag gesture is detected
<P>
@throws IllegalArgumentException
if ds is <code>null</code>.
"
      end

      operation 1984130 "DragGestureRecognizer"
	protected explicit_return_type ""
	nparams 3
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	  param in name "sa" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>DragGestureRecognizer</code>
given the <code>DragSource</code> to be used in this
Drag and Drop
operation, the <code>Component</code> this
<code>DragGestureRecognizer</code> should \"observe\"
for drag initiating gestures, and the action(s)
supported for this Drag and Drop operation.
<P>
@param ds  the <code>DragSource</code> this
<code>DragGestureRecognizer</code> will use to
process the Drag and Drop operation

@param c   the <code>Component</code> this
<code>DragGestureRecognizer</code> should \"observe\" the event
stream to, in order to detect a drag initiating gesture.
If this value is <code>null</code>, the
<code>DragGestureRecognizer</code>
is not associated with any <code>Component</code>.

@param sa the set (logical OR) of the <code>DnDConstants</code>
that this Drag and Drop operation will support
<P>
@throws IllegalArgumentException
if ds is <code>null</code>.
"
      end

      operation 1984258 "DragGestureRecognizer"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>DragGestureRecognizer</code>
given the <code>DragSource</code> to be used
in this Drag and Drop operation, and
the <code>Component</code> this
<code>DragGestureRecognizer</code>
should \"observe\" for drag initiating gestures.
<P>
@param ds the <code>DragSource</code> this
<code>DragGestureRecognizer</code>
will use to process the Drag and Drop operation

@param c the <code>Component</code>
this <code>DragGestureRecognizer</code>
should \"observe\" the event stream to,
in order to detect a drag initiating gesture.
If this value is <code>null</code>,
the <code>DragGestureRecognizer</code>
is not associated with any <code>Component</code>.
<P>
@throws IllegalArgumentException
if ds is <code>null</code>.
"
      end

      operation 1984386 "DragGestureRecognizer"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ds" type class_ref 356226 // DragSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>DragGestureRecognizer</code>
given the <code>DragSource</code> to be used in this
Drag and Drop operation.
<P>
@param ds the <code>DragSource</code> this
<code>DragGestureRecognizer</code> will
use to process the Drag and Drop operation
<P>
@throws IllegalArgumentException
if ds is <code>null</code>.
"
      end

      operation 1984514 "registerListeners"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "register this DragGestureRecognizer's Listeners with the Component

subclasses must override this method
"
      end

      operation 1984642 "unregisterListeners"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "unregister this DragGestureRecognizer's Listeners with the Component

subclasses must override this method
"
      end

      operation 1984770 "getDragSource"
	public return_type class_ref 356226 // DragSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>DragSource</code>
this <code>DragGestureRecognizer</code>
will use in order to process the Drag and Drop
operation.
<P>
@return the DragSource
"
      end

      operation 1984898 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the <code>Component</code>
that is to be \"observed\" by the
<code>DragGestureRecognizer</code>
for drag initiating gestures.
<P>
@return The Component this DragGestureRecognizer
is associated with
"
      end

      operation 1985026 "setComponent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "set the Component that the DragGestureRecognizer is associated with

registerListeners() and unregisterListeners() are called as a side
effect as appropriate.
<P>
@param c The <code>Component</code> or <code>null</code>
"
      end

      operation 1985154 "getSourceActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns an int representing the
type of action(s) this Drag and Drop
operation will support.
<P>
@return the currently permitted source action(s)
"
      end

      operation 1985282 "setSourceActions"
	public explicit_return_type "void"
	nparams 1
	  param in name "actions" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method sets the permitted source drag action(s)
for this Drag and Drop operation.
<P>
@param actions the permitted source drag action(s)
"
      end

      operation 1985410 "getTriggerEvent"
	public return_type class_ref 352386 // InputEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the first event in the
series of events that initiated
the Drag and Drop operation.
<P>
@return the initial event that triggered the drag gesture
"
      end

      operation 1985538 "resetRecognizer"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the Recognizer, if its currently recognizing a gesture, ignore
it.
"
      end

      operation 1985666 "addDragGestureListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	nexceptions 1
	  exception class_ref 353922 // TooManyListenersException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a new <code>DragGestureListener</code>.
<P>
@param dgl the <code>DragGestureListener</code> to register
with this <code>DragGestureRecognizer</code>.
<P>
@throws java.util.TooManyListenersException if a
<code>DragGestureListener</code> has already been added.
"
      end

      operation 1985794 "removeDragGestureListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "unregister the current DragGestureListener
<P>
@param dgl the <code>DragGestureListener</code> to unregister
from this <code>DragGestureRecognizer</code>
<P>
@throws IllegalArgumentException if
dgl is not (equal to) the currently registered <code>DragGestureListener</code>.
"
      end

      operation 1985922 "fireDragGestureRecognized"
	protected explicit_return_type "void"
	nparams 2
	  param in name "dragAction" explicit_type "int"
	  param inout name "p" type class_ref 323714 // Point
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the DragGestureListener that a Drag and Drop initiating
gesture has occurred. Then reset the state of the Recognizer.
<P>
@param dragAction The action initially selected by the users gesture
@param p          The point (in Component coords) where the gesture originated
"
      end

      operation 1986050 "appendEvent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "awtie" type class_ref 352386 // InputEvent
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Listeners registered on the Component by this Recognizer shall record
all Events that are recognized as part of the series of Events that go
to comprise a Drag and Drop initiating gesture via this API.
<P>
This method is used by a <code>DragGestureRecognizer</code>
implementation to add an <code>InputEvent</code>
subclass (that it believes is one in a series
of events that comprise a Drag and Drop operation)
to the array of events that this
<code>DragGestureRecognizer</code> maintains internally.
<P>
@param awtie the <code>InputEvent</code>
to add to this <code>DragGestureRecognizer</code>'s
internal array of events. Note that <code>null</code>
is not a valid value, and will be ignored.
"
      end

      operation 1986178 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>DragGestureRecognizer</code>. This method first
performs default serialization. Then, this object's
<code>DragGestureListener</code> is written out if and only if it can be
serialized. If not, <code>null</code> is written instead.

@serialData The default serializable fields, in alphabetical order,
            followed by either a <code>DragGestureListener</code>, or
            <code>null</code>.
@since 1.4
"
      end

      operation 1986306 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Deserializes this <code>DragGestureRecognizer</code>. This method first
performs default deserialization for all non-<code>transient</code>
fields. This object's <code>DragGestureListener</code> is then
deserialized as well by using the next object in the stream.

@since 1.4
"
      end

      classrelation 615938 // dragSource (<unidirectional association>)
	relation 615938 --->
	  a role_name "dragSource" protected
	    comment "
fields


The <code>DragSource</code>
associated with this
<code>DragGestureRecognizer</code>.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 615938 // dragSource (<unidirectional association>)
	  b parent class_ref 356226 // DragSource
      end

      classrelation 616066 // component (<unidirectional association>)
	relation 616066 --->
	  a role_name "component" protected
	    comment "
The <code>Component</code>
associated with this <code>DragGestureRecognizer</code>.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616066 // component (<unidirectional association>)
	  b parent class_ref 338818 // Component
      end

      classrelation 616194 // dragGestureListener (<unidirectional association>)
	relation 616194 --->
	  a role_name "dragGestureListener" protected
	    comment "
The <code>DragGestureListener</code>
associated with this <code>DragGestureRecognizer</code>.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 616194 // dragGestureListener (<unidirectional association>)
	  b parent class_ref 355330 // DragGestureListener
      end

      attribute 456834 "sourceActions"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing
the type(s) of action(s) used
in this Drag and Drop operation.

@serial

"
      end

      classrelation 616322 // events (<unidirectional association>)
	relation 616322 --->
	  a role_name "events" init_value " new ArrayList<InputEvent>(1)" protected
	    comment "
The list of events (in order) that
the <code>DragGestureRecognizer</code>
\"recognized\" as a \"gesture\" that triggers a drag.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<InputEvent> ${name}${value};
"
	    classrelation_ref 616322 // events (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end
    end

    class 356226 "DragSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragSource</code> is the entity responsible
for the initiation of the Drag
and Drop operation, and may be used in a number of scenarios:
<UL>
<LI>1 default instance per JVM for the lifetime of that JVM.
<LI>1 instance per class of potential Drag Initiator object (e.g
TextField). [implementation dependent]
<LI>1 per instance of a particular
<code>Component</code>, or application specific
object associated with a <code>Component</code>
instance in the GUI. [implementation dependent]
<LI>Some other arbitrary association. [implementation dependent]
</UL>

Once the <code>DragSource</code> is
obtained, a <code>DragGestureRecognizer</code> should
also be obtained to associate the <code>DragSource</code>
with a particular
<code>Component</code>.
<P>
The initial interpretation of the user's gesture,
and the subsequent starting of the drag operation
are the responsibility of the implementing
<code>Component</code>, which is usually
implemented by a <code>DragGestureRecognizer</code>.
<P>
When a drag gesture occurs, the
<code>DragSource</code>'s
startDrag() method shall be
invoked in order to cause processing
of the user's navigational
gestures and delivery of Drag and Drop
protocol notifications. A
<code>DragSource</code> shall only
permit a single Drag and Drop operation to be
current at any one time, and shall
reject any further startDrag() requests
by throwing an <code>IllegalDnDOperationException</code>
until such time as the extant operation is complete.
<P>
The startDrag() method invokes the
createDragSourceContext() method to
instantiate an appropriate
<code>DragSourceContext</code>
and associate the <code>DragSourceContextPeer</code>
with that.
<P>
If the Drag and Drop System is
unable to initiate a drag operation for
some reason, the startDrag() method throws
a <code>java.awt.dnd.InvalidDnDOperationException</code>
to signal such a condition. Typically this
exception is thrown when the underlying platform
system is either not in a state to
initiate a drag, or the parameters specified are invalid.
<P>
Note that during the drag, the
set of operations exposed by the source
at the start of the drag operation may not change
until the operation is complete.
The operation(s) are constant for the
duration of the operation with respect to the
<code>DragSource</code>.

@since 1.2
"
      classrelation 2998786 // <realization>
	relation 2998786 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2998786 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1461762 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6236096958971414066L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6411266 "load"
	class_operation private return_type class_ref 340866 // Cursor
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "load a system default cursor
"
      end

      classrelation 2998914 // DefaultCopyDrop (<unidirectional association>)
	relation 2998914 --->
	  a role_name "DefaultCopyDrop" init_value "
        load(\"DnD.Cursor.CopyDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a copy operation indicating
that a drop is currently allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2998914 // DefaultCopyDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999042 // DefaultMoveDrop (<unidirectional association>)
	relation 2999042 --->
	  a role_name "DefaultMoveDrop" init_value "
        load(\"DnD.Cursor.MoveDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a move operation indicating
that a drop is currently allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999042 // DefaultMoveDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999170 // DefaultLinkDrop (<unidirectional association>)
	relation 2999170 --->
	  a role_name "DefaultLinkDrop" init_value "
        load(\"DnD.Cursor.LinkDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a link operation indicating
that a drop is currently allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999170 // DefaultLinkDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999298 // DefaultCopyNoDrop (<unidirectional association>)
	relation 2999298 --->
	  a role_name "DefaultCopyNoDrop" init_value "
        load(\"DnD.Cursor.CopyNoDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a copy operation indicating
that a drop is currently not allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999298 // DefaultCopyNoDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999426 // DefaultMoveNoDrop (<unidirectional association>)
	relation 2999426 --->
	  a role_name "DefaultMoveNoDrop" init_value "
        load(\"DnD.Cursor.MoveNoDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a move operation indicating
that a drop is currently not allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999426 // DefaultMoveNoDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999554 // DefaultLinkNoDrop (<unidirectional association>)
	relation 2999554 --->
	  a role_name "DefaultLinkNoDrop" init_value "
        load(\"DnD.Cursor.LinkNoDrop\")" class_relation const_relation public
	    comment "
The default <code>Cursor</code> to use with a link operation indicating
that a drop is currently not allowed. <code>null</code> if
<code>GraphicsEnvironment.isHeadless()</code> returns <code>true</code>.

@see java.awt.GraphicsEnvironment#isHeadless

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999554 // DefaultLinkNoDrop (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 2999682 // dflt (<unidirectional association>)
	relation 2999682 --->
	  a role_name "dflt" init_value "
        (GraphicsEnvironment.isHeadless()) ? null : new DragSource()" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999682 // dflt (<unidirectional association>)
	  b parent class_ref 356226 // DragSource
      end

      classrelation 2999810 // dragSourceListenerK (<unidirectional association>)
	relation 2999810 --->
	  a role_name "dragSourceListenerK" init_value " \"dragSourceL\"" class_relation const_relation package
	    comment "
Internal constants for serialization.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999810 // dragSourceListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2999938 // dragSourceMotionListenerK (<unidirectional association>)
	relation 2999938 --->
	  a role_name "dragSourceMotionListenerK" init_value " \"dragSourceMotionL\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2999938 // dragSourceMotionListenerK (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6411394 "getDefaultDragSource"
	class_operation public return_type class_ref 356226 // DragSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the <code>DragSource</code> object associated with
the underlying platform.

@return the platform DragSource
@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6411522 "isDragImageSupported"
	class_operation public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports
whether or not drag
<code>Image</code> support
is available on the underlying platform.
<P>
@return if the Drag Image support is available on this platform
"
      end

      operation 6411650 "DragSource"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 343554 // HeadlessException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>DragSource</code>.

@exception HeadlessException if GraphicsEnvironment.isHeadless()
           returns true
@see java.awt.GraphicsEnvironment#isHeadless
"
      end

      operation 6411778 "startDrag"
	public explicit_return_type "void"
	nparams 7
	  param inout name "trigger" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "dragImage" type class_ref 340098 // Image
	  param inout name "imageOffset" type class_ref 323714 // Point
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	  param inout name "flavorMap" type class_ref 353794 // FlavorMap
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a drag, given the <code>DragGestureEvent</code>
that initiated the drag, the initial
<code>Cursor</code> to use,
the <code>Image</code> to drag,
the offset of the <code>Image</code> origin
from the hotspot of the <code>Cursor</code> at
the instant of the trigger,
the <code>Transferable</code> subject data
of the drag, the <code>DragSourceListener</code>,
and the <code>FlavorMap</code>.
<P>
@param trigger        the <code>DragGestureEvent</code> that initiated the drag
@param dragCursor     the initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism during drag and drop
@param dragImage      the image to drag or {@code null}
@param imageOffset    the offset of the <code>Image</code> origin from the hotspot
                      of the <code>Cursor</code> at the instant of the trigger
@param transferable   the subject data of the drag
@param dsl            the <code>DragSourceListener</code>
@param flavorMap      the <code>FlavorMap</code> to use, or <code>null</code>
<P>
@throws java.awt.dnd.InvalidDnDOperationException
   if the Drag and Drop
   system is unable to initiate a drag operation, or if the user
   attempts to start a drag while an existing drag operation
   is still executing
"
      end

      operation 6411906 "startDrag"
	public explicit_return_type "void"
	nparams 5
	  param inout name "trigger" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	  param inout name "flavorMap" type class_ref 353794 // FlavorMap
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a drag, given the <code>DragGestureEvent</code>
that initiated the drag, the initial
<code>Cursor</code> to use,
the <code>Transferable</code> subject data
of the drag, the <code>DragSourceListener</code>,
and the <code>FlavorMap</code>.
<P>
@param trigger        the <code>DragGestureEvent</code> that
initiated the drag
@param dragCursor     the initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism during drag and drop
@param transferable   the subject data of the drag
@param dsl            the <code>DragSourceListener</code>
@param flavorMap      the <code>FlavorMap</code> to use or <code>null</code>
<P>
@throws java.awt.dnd.InvalidDnDOperationException
   if the Drag and Drop
   system is unable to initiate a drag operation, or if the user
   attempts to start a drag while an existing drag operation
   is still executing
"
      end

      operation 6412034 "startDrag"
	public explicit_return_type "void"
	nparams 6
	  param inout name "trigger" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "dragImage" type class_ref 340098 // Image
	  param inout name "dragOffset" type class_ref 323714 // Point
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a drag, given the <code>DragGestureEvent</code>
that initiated the drag, the initial <code>Cursor</code>
to use,
the <code>Image</code> to drag,
the offset of the <code>Image</code> origin
from the hotspot of the <code>Cursor</code>
at the instant of the trigger,
the subject data of the drag, and
the <code>DragSourceListener</code>.
<P>
@param trigger           the <code>DragGestureEvent</code> that initiated the drag
@param dragCursor     the initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a>
                      for more details on the cursor handling mechanism during drag and drop
@param dragImage         the <code>Image</code> to drag or <code>null</code>
@param dragOffset        the offset of the <code>Image</code> origin from the hotspot
                         of the <code>Cursor</code> at the instant of the trigger
@param transferable      the subject data of the drag
@param dsl               the <code>DragSourceListener</code>
<P>
@throws java.awt.dnd.InvalidDnDOperationException
   if the Drag and Drop
   system is unable to initiate a drag operation, or if the user
   attempts to start a drag while an existing drag operation
   is still executing
"
      end

      operation 6412162 "startDrag"
	public explicit_return_type "void"
	nparams 4
	  param inout name "trigger" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "transferable" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	nexceptions 1
	  exception class_ref 881410 // InvalidDnDOperationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a drag, given the <code>DragGestureEvent</code>
that initiated the drag, the initial
<code>Cursor</code> to
use,
the <code>Transferable</code> subject data
of the drag, and the <code>DragSourceListener</code>.
<P>
@param trigger           the <code>DragGestureEvent</code> that initiated the drag
@param dragCursor     the initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a> class
                      for more details on the cursor handling mechanism during drag and drop
@param transferable      the subject data of the drag
@param dsl               the <code>DragSourceListener</code>
<P>
@throws java.awt.dnd.InvalidDnDOperationException
   if the Drag and Drop
   system is unable to initiate a drag operation, or if the user
   attempts to start a drag while an existing drag operation
   is still executing
"
      end

      operation 6412290 "createDragSourceContext"
	protected return_type class_ref 885378 // DragSourceContext
	nparams 7
	  param inout name "dscp" type class_ref 881282 // DragSourceContextPeer
	  param inout name "dgl" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "dragImage" type class_ref 340098 // Image
	  param inout name "imageOffset" type class_ref 323714 // Point
	  param inout name "t" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the {@code DragSourceContext} to handle the current drag
operation.
<p>
To incorporate a new <code>DragSourceContext</code>
subclass, subclass <code>DragSource</code> and
override this method.
<p>
If <code>dragImage</code> is <code>null</code>, no image is used
to represent the drag over feedback for this drag operation, but
<code>NullPointerException</code> is not thrown.
<p>
If <code>dsl</code> is <code>null</code>, no drag source listener
is registered with the created <code>DragSourceContext</code>,
but <code>NullPointerException</code> is not thrown.

@param dscp          The <code>DragSourceContextPeer</code> for this drag
@param dgl           The <code>DragGestureEvent</code> that triggered the
                     drag
@param dragCursor     The initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">DragSourceContext</a> class
                      for more details on the cursor handling mechanism during drag and drop
@param dragImage     The <code>Image</code> to drag or <code>null</code>
@param imageOffset   The offset of the <code>Image</code> origin from the
                     hotspot of the cursor at the instant of the trigger
@param t             The subject data of the drag
@param dsl           The <code>DragSourceListener</code>

@return the <code>DragSourceContext</code>

@throws NullPointerException if <code>dscp</code> is <code>null</code>
@throws NullPointerException if <code>dgl</code> is <code>null</code>
@throws NullPointerException if <code>dragImage</code> is not
   <code>null</code> and <code>imageOffset</code> is <code>null</code>
@throws NullPointerException if <code>t</code> is <code>null</code>
@throws IllegalArgumentException if the <code>Component</code>
        associated with the trigger event is <code>null</code>.
@throws IllegalArgumentException if the <code>DragSource</code> for the
        trigger event is <code>null</code>.
@throws IllegalArgumentException if the drag action for the
        trigger event is <code>DnDConstants.ACTION_NONE</code>.
@throws IllegalArgumentException if the source actions for the
        <code>DragGestureRecognizer</code> associated with the trigger
        event are equal to <code>DnDConstants.ACTION_NONE</code>.
"
      end

      operation 6412418 "getFlavorMap"
	public return_type class_ref 353794 // FlavorMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the
<code>FlavorMap</code> for this <code>DragSource</code>.
<P>
@return the <code>FlavorMap</code> for this <code>DragSource</code>
"
      end

      operation 6412546 "createDragGestureRecognizer"
	public explicit_return_type "T"
	nparams 4
	  param inout name "recognizerAbstractClass" type class_ref 130818 // Class
	  param inout name "c" type class_ref 338818 // Component
	  param in name "actions" explicit_type "int"
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends DragGestureRecognizer> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>DragGestureRecognizer</code>
that implements the specified
abstract subclass of
<code>DragGestureRecognizer</code>, and
sets the specified <code>Component</code>
and <code>DragGestureListener</code> on
the newly created object.
<P>
@param recognizerAbstractClass the requested abstract type
@param actions                 the permitted source drag actions
@param c                       the <code>Component</code> target
@param dgl        the <code>DragGestureListener</code> to notify
<P>
@return the new <code>DragGestureRecognizer</code> or <code>null</code>
   if the <code>Toolkit.createDragGestureRecognizer</code> method
   has no implementation available for
   the requested <code>DragGestureRecognizer</code>
   subclass and returns <code>null</code>
"
      end

      operation 6412674 "createDefaultDragGestureRecognizer"
	public return_type class_ref 356098 // DragGestureRecognizer
	nparams 3
	  param inout name "c" type class_ref 338818 // Component
	  param in name "actions" explicit_type "int"
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>DragGestureRecognizer</code>
that implements the default
abstract subclass of <code>DragGestureRecognizer</code>
for this <code>DragSource</code>,
and sets the specified <code>Component</code>
and <code>DragGestureListener</code> on the
newly created object.

For this <code>DragSource</code>
the default is <code>MouseDragGestureRecognizer</code>.
<P>
@param c       the <code>Component</code> target for the recognizer
@param actions the permitted source actions
@param dgl     the <code>DragGestureListener</code> to notify
<P>
@return the new <code>DragGestureRecognizer</code> or <code>null</code>
   if the <code>Toolkit.createDragGestureRecognizer</code> method
   has no implementation available for
   the requested <code>DragGestureRecognizer</code>
   subclass and returns <code>null</code>
"
      end

      operation 6412802 "addDragSourceListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified <code>DragSourceListener</code> to this
<code>DragSource</code> to receive drag source events during drag
operations intiated with this <code>DragSource</code>.
If a <code>null</code> listener is specified, no action is taken and no
exception is thrown.

@param dsl the <code>DragSourceListener</code> to add

@see      #removeDragSourceListener
@see      #getDragSourceListeners
@since 1.4
"
      end

      operation 6412930 "removeDragSourceListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>DragSourceListener</code> from this
<code>DragSource</code>.
If a <code>null</code> listener is specified, no action is taken and no
exception is thrown.
If the listener specified by the argument was not previously added to
this <code>DragSource</code>, no action is taken and no exception
is thrown.

@param dsl the <code>DragSourceListener</code> to remove

@see      #addDragSourceListener
@see      #getDragSourceListeners
@since 1.4
"
      end

      operation 6413058 "getDragSourceListeners"
	public return_type class_ref 355586 // DragSourceListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the <code>DragSourceListener</code>s
registered with this <code>DragSource</code>.

@return all of this <code>DragSource</code>'s
        <code>DragSourceListener</code>s or an empty array if no
        such listeners are currently registered

@see      #addDragSourceListener
@see      #removeDragSourceListener
@since    1.4
"
      end

      operation 6413186 "addDragSourceMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsml" type class_ref 885250 // DragSourceMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified <code>DragSourceMotionListener</code> to this
<code>DragSource</code> to receive drag motion events during drag
operations intiated with this <code>DragSource</code>.
If a <code>null</code> listener is specified, no action is taken and no
exception is thrown.

@param dsml the <code>DragSourceMotionListener</code> to add

@see      #removeDragSourceMotionListener
@see      #getDragSourceMotionListeners
@since 1.4
"
      end

      operation 6413314 "removeDragSourceMotionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsml" type class_ref 885250 // DragSourceMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>DragSourceMotionListener</code> from this
<code>DragSource</code>.
If a <code>null</code> listener is specified, no action is taken and no
exception is thrown.
If the listener specified by the argument was not previously added to
this <code>DragSource</code>, no action is taken and no exception
is thrown.

@param dsml the <code>DragSourceMotionListener</code> to remove

@see      #addDragSourceMotionListener
@see      #getDragSourceMotionListeners
@since 1.4
"
      end

      operation 6413442 "getDragSourceMotionListeners"
	public return_type class_ref 885250 // DragSourceMotionListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all of the  <code>DragSourceMotionListener</code>s
registered with this <code>DragSource</code>.

@return all of this <code>DragSource</code>'s
        <code>DragSourceMotionListener</code>s or an empty array if no
        such listeners are currently registered

@see      #addDragSourceMotionListener
@see      #removeDragSourceMotionListener
@since    1.4
"
      end

      operation 6413570 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets all the objects currently registered as
<code><em>Foo</em>Listener</code>s upon this <code>DragSource</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this
         <code>DragSource</code>, or an empty array if no such listeners
         have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getDragSourceListeners
@see #getDragSourceMotionListeners
@since 1.4
"
      end

      operation 6413698 "processDragEnter"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dragEnter</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6413826 "processDragOver"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dragOver</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6413954 "processDropActionChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dropActionChanged</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6414082 "processDragExit"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dse" type class_ref 355842 // DragSourceEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dragExit</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceEvent</code>.

@param dse the <code>DragSourceEvent</code>
"
      end

      operation 6414210 "processDragDropEnd"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dragDropEnd</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceDropEvent</code>.

@param dsde the <code>DragSourceEvent</code>
"
      end

      operation 6414338 "processDragMouseMoved"
	package explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method calls <code>dragMouseMoved</code> on the
<code>DragSourceMotionListener</code>s registered with this
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceEvent</code>
"
      end

      operation 6414466 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>DragSource</code>. This method first performs
default serialization. Next, it writes out this object's
<code>FlavorMap</code> if and only if it can be serialized. If not,
<code>null</code> is written instead. Next, it writes out
<code>Serializable</code> listeners registered with this
object. Listeners are written in a <code>null</code>-terminated sequence
of 0 or more pairs. The pair consists of a <code>String</code> and an
<code>Object</code>; the <code>String</code> indicates the type of the
<code>Object</code> and is one of the following:
<ul>
<li><code>dragSourceListenerK</code> indicating a
    <code>DragSourceListener</code> object;
<li><code>dragSourceMotionListenerK</code> indicating a
    <code>DragSourceMotionListener</code> object.
</ul>

@serialData Either a <code>FlavorMap</code> instance, or
     <code>null</code>, followed by a <code>null</code>-terminated
     sequence of 0 or more pairs; the pair consists of a
     <code>String</code> and an <code>Object</code>; the
     <code>String</code> indicates the type of the <code>Object</code>
     and is one of the following:
     <ul>
     <li><code>dragSourceListenerK</code> indicating a
         <code>DragSourceListener</code> object;
     <li><code>dragSourceMotionListenerK</code> indicating a
         <code>DragSourceMotionListener</code> object.
     </ul>.
@since 1.4
"
      end

      operation 6414594 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>DragSource</code>. This method first performs
default deserialization. Next, this object's <code>FlavorMap</code> is
deserialized by using the next object in the stream.
If the resulting <code>FlavorMap</code> is <code>null</code>, this
object's <code>FlavorMap</code> is set to the default FlavorMap for
this thread's <code>ClassLoader</code>.
Next, this object's listeners are deserialized by reading a
<code>null</code>-terminated sequence of 0 or more key/value pairs
from the stream:
<ul>
<li>If a key object is a <code>String</code> equal to
<code>dragSourceListenerK</code>, a <code>DragSourceListener</code> is
deserialized using the corresponding value object and added to this
<code>DragSource</code>.
<li>If a key object is a <code>String</code> equal to
<code>dragSourceMotionListenerK</code>, a
<code>DragSourceMotionListener</code> is deserialized using the
corresponding value object and added to this <code>DragSource</code>.
<li>Otherwise, the key/value pair is skipped.
</ul>

@see java.awt.datatransfer.SystemFlavorMap#getDefaultFlavorMap
@since 1.4
"
      end

      operation 6414722 "getDragThreshold"
	class_operation public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the drag gesture motion threshold. The drag gesture motion threshold
defines the recommended behavior for {@link MouseDragGestureRecognizer}s.
<p>
If the system property <code>awt.dnd.drag.threshold</code> is set to
a positive integer, this method returns the value of the system property;
otherwise if a pertinent desktop property is available and supported by
the implementation of the Java platform, this method returns the value of
that property; otherwise this method returns some default value.
The pertinent desktop property can be queried using
<code>java.awt.Toolkit.getDesktopProperty(\"DnD.gestureMotionThreshold\")</code>.

@return the drag gesture motion threshold
@see MouseDragGestureRecognizer
@since 1.5
"
      end

      classrelation 3000066 // flavorMap (<unidirectional association>)
	relation 3000066 --->
	  a role_name "flavorMap" init_value " SystemFlavorMap.getDefaultFlavorMap()" private
	    comment "
fields

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3000066 // flavorMap (<unidirectional association>)
	  b parent class_ref 353794 // FlavorMap
      end

      classrelation 3000194 // listener (<unidirectional association>)
	relation 3000194 --->
	  a role_name "listener" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3000194 // listener (<unidirectional association>)
	  b parent class_ref 355586 // DragSourceListener
      end

      classrelation 3000322 // motionListener (<unidirectional association>)
	relation 3000322 --->
	  a role_name "motionListener" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3000322 // motionListener (<unidirectional association>)
	  b parent class_ref 885250 // DragSourceMotionListener
      end
    end

    class 881410 "InvalidDnDOperationException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This exception is thrown by various methods in the java.awt.dnd package.
It is usually thrown to indicate that the target in question is unable
to undertake the requested operation that the present time, since the
underlying DnD system is not in the appropriate state.

@since 1.2
"
      classrelation 3004034 // <generalisation>
	relation 3004034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3004034 // <generalisation>
	  b parent class_ref 254850 // IllegalStateException
      end

      attribute 1465986 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6062568741193956678L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 3004162 // dft_msg (<unidirectional association>)
	relation 3004162 --->
	  a role_name "dft_msg" init_value " \"The operation requested cannot be performed by the DnD system since it is not in the appropriate state\"" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3004162 // dft_msg (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 6427394 "InvalidDnDOperationException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a default Exception
"
      end

      operation 6427522 "InvalidDnDOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an Exception with its own descriptive message
<P>
@param msg the detail message
"
      end
    end

    class 884994 "DnDConstants"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains constant values representing
the type of action(s) to be performed by a Drag and Drop operation.
@since 1.2
"
      operation 6407170 "DnDConstants"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1460738 "ACTION_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " define null private constructor.

An <code>int</code> representing no action.

"
      end

      attribute 1460866 "ACTION_COPY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;copy&quot; action.

"
      end

      attribute 1460994 "ACTION_MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;move&quot; action.

"
      end

      attribute 1461122 "ACTION_COPY_OR_MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ACTION_COPY | ACTION_MOVE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;copy&quot; or
&quot;move&quot; action.

"
      end

      attribute 1461250 "ACTION_LINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;link&quot; action.

The link verb is found in many, if not all native DnD platforms, and the
actual interpretation of LINK semantics is both platform
and application dependent. Broadly speaking, the
semantic is \"do not copy, or move the operand, but create a reference
to it\". Defining the meaning of \"reference\" is where ambiguity is
introduced.

The verb is provided for completeness, but its use is not recommended
for DnD operations between logically distinct applications where
misinterpretation of the operations semantics could lead to confusing
results for the user.

"
      end

      attribute 1461378 "ACTION_REFERENCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " ACTION_LINK"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Native
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> representing a &quot;reference&quot;
action (synonym for ACTION_LINK).

"
      end
    end

    class 885122 "DnDEventMulticaster"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class extends <code>AWTEventMulticaster</code> to implement efficient and
thread-safe multi-cast event dispatching for the drag-and-drop events defined
in the java.awt.dnd package.

@since       1.4
@see AWTEventMulticaster
"
      classrelation 2997634 // <generalisation>
	relation 2997634 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2997634 // <generalisation>
	  b parent class_ref 856962 // AWTEventMulticaster
      end

      classrelation 2997762 // <realization>
	relation 2997762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2997762 // <realization>
	  b parent class_ref 355586 // DragSourceListener
      end

      classrelation 2998018 // <realization>
	relation 2998018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2998018 // <realization>
	  b parent class_ref 885250 // DragSourceMotionListener
      end

      operation 6407426 "DnDEventMulticaster"
	protected explicit_return_type ""
	nparams 2
	  param inout name "a" type class_ref 314882 // EventListener
	  param inout name "b" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an event multicaster instance which chains listener-a
with listener-b. Input parameters <code>a</code> and <code>b</code>
should not be <code>null</code>, though implementations may vary in
choosing whether or not to throw <code>NullPointerException</code>
in that case.

@param a listener-a
@param b listener-b
"
      end

      operation 6407554 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceDragEvent</code> by invoking
<code>dragEnter</code> on listener-a and listener-b.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6407682 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceDragEvent</code> by invoking
<code>dragOver</code> on listener-a and listener-b.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6407810 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceDragEvent</code> by invoking
<code>dropActionChanged</code> on listener-a and listener-b.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6407938 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dse" type class_ref 355842 // DragSourceEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceEvent</code> by invoking
<code>dragExit</code> on listener-a and listener-b.

@param dse the <code>DragSourceEvent</code>
"
      end

      operation 6408066 "dragDropEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceDropEvent</code> by invoking
<code>dragDropEnd</code> on listener-a and listener-b.

@param dsde the <code>DragSourceDropEvent</code>
"
      end

      operation 6408194 "dragMouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles the <code>DragSourceDragEvent</code> by invoking
<code>dragMouseMoved</code> on listener-a and listener-b.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6408322 "add"
	class_operation public return_type class_ref 355586 // DragSourceListener
	nparams 2
	  param inout name "a" type class_ref 355586 // DragSourceListener
	  param inout name "b" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds drag-source-listener-a with drag-source-listener-b and
returns the resulting multicast listener.

@param a drag-source-listener-a
@param b drag-source-listener-b
"
      end

      operation 6408450 "add"
	class_operation public return_type class_ref 885250 // DragSourceMotionListener
	nparams 2
	  param inout name "a" type class_ref 885250 // DragSourceMotionListener
	  param inout name "b" type class_ref 885250 // DragSourceMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds drag-source-motion-listener-a with drag-source-motion-listener-b and
returns the resulting multicast listener.

@param a drag-source-motion-listener-a
@param b drag-source-motion-listener-b
"
      end

      operation 6408578 "remove"
	class_operation public return_type class_ref 355586 // DragSourceListener
	nparams 2
	  param inout name "l" type class_ref 355586 // DragSourceListener
	  param inout name "oldl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old drag-source-listener from drag-source-listener-l
and returns the resulting multicast listener.

@param l drag-source-listener-l
@param oldl the drag-source-listener being removed
"
      end

      operation 6408706 "remove"
	class_operation public return_type class_ref 885250 // DragSourceMotionListener
	nparams 2
	  param inout name "l" type class_ref 885250 // DragSourceMotionListener
	  param inout name "ol" type class_ref 885250 // DragSourceMotionListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the old drag-source-motion-listener from
drag-source-motion-listener-l and returns the resulting multicast
listener.

@param l drag-source-motion-listener-l
@param ol the drag-source-motion-listener being removed
"
      end

      operation 6408834 "addInternal"
	class_operation protected return_type class_ref 314882 // EventListener
	nparams 2
	  param inout name "a" type class_ref 314882 // EventListener
	  param inout name "b" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resulting multicast listener from adding listener-a
and listener-b together.
If listener-a is null, it returns listener-b;
If listener-b is null, it returns listener-a
If neither are null, then it creates and returns
a new AWTEventMulticaster instance which chains a with b.
@param a event listener-a
@param b event listener-b
"
      end

      operation 6408962 "remove"
	protected return_type class_ref 314882 // EventListener
	nparams 1
	  param inout name "oldl" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from this multicaster and returns the
resulting multicast listener.
@param oldl the listener to be removed
"
      end

      operation 6409090 "removeInternal"
	class_operation protected return_type class_ref 314882 // EventListener
	nparams 2
	  param inout name "l" type class_ref 314882 // EventListener
	  param inout name "oldl" type class_ref 314882 // EventListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resulting multicast listener after removing the
old listener from listener-l.
If listener-l equals the old listener OR listener-l is null,
returns null.
Else if listener-l is an instance of AWTEventMulticaster,
then it removes the old listener from it.
Else, returns listener l.
@param l the listener being removed from
@param oldl the listener being removed
"
      end

      operation 6409218 "save"
	class_operation protected explicit_return_type "void"
	nparams 3
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	  param inout name "k" type class_ref 128130 // String
	  param inout name "l" type class_ref 314882 // EventListener
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 885250 "DragSourceMotionListener"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A listener interface for receiving mouse motion events during a drag
operation.
<p>
The class that is interested in processing mouse motion events during
a drag operation either implements this interface or extends the abstract
<code>DragSourceAdapter</code> class (overriding only the methods of
interest).
<p>
Create a listener object using that class and then register it with
a <code>DragSource</code>. Whenever the mouse moves during a drag
operation initiated with this <code>DragSource</code>, that object's
<code>dragMouseMoved</code> method is invoked, and the
<code>DragSourceDragEvent</code> is passed to it.

@see DragSourceDragEvent
@see DragSource
@see DragSourceListener
@see DragSourceAdapter

@since 1.4
"
      classrelation 2997890 // <generalisation>
	relation 2997890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2997890 // <generalisation>
	  b parent class_ref 314882 // EventListener
      end

      operation 6407298 "dragMouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever the mouse is moved during a drag operation.

@param dsde the <code>DragSourceDragEvent</code>
"
      end
    end

    class 885378 "DragSourceContext"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>DragSourceContext</code> class is responsible for managing the
initiator side of the Drag and Drop protocol. In particular, it is responsible
for managing drag event notifications to the
{@linkplain DragSourceListener DragSourceListeners}
and {@linkplain DragSourceMotionListener DragSourceMotionListeners}, and providing the
{@link Transferable} representing the source data for the drag operation.
<p>
Note that the <code>DragSourceContext</code> itself
implements the <code>DragSourceListener</code> and
<code>DragSourceMotionListener</code> interfaces.
This is to allow the platform peer
(the {@link DragSourceContextPeer} instance)
created by the {@link DragSource} to notify
the <code>DragSourceContext</code> of
state changes in the ongoing operation. This allows the
<code>DragSourceContext</code> object to interpose
itself between the platform and the
listeners provided by the initiator of the drag operation.
<p>
<a name=\"defaultCursor\"></a>
By default, {@code DragSourceContext} sets the cursor as appropriate
for the current state of the drag and drop operation. For example, if
the user has chosen {@linkplain DnDConstants#ACTION_MOVE the move action},
and the pointer is over a target that accepts
the move action, the default move cursor is shown. When
the pointer is over an area that does not accept the transfer,
the default \"no drop\" cursor is shown.
<p>
This default handling mechanism is disabled when a custom cursor is set
by the {@link #setCursor} method. When the default handling is disabled,
it becomes the responsibility
of the developer to keep the cursor up to date, by listening
to the {@code DragSource} events and calling the {@code setCursor()} method.
Alternatively, you can provide custom cursor behavior by providing
custom implementations of the {@code DragSource}
and the {@code DragSourceContext} classes.

@see DragSourceListener
@see DragSourceMotionListener
@see DnDConstants
@since 1.2
"
      classrelation 3000706 // <realization>
	relation 3000706 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3000706 // <realization>
	  b parent class_ref 355586 // DragSourceListener
      end

      classrelation 3000834 // <realization>
	relation 3000834 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3000834 // <realization>
	  b parent class_ref 885250 // DragSourceMotionListener
      end

      classrelation 3000962 // <realization>
	relation 3000962 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3000962 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1461890 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -115407898692194719L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1462018 "DEFAULT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " used by updateCurrentCursor

An <code>int</code> used by updateCurrentCursor()
indicating that the <code>Cursor</code> should change
to the default (no drop) <code>Cursor</code>.

"
      end

      attribute 1462146 "ENTER"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> used by updateCurrentCursor()
indicating that the <code>Cursor</code>
has entered a <code>DropTarget</code>.

"
      end

      attribute 1462274 "OVER"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> used by updateCurrentCursor()
indicating that the <code>Cursor</code> is
over a <code>DropTarget</code>.

"
      end

      attribute 1462402 "CHANGED"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "An <code>int</code> used by updateCurrentCursor()
indicating that the user operation has changed.

"
      end

      operation 6415618 "DragSourceContext"
	public explicit_return_type ""
	nparams 7
	  param inout name "dscp" type class_ref 881282 // DragSourceContextPeer
	  param inout name "trigger" type class_ref 355458 // DragGestureEvent
	  param inout name "dragCursor" type class_ref 340866 // Cursor
	  param inout name "dragImage" type class_ref 340098 // Image
	  param inout name "offset" type class_ref 323714 // Point
	  param inout name "t" type class_ref 352002 // Transferable
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from <code>DragSource</code>, this constructor creates a new
<code>DragSourceContext</code> given the
<code>DragSourceContextPeer</code> for this Drag, the
<code>DragGestureEvent</code> that triggered the Drag, the initial
<code>Cursor</code> to use for the Drag, an (optional)
<code>Image</code> to display while the Drag is taking place, the offset
of the <code>Image</code> origin from the hotspot at the instant of the
triggering event, the <code>Transferable</code> subject data, and the
<code>DragSourceListener</code> to use during the Drag and Drop
operation.
<br>
If <code>DragSourceContextPeer</code> is <code>null</code>
<code>NullPointerException</code> is thrown.
<br>
If <code>DragGestureEvent</code> is <code>null</code>
<code>NullPointerException</code> is thrown.
<br>
If <code>Cursor</code> is <code>null</code> no exception is thrown and
the default drag cursor behavior is activated for this drag operation.
<br>
If <code>Image</code> is <code>null</code> no exception is thrown.
<br>
If <code>Image</code> is not <code>null</code> and the offset is
<code>null</code> <code>NullPointerException</code> is thrown.
<br>
If <code>Transferable</code> is <code>null</code>
<code>NullPointerException</code> is thrown.
<br>
If <code>DragSourceListener</code> is <code>null</code> no exception
is thrown.

@param dscp       the <code>DragSourceContextPeer</code> for this drag
@param trigger    the triggering event
@param dragCursor     the initial {@code Cursor} for this drag operation
                      or {@code null} for the default cursor handling;
                      see <a href=\"DragSourceContext.html#defaultCursor\">class level documentation</a>
                      for more details on the cursor handling mechanism during drag and drop
@param dragImage  the <code>Image</code> to drag (or <code>null</code>)
@param offset     the offset of the image origin from the hotspot at the
                  instant of the triggering event
@param t          the <code>Transferable</code>
@param dsl        the <code>DragSourceListener</code>

@throws IllegalArgumentException if the <code>Component</code> associated
        with the trigger event is <code>null</code>.
@throws IllegalArgumentException if the <code>DragSource</code> for the
        trigger event is <code>null</code>.
@throws IllegalArgumentException if the drag action for the
        trigger event is <code>DnDConstants.ACTION_NONE</code>.
@throws IllegalArgumentException if the source actions for the
        <code>DragGestureRecognizer</code> associated with the trigger
        event are equal to <code>DnDConstants.ACTION_NONE</code>.
@throws NullPointerException if dscp, trigger, or t are null, or
        if dragImage is non-null and offset is null
"
      end

      operation 6415746 "getDragSource"
	public return_type class_ref 356226 // DragSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>DragSource</code>
that instantiated this <code>DragSourceContext</code>.

@return the <code>DragSource</code> that
  instantiated this <code>DragSourceContext</code>
"
      end

      operation 6415874 "getComponent"
	public return_type class_ref 338818 // Component
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Component</code> associated with this
<code>DragSourceContext</code>.

@return the <code>Component</code> that started the drag
"
      end

      operation 6416002 "getTrigger"
	public return_type class_ref 355458 // DragGestureEvent
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>DragGestureEvent</code>
that initially triggered the drag.

@return the Event that triggered the drag
"
      end

      operation 6416130 "getSourceActions"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a bitwise mask of <code>DnDConstants</code> that
represent the set of drop actions supported by the drag source for the
drag operation associated with this <code>DragSourceContext</code>.

@return the drop actions supported by the drag source
"
      end

      operation 6416258 "setCursor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 340866 // Cursor
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the cursor for this drag operation to the specified
<code>Cursor</code>.  If the specified <code>Cursor</code>
is <code>null</code>, the default drag cursor behavior is
activated for this drag operation, otherwise it is deactivated.

@param c     the initial {@code Cursor} for this drag operation,
                      or {@code null} for the default cursor handling;
                      see {@linkplain Cursor class
                      level documentation} for more details
                      on the cursor handling during drag and drop

"
      end

      operation 6416386 "getCursor"
	public return_type class_ref 340866 // Cursor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current drag <code>Cursor</code>.
<P>
@return the current drag <code>Cursor</code>
"
      end

      operation 6416514 "addDragSourceListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	nexceptions 1
	  exception class_ref 353922 // TooManyListenersException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a <code>DragSourceListener</code> to this
<code>DragSourceContext</code> if one has not already been added.
If a <code>DragSourceListener</code> already exists,
this method throws a <code>TooManyListenersException</code>.
<P>
@param dsl the <code>DragSourceListener</code> to add.
Note that while <code>null</code> is not prohibited,
it is not acceptable as a parameter.
<P>
@throws TooManyListenersException if
a <code>DragSourceListener</code> has already been added
"
      end

      operation 6416642 "removeDragSourceListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsl" type class_ref 355586 // DragSourceListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified <code>DragSourceListener</code>
from  this <code>DragSourceContext</code>.

@param dsl the <code>DragSourceListener</code> to remove;
    note that while <code>null</code> is not prohibited,
    it is not acceptable as a parameter
"
      end

      operation 6416770 "transferablesFlavorsChanged"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the peer that the <code>Transferable</code>'s
<code>DataFlavor</code>s have changed.
"
      end

      operation 6416898 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragEnter</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSourceContext</code> and with the associated
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6417026 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragOver</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSourceContext</code> and with the associated
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6417154 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dse" type class_ref 355842 // DragSourceEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragExit</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSourceContext</code> and with the associated
<code>DragSource</code>, and passes them the specified
<code>DragSourceEvent</code>.

@param dse the <code>DragSourceEvent</code>
"
      end

      operation 6417282 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dropActionChanged</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSourceContext</code> and with the associated
<code>DragSource</code>, and passes them the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6417410 "dragDropEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragDropEnd</code> on the
<code>DragSourceListener</code>s registered with this
<code>DragSourceContext</code> and with the associated
<code>DragSource</code>, and passes them the specified
<code>DragSourceDropEvent</code>.

@param dsde the <code>DragSourceDropEvent</code>
"
      end

      operation 6417538 "dragMouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls <code>dragMouseMoved</code> on the
<code>DragSourceMotionListener</code>s registered with the
<code>DragSource</code> associated with this
<code>DragSourceContext</code>, and them passes the specified
<code>DragSourceDragEvent</code>.

@param dsde the <code>DragSourceDragEvent</code>
@since 1.4
"
      end

      operation 6417666 "getTransferable"
	public return_type class_ref 352002 // Transferable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Transferable</code> associated with
this <code>DragSourceContext</code>.

@return the <code>Transferable</code>
"
      end

      operation 6417794 "updateCurrentCursor"
	protected explicit_return_type "void"
	nparams 3
	  param in name "sourceAct" explicit_type "int"
	  param in name "targetAct" explicit_type "int"
	  param in name "status" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the default drag cursor behavior is active, this method
sets the default drag cursor for the specified actions
supported by the drag source, the drop target action,
and status, otherwise this method does nothing.

@param sourceAct the actions supported by the drag source
@param targetAct the drop target action
@param status one of the fields <code>DEFAULT</code>,
              <code>ENTER</code>, <code>OVER</code>,
              <code>CHANGED</code>
"
      end

      operation 6417922 "setCursorImpl"
	private explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 340866 // Cursor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6418050 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Serializes this <code>DragSourceContext</code>. This method first
performs default serialization. Next, this object's
<code>Transferable</code> is written out if and only if it can be
serialized. If not, <code>null</code> is written instead. In this case,
a <code>DragSourceContext</code> created from the resulting deserialized
stream will contain a dummy <code>Transferable</code> which supports no
<code>DataFlavor</code>s. Finally, this object's
<code>DragSourceListener</code> is written out if and only if it can be
serialized. If not, <code>null</code> is written instead.

@serialData The default serializable fields, in alphabetical order,
            followed by either a <code>Transferable</code> instance, or
            <code>null</code>, followed by either a
            <code>DragSourceListener</code> instance, or
            <code>null</code>.
@since 1.4
"
      end

      operation 6418178 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deserializes this <code>DragSourceContext</code>. This method first
performs default deserialization for all non-<code>transient</code>
fields. This object's <code>Transferable</code> and
<code>DragSourceListener</code> are then deserialized as well by using
the next two objects in the stream. If the resulting
<code>Transferable</code> is <code>null</code>, this object's
<code>Transferable</code> is set to a dummy <code>Transferable</code>
which supports no <code>DataFlavor</code>s.

@since 1.4
"
      end

      classrelation 3001090 // emptyTransferable (<unidirectional association>)
	relation 3001090 --->
	  a role_name "emptyTransferable" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001090 // emptyTransferable (<unidirectional association>)
	  b parent class_ref 352002 // Transferable
      end

      classrelation 3001218 // peer (<unidirectional association>)
	relation 3001218 --->
	  a role_name "peer" private
	    comment "
fields

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001218 // peer (<unidirectional association>)
	  b parent class_ref 881282 // DragSourceContextPeer
      end

      classrelation 3001346 // trigger (<unidirectional association>)
	relation 3001346 --->
	  a role_name "trigger" private
	    comment "
The event which triggered the start of the drag.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001346 // trigger (<unidirectional association>)
	  b parent class_ref 355458 // DragGestureEvent
      end

      classrelation 3001474 // cursor (<unidirectional association>)
	relation 3001474 --->
	  a role_name "cursor" private
	    comment "
The current drag cursor.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001474 // cursor (<unidirectional association>)
	  b parent class_ref 340866 // Cursor
      end

      classrelation 3001602 // transferable (<unidirectional association>)
	relation 3001602 --->
	  a role_name "transferable" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001602 // transferable (<unidirectional association>)
	  b parent class_ref 352002 // Transferable
      end

      classrelation 3001730 // listener (<unidirectional association>)
	relation 3001730 --->
	  a role_name "listener" private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3001730 // listener (<unidirectional association>)
	  b parent class_ref 355586 // DragSourceListener
      end

      attribute 1462530 "useCustomCursor"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<code>true</code> if the custom drag cursor is used instead of the
default one.

@serial

"
      end

      attribute 1462658 "sourceActions"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A bitwise mask of <code>DnDConstants</code> that represents the set of
drop actions supported by the drag source for the drag operation associated
with this <code>DragSourceContext.</code>

@serial

"
      end
    end

    class 885506 "DragSourceAdapter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract adapter class for receiving drag source events. The methods in
this class are empty. This class exists only as a convenience for creating
listener objects.
<p>
Extend this class to create a <code>DragSourceEvent</code> listener
and override the methods for the events of interest. (If you implement the
<code>DragSourceListener</code> interface, you have to define all of
the methods in it. This abstract class defines null methods for them
all, so you only have to define methods for events you care about.)
<p>
Create a listener object using the extended class and then register it with
a <code>DragSource</code>. When the drag enters, moves over, or exits
a drop site, when the drop action changes, and when the drag ends, the
relevant method in the listener object is invoked, and the
<code>DragSourceEvent</code> is passed to it.
<p>
The drop site is <i>associated with the previous <code>dragEnter()</code>
invocation</i> if the latest invocation of <code>dragEnter()</code> on this
adapter corresponds to that drop site and is not followed by a
<code>dragExit()</code> invocation on this adapter.

@see DragSourceEvent
@see DragSourceListener
@see DragSourceMotionListener

@author David Mendenhall
@since 1.4
"
      classrelation 3000450 // <realization>
	relation 3000450 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3000450 // <realization>
	  b parent class_ref 355586 // DragSourceListener
      end

      classrelation 3000578 // <realization>
	relation 3000578 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3000578 // <realization>
	  b parent class_ref 885250 // DragSourceMotionListener
      end

      operation 6414850 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot enters a platform-dependent drop site.
This method is invoked when all the following conditions are true:
<UL>
<LI>The cursor's hotspot enters the operable part of
a platform-dependent drop site.
<LI>The drop site is active.
<LI>The drop site accepts the drag.
</UL>

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6414978 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot moves over a platform-dependent drop site.
This method is invoked when all the following conditions are true:
<UL>
<LI>The cursor's hotspot has moved, but still intersects the
operable part of the drop site associated with the previous
dragEnter() invocation.
<LI>The drop site is still active.
<LI>The drop site accepts the drag.
</UL>

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6415106 "dragMouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called whenever the mouse is moved during a drag operation.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6415234 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355714 // DragSourceDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the user has modified the drop gesture.
This method is invoked when the state of the input
device(s) that the user is interacting with changes.
Such devices are typically the mouse buttons or keyboard
modifiers that the user is interacting with.

@param dsde the <code>DragSourceDragEvent</code>
"
      end

      operation 6415362 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dse" type class_ref 355842 // DragSourceEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called as the cursor's hotspot exits a platform-dependent drop site.
This method is invoked when any of the following conditions are true:
<UL>
<LI>The cursor's hotspot no longer intersects the operable part
of the drop site associated with the previous dragEnter() invocation.
</UL>
OR
<UL>
<LI>The drop site associated with the previous dragEnter() invocation
is no longer active.
</UL>
OR
<UL>
<LI> The drop site associated with the previous dragEnter() invocation
has rejected the drag.
</UL>

@param dse the <code>DragSourceEvent</code>
"
      end

      operation 6415490 "dragDropEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dsde" type class_ref 355970 // DragSourceDropEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is invoked to signify that the Drag and Drop
operation is complete. The getDropSuccess() method of
the <code>DragSourceDropEvent</code> can be used to
determine the termination state. The getDropAction() method
returns the operation that the drop site selected
to apply to the Drop operation. Once this method is complete, the
current <code>DragSourceContext</code> and
associated resources become invalid.

@param dsde the <code>DragSourceDropEvent</code>
"
      end
    end

    class 885634 "DropTargetAdapter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract adapter class for receiving drop target events. The methods in
this class are empty. This class exists only as a convenience for creating
listener objects.
<p>
Extend this class to create a <code>DropTargetEvent</code> listener
and override the methods for the events of interest. (If you implement the
<code>DropTargetListener</code> interface, you have to define all of
the methods in it. This abstract class defines a null implementation for
every method except <code>drop(DropTargetDropEvent)</code>, so you only have
to define methods for events you care about.) You must provide an
implementation for at least <code>drop(DropTargetDropEvent)</code>. This
method cannot have a null implementation because its specification requires
that you either accept or reject the drop, and, if accepted, indicate
whether the drop was successful.
<p>
Create a listener object using the extended class and then register it with
a <code>DropTarget</code>. When the drag enters, moves over, or exits
the operable part of the drop site for that <code>DropTarget</code>, when
the drop action changes, and when the drop occurs, the relevant method in
the listener object is invoked, and the <code>DropTargetEvent</code> is
passed to it.
<p>
The operable part of the drop site for the <code>DropTarget</code> is
the part of the associated <code>Component</code>'s geometry that is not
obscured by an overlapping top-level window or by another
<code>Component</code> higher in the Z-order that has an associated active
<code>DropTarget</code>.
<p>
During the drag, the data associated with the current drag operation can be
retrieved by calling <code>getTransferable()</code> on
<code>DropTargetDragEvent</code> instances passed to the listener's
methods.
<p>
Note that <code>getTransferable()</code> on the
<code>DropTargetDragEvent</code> instance should only be called within the
respective listener's method and all the necessary data should be retrieved
from the returned <code>Transferable</code> before that method returns.

@see DropTargetEvent
@see DropTargetListener

@author David Mendenhall
@since 1.4
"
      classrelation 3002242 // <realization>
	relation 3002242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3002242 // <realization>
	  b parent class_ref 353026 // DropTargetListener
      end

      operation 6420866 "dragEnter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called while a drag operation is ongoing, when the mouse pointer enters
the operable part of the drop site for the <code>DropTarget</code>
registered with this listener.

@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 6420994 "dragOver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a drag operation is ongoing, while the mouse pointer is still
over the operable part of the drop site for the <code>DropTarget</code>
registered with this listener.

@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 6421122 "dropActionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtde" type class_ref 353538 // DropTargetDragEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called if the user has modified
the current drop gesture.

@param dtde the <code>DropTargetDragEvent</code>
"
      end

      operation 6421250 "dragExit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dte" type class_ref 351874 // DropTargetEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called while a drag operation is ongoing, when the mouse pointer has
exited the operable part of the drop site for the
<code>DropTarget</code> registered with this listener.

@param dte the <code>DropTargetEvent</code>
"
      end
    end

    class 886018 "MouseDragGestureRecognizer"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This abstract subclass of <code>DragGestureRecognizer</code>
defines a <code>DragGestureRecognizer</code>
for mouse-based gestures.

Each platform implements its own concrete subclass of this class,
available via the Toolkit.createDragGestureRecognizer() method,
to encapsulate
the recognition of the platform dependent mouse gesture(s) that initiate
a Drag and Drop operation.
<p>
Mouse drag gesture recognizers should honor the
drag gesture motion threshold, available through
{@link DragSource#getDragThreshold}.
A drag gesture should be recognized only when the distance
in either the horizontal or vertical direction between
the location of the latest mouse dragged event and the
location of the corresponding mouse button pressed event
is greater than the drag gesture motion threshold.
<p>
Drag gesture recognizers created with
{@link DragSource#createDefaultDragGestureRecognizer}
follow this convention.

@author Laurence P. G. Cable

@see java.awt.dnd.DragGestureListener
@see java.awt.dnd.DragGestureEvent
@see java.awt.dnd.DragSource
"
      classrelation 3004290 // <generalisation>
	relation 3004290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3004290 // <generalisation>
	  b parent class_ref 356098 // DragGestureRecognizer
      end

      classrelation 3004418 // <realization>
	relation 3004418 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3004418 // <realization>
	  b parent class_ref 342530 // MouseListener
      end

      classrelation 3004546 // <realization>
	relation 3004546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3004546 // <realization>
	  b parent class_ref 342658 // MouseMotionListener
      end

      attribute 1466114 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6220099344182281120L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 6427650 "MouseDragGestureRecognizer"
	protected explicit_return_type ""
	nparams 4
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	  param in name "act" explicit_type "int"
	  param inout name "dgl" type class_ref 355330 // DragGestureListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>MouseDragGestureRecognizer</code>
given the <code>DragSource</code> for the
<code>Component</code> c, the <code>Component</code>
to observe, the action(s)
permitted for this drag operation, and
the <code>DragGestureListener</code> to
notify when a drag gesture is detected.
<P>
@param ds  The DragSource for the Component c
@param c   The Component to observe
@param act The actions permitted for this Drag
@param dgl The DragGestureListener to notify when a gesture is detected

"
      end

      operation 6427778 "MouseDragGestureRecognizer"
	protected explicit_return_type ""
	nparams 3
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	  param in name "act" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>MouseDragGestureRecognizer</code>
given the <code>DragSource</code> for
the <code>Component</code> c,
the <code>Component</code> to observe, and the action(s)
permitted for this drag operation.
<P>
@param ds  The DragSource for the Component c
@param c   The Component to observe
@param act The actions permitted for this drag
"
      end

      operation 6427906 "MouseDragGestureRecognizer"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ds" type class_ref 356226 // DragSource
	  param inout name "c" type class_ref 338818 // Component
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>MouseDragGestureRecognizer</code>
given the <code>DragSource</code> for the
<code>Component</code> c, and the
<code>Component</code> to observe.
<P>
@param ds  The DragSource for the Component c
@param c   The Component to observe
"
      end

      operation 6428034 "MouseDragGestureRecognizer"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ds" type class_ref 356226 // DragSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new <code>MouseDragGestureRecognizer</code>
given the <code>DragSource</code> for the <code>Component</code>.
<P>
@param ds  The DragSource for the Component
"
      end

      operation 6428162 "registerListeners"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "register this DragGestureRecognizer's Listeners with the Component
"
      end

      operation 6428290 "unregisterListeners"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "unregister this DragGestureRecognizer's Listeners with the Component

subclasses must override this method
"
      end

      operation 6428418 "mouseClicked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the mouse has been clicked on a component.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6428546 "mousePressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a mouse button has been
pressed on a <code>Component</code>.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6428674 "mouseReleased"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a mouse button has been released on a component.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6428802 "mouseEntered"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the mouse enters a component.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6428930 "mouseExited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the mouse exits a component.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6429058 "mouseDragged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a mouse button is pressed on a component.
<P>
@param e the <code>MouseEvent</code>
"
      end

      operation 6429186 "mouseMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when the mouse button has been moved on a component
(with no buttons no down).
<P>
@param e the <code>MouseEvent</code>
"
      end
    end

    class 886146 "SerializationTester"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Tests if an object can truly be serialized by serializing it to a null
OutputStream.

@since 1.4
"
      classrelation 3004674 // stream (<unidirectional association>)
	relation 3004674 --->
	  a role_name "stream" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3004674 // stream (<unidirectional association>)
	  b parent class_ref 173442 // ObjectOutputStream
      end

      extra_member 152578 "initialization"
	
	cpp "" ""
	java "  static {
        try {
            stream = new ObjectOutputStream(new OutputStream() {
                    public void write(int b) {}
                });
        } catch (IOException cannotHappen) {
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 6429314 "test"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6429442 "SerializationTester"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 142210 "dnd"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 272514 "DropTargetListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
${definition}"
      associated_elems
	class_ref 353026 // DropTargetListener
      end
      comment "Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 272770 "DropTarget"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.TooManyListenersException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.datatransfer.FlavorMap;
import java.awt.datatransfer.SystemFlavorMap;
import javax.swing.Timer;
import java.awt.peer.ComponentPeer;
import java.awt.peer.LightweightPeer;
import java.awt.dnd.peer.DropTargetPeer;
${definition}"
      associated_elems
	class_ref 341250 // DropTarget
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273026 "DragGestureListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 355330 // DragGestureListener
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273154 "DragSourceListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 355586 // DragSourceListener
      end
      comment "Copyright (c) 1997, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 273282 "DragGestureRecognizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.InputEvent;
import java.awt.Component;
import java.awt.Point;
import java.io.InvalidObjectException;
import java.util.Collections;
import java.util.TooManyListenersException;
import java.util.ArrayList;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 356098 // DragGestureRecognizer
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 633602 "Autoscroll"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Insets;
import java.awt.Point;
${definition}"
      associated_elems
	class_ref 354562 // Autoscroll
      end
      comment "Copyright (c) 1998, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 633730 "DnDConstants"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Native;
${definition}"
      associated_elems
	class_ref 884994 // DnDConstants
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 633858 "DragSourceMotionListener"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 885250 // DragSourceMotionListener
      end
      comment "Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 633986 "DnDEventMulticaster"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.AWTEventMulticaster;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 885122 // DnDEventMulticaster
      end
      comment "Copyright (c) 2001, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634114 "DragGestureEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.InputEvent;
import java.awt.datatransfer.Transferable;
import java.io.InvalidObjectException;
import java.util.EventObject;
import java.util.Collections;
import java.util.List;
import java.util.Iterator;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
${definition}"
      associated_elems
	class_ref 355458 // DragGestureEvent
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634242 "DragSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Cursor;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.FlavorMap;
import java.awt.datatransfer.SystemFlavorMap;
import java.awt.datatransfer.Transferable;
import java.awt.dnd.peer.DragSourceContextPeer;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.security.AccessController;
import java.util.EventListener;
import sun.awt.dnd.SunDragSourceContextPeer;
import sun.security.action.GetIntegerAction;
${definition}"
      associated_elems
	class_ref 356226 // DragSource
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634370 "DragSourceAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 885506 // DragSourceAdapter
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634498 "DragSourceContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.peer.DragSourceContextPeer;
import java.io.IOException;
import java.io.InvalidObjectException;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.util.TooManyListenersException;
${definition}"
      associated_elems
	class_ref 885378 // DragSourceContext
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634626 "DragSourceEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Point;
import java.util.EventObject;
${definition}"
      associated_elems
	class_ref 355842 // DragSourceEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634754 "DragSourceDragEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.event.InputEvent;
${definition}"
      associated_elems
	class_ref 355714 // DragSourceDragEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 634882 "DragSourceDropEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 355970 // DragSourceDropEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635010 "DropTargetAdapter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 885634 // DropTargetAdapter
      end
      comment "Copyright (c) 2001, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635138 "DropTargetContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.peer.DropTargetContextPeer;
import java.io.IOException;
import java.io.Serializable;
import java.util.Arrays;
import java.util.List;
${definition}"
      associated_elems
	class_ref 354050 // DropTargetContext
      end
      comment "Copyright (c) 1997, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635266 "DropTargetEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
import java.awt.dnd.DropTargetContext;
${definition}"
      associated_elems
	class_ref 351874 // DropTargetEvent
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635394 "DropTargetDragEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Point;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.util.List;
${definition}"
      associated_elems
	class_ref 353538 // DropTargetDragEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635522 "DropTargetDropEvent"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Point;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.util.List;
${definition}"
      associated_elems
	class_ref 353666 // DropTargetDropEvent
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635650 "InvalidDnDOperationException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 881410 // InvalidDnDOperationException
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635778 "MouseDragGestureRecognizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
${definition}"
      associated_elems
	class_ref 886018 // MouseDragGestureRecognizer
      end
      comment "Copyright (c) 1998, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 635906 "SerializationTester"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.OutputStream;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 886146 // SerializationTester
      end
      comment "Copyright (c) 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 180738 // peer
end
