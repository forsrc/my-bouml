class JTableHeader
!!!11605250.java!!!	JTableHeader()
        this(null);
!!!11605378.java!!!	JTableHeader(inout cm : TableColumnModel)
        super();

        //setFocusable(false); // for strict win/mac compatibility mode,
                               // this method should be invoked

        if (cm == null)
            cm = createDefaultColumnModel();
        setColumnModel(cm);

        // Initialize local ivars
        initializeLocalVars();

        // Get UI going
        updateUI();
!!!11605506.java!!!	setTable(inout table : JTable) : void
        JTable old = this.table;
        this.table = table;
        firePropertyChange("table", old, table);
!!!11605634.java!!!	getTable() : JTable
        return table;
!!!11605762.java!!!	setReorderingAllowed(inout reorderingAllowed : boolean) : void
        boolean old = this.reorderingAllowed;
        this.reorderingAllowed = reorderingAllowed;
        firePropertyChange("reorderingAllowed", old, reorderingAllowed);
!!!11605890.java!!!	getReorderingAllowed() : boolean
        return reorderingAllowed;
!!!11606018.java!!!	setResizingAllowed(inout resizingAllowed : boolean) : void
        boolean old = this.resizingAllowed;
        this.resizingAllowed = resizingAllowed;
        firePropertyChange("resizingAllowed", old, resizingAllowed);
!!!11606146.java!!!	getResizingAllowed() : boolean
        return resizingAllowed;
!!!11606274.java!!!	getDraggedColumn() : TableColumn
        return draggedColumn;
!!!11606402.java!!!	getDraggedDistance() : int
        return draggedDistance;
!!!11606530.java!!!	getResizingColumn() : TableColumn
        return resizingColumn;
!!!11606658.java!!!	setUpdateTableInRealTime(inout flag : boolean) : void
        updateTableInRealTime = flag;
!!!11606786.java!!!	getUpdateTableInRealTime() : boolean
        return updateTableInRealTime;
!!!11606914.java!!!	setDefaultRenderer(inout defaultRenderer : TableCellRenderer) : void
        this.defaultRenderer = defaultRenderer;
!!!11607042.java!!!	getDefaultRenderer() : TableCellRenderer
        return defaultRenderer;
!!!11607170.java!!!	columnAtPoint(inout point : Point) : int
        int x = point.x;
        if (!getComponentOrientation().isLeftToRight()) {
            x = getWidthInRightToLeft() - x - 1;
        }
        return getColumnModel().getColumnIndexAtX(x);
!!!11607298.java!!!	getHeaderRect(in column : int) : Rectangle
        Rectangle r = new Rectangle();
        TableColumnModel cm = getColumnModel();

        r.height = getHeight();

        if (column < 0) {
            // x = width = 0;
            if( !getComponentOrientation().isLeftToRight() ) {
                r.x = getWidthInRightToLeft();
            }
        }
        else if (column >= cm.getColumnCount()) {
            if( getComponentOrientation().isLeftToRight() ) {
                r.x = getWidth();
            }
        }
        else {
            for(int i = 0; i < column; i++) {
                r.x += cm.getColumn(i).getWidth();
            }
            if( !getComponentOrientation().isLeftToRight() ) {
                r.x = getWidthInRightToLeft() - r.x - cm.getColumn(column).getWidth();
            }

            r.width = cm.getColumn(column).getWidth();
        }
        return r;
!!!11607426.java!!!	getToolTipText(inout event : MouseEvent) : String
        String tip = null;
        Point p = event.getPoint();
        int column;

        // Locate the renderer under the event location
        if ((column = columnAtPoint(p)) != -1) {
            TableColumn aColumn = columnModel.getColumn(column);
            TableCellRenderer renderer = aColumn.getHeaderRenderer();
            if (renderer == null) {
                renderer = defaultRenderer;
            }
            Component component = renderer.getTableCellRendererComponent(
                              getTable(), aColumn.getHeaderValue(), false, false,
                              -1, column);

            // Now have to see if the component is a JComponent before
            // getting the tip
            if (component instanceof JComponent) {
                // Convert the event to the renderer's coordinate system
                MouseEvent newEvent;
                Rectangle cellRect = getHeaderRect(column);

                p.translate(-cellRect.x, -cellRect.y);
                newEvent = new MouseEvent(component, event.getID(),
                                          event.getWhen(), event.getModifiers(),
                                          p.x, p.y, event.getXOnScreen(), event.getYOnScreen(),
                                          event.getClickCount(),
                                          event.isPopupTrigger(), MouseEvent.NOBUTTON);

                tip = ((JComponent)component).getToolTipText(newEvent);
            }
        }

        // No tip from the renderer get our own tip
        if (tip == null)
            tip = getToolTipText();

        return tip;
!!!11607554.java!!!	getUI() : TableHeaderUI
        return (TableHeaderUI)ui;
!!!11607682.java!!!	setUI(inout ui : TableHeaderUI) : void
        if (this.ui != ui) {
            super.setUI(ui);
            repaint();
        }
!!!11607810.java!!!	updateUI() : void
        setUI((TableHeaderUI)UIManager.getUI(this));

        TableCellRenderer renderer = getDefaultRenderer();
        if (renderer instanceof Component) {
            SwingUtilities.updateComponentTreeUI((Component)renderer);
        }
!!!11607938.java!!!	getUIClassID() : String
        return uiClassID;
!!!11608066.java!!!	setColumnModel(inout columnModel : TableColumnModel) : void
        if (columnModel == null) {
            throw new IllegalArgumentException("Cannot set a null ColumnModel");
        }
        TableColumnModel old = this.columnModel;
        if (columnModel != old) {
            if (old != null) {
                old.removeColumnModelListener(this);
            }
            this.columnModel = columnModel;
            columnModel.addColumnModelListener(this);

            firePropertyChange("columnModel", old, columnModel);
            resizeAndRepaint();
        }
!!!11608194.java!!!	getColumnModel() : TableColumnModel
        return columnModel;
!!!11608322.java!!!	columnAdded(inout e : TableColumnModelEvent) : void
 resizeAndRepaint();
!!!11608450.java!!!	columnRemoved(inout e : TableColumnModelEvent) : void
 resizeAndRepaint();
!!!11608578.java!!!	columnMoved(inout e : TableColumnModelEvent) : void
 repaint();
!!!11608706.java!!!	columnMarginChanged(inout e : ChangeEvent) : void
 resizeAndRepaint();
!!!11608962.java!!!	createDefaultColumnModel() : TableColumnModel
        return new DefaultTableColumnModel();
!!!11609090.java!!!	createDefaultRenderer() : TableCellRenderer
        return new DefaultTableCellHeaderRenderer();
!!!11609218.java!!!	initializeLocalVars() : void
        setOpaque(true);
        table = null;
        reorderingAllowed = true;
        resizingAllowed = true;
        draggedColumn = null;
        draggedDistance = 0;
        resizingColumn = null;
        updateTableInRealTime = true;

        // I'm registered to do tool tips so we can draw tips for the
        // renderers
        ToolTipManager toolTipManager = ToolTipManager.sharedInstance();
        toolTipManager.registerComponent(this);
        setDefaultRenderer(createDefaultRenderer());
!!!11609346.java!!!	resizeAndRepaint() : void
        revalidate();
        repaint();
!!!11609474.java!!!	setDraggedColumn(inout aColumn : TableColumn) : void
        draggedColumn = aColumn;
!!!11609602.java!!!	setDraggedDistance(in distance : int) : void
        draggedDistance = distance;
!!!11609730.java!!!	setResizingColumn(inout aColumn : TableColumn) : void
        resizingColumn = aColumn;
!!!11609858.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        if ((ui != null) && (getUIClassID().equals(uiClassID))) {
            ui.installUI(this);
        }
!!!11609986.java!!!	getWidthInRightToLeft() : int
        if ((table != null) &&
            (table.getAutoResizeMode() != JTable.AUTO_RESIZE_OFF)) {
            return table.getWidth();
        }
        return super.getWidth();
!!!11610114.java!!!	paramString() : String
        String reorderingAllowedString = (reorderingAllowed ?
                                          "true" : "false");
        String resizingAllowedString = (resizingAllowed ?
                                        "true" : "false");
        String updateTableInRealTimeString = (updateTableInRealTime ?
                                              "true" : "false");

        return super.paramString() +
        ",draggedDistance=" + draggedDistance +
        ",reorderingAllowed=" + reorderingAllowedString +
        ",resizingAllowed=" + resizingAllowedString +
        ",updateTableInRealTime=" + updateTableInRealTimeString;
!!!11610242.java!!!	getAccessibleContext() : AccessibleContext
        if (accessibleContext == null) {
            accessibleContext = new AccessibleJTableHeader();
        }
        return accessibleContext;
