class Constraints
!!!10825858.java!!!	Constraints(inout x : Spring, inout y : Spring)
           setX(x);
           setY(y);
!!!10825986.java!!!	Constraints(inout x : Spring, inout y : Spring, inout width : Spring, inout height : Spring)
           setX(x);
           setY(y);
           setWidth(width);
           setHeight(height);
!!!10826114.java!!!	Constraints(inout c : Component)
            this.c = c;
            setX(Spring.constant(c.getX()));
            setY(Spring.constant(c.getY()));
            setWidth(Spring.width(c));
            setHeight(Spring.height(c));
!!!10826242.java!!!	pushConstraint(inout name : String, inout value : Spring, inout horizontal : boolean) : void
            boolean valid = true;
            List<String> history = horizontal ? horizontalHistory :
                                                verticalHistory;
            if (history.contains(name)) {
                history.remove(name);
                valid = false;
            } else if (history.size() == 2 && value != null) {
                history.remove(0);
                valid = false;
            }
            if (value != null) {
                history.add(name);
            }
            if (!valid) {
                String[] all = horizontal ? ALL_HORIZONTAL : ALL_VERTICAL;
                for (String s : all) {
                    if (!history.contains(s)) {
                        setConstraint(s, null);
                    }
                }
            }
!!!10826370.java!!!	sum(inout s1 : Spring, inout s2 : Spring) : Spring
           return (s1 == null || s2 == null) ? null : Spring.sum(s1, s2);
!!!10826498.java!!!	difference(inout s1 : Spring, inout s2 : Spring) : Spring
           return (s1 == null || s2 == null) ? null : Spring.difference(s1, s2);
!!!10826626.java!!!	scale(inout s : Spring, in factor : float) : Spring
            return (s == null) ? null : Spring.scale(s, factor);
!!!10826754.java!!!	getBaselineFromHeight(in height : int) : int
            if (height < 0) {
                // Bad Scott, Bad Scott!
                return -c.getBaseline(c.getPreferredSize().width,
                                      -height);
            }
            return c.getBaseline(c.getPreferredSize().width, height);
!!!10826882.java!!!	getHeightFromBaseLine(in baseline : int) : int
            Dimension prefSize = c.getPreferredSize();
            int prefHeight = prefSize.height;
            int prefBaseline = c.getBaseline(prefSize.width, prefHeight);
            if (prefBaseline == baseline) {
                // If prefBaseline < 0, then no baseline, assume preferred
                // height.
                // If prefBaseline == baseline, then specified baseline
                // matches preferred baseline, return preferred height
                return prefHeight;
            }
            // Valid baseline
            switch(c.getBaselineResizeBehavior()) {
            case CONSTANT_DESCENT:
                return prefHeight + (baseline - prefBaseline);
            case CENTER_OFFSET:
                return prefHeight + 2 * (baseline - prefBaseline);
            case CONSTANT_ASCENT:
                // Component baseline and specified baseline will NEVER
                // match, fall through to default
            default: // OTHER
                // No way to map from baseline to height.
            }
            return Integer.MIN_VALUE;
!!!10827010.java!!!	heightToRelativeBaseline(inout s : Spring) : Spring
            return new Spring.SpringMap(s) {
                 protected int map(int i) {
                    return getBaselineFromHeight(i);
                 }

                 protected int inv(int i) {
                     return getHeightFromBaseLine(i);
                 }
            };
!!!10827138.java!!!	relativeBaselineToHeight(inout s : Spring) : Spring
            return new Spring.SpringMap(s) {
                protected int map(int i) {
                    return getHeightFromBaseLine(i);
                 }

                 protected int inv(int i) {
                    return getBaselineFromHeight(i);
                 }
            };
!!!10827266.java!!!	defined(inout history : List, inout s1 : String, inout s2 : String) : boolean
            return history.contains(s1) && history.contains(s2);
!!!10827394.java!!!	setX(inout x : Spring) : void
           this.x = x;
           pushConstraint(WEST, x, true);
!!!10827522.java!!!	getX() : Spring
           if (x == null) {
               if (defined(horizontalHistory, EAST, WIDTH)) {
                   x = difference(east, width);
               } else if (defined(horizontalHistory, HORIZONTAL_CENTER, WIDTH)) {
                   x = difference(horizontalCenter, scale(width, 0.5f));
               } else if (defined(horizontalHistory, HORIZONTAL_CENTER, EAST)) {
                   x = difference(scale(horizontalCenter, 2f), east);
               }
           }
           return x;
!!!10827650.java!!!	setY(inout y : Spring) : void
           this.y = y;
           pushConstraint(NORTH, y, false);
!!!10827778.java!!!	getY() : Spring
           if (y == null) {
               if (defined(verticalHistory, SOUTH, HEIGHT)) {
                   y = difference(south, height);
               } else if (defined(verticalHistory, VERTICAL_CENTER, HEIGHT)) {
                   y = difference(verticalCenter, scale(height, 0.5f));
               } else if (defined(verticalHistory, VERTICAL_CENTER, SOUTH)) {
                   y = difference(scale(verticalCenter, 2f), south);
               } else if (defined(verticalHistory, BASELINE, HEIGHT)) {
                   y = difference(baseline, heightToRelativeBaseline(height));
               } else if (defined(verticalHistory, BASELINE, SOUTH)) {
                   y = scale(difference(baseline, heightToRelativeBaseline(south)), 2f);
/*
               } else if (defined(verticalHistory, BASELINE, VERTICAL_CENTER)) {
                   y = scale(difference(baseline, heightToRelativeBaseline(scale(verticalCenter, 2))), 1f/(1-2*0.5f));
*/
               }
           }
           return y;
!!!10827906.java!!!	setWidth(inout width : Spring) : void
           this.width = width;
           pushConstraint(WIDTH, width, true);
!!!10828034.java!!!	getWidth() : Spring
           if (width == null) {
               if (horizontalHistory.contains(EAST)) {
                   width = difference(east, getX());
               } else if (horizontalHistory.contains(HORIZONTAL_CENTER)) {
                   width = scale(difference(horizontalCenter, getX()), 2f);
               }
           }
           return width;
!!!10828162.java!!!	setHeight(inout height : Spring) : void
           this.height = height;
           pushConstraint(HEIGHT, height, false);
!!!10828290.java!!!	getHeight() : Spring
           if (height == null) {
               if (verticalHistory.contains(SOUTH)) {
                   height = difference(south, getY());
               } else if (verticalHistory.contains(VERTICAL_CENTER)) {
                   height = scale(difference(verticalCenter, getY()), 2f);
               } else if (verticalHistory.contains(BASELINE)) {
                   height = relativeBaselineToHeight(difference(baseline, getY()));
               }
           }
           return height;
!!!10828418.java!!!	setEast(inout east : Spring) : void
           this.east = east;
           pushConstraint(EAST, east, true);
!!!10828546.java!!!	getEast() : Spring
           if (east == null) {
               east = sum(getX(), getWidth());
           }
           return east;
!!!10828674.java!!!	setSouth(inout south : Spring) : void
           this.south = south;
           pushConstraint(SOUTH, south, false);
!!!10828802.java!!!	getSouth() : Spring
           if (south == null) {
               south = sum(getY(), getHeight());
           }
           return south;
!!!10828930.java!!!	getHorizontalCenter() : Spring
            if (horizontalCenter == null) {
                horizontalCenter = sum(getX(), scale(getWidth(), 0.5f));
            }
            return horizontalCenter;
!!!10829058.java!!!	setHorizontalCenter(inout horizontalCenter : Spring) : void
            this.horizontalCenter = horizontalCenter;
            pushConstraint(HORIZONTAL_CENTER, horizontalCenter, true);
!!!10829186.java!!!	getVerticalCenter() : Spring
            if (verticalCenter == null) {
                verticalCenter = sum(getY(), scale(getHeight(), 0.5f));
            }
            return verticalCenter;
!!!10829314.java!!!	setVerticalCenter(inout verticalCenter : Spring) : void
            this.verticalCenter = verticalCenter;
            pushConstraint(VERTICAL_CENTER, verticalCenter, false);
!!!10829442.java!!!	getBaseline() : Spring
            if (baseline == null) {
                baseline = sum(getY(), heightToRelativeBaseline(getHeight()));
            }
            return baseline;
!!!10829570.java!!!	setBaseline(inout baseline : Spring) : void
            this.baseline = baseline;
            pushConstraint(BASELINE, baseline, false);
!!!10829698.java!!!	setConstraint(inout edgeName : String, inout s : Spring) : void
           edgeName = edgeName.intern();
           if (edgeName == WEST) {
               setX(s);
           } else if (edgeName == NORTH) {
               setY(s);
           } else if (edgeName == EAST) {
               setEast(s);
           } else if (edgeName == SOUTH) {
               setSouth(s);
           } else if (edgeName == HORIZONTAL_CENTER) {
               setHorizontalCenter(s);
           } else if (edgeName == WIDTH) {
               setWidth(s);
           } else if (edgeName == HEIGHT) {
               setHeight(s);
           } else if (edgeName == VERTICAL_CENTER) {
               setVerticalCenter(s);
           } else if (edgeName == BASELINE) {
               setBaseline(s);
           }
!!!10829826.java!!!	getConstraint(inout edgeName : String) : Spring
           edgeName = edgeName.intern();
           return (edgeName == WEST)  ? getX() :
                   (edgeName == NORTH) ? getY() :
                   (edgeName == EAST)  ? getEast() :
                   (edgeName == SOUTH) ? getSouth() :
                   (edgeName == WIDTH)  ? getWidth() :
                   (edgeName == HEIGHT) ? getHeight() :
                   (edgeName == HORIZONTAL_CENTER) ? getHorizontalCenter() :
                   (edgeName == VERTICAL_CENTER)  ? getVerticalCenter() :
                   (edgeName == BASELINE) ? getBaseline() :
                  null;
!!!10829954.java!!!	reset() : void
           Spring[] allSprings = {x, y, width, height, east, south,
               horizontalCenter, verticalCenter, baseline};
           for (Spring s : allSprings) {
               if (s != null) {
                   s.setValue(Spring.UNSET);
               }
           }
