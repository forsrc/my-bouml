format 222
"jaxp" // jdk1.8::com::sun::org::apache::xpath::internal::jaxp
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/jaxp/"
  java_package "com.sun.org.apache.xpath.internal.jaxp"
  classview 170626 "jaxp"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 820098 "JAXPExtensionsProvider"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
@author Ramesh Mandava ( ramesh.mandava@sun.com )
"
      classrelation 2611074 // <realization>
	relation 2611074 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2611074 // <realization>
	  b parent class_ref 804482 // ExtensionsProvider
      end

      classrelation 2611202 // resolver (<unidirectional association>)
	relation 2611202 --->
	  a role_name "resolver" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2611202 // resolver (<unidirectional association>)
	  b parent class_ref 820226 // XPathFunctionResolver
      end

      attribute 1284994 "extensionInvocationDisabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5906050 "JAXPExtensionsProvider"
	public explicit_return_type ""
	nparams 1
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5906178 "JAXPExtensionsProvider"
	public explicit_return_type ""
	nparams 3
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	  param inout name "featureSecureProcessing" explicit_type "boolean"
	  param inout name "featureManager" type class_ref 587906 // FeatureManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5906306 "functionAvailable"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "funcName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the extension function available?
"
      end

      operation 5906434 "elementAvailable"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "elemName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the extension element available?
"
      end

      operation 5906562 "extFunction"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "ns" type class_ref 128130 // String
	  param inout name "funcName" type class_ref 128130 // String
	  param inout name "argVec" type class_ref 141442 // Vector
	  param inout name "methodKey" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the extension function.
"
      end

      operation 5906690 "extFunction"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "extFunction" type class_ref 804610 // FuncExtFunction
	  param inout name "argVec" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the extension function.
"
      end
    end

    class 820354 "JAXPPrefixResolver"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<meta name=\"usage\" content=\"general\"/>
This class implements a Default PrefixResolver which
can be used to perform prefix-to-namespace lookup
for the XPath object.
This class delegates the resolution to the passed NamespaceContext
"
      classrelation 2611330 // <realization>
	relation 2611330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2611330 // <realization>
	  b parent class_ref 635650 // PrefixResolver
      end

      classrelation 2611458 // namespaceContext (<unidirectional association>)
	relation 2611458 --->
	  a role_name "namespaceContext" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2611458 // namespaceContext (<unidirectional association>)
	  b parent class_ref 673794 // NamespaceContext
      end

      operation 5906818 "JAXPPrefixResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "nsContext" type class_ref 673794 // NamespaceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5906946 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5907074 "getBaseIdentifier"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the base identifier.

@return null
"
      end

      operation 5907202 "handlesNullPrefixes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see PrefixResolver#handlesNullPrefixes()
"
      end

      classrelation 2611586 // S_XMLNAMESPACEURI (<unidirectional association>)
	relation 2611586 --->
	  a role_name "S_XMLNAMESPACEURI" init_value "
        \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation public
	    comment "
The URI for the XML namespace.
(Duplicate of that found in com.sun.org.apache.xpath.internal.XPathContext).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2611586 // S_XMLNAMESPACEURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5907330 "getNamespaceForPrefix"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a prefix and a Context Node, get the corresponding namespace.
Warning: This will not work correctly if namespaceContext
is an attribute node.
@param prefix Prefix to resolve.
@param namespaceContext Node from which to start searching for a
xmlns attribute that binds a prefix to a namespace.
@return Namespace that prefix resolves to, or null if prefix
is not bound.
"
      end
    end

    class 820482 "JAXPVariableStack"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Overrides {@link VariableStack} and delegates the call to
{@link javax.xml.xpath.XPathVariableResolver}.

@author Ramesh Mandava ( ramesh.mandava@sun.com )
"
      classrelation 2611714 // <generalisation>
	relation 2611714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2611714 // <generalisation>
	  b parent class_ref 805378 // VariableStack
      end

      classrelation 2611842 // resolver (<unidirectional association>)
	relation 2611842 --->
	  a role_name "resolver" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2611842 // resolver (<unidirectional association>)
	  b parent class_ref 820610 // XPathVariableResolver
      end

      operation 5907458 "JAXPVariableStack"
	public explicit_return_type ""
	nparams 1
	  param inout name "resolver" type class_ref 820610 // XPathVariableResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5907586 "getVariableOrParam"
	public return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "xctxt" type class_ref 583682 // XPathContext
	  param inout name "qname" type class_ref 583426 // QName
	nexceptions 2
	  exception class_ref 583554 // TransformerException
	  exception class_ref 187778 // IllegalArgumentException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 820738 "XPathExpressionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XPathExpression interface encapsulates a (compiled) XPath expression.

@version $Revision: 1.10 $
@author  Ramesh Mandava
"
      classrelation 2611970 // <realization>
	relation 2611970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2611970 // <realization>
	  b parent class_ref 781826 // XPathExpression
      end

      classrelation 2612098 // functionResolver (<unidirectional association>)
	relation 2612098 --->
	  a role_name "functionResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612098 // functionResolver (<unidirectional association>)
	  b parent class_ref 820226 // XPathFunctionResolver
      end

      classrelation 2612226 // variableResolver (<unidirectional association>)
	relation 2612226 --->
	  a role_name "variableResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612226 // variableResolver (<unidirectional association>)
	  b parent class_ref 820610 // XPathVariableResolver
      end

      classrelation 2612354 // prefixResolver (<unidirectional association>)
	relation 2612354 --->
	  a role_name "prefixResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612354 // prefixResolver (<unidirectional association>)
	  b parent class_ref 820354 // JAXPPrefixResolver
      end

      classrelation 2612482 // xpath (<unidirectional association>)
	relation 2612482 --->
	  a role_name "xpath" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612482 // xpath (<unidirectional association>)
	  b parent class_ref 782722 // XPath
      end

      attribute 1285122 "featureSecureProcessing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " By default Extension Functions are allowed in XPath Expressions. If
 Secure Processing Feature is set on XPathFactory then the invocation of
 extensions function need to throw XPathFunctionException
"
      end

      attribute 1285250 "useServicesMechanism"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2612610 // featureManager (<unidirectional association>)
	relation 2612610 --->
	  a role_name "featureManager" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612610 // featureManager (<unidirectional association>)
	  b parent class_ref 587906 // FeatureManager
      end

      operation 5908226 "XPathExpressionImpl"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected constructor to prevent direct instantiation; use compile()
from the context.
"
      end

      operation 5908354 "XPathExpressionImpl"
	protected explicit_return_type ""
	nparams 4
	  param inout name "xpath" type class_ref 782722 // XPath
	  param inout name "prefixResolver" type class_ref 820354 // JAXPPrefixResolver
	  param inout name "functionResolver" type class_ref 820226 // XPathFunctionResolver
	  param inout name "variableResolver" type class_ref 820610 // XPathVariableResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5908482 "XPathExpressionImpl"
	protected explicit_return_type ""
	nparams 7
	  param inout name "xpath" type class_ref 782722 // XPath
	  param inout name "prefixResolver" type class_ref 820354 // JAXPPrefixResolver
	  param inout name "functionResolver" type class_ref 820226 // XPathFunctionResolver
	  param inout name "variableResolver" type class_ref 820610 // XPathVariableResolver
	  param inout name "featureSecureProcessing" explicit_type "boolean"
	  param inout name "useServicesMechanism" explicit_type "boolean"
	  param inout name "featureManager" type class_ref 587906 // FeatureManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5908610 "setXPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "xpath" type class_ref 782722 // XPath
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5908738 "eval"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "item" type class_ref 129538 // Object
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5908866 "eval"
	private return_type class_ref 583298 // XObject
	nparams 1
	  param inout name "contextItem" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5908994 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "item" type class_ref 129538 // Object
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and
 return the result as the specified type.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined
in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>returnType</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown.</p>

@param item The starting context (node or node list, for example).
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the
expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one
of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>returnType</code> is
<code>null</code>.
"
      end

      operation 5909122 "evaluate"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "item" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the specified context and
return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(Object item, QName returnType)}
with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
 for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.

@param item The starting context (node or node list, for example).

@return The <code>String</code> that is the result of evaluating the
expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
"
      end

      classrelation 2612738 // dbf (<unidirectional association>)
	relation 2612738 --->
	  a role_name "dbf" init_value " null" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612738 // dbf (<unidirectional association>)
	  b parent class_ref 587650 // DocumentBuilderFactory
      end

      classrelation 2612866 // db (<unidirectional association>)
	relation 2612866 --->
	  a role_name "db" init_value " null" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612866 // db (<unidirectional association>)
	  b parent class_ref 378498 // DocumentBuilder
      end

      classrelation 2612994 // d (<unidirectional association>)
	relation 2612994 --->
	  a role_name "d" init_value " null" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2612994 // d (<unidirectional association>)
	  b parent class_ref 378626 // Document
      end

      operation 5909250 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "source" type class_ref 606594 // InputSource
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the
specified <code>InputSource</code> and return the result as the
 specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(Object item, QName returnType)} on the resulting
document object.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
 for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in
{@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate
over.
@param returnType The desired return type.

@return The <code>Object</code> that is the result of evaluating the
expression and converting the result to
  <code>returnType</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one
of the types defined in {@link XPathConstants}.
@throws NullPointerException If  <code>source</code> or
<code>returnType</code> is <code>null</code>.
"
      end

      operation 5909378 "evaluate"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "source" type class_ref 606594 // InputSource
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate the compiled XPath expression in the context of the specified <code>InputSource</code> and return the result as a
<code>String</code>.</p>

<p>This method calls {@link #evaluate(InputSource source, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>source</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and converting the result to a
  <code>String</code>.

@throws XPathExpressionException If the expression cannot be evaluated.
@throws NullPointerException If  <code>source</code> is <code>null</code>.
"
      end

      operation 5909506 "isSupported"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "returnType" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5909634 "getResultAsType"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "resultObject" type class_ref 583298 // XObject
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 820994 "XPathFactoryImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XPathFactory builds XPaths.

@version $Revision: 1.11 $
@author  Ramesh Mandava
"
      classrelation 2613506 // <generalisation>
	relation 2613506 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2613506 // <generalisation>
	  b parent class_ref 821122 // XPathFactory
      end

      classrelation 2613634 // CLASS_NAME (<unidirectional association>)
	relation 2613634 --->
	  a role_name "CLASS_NAME" init_value " \"XPathFactoryImpl\"" class_relation const_relation private
	    comment "
<p>Name of class as a constant to use for debugging.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613634 // CLASS_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2613762 // xPathFunctionResolver (<unidirectional association>)
	relation 2613762 --->
	  a role_name "xPathFunctionResolver" init_value " null" private
	    comment "
<p>XPathFunctionResolver for this XPathFactory and created XPaths.</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613762 // xPathFunctionResolver (<unidirectional association>)
	  b parent class_ref 820226 // XPathFunctionResolver
      end

      classrelation 2613890 // xPathVariableResolver (<unidirectional association>)
	relation 2613890 --->
	  a role_name "xPathVariableResolver" init_value " null" private
	    comment "
<p>XPathVariableResolver for this XPathFactory and created XPaths</p>

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2613890 // xPathVariableResolver (<unidirectional association>)
	  b parent class_ref 820610 // XPathVariableResolver
      end

      attribute 1285378 "_isNotSecureProcessing"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>State of secure processing feature.</p>

"
      end

      attribute 1285506 "_isSecureMode"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "<p>State of secure mode.</p>

"
      end

      attribute 1285634 "_useServicesMechanism"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "javax.xml.xpath.XPathFactory implementation.

"
      end

      classrelation 2614018 // _featureManager (<unidirectional association>)
	relation 2614018 --->
	  a role_name "_featureManager" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614018 // _featureManager (<unidirectional association>)
	  b parent class_ref 587906 // FeatureManager
      end

      operation 5911042 "XPathFactoryImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5911170 "newXPathFactoryNoServiceLoader"
	class_operation public return_type class_ref 821122 // XPathFactory
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5911298 "XPathFactoryImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "useServicesMechanism" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5911426 "isObjectModelSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "objectModel" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Is specified object model supported by this
<code>XPathFactory</code>?</p>

@param objectModel Specifies the object model which the returned
<code>XPathFactory</code> will understand.

@return <code>true</code> if <code>XPathFactory</code> supports
<code>objectModel</code>, else <code>false</code>.

@throws NullPointerException If <code>objectModel</code> is <code>null</code>.
@throws IllegalArgumentException If <code>objectModel.length() == 0</code>.
"
      end

      operation 5911554 "newXPath"
	public return_type class_ref 821506 // XPath
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a new <code>XPath</code> object using the underlying
object model determined when the factory was instantiated.</p>

@return New <code>XPath</code>
"
      end

      operation 5911682 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>XPathFactory</code> and
<code>XPath</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this
<code>XPathFactory</code> or the <code>XPath</code>s
 it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature
value but be unable to change its state.
</p>

<p>See {@link javax.xml.xpath.XPathFactory} for full documentation
of specific features.</p>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.

@throws XPathFactoryConfigurationException if this
<code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is
<code>null</code>.
"
      end

      operation 5911810 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 821378 // XPathFactoryConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link XPathFactoryConfigurationException} is thrown if this
<code>XPathFactory</code> or the <code>XPath</code>s
it creates cannot support the feature.
It is possible for an <code>XPathFactory</code> to expose a feature
value but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws XPathFactoryConfigurationException if this
<code>XPathFactory</code> or the <code>XPath</code>s
  it creates cannot support this feature.
@throws NullPointerException if <code>name</code> is
<code>null</code>.
"
      end

      operation 5911938 "setXPathFunctionResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default function resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will use
the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if
<code>resolver</code> is <code>null</code>.</p>

@param resolver XPath function resolver.

@throws NullPointerException If <code>resolver</code> is
<code>null</code>.
"
      end

      operation 5912066 "setXPathVariableResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820610 // XPathVariableResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establish a default variable resolver.</p>

<p>Any <code>XPath</code> objects constructed from this factory will use
the specified resolver by default.</p>

<p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>

@param resolver Variable resolver.

 @throws NullPointerException If <code>resolver</code> is
<code>null</code>.
"
      end
    end

    class 821634 "XPathImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The XPathImpl class provides implementation for the methods defined  in
javax.xml.xpath.XPath interface. This provide simple access to the results
of an XPath expression.


@version $Revision: 1.10 $
@author  Ramesh Mandava
"
      classrelation 2614146 // <realization>
	relation 2614146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2614146 // <realization>
	  b parent class_ref 821506 // XPath
      end

      classrelation 2614274 // variableResolver (<unidirectional association>)
	relation 2614274 --->
	  a role_name "variableResolver" private
	    comment " Private variables
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614274 // variableResolver (<unidirectional association>)
	  b parent class_ref 820610 // XPathVariableResolver
      end

      classrelation 2614402 // functionResolver (<unidirectional association>)
	relation 2614402 --->
	  a role_name "functionResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614402 // functionResolver (<unidirectional association>)
	  b parent class_ref 820226 // XPathFunctionResolver
      end

      classrelation 2614530 // origVariableResolver (<unidirectional association>)
	relation 2614530 --->
	  a role_name "origVariableResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614530 // origVariableResolver (<unidirectional association>)
	  b parent class_ref 820610 // XPathVariableResolver
      end

      classrelation 2614658 // origFunctionResolver (<unidirectional association>)
	relation 2614658 --->
	  a role_name "origFunctionResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614658 // origFunctionResolver (<unidirectional association>)
	  b parent class_ref 820226 // XPathFunctionResolver
      end

      classrelation 2614786 // namespaceContext (<unidirectional association>)
	relation 2614786 --->
	  a role_name "namespaceContext" init_value "null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614786 // namespaceContext (<unidirectional association>)
	  b parent class_ref 673794 // NamespaceContext
      end

      classrelation 2614914 // prefixResolver (<unidirectional association>)
	relation 2614914 --->
	  a role_name "prefixResolver" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2614914 // prefixResolver (<unidirectional association>)
	  b parent class_ref 820354 // JAXPPrefixResolver
      end

      attribute 1285762 "featureSecureProcessing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " By default Extension Functions are allowed in XPath Expressions. If
 Secure Processing Feature is set on XPathFactory then the invocation of
 extensions function need to throw XPathFunctionException
"
      end

      attribute 1285890 "useServiceMechanism"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2615042 // featureManager (<unidirectional association>)
	relation 2615042 --->
	  a role_name "featureManager" const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615042 // featureManager (<unidirectional association>)
	  b parent class_ref 587906 // FeatureManager
      end

      operation 5913730 "XPathImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "vr" type class_ref 820610 // XPathVariableResolver
	  param inout name "fr" type class_ref 820226 // XPathFunctionResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5913858 "XPathImpl"
	package explicit_return_type ""
	nparams 5
	  param inout name "vr" type class_ref 820610 // XPathVariableResolver
	  param inout name "fr" type class_ref 820226 // XPathFunctionResolver
	  param inout name "featureSecureProcessing" explicit_type "boolean"
	  param inout name "useServiceMechanism" explicit_type "boolean"
	  param inout name "featureManager" type class_ref 587906 // FeatureManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5913986 "setXPathVariableResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820610 // XPathVariableResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establishes a variable resolver.</p>

@param resolver Variable Resolver
"
      end

      operation 5914114 "getXPathVariableResolver"
	public return_type class_ref 820610 // XPathVariableResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the current variable resolver.</p>

@return Current variable resolver
"
      end

      operation 5914242 "setXPathFunctionResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 820226 // XPathFunctionResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establishes a function resolver.</p>

@param resolver XPath function resolver
"
      end

      operation 5914370 "getXPathFunctionResolver"
	public return_type class_ref 820226 // XPathFunctionResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the current function resolver.</p>

@return Current function resolver
"
      end

      operation 5914498 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nsContext" type class_ref 673794 // NamespaceContext
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Establishes a namespace context.</p>

@param nsContext Namespace context to use
"
      end

      operation 5914626 "getNamespaceContext"
	public return_type class_ref 673794 // NamespaceContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the current namespace context.</p>

@return Current Namespace context
"
      end

      classrelation 2615170 // d (<unidirectional association>)
	relation 2615170 --->
	  a role_name "d" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2615170 // d (<unidirectional association>)
	  b parent class_ref 378626 // Document
      end

      operation 5914754 "getParser"
	private return_type class_ref 378498 // DocumentBuilder
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5914882 "eval"
	private return_type class_ref 583298 // XObject
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "contextItem" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5915010 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an <code>XPath</code> expression in the specified context and return the result as the specified type.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
for context item evaluation,
variable, function and <code>QName</code> resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants} (
{@link XPathConstants#NUMBER NUMBER},
{@link XPathConstants#STRING STRING},
{@link XPathConstants#BOOLEAN BOOLEAN},
{@link XPathConstants#NODE NODE} or
{@link XPathConstants#NODESET NODESET})
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> or <code>returnType</code> is <code>null</code>, then a
<code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (node or node list, for example).
@param returnType The desired return type.

@return Result of evaluating an XPath expression as an <code>Object</code> of <code>returnType</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code> or <code>returnType</code> is <code>null</code>.
"
      end

      operation 5915138 "isSupported"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "returnType" type class_ref 673666 // QName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5915266 "getResultAsType"
	private return_type class_ref 129538 // Object
	nparams 2
	  param inout name "resultObject" type class_ref 583298 // XObject
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5915394 "evaluate"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "item" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the specified context and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, Object item, QName returnType)} with a <code>returnType</code> of
{@link XPathConstants#STRING}.</p>

<p>See \"Evaluation of XPath Expressions\" of JAXP 1.3 spec
for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If a <code>null</code> value is provided for
<code>item</code>, an empty document will be used for the
context.
If <code>expression</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param item The starting context (node or node list, for example).

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If <code>expression</code> cannot be evaluated.
@throws NullPointerException If <code>expression</code> is <code>null</code>.
"
      end

      operation 5915522 "compile"
	public return_type class_ref 781826 // XPathExpression
	nparams 1
	  param inout name "expression" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compile an XPath expression for later evaluation.</p>

<p>If <code>expression</code> contains any {@link XPathFunction}s,
they must be available via the {@link XPathFunctionResolver}.
An {@link XPathExpressionException} will be thrown if the <code>XPathFunction</code>
cannot be resovled with the <code>XPathFunctionResolver</code>.</p>

<p>If <code>expression</code> is <code>null</code>, a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.

@return Compiled XPath expression.

@throws XPathExpressionException If <code>expression</code> cannot be compiled.
@throws NullPointerException If <code>expression</code> is <code>null</code>.
"
      end

      operation 5915650 "evaluate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "source" type class_ref 606594 // InputSource
	  param inout name "returnType" type class_ref 673666 // QName
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as the specified type.</p>

<p>This method builds a data model for the {@link InputSource} and calls
{@link #evaluate(String expression, Object item, QName returnType)} on the resulting document object.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>returnType</code> is not one of the types defined in {@link XPathConstants},
then an <code>IllegalArgumentException</code> is thrown.</p>

<p>If <code>expression</code>, <code>source</code> or <code>returnType</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The input source of the document to evaluate over.
@param returnType The desired return type.

@return The <code>Object</code> that encapsulates the result of evaluating the expression.

@throws XPathExpressionException If expression cannot be evaluated.
@throws IllegalArgumentException If <code>returnType</code> is not one of the types defined in {@link XPathConstants}.
@throws NullPointerException If <code>expression</code>, <code>source</code> or <code>returnType</code>
  is <code>null</code>.
"
      end

      operation 5915778 "evaluate"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "source" type class_ref 606594 // InputSource
	nexceptions 1
	  exception class_ref 820866 // XPathExpressionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Evaluate an XPath expression in the context of the specified <code>InputSource</code>
and return the result as a <code>String</code>.</p>

<p>This method calls {@link #evaluate(String expression, InputSource source, QName returnType)} with a
<code>returnType</code> of {@link XPathConstants#STRING}.</p>

<p>See \"Evaluation of XPath Expressions\" section of JAXP 1.3 spec
for context item evaluation,
variable, function and QName resolution and return type conversion.</p>

<p>If <code>expression</code> or <code>source</code> is <code>null</code>,
then a <code>NullPointerException</code> is thrown.</p>

@param expression The XPath expression.
@param source The <code>InputSource</code> of the document to evaluate over.

@return The <code>String</code> that is the result of evaluating the expression and
  converting the result to a <code>String</code>.

@throws XPathExpressionException If expression cannot be evaluated.
@throws NullPointerException If <code>expression</code> or <code>source</code> is <code>null</code>.
"
      end

      operation 5915906 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>XPath</code> to its original configuration.</p>

<p><code>XPath</code> is reset to the same state as when it was created with
{@link XPathFactory#newXPath()}.
<code>reset()</code> is designed to allow the reuse of existing <code>XPath</code>s
thus saving resources associated with the creation of new <code>XPath</code>s.</p>

<p>The reset <code>XPath</code> is not guaranteed to have the same
{@link XPathFunctionResolver}, {@link XPathVariableResolver}
or {@link NamespaceContext} <code>Object</code>s, e.g. {@link Object#equals(Object obj)}.
It is guaranteed to have a functionally equal <code>XPathFunctionResolver</code>,
<code>XPathVariableResolver</code>
and <code>NamespaceContext</code>.</p>
"
      end
    end
  end

  deploymentview 164098 "jaxp"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 587778 "JAXPExtensionsProvider"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import javax.xml.xpath.XPathFunctionResolver;
import javax.xml.xpath.XPathFunction;
import javax.xml.xpath.XPathFunctionException;
import com.sun.org.apache.xpath.internal.ExtensionsProvider;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.objects.XNodeSet;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xalan.internal.utils.FeatureManager;
import com.sun.org.apache.xpath.internal.functions.FuncExtFunction;
import java.util.Vector;
import java.util.ArrayList;
import javax.xml.namespace.QName;
${definition}"
      associated_elems
	class_ref 820098 // JAXPExtensionsProvider
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: JAXPExtensionsProvider.java,v 1.1.2.1 2005/08/01 01:30:17 jeffsuttor Exp $"
    end

    artifact 587906 "JAXPPrefixResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.NamedNodeMap;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import javax.xml.namespace.NamespaceContext;
${definition}"
      associated_elems
	class_ref 820354 // JAXPPrefixResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: JAXPPrefixResolver.java,v 1.1.2.1 2005/08/01 01:30:18 jeffsuttor Exp $"
    end

    artifact 588034 "JAXPVariableStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import javax.xml.xpath.XPathVariableResolver;
import com.sun.org.apache.xml.internal.utils.QName;
import com.sun.org.apache.xpath.internal.VariableStack;
import com.sun.org.apache.xpath.internal.XPathContext;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
${definition}"
      associated_elems
	class_ref 820482 // JAXPVariableStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: JAXPVariableStack.java,v 1.1.2.1 2005/08/01 01:30:17 jeffsuttor Exp $"
    end

    artifact 588290 "XPathExpressionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.*;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xalan.internal.utils.FactoryImpl;
import com.sun.org.apache.xalan.internal.utils.FeatureManager;
import javax.xml.namespace.NamespaceContext;
import javax.xml.namespace.QName;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFunctionResolver;
import javax.xml.xpath.XPathVariableResolver;
import javax.xml.xpath.XPathConstants;
import org.w3c.dom.Node;
import org.w3c.dom.Document;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.traversal.NodeIterator;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.xml.sax.InputSource;
${definition}"
      associated_elems
	class_ref 820738 // XPathExpressionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathExpressionImpl.java,v 1.3 2005/09/27 09:40:43 sunithareddy Exp $"
    end

    artifact 588546 "XPathFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.XalanConstants;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xalan.internal.utils.FeatureManager;
import com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase;
import javax.xml.XMLConstants;
import javax.xml.xpath.XPathFactory;
import javax.xml.xpath.XPathFactoryConfigurationException;
import javax.xml.xpath.XPathFunctionResolver;
import javax.xml.xpath.XPathVariableResolver;
${definition}"
      associated_elems
	class_ref 820994 // XPathFactoryImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathFactoryImpl.java,v 1.2 2005/08/16 22:41:13 jeffsuttor Exp $"
    end

    artifact 588802 "XPathImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.namespace.QName;
import javax.xml.namespace.NamespaceContext;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFunctionResolver;
import javax.xml.xpath.XPathVariableResolver;
import javax.xml.xpath.XPathExpression;
import com.sun.org.apache.xml.internal.dtm.DTM;
import com.sun.org.apache.xpath.internal.*;
import com.sun.org.apache.xpath.internal.objects.XObject;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xalan.internal.utils.FactoryImpl;
import com.sun.org.apache.xalan.internal.utils.FeatureManager;
import org.w3c.dom.Node;
import org.w3c.dom.Document;
import org.w3c.dom.traversal.NodeIterator;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import javax.xml.parsers.*;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 821634 // XPathImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XPathImpl.java,v 1.2 2005/08/16 22:41:08 jeffsuttor Exp $"
    end
  end
end
