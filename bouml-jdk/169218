format 222
"dtd" // jdk1.8::com::sun::org::apache::xerces::internal::impl::dv::dtd
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/impl/dv/dtd/"
  java_package "com.sun.org.apache.xerces.internal.impl.dv.dtd"
  classview 162434 "dtd"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 680962 "DTDDVFactoryImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "the factory to create/return built-in schema DVs and create user-defined DVs

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1909378 // <generalisation>
	relation 1909378 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1909378 // <generalisation>
	  b parent class_ref 677506 // DTDDVFactory
      end

      classrelation 1909506 // fBuiltInTypes (<unidirectional association>)
	relation 1909506 --->
	  a role_name "fBuiltInTypes" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, DatatypeValidator> ${name}${value};
"
	    classrelation_ref 1909506 // fBuiltInTypes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      extra_member 142466 "initialization"
	
	cpp "" ""
	java "  static {
        Map<String, DatatypeValidator> builtInTypes = new HashMap<>();
        DatatypeValidator dvTemp;

        builtInTypes.put(\"string\", new StringDatatypeValidator());
        builtInTypes.put(\"ID\", new IDDatatypeValidator());
        dvTemp = new IDREFDatatypeValidator();
        builtInTypes.put(\"IDREF\", dvTemp);
        builtInTypes.put(\"IDREFS\", new ListDatatypeValidator(dvTemp));
        dvTemp = new ENTITYDatatypeValidator();
        builtInTypes.put(\"ENTITY\", new ENTITYDatatypeValidator());
        builtInTypes.put(\"ENTITIES\", new ListDatatypeValidator(dvTemp));
        builtInTypes.put(\"NOTATION\", new NOTATIONDatatypeValidator());
        dvTemp = new NMTOKENDatatypeValidator();
        builtInTypes.put(\"NMTOKEN\", dvTemp);
        builtInTypes.put(\"NMTOKENS\", new ListDatatypeValidator(dvTemp));

        fBuiltInTypes = Collections.unmodifiableMap(builtInTypes);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 4493314 "getBuiltInDV"
	public return_type class_ref 675202 // DatatypeValidator
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "return a dtd type of the given name

@param name  the name of the datatype
@return      the datatype validator of the given name
"
      end

      operation 4493442 "getBuiltInTypes"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, DatatypeValidator> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "get all built-in DVs, which are stored in a Map keyed by the name

@return      a Map which contains all datatypes
"
      end
    end

    class 681090 "ENTITYDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>ENTITYDatatypeValidator implements the
DatattypeValidator interface.
This validator embodies the ENTITY attribute type
from XML1.0 recommendation.
The Value space of ENTITY is the set of all strings
that match the NCName production and have been
declared as an unparsed entity in a document
type definition.
The Lexical space of Entity is the set of all
strings that match the NCName production.
The value space of ENTITY is scoped to a specific
instance document.</P>

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1909634 // <realization>
	relation 1909634 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1909634 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4493570 "ENTITYDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct an ENTITY datatype validator"
      end

      operation 4493698 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid ID value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681218 "IDDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>IDDatatypeValidator - ID represents the ID attribute
type from XML 1.0 Recommendation. The value space
od ID is the set of all strings that match the
NCName production and have been used in an XML
document. The lexical space of ID is the set of all
strings that match the NCName production.</P>
<P>The value space of ID is scoped to a specific
instance document.</P>
<P>The following constraint applies:
An ID must not appear more than once in an XML
document as a value of this type; i.e., ID values
must uniquely identify the elements which bear
them.</P>

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1909762 // <realization>
	relation 1909762 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1909762 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4493826 "IDDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct an ID datatype validator"
      end

      operation 4493954 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid ID value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681346 "IDREFDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>IDREFDatatypeValidator - represents the IDREFS
attribute type from XML 1.0 recommendation. The
Value Space of IDREF is the set of all strings
that match the NCName production and have been
used in an XML Document as the value of an element
or attribute of Type ID. The Lexical space of
IDREF is the set of strings that match the NCName
production.</P>
<P>The Value space of IDREF is scoped to a specific
instance document</P>

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1909890 // <realization>
	relation 1909890 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1909890 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4494082 "IDREFDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct an IDREF datatype validator"
      end

      operation 4494210 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid IDREF value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681474 "ListDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "For list types: ENTITIES, IDREFS, NMTOKENS.

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1910018 // <realization>
	relation 1910018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1910018 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      classrelation 1910146 // fItemValidator (<unidirectional association>)
	relation 1910146 --->
	  a role_name "fItemValidator" package
	    comment " the type of items in the list
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1910146 // fItemValidator (<unidirectional association>)
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4494338 "ListDatatypeValidator"
	public explicit_return_type ""
	nparams 1
	  param inout name "itemDV" type class_ref 675202 // DatatypeValidator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct a list datatype validator"
      end

      operation 4494466 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681602 "NMTOKENDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NMTOKEN datatype validator.

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1910274 // <realization>
	relation 1910274 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1910274 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4494594 "NMTOKENDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct a NMTOKEN datatype validator"
      end

      operation 4494722 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid NMTOKEN value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681730 "NOTATIONDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NOTATIONValidator defines the interface that data type validators must obey.
These validators can be supplied by the application writer and may be useful as
standalone code as well as plugins to the validator architecture.

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM

"
      classrelation 1910402 // <realization>
	relation 1910402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1910402 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4494850 "NOTATIONDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct a NOTATION datatype validator"
      end

      operation 4494978 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid NOTATION value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681858 "StringDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>StringValidator validates that XML content is a W3C string type.</P>
<P>The string datatype represents character strings in XML. The
value space of string is the set of finite-length sequences
of characters (as defined in [XML 1.0 Recommendation
(Second Edition)]) that match the Char production
from [XML 1.0 Recommendation (Second Edition)].
A character is an atomic unit of communication; it
is not further specified except to note that every
character has a corresponding Universal Code Set
code point ([ISO 10646],[Unicode] and [Unicode3]),
which is an integer.</P>

@xerces.internal

"
      classrelation 1910530 // <realization>
	relation 1910530 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1910530 // <realization>
	  b parent class_ref 675202 // DatatypeValidator
      end

      operation 4495106 "StringDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct a string datatype validator"
      end

      operation 4495234 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid string value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 681986 "XML11DTDDVFactoryImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "the factory to create/return built-in XML 1.1 DVs and create user-defined DVs

@xerces.internal

@author Neil Graham, IBM

"
      classrelation 1910658 // <generalisation>
	relation 1910658 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1910658 // <generalisation>
	  b parent class_ref 680962 // DTDDVFactoryImpl
      end

      classrelation 1910786 // XML11BUILTINTYPES (<unidirectional association>)
	relation 1910786 --->
	  a role_name "XML11BUILTINTYPES" class_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, DatatypeValidator> ${name}${value};
"
	    classrelation_ref 1910786 // XML11BUILTINTYPES (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      extra_member 142594 "initialization"
	
	cpp "" ""
	java "  static {
        Map<String, DatatypeValidator> xml11BuiltInTypes = new HashMap<>();
        xml11BuiltInTypes.put(\"XML11ID\", new XML11IDDatatypeValidator());
        DatatypeValidator dvTemp = new XML11IDREFDatatypeValidator();
        xml11BuiltInTypes.put(\"XML11IDREF\", dvTemp);
        xml11BuiltInTypes.put(\"XML11IDREFS\", new ListDatatypeValidator(dvTemp));
        dvTemp = new XML11NMTOKENDatatypeValidator();
        xml11BuiltInTypes.put(\"XML11NMTOKEN\", dvTemp);
        xml11BuiltInTypes.put(\"XML11NMTOKENS\", new ListDatatypeValidator(dvTemp));
        XML11BUILTINTYPES = Collections.unmodifiableMap(xml11BuiltInTypes);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 4495362 "getBuiltInDV"
	public return_type class_ref 675202 // DatatypeValidator
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " <clinit>

return a dtd type of the given name
This will call the super class if and only if it does not
recognize the passed-in name.

@param name  the name of the datatype
@return      the datatype validator of the given name
"
      end

      operation 4495490 "getBuiltInTypes"
	public return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, DatatypeValidator> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "get all built-in DVs, which are stored in a Map keyed by the name
New XML 1.1 datatypes are inserted.

@return      a Map which contains all datatypes
"
      end
    end

    class 682114 "XML11IDDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>IDDatatypeValidator - ID represents the ID attribute
type from XML 1.1 Recommendation. The value space
of ID is the set of all strings that match the
NCName production and have been used in an XML
document. The lexical space of ID is the set of all
strings that match the NCName production.</P>
<P>The value space of ID is scoped to a specific
instance document.</P>
<P>The following constraint applies:
An ID must not appear more than once in an XML
document as a value of this type; i.e., ID values
must uniquely identify the elements which bear
them.</P>

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM
@author Neil Graham, IBM

"
      classrelation 1910914 // <generalisation>
	relation 1910914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1910914 // <generalisation>
	  b parent class_ref 681218 // IDDatatypeValidator
      end

      operation 4495618 "XML11IDDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct an ID datatype validator"
      end

      operation 4495746 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid ID value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 682242 "XML11IDREFDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>IDREFDatatypeValidator - represents the IDREFS
attribute type from XML 1.1 recommendation. The
Value Space of IDREF is the set of all strings
that match the NCName production and have been
used in an XML Document as the value of an element
or attribute of Type ID. The Lexical space of
IDREF is the set of strings that match the NCName
production.</P>
<P>The Value space of IDREF is scoped to a specific
instance document</P>

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM
@author Neil Graham, IBM

"
      classrelation 1911042 // <generalisation>
	relation 1911042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1911042 // <generalisation>
	  b parent class_ref 681346 // IDREFDatatypeValidator
      end

      operation 4495874 "XML11IDREFDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct an IDREF datatype validator"
      end

      operation 4496002 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid IDREF value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end

    class 682370 "XML11NMTOKENDatatypeValidator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NMTOKEN datatype validator for NMTokens from XML 1.1.

@xerces.internal

@author Jeffrey Rodriguez, IBM
@author Sandy Gao, IBM
@author Neil Graham, IBM

"
      classrelation 1911170 // <generalisation>
	relation 1911170 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1911170 // <generalisation>
	  b parent class_ref 681602 // NMTOKENDatatypeValidator
      end

      operation 4496130 "XML11NMTOKENDatatypeValidator"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " construct a NMTOKEN datatype validator"
      end

      operation 4496258 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that \"content\" string is valid NMTOKEN value.
If invalid a Datatype validation exception is thrown.

@param content       the string value that needs to be validated
@param context       the validation context
@throws InvalidDatatypeException if the content is
        invalid according to the rules for the validators
@see InvalidDatatypeValueException
"
      end
    end
  end

  deploymentview 155778 "dtd"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 471170 "DTDDVFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory;
import com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 680962 // DTDDVFactoryImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471298 "ENTITYDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
${definition}"
      associated_elems
	class_ref 681090 // ENTITYDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471426 "IDDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XMLChar;
${definition}"
      associated_elems
	class_ref 681218 // IDDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471554 "IDREFDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XMLChar;
${definition}"
      associated_elems
	class_ref 681346 // IDREFDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471682 "ListDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import java.util.StringTokenizer;
${definition}"
      associated_elems
	class_ref 681474 // ListDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471810 "NMTOKENDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XMLChar;
${definition}"
      associated_elems
	class_ref 681602 // NMTOKENDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471938 "NOTATIONDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
${definition}"
      associated_elems
	class_ref 681730 // NOTATIONDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 472066 "StringDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
${definition}"
      associated_elems
	class_ref 681858 // StringDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 472194 "XML11DTDDVFactoryImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.DatatypeValidator;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 681986 // XML11DTDDVFactoryImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 472322 "XML11IDDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XML11Char;
${definition}"
      associated_elems
	class_ref 682114 // XML11IDDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 472450 "XML11IDREFDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XML11Char;
${definition}"
      associated_elems
	class_ref 682242 // XML11IDREFDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 472578 "XML11NMTOKENDatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.*;
import com.sun.org.apache.xerces.internal.util.XML11Char;
${definition}"
      associated_elems
	class_ref 682370 // XML11NMTOKENDatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
