format 222
"rmi" // jdk1.8::java::rmi
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/java/rmi/"
  java_package "java.rmi"
  classview 136066 "rmi"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 207106 "Remote"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Remote</code> interface serves to identify interfaces whose
methods may be invoked from a non-local virtual machine.  Any object that
is a remote object must directly or indirectly implement this interface.
Only those methods specified in a \"remote interface\", an interface that
extends <code>java.rmi.Remote</code> are available remotely.

<p>Implementation classes can implement any number of remote interfaces and
can extend other remote implementation classes.  RMI provides some
convenience classes that remote object implementations can extend which
facilitate remote object creation.  These classes are
<code>java.rmi.server.UnicastRemoteObject</code> and
<code>java.rmi.activation.Activatable</code>.

<p>For complete details on RMI, see the <a
href=../../../platform/rmi/spec/rmiTOC.html>RMI Specification</a> which describes the RMI API and system.

@since   JDK1.1
@author  Ann Wollrath
@see     java.rmi.server.UnicastRemoteObject
@see     java.rmi.activation.Activatable
"
    end

    class 207234 "RemoteException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>RemoteException</code> is the common superclass for a number of
communication-related exceptions that may occur during the execution of a
remote method call.  Each method of a remote interface, an interface that
extends <code>java.rmi.Remote</code>, must list
<code>RemoteException</code> in its throws clause.

<p>As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The \"wrapped remote
exception\" that may be provided at construction time and accessed via
the public {@link #detail} field is now known as the <i>cause</i>, and
may be accessed via the {@link Throwable#getCause()} method, as well as
the aforementioned \"legacy field.\"

<p>Invoking the method {@link Throwable#initCause(Throwable)} on an
instance of <code>RemoteException</code> always throws {@link
IllegalStateException}.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3321602 // <generalisation>
	relation 3321602 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3321602 // <generalisation>
	  b parent class_ref 146818 // IOException
      end

      attribute 1830786 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5148567311918794206L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      classrelation 3321730 // detail (<unidirectional association>)
	relation 3321730 --->
	  a role_name "detail" public
	    comment "
The cause of the remote exception.

<p>This field predates the general-purpose exception chaining facility.
The {@link Throwable#getCause()} method is now the preferred means of
obtaining this information.

@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3321730 // detail (<unidirectional association>)
	  b parent class_ref 129922 // Throwable
      end

      operation 7874434 "RemoteException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>RemoteException</code>.
"
      end

      operation 7874562 "RemoteException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>RemoteException</code> with the specified
detail message.

@param s the detail message
"
      end

      operation 7874690 "RemoteException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "cause" type class_ref 129922 // Throwable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>RemoteException</code> with the specified detail
message and cause.  This constructor sets the {@link #detail}
field to the specified <code>Throwable</code>.

@param s the detail message
@param cause the cause
"
      end

      operation 7874818 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the detail message, including the message from the cause, if
any, of this exception.

@return the detail message
"
      end

      operation 7874946 "getCause"
	public return_type class_ref 129922 // Throwable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this exception.  This method returns the value
of the {@link #detail} field.

@return  the cause, which may be <tt>null</tt>.
@since   1.4
"
      end
    end

    class 207362 "NoSuchObjectException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>NoSuchObjectException</code> is thrown if an attempt is made to
invoke a method on an object that no longer exists in the remote virtual
machine.  If a <code>NoSuchObjectException</code> occurs attempting to
invoke a method on a remote object, the call may be retransmitted and still
preserve RMI's \"at most once\" call semantics.

A <code>NoSuchObjectException</code> is also thrown by the method
<code>java.rmi.server.RemoteObject.toStub</code> and by the
<code>unexportObject</code> methods of
<code>java.rmi.server.UnicastRemoteObject</code> and
<code>java.rmi.activation.Activatable</code> and

@author  Ann Wollrath
@since   JDK1.1
@see     java.rmi.server.RemoteObject#toStub(Remote)
@see     java.rmi.server.UnicastRemoteObject#unexportObject(Remote,boolean)
@see     java.rmi.activation.Activatable#unexportObject(Remote,boolean)
"
      classrelation 3323394 // <generalisation>
	relation 3323394 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3323394 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1832450 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6619395951570472985L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7879042 "NoSuchObjectException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NoSuchObjectException</code> with the specified
detail message.

@param s the detail message
@since   JDK1.1
"
      end
    end

    class 505986 "MarshalledObject"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>MarshalledObject</code> contains a byte stream with the serialized
representation of an object given to its constructor.  The <code>get</code>
method returns a new copy of the original object, as deserialized from
the contained byte stream.  The contained object is serialized and
deserialized with the same serialization semantics used for marshaling
and unmarshaling parameters and return values of RMI calls:  When the
serialized form is created:

<ul>
<li> classes are annotated with a codebase URL from where the class
     can be loaded (if available), and
<li> any remote object in the <code>MarshalledObject</code> is
     represented by a serialized instance of its stub.
</ul>

<p>When copy of the object is retrieved (via the <code>get</code> method),
if the class is not available locally, it will be loaded from the
appropriate location (specified the URL annotated with the class descriptor
when the class was serialized.

<p><code>MarshalledObject</code> facilitates passing objects in RMI calls
that are not automatically deserialized immediately by the remote peer.

@param <T> the type of the object contained in this
<code>MarshalledObject</code>

@author  Ann Wollrath
@author  Peter Jones
@since   1.2
"
      classrelation 3322498 // <realization>
	relation 3322498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 3322498 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 1831554 "objBytes"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@serial Bytes of serialized representation.  If <code>objBytes</code> is
<code>null</code> then the object marshalled was a <code>null</code>
reference.

"
      end

      attribute 1831682 "locBytes"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@serial Bytes of location annotations, which are ignored by
<code>equals</code>.  If <code>locBytes</code> is null, there were no
non-<code>null</code> annotations during marshalling.

"
      end

      attribute 1831810 "hash"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@serial Stored hash code of contained object.

@see #hashCode

"
      end

      attribute 1831938 "objectInputFilter"
	private explicit_type "ObjectInputFilter"
	init_value " null"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Filter used when creating the instance from a stream; may be null. 
"
      end

      attribute 1832066 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8988374069173025854L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicate compatibility with 1.2 version of class. 
"
      end

      operation 7876354 "MarshalledObject"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "obj" explicit_type "T"
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>MarshalledObject</code> that contains the
serialized representation of the current state of the supplied object.
The object is serialized with the semantics used for marshaling
parameters for RMI calls.

@param obj the object to be serialized (must be serializable)
@exception IOException if an <code>IOException</code> occurs; an
<code>IOException</code> may occur if <code>obj</code> is not
serializable.
@since 1.2
"
      end

      operation 7876482 "readObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads in the state of the object and saves the stream's
serialization filter to be used when the object is deserialized.

@param stream the stream
@throws IOException if an I/O error occurs
@throws ClassNotFoundException if a class cannot be found
"
      end

      operation 7876610 "get"
	cpp_inline public explicit_return_type "T"
	nparams 0
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new copy of the contained marshalledobject.  The internal
representation is deserialized with the semantics used for
unmarshaling parameters for RMI calls.

@return a copy of the contained object
@exception IOException if an <code>IOException</code> occurs while
deserializing the object from its internal representation.
@exception ClassNotFoundException if a
<code>ClassNotFoundException</code> occurs while deserializing the
object from its internal representation.
could not be found
@since 1.2
"
      end

      operation 7876738 "hashCode"
	cpp_inline public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a hash code for this <code>MarshalledObject</code>.

@return a hash code
"
      end

      operation 7876866 "equals"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this <code>MarshalledObject</code> to another object.
Returns true if and only if the argument refers to a
<code>MarshalledObject</code> that contains exactly the same
serialized representation of an object as this one does. The
comparison ignores any class codebase annotation, meaning that
two objects are equivalent if they have the same serialized
representation <i>except</i> for the codebase of each class
in the serialized representation.

@param obj the object to compare with this <code>MarshalledObject</code>
@return <code>true</code> if the argument contains an equivalent
serialized object; <code>false</code> otherwise
@since 1.2
"
      end

      class 1005314 "MarshalledObjectOutputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3322754 // locOut (<unidirectional association>)
	  relation 3322754 --->
	    a role_name "locOut" private
	      comment " The stream on which location objects are written. 
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3322754 // locOut (<unidirectional association>)
	    b parent class_ref 173442 // ObjectOutputStream
	end

	attribute 1832194 "hadAnnotations"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " <code>true</code> if non-<code>null</code> annotations are
 written.

"
	end

	operation 7876994 "MarshalledObjectOutputStream"
	  cpp_inline package explicit_return_type ""
	  nparams 2
	    param inout name "objOut" type class_ref 151298 // OutputStream
	    param inout name "locOut" type class_ref 151298 // OutputStream
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new <code>MarshalledObjectOutputStream</code> whose
non-location bytes will be written to <code>objOut</code> and whose
location annotations (if any) will be written to
<code>locOut</code>.
"
	end

	operation 7877122 "hadAnnotations"
	  cpp_inline package explicit_return_type "boolean"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns <code>true</code> if any non-<code>null</code> location
annotations have been written to this stream.
"
	end

	operation 7877250 "writeLocation"
	  cpp_inline protected explicit_return_type "void"
	  nparams 1
	    param inout name "loc" type class_ref 128130 // String
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Overrides MarshalOutputStream.writeLocation implementation to write
annotations to the location stream.
"
	end

	operation 7877378 "flush"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1005570 "MarshalledObjectInputStream"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3323010 // locIn (<unidirectional association>)
	  relation 3323010 --->
	    a role_name "locIn" private
	      comment "
The stream from which annotations will be read.  If this is
<code>null</code>, then all annotations were <code>null</code>.

"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3323010 // locIn (<unidirectional association>)
	    b parent class_ref 168962 // ObjectInputStream
	end

	operation 7877506 "MarshalledObjectInputStream"
	  cpp_inline package explicit_return_type ""
	  nparams 3
	    param inout name "objIn" type class_ref 146434 // InputStream
	    param inout name "locIn" type class_ref 146434 // InputStream
	    param inout name "filter" explicit_type "ObjectInputFilter"
	  nexceptions 1
	    exception class_ref 146818 // IOException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new <code>MarshalledObjectInputStream</code> that
reads its objects from <code>objIn</code> and annotations
from <code>locIn</code>.  If <code>locIn</code> is
<code>null</code>, then all annotations will be
<code>null</code>.
"
	end

	operation 7877634 "readLocation"
	  cpp_inline protected return_type class_ref 129538 // Object
	  nparams 0
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 169730 // ClassNotFoundException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Overrides MarshalInputStream.readLocation to return locations from
the stream we were given, or <code>null</code> if we were given a
<code>null</code> location stream.
"
	end
      end
    end

    class 1004674 "AccessException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>AccessException</code> is thrown by certain methods of the
<code>java.rmi.Naming</code> class (specifically <code>bind</code>,
<code>rebind</code>, and <code>unbind</code>) and methods of the
<code>java.rmi.activation.ActivationSystem</code> interface to
indicate that the caller does not have permission to perform the action
requested by the method call.  If the method was invoked from a non-local
host, then an <code>AccessException</code> is thrown.

@author  Ann Wollrath
@author  Roger Riggs
@since   JDK1.1
@see     java.rmi.Naming
@see     java.rmi.activation.ActivationSystem
"
      classrelation 3321858 // <generalisation>
	relation 3321858 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3321858 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1830914 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6314925228044966088L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7875074 "AccessException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AccessException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7875202 "AccessException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AccessException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1004802 "AlreadyBoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>AlreadyBoundException</code> is thrown if an attempt
is made to bind an object in the registry to a name that already
has an associated binding.

@since   JDK1.1
@author  Ann Wollrath
@author  Roger Riggs
@see     java.rmi.Naming#bind(String, java.rmi.Remote)
@see     java.rmi.registry.Registry#bind(String, java.rmi.Remote)
"
      classrelation 3321986 // <generalisation>
	relation 3321986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3321986 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1831042 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9218657361741657110L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7875330 "AlreadyBoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AlreadyBoundException</code> with no
specified detail message.
@since JDK1.1
"
      end

      operation 7875458 "AlreadyBoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>AlreadyBoundException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end
    end

    class 1004930 "ConnectException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>ConnectException</code> is thrown if a connection is refused
to the remote host for a remote method call.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3322114 // <generalisation>
	relation 3322114 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3322114 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1831170 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4863550261346652506L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7875586 "ConnectException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ConnectException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7875714 "ConnectException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ConnectException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1005058 "ConnectIOException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>ConnectIOException</code> is thrown if an
<code>IOException</code> occurs while making a connection
to the remote host for a remote method call.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3322242 // <generalisation>
	relation 3322242 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3322242 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1831298 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8087809532704668744L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7875842 "ConnectIOException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ConnectIOException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7875970 "ConnectIOException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ConnectIOException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1005186 "MarshalException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>MarshalException</code> is thrown if a
<code>java.io.IOException</code> occurs while marshalling the remote call
header, arguments or return value for a remote method call.  A
<code>MarshalException</code> is also thrown if the receiver does not
support the protocol version of the sender.

<p>If a <code>MarshalException</code> occurs during a remote method call,
the call may or may not have reached the server.  If the call did reach the
server, parameters may have been deserialized.  A call may not be
retransmitted after a <code>MarshalException</code> and reliably preserve
\"at most once\" call semantics.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3322370 // <generalisation>
	relation 3322370 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3322370 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1831426 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6223554758134037936L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7876098 "MarshalException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MarshalException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7876226 "MarshalException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>MarshalException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1005826 "Naming"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The <code>Naming</code> class provides methods for storing and obtaining
references to remote objects in a remote object registry.  Each method of
the <code>Naming</code> class takes as one of its arguments a name that
is a <code>java.lang.String</code> in URL format (without the
scheme component) of the form:

<PRE>
   //host:port/name
</PRE>

<P>where <code>host</code> is the host (remote or local) where the registry
is located, <code>port</code> is the port number on which the registry
accepts calls, and where <code>name</code> is a simple string uninterpreted
by the registry. Both <code>host</code> and <code>port</code> are optional.
If <code>host</code> is omitted, the host defaults to the local host. If
<code>port</code> is omitted, then the port defaults to 1099, the
\"well-known\" port that RMI's registry, <code>rmiregistry</code>, uses.

<P><em>Binding</em> a name for a remote object is associating or
registering a name for a remote object that can be used at a later time to
look up that remote object.  A remote object can be associated with a name
using the <code>Naming</code> class's <code>bind</code> or
<code>rebind</code> methods.

<P>Once a remote object is registered (bound) with the RMI registry on the
local host, callers on a remote (or local) host can lookup the remote
object by name, obtain its reference, and then invoke remote methods on the
object.  A registry may be shared by all servers running on a host or an
individual server process may create and use its own registry if desired
(see <code>java.rmi.registry.LocateRegistry.createRegistry</code> method
for details).

@author  Ann Wollrath
@author  Roger Riggs
@since   JDK1.1
@see     java.rmi.registry.Registry
@see     java.rmi.registry.LocateRegistry
@see     java.rmi.registry.LocateRegistry#createRegistry(int)
"
      operation 7877762 "Naming"
	private explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disallow anyone from creating one of these
"
      end

      operation 7877890 "lookup"
	class_operation public return_type class_ref 207106 // Remote
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 1005954 // NotBoundException
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 207234 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference, a stub, for the remote object associated
with the specified <code>name</code>.

@param name a name in URL format (without the scheme component)
@return a reference for a remote object
@exception NotBoundException if name is not currently bound
@exception RemoteException if registry could not be contacted
@exception AccessException if this operation is not permitted
@exception MalformedURLException if the name is not an appropriately
 formatted URL
@since JDK1.1
"
      end

      operation 7878018 "bind"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "obj" type class_ref 207106 // Remote
	nexceptions 3
	  exception class_ref 1004802 // AlreadyBoundException
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 207234 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds the specified <code>name</code> to a remote object.

@param name a name in URL format (without the scheme component)
@param obj a reference for the remote object (usually a stub)
@exception AlreadyBoundException if name is already bound
@exception MalformedURLException if the name is not an appropriately
 formatted URL
@exception RemoteException if registry could not be contacted
@exception AccessException if this operation is not permitted (if
originating from a non-local host, for example)
@since JDK1.1
"
      end

      operation 7878146 "unbind"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 3
	  exception class_ref 207234 // RemoteException
	  exception class_ref 1005954 // NotBoundException
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys the binding for the specified name that is associated
with a remote object.

@param name a name in URL format (without the scheme component)
@exception NotBoundException if name is not currently bound
@exception MalformedURLException if the name is not an appropriately
 formatted URL
@exception RemoteException if registry could not be contacted
@exception AccessException if this operation is not permitted (if
originating from a non-local host, for example)
@since JDK1.1
"
      end

      operation 7878274 "rebind"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "obj" type class_ref 207106 // Remote
	nexceptions 2
	  exception class_ref 207234 // RemoteException
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rebinds the specified name to a new remote object. Any existing
binding for the name is replaced.

@param name a name in URL format (without the scheme component)
@param obj new remote object to associate with the name
@exception MalformedURLException if the name is not an appropriately
 formatted URL
@exception RemoteException if registry could not be contacted
@exception AccessException if this operation is not permitted (if
originating from a non-local host, for example)
@since JDK1.1
"
      end

      operation 7878402 "list"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 207234 // RemoteException
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of the names bound in the registry.  The names are
URL-formatted (without the scheme component) strings. The array contains
a snapshot of the names present in the registry at the time of the
call.

@param   name a registry name in URL format (without the scheme
         component)
@return  an array of names (in the appropriate format) bound
         in the registry
@exception MalformedURLException if the name is not an appropriately
 formatted URL
@exception RemoteException if registry could not be contacted.
@since JDK1.1
"
      end

      operation 7878530 "getRegistry"
	class_operation private return_type class_ref 1006082 // Registry
	nparams 1
	  param inout name "parsed" type class_ref 1006210 // ParsedNamingURL
	nexceptions 1
	  exception class_ref 207234 // RemoteException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a registry reference obtained from information in the URL.
"
      end

      class 1006210 "ParsedNamingURL"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3323138 // host (<unidirectional association>)
	  relation 3323138 --->
	    a role_name "host" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3323138 // host (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 1832322 "port"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 3323266 // name (<unidirectional association>)
	  relation 3323266 --->
	    a role_name "name" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3323266 // name (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 7878914 "ParsedNamingURL"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "host" type class_ref 128130 // String
	    param in name "port" explicit_type "int"
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 7878658 "parseURL"
	class_operation private return_type class_ref 1006210 // ParsedNamingURL
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 253442 // MalformedURLException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dissect Naming URL strings to obtain referenced host, port and
object name.

@return an object which contains each of the above
components.

@exception MalformedURLException if given url string is malformed
"
      end

      operation 7878786 "intParseURL"
	class_operation private return_type class_ref 1006210 // ParsedNamingURL
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 253442 // MalformedURLException
	  exception class_ref 672642 // URISyntaxException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1005954 "NotBoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>NotBoundException</code> is thrown if an attempt
is made to lookup or unbind in the registry a name that has
no associated binding.

@since   JDK1.1
@author  Ann Wollrath
@author  Roger Riggs
@see     java.rmi.Naming#lookup(String)
@see     java.rmi.Naming#unbind(String)
@see     java.rmi.registry.Registry#lookup(String)
@see     java.rmi.registry.Registry#unbind(String)
"
      classrelation 3323522 // <generalisation>
	relation 3323522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3323522 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 1832578 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1857741824849069317L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7879170 "NotBoundException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NotBoundException</code> with no
specified detail message.
@since JDK1.1
"
      end

      operation 7879298 "NotBoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>NotBoundException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end
    end

    class 1006338 "RMISecurityException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>RMISecurityException</code> signals that a security exception
has occurred during the execution of one of
<code>java.rmi.RMISecurityManager</code>'s methods.

@author  Roger Riggs
@since   JDK1.1
@deprecated Use {@link java.lang.SecurityException} instead.
Application code should never directly reference this class, and
<code>RMISecurityManager</code> no longer throws this subclass of
<code>java.lang.SecurityException</code>.
"
      classrelation 3323650 // <generalisation>
	relation 3323650 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3323650 // <generalisation>
	  b parent class_ref 171138 // SecurityException
      end

      attribute 1832706 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8433406075740433514L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7879426 "RMISecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Construct an <code>RMISecurityException</code> with a detail message.
@param name the detail message
@since JDK1.1
@deprecated no replacement
"
      end

      operation 7879554 "RMISecurityException"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "arg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Construct an <code>RMISecurityException</code> with a detail message.
@param name the detail message
@param arg ignored
@since JDK1.1
@deprecated no replacement
"
      end
    end

    class 1006466 "RMISecurityManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code RMISecurityManager} implements a policy identical to the policy
implemented by {@link SecurityManager}. RMI applications
should use the {@code SecurityManager} class or another appropriate
{@code SecurityManager} implementation instead of this class. RMI's class
loader will download classes from remote locations only if a security
manager has been set.

@implNote
<p>Applets typically run in a container that already has a security
manager, so there is generally no need for applets to set a security
manager. If you have a standalone application, you might need to set a
{@code SecurityManager} in order to enable class downloading. This can be
done by adding the following to your code. (It needs to be executed before
RMI can download code from remote hosts, so it most likely needs to appear
in the {@code main} method of your application.)

<pre>{@code
   if (System.getSecurityManager() == null) {
       System.setSecurityManager(new SecurityManager());
   }
}</pre>

@author  Roger Riggs
@author  Peter Jones
@since JDK1.1
@deprecated Use {@link SecurityManager} instead.
"
      classrelation 3323778 // <generalisation>
	relation 3323778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3323778 // <generalisation>
	  b parent class_ref 938242 // SecurityManager
      end

      operation 7879682 "RMISecurityManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code RMISecurityManager}.
@since JDK1.1
"
      end
    end

    class 1006594 "ServerError"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>ServerError</code> is thrown as a result of a remote method
invocation when an <code>Error</code> is thrown while processing
the invocation on the server, either while unmarshalling the arguments,
executing the remote method itself, or marshalling the return value.

A <code>ServerError</code> instance contains the original
<code>Error</code> that occurred as its cause.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3323906 // <generalisation>
	relation 3323906 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3323906 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1832834 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8455284893909696482L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7879810 "ServerError"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "err" type class_ref 195842 // Error
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ServerError</code> with the specified
detail message and nested error.

@param s the detail message
@param err the nested error
@since JDK1.1
"
      end
    end

    class 1006722 "ServerException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>ServerException</code> is thrown as a result of a remote method
invocation when a <code>RemoteException</code> is thrown while processing
the invocation on the server, either while unmarshalling the arguments or
executing the remote method itself.

A <code>ServerException</code> instance contains the original
<code>RemoteException</code> that occurred as its cause.

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3324034 // <generalisation>
	relation 3324034 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324034 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1832962 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4775845313121906682L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7879938 "ServerException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ServerException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7880066 "ServerException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>ServerException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1006850 "ServerRuntimeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "From a server executing on JDK&nbsp;1.1, a
<code>ServerRuntimeException</code> is thrown as a result of a
remote method invocation when a <code>RuntimeException</code> is
thrown while processing the invocation on the server, either while
unmarshalling the arguments, executing the remote method itself, or
marshalling the return value.

A <code>ServerRuntimeException</code> instance contains the original
<code>RuntimeException</code> that occurred as its cause.

<p>A <code>ServerRuntimeException</code> is not thrown from servers
executing on the Java 2 platform v1.2 or later versions.

@author  Ann Wollrath
@since   JDK1.1
@deprecated no replacement
"
      classrelation 3324162 // <generalisation>
	relation 3324162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324162 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1833090 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7054464920481467219L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7880194 "ServerRuntimeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a <code>ServerRuntimeException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@deprecated no replacement
@since JDK1.1
"
      end
    end

    class 1006978 "StubNotFoundException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>StubNotFoundException</code> is thrown if a valid stub class
could not be found for a remote object when it is exported.
A <code>StubNotFoundException</code> may also be
thrown when an activatable object is registered via the
<code>java.rmi.activation.Activatable.register</code> method.

@author  Roger Riggs
@since   JDK1.1
@see     java.rmi.server.UnicastRemoteObject
@see     java.rmi.activation.Activatable
"
      classrelation 3324290 // <generalisation>
	relation 3324290 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324290 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1833218 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7088199405468872373L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7880322 "StubNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>StubNotFoundException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7880450 "StubNotFoundException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>StubNotFoundException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1007106 "UnexpectedException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>UnexpectedException</code> is thrown if the client of a
remote method call receives, as a result of the call, a checked
exception that is not among the checked exception types declared in the
<code>throws</code> clause of the method in the remote interface.

@author  Roger Riggs
@since   JDK1.1
"
      classrelation 3324418 // <generalisation>
	relation 3324418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324418 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1833346 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1800467484195073863L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7880578 "UnexpectedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnexpectedException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7880706 "UnexpectedException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a <code>UnexpectedException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1007234 "UnknownHostException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>UnknownHostException</code> is thrown if a
<code>java.net.UnknownHostException</code> occurs while creating
a connection to the remote host for a remote method call.

@since   JDK1.1
"
      classrelation 3324546 // <generalisation>
	relation 3324546 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324546 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1833474 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8152710247442114228L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7880834 "UnknownHostException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnknownHostException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7880962 "UnknownHostException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnknownHostException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end

    class 1007362 "UnmarshalException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>UnmarshalException</code> can be thrown while unmarshalling the
parameters or results of a remote method call if any of the following
conditions occur:
<ul>
<li> if an exception occurs while unmarshalling the call header
<li> if the protocol for the return value is invalid
<li> if a <code>java.io.IOException</code> occurs unmarshalling
parameters (on the server side) or the return value (on the client side).
<li> if a <code>java.lang.ClassNotFoundException</code> occurs during
unmarshalling parameters or return values
<li> if no skeleton can be loaded on the server-side; note that skeletons
are required in the 1.1 stub protocol, but not in the 1.2 stub protocol.
<li> if the method hash is invalid (i.e., missing method).
<li> if there is a failure to create a remote reference object for
a remote object's stub when it is unmarshalled.
</ul>

@author  Ann Wollrath
@since   JDK1.1
"
      classrelation 3324674 // <generalisation>
	relation 3324674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 3324674 // <generalisation>
	  b parent class_ref 207234 // RemoteException
      end

      attribute 1833602 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 594380845140740218L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " indicate compatibility with JDK 1.1.x version of class 
"
      end

      operation 7881090 "UnmarshalException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnmarshalException</code> with the specified
detail message.

@param s the detail message
@since JDK1.1
"
      end

      operation 7881218 "UnmarshalException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "ex" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UnmarshalException</code> with the specified
detail message and nested exception.

@param s the detail message
@param ex the nested exception
@since JDK1.1
"
      end
    end
  end

  package_ref 158210 // server

  deploymentview 168834 "rmi"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 741250 "RemoteException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 207234 // RemoteException
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 741378 "AccessException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1004674 // AccessException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 741506 "AlreadyBoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1004802 // AlreadyBoundException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 741634 "ConnectException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1004930 // ConnectException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 741762 "ConnectIOException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1005058 // ConnectIOException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 741890 "MarshalException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1005186 // MarshalException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742018 "MarshalledObject"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.Serializable;
import java.security.AccessController;
import java.security.PrivilegedAction;
import sun.rmi.server.MarshalInputStream;
import sun.rmi.server.MarshalOutputStream;
import sun.misc.ObjectInputFilter;
${definition}"
      associated_elems
	class_ref 505986 // MarshalledObject
      end
      comment "Copyright (c) 1997, 2016, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742146 "Naming"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.rmi.registry.*;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
${definition}"
      associated_elems
	class_ref 1005826 // Naming
      end
      comment "Copyright (c) 1996, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742274 "NoSuchObjectException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 207362 // NoSuchObjectException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742402 "NotBoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1005954 // NotBoundException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742530 "Remote"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 207106 // Remote
      end
      comment "Copyright (c) 1996, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742658 "RMISecurityException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1006338 // RMISecurityException
      end
      comment "Copyright (c) 1996, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742786 "RMISecurityManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.*;
${definition}"
      associated_elems
	class_ref 1006466 // RMISecurityManager
      end
      comment "Copyright (c) 1996, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 742914 "ServerError"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1006594 // ServerError
      end
      comment "Copyright (c) 1996, 2001, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743042 "ServerException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1006722 // ServerException
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743170 "ServerRuntimeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1006850 // ServerRuntimeException
      end
      comment "Copyright (c) 1996, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743298 "StubNotFoundException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1006978 // StubNotFoundException
      end
      comment "Copyright (c) 1996, 2003, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743426 "UnexpectedException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1007106 // UnexpectedException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743554 "UnknownHostException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1007234 // UnknownHostException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 743682 "UnmarshalException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1007362 // UnmarshalException
      end
      comment "Copyright (c) 1996, 1998, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end

  package_ref 182658 // registry

  package_ref 182786 // activation

  package_ref 182914 // dgc
end
