class IINC
!!!3533570.java!!!	IINC(in n : int, in c : int)
    super(); // Default behaviour of LocalVariableInstruction causes error

    this.opcode = com.sun.org.apache.bcel.internal.Constants.IINC;
    this.length = (short)3;

    setIndex(n);    // May set wide as side effect
    setIncrement(c);
!!!3533698.java!!!	dump(inout out : DataOutputStream) : void
    if(wide) // Need WIDE prefix ?
      out.writeByte(com.sun.org.apache.bcel.internal.Constants.WIDE);

    out.writeByte(opcode);

    if(wide) {
      out.writeShort(n);
      out.writeShort(c);
    } else {
      out.writeByte(n);
      out.writeByte(c);
    }
!!!3533826.java!!!	setWide() : void
    if(wide = ((n > com.sun.org.apache.bcel.internal.Constants.MAX_SHORT) ||
               (Math.abs(c) > Byte.MAX_VALUE)))
      length = 6; // wide byte included
    else
      length = 3;
!!!3533954.java!!!	initFromFile(inout bytes : ByteSequence, inout wide : boolean) : void
    this.wide = wide;

    if(wide) {
      length = 6;
      n = bytes.readUnsignedShort();
      c = bytes.readShort();
    } else {
      length = 3;
      n = bytes.readUnsignedByte();
      c = bytes.readByte();
    }
!!!3534082.java!!!	toString(inout verbose : boolean) : String
    return super.toString(verbose) + " " + c;
!!!3534210.java!!!	setIndex(in n : int) : void
    if(n < 0)
      throw new ClassGenException("Negative index value: " + n);

    this.n = n;
    setWide();
!!!3534338.java!!!	getIncrement() : int
 return c;
!!!3534466.java!!!	setIncrement(in c : int) : void
    this.c = c;
    setWide();
!!!3534594.java!!!	getType(inout cp : ConstantPoolGen) : Type
    return Type.INT;
!!!3534722.java!!!	accept(inout v : Visitor) : void
    v.visitLocalVariableInstruction(this);
    v.visitIINC(this);
