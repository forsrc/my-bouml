class Query
!!!9794306.java!!!	and(inout q1 : QueryExp, inout q2 : QueryExp) : QueryExp
         return new AndQueryExp(q1, q2);
!!!9794434.java!!!	or(inout q1 : QueryExp, inout q2 : QueryExp) : QueryExp
         return new OrQueryExp(q1, q2);
!!!9794562.java!!!	gt(inout v1 : ValueExp, inout v2 : ValueExp) : QueryExp
         return new BinaryRelQueryExp(GT, v1, v2);
!!!9794690.java!!!	geq(inout v1 : ValueExp, inout v2 : ValueExp) : QueryExp
         return new BinaryRelQueryExp(GE, v1, v2);
!!!9794818.java!!!	leq(inout v1 : ValueExp, inout v2 : ValueExp) : QueryExp
         return new BinaryRelQueryExp(LE, v1, v2);
!!!9794946.java!!!	lt(inout v1 : ValueExp, inout v2 : ValueExp) : QueryExp
         return new BinaryRelQueryExp(LT, v1, v2);
!!!9795074.java!!!	eq(inout v1 : ValueExp, inout v2 : ValueExp) : QueryExp
         return new BinaryRelQueryExp(EQ, v1, v2);
!!!9795202.java!!!	between(inout v1 : ValueExp, inout v2 : ValueExp, inout v3 : ValueExp) : QueryExp
         return new BetweenQueryExp(v1, v2, v3);
!!!9795330.java!!!	match(inout a : AttributeValueExp, inout s : StringValueExp) : QueryExp
         return new MatchQueryExp(a, s);
!!!9795458.java!!!	attr(inout name : String) : AttributeValueExp
         return new AttributeValueExp(name);
!!!9795586.java!!!	attr(inout className : String, inout name : String) : AttributeValueExp
         return new QualifiedAttributeValueExp(className, name);
!!!9795714.java!!!	classattr() : AttributeValueExp
         return new ClassAttributeValueExp();
!!!9795842.java!!!	not(inout queryExp : QueryExp) : QueryExp
         return new NotQueryExp(queryExp);
!!!9795970.java!!!	in(inout val : ValueExp, inout valueList : ValueExp [[]]) : QueryExp
         return new InQueryExp(val, valueList);
!!!9796098.java!!!	value(inout val : String) : StringValueExp
         return new StringValueExp(val);
!!!9796226.java!!!	value(inout val : Number) : ValueExp
         return new NumericValueExp(val);
!!!9796354.java!!!	value(in val : int) : ValueExp
         return new NumericValueExp((long) val);
!!!9796482.java!!!	value(in val : long) : ValueExp
         return new NumericValueExp(val);
!!!9796610.java!!!	value(in val : float) : ValueExp
         return new NumericValueExp((double) val);
!!!9796738.java!!!	value(in val : double) : ValueExp
         return new NumericValueExp(val);
!!!9796866.java!!!	value(inout val : boolean) : ValueExp
         return new BooleanValueExp(val);
!!!9796994.java!!!	plus(inout value1 : ValueExp, inout value2 : ValueExp) : ValueExp
         return new BinaryOpValueExp(PLUS, value1, value2);
!!!9797122.java!!!	times(inout value1 : ValueExp, inout value2 : ValueExp) : ValueExp
         return new BinaryOpValueExp(TIMES, value1, value2);
!!!9797250.java!!!	minus(inout value1 : ValueExp, inout value2 : ValueExp) : ValueExp
         return new BinaryOpValueExp(MINUS, value1, value2);
!!!9797378.java!!!	div(inout value1 : ValueExp, inout value2 : ValueExp) : ValueExp
         return new BinaryOpValueExp(DIV, value1, value2);
!!!9797506.java!!!	initialSubString(inout a : AttributeValueExp, inout s : StringValueExp) : QueryExp
         return new MatchQueryExp(a,
             new StringValueExp(escapeString(s.getValue()) + "*"));
!!!9797634.java!!!	anySubString(inout a : AttributeValueExp, inout s : StringValueExp) : QueryExp
         return new MatchQueryExp(a,
             new StringValueExp("*" + escapeString(s.getValue()) + "*"));
!!!9797762.java!!!	finalSubString(inout a : AttributeValueExp, inout s : StringValueExp) : QueryExp
         return new MatchQueryExp(a,
             new StringValueExp("*" + escapeString(s.getValue())));
!!!9797890.java!!!	isInstanceOf(inout classNameValue : StringValueExp) : QueryExp
        return new InstanceOfQueryExp(classNameValue);
!!!9798018.java!!!	escapeString(inout s : String) : String
         if (s == null)
             return null;
         s = s.replace("\\", "\\\\");
         s = s.replace("*", "\\*");
         s = s.replace("?", "\\?");
         s = s.replace("[", "\\[");
         return s;
