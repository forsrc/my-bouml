class AbstractCellEditor
!!!10406786.java!!!	isCellEditable(inout e : EventObject) : boolean
        return true;
!!!10406914.java!!!	shouldSelectCell(inout anEvent : EventObject) : boolean
        return true;
!!!10407042.java!!!	stopCellEditing() : boolean
        fireEditingStopped();
        return true;
!!!10407170.java!!!	cancelCellEditing() : void
        fireEditingCanceled();
!!!10407298.java!!!	addCellEditorListener(inout l : CellEditorListener) : void
        listenerList.add(CellEditorListener.class, l);
!!!10407426.java!!!	removeCellEditorListener(inout l : CellEditorListener) : void
        listenerList.remove(CellEditorListener.class, l);
!!!10407554.java!!!	getCellEditorListeners() : CellEditorListener
        return listenerList.getListeners(CellEditorListener.class);
!!!10407682.java!!!	fireEditingStopped() : void
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if (changeEvent == null)
                    changeEvent = new ChangeEvent(this);
                ((CellEditorListener)listeners[i+1]).editingStopped(changeEvent);
            }
        }
!!!10407810.java!!!	fireEditingCanceled() : void
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if (changeEvent == null)
                    changeEvent = new ChangeEvent(this);
                ((CellEditorListener)listeners[i+1]).editingCanceled(changeEvent);
            }
        }
