class SizeSequence
!!!10808450.java!!!	SizeSequence()
        a = emptyArray;
!!!10808578.java!!!	SizeSequence(in numEntries : int)
        this(numEntries, 0);
!!!10808706.java!!!	SizeSequence(in numEntries : int, in value : int)
        this();
        insertEntries(0, numEntries, value);
!!!10808834.java!!!	SizeSequence(inout sizes : int [[]])
        this();
        setSizes(sizes);
!!!10808962.java!!!	setSizes(in length : int, in size : int) : void
        if (a.length != length) {
            a = new int[length];
        }
        setSizes(0, length, size);
!!!10809090.java!!!	setSizes(in from : int, in to : int, in size : int) : int
        if (to <= from) {
            return 0;
        }
        int m = (from + to)/2;
        a[m] = size + setSizes(from, m, size);
        return a[m] + setSizes(m + 1, to, size);
!!!10809218.java!!!	setSizes(inout sizes : int [[]]) : void
        if (a.length != sizes.length) {
            a = new int[sizes.length];
        }
        setSizes(0, a.length, sizes);
!!!10809346.java!!!	setSizes(in from : int, in to : int, inout sizes : int [[]]) : int
        if (to <= from) {
            return 0;
        }
        int m = (from + to)/2;
        a[m] = sizes[m] + setSizes(from, m, sizes);
        return a[m] + setSizes(m + 1, to, sizes);
!!!10809474.java!!!	getSizes() : int
        int n = a.length;
        int[] sizes = new int[n];
        getSizes(0, n, sizes);
        return sizes;
!!!10809602.java!!!	getSizes(in from : int, in to : int, inout sizes : int [[]]) : int
        if (to <= from) {
            return 0;
        }
        int m = (from + to)/2;
        sizes[m] = a[m] - getSizes(from, m, sizes);
        return a[m] + getSizes(m + 1, to, sizes);
!!!10809730.java!!!	getPosition(in index : int) : int
        return getPosition(0, a.length, index);
!!!10809858.java!!!	getPosition(in from : int, in to : int, in index : int) : int
        if (to <= from) {
            return 0;
        }
        int m = (from + to)/2;
        if (index <= m) {
            return getPosition(from, m, index);
        }
        else {
            return a[m] + getPosition(m + 1, to, index);
        }
!!!10809986.java!!!	getIndex(in position : int) : int
        return getIndex(0, a.length, position);
!!!10810114.java!!!	getIndex(in from : int, in to : int, in position : int) : int
        if (to <= from) {
            return from;
        }
        int m = (from + to)/2;
        int pivot = a[m];
        if (position < pivot) {
           return getIndex(from, m, position);
        }
        else {
            return getIndex(m + 1, to, position - pivot);
        }
!!!10810242.java!!!	getSize(in index : int) : int
        return getPosition(index + 1) - getPosition(index);
!!!10810370.java!!!	setSize(in index : int, in size : int) : void
        changeSize(0, a.length, index, size - getSize(index));
!!!10810498.java!!!	changeSize(in from : int, in to : int, in index : int, in delta : int) : void
        if (to <= from) {
            return;
        }
        int m = (from + to)/2;
        if (index <= m) {
            a[m] += delta;
            changeSize(from, m, index, delta);
        }
        else {
            changeSize(m + 1, to, index, delta);
        }
!!!10810626.java!!!	insertEntries(in start : int, in length : int, in value : int) : void
        int sizes[] = getSizes();
        int end = start + length;
        int n = a.length + length;
        a = new int[n];
        for (int i = 0; i < start; i++) {
            a[i] = sizes[i] ;
        }
        for (int i = start; i < end; i++) {
            a[i] = value ;
        }
        for (int i = end; i < n; i++) {
            a[i] = sizes[i-length] ;
        }
        setSizes(a);
!!!10810754.java!!!	removeEntries(in start : int, in length : int) : void
        int sizes[] = getSizes();
        int end = start + length;
        int n = a.length - length;
        a = new int[n];
        for (int i = 0; i < start; i++) {
            a[i] = sizes[i] ;
        }
        for (int i = start; i < n; i++) {
            a[i] = sizes[i+length] ;
        }
        setSizes(a);
