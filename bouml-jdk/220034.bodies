class Servant
!!!1064066.java!!!	_get_delegate() : Delegate
        if (_delegate == null) {
            throw
                new
                org.omg.CORBA.BAD_INV_ORDER
                ("The Servant has not been associated with an ORB instance");
        }
        return _delegate;
!!!1064194.java!!!	_set_delegate(inout delegate : Delegate) : void
        _delegate = delegate;
!!!1064322.java!!!	_this_object() : Object
        return _get_delegate().this_object(this);
!!!1064450.java!!!	_this_object(inout orb : ORB) : Object
        try {
            ((org.omg.CORBA_2_3.ORB)orb).set_delegate(this);
        }
        catch(ClassCastException e) {
            throw
                new
                org.omg.CORBA.BAD_PARAM
                ("POA Servant requires an instance of org.omg.CORBA_2_3.ORB");
        }
        return _this_object();
!!!1064578.java!!!	_orb() : ORB
        return _get_delegate().orb(this);
!!!1064706.java!!!	_poa() : POA
        return _get_delegate().poa(this);
!!!1064834.java!!!	_object_id() : byte
        return _get_delegate().object_id(this);
!!!1064962.java!!!	_default_POA() : POA
        return _get_delegate().default_POA(this);
!!!1065090.java!!!	_is_a(inout repository_id : String) : boolean
        return _get_delegate().is_a(this, repository_id);
!!!1065218.java!!!	_non_existent() : boolean
        return _get_delegate().non_existent(this);
!!!1065346.java!!!	_get_interface_def() : Object
        // First try to call the delegate implementation class's
        // "Object get_interface_def(..)" method (will work for ORBs
        // whose delegates implement this method).
        // Else call the delegate implementation class's
        // "InterfaceDef get_interface(..)" method using reflection
        // (will work for ORBs that were built using an older version
        // of the Delegate interface with a get_interface method
        // but not a get_interface_def method).

        org.omg.PortableServer.portable.Delegate delegate = _get_delegate();
        try {
            // If the ORB's delegate class does not implement
            // "Object get_interface_def(..)", this will throw
            // an AbstractMethodError.
            return delegate.get_interface_def(this);
        } catch( AbstractMethodError aex ) {
            // Call "InterfaceDef get_interface(..)" method using reflection.
            try {
                Class[] argc = { org.omg.PortableServer.Servant.class };
                java.lang.reflect.Method meth =
                     delegate.getClass().getMethod("get_interface", argc);
                Object[] argx = { this };
                return (org.omg.CORBA.Object)meth.invoke(delegate, argx);
            } catch( java.lang.reflect.InvocationTargetException exs ) {
                Throwable t = exs.getTargetException();
                if (t instanceof Error) {
                    throw (Error) t;
                } else if (t instanceof RuntimeException) {
                    throw (RuntimeException) t;
                } else {
                    throw new org.omg.CORBA.NO_IMPLEMENT();
                }
            } catch( RuntimeException rex ) {
                throw rex;
            } catch( Exception exr ) {
                throw new org.omg.CORBA.NO_IMPLEMENT();
            }
        }
