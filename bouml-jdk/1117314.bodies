class COWIterator
!!!9147394.java!!!	COWIterator(inout elements : Object [[]], in initialCursor : int)
            cursor = initialCursor;
            snapshot = elements;
!!!9147522.java!!!	hasNext() : boolean
            return cursor < snapshot.length;
!!!9147650.java!!!	hasPrevious() : boolean
            return cursor > 0;
!!!9147778.java!!!	next() : E
            if (! hasNext())
                throw new NoSuchElementException();
            return (E) snapshot[cursor++];
!!!9147906.java!!!	previous() : E
            if (! hasPrevious())
                throw new NoSuchElementException();
            return (E) snapshot[--cursor];
!!!9148034.java!!!	nextIndex() : int
            return cursor;
!!!9148162.java!!!	previousIndex() : int
            return cursor-1;
!!!9148290.java!!!	remove() : void
            throw new UnsupportedOperationException();
!!!9148418.java!!!	set(inout e : E) : void
            throw new UnsupportedOperationException();
!!!9148546.java!!!	add(inout e : E) : void
            throw new UnsupportedOperationException();
!!!9148674.java!!!	forEachRemaining(inout action : Consumer) : void
            Objects.requireNonNull(action);
            Object[] elements = snapshot;
            final int size = elements.length;
            for (int i = cursor; i < size; i++) {
                @SuppressWarnings("unchecked") E e = (E) elements[i];
                action.accept(e);
            }
            cursor = size;
