class DirectoryComboBoxModel
!!!2058626.java!!!	DirectoryComboBoxModel()
            // Add the current directory to the model, and make it the
            // selectedDirectory
            File dir = getFileChooser().getCurrentDirectory();
            if (dir != null) {
                addItem(dir);
            }
!!!2058754.java!!!	addItem(inout directory : File) : void

            if (directory == null) {
                return;
            }

            int oldSize = directories.size();
            directories.clear();
            if (oldSize > 0) {
                fireIntervalRemoved(this, 0, oldSize);
            }

            // Get the canonical (full) path. This has the side
            // benefit of removing extraneous chars from the path,
            // for example /foo/bar/ becomes /foo/bar
            File canonical;
            try {
                canonical = fsv.createFileObject(ShellFolder.getNormalizedFile(directory).getPath());
            } catch (IOException e) {
                // Maybe drive is not ready. Can't abort here.
                canonical = directory;
            }

            // create File instances of each directory leading up to the top
            File f = canonical;
            do {
                directories.add(f);
            } while ((f = f.getParentFile()) != null);
            int newSize = directories.size();
            if (newSize > 0) {
                fireIntervalAdded(this, 0, newSize);
            }
            setSelectedItem(canonical);
!!!2058882.java!!!	setSelectedItem(inout selectedDirectory : Object) : void
            this.selectedDirectory = (File)selectedDirectory;
            fireContentsChanged(this, -1, -1);
!!!2059010.java!!!	getSelectedItem() : Object
            return selectedDirectory;
!!!2059138.java!!!	getSize() : int
            return directories.size();
!!!2059266.java!!!	getElementAt(in index : int) : Object
            return directories.elementAt(index);
