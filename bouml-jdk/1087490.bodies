class Builder
!!!8853378.java!!!	Builder()
            localeBuilder = new InternalLocaleBuilder();
!!!8853506.java!!!	setLocale(inout locale : Locale) : Locale::Builder
            try {
                localeBuilder.setLocale(locale.baseLocale, locale.localeExtensions);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8853634.java!!!	setLanguageTag(inout languageTag : String) : Locale::Builder
            ParseStatus sts = new ParseStatus();
            LanguageTag tag = LanguageTag.parse(languageTag, sts);
            if (sts.isError()) {
                throw new IllformedLocaleException(sts.getErrorMessage(), sts.getErrorIndex());
            }
            localeBuilder.setLanguageTag(tag);
            return this;
!!!8853762.java!!!	setLanguage(inout language : String) : Locale::Builder
            try {
                localeBuilder.setLanguage(language);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8853890.java!!!	setScript(inout script : String) : Locale::Builder
            try {
                localeBuilder.setScript(script);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854018.java!!!	setRegion(inout region : String) : Locale::Builder
            try {
                localeBuilder.setRegion(region);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854146.java!!!	setVariant(inout variant : String) : Locale::Builder
            try {
                localeBuilder.setVariant(variant);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854274.java!!!	setExtension(in key : char, inout value : String) : Locale::Builder
            try {
                localeBuilder.setExtension(key, value);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854402.java!!!	setUnicodeLocaleKeyword(inout key : String, inout type : String) : Locale::Builder
            try {
                localeBuilder.setUnicodeLocaleKeyword(key, type);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854530.java!!!	addUnicodeLocaleAttribute(inout attribute : String) : Locale::Builder
            try {
                localeBuilder.addUnicodeLocaleAttribute(attribute);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854658.java!!!	removeUnicodeLocaleAttribute(inout attribute : String) : Locale::Builder
            try {
                localeBuilder.removeUnicodeLocaleAttribute(attribute);
            } catch (LocaleSyntaxException e) {
                throw new IllformedLocaleException(e.getMessage(), e.getErrorIndex());
            }
            return this;
!!!8854786.java!!!	clear() : Locale::Builder
            localeBuilder.clear();
            return this;
!!!8854914.java!!!	clearExtensions() : Locale::Builder
            localeBuilder.clearExtensions();
            return this;
!!!8855042.java!!!	build() : Locale
            BaseLocale baseloc = localeBuilder.getBaseLocale();
            LocaleExtensions extensions = localeBuilder.getLocaleExtensions();
            if (extensions == null && baseloc.getVariant().length() > 0) {
                extensions = getCompatibilityExtensions(baseloc.getLanguage(), baseloc.getScript(),
                        baseloc.getRegion(), baseloc.getVariant());
            }
            return Locale.getInstance(baseloc, extensions);
