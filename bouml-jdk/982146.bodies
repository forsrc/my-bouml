class HeapCharBufferR
!!!7742978.java!!!	HeapCharBufferR(in cap : int, in lim : int)
            // package-private







        super(cap, lim);
        this.isReadOnly = true;

!!!7743106.java!!!	HeapCharBufferR(inout buf : char [[]], in off : int, in len : int)
 // package-private







        super(buf, off, len);
        this.isReadOnly = true;

!!!7743234.java!!!	HeapCharBufferR(inout buf : char [[]], in mark : int, in pos : int, in lim : int, in cap : int, in off : int)







        super(buf, mark, pos, lim, cap, off);
        this.isReadOnly = true;

!!!7743362.java!!!	slice() : CharBuffer
        return new HeapCharBufferR(hb,
                                        -1,
                                        0,
                                        this.remaining(),
                                        this.remaining(),
                                        this.position() + offset);
!!!7743490.java!!!	duplicate() : CharBuffer
        return new HeapCharBufferR(hb,
                                        this.markValue(),
                                        this.position(),
                                        this.limit(),
                                        this.capacity(),
                                        offset);
!!!7743618.java!!!	asReadOnlyBuffer() : CharBuffer








        return duplicate();

!!!7743746.java!!!	isReadOnly() : boolean
        return true;
!!!7743874.java!!!	put(in x : char) : CharBuffer




        throw new ReadOnlyBufferException();

!!!7744002.java!!!	put(in i : int, in x : char) : CharBuffer




        throw new ReadOnlyBufferException();

!!!7744130.java!!!	put(inout src : char [[]], in offset : int, in length : int) : CharBuffer








        throw new ReadOnlyBufferException();

!!!7744258.java!!!	put(inout src : CharBuffer) : CharBuffer























        throw new ReadOnlyBufferException();

!!!7744386.java!!!	compact() : CharBuffer







        throw new ReadOnlyBufferException();

!!!7744514.java!!!	toString(in start : int, in end : int) : String
               // package-private
        try {
            return new String(hb, start + offset, end - start);
        } catch (StringIndexOutOfBoundsException x) {
            throw new IndexOutOfBoundsException();
        }
!!!7744642.java!!!	subSequence(in start : int, in end : int) : CharBuffer
        if ((start < 0)
            || (end > length())
            || (start > end))
            throw new IndexOutOfBoundsException();
        int pos = position();
        return new HeapCharBufferR(hb,
                                      -1,
                                      pos + start,
                                      pos + end,
                                      capacity(),
                                      offset);
!!!7744770.java!!!	order() : ByteOrder
        return ByteOrder.nativeOrder();
