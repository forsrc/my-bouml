class StackTraceElement
!!!7091202.java!!!	StackTraceElement(inout declaringClass : String, inout methodName : String, inout fileName : String, in lineNumber : int)
        this.declaringClass = Objects.requireNonNull(declaringClass, "Declaring class is null");
        this.methodName     = Objects.requireNonNull(methodName, "Method name is null");
        this.fileName       = fileName;
        this.lineNumber     = lineNumber;
!!!7091330.java!!!	getFileName() : String
        return fileName;
!!!7091458.java!!!	getLineNumber() : int
        return lineNumber;
!!!7091586.java!!!	getClassName() : String
        return declaringClass;
!!!7091714.java!!!	getMethodName() : String
        return methodName;
!!!7091842.java!!!	isNativeMethod() : boolean
        return lineNumber == -2;
!!!7091970.java!!!	toString() : String
        return getClassName() + "." + methodName +
            (isNativeMethod() ? "(Native Method)" :
             (fileName != null && lineNumber >= 0 ?
              "(" + fileName + ":" + lineNumber + ")" :
              (fileName != null ?  "("+fileName+")" : "(Unknown Source)")));
!!!7092098.java!!!	equals(inout obj : Object) : boolean
        if (obj==this)
            return true;
        if (!(obj instanceof StackTraceElement))
            return false;
        StackTraceElement e = (StackTraceElement)obj;
        return e.declaringClass.equals(declaringClass) &&
            e.lineNumber == lineNumber &&
            Objects.equals(methodName, e.methodName) &&
            Objects.equals(fileName, e.fileName);
!!!7092226.java!!!	hashCode() : int
        int result = 31*declaringClass.hashCode() + methodName.hashCode();
        result = 31*result + Objects.hashCode(fileName);
        result = 31*result + lineNumber;
        return result;
