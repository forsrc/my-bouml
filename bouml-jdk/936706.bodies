class ProcessEnvironment
!!!7065730.java!!!	getenv(inout name : String) : String
        return theUnmodifiableEnvironment.get(name);
!!!7065858.java!!!	getenv() : Map
        return theUnmodifiableEnvironment;
!!!7065986.java!!!	environment() : Map
        return new StringEnvironment
            ((Map<Variable,Value>)(theEnvironment.clone()));
!!!7066114.java!!!	emptyEnvironment(in capacity : int) : Map
        return new StringEnvironment(new HashMap<Variable,Value>(capacity));
!!!7066498.java!!!	validateVariable(inout name : String) : void
        if (name.indexOf('=')      != -1 ||
            name.indexOf('\u0000') != -1)
            throw new IllegalArgumentException
                ("Invalid environment variable name: \"" + name + "\"");
!!!7066626.java!!!	validateValue(inout value : String) : void
        if (value.indexOf('\u0000') != -1)
            throw new IllegalArgumentException
                ("Invalid environment variable value: \"" + value + "\"");
!!!7070978.java!!!	toEnvironmentBlock(inout map : Map, inout envc : int [[]]) : byte
        return map == null ? null :
            ((StringEnvironment)map).toEnvironmentBlock(envc);
!!!7075330.java!!!	arrayCompare(inout x : byte [[]], inout y : byte [[]]) : int
        int min = x.length < y.length ? x.length : y.length;
        for (int i = 0; i < min; i++)
            if (x[i] != y[i])
                return x[i] - y[i];
        return x.length - y.length;
!!!7075458.java!!!	arrayEquals(inout x : byte [[]], inout y : byte [[]]) : boolean
        if (x.length != y.length)
            return false;
        for (int i = 0; i < x.length; i++)
            if (x[i] != y[i])
                return false;
        return true;
!!!7075586.java!!!	arrayHash(inout x : byte [[]]) : int
        int hash = 0;
        for (int i = 0; i < x.length; i++)
            hash = 31 * hash + x[i];
        return hash;
