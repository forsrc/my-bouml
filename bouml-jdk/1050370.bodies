class TickClock
!!!8321154.java!!!	TickClock(inout baseClock : Clock, in tickNanos : long)
            this.baseClock = baseClock;
            this.tickNanos = tickNanos;
!!!8321282.java!!!	getZone() : ZoneId
            return baseClock.getZone();
!!!8321410.java!!!	withZone(inout zone : ZoneId) : Clock
            if (zone.equals(baseClock.getZone())) {  // intentional NPE
                return this;
            }
            return new TickClock(baseClock.withZone(zone), tickNanos);
!!!8321538.java!!!	millis() : long
            long millis = baseClock.millis();
            return millis - Math.floorMod(millis, tickNanos / 1000_000L);
!!!8321666.java!!!	instant() : Instant
            if ((tickNanos % 1000_000) == 0) {
                long millis = baseClock.millis();
                return Instant.ofEpochMilli(millis - Math.floorMod(millis, tickNanos / 1000_000L));
            }
            Instant instant = baseClock.instant();
            long nanos = instant.getNano();
            long adjust = Math.floorMod(nanos, tickNanos);
            return instant.minusNanos(adjust);
!!!8321794.java!!!	equals(inout obj : Object) : boolean
            if (obj instanceof TickClock) {
                TickClock other = (TickClock) obj;
                return baseClock.equals(other.baseClock) && tickNanos == other.tickNanos;
            }
            return false;
!!!8321922.java!!!	hashCode() : int
            return baseClock.hashCode() ^ ((int) (tickNanos ^ (tickNanos >>> 32)));
!!!8322050.java!!!	toString() : String
            return "TickClock[" + baseClock + "," + Duration.ofNanos(tickNanos) + "]";
