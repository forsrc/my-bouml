class MatchOp
!!!9542274.java!!!	MatchOp(inout shape : StreamShape, inout matchKind : MatchOps::MatchKind, inout sinkSupplier : Supplier)
            this.inputShape = shape;
            this.matchKind = matchKind;
            this.sinkSupplier = sinkSupplier;
!!!9542402.java!!!	getOpFlags() : int
            return StreamOpFlag.IS_SHORT_CIRCUIT | StreamOpFlag.NOT_ORDERED;
!!!9542530.java!!!	inputShape() : StreamShape
            return inputShape;
!!!9542658.java!!!	evaluateSequential(inout helper : PipelineHelper, inout spliterator : Spliterator) : Boolean
            return helper.wrapAndCopyInto(sinkSupplier.get(), spliterator).getAndClearState();
!!!9542786.java!!!	evaluateParallel(inout helper : PipelineHelper, inout spliterator : Spliterator) : Boolean
            // Approach for parallel implementation:
            // - Decompose as per usual
            // - run match on leaf chunks, call result "b"
            // - if b == matchKind.shortCircuitOn, complete early and return b
            // - else if we complete normally, return !shortCircuitOn

            return new MatchTask<>(this, helper, spliterator).invoke();
