class JMXConnectorServer
!!!9944706.java!!!	JMXConnectorServer()
        this(null);
!!!9944834.java!!!	JMXConnectorServer(inout mbeanServer : MBeanServer)
        this.mbeanServer = mbeanServer;
!!!9944962.java!!!	getMBeanServer() : MBeanServer
        return mbeanServer;
!!!9945090.java!!!	setMBeanServerForwarder(inout mbsf : MBeanServerForwarder) : void
        if (mbsf == null)
            throw new IllegalArgumentException("Invalid null argument: mbsf");

        if (mbeanServer !=  null) mbsf.setMBeanServer(mbeanServer);
        mbeanServer = mbsf;
!!!9945218.java!!!	getConnectionIds() : String
        synchronized (connectionIds) {
            return connectionIds.toArray(new String[connectionIds.size()]);
        }
!!!9945346.java!!!	toJMXConnector(inout env : Map) : JMXConnector
        if (!isActive()) throw new
            IllegalStateException("Connector is not active");
        JMXServiceURL addr = getAddress();
        return JMXConnectorFactory.newJMXConnector(addr, env);
!!!9945474.java!!!	getNotificationInfo() : MBeanNotificationInfo
        final String[] types = {
            JMXConnectionNotification.OPENED,
            JMXConnectionNotification.CLOSED,
            JMXConnectionNotification.FAILED,
        };
        final String className = JMXConnectionNotification.class.getName();
        final String description =
            "A client connection has been opened or closed";
        return new MBeanNotificationInfo[] {
            new MBeanNotificationInfo(types, className, description),
        };
!!!9945602.java!!!	connectionOpened(inout connectionId : String, inout message : String, inout userData : Object) : void

        if (connectionId == null)
            throw new NullPointerException("Illegal null argument");

        synchronized (connectionIds) {
            connectionIds.add(connectionId);
        }

        sendNotification(JMXConnectionNotification.OPENED, connectionId,
                         message, userData);
!!!9945730.java!!!	connectionClosed(inout connectionId : String, inout message : String, inout userData : Object) : void

        if (connectionId == null)
            throw new NullPointerException("Illegal null argument");

        synchronized (connectionIds) {
            connectionIds.remove(connectionId);
        }

        sendNotification(JMXConnectionNotification.CLOSED, connectionId,
                         message, userData);
!!!9945858.java!!!	connectionFailed(inout connectionId : String, inout message : String, inout userData : Object) : void

        if (connectionId == null)
            throw new NullPointerException("Illegal null argument");

        synchronized (connectionIds) {
            connectionIds.remove(connectionId);
        }

        sendNotification(JMXConnectionNotification.FAILED, connectionId,
                         message, userData);
!!!9945986.java!!!	sendNotification(inout type : String, inout connectionId : String, inout message : String, inout userData : Object) : void
        Notification notif =
            new JMXConnectionNotification(type,
                                          getNotificationSource(),
                                          connectionId,
                                          nextSequenceNumber(),
                                          message,
                                          userData);
        sendNotification(notif);
!!!9946114.java!!!	getNotificationSource() : Object
        if (myName != null)
            return myName;
        else
            return this;
!!!9946242.java!!!	nextSequenceNumber() : long
        synchronized (sequenceNumberLock) {
            return sequenceNumber++;
        }
!!!9946370.java!!!	preRegister(inout mbs : MBeanServer, inout name : ObjectName) : ObjectName
        if (mbs == null || name == null)
            throw new NullPointerException("Null MBeanServer or ObjectName");
        if (mbeanServer == null) {
            mbeanServer = mbs;
            myName = name;
        }
        return name;
!!!9946498.java!!!	postRegister(inout registrationDone : Boolean) : void
        // do nothing
!!!9946626.java!!!	preDeregister() : void
        if (myName != null && isActive()) {
            stop();
            myName = null; // just in case stop is buggy and doesn't stop
        }
!!!9946754.java!!!	postDeregister() : void
        myName = null;
