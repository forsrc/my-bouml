class MBeanNotificationInfo
!!!9767682.java!!!	MBeanNotificationInfo(inout notifTypes : String [[]], inout name : String, inout description : String)
        this(notifTypes, name, description, null);
!!!9767810.java!!!	MBeanNotificationInfo(inout notifTypes : String [[]], inout name : String, inout description : String, inout descriptor : Descriptor)
        super(name, description, descriptor);

        /* We do not validate the notifTypes, since the spec just says
           they are dot-separated, not that they must look like Java
           classes.  E.g. the spec doesn't forbid "sun.prob.25" as a
           notifType, though it doesn't explicitly allow it
           either.  */

        this.types = (notifTypes != null && notifTypes.length > 0) ?
                        notifTypes.clone() : NO_TYPES;
        this.arrayGettersSafe =
            MBeanInfo.arrayGettersSafe(this.getClass(),
                                       MBeanNotificationInfo.class);
!!!9767938.java!!!	clone() : Object
         try {
             return super.clone() ;
         } catch (CloneNotSupportedException e) {
             // should not happen as this class is cloneable
             return null;
         }
!!!9768066.java!!!	getNotifTypes() : String
        if (types.length == 0)
            return NO_TYPES;
        else
            return types.clone();
!!!9768194.java!!!	fastGetNotifTypes() : String
        if (arrayGettersSafe)
            return types;
        else
            return getNotifTypes();
!!!9768322.java!!!	toString() : String
        return
            getClass().getName() + "[" +
            "description=" + getDescription() + ", " +
            "name=" + getName() + ", " +
            "notifTypes=" + Arrays.asList(fastGetNotifTypes()) + ", " +
            "descriptor=" + getDescriptor() +
            "]";
!!!9768450.java!!!	equals(inout o : Object) : boolean
        if (o == this)
            return true;
        if (!(o instanceof MBeanNotificationInfo))
            return false;
        MBeanNotificationInfo p = (MBeanNotificationInfo) o;
        return (Objects.equals(p.getName(), getName()) &&
                Objects.equals(p.getDescription(), getDescription()) &&
                Objects.equals(p.getDescriptor(), getDescriptor()) &&
                Arrays.equals(p.fastGetNotifTypes(), fastGetNotifTypes()));
!!!9768578.java!!!	hashCode() : int
        int hash = getName().hashCode();
        for (int i = 0; i < types.length; i++)
            hash ^= types[i].hashCode();
        return hash;
!!!9768706.java!!!	readObject(inout ois : ObjectInputStream) : void
        ObjectInputStream.GetField gf = ois.readFields();
        String[] t = (String[])gf.get("types", null);

        types = (t != null && t.length != 0) ? t.clone() : NO_TYPES;
