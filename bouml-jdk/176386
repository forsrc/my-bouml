format 222
"utils" // jdk1.8::com::sun::org::apache::xml::internal::serializer::utils
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xml/internal/serializer/utils/"
  java_package "com.sun.org.apache.xml.internal.serializer.utils"
  classview 169730 "utils"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 788226 "StringToIntTable"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A very simple lookup table that stores a list of strings, the even
number strings being keys, and the odd number strings being values.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

This class is not a public API, it is only public so it can be used
in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      attribute 1224578 "INVALID_KEY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1224706 "m_blocksize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Block size to allocate          
"
      end

      classrelation 2546178 // m_map (<unidirectional association>)
	relation 2546178 --->
	  a role_name "m_map" multiplicity "[]" private
	    comment " Array of strings this table points to. Associated with ints
in m_values         
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2546178 // m_map (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1224834 "m_values"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of ints this table points. Associated with strings from
m_map.         
"
      end

      attribute 1224962 "m_firstFree"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Number of ints in the table          
"
      end

      attribute 1225090 "m_mapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of this table         
"
      end

      operation 5646210 "StringToIntTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5646338 "StringToIntTable"
	public explicit_return_type ""
	nparams 1
	  param in name "blocksize" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StringToIntTable, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5646466 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return the length of the list
"
      end

      operation 5646594 "put"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append a string onto the vector.

@param key String to append
@param value The int value of the string
"
      end

      operation 5646722 "get"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look for

@return The String's int value

"
      end

      operation 5646850 "getIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string. Ignore case.

@param key String to look for

@return The string's int value
"
      end

      operation 5646978 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if the table contains the given string.

@param key String to look for

@return True if the string is in the table
"
      end

      operation 5647106 "keys"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return array of keys in the table.

@return Array of strings
"
      end
    end

    class 792194 "DOM2Helper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class provides a DOM level 2 \"helper\", which provides services currently
not provided be the DOM standard.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

The differences from the original class are:
it doesn't extend DOMHelper, not depricated,
dropped method isNodeAfter(Node node1, Node node2)
dropped method parse(InputSource)
dropped method supportSAX()
dropped method setDocument(doc)
dropped method checkNode(Node)
dropped method getDocument()
dropped method getElementByID(String id, Document doc)
dropped method getParentOfNode(Node node)
dropped field Document m_doc;
made class non-public

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      operation 5643522 "DOM2Helper"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an instance.
"
      end

      operation 5643650 "getLocalNameOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node, as defined by the
XML Namespaces specification. This is prepared to handle documents
built using DOM Level 1 methods by falling back upon explicitly
parsing the node name.

@param n Node to be examined

@return String containing the local name, or null if the node
was not assigned a Namespace.
"
      end

      operation 5643778 "getLocalNameOfNodeFallback"
	private return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the local name of the given node. If the node's name begins
with a namespace prefix, this is the part after the colon; otherwise
it's the full node name.

This method is copied from com.sun.org.apache.xml.internal.utils.DOMHelper

@param n the node to be examined.

@return String containing the Local Name
"
      end

      operation 5643906 "getNamespaceOfNode"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Namespace Name (Namespace URI) for the given node.
In a Level 2 DOM, you can ask the node itself. Note, however, that
doing so conflicts with our decision in getLocalNameOfNode not
to trust the that the DOM was indeed created using the Level 2
methods. If Level 1 methods were used, these two functions will
disagree with each other.
<p>
TODO: Reconcile with getLocalNameOfNode.

@param n Node to be examined

@return String containing the Namespace URI bound to this DOM node
at the time the Node was created.
"
      end
    end

    class 792834 "AttList"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Wraps a DOM attribute list in a SAX Attributes.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.
A minor changes from that package are:
DOMHelper reference changed to DOM2Helper, class is not \"public\"

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2539010 // <realization>
	relation 2539010 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 2539010 // <realization>
	  b parent class_ref 593410 // Attributes
      end

      classrelation 2539138 // m_attrs (<unidirectional association>)
	relation 2539138 --->
	  a role_name "m_attrs" package
	    comment " List of attribute nodes          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539138 // m_attrs (<unidirectional association>)
	  b parent class_ref 327042 // NamedNodeMap
      end

      attribute 1224066 "m_lastIndex"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Index of last attribute node          
"
      end

      classrelation 2539266 // m_dh (<unidirectional association>)
	relation 2539266 --->
	  a role_name "m_dh" package
	    comment " ARGHH!!  JAXP Uses Xerces without setting the namespace processing to ON!
 DOM2Helper m_dh = new DOM2Helper();
 Local reference to DOMHelper          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539266 // m_dh (<unidirectional association>)
	  b parent class_ref 792194 // DOM2Helper
      end

      operation 5640194 "AttList"
	public explicit_return_type ""
	nparams 2
	  param inout name "attrs" type class_ref 327042 // NamedNodeMap
	  param inout name "dh" type class_ref 792194 // DOM2Helper
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  /**
   * Constructor AttList
   *
   *
   * @param attrs List of attributes this will contain
   */
  public AttList(NamedNodeMap attrs)
  {

    m_attrs = attrs;
    m_lastIndex = m_attrs.getLength() - 1;
    m_dh = new DOM2Helper();
  }

Constructor AttList


@param attrs List of attributes this will contain
@param dh DOMHelper
"
      end

      operation 5640322 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of attribute nodes in the list


@return number of attribute nodes
"
      end

      operation 5640450 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's Namespace URI by index.

@param index The attribute index (zero-based).
@return The Namespace URI, or the empty string if none
        is available, or null if the index is out of
        range.
"
      end

      operation 5640578 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's local name by index.

@param index The attribute index (zero-based).
@return The local name, or the empty string if Namespace
        processing is not being performed, or null
        if the index is out of range.
"
      end

      operation 5640706 "getQName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's qualified name by index.


@param i The attribute index (zero-based).

@return The attribute's qualified name
"
      end

      operation 5640834 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node type by index


@param i The attribute index (zero-based)

@return the attribute's node type
"
      end

      operation 5640962 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node value by index


@param i The attribute index (zero-based)

@return the attribute's node value
"
      end

      operation 5641090 "getType"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the attribute's node type by name


@param name Attribute name

@return the attribute's node type
"
      end

      operation 5641218 "getType"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by Namespace name.

@param uri The Namespace URI, or the empty String if the
       name has no Namespace URI.
@param localName The local name of the attribute.
@return The attribute type as a string, or null if the
        attribute is not in the list or if Namespace
        processing is not being performed.
"
      end

      operation 5641346 "getValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by name.


@param name The attribute node's name

@return The attribute node's value
"
      end

      operation 5641474 "getValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by Namespace name.

@param uri The Namespace URI, or the empty String if the
       name has no Namespace URI.
@param localName The local name of the attribute.
@return The attribute value as a string, or null if the
        attribute is not in the list.
"
      end

      operation 5641602 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "localPart" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by Namespace name.

@param uri The Namespace URI, or the empty string if
       the name has no Namespace URI.
@param localPart The attribute's local name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end

      operation 5641730 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the index of an attribute by raw XML 1.0 name.

@param qName The qualified (prefixed) name.
@return The index of the attribute, or -1 if it does not
        appear in the list.
"
      end
    end

    class 792962 "BoolStack"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple stack for boolean values.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.
A minor changes from that package are:
doesn't implement Clonable

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      attribute 1224194 "m_values"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of boolean values          
"
      end

      attribute 1224322 "m_allocatedSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array size allocated           
"
      end

      attribute 1224450 "m_index"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Index into the array of booleans          
"
      end

      operation 5641858 "BoolStack"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  Note that the default
block size is very small, for small lists.
"
      end

      operation 5641986 "BoolStack"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a IntVector, using the given block size.

@param size array size to allocate
"
      end

      operation 5642114 "size"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of the list.

@return Current length of the list
"
      end

      operation 5642242 "clear"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the stack.

"
      end

      operation 5642370 "push"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "val" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes an item onto the top of this stack.


@param val the boolean to be pushed onto this stack.
@return  the <code>item</code> argument.
"
      end

      operation 5642498 "pop"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns that
object as the value of this function.

@return     The object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5642626 "popAndTop"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object at the top of this stack and returns the
next object at the top as the value of this function.


@return Next object to the top or false if none there
"
      end

      operation 5642754 "setTop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the item at the top of this stack


@param b Object to set at the top of this stack
"
      end

      operation 5642882 "peek"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.

@return     the object at the top of this stack.
@throws  EmptyStackException  if this stack is empty.
"
      end

      operation 5643010 "peekOrFalse"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns false.

@return     the object at the top of this stack.
"
      end

      operation 5643138 "peekOrTrue"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks at the object at the top of this stack without removing it
from the stack.  If the stack is empty, it returns true.

@return     the object at the top of this stack.
"
      end

      operation 5643266 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests if this stack is empty.

@return  <code>true</code> if this stack is empty;
         <code>false</code> otherwise.
"
      end

      operation 5643394 "grow"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grows the size of the stack

"
      end
    end

    class 793090 "Messages"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A utility class for issuing error messages.

A user of this class normally would create a singleton
instance of this class, passing the name
of the message class on the constructor. For example:
<CODE>
static Messages x = new Messages(\"org.package.MyMessages\");
</CODE>
Later the message is typically generated this way if there are no
substitution arguments:
<CODE>
String msg = x.createMessage(org.package.MyMessages.KEY_ONE, null);
</CODE>
If there are arguments substitutions then something like this:
<CODE>
String filename = ...;
String directory = ...;
String msg = x.createMessage(org.package.MyMessages.KEY_TWO,
  new Object[] {filename, directory) );
</CODE>

The constructor of an instance of this class must be given
the class name of a class that extends java.util.ListResourceBundle
(\"org.package.MyMessages\" in the example above).
The name should not have any language suffix
which will be added automatically by this utility class.

The message class (\"org.package.MyMessages\")
must define the abstract method getContents() that is
declared in its base class, for example:
<CODE>
public Object[][] getContents() {return contents;}
</CODE>

It is suggested that the message class expose its
message keys like this:
<CODE>
  public static final String KEY_ONE = \"KEY1\";
  public static final String KEY_TWO = \"KEY2\";
  . . .
</CODE>
and used through their names (KEY_ONE ...) rather than
their values (\"KEY1\" ...).

The field contents (returned by getContents()
should be initialized something like this:
<CODE>
public static final Object[][] contents = {
{ KEY_ONE, \"Something has gone wrong!\" },
{ KEY_TWO, \"The file ''{0}'' does not exist in directory ''{1}''.\" },
. . .
{ KEY_N, \"Message N\" }  }
</CODE>

Where that section of code with the KEY to Message mappings
(where the message classes 'contents' field is initialized)
can have the Message strings translated in an alternate language
in a errorResourceClass with a language suffix.


This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

 @xsl.usage internal
"
      classrelation 2539394 // m_locale (<unidirectional association>)
	relation 2539394 --->
	  a role_name "m_locale" init_value " Locale.getDefault()" const_relation private
	    comment " The local object to use.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539394 // m_locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 2539522 // m_resourceBundle (<unidirectional association>)
	relation 2539522 --->
	  a role_name "m_resourceBundle" private
	    comment " The language specific resource object for messages.  
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539522 // m_resourceBundle (<unidirectional association>)
	  b parent class_ref 318722 // ListResourceBundle
      end

      classrelation 2539650 // m_resourceBundleName (<unidirectional association>)
	relation 2539650 --->
	  a role_name "m_resourceBundleName" private
	    comment " The class name of the error message string table with no language suffix. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539650 // m_resourceBundleName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5644034 "Messages"
	package explicit_return_type ""
	nparams 1
	  param inout name "resourceBundle" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor.
@param resourceBundle the class name of the ListResourceBundle
that the instance of this class is associated with and will use when
creating messages.
The class name is without a language suffix. If the value passed
is null then loadResourceBundle(errorResourceClass) needs to be called
explicitly before any messages are created.

@xsl.usage internal
"
      end

      operation 5644162 "getLocale"
	private return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the Locale object that is being used.

@return non-null reference to Locale object.
@xsl.usage internal
"
      end

      operation 5644290 "createMessage"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "msgKey" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a message from the specified key and replacement
arguments, localized to the given locale.

@param msgKey  The key for the message text.
@param args    The arguments to be used as replacement text
in the message created.

@return The formatted message string.
@xsl.usage internal
"
      end

      operation 5644418 "createMsg"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "fResourceBundle" type class_ref 318722 // ListResourceBundle
	  param inout name "msgKey" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a message from the specified key and replacement
arguments, localized to the given locale.

@param errorCode The key for the message text.

@param fResourceBundle The resource bundle to use.
@param msgKey  The message key to use.
@param args      The arguments to be used as replacement text
                 in the message created.

@return The formatted message string.
@xsl.usage internal
"
      end
    end

    class 793218 "MsgKey"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is not a public API,
It is used internally by serializer and is public,
in the Java sense, only because its use crosses
package boundaries.
<p>
This class holds only the message keys used
when generating messages.
"
      classrelation 2539778 // BAD_MSGKEY (<unidirectional association>)
	relation 2539778 --->
	  a role_name "BAD_MSGKEY" init_value " \"BAD_MSGKEY\"" class_relation const_relation public
	    comment " An internal error with the messages,
this is the message to use if the message key can't be found

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539778 // BAD_MSGKEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2539906 // BAD_MSGFORMAT (<unidirectional association>)
	relation 2539906 --->
	  a role_name "BAD_MSGFORMAT" init_value " \"BAD_MSGFORMAT\"" class_relation const_relation public
	    comment "
An internal error with the messages,
this is the message to use if the message format operation failed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2539906 // BAD_MSGFORMAT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540034 // ER_RESOURCE_COULD_NOT_FIND (<unidirectional association>)
	relation 2540034 --->
	  a role_name "ER_RESOURCE_COULD_NOT_FIND" init_value "
        \"ER_RESOURCE_COULD_NOT_FIND\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540034 // ER_RESOURCE_COULD_NOT_FIND (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540162 // ER_RESOURCE_COULD_NOT_LOAD (<unidirectional association>)
	relation 2540162 --->
	  a role_name "ER_RESOURCE_COULD_NOT_LOAD" init_value "
        \"ER_RESOURCE_COULD_NOT_LOAD\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540162 // ER_RESOURCE_COULD_NOT_LOAD (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540290 // ER_BUFFER_SIZE_LESSTHAN_ZERO (<unidirectional association>)
	relation 2540290 --->
	  a role_name "ER_BUFFER_SIZE_LESSTHAN_ZERO" init_value "
        \"ER_BUFFER_SIZE_LESSTHAN_ZERO\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540290 // ER_BUFFER_SIZE_LESSTHAN_ZERO (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540418 // ER_INVALID_UTF16_SURROGATE (<unidirectional association>)
	relation 2540418 --->
	  a role_name "ER_INVALID_UTF16_SURROGATE" init_value "
        \"ER_INVALID_UTF16_SURROGATE\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540418 // ER_INVALID_UTF16_SURROGATE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540546 // ER_OIERROR (<unidirectional association>)
	relation 2540546 --->
	  a role_name "ER_OIERROR" init_value " \"ER_OIERROR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540546 // ER_OIERROR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540674 // ER_NAMESPACE_PREFIX (<unidirectional association>)
	relation 2540674 --->
	  a role_name "ER_NAMESPACE_PREFIX" init_value " \"ER_NAMESPACE_PREFIX\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540674 // ER_NAMESPACE_PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540802 // ER_STRAY_ATTRIBUTE (<unidirectional association>)
	relation 2540802 --->
	  a role_name "ER_STRAY_ATTRIBUTE" init_value " \"ER_STRAY_ATTRIBUTE\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540802 // ER_STRAY_ATTRIBUTE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2540930 // ER_STRAY_NAMESPACE (<unidirectional association>)
	relation 2540930 --->
	  a role_name "ER_STRAY_NAMESPACE" init_value " \"ER_STRAY_NAMESPACE\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2540930 // ER_STRAY_NAMESPACE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541058 // ER_COULD_NOT_LOAD_RESOURCE (<unidirectional association>)
	relation 2541058 --->
	  a role_name "ER_COULD_NOT_LOAD_RESOURCE" init_value "
        \"ER_COULD_NOT_LOAD_RESOURCE\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541058 // ER_COULD_NOT_LOAD_RESOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541186 // ER_COULD_NOT_LOAD_METHOD_PROPERTY (<unidirectional association>)
	relation 2541186 --->
	  a role_name "ER_COULD_NOT_LOAD_METHOD_PROPERTY" init_value "
        \"ER_COULD_NOT_LOAD_METHOD_PROPERTY\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541186 // ER_COULD_NOT_LOAD_METHOD_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541314 // ER_SERIALIZER_NOT_CONTENTHANDLER (<unidirectional association>)
	relation 2541314 --->
	  a role_name "ER_SERIALIZER_NOT_CONTENTHANDLER" init_value "
        \"ER_SERIALIZER_NOT_CONTENTHANDLER\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541314 // ER_SERIALIZER_NOT_CONTENTHANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541442 // ER_ILLEGAL_ATTRIBUTE_POSITION (<unidirectional association>)
	relation 2541442 --->
	  a role_name "ER_ILLEGAL_ATTRIBUTE_POSITION" init_value "
        \"ER_ILLEGAL_ATTRIBUTE_POSITION\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541442 // ER_ILLEGAL_ATTRIBUTE_POSITION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541570 // ER_ILLEGAL_CHARACTER (<unidirectional association>)
	relation 2541570 --->
	  a role_name "ER_ILLEGAL_CHARACTER" init_value " \"ER_ILLEGAL_CHARACTER\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541570 // ER_ILLEGAL_CHARACTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541698 // ER_INVALID_PORT (<unidirectional association>)
	relation 2541698 --->
	  a role_name "ER_INVALID_PORT" init_value " \"ER_INVALID_PORT\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541698 // ER_INVALID_PORT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541826 // ER_PORT_WHEN_HOST_NULL (<unidirectional association>)
	relation 2541826 --->
	  a role_name "ER_PORT_WHEN_HOST_NULL" init_value "
        \"ER_PORT_WHEN_HOST_NULL\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541826 // ER_PORT_WHEN_HOST_NULL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2541954 // ER_HOST_ADDRESS_NOT_WELLFORMED (<unidirectional association>)
	relation 2541954 --->
	  a role_name "ER_HOST_ADDRESS_NOT_WELLFORMED" init_value "
        \"ER_HOST_ADDRESS_NOT_WELLFORMED\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2541954 // ER_HOST_ADDRESS_NOT_WELLFORMED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542082 // ER_SCHEME_NOT_CONFORMANT (<unidirectional association>)
	relation 2542082 --->
	  a role_name "ER_SCHEME_NOT_CONFORMANT" init_value "
        \"ER_SCHEME_NOT_CONFORMANT\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542082 // ER_SCHEME_NOT_CONFORMANT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542210 // ER_SCHEME_FROM_NULL_STRING (<unidirectional association>)
	relation 2542210 --->
	  a role_name "ER_SCHEME_FROM_NULL_STRING" init_value "
        \"ER_SCHEME_FROM_NULL_STRING\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542210 // ER_SCHEME_FROM_NULL_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542338 // ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE (<unidirectional association>)
	relation 2542338 --->
	  a role_name "ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE" init_value "
        \"ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542338 // ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542466 // ER_PATH_INVALID_CHAR (<unidirectional association>)
	relation 2542466 --->
	  a role_name "ER_PATH_INVALID_CHAR" init_value " \"ER_PATH_INVALID_CHAR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542466 // ER_PATH_INVALID_CHAR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542594 // ER_NO_SCHEME_INURI (<unidirectional association>)
	relation 2542594 --->
	  a role_name "ER_NO_SCHEME_INURI" init_value " \"ER_NO_SCHEME_INURI\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542594 // ER_NO_SCHEME_INURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542722 // ER_FRAG_INVALID_CHAR (<unidirectional association>)
	relation 2542722 --->
	  a role_name "ER_FRAG_INVALID_CHAR" init_value " \"ER_FRAG_INVALID_CHAR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542722 // ER_FRAG_INVALID_CHAR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542850 // ER_FRAG_WHEN_PATH_NULL (<unidirectional association>)
	relation 2542850 --->
	  a role_name "ER_FRAG_WHEN_PATH_NULL" init_value "
        \"ER_FRAG_WHEN_PATH_NULL\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542850 // ER_FRAG_WHEN_PATH_NULL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2542978 // ER_FRAG_FOR_GENERIC_URI (<unidirectional association>)
	relation 2542978 --->
	  a role_name "ER_FRAG_FOR_GENERIC_URI" init_value "
        \"ER_FRAG_FOR_GENERIC_URI\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2542978 // ER_FRAG_FOR_GENERIC_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543106 // ER_NO_SCHEME_IN_URI (<unidirectional association>)
	relation 2543106 --->
	  a role_name "ER_NO_SCHEME_IN_URI" init_value " \"ER_NO_SCHEME_IN_URI\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543106 // ER_NO_SCHEME_IN_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543234 // ER_CANNOT_INIT_URI_EMPTY_PARMS (<unidirectional association>)
	relation 2543234 --->
	  a role_name "ER_CANNOT_INIT_URI_EMPTY_PARMS" init_value "
        \"ER_CANNOT_INIT_URI_EMPTY_PARMS\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543234 // ER_CANNOT_INIT_URI_EMPTY_PARMS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543362 // ER_NO_FRAGMENT_STRING_IN_PATH (<unidirectional association>)
	relation 2543362 --->
	  a role_name "ER_NO_FRAGMENT_STRING_IN_PATH" init_value "
        \"ER_NO_FRAGMENT_STRING_IN_PATH\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543362 // ER_NO_FRAGMENT_STRING_IN_PATH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543490 // ER_NO_QUERY_STRING_IN_PATH (<unidirectional association>)
	relation 2543490 --->
	  a role_name "ER_NO_QUERY_STRING_IN_PATH" init_value "
        \"ER_NO_QUERY_STRING_IN_PATH\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543490 // ER_NO_QUERY_STRING_IN_PATH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543618 // ER_NO_PORT_IF_NO_HOST (<unidirectional association>)
	relation 2543618 --->
	  a role_name "ER_NO_PORT_IF_NO_HOST" init_value " \"ER_NO_PORT_IF_NO_HOST\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543618 // ER_NO_PORT_IF_NO_HOST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543746 // ER_NO_USERINFO_IF_NO_HOST (<unidirectional association>)
	relation 2543746 --->
	  a role_name "ER_NO_USERINFO_IF_NO_HOST" init_value "
        \"ER_NO_USERINFO_IF_NO_HOST\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543746 // ER_NO_USERINFO_IF_NO_HOST (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2543874 // ER_SCHEME_REQUIRED (<unidirectional association>)
	relation 2543874 --->
	  a role_name "ER_SCHEME_REQUIRED" init_value " \"ER_SCHEME_REQUIRED\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2543874 // ER_SCHEME_REQUIRED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2544002 // ER_XML_VERSION_NOT_SUPPORTED (<unidirectional association>)
	relation 2544002 --->
	  a role_name "ER_XML_VERSION_NOT_SUPPORTED" init_value " \"ER_XML_VERSION_NOT_SUPPORTED\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2544002 // ER_XML_VERSION_NOT_SUPPORTED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2544130 // ER_FACTORY_PROPERTY_MISSING (<unidirectional association>)
	relation 2544130 --->
	  a role_name "ER_FACTORY_PROPERTY_MISSING" init_value " \"ER_FACTORY_PROPERTY_MISSING\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2544130 // ER_FACTORY_PROPERTY_MISSING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2544258 // ER_ENCODING_NOT_SUPPORTED (<unidirectional association>)
	relation 2544258 --->
	  a role_name "ER_ENCODING_NOT_SUPPORTED" init_value " \"ER_ENCODING_NOT_SUPPORTED\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2544258 // ER_ENCODING_NOT_SUPPORTED (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 793346 "SerializerMessages"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2544386 // <generalisation>
	relation 2544386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2544386 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5644546 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 793474 "SerializerMessages_ca"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2544514 // <generalisation>
	relation 2544514 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2544514 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5644674 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 793602 "SerializerMessages_cs"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2544642 // <generalisation>
	relation 2544642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2544642 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5644802 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 793730 "SerializerMessages_de"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2544770 // <generalisation>
	relation 2544770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2544770 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5644930 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 793858 "SerializerMessages_en"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Default implementation.  This is just an empty class.
@xsl.usage internal
"
      classrelation 2544898 // <generalisation>
	relation 2544898 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2544898 // <generalisation>
	  b parent class_ref 793346 // SerializerMessages
      end
    end

    class 793986 "SerializerMessages_es"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545026 // <generalisation>
	relation 2545026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545026 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645058 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794114 "SerializerMessages_fr"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545154 // <generalisation>
	relation 2545154 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545154 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645186 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794242 "SerializerMessages_it"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545282 // <generalisation>
	relation 2545282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545282 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645314 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794370 "SerializerMessages_ja"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545410 // <generalisation>
	relation 2545410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545410 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645442 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794498 "SerializerMessages_ko"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545538 // <generalisation>
	relation 2545538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545538 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645570 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794626 "SerializerMessages_pt_BR"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545666 // <generalisation>
	relation 2545666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545666 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645698 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794754 "SerializerMessages_sv"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545794 // <generalisation>
	relation 2545794 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545794 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645826 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 794882 "SerializerMessages_zh_CN"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2545922 // <generalisation>
	relation 2545922 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2545922 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5645954 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 795010 "SerializerMessages_zh_TW"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class is a ListResourceBundle that
has the required getContents() method that returns
an array of message-key/message associations.
<p>
The message keys are defined in {@link MsgKey}. The
messages that those keys map to are defined here.
<p>
The messages in the English version are intended to be
translated.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2546050 // <generalisation>
	relation 2546050 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2546050 // <generalisation>
	  b parent class_ref 318722 // ListResourceBundle
      end

      operation 5646082 "getContents"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This file contains error and warning messages related to
Serializer Error Handling.

 General notes to translators:

 1) A stylesheet is a description of how to transform an input XML document
    into a resultant XML document (or HTML document or text).  The
    stylesheet itself is described in the form of an XML document.


 2) An element is a mark-up tag in an XML document; an attribute is a
    modifier on the tag.  For example, in <elem attr='val' attr2='val2'>
    \"elem\" is an element name, \"attr\" and \"attr2\" are attribute names with
    the values \"val\" and \"val2\", respectively.

 3) A namespace declaration is a special attribute that is used to associate
    a prefix with a URI (the namespace).  The meanings of element names and
    attribute names that use that prefix are defined with respect to that
    namespace.



 The lookup table for error messages.   "
      end
    end

    class 795138 "SystemIDResolver"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used to resolve relative URIs and SystemID
strings into absolute URIs.

<p>This is a generic utility for resolving URIs, other than the
fact that it's declared to throw TransformerException.  Please
see code comments for details on how resolution is performed.</p>

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

This class is not a public API, it is only public because it is
used in com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      operation 5647234 "getAbsoluteURIFromRelative"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "localPath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an absolute URI from a given relative URI (local path).

<p>The relative URI is a local filesystem path. The path can be
absolute or relative. If it is a relative path, it is resolved relative
to the system property \"user.dir\" if it is available; if not (i.e. in an
Applet perhaps which throws SecurityException) then we just return the
relative path. The space and backslash characters are also replaced to
generate a good absolute URI.</p>

@param localPath The relative URI to resolve

@return Resolved absolute URI
"
      end

      operation 5647362 "getAbsolutePathFromRelativePath"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "relativePath" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an absolute path from a relative path.

@param relativePath A relative path
@return The absolute path
"
      end

      operation 5647490 "isAbsoluteURI"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the systemId denotes an absolute URI .

@param systemId The systemId string
@return true if the systemId is an an absolute URI
"
      end

      operation 5647618 "isAbsolutePath"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the local path is an absolute path.

@param systemId The path string
@return true if the path is absolute
"
      end

      operation 5647746 "isWindowsAbsolutePath"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the local path is a Windows absolute path.

@param systemId The path string
@return true if the path is a Windows absolute path
"
      end

      operation 5647874 "replaceChars"
	class_operation private return_type class_ref 128130 // String
	nparams 1
	  param inout name "str" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace spaces with \"%20\" and backslashes with forward slashes in
the input string to generate a well-formed URI string.

@param str The input string
@return The string after conversion
"
      end

      operation 5648002 "getAbsoluteURI"
	class_operation public return_type class_ref 128130 // String
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a SystemID string and try to turn it into a good absolute URI.

@param systemId A URI string, which may be absolute or relative.

@return The resolved absolute URI
"
      end

      operation 5648130 "getAbsoluteURI"
	class_operation public return_type class_ref 128130 // String
	nparams 2
	  param inout name "urlString" type class_ref 128130 // String
	  param inout name "base" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a SystemID string and try to turn it into a good absolute URI.

@param urlString SystemID string
@param base The URI string used as the base for resolving the systemID

@return The resolved absolute URI
@throws TransformerException thrown if the string can't be turned into a URI.
"
      end
    end

    class 795266 "URI"
      visibility package 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class to represent a Uniform Resource Identifier (URI). This class
is designed to handle the parsing of URIs and provide access to
the various components (scheme, host, port, userinfo, path, query
string and fragment) that may constitute a URI.
<p>
Parsing of a URI specification is done according to the URI
syntax described in RFC 2396
<http://www.ietf.org/rfc/rfc2396.txt?number=2396>. Every URI consists
of a scheme, followed by a colon (':'), followed by a scheme-specific
part. For URIs that follow the \"generic URI\" syntax, the scheme-
specific part begins with two slashes (\"//\") and may be followed
by an authority segment (comprised of user information, host, and
port), path segment, query segment and fragment. Note that RFC 2396
no longer specifies the use of the parameters segment and excludes
the \"user:password\" syntax as part of the authority segment. If
\"user:password\" appears in a URI, the entire user/password string
is stored as userinfo.
<p>
For URIs that do not follow the \"generic URI\" syntax (e.g. mailto),
the entire scheme-specific part is treated as the \"path\" portion
of the URI.
<p>
Note that, unlike the java.net.URL class, this class does not provide
any built-in network access functionality nor does it provide any
scheme-specific functionality (for example, it does not know a
default port for a specific scheme). Rather, it only knows the
grammar and basic set of operations that can be applied to a URI.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

A minor change from the original is that this class no longer implements
Serializable, and the serialVersionUID magic field is dropped, and
the class is no longer \"public\".

@xsl.usage internal
"
      class 795394 "MalformedURIException"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2546306 // <generalisation>
	  relation 2546306 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 2546306 // <generalisation>
	    b parent class_ref 146818 // IOException
	end

	operation 5648258 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with no specified
detail message.
"
	end

	operation 5648386 "MalformedURIException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "p_msg" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a <code>MalformedURIException</code> with the
specified detail message.

@param p_msg the detail message.
"
	end
      end

      classrelation 2546434 // RESERVED_CHARACTERS (<unidirectional association>)
	relation 2546434 --->
	  a role_name "RESERVED_CHARACTERS" init_value " \";/?:@&=+$,\"" class_relation const_relation private
	    comment " reserved characters 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2546434 // RESERVED_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2546562 // MARK_CHARACTERS (<unidirectional association>)
	relation 2546562 --->
	  a role_name "MARK_CHARACTERS" init_value " \"-_.!~*'() \"" class_relation const_relation private
	    comment "
URI punctuation mark characters - these, combined with
  alphanumerics, constitute the \"unreserved\" characters

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2546562 // MARK_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2546690 // SCHEME_CHARACTERS (<unidirectional association>)
	relation 2546690 --->
	  a role_name "SCHEME_CHARACTERS" init_value " \"+-.\"" class_relation const_relation private
	    comment " scheme can be composed of alphanumerics and these characters 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2546690 // SCHEME_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2546818 // USERINFO_CHARACTERS (<unidirectional association>)
	relation 2546818 --->
	  a role_name "USERINFO_CHARACTERS" init_value " \";:&=+$,\"" class_relation const_relation private
	    comment "
userinfo can be composed of unreserved, escaped and these
  characters

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2546818 // USERINFO_CHARACTERS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2546946 // m_scheme (<unidirectional association>)
	relation 2546946 --->
	  a role_name "m_scheme" init_value " null" private
	    comment " Stores the scheme (usually the protocol) for this URI.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2546946 // m_scheme (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2547074 // m_userinfo (<unidirectional association>)
	relation 2547074 --->
	  a role_name "m_userinfo" init_value " null" private
	    comment " If specified, stores the userinfo for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547074 // m_userinfo (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2547202 // m_host (<unidirectional association>)
	relation 2547202 --->
	  a role_name "m_host" init_value " null" private
	    comment " If specified, stores the host for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547202 // m_host (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1225218 "m_port"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If specified, stores the port for this URI; otherwise -1.
 @serial 
"
      end

      classrelation 2547330 // m_path (<unidirectional association>)
	relation 2547330 --->
	  a role_name "m_path" init_value " null" private
	    comment " If specified, stores the path for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547330 // m_path (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2547458 // m_queryString (<unidirectional association>)
	relation 2547458 --->
	  a role_name "m_queryString" init_value " null" private
	    comment "
If specified, stores the query string for this URI; otherwise
  null.
@serial

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547458 // m_queryString (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2547586 // m_fragment (<unidirectional association>)
	relation 2547586 --->
	  a role_name "m_fragment" init_value " null" private
	    comment " If specified, stores the fragment for this URI; otherwise null.
 @serial 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547586 // m_fragment (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1225346 "DEBUG"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Indicate whether in DEBUG mode          
"
      end

      operation 5648514 "URI"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new and uninitialized URI.
"
      end

      operation 5648642 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_other" type class_ref 795266 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from another URI. All fields for this URI are
set equal to the fields of the URI passed in.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5648770 "URI"
	public explicit_return_type ""
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a URI specification string. If the
specification follows the \"generic URI\" syntax, (two slashes
following the first colon), the specification will be parsed
accordingly - setting the scheme, userinfo, host,port, path, query
string and fragment fields as necessary. If the specification does
not follow the \"generic URI\" syntax, the specification is parsed
into a scheme and scheme-specific part (stored as the path) only.

@param p_uriSpec the URI specification string (cannot be null or
                 empty)

@throws MalformedURIException if p_uriSpec violates any syntax
                                  rules
"
      end

      operation 5648898 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_base" type class_ref 795266 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI from a base URI and a URI specification string.
The URI specification string may be a relative URI.

@param p_base the base URI (cannot be null if p_uriSpec is null or
              empty)
@param p_uriSpec the URI specification string (cannot be null or
                 empty if p_base is null)

@throws MalformedURIException if p_uriSpec violates any syntax
                                 rules
"
      end

      operation 5649026 "URI"
	public explicit_return_type ""
	nparams 2
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_schemeSpecificPart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that does not follow the generic URI syntax.
Only the scheme and scheme-specific part (stored as the path) are
initialized.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_schemeSpecificPart the scheme-specific part (cannot be
                            null or empty)

@throws MalformedURIException if p_scheme violates any
                                 syntax rules
"
      end

      operation 5649154 "URI"
	public explicit_return_type ""
	nparams 5
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_host the hostname or IPv4 address for the URI
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@throws MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5649282 "URI"
	public explicit_return_type ""
	nparams 7
	  param inout name "p_scheme" type class_ref 128130 // String
	  param inout name "p_userinfo" type class_ref 128130 // String
	  param inout name "p_host" type class_ref 128130 // String
	  param in name "p_port" explicit_type "int"
	  param inout name "p_path" type class_ref 128130 // String
	  param inout name "p_queryString" type class_ref 128130 // String
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new URI that follows the generic URI syntax from its
component parts. Each component is validated for syntax and some
basic semantic checks are performed as well.  See the individual
setter methods for specifics.

@param p_scheme the URI scheme (cannot be null or empty)
@param p_userinfo the URI userinfo (cannot be specified if host
                  is null)
@param p_host the hostname or IPv4 address for the URI
@param p_port the URI port (may be -1 for \"unspecified\"; cannot
              be specified if host is null)
@param p_path the URI path - if the path contains '?' or '#',
              then the query string and/or fragment will be
              set from the path; however, if the query and
              fragment are specified both in the path and as
              separate parameters, an exception is thrown
@param p_queryString the URI query string (cannot be specified
                     if path is null)
@param p_fragment the URI fragment (cannot be specified if path
                  is null)

@throws MalformedURIException if any of the parameters violates
                                 syntax rules or semantic rules
"
      end

      operation 5649410 "initialize"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_other" type class_ref 795266 // URI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize all fields of this URI from another URI.

@param p_other the URI to copy (cannot be null)
"
      end

      operation 5649538 "initialize"
	private explicit_return_type "void"
	nparams 2
	  param inout name "p_base" type class_ref 795266 // URI
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this URI from a base URI and a URI specification string.
See RFC 2396 Section 4 and Appendix B for specifications on parsing
the URI and Section 5 for specifications on resolving relative URIs
and relative paths.

@param p_base the base URI (may be null if p_uriSpec is an absolute
              URI)
@param p_uriSpec the URI spec string which may be an absolute or
                 relative URI (can only be null/empty if p_base
                 is not null)

@throws MalformedURIException if p_base is null and p_uriSpec
                                 is not an absolute URI or if
                                 p_uriSpec violates syntax rules
"
      end

      operation 5649666 "initializeScheme"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the scheme for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if URI does not have a conformant
                                 scheme
"
      end

      operation 5649794 "initializeAuthority"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the authority (userinfo, host and port) for this
URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if p_uriSpec violates syntax rules
"
      end

      operation 5649922 "initializePath"
	private explicit_return_type "void"
	nparams 1
	  param inout name "p_uriSpec" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the path for this URI from a URI string spec.

@param p_uriSpec the URI specification (cannot be null)

@throws MalformedURIException if p_uriSpec violates syntax rules
"
      end

      operation 5650050 "getScheme"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme for this URI.

@return the scheme for this URI
"
      end

      operation 5650178 "getSchemeSpecificPart"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scheme-specific part for this URI (everything following the
scheme and the first colon). See RFC 2396 Section 5.2 for spec.

@return the scheme-specific part for this URI
"
      end

      operation 5650306 "getUserinfo"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the userinfo for this URI.

@return the userinfo for this URI (null if not specified).
"
      end

      operation 5650434 "getHost"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the host for this URI.

@return the host for this URI (null if not specified).
"
      end

      operation 5650562 "getPort"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the port for this URI.

@return the port for this URI (-1 if not specified).
"
      end

      operation 5650690 "getPath"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "p_includeQueryString" explicit_type "boolean"
	  param inout name "p_includeFragment" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI (optionally with the query string and
fragment).

@param p_includeQueryString if true (and query string is not null),
                            then a \"?\" followed by the query string
                            will be appended
@param p_includeFragment if true (and fragment is not null),
                            then a \"#\" followed by the fragment
                            will be appended

@return the path for this URI possibly including the query string
        and fragment
"
      end

      operation 5650818 "getPath"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the path for this URI. Note that the value returned is the path
only and does not include the query string or fragment.

@return the path for this URI.
"
      end

      operation 5650946 "getQueryString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the query string for this URI.

@return the query string for this URI. Null is returned if there
        was no \"?\" in the URI spec, empty string if there was a
        \"?\" but no query string following it.
"
      end

      operation 5651074 "getFragment"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the fragment for this URI.

@return the fragment for this URI. Null is returned if there
        was no \"#\" in the URI spec, empty string if there was a
        \"#\" but no fragment following it.
"
      end

      operation 5651202 "setScheme"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the scheme for this URI. The scheme is converted to lowercase
before it is set.

@param p_scheme the scheme for this URI (cannot be null)

@throws MalformedURIException if p_scheme is not a conformant
                                 scheme name
"
      end

      operation 5651330 "setUserinfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_userinfo" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the userinfo for this URI. If a non-null value is passed in and
the host value is null, then an exception is thrown.

@param p_userinfo the userinfo for this URI

@throws MalformedURIException if p_userinfo contains invalid
                                 characters
"
      end

      operation 5651458 "setHost"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_host" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the host for this URI. If null is passed in, the userinfo
field is also set to null and the port is set to -1.

@param p_host the host for this URI

@throws MalformedURIException if p_host is not a valid IP
                                 address or DNS hostname.
"
      end

      operation 5651586 "setPort"
	public explicit_return_type "void"
	nparams 1
	  param in name "p_port" explicit_type "int"
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the port for this URI. -1 is used to indicate that the port is
not specified, otherwise valid port numbers are  between 0 and 65535.
If a valid port number is passed in and the host field is null,
an exception is thrown.

@param p_port the port number for this URI

@throws MalformedURIException if p_port is not -1 and not a
                                 valid port number
"
      end

      operation 5651714 "setPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_path" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the path for this URI. If the supplied path is null, then the
query string and fragment are set to null as well. If the supplied
path includes a query string and/or fragment, these fields will be
parsed and set as well. Note that, for URIs following the \"generic
URI\" syntax, the path specified should start with a slash.
For URIs that do not follow the generic URI syntax, this method
sets the scheme-specific part.

@param p_path the path for this URI (may be null)

@throws MalformedURIException if p_path contains invalid
                                 characters
"
      end

      operation 5651842 "appendPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_addToPath" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append to the end of the path of this URI. If the current path does
not end in a slash and the path to be appended does not begin with
a slash, a slash will be appended to the current path before the
new segment is added. Also, if the current path ends in a slash
and the new segment begins with a slash, the extra slash will be
removed before the new segment is appended.

@param p_addToPath the new segment to be added to the current path

@throws MalformedURIException if p_addToPath contains syntax
                                 errors
"
      end

      operation 5651970 "setQueryString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_queryString" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the query string for this URI. A non-null value is valid only
if this is an URI conforming to the generic URI syntax and
the path value is not null.

@param p_queryString the query string for this URI

@throws MalformedURIException if p_queryString is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5652098 "setFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p_fragment" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 795394 // MalformedURIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the fragment for this URI. A non-null value is valid only
if this is a URI conforming to the generic URI syntax and
the path value is not null.

@param p_fragment the fragment for this URI

@throws MalformedURIException if p_fragment is not null and this
                                 URI does not conform to the generic
                                 URI syntax or if the path is null
"
      end

      operation 5652226 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_test" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Determines if the passed-in Object is equivalent to this URI.

@param p_test the Object to test for equality.

@return true if p_test is a URI with all values equal to this
        URI, false otherwise
"
      end

      operation 5652354 "hashCode"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5652482 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the URI as a string specification. See RFC 2396 Section 5.2.

@return the URI string specification
"
      end

      operation 5652610 "isGenericURI"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the indicator as to whether this URI uses the \"generic URI\"
syntax.

@return true if this URI uses the \"generic URI\" syntax, false
        otherwise
"
      end

      operation 5652738 "isConformantSchemeName"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_scheme" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a scheme conforms to the rules for a scheme name.
A scheme is conformant if it starts with an alphanumeric, and
contains only alphanumerics, '+','-' and '.'.


@param p_scheme The sheme name to check
@return true if the scheme is conformant, false otherwise
"
      end

      operation 5652866 "isWellFormedAddress"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "p_address" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a string is syntactically capable of representing
a valid IPv4 address or the domain name of a network host. A valid
IPv4 address consists of four decimal digit groups separated by a
'.'. A hostname consists of domain labels (each of which must
begin and end with an alphanumeric but may contain '-') separated
& by a '.'. See RFC 2396 Section 3.2.2.


@param p_address The address string to check
@return true if the string is a syntactically valid IPv4 address
             or hostname
"
      end

      operation 5652994 "isDigit"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is a digit.


@param p_char the character to check
@return true if the char is betweeen '0' and '9', false otherwise
"
      end

      operation 5653122 "isHex"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a hexadecimal character.


@param p_char the character to check
@return true if the char is between '0' and '9', 'a' and 'f'
        or 'A' and 'F', false otherwise
"
      end

      operation 5653250 "isAlpha"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphabetic character: a-z or A-Z


@param p_char the character to check
@return true if the char is alphabetic, false otherwise
"
      end

      operation 5653378 "isAlphanum"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an alphanumeric: 0-9, a-z or A-Z


@param p_char the character to check
@return true if the char is alphanumeric, false otherwise
"
      end

      operation 5653506 "isReservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a character is a reserved character:
';', '/', '?', ':', '@', '&', '=', '+', '$' or ','


@param p_char the character to check
@return true if the string contains any reserved characters
"
      end

      operation 5653634 "isUnreservedCharacter"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "p_char" explicit_type "char"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a char is an unreserved character.


@param p_char the character to check
@return true if the char is unreserved, false otherwise
"
      end

      operation 5653762 "isURIString"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "p_uric" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a given string contains only URI characters (also
called \"uric\" in RFC 2396). uric consist of all reserved
characters, unreserved characters and escaped characters.


@param p_uric URI string
@return true if the string is comprised of uric, false otherwise
"
      end
    end

    class 795522 "Utils"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class contains utilities used by the serializer.

This class is not a public API, it is only public because it is
used by com.sun.org.apache.xml.internal.serializer.

@xsl.usage internal
"
      classrelation 2547714 // messages (<unidirectional association>)
	relation 2547714 --->
	  a role_name "messages" init_value "
        new com.sun.org.apache.xml.internal.serializer.utils.Messages(
            \"com.sun.org.apache.xml.internal.serializer.utils.SerializerMessages\")" class_relation const_relation public
	    comment "
A singleton Messages object is used to load the
given resource bundle just once, it is
used by multiple transformations as long as the JVM stays up.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547714 // messages (<unidirectional association>)
	  b parent class_ref 793090 // Messages
      end
    end

    class 795650 "WrappedRuntimeException"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is for throwing important checked exceptions
over non-checked methods.  It should be used with care,
and in limited circumstances.

This class is a copy of the one in com.sun.org.apache.xml.internal.utils.
It exists to cut the serializers dependancy on that package.

This class is not a public API, it is only public because it is
used by com.sun.org.apache.xml.internal.serializer.
@xsl.usage internal
"
      classrelation 2547842 // <generalisation>
	relation 2547842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2547842 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 1225474 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7140414456714658073L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2547970 // m_exception (<unidirectional association>)
	relation 2547970 --->
	  a role_name "m_exception" private
	    comment " Primary checked exception.
 @serial          
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2547970 // m_exception (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      operation 5653890 "WrappedRuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a WrappedRuntimeException from a
checked exception.

@param e Primary checked exception
"
      end

      operation 5654018 "WrappedRuntimeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor WrappedRuntimeException


@param msg Exception information.
@param e Primary checked exception
"
      end

      operation 5654146 "getException"
	public return_type class_ref 132226 // Exception
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the checked exception that this runtime exception wraps.

@return The primary checked exception
"
      end
    end
  end

  deploymentview 163074 "utils"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 560642 "AttList"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Attr;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.xml.sax.Attributes;
${definition}"
      associated_elems
	class_ref 792834 // AttList
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: AttList.java,v 1.1.4.1 2005/09/08 11:03:08 suresh_emailid Exp $
"
    end

    artifact 560770 "BoolStack"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 792962 // BoolStack
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: BoolStack.java,v 1.1.4.1 2005/09/08 11:03:08 suresh_emailid Exp $
"
    end

    artifact 560898 "DOM2Helper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.InputSource;
${definition}"
      associated_elems
	class_ref 792194 // DOM2Helper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: DOM2Helper.java,v 1.1.4.1 2005/09/08 11:03:09 suresh_emailid Exp $
"
    end

    artifact 561026 "Messages"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.utils.SecuritySupport;
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 793090 // Messages
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Messages.java,v 1.1.4.1 2005/09/08 11:03:10 suresh_emailid Exp $
"
    end

    artifact 561154 "MsgKey"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 793218 // MsgKey
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: MsgKey.java,v 1.1.4.1 2005/09/08 11:03:11 suresh_emailid Exp $
"
    end

    artifact 561282 "SerializerMessages"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 793346 // SerializerMessages
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 561410 "SerializerMessages_ca"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 793474 // SerializerMessages_ca
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerMessages_ca.java,v 1.1.4.1 2005/09/08 11:03:11 suresh_emailid Exp $
"
    end

    artifact 561538 "SerializerMessages_cs"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
${definition}"
      associated_elems
	class_ref 793602 // SerializerMessages_cs
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerMessages_cs.java,v 1.1.4.1 2005/09/08 11:03:12 suresh_emailid Exp $
"
    end

    artifact 561666 "SerializerMessages_de"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 793730 // SerializerMessages_de
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 561794 "SerializerMessages_en"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 793858 // SerializerMessages_en
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SerializerMessages_en.java,v 1.1.4.1 2005/09/08 11:03:13 suresh_emailid Exp $
"
    end

    artifact 561922 "SerializerMessages_es"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 793986 // SerializerMessages_es
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562050 "SerializerMessages_fr"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794114 // SerializerMessages_fr
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562178 "SerializerMessages_it"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794242 // SerializerMessages_it
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562306 "SerializerMessages_ja"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794370 // SerializerMessages_ja
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562434 "SerializerMessages_ko"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794498 // SerializerMessages_ko
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562562 "SerializerMessages_pt_BR"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794626 // SerializerMessages_pt_BR
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562690 "SerializerMessages_sv"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794754 // SerializerMessages_sv
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562818 "SerializerMessages_zh_CN"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 794882 // SerializerMessages_zh_CN
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 562946 "SerializerMessages_zh_TW"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 795010 // SerializerMessages_zh_TW
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 563074 "StringToIntTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 788226 // StringToIntTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: StringToIntTable.java,v 1.1.4.1 2005/09/08 11:03:19 suresh_emailid Exp $
"
    end

    artifact 563202 "SystemIDResolver"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xml.internal.serializer.utils.URI.MalformedURIException;
${definition}"
      associated_elems
	class_ref 795138 // SystemIDResolver
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: SystemIDResolver.java,v 1.1.4.1 2005/09/08 11:03:20 suresh_emailid Exp $
"
    end

    artifact 563330 "URI"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Objects;
${definition}"
      associated_elems
	class_ref 795266 // URI
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: URI.java,v 1.1.4.1 2005/09/08 11:03:20 suresh_emailid Exp $
"
    end

    artifact 563458 "Utils"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 795522 // Utils
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Utils.java,v 1.1.4.1 2005/09/08 11:03:21 suresh_emailid Exp $
"
    end

    artifact 563586 "WrappedRuntimeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 795650 // WrappedRuntimeException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: WrappedRuntimeException.java,v 1.1.4.1 2005/09/08 11:03:21 suresh_emailid Exp $
"
    end
  end
end
