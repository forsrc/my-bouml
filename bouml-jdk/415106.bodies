class CssParser
!!!2441346.java!!!	parseDeclaration(inout string : String) : AttributeSet
            try {
                return parseDeclaration(new StringReader(string));
            } catch (IOException ioe) {}
            return null;
!!!2441474.java!!!	parseDeclaration(inout r : Reader) : AttributeSet
            parse(base, r, true, false);
            return declaration.copyAttributes();
!!!2441602.java!!!	parse(inout base : URL, inout r : Reader, inout parseDeclaration : boolean, inout isLink : boolean) : void
            this.base = base;
            this.isLink = isLink;
            this.parsingDeclaration = parseDeclaration;
            declaration.removeAttributes(declaration);
            selectorTokens.removeAllElements();
            selectors.removeAllElements();
            propertyName = null;
            parser.parse(r, this, parseDeclaration);
!!!2441730.java!!!	handleImport(inout importString : String) : void
            URL url = CSS.getURL(base, importString);
            if (url != null) {
                importStyleSheet(url);
            }
!!!2441858.java!!!	handleSelector(inout selector : String) : void
            //class and index selectors are case sensitive
            if (!(selector.startsWith(".")
                  || selector.startsWith("#"))) {
                selector = selector.toLowerCase();
            }
            int length = selector.length();

            if (selector.endsWith(",")) {
                if (length > 1) {
                    selector = selector.substring(0, length - 1);
                    selectorTokens.addElement(selector);
                }
                addSelector();
            }
            else if (length > 0) {
                selectorTokens.addElement(selector);
            }
!!!2441986.java!!!	startRule() : void
            if (selectorTokens.size() > 0) {
                addSelector();
            }
            propertyName = null;
!!!2442114.java!!!	handleProperty(inout property : String) : void
            propertyName = property;
!!!2442242.java!!!	handleValue(inout value : String) : void
            if (propertyName != null && value != null && value.length() > 0) {
                CSS.Attribute cssKey = CSS.getAttribute(propertyName);
                if (cssKey != null) {
                    // There is currently no mechanism to determine real
                    // base that style sheet was loaded from. For the time
                    // being, this maps for LIST_STYLE_IMAGE, which appear
                    // to be the only one that currently matters. A more
                    // general mechanism is definately needed.
                    if (cssKey == CSS.Attribute.LIST_STYLE_IMAGE) {
                        if (value != null && !value.equals("none")) {
                            URL url = CSS.getURL(base, value);

                            if (url != null) {
                                value = url.toString();
                            }
                        }
                    }
                    addCSSAttribute(declaration, cssKey, value);
                }
                propertyName = null;
            }
!!!2442370.java!!!	endRule() : void
            int n = selectors.size();
            for (int i = 0; i < n; i++) {
                String[] selector = selectors.elementAt(i);
                if (selector.length > 0) {
                    StyleSheet.this.addRule(selector, declaration, isLink);
                }
            }
            declaration.removeAttributes(declaration);
            selectors.removeAllElements();
!!!2442498.java!!!	addSelector() : void
            String[] selector = new String[selectorTokens.size()];
            selectorTokens.copyInto(selector);
            selectors.addElement(selector);
            selectorTokens.removeAllElements();
