class Reader
!!!3407490.java!!!	Reader()
        this.lock = this;
!!!3407618.java!!!	Reader(inout lock : Object)
        if (lock == null) {
            throw new NullPointerException();
        }
        this.lock = lock;
!!!3407746.java!!!	read(inout target : CharBuffer) : int
        int len = target.remaining();
        char[] cbuf = new char[len];
        int n = read(cbuf, 0, len);
        if (n > 0)
            target.put(cbuf, 0, n);
        return n;
!!!3407874.java!!!	read() : int
        char cb[] = new char[1];
        if (read(cb, 0, 1) == -1)
            return -1;
        else
            return cb[0];
!!!3408002.java!!!	read(inout cbuf : char [[]]) : int
        return read(cbuf, 0, cbuf.length);
!!!3408258.java!!!	skip(in n : long) : long
        if (n < 0L)
            throw new IllegalArgumentException("skip value is negative");
        int nn = (int) Math.min(n, maxSkipBufferSize);
        synchronized (lock) {
            if ((skipBuffer == null) || (skipBuffer.length < nn))
                skipBuffer = new char[nn];
            long r = n;
            while (r > 0) {
                int nc = read(skipBuffer, 0, (int)Math.min(r, nn));
                if (nc == -1)
                    break;
                r -= nc;
            }
            return n - r;
        }
!!!3408386.java!!!	ready() : boolean
        return false;
!!!3408514.java!!!	markSupported() : boolean
        return false;
!!!3408642.java!!!	mark(in readAheadLimit : int) : void
        throw new IOException("mark() not supported");
!!!3408770.java!!!	reset() : void
        throw new IOException("reset() not supported");
