class ElementAvailableCall
!!!3719042.java!!!	ElementAvailableCall(inout fname : QName, inout arguments : Vector)
        super(fname, arguments);
!!!3719170.java!!!	typeCheck(inout stable : SymbolTable) : Type
        if (argument() instanceof LiteralExpr) {
            return _type = Type.Boolean;
        }
        ErrorMsg err = new ErrorMsg(ErrorMsg.NEED_LITERAL_ERR,
                                    "element-available", this);
        throw new TypeCheckError(err);
!!!3719298.java!!!	evaluateAtCompileTime() : Object
        return getResult() ? Boolean.TRUE : Boolean.FALSE;
!!!3719426.java!!!	getResult() : boolean
        try {
            final LiteralExpr arg = (LiteralExpr) argument();
            final String qname = arg.getValue();
            final int index = qname.indexOf(':');
            final String localName = (index > 0) ?
                qname.substring(index + 1) : qname;
            return getParser().elementSupported(arg.getNamespace(),
                                                localName);
        }
        catch (ClassCastException e) {
            return false;
        }
!!!3719554.java!!!	translate(inout classGen : ClassGenerator, inout methodGen : MethodGenerator) : void
        final ConstantPoolGen cpg = classGen.getConstantPool();
        final boolean result = getResult();
        methodGen.getInstructionList().append(new PUSH(cpg, result));
