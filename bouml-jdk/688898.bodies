class PrecisionDecimalDV
!!!4529410.java!!!	getAllowedFacets() : short
        return ( XSSimpleTypeDecl.FACET_PATTERN | XSSimpleTypeDecl.FACET_WHITESPACE | XSSimpleTypeDecl.FACET_ENUMERATION |XSSimpleTypeDecl.FACET_MAXINCLUSIVE |XSSimpleTypeDecl.FACET_MININCLUSIVE | XSSimpleTypeDecl.FACET_MAXEXCLUSIVE  | XSSimpleTypeDecl.FACET_MINEXCLUSIVE | XSSimpleTypeDecl.FACET_TOTALDIGITS | XSSimpleTypeDecl.FACET_FRACTIONDIGITS);
!!!4529538.java!!!	getActualValue(inout content : String, inout context : ValidationContext) : Object
        try {
            return new XPrecisionDecimal(content);
        } catch (NumberFormatException nfe) {
            throw new InvalidDatatypeValueException("cvc-datatype-valid.1.2.1", new Object[]{content, "precisionDecimal"});
        }
!!!4529666.java!!!	compare(inout value1 : Object, inout value2 : Object) : int
        return ((XPrecisionDecimal)value1).compareTo((XPrecisionDecimal)value2);
!!!4529794.java!!!	getFractionDigits(inout value : Object) : int
        return ((XPrecisionDecimal)value).fracDigits;
!!!4529922.java!!!	getTotalDigits(inout value : Object) : int
        return ((XPrecisionDecimal)value).totalDigits;
!!!4530050.java!!!	isIdentical(inout value1 : Object, inout value2 : Object) : boolean
        if(!(value2 instanceof XPrecisionDecimal) || !(value1 instanceof XPrecisionDecimal))
            return false;
        return ((XPrecisionDecimal)value1).isIdentical((XPrecisionDecimal)value2);
