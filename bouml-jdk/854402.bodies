class SimpleTreeVisitor
!!!6046338.java!!!	SimpleTreeVisitor()
        DEFAULT_VALUE = null;
!!!6046466.java!!!	SimpleTreeVisitor(inout defaultValue : R)
        DEFAULT_VALUE = defaultValue;
!!!6046594.java!!!	defaultAction(inout node : Tree, inout p : P) : R
        return DEFAULT_VALUE;
!!!6046722.java!!!	visit(inout node : Tree, inout p : P) : R
        return (node == null) ? null : node.accept(this, p);
!!!6046850.java!!!	visit(inout nodes : Iterable, inout p : P) : R
        R r = null;
        if (nodes != null)
            for (Tree node : nodes)
                r = visit(node, p);
        return r;
!!!6046978.java!!!	visitCompilationUnit(inout node : CompilationUnitTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047106.java!!!	visitImport(inout node : ImportTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047234.java!!!	visitClass(inout node : ClassTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047362.java!!!	visitMethod(inout node : MethodTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047490.java!!!	visitVariable(inout node : VariableTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047618.java!!!	visitEmptyStatement(inout node : EmptyStatementTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047746.java!!!	visitBlock(inout node : BlockTree, inout p : P) : R
        return defaultAction(node, p);
!!!6047874.java!!!	visitDoWhileLoop(inout node : DoWhileLoopTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048002.java!!!	visitWhileLoop(inout node : WhileLoopTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048130.java!!!	visitForLoop(inout node : ForLoopTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048258.java!!!	visitEnhancedForLoop(inout node : EnhancedForLoopTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048386.java!!!	visitLabeledStatement(inout node : LabeledStatementTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048514.java!!!	visitSwitch(inout node : SwitchTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048642.java!!!	visitCase(inout node : CaseTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048770.java!!!	visitSynchronized(inout node : SynchronizedTree, inout p : P) : R
        return defaultAction(node, p);
!!!6048898.java!!!	visitTry(inout node : TryTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049026.java!!!	visitCatch(inout node : CatchTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049154.java!!!	visitConditionalExpression(inout node : ConditionalExpressionTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049282.java!!!	visitIf(inout node : IfTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049410.java!!!	visitExpressionStatement(inout node : ExpressionStatementTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049538.java!!!	visitBreak(inout node : BreakTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049666.java!!!	visitContinue(inout node : ContinueTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049794.java!!!	visitReturn(inout node : ReturnTree, inout p : P) : R
        return defaultAction(node, p);
!!!6049922.java!!!	visitThrow(inout node : ThrowTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050050.java!!!	visitAssert(inout node : AssertTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050178.java!!!	visitMethodInvocation(inout node : MethodInvocationTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050306.java!!!	visitNewClass(inout node : NewClassTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050434.java!!!	visitNewArray(inout node : NewArrayTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050562.java!!!	visitLambdaExpression(inout node : LambdaExpressionTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050690.java!!!	visitParenthesized(inout node : ParenthesizedTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050818.java!!!	visitAssignment(inout node : AssignmentTree, inout p : P) : R
        return defaultAction(node, p);
!!!6050946.java!!!	visitCompoundAssignment(inout node : CompoundAssignmentTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051074.java!!!	visitUnary(inout node : UnaryTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051202.java!!!	visitBinary(inout node : BinaryTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051330.java!!!	visitTypeCast(inout node : TypeCastTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051458.java!!!	visitInstanceOf(inout node : InstanceOfTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051586.java!!!	visitArrayAccess(inout node : ArrayAccessTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051714.java!!!	visitMemberSelect(inout node : MemberSelectTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051842.java!!!	visitMemberReference(inout node : MemberReferenceTree, inout p : P) : R
        return defaultAction(node, p);
!!!6051970.java!!!	visitIdentifier(inout node : IdentifierTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052098.java!!!	visitLiteral(inout node : LiteralTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052226.java!!!	visitPrimitiveType(inout node : PrimitiveTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052354.java!!!	visitArrayType(inout node : ArrayTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052482.java!!!	visitParameterizedType(inout node : ParameterizedTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052610.java!!!	visitUnionType(inout node : UnionTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052738.java!!!	visitIntersectionType(inout node : IntersectionTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052866.java!!!	visitTypeParameter(inout node : TypeParameterTree, inout p : P) : R
        return defaultAction(node, p);
!!!6052994.java!!!	visitWildcard(inout node : WildcardTree, inout p : P) : R
        return defaultAction(node, p);
!!!6053122.java!!!	visitModifiers(inout node : ModifiersTree, inout p : P) : R
        return defaultAction(node, p);
!!!6053250.java!!!	visitAnnotation(inout node : AnnotationTree, inout p : P) : R
        return defaultAction(node, p);
!!!6053378.java!!!	visitAnnotatedType(inout node : AnnotatedTypeTree, inout p : P) : R
        return defaultAction(node, p);
!!!6053506.java!!!	visitErroneous(inout node : ErroneousTree, inout p : P) : R
        return defaultAction(node, p);
!!!6053634.java!!!	visitOther(inout node : Tree, inout p : P) : R
        return defaultAction(node, p);
