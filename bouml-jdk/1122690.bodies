class Node
!!!9191938.java!!!	casNext(inout cmp : LinkedTransferQueue::Node, inout val : LinkedTransferQueue::Node) : boolean
            return UNSAFE.compareAndSwapObject(this, nextOffset, cmp, val);
!!!9192066.java!!!	casItem(inout cmp : Object, inout val : Object) : boolean
            // assert cmp == null || cmp.getClass() != Node.class;
            return UNSAFE.compareAndSwapObject(this, itemOffset, cmp, val);
!!!9192194.java!!!	Node(inout item : Object, inout isData : boolean)
            UNSAFE.putObject(this, itemOffset, item); // relaxed write
            this.isData = isData;
!!!9192322.java!!!	forgetNext() : void
            UNSAFE.putObject(this, nextOffset, this);
!!!9192450.java!!!	forgetContents() : void
            UNSAFE.putObject(this, itemOffset, this);
            UNSAFE.putObject(this, waiterOffset, null);
!!!9192578.java!!!	isMatched() : boolean
            Object x = item;
            return (x == this) || ((x == null) == isData);
!!!9192706.java!!!	isUnmatchedRequest() : boolean
            return !isData && item == null;
!!!9192834.java!!!	cannotPrecede(inout haveData : boolean) : boolean
            boolean d = isData;
            Object x;
            return d != haveData && (x = item) != this && (x != null) == d;
!!!9192962.java!!!	tryMatchData() : boolean
            // assert isData;
            Object x = item;
            if (x != null && x != this && casItem(x, null)) {
                LockSupport.unpark(waiter);
                return true;
            }
            return false;
