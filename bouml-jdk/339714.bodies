class AbstractColorChooserPanel
!!!2009090.java!!!	getMnemonic() : int
        return 0;
!!!2009218.java!!!	getDisplayedMnemonicIndex() : int
        return -1;
!!!2009602.java!!!	installChooserPanel(inout enclosingChooser : JColorChooser) : void
        if (chooser != null) {
            throw new RuntimeException ("This chooser panel is already installed");
        }
        chooser = enclosingChooser;
        chooser.addPropertyChangeListener("enabled", enabledListener);
        setEnabled(chooser.isEnabled());
        buildChooser();
        updateChooser();
!!!2009730.java!!!	uninstallChooserPanel(inout enclosingChooser : JColorChooser) : void
        chooser.removePropertyChangeListener("enabled", enabledListener);
        chooser = null;
!!!2009858.java!!!	getColorSelectionModel() : ColorSelectionModel
        return (this.chooser != null)
                ? this.chooser.getSelectionModel()
                : null;
!!!2009986.java!!!	getColorFromModel() : Color
        ColorSelectionModel model = getColorSelectionModel();
        return (model != null)
                ? model.getSelectedColor()
                : null;
!!!2010114.java!!!	setSelectedColor(inout color : Color) : void
        ColorSelectionModel model = getColorSelectionModel();
        if (model != null) {
            model.setSelectedColor(color);
        }
!!!2010242.java!!!	paint(inout g : Graphics) : void
        super.paint(g);
!!!2010370.java!!!	getInt(inout key : Object, in defaultValue : int) : int
        Object value = UIManager.get(key, getLocale());

        if (value instanceof Integer) {
            return ((Integer)value).intValue();
        }
        if (value instanceof String) {
            try {
                return Integer.parseInt((String)value);
            } catch (NumberFormatException nfe) {}
        }
        return defaultValue;
