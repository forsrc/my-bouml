class ObjectWriter
!!!1261314.java!!!	make(inout isIndenting : boolean, in initialLevel : int, in increment : int) : ObjectWriter
        if (isIndenting)
            return new IndentingObjectWriter( initialLevel, increment ) ;
        else
            return new SimpleObjectWriter() ;
!!!1262082.java!!!	toString() : String
 return result.toString() ;
!!!1262210.java!!!	append(inout arg : boolean) : void
 result.append( arg ) ;
!!!1262338.java!!!	append(in arg : char) : void
 result.append( arg ) ;
!!!1262466.java!!!	append(in arg : short) : void
 result.append( arg ) ;
!!!1262594.java!!!	append(in arg : int) : void
 result.append( arg ) ;
!!!1262722.java!!!	append(in arg : long) : void
 result.append( arg ) ;
!!!1262850.java!!!	append(in arg : float) : void
 result.append( arg ) ;
!!!1262978.java!!!	append(in arg : double) : void
 result.append( arg ) ;
!!!1263106.java!!!	append(inout arg : String) : void
 result.append( arg ) ;
!!!1263234.java!!!	ObjectWriter()
        result = new StringBuffer() ;
!!!1263362.java!!!	appendObjectHeader(inout obj : Object) : void
        result.append( obj.getClass().getName() ) ;
        result.append( "<" ) ;
        result.append( System.identityHashCode( obj ) ) ;
        result.append( ">" ) ;
        Class compClass = obj.getClass().getComponentType() ;

        if (compClass != null) {
            result.append( "[" ) ;
            if (compClass == boolean.class) {
                boolean[] arr = (boolean[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == byte.class) {
                byte[] arr = (byte[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == short.class) {
                short[] arr = (short[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == int.class) {
                int[] arr = (int[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == long.class) {
                long[] arr = (long[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == char.class) {
                char[] arr = (char[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == float.class) {
                float[] arr = (float[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else if (compClass == double.class) {
                double[] arr = (double[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            } else { // array of object
                java.lang.Object[] arr = (java.lang.Object[])obj ;
                result.append( arr.length ) ;
                result.append( "]" ) ;
            }
        }

        result.append( "(" ) ;
