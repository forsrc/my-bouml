class QuadIterator
!!!6571906.java!!!	QuadIterator(inout q : QuadCurve2D, inout at : AffineTransform)
        this.quad = q;
        this.affine = at;
!!!6572034.java!!!	getWindingRule() : int
        return WIND_NON_ZERO;
!!!6572162.java!!!	isDone() : boolean
        return (index > 1);
!!!6572290.java!!!	next() : void
        index++;
!!!6572418.java!!!	currentSegment(inout coords : float [[]]) : int
        if (isDone()) {
            throw new NoSuchElementException("quad iterator iterator out of bounds");
        }
        int type;
        if (index == 0) {
            coords[0] = (float) quad.getX1();
            coords[1] = (float) quad.getY1();
            type = SEG_MOVETO;
        } else {
            coords[0] = (float) quad.getCtrlX();
            coords[1] = (float) quad.getCtrlY();
            coords[2] = (float) quad.getX2();
            coords[3] = (float) quad.getY2();
            type = SEG_QUADTO;
        }
        if (affine != null) {
            affine.transform(coords, 0, coords, 0, index == 0 ? 1 : 2);
        }
        return type;
!!!6572546.java!!!	currentSegment(inout coords : double [[]]) : int
        if (isDone()) {
            throw new NoSuchElementException("quad iterator iterator out of bounds");
        }
        int type;
        if (index == 0) {
            coords[0] = quad.getX1();
            coords[1] = quad.getY1();
            type = SEG_MOVETO;
        } else {
            coords[0] = quad.getCtrlX();
            coords[1] = quad.getCtrlY();
            coords[2] = quad.getX2();
            coords[3] = quad.getY2();
            type = SEG_QUADTO;
        }
        if (affine != null) {
            affine.transform(coords, 0, coords, 0, index == 0 ? 1 : 2);
        }
        return type;
