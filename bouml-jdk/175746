format 222
"compiler" // jdk1.8::com::sun::org::apache::xpath::internal::compiler
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xpath/internal/compiler/"
  java_package "com.sun.org.apache.xpath.internal.compiler"
  classview 169090 "compiler"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 776450 "Compiler"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An instance of this class compiles an XPath string expression into
a Expression object.  This class compiles the string into a sequence
of operation codes (op map) and then builds from that into an Expression
tree.
@xsl.usage advanced
"
      classrelation 2590466 // <generalisation>
	relation 2590466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 2590466 // <generalisation>
	  b parent class_ref 811778 // OpMap
      end

      operation 5862914 "Compiler"
	public explicit_return_type ""
	nparams 3
	  param inout name "errorHandler" type class_ref 583170 // ErrorListener
	  param inout name "locator" type class_ref 617346 // SourceLocator
	  param inout name "fTable" type class_ref 782850 // FunctionTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a Compiler object with a specific ErrorListener and
SourceLocator where the expression is located.

@param errorHandler Error listener where messages will be sent, or null
                    if messages should be sent to System err.
@param locator The location object where the expression lives, which
               may be null, but which, if not null, must be valid over
               the long haul, in other words, it will not be cloned.
@param fTable  The FunctionTable object where the xpath build-in
               functions are stored.
"
      end

      operation 5863042 "Compiler"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a Compiler instance that has a null error listener and a
null source locator.
"
      end

      operation 5863170 "compile"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute the XPath object from a given opcode position.
@param opPos The current position in the xpath.m_opMap array.
@return The result of the XPath.

@throws TransformerException if there is a syntax or other error.
@xsl.usage advanced
"
      end

      operation 5863298 "compileOperation"
	private return_type class_ref 775682 // Expression
	nparams 2
	  param inout name "operation" type class_ref 806914 // Operation
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bottle-neck compilation of an operation with left and right operands.

@param operation non-null reference to parent operation.
@param opPos The op map position of the parent operation.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Operation} instance.

@throws TransformerException if there is a syntax or other error.
"
      end

      operation 5863426 "compileUnary"
	private return_type class_ref 775682 // Expression
	nparams 2
	  param inout name "unary" type class_ref 807042 // UnaryOperation
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bottle-neck compilation of a unary operation.

@param unary The parent unary operation.
@param opPos The position in the op map of the parent operation.

@return The unary argument.

@throws TransformerException if syntax or other error occurs.
"
      end

      operation 5863554 "or"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile an 'or' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Or} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5863682 "and"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile an 'and' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.And} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5863810 "notequals"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '!=' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.NotEquals} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5863938 "equals"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '=' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Equals} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864066 "lte"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '<=' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Lte} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864194 "lt"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '<' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Lt} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864322 "gte"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '>=' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Gte} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864450 "gt"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '>' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Gt} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864578 "plus"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '+' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Plus} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864706 "minus"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '-' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Minus} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864834 "mult"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a '*' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Mult} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5864962 "div"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'div' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Div} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865090 "mod"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'mod' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Mod} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865218 "neg"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'quo' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Quo} instance.

@throws TransformerException if a error occurs creating the Expression.

  protected Expression quo(int opPos) throws TransformerException
  {
    return compileOperation(new Quo(), opPos);
  }

Compile a unary '-' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Neg} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865346 "string"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'string(...)' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.String} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865474 "bool"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'boolean(...)' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Bool} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865602 "number"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a 'number(...)' operation.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Number} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865730 "literal"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a literal string value.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.objects.XString} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865858 "numberlit"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a literal number value.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.objects.XNumber} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5865986 "variable"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a variable reference.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.operations.Variable} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5866114 "group"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile an expression group.

@param opPos The current position in the m_opMap array.

@return reference to the contained expression.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5866242 "arg"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a function argument.

@param opPos The current position in the m_opMap array.

@return reference to the argument expression.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5866370 "union"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a location path union. The UnionPathIterator itself may create
{@link com.sun.org.apache.xpath.internal.axes.LocPathIterator} children.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.axes.LocPathIterator} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      attribute 1262594 "locPathDepth"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5866498 "getLocationPathDepth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the level of the location path or union being constructed.
@return 0 if it is a top-level path.
"
      end

      operation 5866626 "getFunctionTable"
	package return_type class_ref 782850 // FunctionTable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the function table
"
      end

      operation 5866754 "locationPath"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a location path.  The LocPathIterator itself may create
{@link com.sun.org.apache.xpath.internal.axes.AxesWalker} children.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.axes.LocPathIterator} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5866882 "predicate"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a location step predicate expression.

@param opPos The current position in the m_opMap array.

@return the contained predicate expression.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867010 "matchPattern"
	protected return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile an entire match pattern expression.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.patterns.UnionPattern} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867138 "locationPathPattern"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a location match pattern unit expression.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.patterns.StepPattern} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867266 "getWhatToShow"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a {@link org.w3c.dom.traversal.NodeFilter} bit set that tells what
to show for a given node test.

@param opPos the op map position for the location step.

@return {@link org.w3c.dom.traversal.NodeFilter} bit set that tells what
        to show for a given node test.
"
      end

      attribute 1262722 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5867394 "stepPattern"
	protected return_type class_ref 807298 // StepPattern
	nparams 3
	  param in name "opPos" explicit_type "int"
	  param in name "stepCount" explicit_type "int"
	  param inout name "ancestorPattern" type class_ref 807298 // StepPattern
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a step pattern unit expression, used for both location paths
and match patterns.

@param opPos The current position in the m_opMap array.
@param stepCount The number of steps to expect.
@param ancestorPattern The owning StepPattern, which may be null.

@return reference to {@link com.sun.org.apache.xpath.internal.patterns.StepPattern} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867522 "getCompiledPredicates"
	public return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a zero or more predicates for a given match pattern.

@param opPos The position of the first predicate the m_opMap array.

@return reference to array of {@link com.sun.org.apache.xpath.internal.Expression} instances.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867650 "countPredicates"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Count the number of predicates in the step.

@param opPos The position of the first predicate the m_opMap array.

@return The number of predicates for this step.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5867778 "compilePredicates"
	private explicit_return_type "void"
	nparams 2
	  param in name "opPos" explicit_type "int"
	  param inout name "predicates" type class_ref 775682 // Expression
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles predicates in the step.

@param opPos The position of the first predicate the m_opMap array.
@param predicates An empty pre-determined array of
           {@link com.sun.org.apache.xpath.internal.Expression}s, that will be filled in.

@throws TransformerException
"
      end

      operation 5867906 "compileFunction"
	package return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile a built-in XPath function.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.functions.Function} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      attribute 1262850 "s_nextMethodId"
	class_attribute private explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current id for extension functions.
"
      end

      operation 5868034 "getNextMethodId"
	private explicit_return_type "long"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the next available method id
"
      end

      operation 5868162 "compileExtension"
	private return_type class_ref 775682 // Expression
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compile an extension function.

@param opPos The current position in the m_opMap array.

@return reference to {@link com.sun.org.apache.xpath.internal.functions.FuncExtFunction} instance.

@throws TransformerException if a error occurs creating the Expression.
"
      end

      operation 5868290 "warn"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warn the user of an problem.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5868418 "assertion"
	public explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an assertion error, and probably throw an
exception.

@param b  If false, a runtime exception will be thrown.
@param msg The assertion message, which should be informative.

@throws RuntimeException if the b argument is false.
"
      end

      operation 5868546 "error"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      classrelation 2590594 // m_currentPrefixResolver (<unidirectional association>)
	relation 2590594 --->
	  a role_name "m_currentPrefixResolver" init_value " null" private
	    comment "
The current prefixResolver for the execution context.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590594 // m_currentPrefixResolver (<unidirectional association>)
	  b parent class_ref 635650 // PrefixResolver
      end

      operation 5868674 "getNamespaceContext"
	public return_type class_ref 635650 // PrefixResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current namespace context for the xpath.

@return The current prefix resolver, *may* be null, though hopefully not.
"
      end

      operation 5868802 "setNamespaceContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pr" type class_ref 635650 // PrefixResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current namespace context for the xpath.

@param pr The resolver for prefixes in the XPath expression.
"
      end

      classrelation 2590722 // m_errorHandler (<unidirectional association>)
	relation 2590722 --->
	  a role_name "m_errorHandler" package
	    comment " The error listener where errors will be sent.  If this is null, errors
 and warnings will be sent to System.err.  May be null.    
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590722 // m_errorHandler (<unidirectional association>)
	  b parent class_ref 583170 // ErrorListener
      end

      classrelation 2590850 // m_locator (<unidirectional association>)
	relation 2590850 --->
	  a role_name "m_locator" package
	    comment " The source locator for the expression being compiled.  May be null. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590850 // m_locator (<unidirectional association>)
	  b parent class_ref 617346 // SourceLocator
      end

      classrelation 2590978 // m_functionTable (<unidirectional association>)
	relation 2590978 --->
	  a role_name "m_functionTable" private
	    comment "
The FunctionTable for all xpath build-in functions

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590978 // m_functionTable (<unidirectional association>)
	  b parent class_ref 782850 // FunctionTable
      end
    end

    class 782850 "FunctionTable"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The function table for XPath.
"
      attribute 1263106 "FUNC_CURRENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'current()' id. 
"
      end

      attribute 1263234 "FUNC_LAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'last()' id. 
"
      end

      attribute 1263362 "FUNC_POSITION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'position()' id. 
"
      end

      attribute 1263490 "FUNC_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'count()' id. 
"
      end

      attribute 1263618 "FUNC_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'id()' id. 
"
      end

      attribute 1263746 "FUNC_KEY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'key()' id (XSLT). 
"
      end

      attribute 1263874 "FUNC_LOCAL_PART"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'local-name()' id. 
"
      end

      attribute 1264002 "FUNC_NAMESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'namespace-uri()' id. 
"
      end

      attribute 1264130 "FUNC_QNAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'name()' id. 
"
      end

      attribute 1264258 "FUNC_GENERATE_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'generate-id()' id. 
"
      end

      attribute 1264386 "FUNC_NOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'not()' id. 
"
      end

      attribute 1264514 "FUNC_TRUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'true()' id. 
"
      end

      attribute 1264642 "FUNC_FALSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'false()' id. 
"
      end

      attribute 1264770 "FUNC_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'boolean()' id. 
"
      end

      attribute 1264898 "FUNC_NUMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'number()' id. 
"
      end

      attribute 1265026 "FUNC_FLOOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'floor()' id. 
"
      end

      attribute 1265154 "FUNC_CEILING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'ceiling()' id. 
"
      end

      attribute 1265282 "FUNC_ROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'round()' id. 
"
      end

      attribute 1265410 "FUNC_SUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'sum()' id. 
"
      end

      attribute 1265538 "FUNC_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'string()' id. 
"
      end

      attribute 1265666 "FUNC_STARTS_WITH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'starts-with()' id. 
"
      end

      attribute 1265794 "FUNC_CONTAINS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'contains()' id. 
"
      end

      attribute 1265922 "FUNC_SUBSTRING_BEFORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'substring-before()' id. 
"
      end

      attribute 1266050 "FUNC_SUBSTRING_AFTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'substring-after()' id. 
"
      end

      attribute 1266178 "FUNC_NORMALIZE_SPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'normalize-space()' id. 
"
      end

      attribute 1266306 "FUNC_TRANSLATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'translate()' id. 
"
      end

      attribute 1266434 "FUNC_CONCAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'concat()' id. 
"
      end

      attribute 1266562 "FUNC_SUBSTRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'substring()' id. 
"
      end

      attribute 1266690 "FUNC_STRING_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'string-length()' id. 
"
      end

      attribute 1266818 "FUNC_SYSTEM_PROPERTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'system-property()' id. 
"
      end

      attribute 1266946 "FUNC_LANG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'lang()' id. 
"
      end

      attribute 1267074 "FUNC_EXT_FUNCTION_AVAILABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 33"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'function-available()' id (XSLT). 
"
      end

      attribute 1267202 "FUNC_EXT_ELEM_AVAILABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 34"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'element-available()' id (XSLT). 
"
      end

      attribute 1267330 "FUNC_UNPARSED_ENTITY_URI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The 'unparsed-entity-uri()' id (XSLT). 
"
      end

      attribute 1267458 "FUNC_DOCLOCATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 35"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Proprietary
 The 'document-location()' id (Proprietary). 
"
      end

      classrelation 2591234 // m_functions (<unidirectional association>)
	relation 2591234 --->
	  a role_name "m_functions" multiplicity "[]" class_relation private
	    comment "
The function table.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2591234 // m_functions (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 2591362 // m_functionID (<unidirectional association>)
	relation 2591362 --->
	  a role_name "m_functionID" init_value " new HashMap()" class_relation private
	    comment " Table of function name to function ID associations. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2591362 // m_functionID (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      classrelation 2591490 // m_functions_customer (<unidirectional association>)
	relation 2591490 --->
	  a role_name "m_functions_customer" multiplicity "[]" init_value " new Class[NUM_ALLOWABLE_ADDINS]" private
	    comment "
The function table contains customized functions

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2591490 // m_functions_customer (<unidirectional association>)
	  b parent class_ref 130818 // Class
      end

      classrelation 2591618 // m_functionID_customer (<unidirectional association>)
	relation 2591618 --->
	  a role_name "m_functionID_customer" init_value " new HashMap()" private
	    comment "
Table of function name to function ID associations for customized functions

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2591618 // m_functionID_customer (<unidirectional association>)
	  b parent class_ref 132866 // HashMap
      end

      attribute 1267586 "NUM_BUILT_IN_FUNCS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 37"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of built in functions.  Be sure to update this as
built-in functions are added.

"
      end

      attribute 1267714 "NUM_ALLOWABLE_ADDINS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of built-in functions that may be added.

"
      end

      attribute 1267842 "m_funcNextFreeIndex"
	private explicit_type "int"
	init_value " NUM_BUILT_IN_FUNCS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index to the next free function index.

"
      end

      extra_member 147074 "initialization"
	
	cpp "" ""
	java "  static {
    m_functions = new Class[NUM_BUILT_IN_FUNCS];
    m_functions[FUNC_CURRENT] = com.sun.org.apache.xpath.internal.functions.FuncCurrent.class;
    m_functions[FUNC_LAST] = com.sun.org.apache.xpath.internal.functions.FuncLast.class;
    m_functions[FUNC_POSITION] = com.sun.org.apache.xpath.internal.functions.FuncPosition.class;
    m_functions[FUNC_COUNT] = com.sun.org.apache.xpath.internal.functions.FuncCount.class;
    m_functions[FUNC_ID] = com.sun.org.apache.xpath.internal.functions.FuncId.class;
    // J2SE does not support Xalan interpretive
    // m_functions[FUNC_KEY] =
    //   com.sun.org.apache.xalan.internal.templates.FuncKey.class;
    m_functions[FUNC_LOCAL_PART] =
      com.sun.org.apache.xpath.internal.functions.FuncLocalPart.class;
    m_functions[FUNC_NAMESPACE] =
      com.sun.org.apache.xpath.internal.functions.FuncNamespace.class;
    m_functions[FUNC_QNAME] = com.sun.org.apache.xpath.internal.functions.FuncQname.class;
    m_functions[FUNC_GENERATE_ID] =
      com.sun.org.apache.xpath.internal.functions.FuncGenerateId.class;
    m_functions[FUNC_NOT] = com.sun.org.apache.xpath.internal.functions.FuncNot.class;
    m_functions[FUNC_TRUE] = com.sun.org.apache.xpath.internal.functions.FuncTrue.class;
    m_functions[FUNC_FALSE] = com.sun.org.apache.xpath.internal.functions.FuncFalse.class;
    m_functions[FUNC_BOOLEAN] = com.sun.org.apache.xpath.internal.functions.FuncBoolean.class;
    m_functions[FUNC_LANG] = com.sun.org.apache.xpath.internal.functions.FuncLang.class;
    m_functions[FUNC_NUMBER] = com.sun.org.apache.xpath.internal.functions.FuncNumber.class;
    m_functions[FUNC_FLOOR] = com.sun.org.apache.xpath.internal.functions.FuncFloor.class;
    m_functions[FUNC_CEILING] = com.sun.org.apache.xpath.internal.functions.FuncCeiling.class;
    m_functions[FUNC_ROUND] = com.sun.org.apache.xpath.internal.functions.FuncRound.class;
    m_functions[FUNC_SUM] = com.sun.org.apache.xpath.internal.functions.FuncSum.class;
    m_functions[FUNC_STRING] = com.sun.org.apache.xpath.internal.functions.FuncString.class;
    m_functions[FUNC_STARTS_WITH] =
      com.sun.org.apache.xpath.internal.functions.FuncStartsWith.class;
    m_functions[FUNC_CONTAINS] = com.sun.org.apache.xpath.internal.functions.FuncContains.class;
    m_functions[FUNC_SUBSTRING_BEFORE] =
      com.sun.org.apache.xpath.internal.functions.FuncSubstringBefore.class;
    m_functions[FUNC_SUBSTRING_AFTER] =
      com.sun.org.apache.xpath.internal.functions.FuncSubstringAfter.class;
    m_functions[FUNC_NORMALIZE_SPACE] =
      com.sun.org.apache.xpath.internal.functions.FuncNormalizeSpace.class;
    m_functions[FUNC_TRANSLATE] =
      com.sun.org.apache.xpath.internal.functions.FuncTranslate.class;
    m_functions[FUNC_CONCAT] = com.sun.org.apache.xpath.internal.functions.FuncConcat.class;
    m_functions[FUNC_SYSTEM_PROPERTY] =
      com.sun.org.apache.xpath.internal.functions.FuncSystemProperty.class;
    m_functions[FUNC_EXT_FUNCTION_AVAILABLE] =
      com.sun.org.apache.xpath.internal.functions.FuncExtFunctionAvailable.class;
    m_functions[FUNC_EXT_ELEM_AVAILABLE] =
      com.sun.org.apache.xpath.internal.functions.FuncExtElementAvailable.class;
    m_functions[FUNC_SUBSTRING] =
      com.sun.org.apache.xpath.internal.functions.FuncSubstring.class;
    m_functions[FUNC_STRING_LENGTH] =
      com.sun.org.apache.xpath.internal.functions.FuncStringLength.class;
    m_functions[FUNC_DOCLOCATION] =
      com.sun.org.apache.xpath.internal.functions.FuncDoclocation.class;
    m_functions[FUNC_UNPARSED_ENTITY_URI] =
      com.sun.org.apache.xpath.internal.functions.FuncUnparsedEntityURI.class;
  }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      extra_member 147202 "initialization"
	
	cpp "" ""
	java "  static {
          m_functionID.put(Keywords.FUNC_CURRENT_STRING,
                          new Integer(FunctionTable.FUNC_CURRENT));
          m_functionID.put(Keywords.FUNC_LAST_STRING,
                          new Integer(FunctionTable.FUNC_LAST));
          m_functionID.put(Keywords.FUNC_POSITION_STRING,
                          new Integer(FunctionTable.FUNC_POSITION));
          m_functionID.put(Keywords.FUNC_COUNT_STRING,
                          new Integer(FunctionTable.FUNC_COUNT));
          m_functionID.put(Keywords.FUNC_ID_STRING,
                          new Integer(FunctionTable.FUNC_ID));
          m_functionID.put(Keywords.FUNC_KEY_STRING,
                          new Integer(FunctionTable.FUNC_KEY));
          m_functionID.put(Keywords.FUNC_LOCAL_PART_STRING,
                          new Integer(FunctionTable.FUNC_LOCAL_PART));
          m_functionID.put(Keywords.FUNC_NAMESPACE_STRING,
                          new Integer(FunctionTable.FUNC_NAMESPACE));
          m_functionID.put(Keywords.FUNC_NAME_STRING,
                          new Integer(FunctionTable.FUNC_QNAME));
          m_functionID.put(Keywords.FUNC_GENERATE_ID_STRING,
                          new Integer(FunctionTable.FUNC_GENERATE_ID));
          m_functionID.put(Keywords.FUNC_NOT_STRING,
                          new Integer(FunctionTable.FUNC_NOT));
          m_functionID.put(Keywords.FUNC_TRUE_STRING,
                          new Integer(FunctionTable.FUNC_TRUE));
          m_functionID.put(Keywords.FUNC_FALSE_STRING,
                          new Integer(FunctionTable.FUNC_FALSE));
          m_functionID.put(Keywords.FUNC_BOOLEAN_STRING,
                          new Integer(FunctionTable.FUNC_BOOLEAN));
          m_functionID.put(Keywords.FUNC_LANG_STRING,
                          new Integer(FunctionTable.FUNC_LANG));
          m_functionID.put(Keywords.FUNC_NUMBER_STRING,
                          new Integer(FunctionTable.FUNC_NUMBER));
          m_functionID.put(Keywords.FUNC_FLOOR_STRING,
                          new Integer(FunctionTable.FUNC_FLOOR));
          m_functionID.put(Keywords.FUNC_CEILING_STRING,
                          new Integer(FunctionTable.FUNC_CEILING));
          m_functionID.put(Keywords.FUNC_ROUND_STRING,
                          new Integer(FunctionTable.FUNC_ROUND));
          m_functionID.put(Keywords.FUNC_SUM_STRING,
                          new Integer(FunctionTable.FUNC_SUM));
          m_functionID.put(Keywords.FUNC_STRING_STRING,
                          new Integer(FunctionTable.FUNC_STRING));
          m_functionID.put(Keywords.FUNC_STARTS_WITH_STRING,
                          new Integer(FunctionTable.FUNC_STARTS_WITH));
          m_functionID.put(Keywords.FUNC_CONTAINS_STRING,
                          new Integer(FunctionTable.FUNC_CONTAINS));
          m_functionID.put(Keywords.FUNC_SUBSTRING_BEFORE_STRING,
                          new Integer(FunctionTable.FUNC_SUBSTRING_BEFORE));
          m_functionID.put(Keywords.FUNC_SUBSTRING_AFTER_STRING,
                          new Integer(FunctionTable.FUNC_SUBSTRING_AFTER));
          m_functionID.put(Keywords.FUNC_NORMALIZE_SPACE_STRING,
                          new Integer(FunctionTable.FUNC_NORMALIZE_SPACE));
          m_functionID.put(Keywords.FUNC_TRANSLATE_STRING,
                          new Integer(FunctionTable.FUNC_TRANSLATE));
          m_functionID.put(Keywords.FUNC_CONCAT_STRING,
                          new Integer(FunctionTable.FUNC_CONCAT));
          m_functionID.put(Keywords.FUNC_SYSTEM_PROPERTY_STRING,
                          new Integer(FunctionTable.FUNC_SYSTEM_PROPERTY));
          m_functionID.put(Keywords.FUNC_EXT_FUNCTION_AVAILABLE_STRING,
                        new Integer(FunctionTable.FUNC_EXT_FUNCTION_AVAILABLE));
          m_functionID.put(Keywords.FUNC_EXT_ELEM_AVAILABLE_STRING,
                          new Integer(FunctionTable.FUNC_EXT_ELEM_AVAILABLE));
          m_functionID.put(Keywords.FUNC_SUBSTRING_STRING,
                          new Integer(FunctionTable.FUNC_SUBSTRING));
          m_functionID.put(Keywords.FUNC_STRING_LENGTH_STRING,
                          new Integer(FunctionTable.FUNC_STRING_LENGTH));
          m_functionID.put(Keywords.FUNC_UNPARSED_ENTITY_URI_STRING,
                          new Integer(FunctionTable.FUNC_UNPARSED_ENTITY_URI));
          m_functionID.put(Keywords.FUNC_DOCLOCATION_STRING,
                          new Integer(FunctionTable.FUNC_DOCLOCATION));
  }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5869314 "FunctionTable"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5869442 "getFunctionName"
	package return_type class_ref 128130 // String
	nparams 1
	  param in name "funcID" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the a function in the static table. Needed to avoid
making the table publicly available.
"
      end

      operation 5869570 "getFunction"
	package return_type class_ref 775554 // Function
	nparams 1
	  param in name "which" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new Function object from a function ID.

@param which  The function ID, which may correspond to one of the FUNC_XXX
   values found in {@link com.sun.org.apache.xpath.internal.compiler.FunctionTable}, but may
   be a value installed by an external module.

@return a a new Function instance.

@throws javax.xml.transform.TransformerException if ClassNotFoundException,
   IllegalAccessException, or InstantiationException is thrown.
"
      end

      operation 5869698 "getFunctionID"
	package return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a function ID from a given function name
@param key the function name in a java.lang.String format.
@return a function ID, which may correspond to one of the FUNC_XXX values
found in {@link com.sun.org.apache.xpath.internal.compiler.FunctionTable}, but may be a
value installed by an external module.
"
      end

      operation 5869826 "installFunction"
	public explicit_return_type "int"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "func" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Install a built-in function.
@param name The unqualified name of the function, must not be null
@param func A Implementation of an XPath Function object.
@return the position of the function in the internal index.
"
      end

      operation 5869954 "functionAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "methName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell if a built-in, non-namespaced function is available.

@param methName The local name of the function.

@return True if the function can be executed.
"
      end
    end

    class 811778 "OpMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents the data structure basics of the XPath
object.
"
      classrelation 2590082 // m_currentPattern (<unidirectional association>)
	relation 2590082 --->
	  a role_name "m_currentPattern" protected
	    comment "
The current pattern string, for diagnostics purposes

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590082 // m_currentPattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5860226 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the expression as a string for diagnostics.

@return The expression string.
"
      end

      operation 5860354 "getPatternString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the expression as a string for diagnostics.

@return The expression string.
"
      end

      attribute 1262210 "MAXTOKENQUEUESIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The starting size of the token queue.

"
      end

      attribute 1262338 "BLOCKTOKENQUEUESIZE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 500"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Amount to grow token queue when it becomes full

"
      end

      classrelation 2590210 // m_tokenQueue (<unidirectional association>)
	relation 2590210 --->
	  a role_name "m_tokenQueue" init_value " new ObjectVector(MAXTOKENQUEUESIZE, BLOCKTOKENQUEUESIZE)" package
	    comment "
 TokenStack is the queue of used tokens. The current token is the token at the
end of the m_tokenQueue. The idea is that the queue can be marked and a sequence
of tokens can be reused.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590210 // m_tokenQueue (<unidirectional association>)
	  b parent class_ref 797954 // ObjectVector
      end

      operation 5860482 "getTokenQueue"
	public return_type class_ref 797954 // ObjectVector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XPath as a list of tokens.

@return ObjectVector of tokens.
"
      end

      operation 5860610 "getToken"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "pos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XPath as a list of tokens.

@param pos index into token queue.

@return The token, normally a string.
"
      end

      operation 5860738 "getTokenQueueSize"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The current size of the token queue.

  public int m_tokenQueueSize = 0;

Get size of the token queue.

@return The size of the token queue.
"
      end

      classrelation 2590338 // m_opMap (<unidirectional association>)
	relation 2590338 --->
	  a role_name "m_opMap" init_value " null" package
	    comment "
An operations map is used instead of a proper parse tree.  It contains
operations codes and indexes into the m_tokenQueue.
I use an array instead of a full parse tree in order to cut down
on the number of objects created.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2590338 // m_opMap (<unidirectional association>)
	  b parent class_ref 811906 // OpMapVector
      end

      operation 5860866 "getOpMap"
	public return_type class_ref 811906 // OpMapVector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the opcode list that describes the XPath operations.  It contains
operations codes and indexes into the m_tokenQueue.
I use an array instead of a full parse tree in order to cut down
on the number of objects created.

@return An IntVector that is the opcode list that describes the XPath operations.
"
      end

      attribute 1262466 "MAPINDEX_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Position indexes

The length is always the opcode position + 1.
Length is always expressed as the opcode+length bytes,
so it is always 2 or greater.

"
      end

      operation 5860994 "shrink"
	package explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace the large arrays
with a small array.
"
      end

      operation 5861122 "getOp"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an operation position, return the current op.

@param opPos index into op map.
@return the op that corresponds to the opPos argument.
"
      end

      operation 5861250 "setOp"
	public explicit_return_type "void"
	nparams 2
	  param in name "opPos" explicit_type "int"
	  param in name "value" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the op at index to the given int.

@param opPos index into op map.
@param value Value to set
"
      end

      operation 5861378 "getNextOpPos"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an operation position, return the end position, i.e. the
beginning of the next operation.

@param opPos An op position of an operation for which there is a size
             entry following.
@return position of next operation in m_opMap.
"
      end

      operation 5861506 "getNextStepPos"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a location step position, return the end position, i.e. the
beginning of the next step.

@param opPos the position of a location step.
@return the position of the next location step.
"
      end

      operation 5861634 "getNextOpPos"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "opMap" explicit_type "int"
	multiplicity "[]"
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an operation position, return the end position, i.e. the
beginning of the next operation.

@param opMap The operations map.
@param opPos index to operation, for which there is a size entry following.
@return position of next operation in m_opMap.
"
      end

      operation 5861762 "getFirstPredicateOpPos"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an FROM_stepType position, return the position of the
first predicate, if there is one, or else this will point
to the end of the FROM_stepType.
Example:
 int posOfPredicate = xpath.getNextOpPos(stepPos);
 boolean hasPredicates =
           OpCodes.OP_PREDICATE == xpath.getOp(posOfPredicate);

@param opPos position of FROM_stepType op.
@return position of predicate in FROM_stepType structure.
"
      end

      operation 5861890 "error"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the user of an error, and probably throw an
exception.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5862018 "getFirstChildPos"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Go to the first child of a given operation.

@param opPos position of operation.

@return The position of the first child of the operation.
"
      end

      operation 5862146 "getArgLength"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the length of an operation.

@param opPos The position of the operation in the op map.

@return The size of the operation.
"
      end

      operation 5862274 "getArgLengthOfStep"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a location step, get the length of that step.

@param opPos Position of location step in op map.

@return The length of the step.
"
      end

      operation 5862402 "getFirstChildPosOfStep"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "opPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the first child position of a given location step.

@param opPos Position of location step in the location map.

@return The first child position of the step.
"
      end

      operation 5862530 "getStepTestType"
	public explicit_return_type "int"
	nparams 1
	  param in name "opPosOfStep" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the test type of the step, i.e. NODETYPE_XXX value.

@param opPosOfStep The position of the FROM_XXX step.

@return NODETYPE_XXX value.
"
      end

      operation 5862658 "getStepNS"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "opPosOfStep" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the namespace of the step.

@param opPosOfStep The position of the FROM_XXX step.

@return The step's namespace, NodeTest.WILD, or null for null namespace.
"
      end

      operation 5862786 "getStepLocalName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "opPosOfStep" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the local name of the step.
@param opPosOfStep The position of the FROM_XXX step.

@return OpCodes.EMPTY, OpCodes.ELEMWILDCARD, or the local name.
"
      end
    end

    class 811906 "OpMapVector"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
Like IntVector, but used only for the OpMap array.  Length of array
is kept in the m_lengthPos position of the array.  Only the required methods
are in included here.
@xsl.usage internal
"
      attribute 1276546 "m_blocksize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of blocks to allocate          
"
      end

      attribute 1276674 "m_map"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Array of ints          
 IntStack is trying to see this directly"
      end

      attribute 1276802 "m_lengthPos"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Position where size of array is kept          
"
      end

      attribute 1276930 "m_mapSize"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of array          
"
      end

      operation 5871874 "OpMapVector"
	public explicit_return_type ""
	nparams 3
	  param in name "blocksize" explicit_type "int"
	  param in name "increaseSize" explicit_type "int"
	  param in name "lengthPos" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a OpMapVector, using the given block size.

@param blocksize Size of block to allocate
"
      end

      operation 5872002 "elementAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the nth element.

@param i index of object to get

@return object at given index
"
      end

      operation 5872130 "setElementAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the component at the specified index of this vector to be the
specified object. The previous component at that position is discarded.

The index must be a value greater than or equal to 0 and less
than the current size of the vector.

@param value object to set
@param index Index of where to set the object
"
      end

      operation 5872258 "setToSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the array to the supplied size.  No checking is done.

@param size The size to trim to.
"
      end
    end

    class 812034 "FuncLoader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Lazy load of functions into the function table as needed, so we don't
have to load all the functions allowed in XPath and XSLT on startup.
@xsl.usage advanced
"
      attribute 1262978 "m_funcID"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The function ID, which may correspond to one of the FUNC_XXX values
 found in {@link com.sun.org.apache.xpath.internal.compiler.FunctionTable}, but may
 be a value installed by an external module.  
"
      end

      classrelation 2591106 // m_funcName (<unidirectional association>)
	relation 2591106 --->
	  a role_name "m_funcName" private
	    comment " The class name of the function.  Must not be null.   
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2591106 // m_funcName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 5868930 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the local class name of the function class.  If function name does
not have a '.' in it, it is assumed to be relative to
'com.sun.org.apache.xpath.internal.functions'.

@return The class name of the {com.sun.org.apache.xpath.internal.functions.Function} class.
"
      end

      operation 5869058 "FuncLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "funcName" type class_ref 128130 // String
	  param in name "funcID" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a function loader

@param funcName The class name of the {com.sun.org.apache.xpath.internal.functions.Function}
            class, which, if it does not have a '.' in it, is assumed to
            be relative to 'com.sun.org.apache.xpath.internal.functions'.
@param funcID  The function ID, which may correspond to one of the FUNC_XXX
   values found in {@link com.sun.org.apache.xpath.internal.compiler.FunctionTable}, but may
   be a value installed by an external module.
"
      end

      operation 5869186 "getFunction"
	package return_type class_ref 775554 // Function
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a Function instance that this instance is liaisoning for.

@return non-null reference to Function derivative.

@throws javax.xml.transform.TransformerException if ClassNotFoundException,
   IllegalAccessException, or InstantiationException is thrown.
"
      end
    end

    class 812162 "Keywords"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Table of strings to operation code lookups.

@xsl.usage internal
"
      classrelation 2591746 // m_keywords (<unidirectional association>)
	relation 2591746 --->
	  a role_name "m_keywords" class_relation const_relation private
	    comment "
Table of keywords to opcode associations.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2591746 // m_keywords (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2591874 // m_axisnames (<unidirectional association>)
	relation 2591874 --->
	  a role_name "m_axisnames" class_relation const_relation private
	    comment "
Table of axes names to opcode associations.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2591874 // m_axisnames (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2592002 // m_nodetests (<unidirectional association>)
	relation 2592002 --->
	  a role_name "m_nodetests" class_relation const_relation private
	    comment "
Table of function name to function ID associations.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2592002 // m_nodetests (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2592130 // m_nodetypes (<unidirectional association>)
	relation 2592130 --->
	  a role_name "m_nodetypes" class_relation const_relation private
	    comment "
Table of node type strings to opcode associations.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Integer> ${name}${value};
"
	    classrelation_ref 2592130 // m_nodetypes (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 2592258 // FROM_ANCESTORS_STRING (<unidirectional association>)
	relation 2592258 --->
	  a role_name "FROM_ANCESTORS_STRING" init_value " \"ancestor\"" class_relation const_relation private
	    comment "
ancestor axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592258 // FROM_ANCESTORS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2592386 // FROM_ANCESTORS_OR_SELF_STRING (<unidirectional association>)
	relation 2592386 --->
	  a role_name "FROM_ANCESTORS_OR_SELF_STRING" init_value " \"ancestor-or-self\"" class_relation const_relation private
	    comment "
ancestor-or-self axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592386 // FROM_ANCESTORS_OR_SELF_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2592514 // FROM_ATTRIBUTES_STRING (<unidirectional association>)
	relation 2592514 --->
	  a role_name "FROM_ATTRIBUTES_STRING" init_value " \"attribute\"" class_relation const_relation private
	    comment "
attribute axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592514 // FROM_ATTRIBUTES_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2592642 // FROM_CHILDREN_STRING (<unidirectional association>)
	relation 2592642 --->
	  a role_name "FROM_CHILDREN_STRING" init_value " \"child\"" class_relation const_relation private
	    comment "
child axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592642 // FROM_CHILDREN_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2592770 // FROM_DESCENDANTS_STRING (<unidirectional association>)
	relation 2592770 --->
	  a role_name "FROM_DESCENDANTS_STRING" init_value " \"descendant\"" class_relation const_relation private
	    comment "
descendant-or-self axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592770 // FROM_DESCENDANTS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2592898 // FROM_DESCENDANTS_OR_SELF_STRING (<unidirectional association>)
	relation 2592898 --->
	  a role_name "FROM_DESCENDANTS_OR_SELF_STRING" init_value " \"descendant-or-self\"" class_relation const_relation private
	    comment "
ancestor axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2592898 // FROM_DESCENDANTS_OR_SELF_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593026 // FROM_FOLLOWING_STRING (<unidirectional association>)
	relation 2593026 --->
	  a role_name "FROM_FOLLOWING_STRING" init_value " \"following\"" class_relation const_relation private
	    comment "
following axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593026 // FROM_FOLLOWING_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593154 // FROM_FOLLOWING_SIBLINGS_STRING (<unidirectional association>)
	relation 2593154 --->
	  a role_name "FROM_FOLLOWING_SIBLINGS_STRING" init_value " \"following-sibling\"" class_relation const_relation private
	    comment "
following-sibling axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593154 // FROM_FOLLOWING_SIBLINGS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593282 // FROM_PARENT_STRING (<unidirectional association>)
	relation 2593282 --->
	  a role_name "FROM_PARENT_STRING" init_value " \"parent\"" class_relation const_relation private
	    comment "
parent axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593282 // FROM_PARENT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593410 // FROM_PRECEDING_STRING (<unidirectional association>)
	relation 2593410 --->
	  a role_name "FROM_PRECEDING_STRING" init_value " \"preceding\"" class_relation const_relation private
	    comment "
preceding axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593410 // FROM_PRECEDING_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593538 // FROM_PRECEDING_SIBLINGS_STRING (<unidirectional association>)
	relation 2593538 --->
	  a role_name "FROM_PRECEDING_SIBLINGS_STRING" init_value " \"preceding-sibling\"" class_relation const_relation private
	    comment "
preceding-sibling axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593538 // FROM_PRECEDING_SIBLINGS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593666 // FROM_SELF_STRING (<unidirectional association>)
	relation 2593666 --->
	  a role_name "FROM_SELF_STRING" init_value " \"self\"" class_relation const_relation private
	    comment "
self axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593666 // FROM_SELF_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593794 // FROM_NAMESPACE_STRING (<unidirectional association>)
	relation 2593794 --->
	  a role_name "FROM_NAMESPACE_STRING" init_value " \"namespace\"" class_relation const_relation private
	    comment "
namespace axes string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593794 // FROM_NAMESPACE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2593922 // FROM_SELF_ABBREVIATED_STRING (<unidirectional association>)
	relation 2593922 --->
	  a role_name "FROM_SELF_ABBREVIATED_STRING" init_value " \".\"" class_relation const_relation private
	    comment "
self axes abreviated string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2593922 // FROM_SELF_ABBREVIATED_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594050 // NODETYPE_COMMENT_STRING (<unidirectional association>)
	relation 2594050 --->
	  a role_name "NODETYPE_COMMENT_STRING" init_value " \"comment\"" class_relation const_relation private
	    comment "
comment node test string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594050 // NODETYPE_COMMENT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594178 // NODETYPE_TEXT_STRING (<unidirectional association>)
	relation 2594178 --->
	  a role_name "NODETYPE_TEXT_STRING" init_value " \"text\"" class_relation const_relation private
	    comment "
text node test string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594178 // NODETYPE_TEXT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594306 // NODETYPE_PI_STRING (<unidirectional association>)
	relation 2594306 --->
	  a role_name "NODETYPE_PI_STRING" init_value " \"processing-instruction\"" class_relation const_relation private
	    comment "
processing-instruction node test string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594306 // NODETYPE_PI_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594434 // NODETYPE_NODE_STRING (<unidirectional association>)
	relation 2594434 --->
	  a role_name "NODETYPE_NODE_STRING" init_value " \"node\"" class_relation const_relation private
	    comment "
Any node test string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594434 // NODETYPE_NODE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594562 // NODETYPE_ANYELEMENT_STRING (<unidirectional association>)
	relation 2594562 --->
	  a role_name "NODETYPE_ANYELEMENT_STRING" init_value " \"*\"" class_relation const_relation private
	    comment "
Wildcard element string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594562 // NODETYPE_ANYELEMENT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594690 // FUNC_CURRENT_STRING (<unidirectional association>)
	relation 2594690 --->
	  a role_name "FUNC_CURRENT_STRING" init_value " \"current\"" class_relation const_relation public
	    comment "
current function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594690 // FUNC_CURRENT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594818 // FUNC_LAST_STRING (<unidirectional association>)
	relation 2594818 --->
	  a role_name "FUNC_LAST_STRING" init_value " \"last\"" class_relation const_relation public
	    comment "
last function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594818 // FUNC_LAST_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2594946 // FUNC_POSITION_STRING (<unidirectional association>)
	relation 2594946 --->
	  a role_name "FUNC_POSITION_STRING" init_value " \"position\"" class_relation const_relation public
	    comment "
position function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2594946 // FUNC_POSITION_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595074 // FUNC_COUNT_STRING (<unidirectional association>)
	relation 2595074 --->
	  a role_name "FUNC_COUNT_STRING" init_value " \"count\"" class_relation const_relation public
	    comment "
count function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595074 // FUNC_COUNT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595202 // FUNC_ID_STRING (<unidirectional association>)
	relation 2595202 --->
	  a role_name "FUNC_ID_STRING" init_value " \"id\"" class_relation const_relation package
	    comment "
id function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595202 // FUNC_ID_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595330 // FUNC_KEY_STRING (<unidirectional association>)
	relation 2595330 --->
	  a role_name "FUNC_KEY_STRING" init_value " \"key\"" class_relation const_relation public
	    comment "
key function string (XSLT).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595330 // FUNC_KEY_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595458 // FUNC_LOCAL_PART_STRING (<unidirectional association>)
	relation 2595458 --->
	  a role_name "FUNC_LOCAL_PART_STRING" init_value " \"local-name\"" class_relation const_relation public
	    comment "
local-name function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595458 // FUNC_LOCAL_PART_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595586 // FUNC_NAMESPACE_STRING (<unidirectional association>)
	relation 2595586 --->
	  a role_name "FUNC_NAMESPACE_STRING" init_value " \"namespace-uri\"" class_relation const_relation public
	    comment "
namespace-uri function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595586 // FUNC_NAMESPACE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595714 // FUNC_NAME_STRING (<unidirectional association>)
	relation 2595714 --->
	  a role_name "FUNC_NAME_STRING" init_value " \"name\"" class_relation const_relation public
	    comment "
name function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595714 // FUNC_NAME_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595842 // FUNC_GENERATE_ID_STRING (<unidirectional association>)
	relation 2595842 --->
	  a role_name "FUNC_GENERATE_ID_STRING" init_value " \"generate-id\"" class_relation const_relation public
	    comment "
generate-id function string (XSLT).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595842 // FUNC_GENERATE_ID_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2595970 // FUNC_NOT_STRING (<unidirectional association>)
	relation 2595970 --->
	  a role_name "FUNC_NOT_STRING" init_value " \"not\"" class_relation const_relation public
	    comment "
not function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2595970 // FUNC_NOT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596098 // FUNC_TRUE_STRING (<unidirectional association>)
	relation 2596098 --->
	  a role_name "FUNC_TRUE_STRING" init_value " \"true\"" class_relation const_relation public
	    comment "
true function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596098 // FUNC_TRUE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596226 // FUNC_FALSE_STRING (<unidirectional association>)
	relation 2596226 --->
	  a role_name "FUNC_FALSE_STRING" init_value " \"false\"" class_relation const_relation public
	    comment "
false function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596226 // FUNC_FALSE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596354 // FUNC_BOOLEAN_STRING (<unidirectional association>)
	relation 2596354 --->
	  a role_name "FUNC_BOOLEAN_STRING" init_value " \"boolean\"" class_relation const_relation public
	    comment "
boolean function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596354 // FUNC_BOOLEAN_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596482 // FUNC_LANG_STRING (<unidirectional association>)
	relation 2596482 --->
	  a role_name "FUNC_LANG_STRING" init_value " \"lang\"" class_relation const_relation public
	    comment "
lang function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596482 // FUNC_LANG_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596610 // FUNC_NUMBER_STRING (<unidirectional association>)
	relation 2596610 --->
	  a role_name "FUNC_NUMBER_STRING" init_value " \"number\"" class_relation const_relation public
	    comment "
number function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596610 // FUNC_NUMBER_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596738 // FUNC_FLOOR_STRING (<unidirectional association>)
	relation 2596738 --->
	  a role_name "FUNC_FLOOR_STRING" init_value " \"floor\"" class_relation const_relation public
	    comment "
floor function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596738 // FUNC_FLOOR_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596866 // FUNC_CEILING_STRING (<unidirectional association>)
	relation 2596866 --->
	  a role_name "FUNC_CEILING_STRING" init_value " \"ceiling\"" class_relation const_relation public
	    comment "
ceiling function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596866 // FUNC_CEILING_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2596994 // FUNC_ROUND_STRING (<unidirectional association>)
	relation 2596994 --->
	  a role_name "FUNC_ROUND_STRING" init_value " \"round\"" class_relation const_relation public
	    comment "
round function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2596994 // FUNC_ROUND_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597122 // FUNC_SUM_STRING (<unidirectional association>)
	relation 2597122 --->
	  a role_name "FUNC_SUM_STRING" init_value " \"sum\"" class_relation const_relation public
	    comment "
sum function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597122 // FUNC_SUM_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597250 // FUNC_STRING_STRING (<unidirectional association>)
	relation 2597250 --->
	  a role_name "FUNC_STRING_STRING" init_value " \"string\"" class_relation const_relation public
	    comment "
string function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597250 // FUNC_STRING_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597378 // FUNC_STARTS_WITH_STRING (<unidirectional association>)
	relation 2597378 --->
	  a role_name "FUNC_STARTS_WITH_STRING" init_value " \"starts-with\"" class_relation const_relation public
	    comment "
starts-with function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597378 // FUNC_STARTS_WITH_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597506 // FUNC_CONTAINS_STRING (<unidirectional association>)
	relation 2597506 --->
	  a role_name "FUNC_CONTAINS_STRING" init_value " \"contains\"" class_relation const_relation public
	    comment "
contains function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597506 // FUNC_CONTAINS_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597634 // FUNC_SUBSTRING_BEFORE_STRING (<unidirectional association>)
	relation 2597634 --->
	  a role_name "FUNC_SUBSTRING_BEFORE_STRING" init_value " \"substring-before\"" class_relation const_relation public
	    comment "
substring-before function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597634 // FUNC_SUBSTRING_BEFORE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597762 // FUNC_SUBSTRING_AFTER_STRING (<unidirectional association>)
	relation 2597762 --->
	  a role_name "FUNC_SUBSTRING_AFTER_STRING" init_value " \"substring-after\"" class_relation const_relation public
	    comment "
substring-after function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597762 // FUNC_SUBSTRING_AFTER_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2597890 // FUNC_NORMALIZE_SPACE_STRING (<unidirectional association>)
	relation 2597890 --->
	  a role_name "FUNC_NORMALIZE_SPACE_STRING" init_value " \"normalize-space\"" class_relation const_relation public
	    comment "
normalize-space function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2597890 // FUNC_NORMALIZE_SPACE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598018 // FUNC_TRANSLATE_STRING (<unidirectional association>)
	relation 2598018 --->
	  a role_name "FUNC_TRANSLATE_STRING" init_value " \"translate\"" class_relation const_relation public
	    comment "
translate function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598018 // FUNC_TRANSLATE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598146 // FUNC_CONCAT_STRING (<unidirectional association>)
	relation 2598146 --->
	  a role_name "FUNC_CONCAT_STRING" init_value " \"concat\"" class_relation const_relation public
	    comment "
concat function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598146 // FUNC_CONCAT_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598274 // FUNC_SYSTEM_PROPERTY_STRING (<unidirectional association>)
	relation 2598274 --->
	  a role_name "FUNC_SYSTEM_PROPERTY_STRING" init_value " \"system-property\"" class_relation const_relation public
	    comment "
system-property function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598274 // FUNC_SYSTEM_PROPERTY_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598402 // FUNC_EXT_FUNCTION_AVAILABLE_STRING (<unidirectional association>)
	relation 2598402 --->
	  a role_name "FUNC_EXT_FUNCTION_AVAILABLE_STRING" init_value " \"function-available\"" class_relation const_relation public
	    comment "
function-available function string (XSLT).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598402 // FUNC_EXT_FUNCTION_AVAILABLE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598530 // FUNC_EXT_ELEM_AVAILABLE_STRING (<unidirectional association>)
	relation 2598530 --->
	  a role_name "FUNC_EXT_ELEM_AVAILABLE_STRING" init_value " \"element-available\"" class_relation const_relation public
	    comment "
element-available function string (XSLT).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598530 // FUNC_EXT_ELEM_AVAILABLE_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598658 // FUNC_SUBSTRING_STRING (<unidirectional association>)
	relation 2598658 --->
	  a role_name "FUNC_SUBSTRING_STRING" init_value " \"substring\"" class_relation const_relation public
	    comment "
substring function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598658 // FUNC_SUBSTRING_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598786 // FUNC_STRING_LENGTH_STRING (<unidirectional association>)
	relation 2598786 --->
	  a role_name "FUNC_STRING_LENGTH_STRING" init_value " \"string-length\"" class_relation const_relation public
	    comment "
string-length function string.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598786 // FUNC_STRING_LENGTH_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2598914 // FUNC_UNPARSED_ENTITY_URI_STRING (<unidirectional association>)
	relation 2598914 --->
	  a role_name "FUNC_UNPARSED_ENTITY_URI_STRING" init_value " \"unparsed-entity-uri\"" class_relation const_relation public
	    comment "
unparsed-entity-uri function string (XSLT).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2598914 // FUNC_UNPARSED_ENTITY_URI_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2599042 // FUNC_DOCLOCATION_STRING (<unidirectional association>)
	relation 2599042 --->
	  a role_name "FUNC_DOCLOCATION_STRING" init_value " \"document-location\"" class_relation const_relation public
	    comment " Proprietary, built in functions

current function string (Proprietary).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599042 // FUNC_DOCLOCATION_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      extra_member 147330 "initialization"
	
	cpp "" ""
	java "  static {
        Map<String, Integer> keywords = new HashMap<>();
        Map<String, Integer> axisnames = new HashMap<>();
        Map<String, Integer> nodetests = new HashMap<>();
        Map<String, Integer> nodetypes = new HashMap<>();

        axisnames.put(FROM_ANCESTORS_STRING, OpCodes.FROM_ANCESTORS);
        axisnames.put(FROM_ANCESTORS_OR_SELF_STRING, OpCodes.FROM_ANCESTORS_OR_SELF);
        axisnames.put(FROM_ATTRIBUTES_STRING, OpCodes.FROM_ATTRIBUTES);
        axisnames.put(FROM_CHILDREN_STRING, OpCodes.FROM_CHILDREN);
        axisnames.put(FROM_DESCENDANTS_STRING, OpCodes.FROM_DESCENDANTS);
        axisnames.put(FROM_DESCENDANTS_OR_SELF_STRING, OpCodes.FROM_DESCENDANTS_OR_SELF);
        axisnames.put(FROM_FOLLOWING_STRING, OpCodes.FROM_FOLLOWING);
        axisnames.put(FROM_FOLLOWING_SIBLINGS_STRING, OpCodes.FROM_FOLLOWING_SIBLINGS);
        axisnames.put(FROM_PARENT_STRING, OpCodes.FROM_PARENT);
        axisnames.put(FROM_PRECEDING_STRING, OpCodes.FROM_PRECEDING);
        axisnames.put(FROM_PRECEDING_SIBLINGS_STRING, OpCodes.FROM_PRECEDING_SIBLINGS);
        axisnames.put(FROM_SELF_STRING, OpCodes.FROM_SELF);
        axisnames.put(FROM_NAMESPACE_STRING, OpCodes.FROM_NAMESPACE);
        m_axisnames = Collections.unmodifiableMap(axisnames);

        nodetypes.put(NODETYPE_COMMENT_STRING, OpCodes.NODETYPE_COMMENT);
        nodetypes.put(NODETYPE_TEXT_STRING, OpCodes.NODETYPE_TEXT);
        nodetypes.put(NODETYPE_PI_STRING, OpCodes.NODETYPE_PI);
        nodetypes.put(NODETYPE_NODE_STRING, OpCodes.NODETYPE_NODE);
        nodetypes.put(NODETYPE_ANYELEMENT_STRING, OpCodes.NODETYPE_ANYELEMENT);
        m_nodetypes = Collections.unmodifiableMap(nodetypes);

        keywords.put(FROM_SELF_ABBREVIATED_STRING, OpCodes.FROM_SELF);
        keywords.put(FUNC_ID_STRING, FunctionTable.FUNC_ID);
        keywords.put(FUNC_KEY_STRING, FunctionTable.FUNC_KEY);
        m_keywords = Collections.unmodifiableMap(keywords);

        nodetests.put(NODETYPE_COMMENT_STRING, OpCodes.NODETYPE_COMMENT);
        nodetests.put(NODETYPE_TEXT_STRING, OpCodes.NODETYPE_TEXT);
        nodetests.put(NODETYPE_PI_STRING, OpCodes.NODETYPE_PI);
        nodetests.put(NODETYPE_NODE_STRING, OpCodes.NODETYPE_NODE);
        m_nodetests = Collections.unmodifiableMap(nodetests);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 5870082 "getAxisName"
	class_operation package return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5870210 "lookupNodeTest"
	class_operation package return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5870338 "getKeyWord"
	class_operation package return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5870466 "getNodeType"
	class_operation package return_type class_ref 137602 // Integer
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 812290 "Lexer"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is in charge of lexical processing of the XPath
expression into tokens.
"
      classrelation 2599170 // m_compiler (<unidirectional association>)
	relation 2599170 --->
	  a role_name "m_compiler" private
	    comment "
The target XPath.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599170 // m_compiler (<unidirectional association>)
	  b parent class_ref 776450 // Compiler
      end

      classrelation 2599298 // m_namespaceContext (<unidirectional association>)
	relation 2599298 --->
	  a role_name "m_namespaceContext" package
	    comment "
The prefix resolver to map prefixes to namespaces in the XPath.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599298 // m_namespaceContext (<unidirectional association>)
	  b parent class_ref 635650 // PrefixResolver
      end

      classrelation 2599426 // m_processor (<unidirectional association>)
	relation 2599426 --->
	  a role_name "m_processor" package
	    comment "
The XPath processor object.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599426 // m_processor (<unidirectional association>)
	  b parent class_ref 812418 // XPathParser
      end

      attribute 1267970 "TARGETEXTRA"
	class_attribute const_attribute package explicit_type "int"
	init_value " 10000"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This value is added to each element name in the TARGETEXTRA
that is a 'target' (right-most top-level element name).

"
      end

      attribute 1268098 "m_patternMap"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[100]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ignore this, it is going away.
This holds a map to the m_tokenQueue that tells where the top-level elements are.
It is used for pattern matching so the m_tokenQueue can be walked backwards.
Each element that is a 'target', (right-most top level element name) has
TARGETEXTRA added to it.


"
      end

      attribute 1268226 "m_patternMapSize"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Ignore this, it is going away.
The number of elements that m_patternMap maps;

"
      end

      operation 5870594 "Lexer"
	package explicit_return_type ""
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param inout name "resolver" type class_ref 635650 // PrefixResolver
	  param inout name "xpathProcessor" type class_ref 812418 // XPathParser
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a Lexer object.

@param compiler The owning compiler for this lexer.
@param resolver The prefix resolver for mapping qualified name prefixes
                to namespace URIs.
@param xpathProcessor The parser that is processing strings to opcodes.
"
      end

      operation 5870722 "tokenize"
	package explicit_return_type "void"
	nparams 1
	  param inout name "pat" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Walk through the expression and build a token queue, and a map of the top-level
elements.
@param pat XSLT Expression.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5870850 "tokenize"
	package explicit_return_type "void"
	nparams 2
	  param inout name "pat" type class_ref 128130 // String
	  param inout name "targetStrings" type class_ref 141442 // Vector
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Walk through the expression and build a token queue, and a map of the top-level
elements.
@param pat XSLT Expression.
@param targetStrings Vector to hold Strings, may be null.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5870978 "mapPatternElemPos"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "nesting" explicit_type "int"
	  param inout name "isStart" explicit_type "boolean"
	  param inout name "isAttrName" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Record the current position on the token queue as long as
this is a top-level element.  Must be called before the
next token is added to the m_tokenQueue.

@param nesting The nesting count for the pattern element.
@param isStart true if this is the start of a pattern.
@param isAttrName true if we have determined that this is an attribute name.

@return true if this is the start of a pattern.
"
      end

      operation 5871106 "getTokenQueuePosFromMap"
	private explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a map pos, return the corresponding token queue pos.

@param i The index in the m_patternMap.

@return the token queue position.
"
      end

      operation 5871234 "resetTokenMark"
	private explicit_return_type "void"
	nparams 1
	  param in name "mark" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset token queue mark and m_token to a
given position.
@param mark The new position.
"
      end

      operation 5871362 "getKeywordToken"
	package explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a string, return the corresponding keyword token.

@param key The keyword.

@return An opcode value.
"
      end

      operation 5871490 "recordTokenString"
	private explicit_return_type "void"
	nparams 1
	  param inout name "targetStrings" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Record the current token in the passed vector.

@param targetStrings Vector of string.
"
      end

      operation 5871618 "addToTokenQueue"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a token to the token queue.


@param s The token.
"
      end

      operation 5871746 "mapNSTokens"
	private explicit_return_type "int"
	nparams 4
	  param inout name "pat" type class_ref 128130 // String
	  param in name "startSubstring" explicit_type "int"
	  param in name "posOfNSSep" explicit_type "int"
	  param in name "posOfScan" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When a seperator token is found, see if there's a element name or
the like to map.

@param pat The XPath name string.
@param startSubstring The start of the name string.
@param posOfNSSep The position of the namespace seperator (':').
@param posOfScan The end of the name index.

@throws javax.xml.transform.TransformerException

@return -1 always.
"
      end
    end

    class 812418 "XPathParser"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Tokenizes and parses XPath expressions. This should really be named
XPathParserImpl, and may be renamed in the future.
@xsl.usage general
"
      classrelation 2600322 // CONTINUE_AFTER_FATAL_ERROR (<unidirectional association>)
	relation 2600322 --->
	  a role_name "CONTINUE_AFTER_FATAL_ERROR" init_value "\"CONTINUE_AFTER_FATAL_ERROR\"" class_relation const_relation public
	    comment " %REVIEW% Is there a better way of doing this?
 Upside is minimum object churn. Downside is that we don't have a useful
 backtrace in the exception itself -- but we don't expect to need one.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600322 // CONTINUE_AFTER_FATAL_ERROR (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2600450 // m_ops (<unidirectional association>)
	relation 2600450 --->
	  a role_name "m_ops" private
	    comment "
The XPath to be processed.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600450 // m_ops (<unidirectional association>)
	  b parent class_ref 811778 // OpMap
      end

      classrelation 2600578 // m_token (<unidirectional association>)
	relation 2600578 --->
	  a role_name "m_token" package
	    comment "
The next token in the pattern.

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600578 // m_token (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 1277058 "m_tokenChar"
	package explicit_type "char"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The first char in m_token, the theory being that this
is an optimization because we won't have to do charAt(0) as
often.

"
      end

      attribute 1277186 "m_queueMark"
	package explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The position in the token queue is tracked by m_queueMark.

"
      end

      attribute 1277314 "FILTER_MATCH_FAILED"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Results from checking FilterExpr syntax

"
      end

      attribute 1277442 "FILTER_MATCH_PRIMARY"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 1277570 "FILTER_MATCH_PREDICATES"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 5872386 "XPathParser"
	public explicit_return_type ""
	nparams 2
	  param inout name "errorListener" type class_ref 583170 // ErrorListener
	  param inout name "sourceLocator" type class_ref 617346 // SourceLocator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The parser constructor.
"
      end

      classrelation 2600706 // m_namespaceContext (<unidirectional association>)
	relation 2600706 --->
	  a role_name "m_namespaceContext" package
	    comment "
The prefix resolver to map prefixes to namespaces in the OpMap.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600706 // m_namespaceContext (<unidirectional association>)
	  b parent class_ref 635650 // PrefixResolver
      end

      operation 5872514 "initXPath"
	public explicit_return_type "void"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an string, init an XPath object for selections,
in order that a parse doesn't
have to be done each time the expression is evaluated.

@param compiler The compiler object.
@param expression A string conforming to the XPath grammar.
@param namespaceContext An object that is able to resolve prefixes in
the XPath to namespaces.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5872642 "initMatchPattern"
	public explicit_return_type "void"
	nparams 3
	  param inout name "compiler" type class_ref 776450 // Compiler
	  param inout name "expression" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 635650 // PrefixResolver
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an string, init an XPath object for pattern matches,
in order that a parse doesn't
have to be done each time the expression is evaluated.
@param compiler The XPath object to be initialized.
@param expression A String representing the XPath.
@param namespaceContext An object that is able to resolve prefixes in
the XPath to namespaces.

@throws javax.xml.transform.TransformerException
"
      end

      classrelation 2600834 // m_errorListener (<unidirectional association>)
	relation 2600834 --->
	  a role_name "m_errorListener" private
	    comment " The error listener where syntax errors are to be sent.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600834 // m_errorListener (<unidirectional association>)
	  b parent class_ref 583170 // ErrorListener
      end

      classrelation 2600962 // m_sourceLocator (<unidirectional association>)
	relation 2600962 --->
	  a role_name "m_sourceLocator" package
	    comment " The source location of the XPath. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600962 // m_sourceLocator (<unidirectional association>)
	  b parent class_ref 617346 // SourceLocator
      end

      classrelation 2601090 // m_functionTable (<unidirectional association>)
	relation 2601090 --->
	  a role_name "m_functionTable" private
	    comment " The table contains build-in functions and customized functions 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2601090 // m_functionTable (<unidirectional association>)
	  b parent class_ref 782850 // FunctionTable
      end

      operation 5872770 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 583170 // ErrorListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allow an application to register an error event handler, where syntax
errors will be sent.  If the error listener is not set, syntax errors
will be sent to System.err.

@param handler Reference to error listener where syntax errors will be
               sent.
"
      end

      operation 5872898 "getErrorListener"
	public return_type class_ref 583170 // ErrorListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current error listener.

@return The error listener, which should not normally be null, but may be.
"
      end

      operation 5873026 "tokenIs"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether m_token matches the target string.

@param s A string reference or null.

@return If m_token is null, returns false (or true if s is also null), or
return true if the current token matches the string, else false.
"
      end

      operation 5873154 "tokenIs"
	package explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether m_tokenChar==c.

@param c A character to be tested.

@return If m_token is null, returns false, or return true if c matches
        the current token.
"
      end

      operation 5873282 "lookahead"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "c" explicit_type "char"
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look ahead of the current token in order to
make a branching decision.

@param c the character to be tested for.
@param n number of tokens to look ahead.  Must be
greater than 1.

@return true if the next token matches the character argument.
"
      end

      operation 5873410 "lookbehind"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "c" explicit_type "char"
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look behind the first character of the current token in order to
make a branching decision.

@param c the character to compare it to.
@param n number of tokens to look behind.  Must be
greater than 1.  Note that the look behind terminates
at either the beginning of the string or on a '|'
character.  Because of this, this method should only
be used for pattern matching.

@return true if the token behind the current token matches the character
        argument.
"
      end

      operation 5873538 "lookbehindHasToken"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "look behind the current token in order to
see if there is a useable token.

@param n number of tokens to look behind.  Must be
greater than 1.  Note that the look behind terminates
at either the beginning of the string or on a '|'
character.  Because of this, this method should only
be used for pattern matching.

@return true if look behind has a token, false otherwise.
"
      end

      operation 5873666 "lookahead"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param in name "n" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look ahead of the current token in order to
make a branching decision.

@param s the string to compare it to.
@param n number of tokens to lookahead.  Must be
greater than 1.

@return true if the token behind the current token matches the string
        argument.
"
      end

      operation 5873794 "nextToken"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the next token from the command and
store it in m_token string.
"
      end

      operation 5873922 "getTokenRelative"
	private return_type class_ref 128130 // String
	nparams 1
	  param in name "i" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a token relative to the current token.

@param i Position relative to current token.

@return The string at the given index, or null if the index is out
        of range.
"
      end

      operation 5874050 "prevToken"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the previous token from the command and
store it in m_token string.
"
      end

      operation 5874178 "consumeExpected"
	private explicit_return_type "void"
	nparams 1
	  param inout name "expected" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume an expected token, throwing an exception if it
isn't there.

@param expected The string to be expected.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5874306 "consumeExpected"
	private explicit_return_type "void"
	nparams 1
	  param in name "expected" explicit_type "char"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume an expected token, throwing an exception if it
isn't there.

@param expected the character to be expected.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5874434 "warn"
	package explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warn the user of a problem.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5874562 "assertion"
	private explicit_return_type "void"
	nparams 2
	  param inout name "b" explicit_type "boolean"
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the user of an assertion error, and probably throw an
exception.

@param b  If false, a runtime exception will be thrown.
@param msg The assertion message, which should be informative.

@throws RuntimeException if the b argument is false.
"
      end

      operation 5874690 "error"
	package explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the user of an error, and probably throw an
exception.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5874818 "errorForDOM3"
	package explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is added to support DOM 3 XPath API.
<p>
This method is exactly like error(String, Object[]); except that
the underlying TransformerException is
XpathStylesheetDOM3Exception (which extends TransformerException).
<p>
So older XPath code in Xalan is not affected by this. To older XPath code
the behavior of whether error() or errorForDOM3() is called because it is
always catching TransformerException objects and is oblivious to
the new subclass of XPathStylesheetDOM3Exception. Older XPath code
runs as before.
<p>
However, newer DOM3 XPath code upon catching a TransformerException can
can check if the exception is an instance of XPathStylesheetDOM3Exception
and take appropriate action.

@param msg An error msgkey that corresponds to one of the constants found
           in {@link com.sun.org.apache.xpath.internal.res.XPATHErrorResources}, which is
           a key for a format string.
@param args An array of arguments represented in the format string, which
            may be null.

@throws TransformerException if the current ErrorListoner determines to
                             throw an exception.
"
      end

      operation 5874946 "dumpRemainingTokenQueue"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump the remaining token queue.
Thanks to Craig for this.

@return A dump of the remaining token queue, which may be appended to
        an error message.
"
      end

      operation 5875074 "getFunctionToken"
	package explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a string, return the corresponding function token.

@param key A local name of a function.

@return   The function ID, which may correspond to one of the FUNC_XXX
   values found in {@link com.sun.org.apache.xpath.internal.compiler.FunctionTable}, but may
   be a value installed by an external module.
"
      end

      operation 5875202 "insertOp"
	package explicit_return_type "void"
	nparams 3
	  param in name "pos" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "op" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert room for operation.  This will NOT set
the length value of the operation, but will update
the length value for the total expression.

@param pos The position where the op is to be inserted.
@param length The length of the operation space in the op map.
@param op The op code to the inserted.
"
      end

      operation 5875330 "appendOp"
	package explicit_return_type "void"
	nparams 2
	  param in name "length" explicit_type "int"
	  param in name "op" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Insert room for operation.  This WILL set
the length value of the operation, and will update
the length value for the total expression.

@param length The length of the operation.
@param op The op code to the inserted.
"
      end

      operation 5875458 "Expr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ============= EXPRESSIONS FUNCTIONS =================



Expr  ::=  OrExpr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5875586 "OrExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

OrExpr  ::=  AndExpr
| OrExpr 'or' AndExpr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5875714 "AndExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

AndExpr  ::=  EqualityExpr
| AndExpr 'and' EqualityExpr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5875842 "EqualityExpr"
	protected explicit_return_type "int"
	nparams 1
	  param in name "addPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@returns an Object which is either a String, a Number, a Boolean, or a vector
of nodes.

EqualityExpr  ::=  RelationalExpr
| EqualityExpr '=' RelationalExpr


@param addPos Position where expression is to be added, or -1 for append.

@return the position at the end of the equality expression.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5875970 "RelationalExpr"
	protected explicit_return_type "int"
	nparams 1
	  param in name "addPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment ".
@returns an Object which is either a String, a Number, a Boolean, or a vector
of nodes.

RelationalExpr  ::=  AdditiveExpr
| RelationalExpr '<' AdditiveExpr
| RelationalExpr '>' AdditiveExpr
| RelationalExpr '<=' AdditiveExpr
| RelationalExpr '>=' AdditiveExpr


@param addPos Position where expression is to be added, or -1 for append.

@return the position at the end of the relational expression.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5876098 "AdditiveExpr"
	protected explicit_return_type "int"
	nparams 1
	  param in name "addPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This has to handle construction of the operations so that they are evaluated
in pre-fix order.  So, for 9+7-6, instead of |+|9|-|7|6|, this needs to be
evaluated as |-|+|9|7|6|.

AdditiveExpr  ::=  MultiplicativeExpr
| AdditiveExpr '+' MultiplicativeExpr
| AdditiveExpr '-' MultiplicativeExpr


@param addPos Position where expression is to be added, or -1 for append.

@return the position at the end of the equality expression.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5876226 "MultiplicativeExpr"
	protected explicit_return_type "int"
	nparams 1
	  param in name "addPos" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This has to handle construction of the operations so that they are evaluated
in pre-fix order.  So, for 9+7-6, instead of |+|9|-|7|6|, this needs to be
evaluated as |-|+|9|7|6|.

MultiplicativeExpr  ::=  UnaryExpr
| MultiplicativeExpr MultiplyOperator UnaryExpr
| MultiplicativeExpr 'div' UnaryExpr
| MultiplicativeExpr 'mod' UnaryExpr
| MultiplicativeExpr 'quo' UnaryExpr

@param addPos Position where expression is to be added, or -1 for append.

@return the position at the end of the equality expression.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5876354 "UnaryExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
UnaryExpr  ::=  UnionExpr
| '-' UnaryExpr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5876482 "StringExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
StringExpr  ::=  Expr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5876610 "BooleanExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

StringExpr  ::=  Expr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5876738 "NumberExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

NumberExpr  ::=  Expr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5876866 "UnionExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The context of the right hand side expressions is the context of the
left hand side expression. The results of the right hand side expressions
are node sets. The result of the left hand side UnionExpr is the union
of the results of the right hand side expressions.


UnionExpr    ::=    PathExpr
| UnionExpr '|' PathExpr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5876994 "PathExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "PathExpr  ::=  LocationPath
| FilterExpr
| FilterExpr '/' RelativeLocationPath
| FilterExpr '//' RelativeLocationPath

@throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide
the error condition is severe enough to halt processing.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5877122 "FilterExpr"
	protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

FilterExpr  ::=  PrimaryExpr
| FilterExpr Predicate

@throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide
the error condition is severe enough to halt processing.

@return  FILTER_MATCH_PREDICATES, if this method successfully matched a
         FilterExpr with one or more Predicates;
         FILTER_MATCH_PRIMARY, if this method successfully matched a
         FilterExpr that was just a PrimaryExpr; or
         FILTER_MATCH_FAILED, if this method did not match a FilterExpr

@throws javax.xml.transform.TransformerException
"
      end

      operation 5877250 "PrimaryExpr"
	protected explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
PrimaryExpr  ::=  VariableReference
| '(' Expr ')'
| Literal
| Number
| FunctionCall

@return true if this method successfully matched a PrimaryExpr

@throws javax.xml.transform.TransformerException

"
      end

      operation 5877378 "Argument"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Argument    ::=    Expr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5877506 "FunctionCall"
	protected explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
FunctionCall    ::=    FunctionName '(' ( Argument ( ',' Argument)*)? ')'

@return true if, and only if, a FunctionCall was matched

@throws javax.xml.transform.TransformerException
"
      end

      operation 5877634 "LocationPath"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ============= GRAMMAR FUNCTIONS =================


LocationPath ::= RelativeLocationPath
| AbsoluteLocationPath


@throws javax.xml.transform.TransformerException
"
      end

      operation 5877762 "RelativeLocationPath"
	protected explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
RelativeLocationPath ::= Step
| RelativeLocationPath '/' Step
| AbbreviatedRelativeLocationPath

@returns true if, and only if, a RelativeLocationPath was matched

@throws javax.xml.transform.TransformerException
"
      end

      operation 5877890 "Step"
	protected explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Step    ::=    Basis Predicate
| AbbreviatedStep

@returns false if step was empty (or only a '/'); true, otherwise

@throws javax.xml.transform.TransformerException
"
      end

      operation 5878018 "Basis"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Basis    ::=    AxisName '::' NodeTest
| AbbreviatedBasis

@throws javax.xml.transform.TransformerException
"
      end

      operation 5878146 "AxisName"
	protected explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Basis    ::=    AxisName '::' NodeTest
| AbbreviatedBasis

@return FROM_XXX axes type, found in {@link com.sun.org.apache.xpath.internal.compiler.Keywords}.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5878274 "NodeTest"
	protected explicit_return_type "void"
	nparams 1
	  param in name "axesType" explicit_type "int"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
NodeTest    ::=    WildcardName
| NodeType '(' ')'
| 'processing-instruction' '(' Literal ')'

@param axesType FROM_XXX axes type, found in {@link com.sun.org.apache.xpath.internal.compiler.Keywords}.

@throws javax.xml.transform.TransformerException
"
      end

      operation 5878402 "Predicate"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Predicate ::= '[' PredicateExpr ']'


@throws javax.xml.transform.TransformerException
"
      end

      operation 5878530 "PredicateExpr"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
PredicateExpr ::= Expr


@throws javax.xml.transform.TransformerException
"
      end

      operation 5878658 "QName"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "QName ::=  (Prefix ':')? LocalPart
Prefix ::=  NCName
LocalPart ::=  NCName

@throws javax.xml.transform.TransformerException
"
      end

      operation 5878786 "NCName"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NCName ::=  (Letter | '_') (NCNameChar)
NCNameChar ::=  Letter | Digit | '.' | '-' | '_' | CombiningChar | Extender
"
      end

      operation 5878914 "Literal"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value of the Literal is the sequence of characters inside
the \" or ' characters>.

Literal  ::=  '\"' [^\"]* '\"'
| \"'\" [^']* \"'\"


@throws javax.xml.transform.TransformerException
"
      end

      operation 5879042 "Number"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Number ::= [0-9]+('.'[0-9]+)? | '.'[0-9]+


@throws javax.xml.transform.TransformerException
"
      end

      operation 5879170 "Pattern"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ============= PATTERN FUNCTIONS =================


Pattern  ::=  LocationPathPattern
| Pattern '|' LocationPathPattern


@throws javax.xml.transform.TransformerException
"
      end

      operation 5879298 "LocationPathPattern"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "

LocationPathPattern  ::=  '/' RelativePathPattern?
| IdKeyPattern (('/' | '//') RelativePathPattern)?
| '//'? RelativePathPattern


@throws javax.xml.transform.TransformerException
"
      end

      operation 5879426 "IdKeyPattern"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
IdKeyPattern  ::=  'id' '(' Literal ')'
| 'key' '(' Literal ',' Literal ')'
(Also handle doc())


@throws javax.xml.transform.TransformerException
"
      end

      operation 5879554 "RelativePathPattern"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
RelativePathPattern  ::=  StepPattern
| RelativePathPattern '/' StepPattern
| RelativePathPattern '//' StepPattern

@throws javax.xml.transform.TransformerException
"
      end

      operation 5879682 "StepPattern"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "isLeadingSlashPermitted" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
StepPattern  ::=  AbbreviatedNodeTestStep

@param isLeadingSlashPermitted a boolean indicating whether a slash can
       appear at the start of this step

@return boolean indicating whether a slash following the step was consumed

@throws javax.xml.transform.TransformerException
"
      end

      operation 5879810 "AbbreviatedNodeTestStep"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "isLeadingSlashPermitted" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 583554 // TransformerException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
AbbreviatedNodeTestStep    ::=    '@'? NodeTest Predicate

@param isLeadingSlashPermitted a boolean indicating whether a slash can
       appear at the start of this step

@return boolean indicating whether a slash following the step was consumed

@throws javax.xml.transform.TransformerException
"
      end
    end

    class 812546 "OpCodes"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Operations codes for XPath.

Code for the descriptions of the operations codes:
[UPPER CASE] indicates a literal value,
[lower case] is a description of a value,
     ([length] always indicates the length of the operation,
      including the operations code and the length integer.)
{UPPER CASE} indicates the given production,
{description} is the description of a new production,
     (For instance, {boolean expression} means some expression
      that should be resolved to a boolean.)
 * means that it occurs zero or more times,
 + means that it occurs one or more times,
 ? means that it is optional.

returns: indicates what the production should return.
"
      attribute 1268354 "ENDOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[ENDOP]
Some operators may like to have a terminator.
@xsl.usage advanced

"
      end

      attribute 1268482 "EMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[EMPTY]
Empty slot to indicate NULL.

"
      end

      attribute 1268610 "ELEMWILDCARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[ELEMWILDCARD]
Means ELEMWILDCARD (\"*\"), used instead
of string index in some places.
@xsl.usage advanced

"
      end

      attribute 1268738 "OP_XPATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_XPATH]
[length]
 {expression}

returns:
 XNodeSet
 XNumber
 XString
 XBoolean
 XRTree
 XObject
@xsl.usage advanced

"
      end

      attribute 1268866 "OP_OR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_OR]
[length]
 {boolean expression}
 {boolean expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1268994 "OP_AND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_AND]
[length]
 {boolean expression}
 {boolean expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269122 "OP_NOTEQUALS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_NOTEQUALS]
[length]
 {expression}
 {expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269250 "OP_EQUALS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_EQUALS]
[length]
 {expression}
 {expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269378 "OP_LTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_LTE] (less-than-or-equals)
[length]
 {number expression}
 {number expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269506 "OP_LT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_LT] (less-than)
[length]
 {number expression}
 {number expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269634 "OP_GTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_GTE] (greater-than-or-equals)
[length]
 {number expression}
 {number expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269762 "OP_GT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_GT] (greater-than)
[length]
 {number expression}
 {number expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1269890 "OP_PLUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_PLUS]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270018 "OP_MINUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_MINUS]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270146 "OP_MULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_MULT]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270274 "OP_DIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_DIV]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270402 "OP_MOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_MOD]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270530 "OP_QUO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_QUO]
[length]
 {number expression}
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270658 "OP_NEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_NEG]
[length]
 {number expression}

returns:
 XNumber
@xsl.usage advanced

"
      end

      attribute 1270786 "OP_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_STRING] (cast operation)
[length]
 {expression}

returns:
 XString
@xsl.usage advanced

"
      end

      attribute 1270914 "OP_BOOL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_BOOL] (cast operation)
[length]
 {expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1271042 "OP_NUMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_NUMBER] (cast operation)
[length]
 {expression}

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1271170 "OP_UNION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_UNION]
[length]
 {PathExpr}+

returns:
 XNodeSet
@xsl.usage advanced

"
      end

      attribute 1271298 "OP_LITERAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_LITERAL]
[3]
[index to token]

returns:
 XString
@xsl.usage advanced

"
      end

      attribute 1271426 "FIRST_NODESET_OP"
	class_attribute const_attribute package explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The low opcode for nodesets, needed by getFirstPredicateOpPos and
 getNextStepPos.          
"
      end

      attribute 1271554 "OP_VARIABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_VARIABLE]
[4]
[index to namespace token, or EMPTY]
[index to function name token]

returns:
 XString
@xsl.usage advanced

"
      end

      attribute 1271682 "OP_GROUP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_GROUP]
[length]
 {expression}

returns:
 XNodeSet
 XNumber
 XString
 XBoolean
 XRTree
 XObject
@xsl.usage advanced

"
      end

      attribute 1271810 "OP_EXTFUNCTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_EXTFUNCTION] (Extension function.)
[length]
[index to namespace token]
[index to function name token]
 {OP_ARGUMENT}

returns:
 XNodeSet
 XNumber
 XString
 XBoolean
 XRTree
 XObject
@xsl.usage advanced

"
      end

      attribute 1271938 "OP_FUNCTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_FUNCTION]
[length]
[FUNC_name]
 {OP_ARGUMENT}
[ENDOP]

returns:
 XNodeSet
 XNumber
 XString
 XBoolean
 XRTree
 XObject
@xsl.usage advanced

"
      end

      attribute 1272066 "LAST_NODESET_OP"
	class_attribute const_attribute package explicit_type "int"
	init_value " 25"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The last opcode for stuff that can be a nodeset.         
"
      end

      attribute 1272194 "OP_ARGUMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_ARGUMENT] (Function argument.)
[length]
 {expression}

returns:
 XNodeSet
 XNumber
 XString
 XBoolean
 XRTree
 XObject
@xsl.usage advanced

"
      end

      attribute 1272322 "OP_NUMBERLIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 27"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_NUMBERLIT] (Number literal.)
[3]
[index to token]

returns:
 XString
@xsl.usage advanced

"
      end

      attribute 1272450 "OP_LOCATIONPATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 28"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_LOCATIONPATH]
[length]
  {FROM_stepType}
| {function}
{predicate}
[ENDOP]

(Note that element and attribute namespaces and
names can be wildcarded '*'.)

returns:
 XNodeSet
@xsl.usage advanced

"
      end

      attribute 1272578 "OP_PREDICATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 29"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " public static final int LOCATIONPATHEX_MASK = 0x0000FFFF;
 public static final int LOCATIONPATHEX_ISSIMPLE = 0x00010000;
 public static final int OP_LOCATIONPATH_EX = (28 | 0x00010000);

[OP_PREDICATE]
[length]
 {expression}
[ENDOP] (For safety)

returns:
 XBoolean or XNumber
@xsl.usage advanced

"
      end

      attribute 1272706 "OP_MATCHPATTERN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_MATCHPATTERN]
[length]
 {PathExpr}+

returns:
 XNodeSet
@xsl.usage advanced

"
      end

      attribute 1272834 "OP_LOCATIONPATHPATTERN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[OP_LOCATIONPATHPATTERN]
[length]
  {FROM_stepType}
| {function}{predicate}
[ENDOP]
returns:
 XNodeSet
@xsl.usage advanced

"
      end

      attribute 1272962 "NODETYPE_COMMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1030"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_COMMENT]
No size or arguments.
Note: must not overlap function OP number!

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273090 "NODETYPE_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1031"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_TEXT]
No size or arguments.
Note: must not overlap function OP number!

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273218 "NODETYPE_PI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1032"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_PI]
[index to token]
Note: must not overlap function OP number!

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273346 "NODETYPE_NODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1033"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_NODE]
No size or arguments.
Note: must not overlap function OP number!

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273474 "NODENAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 34"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODENAME]
[index to ns token or EMPTY]
[index to name token]

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273602 "NODETYPE_ROOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 35"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_ROOT]
No size or arguments.

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273730 "NODETYPE_ANYELEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_ANY]
No size or arguments.

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273858 "NODETYPE_FUNCTEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1034"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[NODETYPE_ANY]
No size or arguments.

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1273986 "AXES_START_TYPES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 37"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "[FROM_stepType]
[length, including predicates]
[length of just the step, without the predicates]
{node test}
{predicates}?

returns:
 XBoolean
@xsl.usage advanced

"
      end

      attribute 1274114 "FROM_ANCESTORS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 37"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ancestor axes opcode.         
"
      end

      attribute 1274242 "FROM_ANCESTORS_OR_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 38"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " ancestor-or-self axes opcode.         
"
      end

      attribute 1274370 "FROM_ATTRIBUTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 39"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " attribute axes opcode.         
"
      end

      attribute 1274498 "FROM_CHILDREN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " children axes opcode.         
"
      end

      attribute 1274626 "FROM_DESCENDANTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 41"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " descendants axes opcode.         
"
      end

      attribute 1274754 "FROM_DESCENDANTS_OR_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 42"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " descendants-of-self axes opcode.         
"
      end

      attribute 1274882 "FROM_FOLLOWING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 43"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " following axes opcode.         
"
      end

      attribute 1275010 "FROM_FOLLOWING_SIBLINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 44"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " following-siblings axes opcode.         
"
      end

      attribute 1275138 "FROM_PARENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 45"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " parent axes opcode.         
"
      end

      attribute 1275266 "FROM_PRECEDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 46"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " preceding axes opcode.         
"
      end

      attribute 1275394 "FROM_PRECEDING_SIBLINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 47"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " preceding-sibling axes opcode.         
"
      end

      attribute 1275522 "FROM_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 48"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " self axes opcode.         
"
      end

      attribute 1275650 "FROM_NAMESPACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 49"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " namespace axes opcode.         
"
      end

      attribute 1275778 "FROM_ROOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 50"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " '/' axes opcode.         
"
      end

      attribute 1275906 "MATCH_ATTRIBUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 51"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "For match patterns.
@xsl.usage advanced

"
      end

      attribute 1276034 "MATCH_ANY_ANCESTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "For match patterns.
@xsl.usage advanced

"
      end

      attribute 1276162 "MATCH_IMMEDIATE_ANCESTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 53"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "For match patterns.
@xsl.usage advanced

"
      end

      attribute 1276290 "AXES_END_TYPES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 53"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The end of the axes types.    
"
      end

      attribute 1276418 "NEXT_FREE_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 99"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The next free ID.  Please keep this up to date.  
"
      end
    end

    class 812674 "PsuedoNames"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is used to represent names of nodes that may not be named, like a
comment node.
"
      classrelation 2599554 // PSEUDONAME_ANY (<unidirectional association>)
	relation 2599554 --->
	  a role_name "PSEUDONAME_ANY" init_value " \"*\"" class_relation const_relation public
	    comment "
Psuedo name for a wild card pattern ('*').

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599554 // PSEUDONAME_ANY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2599682 // PSEUDONAME_ROOT (<unidirectional association>)
	relation 2599682 --->
	  a role_name "PSEUDONAME_ROOT" init_value " \"/\"" class_relation const_relation public
	    comment "
Psuedo name for the root node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599682 // PSEUDONAME_ROOT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2599810 // PSEUDONAME_TEXT (<unidirectional association>)
	relation 2599810 --->
	  a role_name "PSEUDONAME_TEXT" init_value " \"#text\"" class_relation const_relation public
	    comment "
Psuedo name for a text node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599810 // PSEUDONAME_TEXT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2599938 // PSEUDONAME_COMMENT (<unidirectional association>)
	relation 2599938 --->
	  a role_name "PSEUDONAME_COMMENT" init_value " \"#comment\"" class_relation const_relation public
	    comment "
Psuedo name for a comment node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2599938 // PSEUDONAME_COMMENT (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2600066 // PSEUDONAME_PI (<unidirectional association>)
	relation 2600066 --->
	  a role_name "PSEUDONAME_PI" init_value " \"#pi\"" class_relation const_relation public
	    comment "
Psuedo name for a processing instruction node.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600066 // PSEUDONAME_PI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 2600194 // PSEUDONAME_OTHER (<unidirectional association>)
	relation 2600194 --->
	  a role_name "PSEUDONAME_OTHER" init_value " \"*\"" class_relation const_relation public
	    comment "
Psuedo name for an unknown type value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2600194 // PSEUDONAME_OTHER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 812802 "XPathDumper"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class for XPath diagnostic functions.
"
    end
  end

  deploymentview 163714 "compiler"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 579586 "OpMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.ObjectVector;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 811778 // OpMap
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OpMap.java,v 1.1.2.1 2005/08/01 01:30:31 jeffsuttor Exp $
"
    end

    artifact 579714 "Compiler"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.ErrorListener;
import javax.xml.transform.SourceLocator;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.dtm.Axis;
import com.sun.org.apache.xml.internal.dtm.DTMFilter;
import com.sun.org.apache.xml.internal.dtm.DTMIterator;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xml.internal.utils.QName;
import com.sun.org.apache.xml.internal.utils.SAXSourceLocator;
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.axes.UnionPathIterator;
import com.sun.org.apache.xpath.internal.axes.WalkerFactory;
import com.sun.org.apache.xpath.internal.functions.FuncExtFunction;
import com.sun.org.apache.xpath.internal.functions.FuncExtFunctionAvailable;
import com.sun.org.apache.xpath.internal.functions.Function;
import com.sun.org.apache.xpath.internal.functions.WrongNumberArgsException;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XString;
import com.sun.org.apache.xpath.internal.operations.And;
import com.sun.org.apache.xpath.internal.operations.Div;
import com.sun.org.apache.xpath.internal.operations.Equals;
import com.sun.org.apache.xpath.internal.operations.Gt;
import com.sun.org.apache.xpath.internal.operations.Gte;
import com.sun.org.apache.xpath.internal.operations.Lt;
import com.sun.org.apache.xpath.internal.operations.Lte;
import com.sun.org.apache.xpath.internal.operations.Minus;
import com.sun.org.apache.xpath.internal.operations.Mod;
import com.sun.org.apache.xpath.internal.operations.Mult;
import com.sun.org.apache.xpath.internal.operations.Neg;
import com.sun.org.apache.xpath.internal.operations.NotEquals;
import com.sun.org.apache.xpath.internal.operations.Operation;
import com.sun.org.apache.xpath.internal.operations.Or;
import com.sun.org.apache.xpath.internal.operations.Plus;
import com.sun.org.apache.xpath.internal.operations.UnaryOperation;
import com.sun.org.apache.xpath.internal.operations.Variable;
import com.sun.org.apache.xpath.internal.patterns.FunctionPattern;
import com.sun.org.apache.xpath.internal.patterns.NodeTest;
import com.sun.org.apache.xpath.internal.patterns.StepPattern;
import com.sun.org.apache.xpath.internal.patterns.UnionPattern;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 776450 // Compiler
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Compiler.java,v 1.2.4.1 2005/09/14 19:47:10 jeffsuttor Exp $
"
    end

    artifact 579842 "FuncLoader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xpath.internal.functions.Function;
import com.sun.org.apache.xalan.internal.utils.ObjectFactory;
import com.sun.org.apache.xalan.internal.utils.ConfigurationError;
${definition}"
      associated_elems
	class_ref 812034 // FuncLoader
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FuncLoader.java,v 1.1.2.1 2005/08/01 01:30:35 jeffsuttor Exp $
"
    end

    artifact 579970 "FunctionTable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xpath.internal.Expression;
import com.sun.org.apache.xpath.internal.functions.Function;
import java.util.HashMap;
import javax.xml.transform.TransformerException;
${definition}"
      associated_elems
	class_ref 782850 // FunctionTable
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: FunctionTable.java,v 1.3 2005/09/28 13:49:34 pvedula Exp $
"
    end

    artifact 580098 "Keywords"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 812162 // Keywords
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Keywords.java,v 1.2.4.1 2005/09/14 19:46:01 jeffsuttor Exp $
"
    end

    artifact 580226 "Lexer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 812290 // Lexer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: Lexer.java,v 1.2.4.1 2005/09/10 03:55:45 jeffsuttor Exp $
"
    end

    artifact 580354 "OpCodes"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 812546 // OpCodes
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OpCodes.java,v 1.1.2.1 2005/08/01 01:30:33 jeffsuttor Exp $
"
    end

    artifact 580482 "OpMapVector"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 811906 // OpMapVector
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: OpMapVector.java,v 1.2.4.1 2005/09/10 03:57:14 jeffsuttor Exp $
"
    end

    artifact 580610 "PsuedoNames"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 812674 // PsuedoNames
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: PsuedoNames.java,v 1.1.2.1 2005/08/01 01:30:33 jeffsuttor Exp $
"
    end

    artifact 580738 "XPathDumper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 812802 // XPathDumper
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathDumper.java,v 1.1.2.1 2005/08/01 01:30:31 jeffsuttor Exp $
"
    end

    artifact 580866 "XPathParser"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.ErrorListener;
import javax.xml.transform.TransformerException;
import com.sun.org.apache.xalan.internal.res.XSLMessages;
import com.sun.org.apache.xml.internal.utils.PrefixResolver;
import com.sun.org.apache.xpath.internal.XPathProcessorException;
import com.sun.org.apache.xpath.internal.domapi.XPathStylesheetDOM3Exception;
import com.sun.org.apache.xpath.internal.objects.XNumber;
import com.sun.org.apache.xpath.internal.objects.XString;
import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;
${definition}"
      associated_elems
	class_ref 812418 // XPathParser
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


$Id: XPathParser.java,v 1.2.4.1 2005/09/14 19:46:02 jeffsuttor Exp $
"
    end
  end
end
