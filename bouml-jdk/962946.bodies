class SocketOutputStream
!!!7534338.java!!!	SocketOutputStream(inout impl : AbstractPlainSocketImpl)
        super(impl.getFileDescriptor());
        this.impl = impl;
        socket = impl.getSocket();
!!!7534466.java!!!	getChannel() : FileChannel
        return null;
!!!7534722.java!!!	socketWrite(inout b : byte [[]], in off : int, in len : int) : void


        if (len <= 0 || off < 0 || len > b.length - off) {
            if (len == 0) {
                return;
            }
            throw new ArrayIndexOutOfBoundsException("len == " + len
                    + " off == " + off + " buffer length == " + b.length);
        }

        FileDescriptor fd = impl.acquireFD();
        try {
            socketWrite0(fd, b, off, len);
        } catch (SocketException se) {
            if (se instanceof sun.net.ConnectionResetException) {
                impl.setConnectionResetPending();
                se = new SocketException("Connection reset");
            }
            if (impl.isClosedOrPending()) {
                throw new SocketException("Socket closed");
            } else {
                throw se;
            }
        } finally {
            impl.releaseFD();
        }
!!!7534850.java!!!	write(in b : int) : void
        temp[0] = (byte)b;
        socketWrite(temp, 0, 1);
!!!7534978.java!!!	write(inout b : byte [[]]) : void
        socketWrite(b, 0, b.length);
!!!7535106.java!!!	write(inout b : byte [[]], in off : int, in len : int) : void
        socketWrite(b, off, len);
!!!7535234.java!!!	close() : void
        // Prevent recursion. See BugId 4484411
        if (closing)
            return;
        closing = true;
        if (socket != null) {
            if (!socket.isClosed())
                socket.close();
        } else
            impl.close();
        closing = false;
