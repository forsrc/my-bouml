class TextAccessibleContext
!!!11721858.java!!!	TextAccessibleContext(inout elementInfo : AccessibleHTML::ElementInfo)
                super(elementInfo);
!!!11721986.java!!!	getAccessibleText() : AccessibleText
                return this;
!!!11722114.java!!!	getAccessibleName() : String
                if (model != null) {
                    return (String)model.getProperty(Document.TitleProperty);
                } else {
                    return null;
                }
!!!11722242.java!!!	getAccessibleDescription() : String
                return editor.getContentType();
!!!11722370.java!!!	getAccessibleRole() : AccessibleRole
                return AccessibleRole.TEXT;
!!!11722498.java!!!	getIndexAtPoint(inout p : Point) : int
                View v = getView();
                if (v != null) {
                    return v.viewToModel(p.x, p.y, getBounds());
                } else {
                    return -1;
                }
!!!11722626.java!!!	getCharacterBounds(in i : int) : Rectangle
                try {
                    return editor.getUI().modelToView(editor, i);
                } catch (BadLocationException e) {
                    return null;
                }
!!!11722754.java!!!	getCharCount() : int
                if (validateIfNecessary()) {
                    Element elem = elementInfo.getElement();
                    return elem.getEndOffset() - elem.getStartOffset();
                }
                return 0;
!!!11722882.java!!!	getCaretPosition() : int
                View v = getView();
                if (v == null) {
                    return -1;
                }
                Container c = v.getContainer();
                if (c == null) {
                    return -1;
                }
                if (c instanceof JTextComponent) {
                    return ((JTextComponent)c).getCaretPosition();
                } else {
                    return -1;
                }
!!!11723010.java!!!	getAtIndex(in part : int, in index : int) : String
                return getAtIndex(part, index, 0);
!!!11723138.java!!!	getAfterIndex(in part : int, in index : int) : String
                return getAtIndex(part, index, 1);
!!!11723266.java!!!	getBeforeIndex(in part : int, in index : int) : String
                return getAtIndex(part, index, -1);
!!!11723394.java!!!	getAtIndex(in part : int, in index : int, in direction : int) : String
                if (model instanceof AbstractDocument) {
                    ((AbstractDocument)model).readLock();
                }
                try {
                    if (index < 0 || index >= model.getLength()) {
                        return null;
                    }
                    switch (part) {
                    case AccessibleText.CHARACTER:
                        if (index + direction < model.getLength() &&
                            index + direction >= 0) {
                            return model.getText(index + direction, 1);
                        }
                        break;


                    case AccessibleText.WORD:
                    case AccessibleText.SENTENCE:
                        IndexedSegment seg = getSegmentAt(part, index);
                        if (seg != null) {
                            if (direction != 0) {
                                int next;


                                if (direction < 0) {
                                    next = seg.modelOffset - 1;
                                }
                                else {
                                    next = seg.modelOffset + direction * seg.count;
                                }
                                if (next >= 0 && next <= model.getLength()) {
                                    seg = getSegmentAt(part, next);
                                }
                                else {
                                    seg = null;
                                }
                            }
                            if (seg != null) {
                                return new String(seg.array, seg.offset,
                                                  seg.count);
                            }
                        }
                        break;

                    default:
                        break;
                    }
                } catch (BadLocationException e) {
                } finally {
                    if (model instanceof AbstractDocument) {
                        ((AbstractDocument)model).readUnlock();
                    }
                }
                return null;
!!!11723522.java!!!	getParagraphElement(in index : int) : Element
                if (model instanceof PlainDocument ) {
                    PlainDocument sdoc = (PlainDocument)model;
                    return sdoc.getParagraphElement(index);
                } else if (model instanceof StyledDocument) {
                    StyledDocument sdoc = (StyledDocument)model;
                    return sdoc.getParagraphElement(index);
                } else {
                    Element para;
                    for (para = model.getDefaultRootElement(); ! para.isLeaf(); ) {
                        int pos = para.getElementIndex(index);
                        para = para.getElement(pos);
                    }
                    if (para == null) {
                        return null;
                    }
                    return para.getParentElement();
                }
!!!11723650.java!!!	getParagraphElementText(in index : int) : AccessibleHTML::TextElementInfo::TextAccessibleContext::IndexedSegment
                Element para = getParagraphElement(index);


                if (para != null) {
                    IndexedSegment segment = new IndexedSegment();
                    try {
                        int length = para.getEndOffset() - para.getStartOffset();
                        model.getText(para.getStartOffset(), length, segment);
                    } catch (BadLocationException e) {
                        return null;
                    }
                    segment.modelOffset = para.getStartOffset();
                    return segment;
                }
                return null;
!!!11723778.java!!!	getSegmentAt(in part : int, in index : int) : AccessibleHTML::TextElementInfo::TextAccessibleContext::IndexedSegment

                IndexedSegment seg = getParagraphElementText(index);
                if (seg == null) {
                    return null;
                }
                BreakIterator iterator;
                switch (part) {
                case AccessibleText.WORD:
                    iterator = BreakIterator.getWordInstance(getLocale());
                    break;
                case AccessibleText.SENTENCE:
                    iterator = BreakIterator.getSentenceInstance(getLocale());
                    break;
                default:
                    return null;
                }
                seg.first();
                iterator.setText(seg);
                int end = iterator.following(index - seg.modelOffset + seg.offset);
                if (end == BreakIterator.DONE) {
                    return null;
                }
                if (end > seg.offset + seg.count) {
                    return null;
                }
                int begin = iterator.previous();
                if (begin == BreakIterator.DONE ||
                    begin >= seg.offset + seg.count) {
                    return null;
                }
                seg.modelOffset = seg.modelOffset + begin - seg.offset;
                seg.offset = begin;
                seg.count = end - begin;
                return seg;
!!!11723906.java!!!	getCharacterAttribute(in i : int) : AttributeSet
                if (model instanceof StyledDocument) {
                    StyledDocument doc = (StyledDocument)model;
                    Element elem = doc.getCharacterElement(i);
                    if (elem != null) {
                        return elem.getAttributes();
                    }
                }
                return null;
!!!11724034.java!!!	getSelectionStart() : int
                return editor.getSelectionStart();
!!!11724162.java!!!	getSelectionEnd() : int
                return editor.getSelectionEnd();
!!!11724290.java!!!	getSelectedText() : String
                return editor.getSelectedText();
!!!11724418.java!!!	getText(in offset : int, in length : int) : String

                if (model != null && model instanceof StyledDocument) {
                    StyledDocument doc = (StyledDocument)model;
                    return model.getText(offset, length);
                } else {
                    return null;
                }
