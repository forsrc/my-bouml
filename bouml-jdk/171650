format 222
"stream" // jdk1.8::javax::xml::transform::stream
  revision 1
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/xml/transform/stream/"
  java_package "javax.xml.transform.stream"
  classview 164994 "stream"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 727682 "StreamSource"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Acts as an holder for a transformation Source in the form
of a stream of XML markup.</p>

<p><em>Note:</em> Due to their internal use of either a {@link Reader} or {@link InputStream} instance,
<code>StreamSource</code> instances may only be used once.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      classrelation 4803970 // <realization>
	relation 4803970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4803970 // <realization>
	  b parent class_ref 627202 // Source
      end

      classrelation 4804098 // FEATURE (<unidirectional association>)
	relation 4804098 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.stream.StreamSource/feature\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Source input of this type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4804098 // FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12125570 "StreamSource"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.  If this constructor is used, and
no Stream source is set using
{@link #setInputStream(java.io.InputStream inputStream)} or
{@link #setReader(java.io.Reader reader)}, then the
<code>Transformer</code> will
create an empty source {@link java.io.InputStream} using
{@link java.io.InputStream#InputStream() new InputStream()}.</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)
"
      end

      operation 12125698 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "inputStream" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a byte stream.  Normally,
a stream should be used rather than a reader, so
the XML parser can resolve character encoding specified
by the XML declaration.

<p>If this constructor is used to process a stylesheet, normally
setSystemId should also be called, so that relative URI references
can be resolved.</p>

@param inputStream A valid InputStream reference to an XML stream.
"
      end

      operation 12125826 "StreamSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "inputStream" type class_ref 146434 // InputStream
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a byte stream.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.

<p>This constructor allows the systemID to be set in addition
to the input stream, which allows relative URIs
to be processed.</p>

@param inputStream A valid InputStream reference to an XML stream.
@param systemId Must be a String that conforms to the URI syntax.
"
      end

      operation 12125954 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "reader" type class_ref 407298 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML character stream.
"
      end

      operation 12126082 "StreamSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "reader" type class_ref 407298 // Reader
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser may resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML character stream.
@param systemId Must be a String that conforms to the URI syntax.
"
      end

      operation 12126210 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a URL.

@param systemId Must be a String that conforms to the URI syntax.
"
      end

      operation 12126338 "StreamSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamSource from a File.

@param f Must a non-null File reference.
"
      end

      operation 12126466 "setInputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputStream" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the byte stream to be used as input.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.

<p>If this Source object is used to process a stylesheet, normally
setSystemId should also be called, so that relative URL references
can be resolved.</p>

@param inputStream A valid InputStream reference to an XML stream.
"
      end

      operation 12126594 "getInputStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the byte stream that was set with setByteStream.

@return The byte stream that was set with setByteStream, or null
if setByteStream or the ByteStream constructor was not called.
"
      end

      operation 12126722 "setReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 407298 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the input to be a character reader.  Normally,
a stream should be used rather than a reader, so that
the XML parser can resolve character encoding specified
by the XML declaration.  However, in many cases the encoding
of the input stream is already resolved, as in the case of
reading XML from a StringReader.

@param reader A valid Reader reference to an XML CharacterStream.
"
      end

      operation 12126850 "getReader"
	public return_type class_ref 407298 // Reader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream that was set with setReader.

@return The character stream that was set with setReader, or null
if setReader or the Reader constructor was not called.
"
      end

      operation 12126978 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the public identifier for this Source.

<p>The public identifier is always optional: if the application
writer includes one, it will be provided as part of the
location information.</p>

@param publicId The public identifier as a string.
"
      end

      operation 12127106 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the public identifier that was set with setPublicId.

@return The public identifier that was set with setPublicId, or null
if setPublicId was not called.
"
      end

      operation 12127234 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this Source.

<p>The system identifier is optional if there is a byte stream
or a character stream, but it is still useful to provide one,
since the application can use it to resolve relative URIs
and can include it in error messages and warnings (the parser
will attempt to open a connection to the URI only if
there is no byte stream or character stream specified).</p>

@param systemId The system identifier as a URL string.
"
      end

      operation 12127362 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called.
"
      end

      operation 12127490 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system ID from a File reference.

@param f Must a non-null File reference.
"
      end

      classrelation 4804226 // publicId (<unidirectional association>)
	relation 4804226 --->
	  a role_name "publicId" private
	    comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The public identifier for this input source, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4804226 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4804354 // systemId (<unidirectional association>)
	relation 4804354 --->
	  a role_name "systemId" private
	    comment "
The system identifier as a URL string, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4804354 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4804482 // inputStream (<unidirectional association>)
	relation 4804482 --->
	  a role_name "inputStream" private
	    comment "
The byte stream for this Source, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4804482 // inputStream (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      classrelation 4804610 // reader (<unidirectional association>)
	relation 4804610 --->
	  a role_name "reader" private
	    comment "
The character stream for this Source, or null.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4804610 // reader (<unidirectional association>)
	  b parent class_ref 407298 // Reader
      end
    end

    class 1432706 "StreamResult"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>Acts as an holder for a transformation result,
which may be XML, plain Text, HTML, or some other form of markup.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
"
      classrelation 4803330 // <realization>
	relation 4803330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4803330 // <realization>
	  b parent class_ref 645506 // Result
      end

      classrelation 4803458 // FEATURE (<unidirectional association>)
	relation 4803458 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.stream.StreamResult/feature\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Result output of this type.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4803458 // FEATURE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 12124034 "StreamResult"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument default constructor.
"
      end

      operation 12124162 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "outputStream" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a byte stream.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.

@param outputStream A valid OutputStream reference.
"
      end

      operation 12124290 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a character stream.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.  However,
there are times when it is useful to write to a character
stream, such as when using a StringWriter.

@param writer  A valid Writer reference.
"
      end

      operation 12124418 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a URL.

@param systemId Must be a String that conforms to the URI syntax.
"
      end

      operation 12124546 "StreamResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a StreamResult from a File.

@param f Must a non-null File reference.
"
      end

      operation 12124674 "setOutputStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outputStream" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the ByteStream that is to be written to.  Normally,
a stream should be used rather than a reader, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.

@param outputStream A valid OutputStream reference.
"
      end

      operation 12124802 "getOutputStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the byte stream that was set with setOutputStream.

@return The byte stream that was set with setOutputStream, or null
if setOutputStream or the ByteStream constructor was not called.
"
      end

      operation 12124930 "setWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the writer that is to receive the result.  Normally,
a stream should be used rather than a writer, so that
the transformer may use instructions contained in the
transformation instructions to control the encoding.  However,
there are times when it is useful to write to a writer,
such as when using a StringWriter.

@param writer  A valid Writer reference.
"
      end

      operation 12125058 "getWriter"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the character stream that was set with setWriter.

@return The character stream that was set with setWriter, or null
if setWriter or the Writer constructor was not called.
"
      end

      operation 12125186 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the systemID that may be used in association
with the byte or character stream, or, if neither is set, use
this value as a writeable URI (probably a file name).

@param systemId The system identifier as a URI string.
"
      end

      operation 12125314 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 131970 // File
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the system ID from a <code>File</code> reference.</p>


@param f Must a non-null File reference.
"
      end

      operation 12125442 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called.
"
      end

      classrelation 4803586 // systemId (<unidirectional association>)
	relation 4803586 --->
	  a role_name "systemId" private
	    comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The systemID that may be used in association
with the byte or character stream, or, if neither is set, use
this value as a writeable URI (probably a file name).

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4803586 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4803714 // outputStream (<unidirectional association>)
	relation 4803714 --->
	  a role_name "outputStream" private
	    comment "
The byte stream that is to be written to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4803714 // outputStream (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      classrelation 4803842 // writer (<unidirectional association>)
	relation 4803842 --->
	  a role_name "writer" private
	    comment "
The character stream that is to be written to.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4803842 // writer (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end
    end
  end

  deploymentview 179202 "stream"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 1024386 "StreamResult"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import java.io.File;
import java.io.OutputStream;
import java.io.Writer;
import java.net.MalformedURLException;
${definition}"
      associated_elems
	class_ref 1432706 // StreamResult
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 1024514 "StreamSource"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.InputStream;
import java.io.Reader;
import javax.xml.transform.Source;
${definition}"
      associated_elems
	class_ref 727682 // StreamSource
      end
      comment "Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
