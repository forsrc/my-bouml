class ResolveResult
!!!10096258.java!!!	ResolveResult()
        resolvedObj = null;
        remainingName = null;
!!!10096386.java!!!	ResolveResult(inout robj : Object, inout rcomp : String)
        resolvedObj = robj;
        try {
        remainingName = new CompositeName(rcomp);
//          remainingName.appendComponent(rcomp);
        } catch (InvalidNameException e) {
            // ignore; shouldn't happen
        }
!!!10096514.java!!!	ResolveResult(inout robj : Object, inout rname : Name)
        resolvedObj = robj;
        setRemainingName(rname);
!!!10096642.java!!!	getRemainingName() : Name
        return this.remainingName;
!!!10096770.java!!!	getResolvedObj() : Object
        return this.resolvedObj;
!!!10096898.java!!!	setRemainingName(inout name : Name) : void
        if (name != null)
            this.remainingName = (Name)(name.clone());
        else {
            // ??? should throw illegal argument exception
            this.remainingName = null;
        }
!!!10097026.java!!!	appendRemainingName(inout name : Name) : void
//      System.out.println("appendingRemainingName: " + name.toString());
//      Exception e = new Exception();
//      e.printStackTrace();
        if (name != null) {
            if (this.remainingName != null) {
                try {
                    this.remainingName.addAll(name);
                } catch (InvalidNameException e) {
                    // ignore; shouldn't happen for composite name
                }
            } else {
                this.remainingName = (Name)(name.clone());
            }
        }
!!!10097154.java!!!	appendRemainingComponent(inout name : String) : void
        if (name != null) {
            CompositeName rname = new CompositeName();
            try {
                rname.add(name);
            } catch (InvalidNameException e) {
                // ignore; shouldn't happen for empty composite name
            }
            appendRemainingName(rname);
        }
!!!10097282.java!!!	setResolvedObj(inout obj : Object) : void
        this.resolvedObj = obj;
        // ??? should check for null?
