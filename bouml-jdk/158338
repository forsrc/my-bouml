format 222
"security" // jdk1.8::com::sun::jmx::remote::security
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/jmx/remote/security/"
  java_package "com.sun.jmx.remote.security"
  classview 153218 "security"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 505730 "NotificationAccessController"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This interface allows to control remote access to the
{@code addNotificationListener} and {@code removeNotificationListener}
methods when the notification listener parameter is of type
{@code NotificationListener} and also allows to control remote access
to the notifications being forwarded to the interested remote listeners.</p>

<p>An implementation of this interface can be supplied to a
{@code JMXConnectorServer} in the environment map through the
{@code com.sun.jmx.remote.notification.access.controller}
environment map property.</p>

@since 1.6
"
      operation 3048322 "addNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when a remote
{@link javax.management.remote.JMXConnector} invokes the method
{@link javax.management.MBeanServerConnection#addNotificationListener(ObjectName,NotificationListener,NotificationFilter,Object)}.

@param connectionId the {@code connectionId} of the remote client
adding the listener.
@param name the name of the MBean where the listener is to be added.
@param subject the authenticated subject representing the remote client.

@throws SecurityException if the remote client with the supplied
authenticated subject does not have the rights to add a listener
to the supplied MBean.
"
      end

      operation 3048450 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when a remote
{@link javax.management.remote.JMXConnector} invokes the method
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener)}
or the method
{@link javax.management.MBeanServerConnection#removeNotificationListener(ObjectName,NotificationListener,NotificationFilter,Object)}.

@param connectionId the {@code connectionId} of the remote client
removing the listener.
@param name the name of the MBean where the listener is to be removed.
@param subject the authenticated subject representing the remote client.

@throws SecurityException if the remote client with the supplied
authenticated subject does not have the rights to remove a listener
from the supplied MBean.
"
      end

      operation 3048578 "fetchNotification"
	public explicit_return_type "void"
	nparams 4
	  param inout name "connectionId" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "notification" type class_ref 488706 // Notification
	  param inout name "subject" type class_ref 503042 // Subject
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called before the
{@link javax.management.remote.JMXConnectorServer}
forwards the notification to the interested remote
listener represented by the authenticated subject.

@param connectionId the {@code connectionId} of the remote client
receiving the notification.
@param name the name of the MBean forwarding the notification.
@param notification the notification to be forwarded to the interested
remote listener.
@param subject the authenticated subject representing the remote client.

@throws SecurityException if the remote client with
the supplied authenticated subject does not have the
rights to receive the notification.
"
      end
    end

    class 507522 "FileLoginModule"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This {@link LoginModule} performs file-based authentication.

<p> A supplied username and password is verified against the
corresponding user credentials stored in a designated password file.
If successful then a new {@link JMXPrincipal} is created with the
user's name and it is associated with the current {@link Subject}.
Such principals may be identified and granted management privileges in
the access control file for JMX remote management or in a Java security
policy.

<p> The password file comprises a list of key-value pairs as specified in
{@link Properties}. The key represents a user's name and the value is its
associated cleartext password. By default, the following password file is
used:
<pre>
    ${java.home}/lib/management/jmxremote.password
</pre>
A different password file can be specified via the <code>passwordFile</code>
configuration option.

<p> This module recognizes the following <code>Configuration</code> options:
<dl>
<dt> <code>passwordFile</code> </dt>
<dd> the path to an alternative password file. It is used instead of
     the default password file.</dd>

<dt> <code>useFirstPass</code> </dt>
<dd> if <code>true</code>, this module retrieves the username and password
     from the module's shared state, using \"javax.security.auth.login.name\"
     and \"javax.security.auth.login.password\" as the respective keys. The
     retrieved values are used for authentication. If authentication fails,
     no attempt for a retry is made, and the failure is reported back to
     the calling application.</dd>

<dt> <code>tryFirstPass</code> </dt>
<dd> if <code>true</code>, this module retrieves the username and password
     from the module's shared state, using \"javax.security.auth.login.name\"
      and \"javax.security.auth.login.password\" as the respective keys.  The
     retrieved values are used for authentication. If authentication fails,
     the module uses the CallbackHandler to retrieve a new username and
     password, and another attempt to authenticate is made. If the
     authentication fails, the failure is reported back to the calling
     application.</dd>

<dt> <code>storePass</code> </dt>
<dd> if <code>true</code>, this module stores the username and password
     obtained from the CallbackHandler in the module's shared state, using
     \"javax.security.auth.login.name\" and
     \"javax.security.auth.login.password\" as the respective keys.  This is
     not performed if existing values already exist for the username and
     password in the shared state, or if authentication fails.</dd>

<dt> <code>clearPass</code> </dt>
<dd> if <code>true</code>, this module clears the username and password
     stored in the module's shared state after both phases of authentication
     (login and commit) have completed.</dd>
</dl>
"
      classrelation 993794 // <realization>
	relation 993794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 993794 // <realization>
	  b parent class_ref 507650 // LoginModule
      end

      classrelation 993922 // DEFAULT_PASSWORD_FILE_NAME (<unidirectional association>)
	relation 993922 --->
	  a role_name "DEFAULT_PASSWORD_FILE_NAME" init_value "
        AccessController.doPrivileged(new GetPropertyAction(\"java.home\")) +
        File.separatorChar + \"lib\" +
        File.separatorChar + \"management\" + File.separatorChar +
        ConnectorBootstrap.DefaultValues.PASSWORD_FILE_NAME" class_relation const_relation private
	    comment " Location of the default password file
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 993922 // DEFAULT_PASSWORD_FILE_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 994050 // USERNAME_KEY (<unidirectional association>)
	relation 994050 --->
	  a role_name "USERNAME_KEY" init_value "
        \"javax.security.auth.login.name\"" class_relation const_relation private
	    comment " Key to retrieve the stored username
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994050 // USERNAME_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 994178 // PASSWORD_KEY (<unidirectional association>)
	relation 994178 --->
	  a role_name "PASSWORD_KEY" init_value "
        \"javax.security.auth.login.password\"" class_relation const_relation private
	    comment " Key to retrieve the stored password
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994178 // PASSWORD_KEY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 994306 // logger (<unidirectional association>)
	relation 994306 --->
	  a role_name "logger" init_value "
        new ClassLogger(\"javax.management.remote.misc\", \"FileLoginModule\")" class_relation const_relation private
	    comment " Log messages
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994306 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      attribute 627714 "useFirstPass"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Configurable options
"
      end

      attribute 627842 "tryFirstPass"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 627970 "storePass"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 628098 "clearPass"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 628226 "succeeded"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Authentication status
"
      end

      attribute 628354 "commitSucceeded"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 994434 // username (<unidirectional association>)
	relation 994434 --->
	  a role_name "username" private
	    comment " Supplied username and password
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994434 // username (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 628482 "password"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 994562 // user (<unidirectional association>)
	relation 994562 --->
	  a role_name "user" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994562 // user (<unidirectional association>)
	  b parent class_ref 508034 // JMXPrincipal
      end

      classrelation 994690 // subject (<unidirectional association>)
	relation 994690 --->
	  a role_name "subject" private
	    comment " Initial state
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994690 // subject (<unidirectional association>)
	  b parent class_ref 503042 // Subject
      end

      classrelation 994818 // callbackHandler (<unidirectional association>)
	relation 994818 --->
	  a role_name "callbackHandler" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 994818 // callbackHandler (<unidirectional association>)
	  b parent class_ref 507778 // CallbackHandler
      end

      classrelation 994946 // sharedState (<unidirectional association>)
	relation 994946 --->
	  a role_name "sharedState" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 994946 // sharedState (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 995074 // options (<unidirectional association>)
	relation 995074 --->
	  a role_name "options" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, ?> ${name}${value};
"
	    classrelation_ref 995074 // options (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 995202 // passwordFile (<unidirectional association>)
	relation 995202 --->
	  a role_name "passwordFile" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995202 // passwordFile (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 995330 // passwordFileDisplayName (<unidirectional association>)
	relation 995330 --->
	  a role_name "passwordFileDisplayName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995330 // passwordFileDisplayName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 628610 "userSuppliedPasswordFile"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 628738 "hasJavaHomePermission"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 995458 // userCredentials (<unidirectional association>)
	relation 995458 --->
	  a role_name "userCredentials" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995458 // userCredentials (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      operation 3032322 "initialize"
	public explicit_return_type "void"
	nparams 4
	  param inout name "subject" type class_ref 503042 // Subject
	  param inout name "callbackHandler" type class_ref 507778 // CallbackHandler
	  param inout name "sharedState" type class_ref 130178 // Map
	  param inout name "options" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String,?> ${p2}, ${t3}<String,?> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this <code>LoginModule</code>.

@param subject the <code>Subject</code> to be authenticated.
@param callbackHandler a <code>CallbackHandler</code> to acquire the
                 user's name and password.
@param sharedState shared <code>LoginModule</code> state.
@param options options specified in the login
                 <code>Configuration</code> for this particular
                 <code>LoginModule</code>.
"
      end

      operation 3032450 "login"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin user authentication (Authentication Phase 1).

<p> Acquire the user's name and password and verify them against
the corresponding credentials from the password file.

@return true always, since this <code>LoginModule</code>
         should not be ignored.
@exception FailedLoginException if the authentication fails.
@exception LoginException if this <code>LoginModule</code>
         is unable to perform the authentication.
"
      end

      operation 3032578 "commit"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Complete user authentication (Authentication Phase 2).

<p> This method is called if the LoginContext's
overall authentication has succeeded
(all the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL
LoginModules have succeeded).

<p> If this LoginModule's own authentication attempt
succeeded (checked by retrieving the private state saved by the
<code>login</code> method), then this method associates a
<code>JMXPrincipal</code> with the <code>Subject</code> located in the
<code>LoginModule</code>.  If this LoginModule's own
authentication attempted failed, then this method removes
any state that was originally saved.

@exception LoginException if the commit fails
@return true if this LoginModule's own login and commit
         attempts succeeded, or false otherwise.
"
      end

      operation 3032706 "abort"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Abort user authentication (Authentication Phase 2).

<p> This method is called if the LoginContext's overall authentication
failed (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL
LoginModules did not succeed).

<p> If this LoginModule's own authentication attempt
succeeded (checked by retrieving the private state saved by the
<code>login</code> and <code>commit</code> methods),
then this method cleans up any state that was originally saved.

@exception LoginException if the abort fails.
@return false if this LoginModule's own login and/or commit attempts
         failed, and true otherwise.
"
      end

      operation 3032834 "logout"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Logout a user.

<p> This method removes the Principals
that were added by the <code>commit</code> method.

@exception LoginException if the logout fails.
@return true in all cases since this <code>LoginModule</code>
         should not be ignored.
"
      end

      operation 3032962 "attemptAuthentication"
	private explicit_return_type "void"
	nparams 1
	  param inout name "usePasswdFromSharedState" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Attempt authentication

@param usePasswdFromSharedState a flag to tell this method whether
         to retrieve the password from the sharedState.
"
      end

      operation 3033090 "loadPasswordFile"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the password file.
"
      end

      operation 3033218 "getUsernamePassword"
	private explicit_return_type "void"
	nparams 1
	  param inout name "usePasswdFromSharedState" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 507906 // LoginException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the username and password.
This method does not return any value.
Instead, it sets global name and password variables.

<p> Also note that this method will set the username and password
values in the shared state in case subsequent LoginModules
want to use them via use/tryFirstPass.

@param usePasswdFromSharedState boolean that tells this method whether
         to retrieve the password from the sharedState.
"
      end

      operation 3033346 "cleanState"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clean out state because of a failed authentication attempt
"
      end
    end

    class 508162 "JMXPluggableAuthenticator"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This class represents a
<a href=\"{@docRoot}/../guide/security/jaas/JAASRefGuide.html\">JAAS</a>
based implementation of the {@link JMXAuthenticator} interface.</p>

<p>Authentication is performed by passing the supplied user's credentials
to one or more authentication mechanisms ({@link LoginModule}) for
verification. An authentication mechanism acquires the user's credentials
by calling {@link NameCallback} and/or {@link PasswordCallback}.
If authentication is successful then an authenticated {@link Subject}
filled in with a {@link Principal} is returned.  Authorization checks
will then be performed based on this <code>Subject</code>.</p>

<p>By default, a single file-based authentication mechanism
{@link FileLoginModule} is configured (<code>FileLoginConfig</code>).</p>

<p>To override the default configuration use the
<code>com.sun.management.jmxremote.login.config</code> management property
described in the JRE/lib/management/management.properties file.
Set this property to the name of a JAAS configuration entry and ensure that
the entry is loaded by the installed {@link Configuration}. In addition,
ensure that the authentication mechanisms specified in the entry acquire
the user's credentials by calling {@link NameCallback} and
{@link PasswordCallback} and that they return a {@link Subject} filled-in
with a {@link Principal}, for those users that are successfully
authenticated.</p>
"
      classrelation 995586 // <realization>
	relation 995586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 995586 // <realization>
	  b parent class_ref 508290 // JMXAuthenticator
      end

      operation 3033602 "JMXPluggableAuthenticator"
	public explicit_return_type ""
	nparams 1
	  param inout name "env" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?, ?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an instance of <code>JMXPluggableAuthenticator</code>
and initializes it with a {@link LoginContext}.

@param env the environment containing configuration properties for the
           authenticator. Can be null, which is equivalent to an empty
           Map.
@exception SecurityException if the authentication mechanism cannot be
           initialized.
"
      end

      operation 3033730 "authenticate"
	public return_type class_ref 503042 // Subject
	nparams 1
	  param inout name "credentials" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Authenticate the <code>MBeanServerConnection</code> client
with the given client credentials.

@param credentials the user-defined credentials to be passed in
to the server in order to authenticate the user before creating
the <code>MBeanServerConnection</code>.  This parameter must
be a two-element <code>String[]</code> containing the client's
username and password in that order.

@return the authenticated subject containing a
<code>JMXPrincipal(username)</code>.

@exception SecurityException if the server cannot authenticate the user
with the provided credentials.
"
      end

      operation 3033858 "authenticationFailure"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "method" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3033986 "authenticationFailure"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "method" type class_ref 128130 // String
	  param inout name "exception" type class_ref 132226 // Exception
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3034114 "logException"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "method" type class_ref 128130 // String
	  param inout name "message" type class_ref 128130 // String
	  param inout name "e" type class_ref 132226 // Exception
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 995714 // loginContext (<unidirectional association>)
	relation 995714 --->
	  a role_name "loginContext" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995714 // loginContext (<unidirectional association>)
	  b parent class_ref 508418 // LoginContext
      end

      classrelation 995842 // username (<unidirectional association>)
	relation 995842 --->
	  a role_name "username" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995842 // username (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 995970 // password (<unidirectional association>)
	relation 995970 --->
	  a role_name "password" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 995970 // password (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 996098 // LOGIN_CONFIG_PROP (<unidirectional association>)
	relation 996098 --->
	  a role_name "LOGIN_CONFIG_PROP" init_value "
        \"jmx.remote.x.login.config\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996098 // LOGIN_CONFIG_PROP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 996226 // LOGIN_CONFIG_NAME (<unidirectional association>)
	relation 996226 --->
	  a role_name "LOGIN_CONFIG_NAME" init_value " \"JMXPluggableAuthenticator\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996226 // LOGIN_CONFIG_NAME (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 996354 // PASSWORD_FILE_PROP (<unidirectional association>)
	relation 996354 --->
	  a role_name "PASSWORD_FILE_PROP" init_value "
        \"jmx.remote.x.password.file\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996354 // PASSWORD_FILE_PROP (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 996482 // logger (<unidirectional association>)
	relation 996482 --->
	  a role_name "logger" init_value "
        new ClassLogger(\"javax.management.remote.misc\", LOGIN_CONFIG_NAME)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 996482 // logger (<unidirectional association>)
	  b parent class_ref 502402 // ClassLogger
      end

      class 508546 "JMXCallbackHandler"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 996610 // <realization>
	  relation 996610 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 996610 // <realization>
	    b parent class_ref 507778 // CallbackHandler
	end

	operation 3034370 "handle"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "callbacks" type class_ref 508674 // Callback
	  multiplicity "[]"
	  nexceptions 2
	    exception class_ref 146818 // IOException
	    exception class_ref 508802 // UnsupportedCallbackException
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the username and password in the appropriate Callback object.
"
	end
      end

      class 508930 "FileLoginConfig"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 997634 // <generalisation>
	  relation 997634 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 997634 // <generalisation>
	    b parent class_ref 509058 // Configuration
	end

	classrelation 997762 // entries (<unidirectional association>)
	  relation 997762 --->
	    a role_name "entries" multiplicity "[]" private
	      comment " The JAAS configuration for file-based authentication
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 997762 // entries (<unidirectional association>)
	    b parent class_ref 509698 // AppConfigurationEntry
	end

	classrelation 997890 // FILE_LOGIN_MODULE (<unidirectional association>)
	  relation 997890 --->
	    a role_name "FILE_LOGIN_MODULE" init_value "
        FileLoginModule.class.getName()" class_relation const_relation private
	      comment " The classname of the login module for file-based authentication
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 997890 // FILE_LOGIN_MODULE (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 998018 // PASSWORD_FILE_OPTION (<unidirectional association>)
	  relation 998018 --->
	    a role_name "PASSWORD_FILE_OPTION" init_value " \"passwordFile\"" class_relation const_relation private
	      comment " The option that identifies the password file to use
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 998018 // PASSWORD_FILE_OPTION (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	operation 3036930 "FileLoginConfig"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "passwordFile" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates an instance of <code>FileLoginConfig</code>

@param passwordFile A filepath that identifies the password file to use.
                    If null then the default password file is used.
"
	end

	operation 3037058 "getAppConfigurationEntry"
	  public return_type class_ref 509698 // AppConfigurationEntry
	  nparams 1
	    param inout name "name" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the JAAS configuration for file-based authentication
"
	end

	operation 3037186 "refresh"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Refreshes the configuration.
"
	end
      end
    end

    class 510082 "JMXSubjectDomainCombiner"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This class represents an extension to the {@link SubjectDomainCombiner}
and is used to add a new {@link ProtectionDomain}, comprised of a null
codesource/signers and an empty permission set, to the access control
context with which this combiner is combined.</p>

<p>When the {@link #combine} method is called the {@link ProtectionDomain}
is augmented with the permissions granted to the set of principals present
in the supplied {@link Subject}.</p>
"
      classrelation 998914 // <generalisation>
	relation 998914 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 998914 // <generalisation>
	  b parent class_ref 510210 // SubjectDomainCombiner
      end

      operation 3038722 "JMXSubjectDomainCombiner"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3038850 "combine"
	public return_type class_ref 319618 // ProtectionDomain
	nparams 2
	  param inout name "current" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	  param inout name "assigned" type class_ref 319618 // ProtectionDomain
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 999042 // nullCodeSource (<unidirectional association>)
	relation 999042 --->
	  a role_name "nullCodeSource" init_value "
        new CodeSource(null, (java.security.cert.Certificate[]) null)" class_relation const_relation private
	    comment "
A null CodeSource.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 999042 // nullCodeSource (<unidirectional association>)
	  b parent class_ref 319874 // CodeSource
      end

      classrelation 999170 // pdNoPerms (<unidirectional association>)
	relation 999170 --->
	  a role_name "pdNoPerms" init_value "
        new ProtectionDomain(nullCodeSource, new Permissions(), null, null)" class_relation const_relation private
	    comment "
A ProtectionDomain with a null CodeSource and an empty permission set.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 999170 // pdNoPerms (<unidirectional association>)
	  b parent class_ref 319618 // ProtectionDomain
      end

      operation 3038978 "getContext"
	class_operation public return_type class_ref 129154 // AccessControlContext
	nparams 1
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current AccessControlContext combined with the supplied subject.
"
      end

      operation 3039106 "getDomainCombinerContext"
	class_operation public return_type class_ref 129154 // AccessControlContext
	nparams 1
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the AccessControlContext of the domain combiner created with
the supplied subject, i.e. an AccessControlContext with the domain
combiner created with the supplied subject and where the caller's
context has been removed.
"
      end
    end

    class 510722 "MBeanServerAccessController"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An object of this class implements the MBeanServer interface
and, for each of its methods, calls an appropriate checking method
and then forwards the request to a wrapped MBeanServer object.  The
checking method may throw a RuntimeException if the operation is
not allowed; in this case the request is not forwarded to the
wrapped object.</p>

<p>A typical use of this class is to insert it between a connector server
such as the RMI connector and the MBeanServer with which the connector
is associated.  Requests from the connector client can then be filtered
and those operations that are not allowed, or not allowed in a particular
context, can be rejected by throwing a <code>SecurityException</code>
in the corresponding <code>check*</code> method.</p>

<p>This is an abstract class, because in its implementation none of
the checking methods does anything.  To be useful, it must be
subclassed and at least one of the checking methods overridden to
do some checking.  Some or all of the MBeanServer methods may also
be overridden, for instance if the default checking behavior is
inappropriate.</p>

<p>If there is no SecurityManager, then the access controller will refuse
to create an MBean that is a ClassLoader, which includes MLets, or to
execute the method addURL on an MBean that is an MLet. This prevents
people from opening security holes unintentionally. Otherwise, it
would not be obvious that granting write access grants the ability to
download and execute arbitrary code in the target MBean server. Advanced
users who do want the ability to use MLets are presumably advanced enough
to handle policy files and security managers.</p>
"
      classrelation 999426 // <realization>
	relation 999426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 999426 // <realization>
	  b parent class_ref 510850 // MBeanServerForwarder
      end

      operation 3039490 "getMBeanServer"
	public return_type class_ref 485122 // MBeanServer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3039618 "setMBeanServer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "mbs" type class_ref 485122 // MBeanServer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3039746 "checkRead"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the caller can do read operations. This method does
nothing if so, otherwise throws SecurityException.
"
      end

      operation 3039874 "checkWrite"
	abstract protected explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the caller can do write operations.  This method does
nothing if so, otherwise throws SecurityException.
"
      end

      operation 3040002 "checkCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the caller can create the named class.  The default
implementation of this method calls {@link #checkWrite()}.
"
      end

      operation 3040130 "checkUnregister"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the caller can unregister the named MBean.  The default
implementation of this method calls {@link #checkWrite()}.
"
      end

      operation 3040258 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------
--------------------------------------------

 Implementation of the MBeanServer interface

--------------------------------------------
--------------------------------------------

Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3040386 "addNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3040514 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 5
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3040642 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 5
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3040770 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3040898 "createMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 5
	  param inout name "className" type class_ref 128130 // String
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 6
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486146 // NotCompliantMBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041026 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041154 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041282 "deserialize"
	public return_type class_ref 168962 // ObjectInputStream
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487682 // OperationsException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041410 "getAttribute"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 128130 // String
	nexceptions 4
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041538 "getAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041666 "getClassLoader"
	public return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041794 "getClassLoaderFor"
	public return_type class_ref 129026 // ClassLoader
	nparams 1
	  param inout name "mbeanName" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3041922 "getClassLoaderRepository"
	public return_type class_ref 487810 // ClassLoaderRepository
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042050 "getDefaultDomain"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042178 "getDomains"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042306 "getMBeanCount"
	public return_type class_ref 137602 // Integer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042434 "getMBeanInfo"
	public return_type class_ref 487426 // MBeanInfo
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487554 // IntrospectionException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042562 "getObjectInstance"
	public return_type class_ref 485378 // ObjectInstance
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042690 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042818 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "className" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 2
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3042946 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043074 "instantiate"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "className" type class_ref 128130 // String
	  param inout name "loaderName" type class_ref 485506 // ObjectName
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 485634 // ReflectionException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkCreate(className)</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043202 "invoke"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "operationName" type class_ref 128130 // String
	  param inout name "params" type class_ref 129538 // Object
	multiplicity "[]"
	  param inout name "signature" type class_ref 128130 // String
	multiplicity "[]"
	nexceptions 3
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkWrite()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043330 "isInstanceOf"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "className" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043458 "isRegistered"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043586 "queryMBeans"
	public return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectInstance> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043714 "queryNames"
	public return_type class_ref 192258 // Set
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "query" type class_ref 486402 // QueryExp
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ObjectName> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043842 "registerMBean"
	public return_type class_ref 485378 // ObjectInstance
	nparams 2
	  param inout name "object" type class_ref 129538 // Object
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 3
	  exception class_ref 485762 // InstanceAlreadyExistsException
	  exception class_ref 485890 // MBeanRegistrationException
	  exception class_ref 486146 // NotCompliantMBeanException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkWrite()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3043970 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044098 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 487042 // NotificationListener
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044226 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044354 "removeNotificationListener"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "listener" type class_ref 485506 // ObjectName
	  param inout name "filter" type class_ref 487170 // NotificationFilter
	  param inout name "handback" type class_ref 129538 // Object
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 487298 // ListenerNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkRead()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044482 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attribute" type class_ref 486786 // Attribute
	nexceptions 5
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 486530 // AttributeNotFoundException
	  exception class_ref 486914 // InvalidAttributeValueException
	  exception class_ref 486018 // MBeanException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkWrite()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044610 "setAttributes"
	public return_type class_ref 486658 // AttributeList
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "attributes" type class_ref 486658 // AttributeList
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485634 // ReflectionException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkWrite()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044738 "unregisterMBean"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	nexceptions 2
	  exception class_ref 486274 // InstanceNotFoundException
	  exception class_ref 485890 // MBeanRegistrationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call <code>checkUnregister()</code>, then forward this method to the
wrapped object.
"
      end

      operation 3044866 "checkClassLoader"
	private explicit_return_type "void"
	nparams 1
	  param inout name "object" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "----------------
 PRIVATE METHODS
----------------"
      end

      operation 3044994 "checkMLetMethods"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 485506 // ObjectName
	  param inout name "operation" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 486274 // InstanceNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 999554 // mbs (<unidirectional association>)
	relation 999554 --->
	  a role_name "mbs" private
	    comment "------------------
 PRIVATE VARIABLES
------------------
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 999554 // mbs (<unidirectional association>)
	  b parent class_ref 485122 // MBeanServer
      end
    end

    class 510978 "MBeanServerFileAccessController"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An object of this class implements the MBeanServerAccessController
interface and, for each of its methods, calls an appropriate checking
method and then forwards the request to a wrapped MBeanServer object.
The checking method may throw a SecurityException if the operation is
not allowed; in this case the request is not forwarded to the
wrapped object.</p>

<p>This class implements the {@link #checkRead()}, {@link #checkWrite()},
{@link #checkCreate(String)}, and {@link #checkUnregister(ObjectName)}
methods based on an access level properties file containing username/access
level pairs. The set of username/access level pairs is passed either as a
filename which denotes a properties file on disk, or directly as an instance
of the {@link Properties} class.  In both cases, the name of each property
represents a username, and the value of the property is the associated access
level.  Thus, any given username either does not exist in the properties or
has exactly one access level. The same access level can be shared by several
usernames.</p>

<p>The supported access level values are {@code readonly} and
{@code readwrite}.  The {@code readwrite} access level can be
qualified by one or more <i>clauses</i>, where each clause looks
like <code>create <i>classNamePattern</i></code> or {@code
unregister}.  For example:</p>

<pre>
monitorRole  readonly
controlRole  readwrite \\
             create javax.management.timer.*,javax.management.monitor.* \\
             unregister
</pre>

<p>(The continuation lines with {@code \\} come from the parser for
Properties files.)</p>
"
      classrelation 999682 // <generalisation>
	relation 999682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 999682 // <generalisation>
	  b parent class_ref 510722 // MBeanServerAccessController
      end

      classrelation 999810 // READONLY (<unidirectional association>)
	relation 999810 --->
	  a role_name "READONLY" init_value " \"readonly\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 999810 // READONLY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 999938 // READWRITE (<unidirectional association>)
	relation 999938 --->
	  a role_name "READWRITE" init_value " \"readwrite\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 999938 // READWRITE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1000066 // CREATE (<unidirectional association>)
	relation 1000066 --->
	  a role_name "CREATE" init_value " \"create\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1000066 // CREATE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1000194 // UNREGISTER (<unidirectional association>)
	relation 1000194 --->
	  a role_name "UNREGISTER" init_value " \"unregister\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1000194 // UNREGISTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      class 511106 "AccessType"
	visibility private stereotype "enum"
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 629378 "READ"
	  public type class_ref 511106 // AccessType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 629506 "WRITE"
	  public type class_ref 511106 // AccessType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 629634 "CREATE"
	  public type class_ref 511106 // AccessType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 629762 "UNREGISTER"
	  public type class_ref 511106 // AccessType
	  cpp_decl ""
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      class 511234 "Access"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 629890 "write"
	  const_attribute package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1000322 // createPatterns (<unidirectional association>)
	  relation 1000322 --->
	    a role_name "createPatterns" multiplicity "[]" const_relation package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1000322 // createPatterns (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 630018 "unregister"
	  private explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 3045122 "Access"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "write" explicit_type "boolean"
	    param inout name "unregister" explicit_type "boolean"
	    param inout name "createPatternList" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<String> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1000450 // NO_STRINGS (<unidirectional association>)
	  relation 1000450 --->
	    a role_name "NO_STRINGS" multiplicity "[]" init_value " new String[0]" const_relation private
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1000450 // NO_STRINGS (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      operation 3045250 "MBeanServerFileAccessController"
	public explicit_return_type ""
	nparams 1
	  param inout name "accessFileName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanServerAccessController that forwards all the
MBeanServer requests to the MBeanServer set by invoking the {@link
#setMBeanServer} method after doing access checks based on read and
write permissions.</p>

<p>This instance is initialized from the specified properties file.</p>

@param accessFileName name of the file which denotes a properties
file on disk containing the username/access level entries.

@exception IOException if the file does not exist, is a
directory rather than a regular file, or for some other
reason cannot be opened for reading.

@exception IllegalArgumentException if any of the supplied access
level values differs from \"readonly\" or \"readwrite\".
"
      end

      operation 3045378 "MBeanServerFileAccessController"
	public explicit_return_type ""
	nparams 2
	  param inout name "accessFileName" type class_ref 128130 // String
	  param inout name "mbs" type class_ref 485122 // MBeanServer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanServerAccessController that forwards all the
MBeanServer requests to <code>mbs</code> after doing access checks
based on read and write permissions.</p>

<p>This instance is initialized from the specified properties file.</p>

@param accessFileName name of the file which denotes a properties
file on disk containing the username/access level entries.

@param mbs the MBeanServer object to which requests will be forwarded.

@exception IOException if the file does not exist, is a
directory rather than a regular file, or for some other
reason cannot be opened for reading.

@exception IllegalArgumentException if any of the supplied access
level values differs from \"readonly\" or \"readwrite\".
"
      end

      operation 3045506 "MBeanServerFileAccessController"
	public explicit_return_type ""
	nparams 1
	  param inout name "accessFileProps" type class_ref 240130 // Properties
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanServerAccessController that forwards all the
MBeanServer requests to the MBeanServer set by invoking the {@link
#setMBeanServer} method after doing access checks based on read and
write permissions.</p>

<p>This instance is initialized from the specified properties
instance.  This constructor makes a copy of the properties
instance and it is the copy that is consulted to check the
username and access level of an incoming connection. The
original properties object can be modified without affecting
the copy. If the {@link #refresh} method is then called, the
<code>MBeanServerFileAccessController</code> will make a new
copy of the properties object at that time.</p>

@param accessFileProps properties list containing the username/access
level entries.

@exception IllegalArgumentException if <code>accessFileProps</code> is
<code>null</code> or if any of the supplied access level values differs
from \"readonly\" or \"readwrite\".
"
      end

      operation 3045634 "MBeanServerFileAccessController"
	public explicit_return_type ""
	nparams 2
	  param inout name "accessFileProps" type class_ref 240130 // Properties
	  param inout name "mbs" type class_ref 485122 // MBeanServer
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new MBeanServerAccessController that forwards all the
MBeanServer requests to the MBeanServer set by invoking the {@link
#setMBeanServer} method after doing access checks based on read and
write permissions.</p>

<p>This instance is initialized from the specified properties
instance.  This constructor makes a copy of the properties
instance and it is the copy that is consulted to check the
username and access level of an incoming connection. The
original properties object can be modified without affecting
the copy. If the {@link #refresh} method is then called, the
<code>MBeanServerFileAccessController</code> will make a new
copy of the properties object at that time.</p>

@param accessFileProps properties list containing the username/access
level entries.

@param mbs the MBeanServer object to which requests will be forwarded.

@exception IllegalArgumentException if <code>accessFileProps</code> is
<code>null</code> or if any of the supplied access level values differs
from \"readonly\" or \"readwrite\".
"
      end

      operation 3045762 "checkRead"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Check if the caller can do read operations. This method does
nothing if so, otherwise throws SecurityException.
"
      end

      operation 3045890 "checkWrite"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Check if the caller can do write operations.  This method does
nothing if so, otherwise throws SecurityException.
"
      end

      operation 3046018 "checkCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Check if the caller can create MBeans or instances of the given class.
This method does nothing if so, otherwise throws SecurityException.
"
      end

      operation 3046146 "checkUnregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 485506 // ObjectName
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Check if the caller can do unregister operations.  This method does
nothing if so, otherwise throws SecurityException.
"
      end

      operation 3046274 "refresh"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Refresh the set of username/access level entries.</p>

<p>If this instance was created using the
{@link #MBeanServerFileAccessController(String)} or
{@link #MBeanServerFileAccessController(String,MBeanServer)}
constructors to specify a file from which the entries are read,
the file is re-read.</p>

<p>If this instance was created using the
{@link #MBeanServerFileAccessController(Properties)} or
{@link #MBeanServerFileAccessController(Properties,MBeanServer)}
constructors then a new copy of the <code>Properties</code> object
is made.</p>

@exception IOException if the file does not exist, is a
directory rather than a regular file, or for some other
reason cannot be opened for reading.

@exception IllegalArgumentException if any of the supplied access
level values differs from \"readonly\" or \"readwrite\".
"
      end

      operation 3046402 "propertiesFromFile"
	class_operation private return_type class_ref 240130 // Properties
	nparams 1
	  param inout name "fname" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3046530 "checkAccess"
	private explicit_return_type "void"
	nparams 2
	  param inout name "requiredAccess" type class_ref 511106 // AccessType
	  param inout name "arg" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3046658 "checkCreateAccess"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "access" type class_ref 511234 // Access
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3046786 "classNameMatch"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "pattern" type class_ref 128130 // String
	  param inout name "className" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3046914 "parseProperties"
	private explicit_return_type "void"
	nparams 1
	  param inout name "props" type class_ref 240130 // Properties
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 511362 "Parser"
	visibility private 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 630146 "EOS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " -1"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " pseudo-codepoint \"end of string\""
	end

	extra_member 139266 "initialization"
	  
	  cpp "" ""
	  java "  static {
            assert !Character.isWhitespace(EOS);
        }"
	  php ""
	  python ""
	  idl ""
	  mysql ""
	end

	classrelation 1000578 // identity (<unidirectional association>)
	  relation 1000578 --->
	    a role_name "identity" const_relation private
	      comment " just for better error messages"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1000578 // identity (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 1000706 // s (<unidirectional association>)
	  relation 1000706 --->
	    a role_name "s" const_relation private
	      comment " the string we're parsing"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1000706 // s (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	attribute 630274 "len"
	  const_attribute private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " s.length()"
	end

	attribute 630402 "i"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 630530 "c"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 3047042 "Parser"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "identity" type class_ref 128130 // String
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " At any point, either c is s.codePointAt(i), or i == len and
 c is EOS.  We use int rather than char because it is conceivable
 (if unlikely) that a classname in a create clause might contain
 \"supplementary characters\", the ones that don't fit in the original
 16 bits for Unicode."
	end

	operation 3047170 "parseAccess"
	  class_operation package return_type class_ref 511234 // Access
	  nparams 2
	    param inout name "identity" type class_ref 128130 // String
	    param inout name "s" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3047298 "parseAccess"
	  private return_type class_ref 511234 // Access
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3047426 "parseReadWrite"
	  private return_type class_ref 511234 // Access
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3047554 "parseCreate"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "createClasses" type class_ref 175362 // List
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3047682 "parseClassName"
	  private return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3047810 "next"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Advance c and i to the next character, unless already at EOS."
	end

	operation 3047938 "skipSpace"
	  private explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3048066 "parseWord"
	  private return_type class_ref 128130 // String
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3048194 "syntax"
	  private return_type class_ref 187778 // IllegalArgumentException
	  nparams 1
	    param inout name "msg" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1000834 // accessMap (<unidirectional association>)
	relation 1000834 --->
	  a role_name "accessMap" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Access> ${name}${value};
"
	    classrelation_ref 1000834 // accessMap (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1000962 // originalProps (<unidirectional association>)
	relation 1000962 --->
	  a role_name "originalProps" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1000962 // originalProps (<unidirectional association>)
	  b parent class_ref 240130 // Properties
      end

      classrelation 1001090 // accessFileName (<unidirectional association>)
	relation 1001090 --->
	  a role_name "accessFileName" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1001090 // accessFileName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end
    end

    class 511490 "SubjectDelegator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 3048706 "delegatedContext"
	public return_type class_ref 129154 // AccessControlContext
	nparams 3
	  param inout name "authenticatedACC" type class_ref 129154 // AccessControlContext
	  param inout name "delegatedSubject" type class_ref 503042 // Subject
	  param inout name "removeCallerContext" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 171138 // SecurityException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the AccessControlContext appropriate to execute an
operation on behalf of the delegatedSubject.  If the
authenticatedAccessControlContext does not have permission to
delegate to that subject, throw SecurityException.  "
      end

      operation 3048834 "getDelegatedAcc"
	private return_type class_ref 129154 // AccessControlContext
	nparams 2
	  param inout name "delegatedSubject" type class_ref 503042 // Subject
	  param inout name "removeCallerContext" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3048962 "checkRemoveCallerContext"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the connector server creator can assume the identity of each
principal in the authenticated subject, i.e. check if the connector
server creator codebase contains a subject delegation permission for
each principal present in the authenticated subject.

@return {@code true} if the connector server creator can delegate to all
the authenticated principals in the subject. Otherwise, {@code false}.
"
      end

      operation 3049090 "getSubjectPrincipals"
	class_operation private return_type class_ref 184194 // Collection
	nparams 1
	  param inout name "subject" type class_ref 503042 // Subject
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Principal> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the {@linkplain Subject} principals
@param subject The subject
@return If the {@code Subject} is immutable it will return the principals directly.
        If the {@code Subject} is mutable it will create an unmodifiable copy.
"
      end
    end
  end

  deploymentview 147074 "security"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 332802 "FileLoginModule"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.GetPropertyAction;
import com.sun.jmx.mbeanserver.Util;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FilePermission;
import java.io.IOException;
import java.security.AccessControlException;
import java.security.AccessController;
import java.util.Arrays;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import javax.security.auth.*;
import javax.security.auth.callback.*;
import javax.security.auth.login.*;
import javax.security.auth.spi.*;
import javax.management.remote.JMXPrincipal;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
import sun.management.jmxremote.ConnectorBootstrap;
${definition}"
      associated_elems
	class_ref 507522 // FileLoginModule
      end
      comment "Copyright (c) 2004, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 333314 "JMXPluggableAuthenticator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.AccessController;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import javax.management.remote.JMXPrincipal;
import javax.management.remote.JMXAuthenticator;
import javax.security.auth.AuthPermission;
import javax.security.auth.Subject;
import javax.security.auth.callback.*;
import javax.security.auth.login.AppConfigurationEntry;
import javax.security.auth.login.Configuration;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;
import javax.security.auth.spi.LoginModule;
import com.sun.jmx.remote.util.ClassLogger;
import com.sun.jmx.remote.util.EnvHelp;
${definition}"
      associated_elems
	class_ref 508162 // JMXPluggableAuthenticator
      end
      comment "Copyright (c) 2004, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 333698 "JMXSubjectDomainCombiner"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.CodeSource;
import java.security.Permissions;
import java.security.ProtectionDomain;
import javax.security.auth.Subject;
import javax.security.auth.SubjectDomainCombiner;
${definition}"
      associated_elems
	class_ref 510082 // JMXSubjectDomainCombiner
      end
      comment "Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 333954 "MBeanServerAccessController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.jmx.mbeanserver.GetPropertyAction;
import java.io.ObjectInputStream;
import java.security.AccessController;
import java.util.Set;
import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.AttributeNotFoundException;
import javax.management.InstanceNotFoundException;
import javax.management.InstanceAlreadyExistsException;
import javax.management.IntrospectionException;
import javax.management.InvalidAttributeValueException;
import javax.management.ListenerNotFoundException;
import javax.management.MBeanException;
import javax.management.MBeanInfo;
import javax.management.MBeanRegistrationException;
import javax.management.MBeanServer;
import javax.management.NotCompliantMBeanException;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.ObjectInstance;
import javax.management.ObjectName;
import javax.management.OperationsException;
import javax.management.QueryExp;
import javax.management.ReflectionException;
import javax.management.loading.ClassLoaderRepository;
import javax.management.remote.MBeanServerForwarder;
${definition}"
      associated_elems
	class_ref 510722 // MBeanServerAccessController
      end
      comment "Copyright (c) 2003, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 334082 "MBeanServerFileAccessController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.FileInputStream;
import java.io.IOException;
import java.security.AccessControlContext;
import java.security.AccessController;
import java.security.Principal;
import java.security.PrivilegedAction;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.regex.Pattern;
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.security.auth.Subject;
${definition}"
      associated_elems
	class_ref 510978 // MBeanServerFileAccessController
      end
      comment "Copyright (c) 2003, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 334210 "NotificationAccessController"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.management.Notification;
import javax.management.ObjectName;
import javax.security.auth.Subject;
${definition}"
      associated_elems
	class_ref 505730 // NotificationAccessController
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 334338 "SubjectDelegator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.security.AccessController;
import java.security.AccessControlContext;
import java.security.Permission;
import java.security.Principal;
import java.security.PrivilegedAction;
import javax.security.auth.Subject;
import javax.management.remote.SubjectDelegationPermission;
import java.util.*;
${definition}"
      associated_elems
	class_ref 511490 // SubjectDelegator
      end
      comment "Copyright (c) 2003, 2014, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
