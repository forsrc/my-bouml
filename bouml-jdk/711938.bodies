class ElementImpl
!!!4778114.java!!!	ElementImpl(in line : int, in column : int, in offset : int)
        row = -1;
        col = -1;
        parentRow = -1;
        nodeType = Node.ELEMENT_NODE;

        this.line = line;
        this.column = column;
        charOffset = offset;
!!!4778242.java!!!	ElementImpl(in line : int, in column : int)
        this(line, column, -1);
!!!4778370.java!!!	ElementImpl(inout prefix : String, inout localpart : String, inout rawname : String, inout uri : String, in line : int, in column : int, in offset : int)
        super(prefix, localpart, rawname, uri, Node.ELEMENT_NODE);
        row = -1;
        col = -1;
        parentRow = -1;

        this.line = line;
        this.column = column;
        charOffset = offset;
!!!4778498.java!!!	ElementImpl(inout prefix : String, inout localpart : String, inout rawname : String, inout uri : String, in line : int, in column : int)
        this(prefix, localpart, rawname, uri, line, column, -1);
!!!4778626.java!!!	getOwnerDocument() : Document
        return schemaDOM;
!!!4778754.java!!!	getParentNode() : Node
        return schemaDOM.relations[row][0];
!!!4778882.java!!!	hasChildNodes() : boolean
        if (parentRow == -1) {
            return false;
        }
        else {
            return true;
        }
!!!4779010.java!!!	getFirstChild() : Node
        if (parentRow == -1) {
            return null;
        }
        return schemaDOM.relations[parentRow][1];
!!!4779138.java!!!	getLastChild() : Node
        if (parentRow == -1) {
            return null;
        }
        int i=1;
        for (; i<schemaDOM.relations[parentRow].length; i++) {
            if (schemaDOM.relations[parentRow][i] == null) {
                return schemaDOM.relations[parentRow][i-1];
            }
        }
        if (i ==1) {
            i++;
        }
        return schemaDOM.relations[parentRow][i-1];
!!!4779266.java!!!	getPreviousSibling() : Node
        if (col == 1) {
            return null;
        }
        return schemaDOM.relations[row][col-1];
!!!4779394.java!!!	getNextSibling() : Node
        if (col == schemaDOM.relations[row].length-1) {
            return null;
        }
        return schemaDOM.relations[row][col+1];
!!!4779522.java!!!	getAttributes() : NamedNodeMap
        return new NamedNodeMapImpl(attrs);
!!!4779650.java!!!	hasAttributes() : boolean
        return (attrs.length == 0 ? false : true);
!!!4779778.java!!!	getTagName() : String
        return rawname;
!!!4779906.java!!!	getAttribute(inout name : String) : String

        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(name)) {
                return attrs[i].getValue();
            }
        }
        return "";
!!!4780034.java!!!	getAttributeNode(inout name : String) : Attr
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(name)) {
                return attrs[i];
            }
        }
        return null;
!!!4780162.java!!!	getAttributeNS(inout namespaceURI : String, inout localName : String) : String
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getLocalName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {
                return attrs[i].getValue();
            }
        }
        return "";
!!!4780290.java!!!	getAttributeNodeNS(inout namespaceURI : String, inout localName : String) : Attr
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {
                return attrs[i];
            }
        }
        return null;
!!!4780418.java!!!	hasAttribute(inout name : String) : boolean
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(name)) {
                return true;
            }
        }
        return false;
!!!4780546.java!!!	hasAttributeNS(inout namespaceURI : String, inout localName : String) : boolean
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(localName) && nsEquals(attrs[i].getNamespaceURI(), namespaceURI)) {
                return true;
            }
        }
        return false;
!!!4780674.java!!!	setAttribute(inout name : String, inout value : String) : void
        for (int i=0; i<attrs.length; i++) {
            if (attrs[i].getName().equals(name)) {
                attrs[i].setValue(value);
                return;
            }
        }
!!!4780802.java!!!	getLineNumber() : int
        return line;
!!!4780930.java!!!	getColumnNumber() : int
        return column;
!!!4781058.java!!!	getCharacterOffset() : int
        return charOffset;
!!!4781186.java!!!	getAnnotation() : String
        return fAnnotation;
!!!4781314.java!!!	getSyntheticAnnotation() : String
        return fSyntheticAnnotation;
!!!4781442.java!!!	nsEquals(inout nsURI_1 : String, inout nsURI_2 : String) : boolean
        if (nsURI_1 == null) {
            return (nsURI_2 == null);
        }
        else {
            return nsURI_1.equals(nsURI_2);
        }
