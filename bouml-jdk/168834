format 222
"dv" // jdk1.8::com::sun::org::apache::xerces::internal::impl::dv
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/impl/dv/"
  java_package "com.sun.org.apache.xerces.internal.impl.dv"
  classview 162178 "dv"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 675202 "DatatypeValidator"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The interface that a DTD datatype must implement. The implementation of this
interface must be thread-safe.

@xerces.internal

@author Sandy Gao, IBM

"
      operation 4484226 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "validate a given string against this DV

@param content       the string value that needs to be validated
@param context       the validation context
"
      end
    end

    class 677506 "DTDDVFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The factory to create and return DTD types. The implementation should
store the created datatypes in static data, so that they can be shared by
multiple parser instance, and multiple threads.

@xerces.internal

@author Sandy Gao, IBM

@version $Id: DTDDVFactory.java,v 1.6 2010-11-01 04:39:43 joehw Exp $
"
      classrelation 1905154 // DEFAULT_FACTORY_CLASS (<unidirectional association>)
	relation 1905154 --->
	  a role_name "DEFAULT_FACTORY_CLASS" init_value "
            \"com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905154 // DEFAULT_FACTORY_CLASS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1905282 // XML11_DATATYPE_VALIDATOR_FACTORY (<unidirectional association>)
	relation 1905282 --->
	  a role_name "XML11_DATATYPE_VALIDATOR_FACTORY" init_value "
        \"com.sun.org.apache.xerces.internal.impl.dv.dtd.XML11DTDDVFactoryImpl\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905282 // XML11_DATATYPE_VALIDATOR_FACTORY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4484354 "getInstance"
	class_operation public return_type class_ref 677506 // DTDDVFactory
	nparams 0
	nexceptions 1
	  exception class_ref 679426 // DVFactoryException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of the default DTDDVFactory implementation.

@return  an instance of DTDDVFactory implementation
@exception DVFactoryException  cannot create an instance of the specified
                               class name or the default class name
"
      end

      operation 4484482 "getInstance"
	class_operation public return_type class_ref 677506 // DTDDVFactory
	nparams 1
	  param inout name "factoryClass" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 679426 // DVFactoryException
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of DTDDVFactory implementation.

@param factoryClass  name of the implementation to load.
@return  an instance of DTDDVFactory implementation
@exception DVFactoryException  cannot create an instance of the specified
                               class name or the default class name
"
      end

      operation 4484610 "DTDDVFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " can't create a new object of this class"
      end

      operation 4484738 "getBuiltInDV"
	abstract public return_type class_ref 675202 // DatatypeValidator
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "return a dtd type of the given name

@param name  the name of the datatype
@return      the datatype validator of the given name
"
      end

      operation 4484866 "getBuiltInTypes"
	abstract public return_type class_ref 130178 // Map
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, DatatypeValidator> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get all built-in DVs, which are stored in a map keyed by the name

@return      a map which contains all datatypes
"
      end
    end

    class 679042 "DatatypeException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for datatype exceptions. For DTD types, the exception can be
created from an error message. For Schema types, it needs an error code
(as defined in Appendix C of the structure spec), plus an array of arguents,
for error message substitution.

@xerces.internal

@author Sandy Gao, IBM

@version $Id: DatatypeException.java,v 1.6 2010-11-01 04:39:43 joehw Exp $
"
      classrelation 1904770 // <generalisation>
	relation 1904770 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1904770 // <generalisation>
	  b parent class_ref 132226 // Exception
      end

      attribute 965890 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1940805832730465578L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      classrelation 1904898 // key (<unidirectional association>)
	relation 1904898 --->
	  a role_name "key" protected
	    comment " used to store error code and error substitution arguments
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1904898 // key (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1905026 // args (<unidirectional association>)
	relation 1905026 --->
	  a role_name "args" multiplicity "[]" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1905026 // args (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 4483714 "DatatypeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new datatype exception by providing an error code and a list
of error message substitution arguments.

@param key  error code
@param args error arguments
"
      end

      operation 4483842 "getKey"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the error code

@return  error code
"
      end

      operation 4483970 "getArgs"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the list of error arguments

@return  error arguments
"
      end

      operation 4484098 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides this method to get the formatted&localized error message.

REVISIT: the system locale is used to load the property file.
         do we want to allow the appilcation to specify a
         different locale?
"
      end
    end

    class 679170 "ValidationContext"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ValidationContext has all the information required for the
validation of: id, idref, entity, notation, qname

@xerces.internal

@author Sandy Gao, IBM
@version $Id: ValidationContext.java,v 1.6 2010/07/23 02:09:29 joehw Exp $
"
      operation 4486786 "needFacetChecking"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " whether to validate against facets"
      end

      operation 4486914 "needExtraChecking"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " whether to do extra id/idref/entity checking"
      end

      operation 4487042 "needToNormalize"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " whether we need to normalize the value that is passed!"
      end

      operation 4487170 "useNamespaces"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " are namespaces relevant in this context?"
      end

      operation 4487298 "isEntityDeclared"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " entity"
      end

      operation 4487426 "isEntityUnparsed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4487554 "isIdDeclared"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " id"
      end

      operation 4487682 "addId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4487810 "addIdRef"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " idref"
      end

      operation 4487938 "getSymbol"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "symbol" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " get symbol from symbol table"
      end

      operation 4488066 "getURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " qname"
      end

      operation 4488194 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Locale"
      end
    end

    class 679298 "InvalidDatatypeValueException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Datatype exception for invalid values.

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1905666 // <generalisation>
	relation 1905666 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1905666 // <generalisation>
	  b parent class_ref 679042 // DatatypeException
      end

      attribute 966274 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5523739426958236125L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4485378 "InvalidDatatypeValueException"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new datatype exception by providing an error code and a list
of error message substitution arguments.

@param key  error code
@param args error arguments
"
      end
    end

    class 679426 "DVFactoryException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A runtime exception that's thrown if an error happens when the application
tries to get a DV factory instance.

@xerces.internal

"
      classrelation 1905410 // <generalisation>
	relation 1905410 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1905410 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end

      attribute 966018 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3738854697928682412L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4484994 "DVFactoryException"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4485122 "DVFactoryException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 679554 "InvalidDatatypeFacetException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Datatype exception for invalid facet. This exception is only used by
schema datatypes.

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1905538 // <generalisation>
	relation 1905538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1905538 // <generalisation>
	  b parent class_ref 679042 // DatatypeException
      end

      attribute 966146 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4104066085909970654L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4485250 "InvalidDatatypeFacetException"
	public explicit_return_type ""
	nparams 2
	  param inout name "key" type class_ref 128130 // String
	  param inout name "args" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new datatype exception by providing an error code and a list
of error message substitution arguments.

@param key  error code
@param args error arguments
"
      end
    end

    class 679682 "SchemaDVFactory"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines a factory API that enables applications to <p>
1. to get the instance of specified SchemaDVFactory implementation <p>
2. to create/return built-in schema simple types <p>
3. to create user defined simple types. <p>

Implementations of this abstract class can be used to get built-in simple
types and create user-defined simle types. <p>

The implementation should store the built-in datatypes in static data, so
that they can be shared by multiple parser instance, and multiple threads.

@xerces.internal

@author Sandy Gao, IBM

@version $Id: SchemaDVFactory.java,v 1.6 2010-11-01 04:39:43 joehw Exp $
"
      classrelation 1905794 // DEFAULT_FACTORY_CLASS (<unidirectional association>)
	relation 1905794 --->
	  a role_name "DEFAULT_FACTORY_CLASS" init_value " \"com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl\"" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905794 // DEFAULT_FACTORY_CLASS (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4485506 "getInstance"
	class_operation public return_type class_ref 679682 // SchemaDVFactory
	nparams 0
	nexceptions 1
	  exception class_ref 679426 // DVFactoryException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a default instance of SchemaDVFactory implementation.

@return  an instance of SchemaDVFactory implementation
@exception DVFactoryException  cannot create an instance of the specified
                               class name or the default class name
"
      end

      operation 4485634 "getInstance"
	class_operation public return_type class_ref 679682 // SchemaDVFactory
	nparams 1
	  param inout name "factoryClass" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 679426 // DVFactoryException
	
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getInstance():  SchemaDVFactory

Get an instance of SchemaDVFactory implementation.

@param factoryClass   name of the schema factory implementation to instantiate.
@return  an instance of SchemaDVFactory implementation
@exception DVFactoryException  cannot create an instance of the specified
                               class name or the default class name
"
      end

      operation 4485762 "SchemaDVFactory"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " can't create a new object of this class"
      end

      operation 4485890 "getBuiltInType"
	abstract public return_type class_ref 679810 // XSSimpleType
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a built-in simple type of the given name
REVISIT: its still not decided within the Schema WG how to define the
         ur-types and if all simple types should be derived from a
         complex type, so as of now we ignore the fact that anySimpleType
         is derived from anyType, and pass 'null' as the base of
         anySimpleType. It needs to be changed as per the decision taken.

@param name  the name of the datatype
@return      the datatype validator of the given name
"
      end

      operation 4486018 "getBuiltInTypes"
	abstract public return_type class_ref 679938 // SymbolHash
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get all built-in simple types, which are stored in a SymbolHash keyed by
the name

@return      a SymbolHash which contains all built-in simple types
"
      end

      operation 4486146 "createTypeRestriction"
	abstract public return_type class_ref 679810 // XSSimpleType
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "targetNamespace" type class_ref 128130 // String
	  param in name "finalSet" explicit_type "short"
	  param inout name "base" type class_ref 679810 // XSSimpleType
	  param inout name "annotations" type class_ref 680066 // XSObjectList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new simple type which is derived by restriction from another
simple type.

@param name              name of the new type, could be null
@param targetNamespace   target namespace of the new type, could be null
@param finalSet          value of \"final\"
@param base              base type of the new type
@param annotations       set of annotations
@return                  the newly created simple type
"
      end

      operation 4486274 "createTypeList"
	abstract public return_type class_ref 679810 // XSSimpleType
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "targetNamespace" type class_ref 128130 // String
	  param in name "finalSet" explicit_type "short"
	  param inout name "itemType" type class_ref 679810 // XSSimpleType
	  param inout name "annotations" type class_ref 680066 // XSObjectList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new simple type which is derived by list from another simple
type.

@param name              name of the new type, could be null
@param targetNamespace   target namespace of the new type, could be null
@param finalSet          value of \"final\"
@param itemType          item type of the list type
@param annotations       set of annotations
@return                  the newly created simple type
"
      end

      operation 4486402 "createTypeUnion"
	abstract public return_type class_ref 679810 // XSSimpleType
	nparams 5
	  param inout name "name" type class_ref 128130 // String
	  param inout name "targetNamespace" type class_ref 128130 // String
	  param in name "finalSet" explicit_type "short"
	  param inout name "memberTypes" type class_ref 679810 // XSSimpleType
	multiplicity "[]"
	  param inout name "annotations" type class_ref 680066 // XSObjectList
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new simple type which is derived by union from a list of other
simple types.

@param name              name of the new type, could be null
@param targetNamespace   target namespace of the new type, could be null
@param finalSet          value of \"final\"
@param memberTypes       member types of the union type
@param annotations       set of annotations
@return                  the newly created simple type
"
      end
    end

    class 679810 "XSSimpleType"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface <code>XSSimpleType</code> represents the simple type
definition of schema component and defines methods to query the information
contained.
Any simple type (atomic, list or union) will implement this interface.
It inherits from <code>XSTypeDecl</code>.

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1909250 // <generalisation>
	relation 1909250 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1909250 // <generalisation>
	  b parent class_ref 663810 // XSSimpleTypeDefinition
      end

      attribute 970114 "WS_PRESERVE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "constants defined for the values of 'whitespace' facet.
see <a href='http://www.w3.org/TR/xmlschema-2/#dt-whiteSpace'> XML Schema
Part 2: Datatypes </a>

 preserve the white spaces 
"
      end

      attribute 970242 "WS_REPLACE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " replace the white spaces 
"
      end

      attribute 970370 "WS_COLLAPSE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " collapse the white spaces 
"
      end

      attribute 970498 "PRIMITIVE_STRING"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Constant defined for the primitive built-in simple tpyes.
see <a href='http://www.w3.org/TR/xmlschema-2/#built-in-primitive-datatypes'>
XML Schema Part 2: Datatypes </a>

 \"string\" type 
"
      end

      attribute 970626 "PRIMITIVE_BOOLEAN"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"boolean\" type 
"
      end

      attribute 970754 "PRIMITIVE_DECIMAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"decimal\" type 
"
      end

      attribute 970882 "PRIMITIVE_FLOAT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"float\" type 
"
      end

      attribute 971010 "PRIMITIVE_DOUBLE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"double\" type 
"
      end

      attribute 971138 "PRIMITIVE_DURATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"duration\" type 
"
      end

      attribute 971266 "PRIMITIVE_DATETIME"
	class_attribute const_attribute public explicit_type "short"
	init_value " 7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"dataTime\" type 
"
      end

      attribute 971394 "PRIMITIVE_TIME"
	class_attribute const_attribute public explicit_type "short"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"time\" type 
"
      end

      attribute 971522 "PRIMITIVE_DATE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"date\" type 
"
      end

      attribute 971650 "PRIMITIVE_GYEARMONTH"
	class_attribute const_attribute public explicit_type "short"
	init_value " 10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"gYearMonth\" type 
"
      end

      attribute 971778 "PRIMITIVE_GYEAR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 11"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"gYear\" type 
"
      end

      attribute 971906 "PRIMITIVE_GMONTHDAY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 12"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"gMonthDay\" type 
"
      end

      attribute 972034 "PRIMITIVE_GDAY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 13"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"gDay\" type 
"
      end

      attribute 972162 "PRIMITIVE_GMONTH"
	class_attribute const_attribute public explicit_type "short"
	init_value " 14"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"gMonth\" type 
"
      end

      attribute 972290 "PRIMITIVE_HEXBINARY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 15"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"hexBinary\" type 
"
      end

      attribute 972418 "PRIMITIVE_BASE64BINARY"
	class_attribute const_attribute public explicit_type "short"
	init_value " 16"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"base64Binary\" type 
"
      end

      attribute 972546 "PRIMITIVE_ANYURI"
	class_attribute const_attribute public explicit_type "short"
	init_value " 17"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"anyURI\" type 
"
      end

      attribute 972674 "PRIMITIVE_QNAME"
	class_attribute const_attribute public explicit_type "short"
	init_value " 18"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"QName\" type 
"
      end

      attribute 972802 "PRIMITIVE_PRECISIONDECIMAL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 19"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"precisionDecimal\" type 
"
      end

      attribute 972930 "PRIMITIVE_NOTATION"
	class_attribute const_attribute public explicit_type "short"
	init_value " 20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " \"NOTATION\" type 
"
      end

      operation 4492290 "getPrimitiveKind"
	public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "return an ID representing the built-in primitive base type.
REVISIT: This method is (currently) for internal use only.
         the constants returned from this method are not finalized yet.
         the names and values might change in the further.

@return   an ID representing the built-in primitive base type
"
      end

      operation 4492418 "validate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "content" type class_ref 128130 // String
	  param inout name "context" type class_ref 679170 // ValidationContext
	  param inout name "validatedInfo" type class_ref 680194 // ValidatedInfo
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "validate a given string against this simple type.

@param content       the string value that needs to be validated
@param context       the validation context
@param validatedInfo used to store validation result

@return              the actual value (QName, Boolean) of the string value
"
      end

      operation 4492546 "validate"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "content" type class_ref 129538 // Object
	  param inout name "context" type class_ref 679170 // ValidationContext
	  param inout name "validatedInfo" type class_ref 680194 // ValidatedInfo
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "validate a given string value, represented by content.toString().
note that if content is a StringBuffer, for performance reasons,
it's possible that the content of the string buffer is modified.

@param content       the string value that needs to be validated
@param context       the validation context
@param validatedInfo used to store validation result

@return              the actual value (QName, Boolean) of the string value
"
      end

      operation 4492674 "validate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 679170 // ValidationContext
	  param inout name "validatedInfo" type class_ref 680194 // ValidatedInfo
	nexceptions 1
	  exception class_ref 679298 // InvalidDatatypeValueException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate an actual value against this simple type.

@param context       the validation context
@param validatedInfo used to provide the actual value and member types
@exception InvalidDatatypeValueException  exception for invalid values.
"
      end

      operation 4492802 "applyFacets"
	public explicit_return_type "void"
	nparams 4
	  param inout name "facets" type class_ref 680322 // XSFacets
	  param in name "presentFacet" explicit_type "short"
	  param in name "fixedFacet" explicit_type "short"
	  param inout name "context" type class_ref 679170 // ValidationContext
	nexceptions 1
	  exception class_ref 679554 // InvalidDatatypeFacetException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this type is created from restriction, then some facets can be applied
to the simple type. <code>XSFacets</code> is used to pass the value of
different facets.

@param facets        the value of all the facets
@param presentFacet  bit combination value of the costraining facet
                     constants which are present.
@param fixedFacet    bit combination value of the costraining facet
                     constants which are fixed.
@param context       the validation context
@exception InvalidDatatypeFacetException  exception for invalid facet values.
"
      end

      operation 4492930 "isEqual"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "value1" type class_ref 129538 // Object
	  param inout name "value2" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether two actual values are equal.

@param value1  the first value
@param value2  the second value
@return        true if the two value are equal
"
      end

      operation 4493058 "isIDType"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the order of the two actual values. (May not be supported by all
simple types.
REVISIT: Andy believes that a compare() method is necessary.
         I don't see the necessity for schema (the only place where we
         need to compare two values is to check min/maxIn/Exclusive
         facets, but we only need a private method for this case.)
         But Andy thinks XPATH potentially needs this compare() method.

@param value1  the first value
@prarm value2  the second value
@return        > 0 if value1 > value2
               = 0 if value1 == value2
               < = if value1 < value2

public short compare(Object value1, Object value2);

Check whether this type is or is derived from ID.
REVISIT: this method makes ID special, which is not a good design.
         but since ID is not a primitive, there doesn't seem to be a
         clean way of doing it except to define special method like this.

@return  whether this simple type is or is derived from ID.
"
      end

      operation 4493186 "getWhitespace"
	public explicit_return_type "short"
	nparams 0
	nexceptions 1
	  exception class_ref 679042 // DatatypeException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the whitespace corresponding to this datatype.

@return valid values are WS_PRESERVE, WS_REPLACE, WS_COLLAPSE.
@exception DatatypeException
                  union datatypes don't have whitespace facet associated with them
"
      end
    end

    class 680194 "ValidatedInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class to get the information back after content is validated. This info
would be filled by validate().

@xerces.internal

@author Neeraj Bajaj, Sun Microsystems, inc.

"
      classrelation 1905922 // normalizedValue (<unidirectional association>)
	relation 1905922 --->
	  a role_name "normalizedValue" public
	    comment "
The normalized value of a string value

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1905922 // normalizedValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1906050 // actualValue (<unidirectional association>)
	relation 1906050 --->
	  a role_name "actualValue" public
	    comment "
The actual value from a string value (QName, Boolean, etc.)
An array of Objects if the type is a list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906050 // actualValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 966402 "actualValueType"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The type of the actual value. It's one of the _DT constants
defined in XSConstants.java. The value is used to indicate
the most specific built-in type.
(i.e. short instead of decimal or integer).

"
      end

      classrelation 1906178 // memberType (<unidirectional association>)
	relation 1906178 --->
	  a role_name "memberType" public
	    comment "
If the type is a union type, then the member type which
actually validated the string value.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906178 // memberType (<unidirectional association>)
	  b parent class_ref 679810 // XSSimpleType
      end

      classrelation 1906306 // memberTypes (<unidirectional association>)
	relation 1906306 --->
	  a role_name "memberTypes" multiplicity "[]" public
	    comment "
If
1. the type is a union type where one of the member types is a list, or
   if the type is a list; and
2. the item type of the list is a union type
then an array of member types used to validate the values.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1906306 // memberTypes (<unidirectional association>)
	  b parent class_ref 679810 // XSSimpleType
      end

      classrelation 1906434 // itemValueTypes (<unidirectional association>)
	relation 1906434 --->
	  a role_name "itemValueTypes" public
	    comment "
In the case the value is a list or a list of unions, this value
indicates the type(s) of the items in the list.
For a normal list, the length of the array is 1; for list of unions,
the length of the array is the same as the length of the list.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906434 // itemValueTypes (<unidirectional association>)
	  b parent class_ref 663682 // ShortList
      end

      operation 4486530 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "reset the state of this object
"
      end

      operation 4486658 "stringValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string representation of the value. If there is an actual
value, use toString; otherwise, use the normalized value.
"
      end
    end

    class 680322 "XSFacets"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The class used to pass all facets to {@link XSSimpleType#applyFacets}.

@xerces.internal

@author Sandy Gao, IBM

"
      attribute 966530 "length"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of length facet.

"
      end

      attribute 966658 "minLength"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of minLength facet.

"
      end

      attribute 966786 "maxLength"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of maxLength facet.

"
      end

      attribute 966914 "whiteSpace"
	public explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of whiteSpace facet.

"
      end

      attribute 967042 "totalDigits"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of totalDigits facet.

"
      end

      attribute 967170 "fractionDigits"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "value of fractionDigits facet.

"
      end

      classrelation 1906562 // pattern (<unidirectional association>)
	relation 1906562 --->
	  a role_name "pattern" public
	    comment "
string containing value of pattern facet, for multiple patterns values
are ORed together.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906562 // pattern (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1906690 // enumeration (<unidirectional association>)
	relation 1906690 --->
	  a role_name "enumeration" public
	    comment "
Vector containing values of Enumeration facet, as String's.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906690 // enumeration (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1906818 // enumNSDecls (<unidirectional association>)
	relation 1906818 --->
	  a role_name "enumNSDecls" public
	    comment "
An array parallel to \"Vector enumeration\". It contains namespace context
of each enumeration value. Elements of this vector are NamespaceContext
objects.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906818 // enumNSDecls (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1906946 // maxInclusive (<unidirectional association>)
	relation 1906946 --->
	  a role_name "maxInclusive" public
	    comment "
value of maxInclusive facet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1906946 // maxInclusive (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1907074 // maxExclusive (<unidirectional association>)
	relation 1907074 --->
	  a role_name "maxExclusive" public
	    comment "
value of maxExclusive facet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907074 // maxExclusive (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1907202 // minInclusive (<unidirectional association>)
	relation 1907202 --->
	  a role_name "minInclusive" public
	    comment "
value of minInclusive facet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907202 // minInclusive (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1907330 // minExclusive (<unidirectional association>)
	relation 1907330 --->
	  a role_name "minExclusive" public
	    comment "
value of minExclusive facet.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907330 // minExclusive (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1907458 // lengthAnnotation (<unidirectional association>)
	relation 1907458 --->
	  a role_name "lengthAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907458 // lengthAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1907586 // minLengthAnnotation (<unidirectional association>)
	relation 1907586 --->
	  a role_name "minLengthAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907586 // minLengthAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1907714 // maxLengthAnnotation (<unidirectional association>)
	relation 1907714 --->
	  a role_name "maxLengthAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907714 // maxLengthAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1907842 // whiteSpaceAnnotation (<unidirectional association>)
	relation 1907842 --->
	  a role_name "whiteSpaceAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907842 // whiteSpaceAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1907970 // totalDigitsAnnotation (<unidirectional association>)
	relation 1907970 --->
	  a role_name "totalDigitsAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1907970 // totalDigitsAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1908098 // fractionDigitsAnnotation (<unidirectional association>)
	relation 1908098 --->
	  a role_name "fractionDigitsAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908098 // fractionDigitsAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1908226 // patternAnnotations (<unidirectional association>)
	relation 1908226 --->
	  a role_name "patternAnnotations" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908226 // patternAnnotations (<unidirectional association>)
	  b parent class_ref 680578 // XSObjectListImpl
      end

      classrelation 1908354 // enumAnnotations (<unidirectional association>)
	relation 1908354 --->
	  a role_name "enumAnnotations" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908354 // enumAnnotations (<unidirectional association>)
	  b parent class_ref 680066 // XSObjectList
      end

      classrelation 1908482 // maxInclusiveAnnotation (<unidirectional association>)
	relation 1908482 --->
	  a role_name "maxInclusiveAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908482 // maxInclusiveAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1908610 // maxExclusiveAnnotation (<unidirectional association>)
	relation 1908610 --->
	  a role_name "maxExclusiveAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908610 // maxExclusiveAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1908738 // minInclusiveAnnotation (<unidirectional association>)
	relation 1908738 --->
	  a role_name "minInclusiveAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908738 // minInclusiveAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      classrelation 1908866 // minExclusiveAnnotation (<unidirectional association>)
	relation 1908866 --->
	  a role_name "minExclusiveAnnotation" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1908866 // minExclusiveAnnotation (<unidirectional association>)
	  b parent class_ref 680450 // XSAnnotation
      end

      operation 4488322 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 155650 "dv"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 469378 "DatatypeException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import java.util.ResourceBundle;
import java.util.PropertyResourceBundle;
import java.util.MissingResourceException;
${definition}"
      associated_elems
	class_ref 679042 // DatatypeException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 469506 "DatatypeValidator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.ValidationContext;
${definition}"
      associated_elems
	class_ref 675202 // DatatypeValidator
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 469634 "DTDDVFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl;
import com.sun.org.apache.xerces.internal.impl.dv.dtd.XML11DTDDVFactoryImpl;
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
import java.util.Map;
${definition}"
      associated_elems
	class_ref 677506 // DTDDVFactory
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 469762 "DVFactoryException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 679426 // DVFactoryException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 469890 "InvalidDatatypeFacetException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 679554 // InvalidDatatypeFacetException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470018 "InvalidDatatypeValueException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 679298 // InvalidDatatypeValueException
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


The Apache Software License, Version 1.1


Copyright (c) 2001, 2002 The Apache Software Foundation.  All rights
reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

3. The end-user documentation included with the redistribution,
   if any, must include the following acknowledgment:
      \"This product includes software developed by the
       Apache Software Foundation (http://www.apache.org/).\"
   Alternately, this acknowledgment may appear in the software itself,
   if and wherever such third-party acknowledgments normally appear.

4. The names \"Xerces\" and \"Apache Software Foundation\" must
   not be used to endorse or promote products derived from this
   software without prior written permission. For written
   permission, please contact apache@apache.org.

5. Products derived from this software may not be called \"Apache\",
   nor may \"Apache\" appear in their name, without prior written
   permission of the Apache Software Foundation.

THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation and was
originally based on software copyright (c) 1999, International
Business Machines, Inc., http://www.apache.org.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 470146 "SchemaDVFactory"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.util.SymbolHash;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
${definition}"
      associated_elems
	class_ref 679682 // SchemaDVFactory
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470274 "ValidatedInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xs.ShortList;
${definition}"
      associated_elems
	class_ref 680194 // ValidatedInfo
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470402 "ValidationContext"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
${definition}"
      associated_elems
	class_ref 679170 // ValidationContext
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 470530 "XSFacets"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import com.sun.org.apache.xerces.internal.xs.XSAnnotation;
import com.sun.org.apache.xerces.internal.xs.XSObjectList;
import com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl;
${definition}"
      associated_elems
	class_ref 680322 // XSFacets
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 471042 "XSSimpleType"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition;
${definition}"
      associated_elems
	class_ref 679810 // XSSimpleType
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 169218 // dtd

  package_ref 169346 // util

  package_ref 169602 // xs
end
