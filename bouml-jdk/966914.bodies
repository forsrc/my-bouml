class Inet4Address
!!!7486978.java!!!	Inet4Address()
        super();
        holder().hostName = null;
        holder().address = 0;
        holder().family = IPv4;
!!!7487106.java!!!	Inet4Address(inout hostName : String, inout addr : byte [[]])
        holder().hostName = hostName;
        holder().family = IPv4;
        if (addr != null) {
            if (addr.length == INADDRSZ) {
                int address  = addr[3] & 0xFF;
                address |= ((addr[2] << 8) & 0xFF00);
                address |= ((addr[1] << 16) & 0xFF0000);
                address |= ((addr[0] << 24) & 0xFF000000);
                holder().address = address;
            }
        }
        holder().originalHostName = hostName;
!!!7487234.java!!!	Inet4Address(inout hostName : String, in address : int)
        holder().hostName = hostName;
        holder().family = IPv4;
        holder().address = address;
        holder().originalHostName = hostName;
!!!7487362.java!!!	writeReplace() : Object
        // will replace the to be serialized 'this' object
        InetAddress inet = new InetAddress();
        inet.holder().hostName = holder().getHostName();
        inet.holder().address = holder().getAddress();

        /**
         * Prior to 1.4 an InetAddress was created with a family
         * based on the platform AF_INET value (usually 2).
         * For compatibility reasons we must therefore write the
         * the InetAddress with this family.
         */
        inet.holder().family = 2;

        return inet;
!!!7487490.java!!!	isMulticastAddress() : boolean
        return ((holder().getAddress() & 0xf0000000) == 0xe0000000);
!!!7487618.java!!!	isAnyLocalAddress() : boolean
        return holder().getAddress() == 0;
!!!7487746.java!!!	isLoopbackAddress() : boolean
        /* 127.x.x.x */
        byte[] byteAddr = getAddress();
        return byteAddr[0] == 127;
!!!7487874.java!!!	isLinkLocalAddress() : boolean
        // link-local unicast in IPv4 (169.254.0.0/16)
        // defined in "Documenting Special Use IPv4 Address Blocks
        // that have been Registered with IANA" by Bill Manning
        // draft-manning-dsua-06.txt
        int address = holder().getAddress();
        return (((address >>> 24) & 0xFF) == 169)
            && (((address >>> 16) & 0xFF) == 254);
!!!7488002.java!!!	isSiteLocalAddress() : boolean
        // refer to RFC 1918
        // 10/8 prefix
        // 172.16/12 prefix
        // 192.168/16 prefix
        int address = holder().getAddress();
        return (((address >>> 24) & 0xFF) == 10)
            || ((((address >>> 24) & 0xFF) == 172)
                && (((address >>> 16) & 0xF0) == 16))
            || ((((address >>> 24) & 0xFF) == 192)
                && (((address >>> 16) & 0xFF) == 168));
!!!7488130.java!!!	isMCGlobal() : boolean
        // 224.0.1.0 to 238.255.255.255
        byte[] byteAddr = getAddress();
        return ((byteAddr[0] & 0xff) >= 224 && (byteAddr[0] & 0xff) <= 238 ) &&
            !((byteAddr[0] & 0xff) == 224 && byteAddr[1] == 0 &&
              byteAddr[2] == 0);
!!!7488258.java!!!	isMCNodeLocal() : boolean
        // unless ttl == 0
        return false;
!!!7488386.java!!!	isMCLinkLocal() : boolean
        // 224.0.0/24 prefix and ttl == 1
        int address = holder().getAddress();
        return (((address >>> 24) & 0xFF) == 224)
            && (((address >>> 16) & 0xFF) == 0)
            && (((address >>> 8) & 0xFF) == 0);
!!!7488514.java!!!	isMCSiteLocal() : boolean
        // 239.255/16 prefix or ttl < 32
        int address = holder().getAddress();
        return (((address >>> 24) & 0xFF) == 239)
            && (((address >>> 16) & 0xFF) == 255);
!!!7488642.java!!!	isMCOrgLocal() : boolean
        // 239.192 - 239.195
        int address = holder().getAddress();
        return (((address >>> 24) & 0xFF) == 239)
            && (((address >>> 16) & 0xFF) >= 192)
            && (((address >>> 16) & 0xFF) <= 195);
!!!7488770.java!!!	getAddress() : byte
        int address = holder().getAddress();
        byte[] addr = new byte[INADDRSZ];

        addr[0] = (byte) ((address >>> 24) & 0xFF);
        addr[1] = (byte) ((address >>> 16) & 0xFF);
        addr[2] = (byte) ((address >>> 8) & 0xFF);
        addr[3] = (byte) (address & 0xFF);
        return addr;
!!!7488898.java!!!	getHostAddress() : String
        return numericToTextFormat(getAddress());
!!!7489026.java!!!	hashCode() : int
        return holder().getAddress();
!!!7489154.java!!!	equals(inout obj : Object) : boolean
        return (obj != null) && (obj instanceof Inet4Address) &&
            (((InetAddress)obj).holder().getAddress() == holder().getAddress());
!!!7489282.java!!!	numericToTextFormat(inout src : byte [[]]) : String
        return (src[0] & 0xff) + "." + (src[1] & 0xff) + "." + (src[2] & 0xff) + "." + (src[3] & 0xff);
