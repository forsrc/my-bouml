class SnmpString
!!!3095042.java!!!	SnmpString()
        value = new byte[0] ;
!!!3095170.java!!!	SnmpString(inout v : byte [[]])
        value = v.clone() ;
!!!3095298.java!!!	SnmpString(inout v : Byte [[]])
        value = new byte[v.length] ;
        for (int i = 0 ; i < v.length ; i++) {
            value[i] = v[i].byteValue() ;
        }
!!!3095426.java!!!	SnmpString(inout v : String)
        value = v.getBytes() ;
!!!3095554.java!!!	SnmpString(inout address : InetAddress)
        value = address.getAddress();
!!!3095682.java!!!	inetAddressValue() : InetAddress
        return InetAddress.getByAddress(value);
!!!3095810.java!!!	BinToChar(inout bin : String) : String
        char value[] = new char[bin.length()/8];
        int binLength = value.length;
        for (int i = 0; i < binLength; i++)
            value[i] = (char)Integer.parseInt(bin.substring(8*i, 8*i+8), 2);
        return new String(value);
!!!3095938.java!!!	HexToChar(inout hex : String) : String
        char value[] = new char[hex.length()/2];
        int hexLength = value.length;
        for (int i = 0; i < hexLength; i++)
            value[i] = (char)Integer.parseInt(hex.substring(2*i, 2*i+2), 16);
        return new String(value);
!!!3096066.java!!!	byteValue() : byte
        return value.clone() ;
!!!3096194.java!!!	toByte() : Byte
        Byte[] result = new Byte[value.length] ;
        for (int i = 0 ; i < value.length ; i++) {
            result[i] = new Byte(value[i]) ;
        }
        return result ;
!!!3096322.java!!!	toString() : String
        return new String(value) ;
!!!3096450.java!!!	toOid() : SnmpOid
        long[] ids = new long[value.length] ;
        for (int i = 0 ; i < value.length ; i++) {
            ids[i] = (long)(value[i] & 0xFF) ;
        }
        return new SnmpOid(ids) ;
!!!3096578.java!!!	toOid(inout index : long [[]], in start : int) : SnmpOid
        try {
            if (index[start] > Integer.MAX_VALUE) {
                throw new SnmpStatusException(SnmpStatusException.noSuchName) ;
            }
            int strLen = (int)index[start++] ;
            long[] ids = new long[strLen] ;
            for (int i = 0 ; i < strLen ; i++) {
                ids[i] = index[start + i] ;
            }
            return new SnmpOid(ids) ;
        }
        catch(IndexOutOfBoundsException e) {
            throw new SnmpStatusException(SnmpStatusException.noSuchName) ;
        }
!!!3096706.java!!!	nextOid(inout index : long [[]], in start : int) : int
        try {
            if (index[start] > Integer.MAX_VALUE) {
                throw new SnmpStatusException(SnmpStatusException.noSuchName) ;
            }
            int strLen = (int)index[start++] ;
            start += strLen ;
            if (start <= index.length) {
                return start ;
            }
            else {
                throw new SnmpStatusException(SnmpStatusException.noSuchName) ;
            }
        }
        catch(IndexOutOfBoundsException e) {
            throw new SnmpStatusException(SnmpStatusException.noSuchName) ;
        }
!!!3096834.java!!!	appendToOid(inout source : SnmpOid, inout dest : SnmpOid) : void
        dest.append(source.getLength()) ;
        dest.append(source) ;
!!!3096962.java!!!	duplicate() : SnmpValue
        return (SnmpValue) clone() ;
!!!3097090.java!!!	clone() : Object
        SnmpString newclone = null ;

        try {
            newclone = (SnmpString) super.clone() ;
            newclone.value = new byte[value.length] ;
            System.arraycopy(value, 0, newclone.value, 0, value.length) ;
        } catch (CloneNotSupportedException e) {
            throw new InternalError(e) ; // vm bug.
        }
        return newclone ;
!!!3097218.java!!!	getTypeName() : String
        return name ;
