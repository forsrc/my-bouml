format 222
"undo" // jdk1.8::javax::swing::undo
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/swing/undo/"
  java_package "javax.swing.undo"
  classview 149634 "undo"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 409346 "UndoableEdit"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An <code>UndoableEdit</code> represents an edit.  The edit may
be undone, or if already undone the edit may be redone.
<p>
<code>UndoableEdit</code> is designed to be used with the
<code>UndoManager</code>.  As <code>UndoableEdit</code>s are generated
by an <code>UndoableEditListener</code> they are typically added to
the <code>UndoManager</code>.  When an <code>UndoableEdit</code>
is added to an <code>UndoManager</code> the following occurs (assuming
<code>end</code> has not been called on the <code>UndoManager</code>):
<ol>
<li>If the <code>UndoManager</code> contains edits it will call
    <code>addEdit</code> on the current edit passing in the new edit
    as the argument.  If <code>addEdit</code> returns true the
    new edit is assumed to have been incorporated into the current edit and
    the new edit will not be added to the list of current edits.
    Edits can use <code>addEdit</code> as a way for smaller edits to
    be incorporated into a larger edit and treated as a single edit.
<li>If <code>addEdit</code> returns false <code>replaceEdit</code>
    is called on the new edit with the current edit passed in as the
    argument. This is the inverse of <code>addEdit</code> &#151;
    if the new edit returns true from <code>replaceEdit</code>, the new
    edit replaces the current edit.
</ol>
The <code>UndoManager</code> makes use of
<code>isSignificant</code> to determine how many edits should be
undone or redone.  The <code>UndoManager</code> will undo or redo
all insignificant edits (<code>isSignificant</code> returns false)
between the current edit and the last or
next significant edit.   <code>addEdit</code> and
<code>replaceEdit</code> can be used to treat multiple edits as
a single edit, returning false from <code>isSignificant</code>
allows for treating can be used to
have many smaller edits undone or redone at once.  Similar functionality
can also be done using the <code>addEdit</code> method.

@author Ray Ryan
"
      operation 2390658 "undo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411010 // CannotUndoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Undo the edit.

@throws CannotUndoException if this edit can not be undone
"
      end

      operation 2390786 "canUndo"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this edit may be undone.

@return true if this edit may be undone
"
      end

      operation 2390914 "redo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411138 // CannotRedoException
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Re-applies the edit.

@throws CannotRedoException if this edit can not be redone
"
      end

      operation 2391042 "canRedo"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this edit may be redone.

@return true if this edit may be redone
"
      end

      operation 2391170 "die"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Informs the edit that it should no longer be used. Once an
<code>UndoableEdit</code> has been marked as dead it can no longer
be undone or redone.
<p>
This is a useful hook for cleaning up state no longer
needed once undoing or redoing is impossible--for example,
deleting file resources used by objects that can no longer be
undeleted. <code>UndoManager</code> calls this before it dequeues edits.
<p>
Note that this is a one-way operation. There is no \"un-die\"
method.

@see CompoundEdit#die
"
      end

      operation 2391298 "addEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>UndoableEdit</code> to this <code>UndoableEdit</code>.
This method can be used to coalesce smaller edits into a larger
compound edit.  For example, text editors typically allow
undo operations to apply to words or sentences.  The text
editor may choose to generate edits on each key event, but allow
those edits to be coalesced into a more user-friendly unit, such as
a word. In this case, the <code>UndoableEdit</code> would
override <code>addEdit</code> to return true when the edits may
be coalesced.
<p>
A return value of true indicates <code>anEdit</code> was incorporated
into this edit.  A return value of false indicates <code>anEdit</code>
may not be incorporated into this edit.
<p>Typically the receiver is already in the queue of a
<code>UndoManager</code> (or other <code>UndoableEditListener</code>),
and is being given a chance to incorporate <code>anEdit</code>
rather than letting it be added to the queue in turn.</p>

<p>If true is returned, from now on <code>anEdit</code> must return
false from <code>canUndo</code> and <code>canRedo</code>,
and must throw the appropriate exception on <code>undo</code> or
<code>redo</code>.</p>

@param anEdit the edit to be added
@return true if <code>anEdit</code> may be incorporated into this
             edit
"
      end

      operation 2391426 "replaceEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this <code>UndoableEdit</code> should replace
<code>anEdit</code>. This method is used by <code>CompoundEdit</code>
and the <code>UndoManager</code>; it is called if
<code>anEdit</code> could not be added to the current edit
(<code>addEdit</code> returns false).
<p>
This method provides a way for an edit to replace an existing edit.
<p>This message is the opposite of addEdit--anEdit has typically
already been queued in an <code>UndoManager</code> (or other
UndoableEditListener), and the receiver is being given a chance
to take its place.</p>

<p>If true is returned, from now on anEdit must return false from
canUndo() and canRedo(), and must throw the appropriate
exception on undo() or redo().</p>

@param anEdit the edit that replaces the current edit
@return true if this edit should replace <code>anEdit</code>
"
      end

      operation 2391554 "isSignificant"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this edit is considered significant.  A significant
edit is typically an edit that should be presented to the user, perhaps
on a menu item or tooltip.  The <code>UndoManager</code> will undo,
or redo, all insignificant edits to the next significant edit.

@return true if this edit is significant
"
      end

      operation 2391682 "getPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a localized, human-readable description of this edit, suitable
for use in a change log, for example.

@return description of this edit
"
      end

      operation 2391810 "getUndoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a localized, human-readable description of the undoable form of
this edit, suitable for use as an Undo menu item, for example.
This is typically derived from <code>getPresentationName</code>.

@return a description of the undoable form of this edit
"
      end

      operation 2391938 "getRedoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a localized, human-readable description of the redoable form of
this edit, suitable for use as a Redo menu item, for example. This is
typically derived from <code>getPresentationName</code>.

@return a description of the redoable form of this edit
"
      end
    end

    class 410754 "CompoundEdit"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A concrete subclass of AbstractUndoableEdit, used to assemble little
UndoableEdits into great big ones.

@author Ray Ryan
"
      classrelation 756610 // <generalisation>
	relation 756610 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 756610 // <generalisation>
	  b parent class_ref 410882 // AbstractUndoableEdit
      end

      attribute 525954 "inProgress"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if this edit has never received <code>end</code>.

"
      end

      classrelation 756738 // edits (<unidirectional association>)
	relation 756738 --->
	  a role_name "edits" protected
	    comment "
The collection of <code>UndoableEdit</code>s
undone/redone en masse by this <code>CompoundEdit</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UndoableEdit> ${name}${value};
"
	    classrelation_ref 756738 // edits (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 2393730 "CompoundEdit"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2393858 "undo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411010 // CannotUndoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends <code>undo</code> to all contained
<code>UndoableEdits</code> in the reverse of
the order in which they were added.
"
      end

      operation 2393986 "redo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411138 // CannotRedoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends <code>redo</code> to all contained
<code>UndoableEdit</code>s in the order in
which they were added.
"
      end

      operation 2394114 "lastEdit"
	protected return_type class_ref 409346 // UndoableEdit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last <code>UndoableEdit</code> in
<code>edits</code>, or <code>null</code>
if <code>edits</code> is empty.
"
      end

      operation 2394242 "die"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends <code>die</code> to each subedit,
in the reverse of the order that they were added.
"
      end

      operation 2394370 "addEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this edit is <code>inProgress</code>,
accepts <code>anEdit</code> and returns true.

<p>The last edit added to this <code>CompoundEdit</code>
is given a chance to <code>addEdit(anEdit)</code>.
If it refuses (returns false), <code>anEdit</code> is
given a chance to <code>replaceEdit</code> the last edit.
If <code>anEdit</code> returns false here,
it is added to <code>edits</code>.

@param anEdit the edit to be added
@return true if the edit is <code>inProgress</code>;
 otherwise returns false
"
      end

      operation 2394498 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets <code>inProgress</code> to false.

@see #canUndo
@see #canRedo
"
      end

      operation 2394626 "canUndo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns false if <code>isInProgress</code> or if super
returns false.

@see     #isInProgress
"
      end

      operation 2394754 "canRedo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns false if <code>isInProgress</code> or if super
returns false.

@see     #isInProgress
"
      end

      operation 2394882 "isInProgress"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this edit is in progress--that is, it has not
received end. This generally means that edits are still being
added to it.

@see     #end
"
      end

      operation 2395010 "isSignificant"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if any of the <code>UndoableEdit</code>s
in <code>edits</code> do.
Returns false if they all return false.
"
      end

      operation 2395138 "getPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>getPresentationName</code> from the
last <code>UndoableEdit</code> added to
<code>edits</code>. If <code>edits</code> is empty,
calls super.
"
      end

      operation 2395266 "getUndoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>getUndoPresentationName</code>
from the last <code>UndoableEdit</code>
added to <code>edits</code>.
If <code>edits</code> is empty, calls super.
"
      end

      operation 2395394 "getRedoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>getRedoPresentationName</code>
from the last <code>UndoableEdit</code>
added to <code>edits</code>.
If <code>edits</code> is empty, calls super.
"
      end

      operation 2395522 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end
    end

    class 410882 "AbstractUndoableEdit"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An abstract implementation of <code>UndoableEdit</code>,
implementing simple responses to all boolean methods in
that interface.

@author Ray Ryan
"
      classrelation 756098 // <realization>
	relation 756098 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 756098 // <realization>
	  b parent class_ref 409346 // UndoableEdit
      end

      classrelation 756226 // <realization>
	relation 756226 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 756226 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 756354 // UndoName (<unidirectional association>)
	relation 756354 --->
	  a role_name "UndoName" init_value " \"Undo\"" class_relation const_relation protected
	    comment "
String returned by <code>getUndoPresentationName</code>;
as of Java 2 platform v1.3.1 this field is no longer used. This value
is now localized and comes from the defaults table with key
<code>AbstractUndoableEdit.undoText</code>.

@see javax.swing.UIDefaults

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 756354 // UndoName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 756482 // RedoName (<unidirectional association>)
	relation 756482 --->
	  a role_name "RedoName" init_value " \"Redo\"" class_relation const_relation protected
	    comment "
String returned by <code>getRedoPresentationName</code>;
as of Java 2 platform v1.3.1 this field is no longer used. This value
is now localized and comes from the defaults table with key
<code>AbstractUndoableEdit.redoText</code>.

@see javax.swing.UIDefaults

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 756482 // RedoName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 525698 "hasBeenDone"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Defaults to true; becomes false if this edit is undone, true
again if it is redone.

"
      end

      attribute 525826 "alive"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "True if this edit has not received <code>die</code>; defaults
to <code>true</code>.

"
      end

      operation 2392066 "AbstractUndoableEdit"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an <code>AbstractUndoableEdit</code> which defaults
<code>hasBeenDone</code> and <code>alive</code> to <code>true</code>.
"
      end

      operation 2392194 "die"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets <code>alive</code> to false. Note that this
is a one way operation; dead edits cannot be resurrected.
Sending <code>undo</code> or <code>redo</code> to
a dead edit results in an exception being thrown.

<p>Typically an edit is killed when it is consolidated by
another edit's <code>addEdit</code> or <code>replaceEdit</code>
method, or when it is dequeued from an <code>UndoManager</code>.
"
      end

      operation 2392322 "undo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411010 // CannotUndoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws <code>CannotUndoException</code> if <code>canUndo</code>
returns <code>false</code>. Sets <code>hasBeenDone</code>
to <code>false</code>. Subclasses should override to undo the
operation represented by this edit. Override should begin with
a call to super.

@exception CannotUndoException if <code>canUndo</code>
   returns <code>false</code>
@see     #canUndo
"
      end

      operation 2392450 "canUndo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this edit is <code>alive</code>
and <code>hasBeenDone</code> is <code>true</code>.

@return true if this edit is <code>alive</code>
   and <code>hasBeenDone</code> is <code>true</code>

@see     #die
@see     #undo
@see     #redo
"
      end

      operation 2392578 "redo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411138 // CannotRedoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws <code>CannotRedoException</code> if <code>canRedo</code>
returns false. Sets <code>hasBeenDone</code> to <code>true</code>.
Subclasses should override to redo the operation represented by
this edit. Override should begin with a call to super.

@exception CannotRedoException if <code>canRedo</code>
    returns <code>false</code>
@see     #canRedo
"
      end

      operation 2392706 "canRedo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if this edit is <code>alive</code>
and <code>hasBeenDone</code> is <code>false</code>.

@return <code>true</code> if this edit is <code>alive</code>
  and <code>hasBeenDone</code> is <code>false</code>
@see     #die
@see     #undo
@see     #redo
"
      end

      operation 2392834 "addEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation returns false.

@param anEdit the edit to be added
@return false

@see UndoableEdit#addEdit
"
      end

      operation 2392962 "replaceEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation returns false.

@param anEdit the edit to replace
@return false

@see UndoableEdit#replaceEdit
"
      end

      operation 2393090 "isSignificant"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation returns true.

@return true
@see UndoableEdit#isSignificant
"
      end

      operation 2393218 "getPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This default implementation returns \"\". Used by
<code>getUndoPresentationName</code> and
<code>getRedoPresentationName</code> to
construct the strings they return. Subclasses should override to
return an appropriate description of the operation this edit
represents.

@return the empty string \"\"

@see     #getUndoPresentationName
@see     #getRedoPresentationName
"
      end

      operation 2393346 "getUndoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retreives the value from the defaults table with key
<code>AbstractUndoableEdit.undoText</code> and returns
that value followed by a space, followed by
<code>getPresentationName</code>.
If <code>getPresentationName</code> returns \"\",
then the defaults value is returned alone.

@return the value from the defaults table with key
   <code>AbstractUndoableEdit.undoText</code>, followed
   by a space, followed by <code>getPresentationName</code>
   unless <code>getPresentationName</code> is \"\" in which
   case, the defaults value is returned alone.
@see #getPresentationName
"
      end

      operation 2393474 "getRedoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retreives the value from the defaults table with key
<code>AbstractUndoableEdit.redoText</code> and returns
that value followed by a space, followed by
<code>getPresentationName</code>.
If <code>getPresentationName</code> returns \"\",
then the defaults value is returned alone.

@return the value from the defaults table with key
   <code>AbstractUndoableEdit.redoText</code>, followed
   by a space, followed by <code>getPresentationName</code>
   unless <code>getPresentationName</code> is \"\" in which
   case, the defaults value is returned alone.
@see #getPresentationName
"
      end

      operation 2393602 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end
    end

    class 411010 "CannotUndoException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an UndoableEdit is told to <code>undo()</code> and can't.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Ray Ryan
"
      classrelation 4743554 // <generalisation>
	relation 4743554 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4743554 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end
    end

    class 411138 "CannotRedoException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Thrown when an UndoableEdit is told to <code>redo()</code> and can't.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Ray Ryan
"
      classrelation 4743426 // <generalisation>
	relation 4743426 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4743426 // <generalisation>
	  b parent class_ref 214786 // RuntimeException
      end
    end

    class 1402754 "StateEdit"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<P>StateEdit is a general edit for objects that change state.
Objects being edited must conform to the StateEditable interface.</P>

<P>This edit class works by asking an object to store it's state in
Hashtables before and after editing occurs.  Upon undo or redo the
object is told to restore it's state from these Hashtables.</P>

A state edit is used as follows:
<PRE>
     // Create the edit during the \"before\" state of the object
     StateEdit newEdit = new StateEdit(myObject);
     // Modify the object
     myObject.someStateModifyingMethod();
     // \"end\" the edit when you are done modifying the object
     newEdit.end();
</PRE>

<P><EM>Note that when a StateEdit ends, it removes redundant state from
the Hashtables - A state Hashtable is not guaranteed to contain all
keys/values placed into it when the state is stored!</EM></P>

@see StateEditable

@author Ray Ryan
"
      classrelation 4743682 // <generalisation>
	relation 4743682 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4743682 // <generalisation>
	  b parent class_ref 410882 // AbstractUndoableEdit
      end

      classrelation 4743810 // RCSID (<unidirectional association>)
	relation 4743810 --->
	  a role_name "RCSID" init_value " \"$Id: StateEdit.java,v 1.6 1997/10/01 20:05:51 sandipc Exp $\"" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4743810 // RCSID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4743938 // object (<unidirectional association>)
	relation 4743938 --->
	  a role_name "object" protected
	    comment " Attributes


The object being edited

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4743938 // object (<unidirectional association>)
	  b parent class_ref 1402882 // StateEditable
      end

      classrelation 4744066 // preState (<unidirectional association>)
	relation 4744066 --->
	  a role_name "preState" protected
	    comment "
The state information prior to the edit

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object,Object> ${name}${value};
"
	    classrelation_ref 4744066 // preState (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4744194 // postState (<unidirectional association>)
	relation 4744194 --->
	  a role_name "postState" protected
	    comment "
The state information after the edit

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object,Object> ${name}${value};
"
	    classrelation_ref 4744194 // postState (<unidirectional association>)
	  b parent class_ref 137090 // Hashtable
      end

      classrelation 4744322 // undoRedoName (<unidirectional association>)
	relation 4744322 --->
	  a role_name "undoRedoName" protected
	    comment "
The undo/redo presentation name

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4744322 // undoRedoName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 11913346 "StateEdit"
	public explicit_return_type ""
	nparams 1
	  param inout name "anObject" type class_ref 1402882 // StateEditable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Create and return a new StateEdit.

@param anObject The object to watch for changing state

@see StateEdit
"
      end

      operation 11913474 "StateEdit"
	public explicit_return_type ""
	nparams 2
	  param inout name "anObject" type class_ref 1402882 // StateEditable
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create and return a new StateEdit with a presentation name.

@param anObject The object to watch for changing state
@param name The presentation name to be used for this edit

@see StateEdit
"
      end

      operation 11913602 "init"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "anObject" type class_ref 1402882 // StateEditable
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11913730 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Operation


Gets the post-edit state of the StateEditable object and
ends the edit.
"
      end

      operation 11913858 "undo"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the edited object to apply the state prior to the edit
"
      end

      operation 11913986 "redo"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the edited object to apply the state after the edit
"
      end

      operation 11914114 "getPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the presentation name for this edit
"
      end

      operation 11914242 "removeRedundantState"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal support


Remove redundant key/values in state hashtables.
"
      end
    end

    class 1402882 "StateEditable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "StateEditable defines the interface for objects that can have
their state undone/redone by a StateEdit.

@see StateEdit
"
      classrelation 4744450 // RCSID (<unidirectional association>)
	relation 4744450 --->
	  a role_name "RCSID" init_value " \"$Id: StateEditable.java,v 1.2 1997/09/08 19:39:08 marklin Exp $\"" class_relation const_relation public
	    comment " Resource ID for this class. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4744450 // RCSID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 11914370 "storeState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 137090 // Hashtable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object,Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Upon receiving this message the receiver should place any relevant
state into <EM>state</EM>.
"
      end

      operation 11914498 "restoreState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 137090 // Hashtable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?,?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Upon receiving this message the receiver should extract any relevant
state out of <EM>state</EM>.
"
      end
    end

    class 1403010 "UndoableEditSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A support class used for managing <code>UndoableEdit</code> listeners.

@author Ray Ryan
"
      attribute 2612866 "updateLevel"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 4744578 // compoundEdit (<unidirectional association>)
	relation 4744578 --->
	  a role_name "compoundEdit" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4744578 // compoundEdit (<unidirectional association>)
	  b parent class_ref 410754 // CompoundEdit
      end

      classrelation 4744706 // listeners (<unidirectional association>)
	relation 4744706 --->
	  a role_name "listeners" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UndoableEditListener> ${name}${value};
"
	    classrelation_ref 4744706 // listeners (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4744834 // realSource (<unidirectional association>)
	relation 4744834 --->
	  a role_name "realSource" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4744834 // realSource (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 11914626 "UndoableEditSupport"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UndoableEditSupport</code> object.
"
      end

      operation 11914754 "UndoableEditSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "r" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an <code>UndoableEditSupport</code> object.

@param r  an <code>Object</code>
"
      end

      operation 11914882 "addUndoableEditListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 408322 // UndoableEditListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an <code>UndoableEditListener</code>.
The listener is notified whenever an edit occurs which can be undone.

@param l  an <code>UndoableEditListener</code> object
@see #removeUndoableEditListener
"
      end

      operation 11915010 "removeUndoableEditListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 408322 // UndoableEditListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an <code>UndoableEditListener</code>.

@param l  the <code>UndoableEditListener</code> object to be removed
@see #addUndoableEditListener
"
      end

      operation 11915138 "getUndoableEditListeners"
	public return_type class_ref 408322 // UndoableEditListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>UndoableEditListener</code>s added
to this UndoableEditSupport with addUndoableEditListener().

@return all of the <code>UndoableEditListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 11915266 "_postEdit"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called only from <code>postEdit</code> and <code>endUpdate</code>. Calls
<code>undoableEditHappened</code> in all listeners. No synchronization
is performed here, since the two calling methods are synchronized.
"
      end

      operation 11915394 "postEdit"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DEADLOCK WARNING: Calling this method may call
<code>undoableEditHappened</code> in all listeners.
It is unwise to call this method from one of its listeners.
"
      end

      operation 11915522 "getUpdateLevel"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the update level value.

@return an integer representing the update level
"
      end

      operation 11915650 "beginUpdate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11915778 "createCompoundEdit"
	protected return_type class_ref 410754 // CompoundEdit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called only from <code>beginUpdate</code>.
Exposed here for subclasses' use.
"
      end

      operation 11915906 "endUpdate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DEADLOCK WARNING: Calling this method may call
<code>undoableEditHappened</code> in all listeners.
It is unwise to call this method from one of its listeners.
"
      end

      operation 11916034 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a <code>String</code> representation of this object
"
      end
    end

    class 1403138 "UndoManager"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@code UndoManager} manages a list of {@code UndoableEdits},
providing a way to undo or redo the appropriate edits.  There are
two ways to add edits to an <code>UndoManager</code>.  Add the edit
directly using the <code>addEdit</code> method, or add the
<code>UndoManager</code> to a bean that supports
<code>UndoableEditListener</code>.  The following examples creates
an <code>UndoManager</code> and adds it as an
<code>UndoableEditListener</code> to a <code>JTextField</code>:
<pre>
  UndoManager undoManager = new UndoManager();
  JTextField tf = ...;
  tf.getDocument().addUndoableEditListener(undoManager);
</pre>
<p>
<code>UndoManager</code> maintains an ordered list of edits and the
index of the next edit in that list. The index of the next edit is
either the size of the current list of edits, or if
<code>undo</code> has been invoked it corresponds to the index
of the last significant edit that was undone. When
<code>undo</code> is invoked all edits from the index of the next
edit to the last significant edit are undone, in reverse order.
For example, consider an <code>UndoManager</code> consisting of the
following edits: <b>A</b> <i>b</i> <i>c</i> <b>D</b>.  Edits with a
upper-case letter in bold are significant, those in lower-case
and italicized are insignificant.
<p>
<a name=\"figure1\"></a>
<table border=0 summary=\"\">
<tr><td>
    <img src=\"doc-files/UndoManager-1.gif\" alt=\"\">
<tr><td align=center>Figure 1
</table>
<p>
As shown in <a href=\"#figure1\">figure 1</a>, if <b>D</b> was just added, the
index of the next edit will be 4. Invoking <code>undo</code>
results in invoking <code>undo</code> on <b>D</b> and setting the
index of the next edit to 3 (edit <i>c</i>), as shown in the following
figure.
<p>
<a name=\"figure2\"></a>
<table border=0 summary=\"\">
<tr><td>
    <img src=\"doc-files/UndoManager-2.gif\" alt=\"\">
<tr><td align=center>Figure 2
</table>
<p>
The last significant edit is <b>A</b>, so that invoking
<code>undo</code> again invokes <code>undo</code> on <i>c</i>,
<i>b</i>, and <b>A</b>, in that order, setting the index of the
next edit to 0, as shown in the following figure.
<p>
<a name=\"figure3\"></a>
<table border=0 summary=\"\">
<tr><td>
    <img src=\"doc-files/UndoManager-3.gif\" alt=\"\">
<tr><td align=center>Figure 3
</table>
<p>
Invoking <code>redo</code> results in invoking <code>redo</code> on
all edits between the index of the next edit and the next
significant edit (or the end of the list).  Continuing with the previous
example if <code>redo</code> were invoked, <code>redo</code> would in
turn be invoked on <b>A</b>, <i>b</i> and <i>c</i>.  In addition
the index of the next edit is set to 3 (as shown in <a
href=\"#figure2\">figure 2</a>).
<p>
Adding an edit to an <code>UndoManager</code> results in
removing all edits from the index of the next edit to the end of
the list.  Continuing with the previous example, if a new edit,
<i>e</i>, is added the edit <b>D</b> is removed from the list
(after having <code>die</code> invoked on it).  If <i>c</i> is not
incorporated by the next edit
(<code><i>c</i>.addEdit(<i>e</i>)</code> returns true), or replaced
by it (<code><i>e</i>.replaceEdit(<i>c</i>)</code> returns true),
the new edit is added after <i>c</i>, as shown in the following
figure.
<p>
<a name=\"figure4\"></a>
<table border=0 summary=\"\">
<tr><td>
    <img src=\"doc-files/UndoManager-4.gif\" alt=\"\">
<tr><td align=center>Figure 4
</table>
<p>
Once <code>end</code> has been invoked on an <code>UndoManager</code>
the superclass behavior is used for all <code>UndoableEdit</code>
methods.  Refer to <code>CompoundEdit</code> for more details on its
behavior.
<p>
Unlike the rest of Swing, this class is thread safe.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Ray Ryan
"
      classrelation 4744962 // <generalisation>
	relation 4744962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4744962 // <generalisation>
	  b parent class_ref 410754 // CompoundEdit
      end

      classrelation 4745090 // <realization>
	relation 4745090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4745090 // <realization>
	  b parent class_ref 408322 // UndoableEditListener
      end

      attribute 2612994 "indexOfNextAdd"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 2613122 "limit"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 11916162 "UndoManager"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>UndoManager</code>.
"
      end

      operation 11916290 "getLimit"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of edits this {@code UndoManager}
holds. A value less than 0 indicates the number of edits is not
limited.

@return the maximum number of edits this {@code UndoManager} holds
@see #addEdit
@see #setLimit
"
      end

      operation 11916418 "discardAllEdits"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Empties the undo manager sending each edit a <code>die</code> message
in the process.

@see AbstractUndoableEdit#die
"
      end

      operation 11916546 "trimForLimit"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reduces the number of queued edits to a range of size limit,
centered on the index of the next edit.
"
      end

      operation 11916674 "trimEdits"
	protected explicit_return_type "void"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes edits in the specified range.
All edits in the given range (inclusive, and in reverse order)
will have <code>die</code> invoked on them and are removed from
the list of edits. This has no effect if
<code>from</code> &gt; <code>to</code>.

@param from the minimum index to remove
@param to the maximum index to remove
"
      end

      operation 11916802 "setLimit"
	public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the maximum number of edits this <code>UndoManager</code>
holds. A value less than 0 indicates the number of edits is not
limited. If edits need to be discarded to shrink the limit,
<code>die</code> will be invoked on them in the reverse
order they were added.  The default is 100.

@param l the new limit
@throws RuntimeException if this {@code UndoManager} is not in progress
                         ({@code end} has been invoked)
@see #isInProgress
@see #end
@see #addEdit
@see #getLimit
"
      end

      operation 11916930 "editToBeUndone"
	protected return_type class_ref 409346 // UndoableEdit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the next significant edit to be undone if <code>undo</code>
is invoked. This returns <code>null</code> if there are no edits
to be undone.

@return the next significant edit to be undone
"
      end

      operation 11917058 "editToBeRedone"
	protected return_type class_ref 409346 // UndoableEdit
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the next significant edit to be redone if <code>redo</code>
is invoked. This returns <code>null</code> if there are no edits
to be redone.

@return the next significant edit to be redone
"
      end

      operation 11917186 "undoTo"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "edit" type class_ref 409346 // UndoableEdit
	nexceptions 1
	  exception class_ref 411010 // CannotUndoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Undoes all changes from the index of the next edit to
<code>edit</code>, updating the index of the next edit appropriately.

@throws CannotUndoException if one of the edits throws
        <code>CannotUndoException</code>
"
      end

      operation 11917314 "redoTo"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "edit" type class_ref 409346 // UndoableEdit
	nexceptions 1
	  exception class_ref 411138 // CannotRedoException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Redoes all changes from the index of the next edit to
<code>edit</code>, updating the index of the next edit appropriately.

@throws CannotRedoException if one of the edits throws
        <code>CannotRedoException</code>
"
      end

      operation 11917442 "undoOrRedo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 411138 // CannotRedoException
	  exception class_ref 411010 // CannotUndoException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that invokes one of <code>undo</code> or
<code>redo</code>. If any edits have been undone (the index of
the next edit is less than the length of the edits list) this
invokes <code>redo</code>, otherwise it invokes <code>undo</code>.

@see #canUndoOrRedo
@see #getUndoOrRedoPresentationName
@throws CannotUndoException if one of the edits throws
        <code>CannotUndoException</code>
@throws CannotRedoException if one of the edits throws
        <code>CannotRedoException</code>
"
      end

      operation 11917570 "canUndoOrRedo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if it is possible to invoke <code>undo</code> or
<code>redo</code>.

@return true if invoking <code>canUndoOrRedo</code> is valid
@see #undoOrRedo
"
      end

      operation 11917698 "undo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411010 // CannotUndoException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Undoes the appropriate edits.  If <code>end</code> has been
invoked this calls through to the superclass, otherwise
this invokes <code>undo</code> on all edits between the
index of the next edit and the last significant edit, updating
the index of the next edit appropriately.

@throws CannotUndoException if one of the edits throws
        <code>CannotUndoException</code> or there are no edits
        to be undone
@see CompoundEdit#end
@see #canUndo
@see #editToBeUndone
"
      end

      operation 11917826 "canUndo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if edits may be undone.  If <code>end</code> has
been invoked, this returns the value from super.  Otherwise
this returns true if there are any edits to be undone
(<code>editToBeUndone</code> returns non-<code>null</code>).

@return true if there are edits to be undone
@see CompoundEdit#canUndo
@see #editToBeUndone
"
      end

      operation 11917954 "redo"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 411138 // CannotRedoException
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Redoes the appropriate edits.  If <code>end</code> has been
invoked this calls through to the superclass.  Otherwise
this invokes <code>redo</code> on all edits between the
index of the next edit and the next significant edit, updating
the index of the next edit appropriately.

@throws CannotRedoException if one of the edits throws
        <code>CannotRedoException</code> or there are no edits
        to be redone
@see CompoundEdit#end
@see #canRedo
@see #editToBeRedone
"
      end

      operation 11918082 "canRedo"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if edits may be redone.  If <code>end</code> has
been invoked, this returns the value from super.  Otherwise,
this returns true if there are any edits to be redone
(<code>editToBeRedone</code> returns non-<code>null</code>).

@return true if there are edits to be redone
@see CompoundEdit#canRedo
@see #editToBeRedone
"
      end

      operation 11918210 "addEdit"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "anEdit" type class_ref 409346 // UndoableEdit
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an <code>UndoableEdit</code> to this
<code>UndoManager</code>, if it's possible.  This removes all
edits from the index of the next edit to the end of the edits
list.  If <code>end</code> has been invoked the edit is not added
and <code>false</code> is returned.  If <code>end</code> hasn't
been invoked this returns <code>true</code>.

@param anEdit the edit to be added
@return true if <code>anEdit</code> can be incorporated into this
             edit
@see CompoundEdit#end
@see CompoundEdit#addEdit
"
      end

      operation 11918338 "end"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turns this <code>UndoManager</code> into a normal
<code>CompoundEdit</code>.  This removes all edits that have
been undone.

@see CompoundEdit#end
"
      end

      operation 11918466 "getUndoOrRedoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method that returns either
<code>getUndoPresentationName</code> or
<code>getRedoPresentationName</code>.  If the index of the next
edit equals the size of the edits list,
<code>getUndoPresentationName</code> is returned, otherwise
<code>getRedoPresentationName</code> is returned.

@return undo or redo name
"
      end

      operation 11918594 "getUndoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the undoable form of this edit.
If <code>end</code> has been invoked this calls into super.
Otherwise if there are edits to be undone, this returns
the value from the next significant edit that will be undone.
If there are no edits to be undone and <code>end</code> has not
been invoked this returns the value from the <code>UIManager</code>
property \"AbstractUndoableEdit.undoText\".

@return a description of the undoable form of this edit
@see     #undo
@see     CompoundEdit#getUndoPresentationName
"
      end

      operation 11918722 "getRedoPresentationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the redoable form of this edit.
If <code>end</code> has been invoked this calls into super.
Otherwise if there are edits to be redone, this returns
the value from the next significant edit that will be redone.
If there are no edits to be redone and <code>end</code> has not
been invoked this returns the value from the <code>UIManager</code>
property \"AbstractUndoableEdit.redoText\".

@return a description of the redoable form of this edit
@see     #redo
@see     CompoundEdit#getRedoPresentationName
"
      end

      operation 11918850 "undoableEditHappened"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 408706 // UndoableEditEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An <code>UndoableEditListener</code> method. This invokes
<code>addEdit</code> with <code>e.getEdit()</code>.

@param e the <code>UndoableEditEvent</code> the
       <code>UndoableEditEvent</code> will be added from
@see #addEdit
"
      end

      operation 11918978 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string that displays and identifies this
object's properties.

@return a String representation of this object
"
      end
    end
  end

  deploymentview 144130 "undo"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 292098 "UndoableEdit"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 409346 // UndoableEdit
      end
      comment "Copyright (c) 1997, 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 292226 "AbstractUndoableEdit"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import javax.swing.UIManager;
${definition}"
      associated_elems
	class_ref 410882 // AbstractUndoableEdit
      end
      comment "Copyright (c) 1997, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 292354 "CompoundEdit"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.*;
${definition}"
      associated_elems
	class_ref 410754 // CompoundEdit
      end
      comment "Copyright (c) 1997, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993026 "CannotRedoException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 411138 // CannotRedoException
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993154 "CannotUndoException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 411010 // CannotUndoException
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993282 "StateEdit"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 1402754 // StateEdit
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993410 "StateEditable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Hashtable;
${definition}"
      associated_elems
	class_ref 1402882 // StateEditable
      end
      comment "Copyright (c) 1997, 2004, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993538 "UndoableEditSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1403010 // UndoableEditSupport
      end
      comment "Copyright (c) 1997, 2008, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 993666 "UndoManager"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.event.*;
import javax.swing.UIManager;
import java.util.*;
${definition}"
      associated_elems
	class_ref 1403138 // UndoManager
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
