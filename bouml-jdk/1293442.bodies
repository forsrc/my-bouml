class JTextPane
!!!10765826.java!!!	JTextPane()
        super();
        EditorKit editorKit = createDefaultEditorKit();
        String contentType = editorKit.getContentType();
        if (contentType != null
            && getEditorKitClassNameForContentType(contentType) ==
                 defaultEditorKitMap.get(contentType)) {
            setEditorKitForContentType(contentType, editorKit);
        }
        setEditorKit(editorKit);
!!!10765954.java!!!	JTextPane(inout doc : StyledDocument)
        this();
        setStyledDocument(doc);
!!!10766082.java!!!	getUIClassID() : String
        return uiClassID;
!!!10766210.java!!!	setDocument(inout doc : Document) : void
        if (doc instanceof StyledDocument) {
            super.setDocument(doc);
        } else {
            throw new IllegalArgumentException("Model must be StyledDocument");
        }
!!!10766338.java!!!	setStyledDocument(inout doc : StyledDocument) : void
        super.setDocument(doc);
!!!10766466.java!!!	getStyledDocument() : StyledDocument
        return (StyledDocument) getDocument();
!!!10766594.java!!!	replaceSelection(inout content : String) : void
        replaceSelection(content, true);
!!!10766722.java!!!	replaceSelection(inout content : String, inout checkEditable : boolean) : void
        if (checkEditable && !isEditable()) {
            UIManager.getLookAndFeel().provideErrorFeedback(JTextPane.this);
            return;
        }
        Document doc = getStyledDocument();
        if (doc != null) {
            try {
                Caret caret = getCaret();
                boolean composedTextSaved = saveComposedText(caret.getDot());
                int p0 = Math.min(caret.getDot(), caret.getMark());
                int p1 = Math.max(caret.getDot(), caret.getMark());
                AttributeSet attr = getInputAttributes().copyAttributes();
                if (doc instanceof AbstractDocument) {
                    ((AbstractDocument)doc).replace(p0, p1 - p0, content,attr);
                }
                else {
                    if (p0 != p1) {
                        doc.remove(p0, p1 - p0);
                    }
                    if (content != null && content.length() > 0) {
                        doc.insertString(p0, content, attr);
                    }
                }
                if (composedTextSaved) {
                    restoreComposedText();
                }
            } catch (BadLocationException e) {
                UIManager.getLookAndFeel().provideErrorFeedback(JTextPane.this);
            }
        }
!!!10766850.java!!!	insertComponent(inout c : Component) : void
        MutableAttributeSet inputAttributes = getInputAttributes();
        inputAttributes.removeAttributes(inputAttributes);
        StyleConstants.setComponent(inputAttributes, c);
        replaceSelection(" ", false);
        inputAttributes.removeAttributes(inputAttributes);
!!!10766978.java!!!	insertIcon(inout g : Icon) : void
        MutableAttributeSet inputAttributes = getInputAttributes();
        inputAttributes.removeAttributes(inputAttributes);
        StyleConstants.setIcon(inputAttributes, g);
        replaceSelection(" ", false);
        inputAttributes.removeAttributes(inputAttributes);
!!!10767106.java!!!	addStyle(inout nm : String, inout parent : Style) : Style
        StyledDocument doc = getStyledDocument();
        return doc.addStyle(nm, parent);
!!!10767234.java!!!	removeStyle(inout nm : String) : void
        StyledDocument doc = getStyledDocument();
        doc.removeStyle(nm);
!!!10767362.java!!!	getStyle(inout nm : String) : Style
        StyledDocument doc = getStyledDocument();
        return doc.getStyle(nm);
!!!10767490.java!!!	setLogicalStyle(inout s : Style) : void
        StyledDocument doc = getStyledDocument();
        doc.setLogicalStyle(getCaretPosition(), s);
!!!10767618.java!!!	getLogicalStyle() : Style
        StyledDocument doc = getStyledDocument();
        return doc.getLogicalStyle(getCaretPosition());
!!!10767746.java!!!	getCharacterAttributes() : AttributeSet
        StyledDocument doc = getStyledDocument();
        Element run = doc.getCharacterElement(getCaretPosition());
        if (run != null) {
            return run.getAttributes();
        }
        return null;
!!!10767874.java!!!	setCharacterAttributes(inout attr : AttributeSet, inout replace : boolean) : void
        int p0 = getSelectionStart();
        int p1 = getSelectionEnd();
        if (p0 != p1) {
            StyledDocument doc = getStyledDocument();
            doc.setCharacterAttributes(p0, p1 - p0, attr, replace);
        } else {
            MutableAttributeSet inputAttributes = getInputAttributes();
            if (replace) {
                inputAttributes.removeAttributes(inputAttributes);
            }
            inputAttributes.addAttributes(attr);
        }
!!!10768002.java!!!	getParagraphAttributes() : AttributeSet
        StyledDocument doc = getStyledDocument();
        Element paragraph = doc.getParagraphElement(getCaretPosition());
        if (paragraph != null) {
            return paragraph.getAttributes();
        }
        return null;
!!!10768130.java!!!	setParagraphAttributes(inout attr : AttributeSet, inout replace : boolean) : void
        int p0 = getSelectionStart();
        int p1 = getSelectionEnd();
        StyledDocument doc = getStyledDocument();
        doc.setParagraphAttributes(p0, p1 - p0, attr, replace);
!!!10768258.java!!!	getInputAttributes() : MutableAttributeSet
        return getStyledEditorKit().getInputAttributes();
!!!10768386.java!!!	getStyledEditorKit() : StyledEditorKit
        return (StyledEditorKit) getEditorKit();
!!!10768514.java!!!	writeObject(inout s : ObjectOutputStream) : void
        s.defaultWriteObject();
        if (getUIClassID().equals(uiClassID)) {
            byte count = JComponent.getWriteObjCounter(this);
            JComponent.setWriteObjCounter(this, --count);
            if (count == 0 && ui != null) {
                ui.installUI(this);
            }
        }
!!!10768642.java!!!	createDefaultEditorKit() : EditorKit
        return new StyledEditorKit();
!!!10768770.java!!!	setEditorKit(inout kit : EditorKit) : void
        if (kit instanceof StyledEditorKit) {
            super.setEditorKit(kit);
        } else {
            throw new IllegalArgumentException("Must be StyledEditorKit");
        }
!!!10768898.java!!!	paramString() : String
        return super.paramString();
