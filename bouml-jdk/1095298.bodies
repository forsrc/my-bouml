class StringJoiner
!!!8930946.java!!!	StringJoiner(inout delimiter : CharSequence)
        this(delimiter, "", "");
!!!8931074.java!!!	StringJoiner(inout delimiter : CharSequence, inout prefix : CharSequence, inout suffix : CharSequence)
        Objects.requireNonNull(prefix, "The prefix must not be null");
        Objects.requireNonNull(delimiter, "The delimiter must not be null");
        Objects.requireNonNull(suffix, "The suffix must not be null");
        // make defensive copies of arguments
        this.prefix = prefix.toString();
        this.delimiter = delimiter.toString();
        this.suffix = suffix.toString();
        this.emptyValue = this.prefix + this.suffix;
!!!8931202.java!!!	setEmptyValue(inout emptyValue : CharSequence) : StringJoiner
        this.emptyValue = Objects.requireNonNull(emptyValue,
            "The empty value must not be null").toString();
        return this;
!!!8931330.java!!!	toString() : String
        if (value == null) {
            return emptyValue;
        } else {
            if (suffix.equals("")) {
                return value.toString();
            } else {
                int initialLength = value.length();
                String result = value.append(suffix).toString();
                // reset value to pre-append initialLength
                value.setLength(initialLength);
                return result;
            }
        }
!!!8931458.java!!!	add(inout newElement : CharSequence) : StringJoiner
        prepareBuilder().append(newElement);
        return this;
!!!8931586.java!!!	merge(inout other : StringJoiner) : StringJoiner
        Objects.requireNonNull(other);
        if (other.value != null) {
            final int length = other.value.length();
            // lock the length so that we can seize the data to be appended
            // before initiate copying to avoid interference, especially when
            // merge 'this'
            StringBuilder builder = prepareBuilder();
            builder.append(other.value, other.prefix.length(), length);
        }
        return this;
!!!8931714.java!!!	prepareBuilder() : StringBuilder
        if (value != null) {
            value.append(delimiter);
        } else {
            value = new StringBuilder().append(prefix);
        }
        return value;
!!!8931842.java!!!	length() : int
        // Remember that we never actually append the suffix unless we return
        // the full (present) value or some sub-string or length of it, so that
        // we can add on more if we need to.
        return (value != null ? value.length() + suffix.length() :
                emptyValue.length());
