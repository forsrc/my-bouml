class AnyNodeCounter
!!!3956866.java!!!	AnyNodeCounter(inout translet : Translet, inout document : DOM, inout iterator : DTMAxisIterator)
        super(translet, document, iterator);
!!!3956994.java!!!	AnyNodeCounter(inout translet : Translet, inout document : DOM, inout iterator : DTMAxisIterator, inout hasFrom : boolean)
        super(translet, document, iterator, hasFrom);
!!!3957122.java!!!	setStartNode(in node : int) : NodeCounter
        _node = node;
        _nodeType = _document.getExpandedTypeID(node);
        return this;
!!!3957250.java!!!	getCounter() : String
        int result;
        if (_value != Integer.MIN_VALUE) {
            //See Errata E24
            if (_value == 0) return "0";
            else if (Double.isNaN(_value)) return "NaN";
            else if (_value < 0 && Double.isInfinite(_value)) return "-Infinity";
            else if (Double.isInfinite(_value)) return "Infinity";
            else return formatNumbers((int)_value);
        }
        else {
            int next = _node;
            final int root = _document.getDocument();
            result = 0;
            while (next >= root && !matchesFrom(next)) {
                if (matchesCount(next)) {
                    ++result;
                }
                next--;
//%HZ%:  Is this the best way of finding the root?  Is it better to check
//%HZ%:  parent(next)?
                /*
                if (next == root) {
                    break;
                }
                else {
                    --next;
                }
                */
            }
        }
        return formatNumbers(result);
!!!3957378.java!!!	getDefaultNodeCounter(inout translet : Translet, inout document : DOM, inout iterator : DTMAxisIterator) : NodeCounter
        return new DefaultAnyNodeCounter(translet, document, iterator);
