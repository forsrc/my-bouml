class OverlayLayout
!!!10786946.java!!!	OverlayLayout(inout target : Container)
        this.target = target;
!!!10787074.java!!!	getTarget() : Container
        return this.target;
!!!10787202.java!!!	invalidateLayout(inout target : Container) : void
        checkContainer(target);
        xChildren = null;
        yChildren = null;
        xTotal = null;
        yTotal = null;
!!!10787330.java!!!	addLayoutComponent(inout name : String, inout comp : Component) : void
        invalidateLayout(comp.getParent());
!!!10787458.java!!!	removeLayoutComponent(inout comp : Component) : void
        invalidateLayout(comp.getParent());
!!!10787586.java!!!	addLayoutComponent(inout comp : Component, inout constraints : Object) : void
        invalidateLayout(comp.getParent());
!!!10787714.java!!!	preferredLayoutSize(inout target : Container) : Dimension
        checkContainer(target);
        checkRequests();

        Dimension size = new Dimension(xTotal.preferred, yTotal.preferred);
        Insets insets = target.getInsets();
        size.width += insets.left + insets.right;
        size.height += insets.top + insets.bottom;
        return size;
!!!10787842.java!!!	minimumLayoutSize(inout target : Container) : Dimension
        checkContainer(target);
        checkRequests();

        Dimension size = new Dimension(xTotal.minimum, yTotal.minimum);
        Insets insets = target.getInsets();
        size.width += insets.left + insets.right;
        size.height += insets.top + insets.bottom;
        return size;
!!!10787970.java!!!	maximumLayoutSize(inout target : Container) : Dimension
        checkContainer(target);
        checkRequests();

        Dimension size = new Dimension(xTotal.maximum, yTotal.maximum);
        Insets insets = target.getInsets();
        size.width += insets.left + insets.right;
        size.height += insets.top + insets.bottom;
        return size;
!!!10788098.java!!!	getLayoutAlignmentX(inout target : Container) : float
        checkContainer(target);
        checkRequests();
        return xTotal.alignment;
!!!10788226.java!!!	getLayoutAlignmentY(inout target : Container) : float
        checkContainer(target);
        checkRequests();
        return yTotal.alignment;
!!!10788354.java!!!	layoutContainer(inout target : Container) : void
        checkContainer(target);
        checkRequests();

        int nChildren = target.getComponentCount();
        int[] xOffsets = new int[nChildren];
        int[] xSpans = new int[nChildren];
        int[] yOffsets = new int[nChildren];
        int[] ySpans = new int[nChildren];

        // determine the child placements
        Dimension alloc = target.getSize();
        Insets in = target.getInsets();
        alloc.width -= in.left + in.right;
        alloc.height -= in.top + in.bottom;
        SizeRequirements.calculateAlignedPositions(alloc.width, xTotal,
                                                   xChildren, xOffsets,
                                                   xSpans);
        SizeRequirements.calculateAlignedPositions(alloc.height, yTotal,
                                                   yChildren, yOffsets,
                                                   ySpans);

        // flush changes to the container
        for (int i = 0; i < nChildren; i++) {
            Component c = target.getComponent(i);
            c.setBounds(in.left + xOffsets[i], in.top + yOffsets[i],
                        xSpans[i], ySpans[i]);
        }
!!!10788482.java!!!	checkContainer(inout target : Container) : void
        if (this.target != target) {
            throw new AWTError("OverlayLayout can't be shared");
        }
!!!10788610.java!!!	checkRequests() : void
        if (xChildren == null || yChildren == null) {
            // The requests have been invalidated... recalculate
            // the request information.
            int n = target.getComponentCount();
            xChildren = new SizeRequirements[n];
            yChildren = new SizeRequirements[n];
            for (int i = 0; i < n; i++) {
                Component c = target.getComponent(i);
                Dimension min = c.getMinimumSize();
                Dimension typ = c.getPreferredSize();
                Dimension max = c.getMaximumSize();
                xChildren[i] = new SizeRequirements(min.width, typ.width,
                                                    max.width,
                                                    c.getAlignmentX());
                yChildren[i] = new SizeRequirements(min.height, typ.height,
                                                    max.height,
                                                    c.getAlignmentY());
            }

            xTotal = SizeRequirements.getAlignedSizeRequirements(xChildren);
            yTotal = SizeRequirements.getAlignedSizeRequirements(yChildren);
        }
