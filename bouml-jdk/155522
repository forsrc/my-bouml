format 222
"table" // jdk1.8::javax::swing::table
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/javax/swing/table/"
  java_package "javax.swing.table"
  classview 151042 "table"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 474114 "JTableHeader"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is the object which manages the header of the <code>JTable</code>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
@see javax.swing.JTable
"
      classrelation 4621186 // <generalisation>
	relation 4621186 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4621186 // <generalisation>
	  b parent class_ref 338434 // JComponent
      end

      classrelation 4621314 // <realization>
	relation 4621314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4621314 // <realization>
	  b parent class_ref 1292290 // TableColumnModelListener
      end

      classrelation 4621442 // <realization>
	relation 4621442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4621442 // <realization>
	  b parent class_ref 347778 // Accessible
      end

      classrelation 4621570 // uiClassID (<unidirectional association>)
	relation 4621570 --->
	  a role_name "uiClassID" init_value " \"TableHeaderUI\"" class_relation const_relation private
	    comment "
@see #getUIClassID
@see #readObject

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4621570 // uiClassID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4621698 // table (<unidirectional association>)
	relation 4621698 --->
	  a role_name "table" protected
	    comment " Instance Variables


The table for which this object is the header;
the default is <code>null</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4621698 // table (<unidirectional association>)
	  b parent class_ref 475010 // JTable
      end

      classrelation 4621826 // columnModel (<unidirectional association>)
	relation 4621826 --->
	  a role_name "columnModel" protected
	    comment "
The <code>TableColumnModel</code> of the table header.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4621826 // columnModel (<unidirectional association>)
	  b parent class_ref 1292802 // TableColumnModel
      end

      attribute 2552706 "reorderingAllowed"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, reordering of columns are allowed by the user;
the default is true.

"
      end

      attribute 2552834 "resizingAllowed"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "If true, resizing of columns are allowed by the user;
the default is true.

"
      end

      attribute 2552962 "updateTableInRealTime"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Obsolete as of Java 2 platform v1.3.  Real time repaints, in response
to column dragging or resizing, are now unconditional.


If this flag is true, then the header will repaint the table as
a column is dragged or resized; the default is true.

"
      end

      classrelation 4621954 // resizingColumn (<unidirectional association>)
	relation 4621954 --->
	  a role_name "resizingColumn" protected
	    comment " The index of the column being resized. <code>null</code> if not resizing. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4621954 // resizingColumn (<unidirectional association>)
	  b parent class_ref 474370 // TableColumn
      end

      classrelation 4622082 // draggedColumn (<unidirectional association>)
	relation 4622082 --->
	  a role_name "draggedColumn" protected
	    comment " The index of the column being dragged. <code>null</code> if not dragging. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4622082 // draggedColumn (<unidirectional association>)
	  b parent class_ref 474370 // TableColumn
      end

      attribute 2553090 "draggedDistance"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The distance from its original position the column has been dragged. 
"
      end

      classrelation 4622210 // defaultRenderer (<unidirectional association>)
	relation 4622210 --->
	  a role_name "defaultRenderer" private
	    comment "
 The default renderer to be used when a <code>TableColumn</code>
 does not define a <code>headerRenderer</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4622210 // defaultRenderer (<unidirectional association>)
	  b parent class_ref 474626 // TableCellRenderer
      end

      operation 11605250 "JTableHeader"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


 Constructs a <code>JTableHeader</code> with a default
 <code>TableColumnModel</code>.

@see #createDefaultColumnModel
"
      end

      operation 11605378 "JTableHeader"
	public explicit_return_type ""
	nparams 1
	  param inout name "cm" type class_ref 1292802 // TableColumnModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>JTableHeader</code> which is initialized with
 <code>cm</code> as the column model.  If <code>cm</code> is
 <code>null</code> this method will initialize the table header
 with a default <code>TableColumnModel</code>.

@param cm        the column model for the table
@see #createDefaultColumnModel
"
      end

      operation 11605506 "setTable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "table" type class_ref 475010 // JTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Local behavior attributes


 Sets the table associated with this header.
 @param  table   the new table
 @beaninfo
  bound: true
  description: The table associated with this header.
"
      end

      operation 11605634 "getTable"
	public return_type class_ref 475010 // JTable
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the table associated with this header.
 @return  the <code>table</code> property
"
      end

      operation 11605762 "setReorderingAllowed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reorderingAllowed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets whether the user can drag column headers to reorder columns.

@param   reorderingAllowed       true if the table view should allow
                                 reordering; otherwise false
@see     #getReorderingAllowed
@beaninfo
 bound: true
 description: Whether the user can drag column headers to reorder columns.
"
      end

      operation 11605890 "getReorderingAllowed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user is allowed to rearrange columns by
dragging their headers, false otherwise. The default is true. You can
rearrange columns programmatically regardless of this setting.

@return  the <code>reorderingAllowed</code> property
@see     #setReorderingAllowed
"
      end

      operation 11606018 "setResizingAllowed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizingAllowed" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets whether the user can resize columns by dragging between headers.

@param   resizingAllowed         true if table view should allow
                                 resizing
@see     #getResizingAllowed
@beaninfo
 bound: true
 description: Whether the user can resize columns by dragging between headers.
"
      end

      operation 11606146 "getResizingAllowed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user is allowed to resize columns by dragging
between their headers, false otherwise. The default is true. You can
resize columns programmatically regardless of this setting.

@return  the <code>resizingAllowed</code> property
@see     #setResizingAllowed
"
      end

      operation 11606274 "getDraggedColumn"
	public return_type class_ref 474370 // TableColumn
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the the dragged column, if and only if, a drag is in
process, otherwise returns <code>null</code>.

@return  the dragged column, if a drag is in
         process, otherwise returns <code>null</code>
@see     #getDraggedDistance
"
      end

      operation 11606402 "getDraggedDistance"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the column's horizontal distance from its original
position, if and only if, a drag is in process. Otherwise, the
the return value is meaningless.

@return  the column's horizontal distance from its original
         position, if a drag is in process, otherwise the return
         value is meaningless
@see     #getDraggedColumn
"
      end

      operation 11606530 "getResizingColumn"
	public return_type class_ref 474370 // TableColumn
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the resizing column.  If no column is being
resized this method returns <code>null</code>.

@return  the resizing column, if a resize is in process, otherwise
         returns <code>null</code>
"
      end

      operation 11606658 "setUpdateTableInRealTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obsolete as of Java 2 platform v1.3.  Real time repaints, in response to
column dragging or resizing, are now unconditional.


 Sets whether the body of the table updates in real time when
 a column is resized or dragged.

@param   flag                    true if tableView should update
                                 the body of the table in real time
@see #getUpdateTableInRealTime
"
      end

      operation 11606786 "getUpdateTableInRealTime"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obsolete as of Java 2 platform v1.3.  Real time repaints, in response to
column dragging or resizing, are now unconditional.


Returns true if the body of the table view updates in real
time when a column is resized or dragged.  User can set this flag to
false to speed up the table's response to user resize or drag actions.
The default is true.

@return  true if the table updates in real time
@see #setUpdateTableInRealTime
"
      end

      operation 11606914 "setDefaultRenderer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defaultRenderer" type class_ref 474626 // TableCellRenderer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default renderer to be used when no <code>headerRenderer</code>
is defined by a <code>TableColumn</code>.
@param  defaultRenderer  the default renderer
@since 1.3
"
      end

      operation 11607042 "getDefaultRenderer"
	public return_type class_ref 474626 // TableCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Transient
"
	
	
	
	comment "Returns the default renderer used when no <code>headerRenderer</code>
is defined by a <code>TableColumn</code>.
@return the default renderer
@since 1.3
"
      end

      operation 11607170 "columnAtPoint"
	public explicit_return_type "int"
	nparams 1
	  param inout name "point" type class_ref 323714 // Point
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the column that <code>point</code> lies in, or -1 if it
lies out of bounds.

@return  the index of the column that <code>point</code> lies in, or -1 if it
         lies out of bounds
"
      end

      operation 11607298 "getHeaderRect"
	public return_type class_ref 314114 // Rectangle
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the rectangle containing the header tile at <code>column</code>.
When the <code>column</code> parameter is out of bounds this method uses the
same conventions as the <code>JTable</code> method <code>getCellRect</code>.

@return  the rectangle containing the header tile at <code>column</code>
@see JTable#getCellRect
"
      end

      operation 11607426 "getToolTipText"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "event" type class_ref 346626 // MouseEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the renderer's tips to be used if there is text set.
@param  event  the location of the event identifies the proper
                         renderer and, therefore, the proper tip
@return the tool tip for this component
"
      end

      operation 11607554 "getUI"
	public return_type class_ref 473986 // TableHeaderUI
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Managing TableHeaderUI


Returns the look and feel (L&amp;F) object that renders this component.

@return the <code>TableHeaderUI</code> object that renders this component
"
      end

      operation 11607682 "setUI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ui" type class_ref 473986 // TableHeaderUI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the look and feel (L&amp;F) object that renders this component.

@param ui  the <code>TableHeaderUI</code> L&amp;F object
@see UIDefaults#getUI
"
      end

      operation 11607810 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the look and feel
(L&amp;F) has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 11607938 "getUIClassID"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the suffix used to construct the name of the look and feel
(L&amp;F) class used to render this component.
@return the string \"TableHeaderUI\"

@return \"TableHeaderUI\"
@see JComponent#getUIClassID
@see UIDefaults#getUI
"
      end

      operation 11608066 "setColumnModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "columnModel" type class_ref 1292802 // TableColumnModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Managing models


 Sets the column model for this table to <code>newModel</code> and registers
 for listener notifications from the new column model.

@param   columnModel     the new data source for this table
@exception IllegalArgumentException
                         if <code>newModel</code> is <code>null</code>
@see     #getColumnModel
@beaninfo
 bound: true
 description: The object governing the way columns appear in the view.
"
      end

      operation 11608194 "getColumnModel"
	public return_type class_ref 1292802 // TableColumnModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableColumnModel</code> that contains all column information
of this table header.

@return  the <code>columnModel</code> property
@see     #setColumnModel
"
      end

      operation 11608322 "columnAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementing TableColumnModelListener interface


Invoked when a column is added to the table column model.
<p>
Application code will not use these methods explicitly, they
are used internally by <code>JTable</code>.

@param e  the event received
@see TableColumnModelListener
"
      end

      operation 11608450 "columnRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a column is removed from the table column model.
<p>
Application code will not use these methods explicitly, they
are used internally by <code>JTable</code>.

@param e  the event received
@see TableColumnModelListener
"
      end

      operation 11608578 "columnMoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a column is repositioned.
<p>
Application code will not use these methods explicitly, they
are used internally by <code>JTable</code>.

@param e the event received
@see TableColumnModelListener
"
      end

      operation 11608706 "columnMarginChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 359554 // ChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invoked when a column is moved due to a margin change.
<p>
Application code will not use these methods explicitly, they
are used internally by <code>JTable</code>.

@param e the event received
@see TableColumnModelListener
"
      end

      operation 11608834 "columnSelectionChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 365954 // ListSelectionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --Redrawing the header is slow in cell selection mode.
 --Since header selection is ugly and it is always clear from the
 --view which columns are selected, don't redraw the header.

Invoked when the selection model of the <code>TableColumnModel</code>
is changed.  This method currently has no effect (the header is not
redrawn).
<p>
Application code will not use these methods explicitly, they
are used internally by <code>JTable</code>.

@param e the event received
@see TableColumnModelListener
"
      end

      operation 11608962 "createDefaultColumnModel"
	protected return_type class_ref 1292802 // TableColumnModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " repaint(); }

  Package Methods


 Returns the default column model object which is
 a <code>DefaultTableColumnModel</code>.  A subclass can override this
 method to return a different column model object

@return the default column model object
"
      end

      operation 11609090 "createDefaultRenderer"
	protected return_type class_ref 474626 // TableCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a default renderer to be used when no header renderer
 is defined by a <code>TableColumn</code>.

 @return the default table column renderer
@since 1.3
"
      end

      operation 11609218 "initializeLocalVars"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the local variables and properties with default values.
Used by the constructor methods.
"
      end

      operation 11609346 "resizeAndRepaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sizes the header and marks it as needing display.  Equivalent
to <code>revalidate</code> followed by <code>repaint</code>.
"
      end

      operation 11609474 "setDraggedColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColumn" type class_ref 474370 // TableColumn
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the header's <code>draggedColumn</code> to <code>aColumn</code>.
 <p>
 Application code will not use this method explicitly, it is used
 internally by the column dragging mechanism.

 @param  aColumn  the column being dragged, or <code>null</code> if
                no column is being dragged
"
      end

      operation 11609602 "setDraggedDistance"
	public explicit_return_type "void"
	nparams 1
	  param in name "distance" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the header's <code>draggedDistance</code> to <code>distance</code>.
 @param distance  the distance dragged
"
      end

      operation 11609730 "setResizingColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColumn" type class_ref 474370 // TableColumn
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the header's <code>resizingColumn</code> to <code>aColumn</code>.
 <p>
 Application code will not use this method explicitly, it
 is used internally by the column sizing mechanism.

 @param  aColumn  the column being resized, or <code>null</code> if
                no column is being resized
"
      end

      operation 11609858 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See <code>readObject</code> and <code>writeObject</code> in
<code>JComponent</code> for more
information about serialization in Swing.
"
      end

      operation 11609986 "getWidthInRightToLeft"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11610114 "paramString"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this <code>JTableHeader</code>. This method
is intended to be used only for debugging purposes, and the
content and format of the returned string may vary between
implementations. The returned string may be empty but may not
be <code>null</code>.
<P>
Overriding <code>paramString</code> to provide information about the
specific new aspects of the JFC components.

@return  a string representation of this <code>JTableHeader</code>
"
      end

      operation 11610242 "getAccessibleContext"
	public return_type class_ref 347522 // AccessibleContext
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "///////////////
 Accessibility support
//////////////

Gets the AccessibleContext associated with this JTableHeader.
For JTableHeaders, the AccessibleContext takes the form of an
AccessibleJTableHeader.
A new AccessibleJTableHeader instance is created if necessary.

@return an AccessibleJTableHeader that serves as the
        AccessibleContext of this JTableHeader
"
      end

      class 1375362 "AccessibleJTableHeader"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4622338 // <generalisation>
	  relation 4622338 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4622338 // <generalisation>
	    b parent class_ref 358530 // AccessibleJComponent
	end

	operation 11610370 "getAccessibleRole"
	  public return_type class_ref 348034 // AccessibleRole
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the role of this object.

@return an instance of AccessibleRole describing the role of the
object
@see AccessibleRole
"
	end

	operation 11610498 "getAccessibleAt"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param inout name "p" type class_ref 323714 // Point
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the Accessible child, if one exists, contained at the local
coordinate Point.

@param p The point defining the top-left corner of the Accessible,
given in the coordinate space of the object's parent.
@return the Accessible, if it exists, at the specified location;
else null
"
	end

	operation 11610626 "getAccessibleChildrenCount"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the number of accessible children in the object.  If all
of the children of this object implement Accessible, than this
method should return the number of children of this object.

@return the number of accessible children in the object.
"
	end

	operation 11610754 "getAccessibleChild"
	  public return_type class_ref 347778 // Accessible
	  nparams 1
	    param in name "i" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the nth Accessible child of the object.

@param i zero-based index of child
@return the nth Accessible child of the object
"
	end

	class 1375490 "AccessibleJTableHeaderEntry"
	  visibility protected 
	  cpp_decl ""
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 4622466 // <generalisation>
	    relation 4622466 ---|>
	      a public
		java "${type}"
		classrelation_ref 4622466 // <generalisation>
	      b parent class_ref 347522 // AccessibleContext
	  end

	  classrelation 4622594 // <realization>
	    relation 4622594 -_-|>
	      a public
		java "${type}"
		classrelation_ref 4622594 // <realization>
	      b parent class_ref 347778 // Accessible
	  end

	  classrelation 4622722 // <realization>
	    relation 4622722 -_-|>
	      a public
		java "${type}"
		classrelation_ref 4622722 // <realization>
	      b parent class_ref 348546 // AccessibleComponent
	  end

	  classrelation 4622850 // parent (<unidirectional association>)
	    relation 4622850 --->
	      a role_name "parent" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 4622850 // parent (<unidirectional association>)
	      b parent class_ref 474114 // JTableHeader
	  end

	  attribute 2553218 "column"
	    private explicit_type "int"
	    cpp_decl ""
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	  end

	  classrelation 4622978 // table (<unidirectional association>)
	    relation 4622978 --->
	      a role_name "table" private
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 4622978 // table (<unidirectional association>)
	      b parent class_ref 475010 // JTable
	  end

	  operation 11610882 "AccessibleJTableHeaderEntry"
	    public explicit_return_type ""
	    nparams 3
	      param in name "c" explicit_type "int"
	      param inout name "p" type class_ref 474114 // JTableHeader
	      param inout name "t" type class_ref 475010 // JTable
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " Constructs an AccessiblJTableHeaaderEntry
@since 1.4
"
	  end

	  operation 11611010 "getAccessibleContext"
	    public return_type class_ref 347522 // AccessibleContext
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the AccessibleContext associated with this object.
In the implementation of the Java Accessibility API
for this class, returns this object, which serves as
its own AccessibleContext.

@return this object
"
	  end

	  operation 11611138 "getCurrentAccessibleContext"
	    private return_type class_ref 347522 // AccessibleContext
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11611266 "getCurrentComponent"
	    private return_type class_ref 338818 // Component
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11611394 "getAccessibleName"
	    public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " AccessibleContext methods"
	  end

	  operation 11611522 "setAccessibleName"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "s" type class_ref 128130 // String
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11611650 "getAccessibleDescription"
	    public return_type class_ref 128130 // String
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " *** should check toolTip text for desc. (needs MouseEvent)
"
	  end

	  operation 11611778 "setAccessibleDescription"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "s" type class_ref 128130 // String
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11611906 "getAccessibleRole"
	    public return_type class_ref 348034 // AccessibleRole
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612034 "getAccessibleStateSet"
	    public return_type class_ref 348162 // AccessibleStateSet
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612162 "getAccessibleIndexInParent"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612290 "getAccessibleChildrenCount"
	    public explicit_return_type "int"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612418 "getAccessibleChild"
	    public return_type class_ref 347778 // Accessible
	    nparams 1
	      param in name "i" explicit_type "int"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612546 "getLocale"
	    public return_type class_ref 312962 // Locale
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612674 "addPropertyChangeListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 347266 // PropertyChangeListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612802 "removePropertyChangeListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 347266 // PropertyChangeListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11612930 "getAccessibleAction"
	    public return_type class_ref 348418 // AccessibleAction
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613058 "getAccessibleComponent"
	    public return_type class_ref 348546 // AccessibleComponent
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Get the AccessibleComponent associated with this object.  In the
implementation of the Java Accessibility API for this class,
return this object, which is responsible for implementing the
AccessibleComponent interface on behalf of itself.

@return this object
"
	  end

	  operation 11613186 "getAccessibleSelection"
	    public return_type class_ref 348674 // AccessibleSelection
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613314 "getAccessibleText"
	    public return_type class_ref 348802 // AccessibleText
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613442 "getAccessibleValue"
	    public return_type class_ref 349058 // AccessibleValue
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613570 "getBackground"
	    public return_type class_ref 323458 // Color
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " AccessibleComponent methods"
	  end

	  operation 11613698 "setBackground"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "c" type class_ref 323458 // Color
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613826 "getForeground"
	    public return_type class_ref 323458 // Color
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11613954 "setForeground"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "c" type class_ref 323458 // Color
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614082 "getCursor"
	    public return_type class_ref 340866 // Cursor
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614210 "setCursor"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "c" type class_ref 340866 // Cursor
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614338 "getFont"
	    public return_type class_ref 340354 // Font
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614466 "setFont"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "f" type class_ref 340354 // Font
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614594 "getFontMetrics"
	    public return_type class_ref 343810 // FontMetrics
	    nparams 1
	      param inout name "f" type class_ref 340354 // Font
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614722 "isEnabled"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614850 "setEnabled"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "b" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11614978 "isVisible"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615106 "setVisible"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "b" explicit_type "boolean"
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615234 "isShowing"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615362 "contains"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615490 "getLocationOnScreen"
	    public return_type class_ref 323714 // Point
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615618 "getLocation"
	    public return_type class_ref 323714 // Point
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615746 "setLocation"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11615874 "getBounds"
	    public return_type class_ref 314114 // Rectangle
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616002 "setBounds"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "r" type class_ref 314114 // Rectangle
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616130 "getSize"
	    public return_type class_ref 316802 // Dimension
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616258 "setSize"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "d" type class_ref 316802 // Dimension
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616386 "getAccessibleAt"
	    public return_type class_ref 347778 // Accessible
	    nparams 1
	      param inout name "p" type class_ref 323714 // Point
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616514 "isFocusTraversable"
	    public explicit_return_type "boolean"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616642 "requestFocus"
	    public explicit_return_type "void"
	    nparams 0
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616770 "addFocusListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 342018 // FocusListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 11616898 "removeFocusListener"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "l" type class_ref 342018 // FocusListener
	    
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end
    end

    class 474370 "TableColumn"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " A <code>TableColumn</code> represents all the attributes of a column in a
 <code>JTable</code>, such as width, resizability, minimum and maximum width.
 In addition, the <code>TableColumn</code> provides slots for a renderer and
 an editor that can be used to display and edit the values in this column.
 <p>
 It is also possible to specify renderers and editors on a per type basis
 rather than a per column basis - see the
 <code>setDefaultRenderer</code> method in the <code>JTable</code> class.
 This default mechanism is only used when the renderer (or
 editor) in the <code>TableColumn</code> is <code>null</code>.
<p>
 The <code>TableColumn</code> stores the link between the columns in the
 <code>JTable</code> and the columns in the <code>TableModel</code>.
 The <code>modelIndex</code> is the column in the
 <code>TableModel</code>, which will be queried for the data values for the
 cells in this column. As the column moves around in the view this
 <code>modelIndex</code> does not change.
 <p>
<b>Note:</b> Some implementations may assume that all
   <code>TableColumnModel</code>s are unique, therefore we would
   recommend that the same <code>TableColumn</code> instance
   not be added more than once to a <code>TableColumnModel</code>.
   To show <code>TableColumn</code>s with the same column of
   data from the model, create a new instance with the same
   <code>modelIndex</code>.
 <p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
@see javax.swing.table.TableColumnModel

@see javax.swing.table.DefaultTableColumnModel
@see javax.swing.table.JTableHeader#getDefaultRenderer()
@see JTable#getDefaultRenderer(Class)
@see JTable#getDefaultEditor(Class)
@see JTable#getCellRenderer(int, int)
@see JTable#getCellEditor(int, int)
"
      classrelation 4623106 // <generalisation>
	relation 4623106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4623106 // <generalisation>
	  b parent class_ref 129538 // Object
      end

      classrelation 4623234 // <realization>
	relation 4623234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4623234 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4623362 // COLUMN_WIDTH_PROPERTY (<unidirectional association>)
	relation 4623362 --->
	  a role_name "COLUMN_WIDTH_PROPERTY" init_value " \"columWidth\"" class_relation const_relation public
	    comment "
Obsolete as of Java 2 platform v1.3.  Please use string literals to identify
properties.


Warning: The value of this constant, \"columWidth\" is wrong as the
name of the property is \"columnWidth\".

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4623362 // COLUMN_WIDTH_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4623490 // HEADER_VALUE_PROPERTY (<unidirectional association>)
	relation 4623490 --->
	  a role_name "HEADER_VALUE_PROPERTY" init_value " \"headerValue\"" class_relation const_relation public
	    comment "
Obsolete as of Java 2 platform v1.3.  Please use string literals to identify
properties.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4623490 // HEADER_VALUE_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4623618 // HEADER_RENDERER_PROPERTY (<unidirectional association>)
	relation 4623618 --->
	  a role_name "HEADER_RENDERER_PROPERTY" init_value " \"headerRenderer\"" class_relation const_relation public
	    comment "
Obsolete as of Java 2 platform v1.3.  Please use string literals to identify
properties.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4623618 // HEADER_RENDERER_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 4623746 // CELL_RENDERER_PROPERTY (<unidirectional association>)
	relation 4623746 --->
	  a role_name "CELL_RENDERER_PROPERTY" init_value " \"cellRenderer\"" class_relation const_relation public
	    comment "
Obsolete as of Java 2 platform v1.3.  Please use string literals to identify
properties.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4623746 // CELL_RENDERER_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 2553346 "modelIndex"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  Instance Variables


The index of the column in the model which is to be displayed by
this <code>TableColumn</code>. As columns are moved around in the
view <code>modelIndex</code> remains constant.

"
      end

      classrelation 4623874 // identifier (<unidirectional association>)
	relation 4623874 --->
	  a role_name "identifier" protected
	    comment "
 This object is not used internally by the drawing machinery of
 the <code>JTable</code>; identifiers may be set in the
 <code>TableColumn</code> as as an
 optional way to tag and locate table columns. The table package does
 not modify or invoke any methods in these identifier objects other
 than the <code>equals</code> method which is used in the
 <code>getColumnIndex()</code> method in the
 <code>DefaultTableColumnModel</code>.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4623874 // identifier (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 2553474 "width"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The width of the column. 
"
      end

      attribute 2553602 "minWidth"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The minimum width of the column. 
"
      end

      attribute 2553730 "preferredWidth"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The preferred width of the column. 
"
      end

      attribute 2553858 "maxWidth"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The maximum width of the column. 
"
      end

      classrelation 4624002 // headerRenderer (<unidirectional association>)
	relation 4624002 --->
	  a role_name "headerRenderer" protected
	    comment " The renderer used to draw the header of the column. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624002 // headerRenderer (<unidirectional association>)
	  b parent class_ref 474626 // TableCellRenderer
      end

      classrelation 4624130 // headerValue (<unidirectional association>)
	relation 4624130 --->
	  a role_name "headerValue" protected
	    comment " The header value of the column. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624130 // headerValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 4624258 // cellRenderer (<unidirectional association>)
	relation 4624258 --->
	  a role_name "cellRenderer" protected
	    comment " The renderer used to draw the data cells of the column. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624258 // cellRenderer (<unidirectional association>)
	  b parent class_ref 474626 // TableCellRenderer
      end

      classrelation 4624386 // cellEditor (<unidirectional association>)
	relation 4624386 --->
	  a role_name "cellEditor" protected
	    comment " The editor used to edit the data cells of the column. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624386 // cellEditor (<unidirectional association>)
	  b parent class_ref 1266946 // TableCellEditor
      end

      attribute 2553986 "isResizable"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If true, the user is allowed to resize the column; the default is true. 
"
      end

      attribute 2554114 "resizedPostingDisableCount"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "This field was not used in previous releases and there are
currently no plans to support it in the future.

@deprecated as of Java 2 platform v1.3


 Counter used to disable posting of resizing notifications until the
 end of the resize.

"
      end

      classrelation 4624514 // changeSupport (<unidirectional association>)
	relation 4624514 --->
	  a role_name "changeSupport" private
	    comment "
If any <code>PropertyChangeListeners</code> have been registered, the
<code>changeSupport</code> field describes them.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624514 // changeSupport (<unidirectional association>)
	  b parent class_ref 360578 // SwingPropertyChangeSupport
      end

      operation 11617026 "TableColumn"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


 Cover method, using a default model index of 0,
 default width of 75, a <code>null</code> renderer and a
 <code>null</code> editor.
 This method is intended for serialization.
 @see #TableColumn(int, int, TableCellRenderer, TableCellEditor)
"
      end

      operation 11617154 "TableColumn"
	public explicit_return_type ""
	nparams 1
	  param in name "modelIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cover method, using a default width of 75, a <code>null</code>
 renderer and a <code>null</code> editor.
 @see #TableColumn(int, int, TableCellRenderer, TableCellEditor)
"
      end

      operation 11617282 "TableColumn"
	public explicit_return_type ""
	nparams 2
	  param in name "modelIndex" explicit_type "int"
	  param in name "width" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Cover method, using a <code>null</code> renderer and a
 <code>null</code> editor.
 @see #TableColumn(int, int, TableCellRenderer, TableCellEditor)
"
      end

      operation 11617410 "TableColumn"
	public explicit_return_type ""
	nparams 4
	  param in name "modelIndex" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param inout name "cellRenderer" type class_ref 474626 // TableCellRenderer
	  param inout name "cellEditor" type class_ref 1266946 // TableCellEditor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates and initializes an instance of
 <code>TableColumn</code> with the specified model index,
 width, cell renderer, and cell editor;
 all <code>TableColumn</code> constructors delegate to this one.
 The value of <code>width</code> is used
 for both the initial and preferred width;
 if <code>width</code> is negative,
 they're set to 0.
 The minimum width is set to 15 unless the initial width is less,
 in which case the minimum width is set to
 the initial width.

 <p>
 When the <code>cellRenderer</code>
 or <code>cellEditor</code> parameter is <code>null</code>,
 a default value provided by the <code>JTable</code>
 <code>getDefaultRenderer</code>
 or <code>getDefaultEditor</code> method, respectively,
 is used to
 provide defaults based on the type of the data in this column.
 This column-centric rendering strategy can be circumvented by overriding
 the <code>getCellRenderer</code> methods in <code>JTable</code>.

@param modelIndex the index of the column
 in the model that supplies the data for this column in the table;
 the model index remains the same
 even when columns are reordered in the view
@param width this column's preferred width and initial width
@param cellRenderer the object used to render values in this column
@param cellEditor the object used to edit values in this column
@see #getMinWidth()
@see JTable#getDefaultRenderer(Class)
@see JTable#getDefaultEditor(Class)
@see JTable#getCellRenderer(int, int)
@see JTable#getCellEditor(int, int)
"
      end

      operation 11617538 "firePropertyChange"
	private explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modifying and Querying attributes
"
      end

      operation 11617666 "firePropertyChange"
	private explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11617794 "firePropertyChange"
	private explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11617922 "setModelIndex"
	public explicit_return_type "void"
	nparams 1
	  param in name "modelIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the model index for this column. The model index is the
index of the column in the model that will be displayed by this
<code>TableColumn</code>. As the <code>TableColumn</code>
is moved around in the view the model index remains constant.
@param  modelIndex  the new modelIndex
@beaninfo
 bound: true
 description: The model index.
"
      end

      operation 11618050 "getModelIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model index for this column.
@return the <code>modelIndex</code> property
"
      end

      operation 11618178 "setIdentifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "identifier" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableColumn</code>'s identifier to
<code>anIdentifier</code>. <p>
Note: identifiers are not used by the <code>JTable</code>,
they are purely a
convenience for the external tagging and location of columns.

@param      identifier           an identifier for this column
@see        #getIdentifier
@beaninfo
 bound: true
 description: A unique identifier for this column.
"
      end

      operation 11618306 "getIdentifier"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>identifier</code> object for this column.
 Note identifiers are not used by <code>JTable</code>,
 they are purely a convenience for external use.
 If the <code>identifier</code> is <code>null</code>,
 <code>getIdentifier()</code> returns <code>getHeaderValue</code>
 as a default.

@return  the <code>identifier</code> property
@see     #setIdentifier
"
      end

      operation 11618434 "setHeaderValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "headerValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>Object</code> whose string representation will be
used as the value for the <code>headerRenderer</code>.  When the
<code>TableColumn</code> is created, the default <code>headerValue</code>
is <code>null</code>.
@param headerValue  the new headerValue
@see       #getHeaderValue
@beaninfo
 bound: true
 description: The text to be used by the header renderer.
"
      end

      operation 11618562 "getHeaderValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Object</code> used as the value for the header
renderer.

@return  the <code>headerValue</code> property
@see     #setHeaderValue
"
      end

      operation 11618690 "setHeaderRenderer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "headerRenderer" type class_ref 474626 // TableCellRenderer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Renderers and Editors


Sets the <code>TableCellRenderer</code> used to draw the
<code>TableColumn</code>'s header to <code>headerRenderer</code>.
<p>
It is the header renderers responsibility to render the sorting
indicator.  If you are using sorting and specify a renderer your
renderer must render the sorting indication.

@param headerRenderer  the new headerRenderer

@see       #getHeaderRenderer
@beaninfo
 bound: true
 description: The header renderer.
"
      end

      operation 11618818 "getHeaderRenderer"
	public return_type class_ref 474626 // TableCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableCellRenderer</code> used to draw the header of the
<code>TableColumn</code>. When the <code>headerRenderer</code> is
<code>null</code>, the <code>JTableHeader</code>
uses its <code>defaultRenderer</code>. The default value for a
<code>headerRenderer</code> is <code>null</code>.

@return  the <code>headerRenderer</code> property
@see     #setHeaderRenderer
@see     #setHeaderValue
@see     javax.swing.table.JTableHeader#getDefaultRenderer()
"
      end

      operation 11618946 "setCellRenderer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cellRenderer" type class_ref 474626 // TableCellRenderer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableCellRenderer</code> used by <code>JTable</code>
to draw individual values for this column.

@param cellRenderer  the new cellRenderer
@see     #getCellRenderer
@beaninfo
 bound: true
 description: The renderer to use for cell values.
"
      end

      operation 11619074 "getCellRenderer"
	public return_type class_ref 474626 // TableCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableCellRenderer</code> used by the
<code>JTable</code> to draw
values for this column.  The <code>cellRenderer</code> of the column
not only controls the visual look for the column, but is also used to
interpret the value object supplied by the <code>TableModel</code>.
When the <code>cellRenderer</code> is <code>null</code>,
the <code>JTable</code> uses a default renderer based on the
class of the cells in that column. The default value for a
<code>cellRenderer</code> is <code>null</code>.

@return  the <code>cellRenderer</code> property
@see     #setCellRenderer
@see     JTable#setDefaultRenderer
"
      end

      operation 11619202 "setCellEditor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cellEditor" type class_ref 1266946 // TableCellEditor
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the editor to used by when a cell in this column is edited.

@param cellEditor  the new cellEditor
@see     #getCellEditor
@beaninfo
 bound: true
 description: The editor to use for cell values.
"
      end

      operation 11619330 "getCellEditor"
	public return_type class_ref 1266946 // TableCellEditor
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableCellEditor</code> used by the
<code>JTable</code> to edit values for this column.  When the
<code>cellEditor</code> is <code>null</code>, the <code>JTable</code>
uses a default editor based on the
class of the cells in that column. The default value for a
<code>cellEditor</code> is <code>null</code>.

@return  the <code>cellEditor</code> property
@see     #setCellEditor
@see     JTable#setDefaultEditor
"
      end

      operation 11619458 "setWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "width" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should not be used to set the widths of columns in the
<code>JTable</code>, use <code>setPreferredWidth</code> instead.
Like a layout manager in the
AWT, the <code>JTable</code> adjusts a column's width automatically
whenever the
table itself changes size, or a column's preferred width is changed.
Setting widths programmatically therefore has no long term effect.
<p>
This method sets this column's width to <code>width</code>.
If <code>width</code> exceeds the minimum or maximum width,
it is adjusted to the appropriate limiting value.
@param  width  the new width
@see     #getWidth
@see     #setMinWidth
@see     #setMaxWidth
@see     #setPreferredWidth
@see     JTable#doLayout()
@beaninfo
 bound: true
 description: The width of the column.
"
      end

      operation 11619586 "getWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width of the <code>TableColumn</code>. The default width is
75.

@return  the <code>width</code> property
@see     #setWidth
"
      end

      operation 11619714 "setPreferredWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "preferredWidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets this column's preferred width to <code>preferredWidth</code>.
If <code>preferredWidth</code> exceeds the minimum or maximum width,
it is adjusted to the appropriate limiting value.
<p>
For details on how the widths of columns in the <code>JTable</code>
(and <code>JTableHeader</code>) are calculated from the
<code>preferredWidth</code>,
see the <code>doLayout</code> method in <code>JTable</code>.

@param  preferredWidth the new preferred width
@see     #getPreferredWidth
@see     JTable#doLayout()
@beaninfo
 bound: true
 description: The preferred width of the column.
"
      end

      operation 11619842 "getPreferredWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred width of the <code>TableColumn</code>.
The default preferred width is 75.

@return  the <code>preferredWidth</code> property
@see     #setPreferredWidth
"
      end

      operation 11619970 "setMinWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "minWidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableColumn</code>'s minimum width to
<code>minWidth</code>,
adjusting the new minimum width if necessary to ensure that
0 &lt;= <code>minWidth</code> &lt;= <code>maxWidth</code>.
For example, if the <code>minWidth</code> argument is negative,
this method sets the <code>minWidth</code> property to 0.

<p>
If the value of the
<code>width</code> or <code>preferredWidth</code> property
is less than the new minimum width,
this method sets that property to the new minimum width.

@param minWidth  the new minimum width
@see     #getMinWidth
@see     #setPreferredWidth
@see     #setMaxWidth
@beaninfo
 bound: true
 description: The minimum width of the column.
"
      end

      operation 11620098 "getMinWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the minimum width for the <code>TableColumn</code>. The
<code>TableColumn</code>'s width can't be made less than this either
by the user or programmatically.

@return  the <code>minWidth</code> property
@see     #setMinWidth
@see     #TableColumn(int, int, TableCellRenderer, TableCellEditor)
"
      end

      operation 11620226 "setMaxWidth"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxWidth" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableColumn</code>'s maximum width to
<code>maxWidth</code> or,
if <code>maxWidth</code> is less than the minimum width,
to the minimum width.

<p>
If the value of the
<code>width</code> or <code>preferredWidth</code> property
is more than the new maximum width,
this method sets that property to the new maximum width.

@param maxWidth  the new maximum width
@see     #getMaxWidth
@see     #setPreferredWidth
@see     #setMinWidth
@beaninfo
 bound: true
 description: The maximum width of the column.
"
      end

      operation 11620354 "getMaxWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum width for the <code>TableColumn</code>. The
<code>TableColumn</code>'s width can't be made larger than this
either by the user or programmatically.  The default maxWidth
is Integer.MAX_VALUE.

@return  the <code>maxWidth</code> property
@see     #setMaxWidth
"
      end

      operation 11620482 "setResizable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isResizable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this column can be resized.

@param isResizable  if true, resizing is allowed; otherwise false
@see     #getResizable
@beaninfo
 bound: true
 description: Whether or not this column can be resized.
"
      end

      operation 11620610 "getResizable"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user is allowed to resize the
<code>TableColumn</code>'s
width, false otherwise. You can change the width programmatically
regardless of this setting.  The default is true.

@return  the <code>isResizable</code> property
@see     #setResizable
"
      end

      operation 11620738 "sizeWidthToFit"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resizes the <code>TableColumn</code> to fit the width of its header cell.
This method does nothing if the header renderer is <code>null</code>
(the default case). Otherwise, it sets the minimum, maximum and preferred
widths of this column to the widths of the minimum, maximum and preferred
sizes of the Component delivered by the header renderer.
The transient \"width\" property of this TableColumn is also set to the
preferred width. Note this method is not used internally by the table
package.

@see     #setPreferredWidth
"
      end

      operation 11620866 "disableResizedPosting"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This field was not used in previous releases and there are
currently no plans to support it in the future.

@deprecated as of Java 2 platform v1.3
"
      end

      operation 11620994 "enableResizedPosting"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This field was not used in previous releases and there are
currently no plans to support it in the future.

@deprecated as of Java 2 platform v1.3
"
      end

      operation 11621122 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Property Change Support


Adds a <code>PropertyChangeListener</code> to the listener list.
The listener is registered for all properties.
<p>
A <code>PropertyChangeEvent</code> will get fired in response to an
explicit call to <code>setFont</code>, <code>setBackground</code>,
or <code>setForeground</code> on the
current component.  Note that if the current component is
inheriting its foreground, background, or font from its
container, then no event will be fired in response to a
change in the inherited property.

@param listener  the listener to be added

"
      end

      operation 11621250 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 347266 // PropertyChangeListener
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a <code>PropertyChangeListener</code> from the listener list.
The <code>PropertyChangeListener</code> to be removed was registered
for all properties.

@param listener  the listener to be removed

"
      end

      operation 11621378 "getPropertyChangeListeners"
	public return_type class_ref 347266 // PropertyChangeListener
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the <code>PropertyChangeListener</code>s added
to this TableColumn with addPropertyChangeListener().

@return all of the <code>PropertyChangeListener</code>s added or an empty
        array if no listeners have been added
@since 1.4
"
      end

      operation 11621506 "createDefaultHeaderRenderer"
	protected return_type class_ref 474626 // TableCellRenderer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected Methods


As of Java 2 platform v1.3, this method is not called by the <code>TableColumn</code>
constructor.  Previously this method was used by the
<code>TableColumn</code> to create a default header renderer.
As of Java 2 platform v1.3, the default header renderer is <code>null</code>.
<code>JTableHeader</code> now provides its own shared default
renderer, just as the <code>JTable</code> does for its cell renderers.

@return the default header renderer
@see javax.swing.table.JTableHeader#createDefaultRenderer()
"
      end
    end

    class 474626 "TableCellRenderer"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines the method required by any object that
would like to be a renderer for cells in a <code>JTable</code>.

@author Alan Chung
"
      operation 11566210 "getTableCellRendererComponent"
	public return_type class_ref 338818 // Component
	nparams 6
	  param inout name "table" type class_ref 475010 // JTable
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	  param inout name "hasFocus" explicit_type "boolean"
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the component used for drawing the cell.  This method is
used to configure the renderer appropriately before drawing.
<p>
The <code>TableCellRenderer</code> is also responsible for rendering the
the cell representing the table's current DnD drop location if
it has one. If this renderer cares about rendering
the DnD drop location, it should query the table directly to
see if the given row and column represent the drop location:
<pre>
    JTable.DropLocation dropLocation = table.getDropLocation();
    if (dropLocation != null
            &amp;&amp; !dropLocation.isInsertRow()
            &amp;&amp; !dropLocation.isInsertColumn()
            &amp;&amp; dropLocation.getRow() == row
            &amp;&amp; dropLocation.getColumn() == column) {

        // this cell represents the current drop location
        // so render it specially, perhaps with a different color
    }
</pre>
<p>
During a printing operation, this method will be called with
<code>isSelected</code> and <code>hasFocus</code> values of
<code>false</code> to prevent selection and focus from appearing
in the printed output. To do other customization based on whether
or not the table is being printed, check the return value from
{@link javax.swing.JComponent#isPaintingForPrint()}.

@param   table           the <code>JTable</code> that is asking the
                         renderer to draw; can be <code>null</code>
@param   value           the value of the cell to be rendered.  It is
                         up to the specific renderer to interpret
                         and draw the value.  For example, if
                         <code>value</code>
                         is the string \"true\", it could be rendered as a
                         string or it could be rendered as a check
                         box that is checked.  <code>null</code> is a
                         valid value
@param   isSelected      true if the cell is to be rendered with the
                         selection highlighted; otherwise false
@param   hasFocus        if true, render cell appropriately.  For
                         example, put a special border on the cell, if
                         the cell can be edited, render in the color used
                         to indicate editing
@param   row             the row index of the cell being drawn.  When
                         drawing the header, the value of
                         <code>row</code> is -1
@param   column          the column index of the cell being drawn
@see javax.swing.JComponent#isPaintingForPrint()
"
      end
    end

    class 1266946 "TableCellEditor"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This interface defines the method any object that would like to be
an editor of values for components such as <code>JListBox</code>,
<code>JComboBox</code>, <code>JTree</code>, or <code>JTable</code>
needs to implement.

@author Alan Chung
"
      classrelation 4072322 // <generalisation>
	relation 4072322 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4072322 // <generalisation>
	  b parent class_ref 1262850 // CellEditor
      end

      operation 10464002 "getTableCellEditorComponent"
	public return_type class_ref 338818 // Component
	nparams 5
	  param inout name "table" type class_ref 475010 // JTable
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets an initial <code>value</code> for the editor.  This will cause
 the editor to <code>stopEditing</code> and lose any partially
 edited value if the editor is editing when this method is called. <p>

 Returns the component that should be added to the client's
 <code>Component</code> hierarchy.  Once installed in the client's
 hierarchy this component will then be able to draw and receive
 user input.

@param   table           the <code>JTable</code> that is asking the
                         editor to edit; can be <code>null</code>
@param   value           the value of the cell to be edited; it is
                         up to the specific editor to interpret
                         and draw the value.  For example, if value is
                         the string \"true\", it could be rendered as a
                         string or it could be rendered as a check
                         box that is checked.  <code>null</code>
                         is a valid value
@param   isSelected      true if the cell is to be rendered with
                         highlighting
@param   row             the row of the cell being edited
@param   column          the column of the cell being edited
@return  the component for editing
"
      end
    end

    class 1292674 "TableModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The <code>TableModel</code> interface specifies the methods the
 <code>JTable</code> will use to interrogate a tabular data model. <p>

 The <code>JTable</code> can be set up to display any data
 model which implements the
 <code>TableModel</code> interface with a couple of lines of code:
 <pre>
     TableModel myData = new MyTableModel();
     JTable table = new JTable(myData);
 </pre><p>

For further documentation, see <a href=\"https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data\">Creating a Table Model</a>
in <em>The Java Tutorial</em>.

@author Philip Milne
@see JTable
"
      operation 11590530 "getRowCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of rows in the model. A
<code>JTable</code> uses this method to determine how many rows it
should display.  This method should be quick, as it
is called frequently during rendering.

@return the number of rows in the model
@see #getColumnCount
"
      end

      operation 11590658 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in the model. A
<code>JTable</code> uses this method to determine how many columns it
should create and display by default.

@return the number of columns in the model
@see #getRowCount
"
      end

      operation 11590786 "getColumnName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the column at <code>columnIndex</code>.  This is used
to initialize the table's column header name.  Note: this name does
not need to be unique; two columns in a table can have the same name.

@param   columnIndex     the index of the column
@return  the name of the column
"
      end

      operation 11590914 "getColumnClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most specific superclass for all the cell values
in the column.  This is used by the <code>JTable</code> to set up a
default renderer and editor for the column.

@param columnIndex  the index of the column
@return the common ancestor class of the object values in the model.
"
      end

      operation 11591042 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "rowIndex" explicit_type "int"
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the cell at <code>rowIndex</code> and
<code>columnIndex</code>
is editable.  Otherwise, <code>setValueAt</code> on the cell will not
change the value of that cell.

@param   rowIndex        the row whose value to be queried
@param   columnIndex     the column whose value to be queried
@return  true if the cell is editable
@see #setValueAt
"
      end

      operation 11591170 "getValueAt"
	public return_type class_ref 129538 // Object
	nparams 2
	  param in name "rowIndex" explicit_type "int"
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value for the cell at <code>columnIndex</code> and
<code>rowIndex</code>.

@param   rowIndex        the row whose value is to be queried
@param   columnIndex     the column whose value is to be queried
@return  the value Object at the specified cell
"
      end

      operation 11591298 "setValueAt"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aValue" type class_ref 129538 // Object
	  param in name "rowIndex" explicit_type "int"
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value in the cell at <code>columnIndex</code> and
<code>rowIndex</code> to <code>aValue</code>.

@param   aValue           the new value
@param   rowIndex         the row whose value is to be changed
@param   columnIndex      the column whose value is to be changed
@see #getValueAt
@see #isCellEditable
"
      end

      operation 11591426 "addTableModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1292034 // TableModelListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a listener to the list that is notified each time a change
to the data model occurs.

@param   l               the TableModelListener
"
      end

      operation 11591554 "removeTableModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1292034 // TableModelListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list that is notified each time a
change to the data model occurs.

@param   l               the TableModelListener
"
      end
    end

    class 1292802 "TableColumnModel"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines the requirements for a table column model object suitable for
use with <code>JTable</code>.

@author Alan Chung
@author Philip Milne
@see DefaultTableColumnModel
"
      operation 11593730 "addColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColumn" type class_ref 474370 // TableColumn
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modifying the model


 Appends <code>aColumn</code> to the end of the
 <code>tableColumns</code> array.
 This method posts a <code>columnAdded</code>
 event to its listeners.

@param   aColumn         the <code>TableColumn</code> to be added
@see     #removeColumn
"
      end

      operation 11593858 "removeColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "column" type class_ref 474370 // TableColumn
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes the <code>TableColumn</code> <code>column</code> from the
 <code>tableColumns</code> array.  This method will do nothing if
 <code>column</code> is not in the table's column list.
 This method posts a <code>columnRemoved</code>
 event to its listeners.

@param   column          the <code>TableColumn</code> to be removed
@see     #addColumn
"
      end

      operation 11593986 "moveColumn"
	public explicit_return_type "void"
	nparams 2
	  param in name "columnIndex" explicit_type "int"
	  param in name "newIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the column and its header at <code>columnIndex</code> to
<code>newIndex</code>.  The old column at <code>columnIndex</code>
will now be found at <code>newIndex</code>.  The column that used
to be at <code>newIndex</code> is shifted left or right
to make room.  This will not move any columns if
<code>columnIndex</code> equals <code>newIndex</code>.  This method
posts a <code>columnMoved</code> event to its listeners.

@param   columnIndex                     the index of column to be moved
@param   newIndex                        index of the column's new location
@exception IllegalArgumentException      if <code>columnIndex</code> or
                                         <code>newIndex</code>
                                         are not in the valid range
"
      end

      operation 11594114 "setColumnMargin"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMargin" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableColumn</code>'s column margin to
<code>newMargin</code>.  This method posts
a <code>columnMarginChanged</code> event to its listeners.

@param   newMargin       the width, in pixels, of the new column margins
@see     #getColumnMargin
"
      end

      operation 11594242 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Querying the model


Returns the number of columns in the model.
@return the number of columns in the model
"
      end

      operation 11594370 "getColumns"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<TableColumn> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Enumeration</code> of all the columns in the model.
@return an <code>Enumeration</code> of all the columns in the model
"
      end

      operation 11594498 "getColumnIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "columnIdentifier" type class_ref 129538 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first column in the table
whose identifier is equal to <code>identifier</code>,
when compared using <code>equals</code>.

@param           columnIdentifier        the identifier object
@return          the index of the first table column
                 whose identifier is equal to <code>identifier</code>
@exception IllegalArgumentException      if <code>identifier</code>
                         is <code>null</code>, or no
                         <code>TableColumn</code> has this
                         <code>identifier</code>
@see             #getColumn
"
      end

      operation 11594626 "getColumn"
	public return_type class_ref 474370 // TableColumn
	nparams 1
	  param in name "columnIndex" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableColumn</code> object for the column at
<code>columnIndex</code>.

@param   columnIndex     the index of the desired column
@return  the <code>TableColumn</code> object for
                         the column at <code>columnIndex</code>
"
      end

      operation 11594754 "getColumnMargin"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width between the cells in each column.
@return the margin, in pixels, between the cells
"
      end

      operation 11594882 "getColumnIndexAtX"
	public explicit_return_type "int"
	nparams 1
	  param in name "xPosition" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the column that lies on the
horizontal point, <code>xPosition</code>;
or -1 if it lies outside the any of the column's bounds.

In keeping with Swing's separable model architecture, a
TableColumnModel does not know how the table columns actually appear on
screen.  The visual presentation of the columns is the responsibility
of the view/controller object using this model (typically JTable).  The
view/controller need not display the columns sequentially from left to
right.  For example, columns could be displayed from right to left to
accommodate a locale preference or some columns might be hidden at the
request of the user.  Because the model does not know how the columns
are laid out on screen, the given <code>xPosition</code> should not be
considered to be a coordinate in 2D graphics space.  Instead, it should
be considered to be a width from the start of the first column in the
model.  If the column index for a given X coordinate in 2D space is
required, <code>JTable.columnAtPoint</code> can be used instead.

@return  the index of the column; or -1 if no column is found
@see javax.swing.JTable#columnAtPoint
"
      end

      operation 11595010 "getTotalColumnWidth"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total width of all the columns.
@return the total computed width of all columns
"
      end

      operation 11595138 "setColumnSelectionAllowed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Selection


Sets whether the columns in this model may be selected.
@param flag   true if columns may be selected; otherwise false
@see #getColumnSelectionAllowed
"
      end

      operation 11595266 "getColumnSelectionAllowed"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if columns may be selected.
@return true if columns may be selected
@see #setColumnSelectionAllowed
"
      end

      operation 11595394 "getSelectedColumns"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of indicies of all selected columns.
@return an array of integers containing the indicies of all
         selected columns; or an empty array if nothing is selected
"
      end

      operation 11595522 "getSelectedColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of selected columns.

@return the number of selected columns; or 0 if no columns are selected
"
      end

      operation 11595650 "setSelectionModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 1269122 // ListSelectionModel
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the selection model.

@param newModel  a <code>ListSelectionModel</code> object
@see #getSelectionModel
"
      end

      operation 11595778 "getSelectionModel"
	public return_type class_ref 1269122 // ListSelectionModel
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current selection model.

@return a <code>ListSelectionModel</code> object
@see #setSelectionModel
"
      end

      operation 11595906 "addColumnModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1292290 // TableColumnModelListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Listener


Adds a listener for table column model events.

@param x  a <code>TableColumnModelListener</code> object
"
      end

      operation 11596034 "removeColumnModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1292290 // TableColumnModelListener
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener for table column model events.

@param x  a <code>TableColumnModelListener</code> object
"
      end
    end

    class 1372930 "DefaultTableCellRenderer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The standard class for rendering (displaying) individual cells
in a <code>JTable</code>.
<p>

<strong><a name=\"override\">Implementation Note:</a></strong>
This class inherits from <code>JLabel</code>, a standard component class.
However <code>JTable</code> employs a unique mechanism for rendering
its cells and therefore requires some slightly modified behavior
from its cell renderer.
The table class defines a single cell renderer and uses it as a
as a rubber-stamp for rendering all cells in the table;
it renders the first cell,
changes the contents of that cell renderer,
shifts the origin to the new location, re-draws it, and so on.
The standard <code>JLabel</code> component was not
designed to be used this way and we want to avoid
triggering a <code>revalidate</code> each time the
cell is drawn. This would greatly decrease performance because the
<code>revalidate</code> message would be
passed up the hierarchy of the container to determine whether any other
components would be affected.
As the renderer is only parented for the lifetime of a painting operation
we similarly want to avoid the overhead associated with walking the
hierarchy for painting operations.
So this class
overrides the <code>validate</code>, <code>invalidate</code>,
<code>revalidate</code>, <code>repaint</code>, and
<code>firePropertyChange</code> methods to be
no-ops and override the <code>isOpaque</code> method solely to improve
performance.  If you write your own renderer,
please keep this performance consideration in mind.
<p>

<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Philip Milne
@see JTable
"
      classrelation 4611074 // <generalisation>
	relation 4611074 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4611074 // <generalisation>
	  b parent class_ref 359810 // JLabel
      end

      classrelation 4611202 // <realization>
	relation 4611202 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4611202 // <realization>
	  b parent class_ref 474626 // TableCellRenderer
      end

      classrelation 4611330 // <realization>
	relation 4611330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4611330 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4611458 // SAFE_NO_FOCUS_BORDER (<unidirectional association>)
	relation 4611458 --->
	  a role_name "SAFE_NO_FOCUS_BORDER" init_value " new EmptyBorder(1, 1, 1, 1)" class_relation const_relation private
	    comment "
An empty <code>Border</code>. This field might not be used. To change the
<code>Border</code> used by this renderer override the
<code>getTableCellRendererComponent</code> method and set the border
of the returned component directly.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4611458 // SAFE_NO_FOCUS_BORDER (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4611586 // DEFAULT_NO_FOCUS_BORDER (<unidirectional association>)
	relation 4611586 --->
	  a role_name "DEFAULT_NO_FOCUS_BORDER" init_value " new EmptyBorder(1, 1, 1, 1)" class_relation const_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4611586 // DEFAULT_NO_FOCUS_BORDER (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4611714 // noFocusBorder (<unidirectional association>)
	relation 4611714 --->
	  a role_name "noFocusBorder" init_value " DEFAULT_NO_FOCUS_BORDER" class_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4611714 // noFocusBorder (<unidirectional association>)
	  b parent class_ref 357122 // Border
      end

      classrelation 4611842 // unselectedForeground (<unidirectional association>)
	relation 4611842 --->
	  a role_name "unselectedForeground" private
	    comment " We need a place to store the color the JLabel should be returned
 to after its foreground and background colors have been set
 to the selection background color.
 These ivars will be made protected when their names are finalized.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4611842 // unselectedForeground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      classrelation 4611970 // unselectedBackground (<unidirectional association>)
	relation 4611970 --->
	  a role_name "unselectedBackground" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4611970 // unselectedBackground (<unidirectional association>)
	  b parent class_ref 323458 // Color
      end

      operation 11566850 "DefaultTableCellRenderer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a default table cell renderer.
"
      end

      operation 11566978 "getNoFocusBorder"
	private return_type class_ref 357122 // Border
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11567106 "setForeground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.setForeground</code> to assign
the unselected-foreground color to the specified color.

@param c set the foreground color to this value
"
      end

      operation 11567234 "setBackground"
	public explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 323458 // Color
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides <code>JComponent.setBackground</code> to assign
the unselected-background color to the specified color.

@param c set the background color to this value
"
      end

      operation 11567362 "updateUI"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification from the <code>UIManager</code> that the look and feel
[L&amp;F] has changed.
Replaces the current UI object with the latest version from the
<code>UIManager</code>.

@see JComponent#updateUI
"
      end

      operation 11567490 "getTableCellRendererComponent"
	public return_type class_ref 338818 // Component
	nparams 6
	  param inout name "table" type class_ref 475010 // JTable
	  param inout name "value" type class_ref 129538 // Object
	  param inout name "isSelected" explicit_type "boolean"
	  param inout name "hasFocus" explicit_type "boolean"
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableCellRenderer


Returns the default table cell renderer.
<p>
During a printing operation, this method will be called with
<code>isSelected</code> and <code>hasFocus</code> values of
<code>false</code> to prevent selection and focus from appearing
in the printed output. To do other customization based on whether
or not the table is being printed, check the return value from
{@link javax.swing.JComponent#isPaintingForPrint()}.

@param table  the <code>JTable</code>
@param value  the value to assign to the cell at
                 <code>[row, column]</code>
@param isSelected true if cell is selected
@param hasFocus true if cell has focus
@param row  the row of the cell to render
@param column the column of the cell to render
@return the default table cell renderer
@see javax.swing.JComponent#isPaintingForPrint()
"
      end

      operation 11567618 "isOpaque"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The following methods are overridden as a performance measure to
to prune code-paths are often called in the case of renders
but which we know are unnecessary.  Great care should be taken
when writing your own renderer to weigh the benefits and
drawbacks of overriding methods like these.


Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11567746 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.

@since 1.5
"
      end

      operation 11567874 "validate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568002 "revalidate"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568130 "repaint"
	public explicit_return_type "void"
	nparams 5
	  param in name "tm" explicit_type "long"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568258 "repaint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 314114 // Rectangle
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568386 "repaint"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.

@since 1.5
"
      end

      operation 11568514 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" type class_ref 129538 // Object
	  param inout name "newValue" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568642 "firePropertyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "propertyName" type class_ref 128130 // String
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden for performance reasons.
See the <a href=\"#override\">Implementation Note</a>
for more information.
"
      end

      operation 11568770 "setValue"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>String</code> object for the cell being rendered to
<code>value</code>.

@param value  the string value for this cell; if value is
         <code>null</code> it sets the text value to an empty string
@see JLabel#setText

"
      end

      class 1373058 "UIResource"
	visibility public 
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4612098 // <generalisation>
	  relation 4612098 ---|>
	    a public
	      java "${type}"
	      classrelation_ref 4612098 // <generalisation>
	    b parent class_ref 1372930 // DefaultTableCellRenderer
	end

	classrelation 4612226 // <realization>
	  relation 4612226 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4612226 // <realization>
	    b parent class_ref 354818 // UIResource
	end
      end
    end

    class 1374978 "AbstractTableModel"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This abstract class provides default implementations for most of
 the methods in the <code>TableModel</code> interface. It takes care of
 the management of listeners and provides some conveniences for generating
 <code>TableModelEvents</code> and dispatching them to the listeners.
 To create a concrete <code>TableModel</code> as a subclass of
 <code>AbstractTableModel</code> you need only provide implementations
 for the following three methods:

 <pre>
 public int getRowCount();
 public int getColumnCount();
 public Object getValueAt(int row, int column);
 </pre>
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
"
      classrelation 4619266 // <realization>
	relation 4619266 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4619266 // <realization>
	  b parent class_ref 1292674 // TableModel
      end

      classrelation 4619394 // <realization>
	relation 4619394 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4619394 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4619522 // listenerList (<unidirectional association>)
	relation 4619522 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " Instance Variables

 List of listeners 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4619522 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      operation 11591682 "getColumnName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Default Implementation of the Interface


 Returns a default name for the column using spreadsheet conventions:
 A, B, C, ... Z, AA, AB, etc.  If <code>column</code> cannot be found,
 returns an empty string.

@param column  the column being queried
@return a string containing the default name of <code>column</code>
"
      end

      operation 11591810 "findColumn"
	public explicit_return_type "int"
	nparams 1
	  param inout name "columnName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a column given its name.
Implementation is naive so this should be overridden if
this method is to be called often. This method is not
in the <code>TableModel</code> interface and is not used by the
<code>JTable</code>.

@param columnName string containing name of column to be located
@return the column with <code>columnName</code>, or -1 if not found
"
      end

      operation 11591938 "getColumnClass"
	public return_type class_ref 130818 // Class
	nparams 1
	  param in name "columnIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns <code>Object.class</code> regardless of <code>columnIndex</code>.

 @param columnIndex  the column being queried
 @return the Object.class
"
      end

      operation 11592066 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "rowIndex" explicit_type "int"
	  param in name "columnIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns false.  This is the default implementation for all cells.

 @param  rowIndex  the row being queried
 @param  columnIndex the column being queried
 @return false
"
      end

      operation 11592194 "setValueAt"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aValue" type class_ref 129538 // Object
	  param in name "rowIndex" explicit_type "int"
	  param in name "columnIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This empty implementation is provided so users don't have to implement
 this method if their data model is not editable.

 @param  aValue   value to assign to cell
 @param  rowIndex   row of cell
 @param  columnIndex  column of cell
"
      end

      operation 11592322 "addTableModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1292034 // TableModelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Managing Listeners


Adds a listener to the list that's notified each time a change
to the data model occurs.

@param   l               the TableModelListener
"
      end

      operation 11592450 "removeTableModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "l" type class_ref 1292034 // TableModelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a listener from the list that's notified each time a
change to the data model occurs.

@param   l               the TableModelListener
"
      end

      operation 11592578 "getTableModelListeners"
	public return_type class_ref 1292034 // TableModelListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the table model listeners
registered on this model.

@return all of this model's <code>TableModelListener</code>s
        or an empty
        array if no table model listeners are currently registered

@see #addTableModelListener
@see #removeTableModelListener

@since 1.4
"
      end

      operation 11592706 "fireTableDataChanged"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  Fire methods


Notifies all listeners that all cell values in the table's
rows may have changed. The number of rows may also have changed
and the <code>JTable</code> should redraw the
table from scratch. The structure of the table (as in the order of the
columns) is assumed to be the same.

@see TableModelEvent
@see EventListenerList
@see javax.swing.JTable#tableChanged(TableModelEvent)
"
      end

      operation 11592834 "fireTableStructureChanged"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that the table's structure has changed.
The number of columns in the table, and the names and types of
the new columns may be different from the previous state.
If the <code>JTable</code> receives this event and its
<code>autoCreateColumnsFromModel</code>
flag is set it discards any table columns that it had and reallocates
default columns in the order they appear in the model. This is the
same as calling <code>setModel(TableModel)</code> on the
<code>JTable</code>.

@see TableModelEvent
@see EventListenerList
"
      end

      operation 11592962 "fireTableRowsInserted"
	public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that rows in the range
<code>[firstRow, lastRow]</code>, inclusive, have been inserted.

@param  firstRow  the first row
@param  lastRow   the last row

@see TableModelEvent
@see EventListenerList

"
      end

      operation 11593090 "fireTableRowsUpdated"
	public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that rows in the range
<code>[firstRow, lastRow]</code>, inclusive, have been updated.

@param firstRow  the first row
@param lastRow   the last row

@see TableModelEvent
@see EventListenerList
"
      end

      operation 11593218 "fireTableRowsDeleted"
	public explicit_return_type "void"
	nparams 2
	  param in name "firstRow" explicit_type "int"
	  param in name "lastRow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that rows in the range
<code>[firstRow, lastRow]</code>, inclusive, have been deleted.

@param firstRow  the first row
@param lastRow   the last row

@see TableModelEvent
@see EventListenerList
"
      end

      operation 11593346 "fireTableCellUpdated"
	public explicit_return_type "void"
	nparams 2
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that the value of the cell at
<code>[row, column]</code> has been updated.

@param row  row of cell which has been updated
@param column  column of cell which has been updated
@see TableModelEvent
@see EventListenerList
"
      end

      operation 11593474 "fireTableChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292162 // TableModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forwards the given notification event to all
<code>TableModelListeners</code> that registered
themselves as listeners for this table model.

@param e  the event to be forwarded

@see #addTableModelListener
@see TableModelEvent
@see EventListenerList
"
      end

      operation 11593602 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this <code>AbstractTableModel</code>.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>

You can specify the <code>listenerType</code> argument
with a class literal,
such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
model <code>m</code>
for its table model listeners with the following code:

<pre>TableModelListener[] tmls = (TableModelListener[])(m.getListeners(TableModelListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this component,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getTableModelListeners

@since 1.3
"
      end
    end

    class 1375106 "DefaultTableColumnModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The standard column-handler for a <code>JTable</code>.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Alan Chung
@author Philip Milne
@see JTable
"
      classrelation 4619650 // <realization>
	relation 4619650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4619650 // <realization>
	  b parent class_ref 1292802 // TableColumnModel
      end

      classrelation 4619778 // <realization>
	relation 4619778 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4619778 // <realization>
	  b parent class_ref 347266 // PropertyChangeListener
      end

      classrelation 4619906 // <realization>
	relation 4619906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4619906 // <realization>
	  b parent class_ref 365442 // ListSelectionListener
      end

      classrelation 4620034 // <realization>
	relation 4620034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4620034 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4620162 // tableColumns (<unidirectional association>)
	relation 4620162 --->
	  a role_name "tableColumns" protected
	    comment " Instance Variables

 Array of TableColumn objects in this model 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TableColumn> ${name}${value};
"
	    classrelation_ref 4620162 // tableColumns (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4620290 // selectionModel (<unidirectional association>)
	relation 4620290 --->
	  a role_name "selectionModel" protected
	    comment " Model for keeping track of column selections 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4620290 // selectionModel (<unidirectional association>)
	  b parent class_ref 1269122 // ListSelectionModel
      end

      attribute 2552322 "columnMargin"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Width margin between each column 
"
      end

      classrelation 4620418 // listenerList (<unidirectional association>)
	relation 4620418 --->
	  a role_name "listenerList" init_value " new EventListenerList()" protected
	    comment " List of TableColumnModelListener 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4620418 // listenerList (<unidirectional association>)
	  b parent class_ref 354946 // EventListenerList
      end

      classrelation 4620546 // changeEvent (<unidirectional association>)
	relation 4620546 --->
	  a role_name "changeEvent" init_value " null" protected
	    comment " Change event (only one needed) 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4620546 // changeEvent (<unidirectional association>)
	  b parent class_ref 359554 // ChangeEvent
      end

      attribute 2552450 "columnSelectionAllowed"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Column selection allowed in this column model 
"
      end

      attribute 2552578 "totalColumnWidth"
	protected explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " A local cache of the combined width of all columns 
"
      end

      operation 11596162 "DefaultTableColumnModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Creates a default table column model.
"
      end

      operation 11596290 "addColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aColumn" type class_ref 474370 // TableColumn
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Modifying the model


 Appends <code>aColumn</code> to the end of the
 <code>tableColumns</code> array.
 This method also posts the <code>columnAdded</code>
 event to its listeners.

@param   aColumn         the <code>TableColumn</code> to be added
@exception IllegalArgumentException      if <code>aColumn</code> is
                         <code>null</code>
@see     #removeColumn
"
      end

      operation 11596418 "removeColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "column" type class_ref 474370 // TableColumn
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Deletes the <code>column</code> from the
 <code>tableColumns</code> array.  This method will do nothing if
 <code>column</code> is not in the table's columns list.
 <code>tile</code> is called
 to resize both the header and table views.
 This method also posts a <code>columnRemoved</code>
 event to its listeners.

@param   column          the <code>TableColumn</code> to be removed
@see     #addColumn
"
      end

      operation 11596546 "moveColumn"
	public explicit_return_type "void"
	nparams 2
	  param in name "columnIndex" explicit_type "int"
	  param in name "newIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the column and heading at <code>columnIndex</code> to
<code>newIndex</code>.  The old column at <code>columnIndex</code>
will now be found at <code>newIndex</code>.  The column
that used to be at <code>newIndex</code> is shifted
left or right to make room.  This will not move any columns if
<code>columnIndex</code> equals <code>newIndex</code>.  This method
also posts a <code>columnMoved</code> event to its listeners.

@param   columnIndex                     the index of column to be moved
@param   newIndex                        new index to move the column
@exception IllegalArgumentException      if <code>column</code> or
                                         <code>newIndex</code>
                                         are not in the valid range
"
      end

      operation 11596674 "setColumnMargin"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMargin" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the column margin to <code>newMargin</code>.  This method
also posts a <code>columnMarginChanged</code> event to its
listeners.

@param   newMargin               the new margin width, in pixels
@see     #getColumnMargin
@see     #getTotalColumnWidth
"
      end

      operation 11596802 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Querying the model


Returns the number of columns in the <code>tableColumns</code> array.

@return  the number of columns in the <code>tableColumns</code> array
@see     #getColumns
"
      end

      operation 11596930 "getColumns"
	public return_type class_ref 185986 // Enumeration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<TableColumn> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Enumeration</code> of all the columns in the model.
@return an <code>Enumeration</code> of the columns in the model
"
      end

      operation 11597058 "getColumnIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "identifier" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the first column in the <code>tableColumns</code>
array whose identifier is equal to <code>identifier</code>,
when compared using <code>equals</code>.

@param           identifier              the identifier object
@return          the index of the first column in the
                 <code>tableColumns</code> array whose identifier
                 is equal to <code>identifier</code>
@exception       IllegalArgumentException  if <code>identifier</code>
                         is <code>null</code>, or if no
                         <code>TableColumn</code> has this
                         <code>identifier</code>
@see             #getColumn
"
      end

      operation 11597186 "getColumn"
	public return_type class_ref 474370 // TableColumn
	nparams 1
	  param in name "columnIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>TableColumn</code> object for the column
at <code>columnIndex</code>.

@param   columnIndex     the index of the column desired
@return  the <code>TableColumn</code> object for the column
                         at <code>columnIndex</code>
"
      end

      operation 11597314 "getColumnMargin"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the width margin for <code>TableColumn</code>.
The default <code>columnMargin</code> is 1.

@return  the maximum width for the <code>TableColumn</code>
@see     #setColumnMargin
"
      end

      operation 11597442 "getColumnIndexAtX"
	public explicit_return_type "int"
	nparams 1
	  param in name "x" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the column that lies at position <code>x</code>,
or -1 if no column covers this point.

In keeping with Swing's separable model architecture, a
TableColumnModel does not know how the table columns actually appear on
screen.  The visual presentation of the columns is the responsibility
of the view/controller object using this model (typically JTable).  The
view/controller need not display the columns sequentially from left to
right.  For example, columns could be displayed from right to left to
accommodate a locale preference or some columns might be hidden at the
request of the user.  Because the model does not know how the columns
are laid out on screen, the given <code>xPosition</code> should not be
considered to be a coordinate in 2D graphics space.  Instead, it should
be considered to be a width from the start of the first column in the
model.  If the column index for a given X coordinate in 2D space is
required, <code>JTable.columnAtPoint</code> can be used instead.

@param  x  the horizontal location of interest
@return  the index of the column or -1 if no column is found
@see javax.swing.JTable#columnAtPoint
"
      end

      operation 11597570 "getTotalColumnWidth"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total combined width of all columns.
@return the <code>totalColumnWidth</code> property
"
      end

      operation 11597698 "setSelectionModel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newModel" type class_ref 1269122 // ListSelectionModel
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Selection model


 Sets the selection model for this <code>TableColumnModel</code>
 to <code>newModel</code>
 and registers for listener notifications from the new selection
 model.  If <code>newModel</code> is <code>null</code>,
 an exception is thrown.

@param   newModel        the new selection model
@exception IllegalArgumentException      if <code>newModel</code>
                                         is <code>null</code>
@see     #getSelectionModel
"
      end

      operation 11597826 "getSelectionModel"
	public return_type class_ref 1269122 // ListSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>ListSelectionModel</code> that is used to
maintain column selection state.

@return  the object that provides column selection state.  Or
         <code>null</code> if row selection is not allowed.
@see     #setSelectionModel
"
      end

      operation 11597954 "setColumnSelectionAllowed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableColumnModel

Sets whether column selection is allowed.  The default is false.
@param  flag true if column selection will be allowed, false otherwise
"
      end

      operation 11598082 "getColumnSelectionAllowed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableColumnModel

Returns true if column selection is allowed, otherwise false.
The default is false.
@return the <code>columnSelectionAllowed</code> property
"
      end

      operation 11598210 "getSelectedColumns"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableColumnModel

Returns an array of selected columns.  If <code>selectionModel</code>
is <code>null</code>, returns an empty array.
@return an array of selected columns or an empty array if nothing
                 is selected or the <code>selectionModel</code> is
                 <code>null</code>
"
      end

      operation 11598338 "getSelectedColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableColumnModel

Returns the number of columns selected.
@return the number of columns selected
"
      end

      operation 11598466 "addColumnModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1292290 // TableColumnModelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Listener Support Methods

 implements javax.swing.table.TableColumnModel

Adds a listener for table column model events.
@param x  a <code>TableColumnModelListener</code> object
"
      end

      operation 11598594 "removeColumnModelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 1292290 // TableColumnModelListener
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " implements javax.swing.table.TableColumnModel

Removes a listener for table column model events.
@param x  a <code>TableColumnModelListener</code> object
"
      end

      operation 11598722 "getColumnModelListeners"
	public return_type class_ref 1292290 // TableColumnModelListener
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the column model listeners
registered on this model.

@return all of this default table column model's <code>ColumnModelListener</code>s
        or an empty
        array if no column model listeners are currently registered

@see #addColumnModelListener
@see #removeColumnModelListener

@since 1.4
"
      end

      operation 11598850 "fireColumnAdded"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "   Event firing methods


Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@param e  the event received
@see EventListenerList
"
      end

      operation 11598978 "fireColumnRemoved"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@param  e  the event received
@see EventListenerList
"
      end

      operation 11599106 "fireColumnMoved"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292418 // TableColumnModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@param  e the event received
@see EventListenerList
"
      end

      operation 11599234 "fireColumnSelectionChanged"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 365954 // ListSelectionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@param e the event received
@see EventListenerList
"
      end

      operation 11599362 "fireColumnMarginChanged"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all listeners that have registered interest for
notification on this event type.  The event instance
is lazily created using the parameters passed into
the fire method.
@see EventListenerList
"
      end

      operation 11599490 "getListeners"
	public explicit_return_type "T"
	nparams 1
	  param inout name "listenerType" type class_ref 130818 // Class
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends EventListener> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of all the objects currently registered
as <code><em>Foo</em>Listener</code>s
upon this model.
<code><em>Foo</em>Listener</code>s are registered using the
<code>add<em>Foo</em>Listener</code> method.

<p>

You can specify the <code>listenerType</code> argument
with a class literal,
such as
<code><em>Foo</em>Listener.class</code>.
For example, you can query a
<code>DefaultTableColumnModel</code> <code>m</code>
for its column model listeners with the following code:

<pre>ColumnModelListener[] cmls = (ColumnModelListener[])(m.getListeners(ColumnModelListener.class));</pre>

If no such listeners exist, this method returns an empty array.

@param listenerType the type of listeners requested; this parameter
         should specify an interface that descends from
         <code>java.util.EventListener</code>
@return an array of all objects registered as
         <code><em>Foo</em>Listener</code>s on this model,
         or an empty array if no such
         listeners have been added
@exception ClassCastException if <code>listenerType</code>
         doesn't specify a class or interface that implements
         <code>java.util.EventListener</code>

@see #getColumnModelListeners
@since 1.3
"
      end

      operation 11599618 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" type class_ref 360450 // PropertyChangeEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementing the PropertyChangeListener interface

 PENDING(alan)
 implements java.beans.PropertyChangeListener

Property Change Listener change method.  Used to track changes
to the column width or preferred column width.

@param  evt  <code>PropertyChangeEvent</code>
"
      end

      operation 11599746 "valueChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 365954 // ListSelectionEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementing ListSelectionListener interface

 implements javax.swing.event.ListSelectionListener

A <code>ListSelectionListener</code> that forwards
<code>ListSelectionEvents</code> when there is a column
selection change.

@param e  the change event
"
      end

      operation 11599874 "createSelectionModel"
	protected return_type class_ref 1269122 // ListSelectionModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected Methods


Creates a new default list selection model.
"
      end

      operation 11600002 "recalcWidthCache"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recalculates the total combined width of all columns.  Updates the
<code>totalColumnWidth</code> property.
"
      end

      operation 11600130 "invalidateWidthCache"
	private explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1375234 "DefaultTableModel"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an implementation of <code>TableModel</code> that
uses a <code>Vector</code> of <code>Vectors</code> to store the
cell value objects.
<p>
<strong>Warning:</strong> <code>DefaultTableModel</code> returns a
column class of <code>Object</code>.  When
<code>DefaultTableModel</code> is used with a
<code>TableRowSorter</code> this will result in extensive use of
<code>toString</code>, which for non-<code>String</code> data types
is expensive.  If you use <code>DefaultTableModel</code> with a
<code>TableRowSorter</code> you are strongly encouraged to override
<code>getColumnClass</code> to return the appropriate type.
<p>
<strong>Warning:</strong>
Serialized objects of this class will not be compatible with
future Swing releases. The current serialization support is
appropriate for short term storage or RMI between applications running
the same version of Swing.  As of 1.4, support for long term storage
of all JavaBeans&trade;
has been added to the <code>java.beans</code> package.
Please see {@link java.beans.XMLEncoder}.

@author Philip Milne

@see TableModel
@see #getDataVector
"
      classrelation 4620674 // <generalisation>
	relation 4620674 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 4620674 // <generalisation>
	  b parent class_ref 1374978 // AbstractTableModel
      end

      classrelation 4620802 // <realization>
	relation 4620802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 4620802 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      classrelation 4620930 // dataVector (<unidirectional association>)
	relation 4620930 --->
	  a role_name "dataVector" protected
	    comment " Instance Variables


The <code>Vector</code> of <code>Vectors</code> of
<code>Object</code> values.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4620930 // dataVector (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 4621058 // columnIdentifiers (<unidirectional association>)
	relation 4621058 --->
	  a role_name "columnIdentifiers" protected
	    comment " The <code>Vector</code> of column identifiers. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4621058 // columnIdentifiers (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 11600258 "DefaultTableModel"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


 Constructs a default <code>DefaultTableModel</code>
 which is a table of zero columns and zero rows.
"
      end

      operation 11600386 "newVector"
	class_operation private return_type class_ref 141442 // Vector
	nparams 1
	  param in name "size" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11600514 "DefaultTableModel"
	public explicit_return_type ""
	nparams 2
	  param in name "rowCount" explicit_type "int"
	  param in name "columnCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>DefaultTableModel</code> with
 <code>rowCount</code> and <code>columnCount</code> of
 <code>null</code> object values.

@param rowCount           the number of rows the table holds
@param columnCount        the number of columns the table holds

@see #setValueAt
"
      end

      operation 11600642 "DefaultTableModel"
	public explicit_return_type ""
	nparams 2
	  param inout name "columnNames" type class_ref 141442 // Vector
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>DefaultTableModel</code> with as many columns
 as there are elements in <code>columnNames</code>
 and <code>rowCount</code> of <code>null</code>
 object values.  Each column's name will be taken from
 the <code>columnNames</code> vector.

@param columnNames       <code>vector</code> containing the names
                         of the new columns; if this is
                         <code>null</code> then the model has no columns
@param rowCount           the number of rows the table holds
@see #setDataVector
@see #setValueAt
"
      end

      operation 11600770 "DefaultTableModel"
	public explicit_return_type ""
	nparams 2
	  param inout name "columnNames" type class_ref 129538 // Object
	multiplicity "[]"
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>DefaultTableModel</code> with as many
 columns as there are elements in <code>columnNames</code>
 and <code>rowCount</code> of <code>null</code>
 object values.  Each column's name will be taken from
 the <code>columnNames</code> array.

@param columnNames       <code>array</code> containing the names
                         of the new columns; if this is
                         <code>null</code> then the model has no columns
@param rowCount           the number of rows the table holds
@see #setDataVector
@see #setValueAt
"
      end

      operation 11600898 "DefaultTableModel"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" type class_ref 141442 // Vector
	  param inout name "columnNames" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>DefaultTableModel</code> and initializes the table
 by passing <code>data</code> and <code>columnNames</code>
 to the <code>setDataVector</code> method.

@param data              the data of the table, a <code>Vector</code>
                         of <code>Vector</code>s of <code>Object</code>
                         values
@param columnNames       <code>vector</code> containing the names
                         of the new columns
@see #getDataVector
@see #setDataVector
"
      end

      operation 11601026 "DefaultTableModel"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" type class_ref 129538 // Object
	multiplicity "[][]"
	  param inout name "columnNames" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[][] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructs a <code>DefaultTableModel</code> and initializes the table
 by passing <code>data</code> and <code>columnNames</code>
 to the <code>setDataVector</code>
 method. The first index in the <code>Object[][]</code> array is
 the row index and the second is the column index.

@param data              the data of the table
@param columnNames       the names of the columns
@see #getDataVector
@see #setDataVector
"
      end

      operation 11601154 "getDataVector"
	public return_type class_ref 141442 // Vector
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the <code>Vector</code> of <code>Vectors</code>
 that contains the table's
 data values.  The vectors contained in the outer vector are
 each a single row of values.  In other words, to get to the cell
 at row 1, column 5: <p>

 <code>((Vector)getDataVector().elementAt(1)).elementAt(5);</code>

@return  the vector of vectors containing the tables data values

@see #newDataAvailable
@see #newRowsAdded
@see #setDataVector
"
      end

      operation 11601282 "nonNullVector"
	class_operation private return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "v" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11601410 "setDataVector"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dataVector" type class_ref 141442 // Vector
	  param inout name "columnIdentifiers" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Replaces the current <code>dataVector</code> instance variable
 with the new <code>Vector</code> of rows, <code>dataVector</code>.
 Each row is represented in <code>dataVector</code> as a
 <code>Vector</code> of <code>Object</code> values.
 <code>columnIdentifiers</code> are the names of the new
 columns.  The first name in <code>columnIdentifiers</code> is
 mapped to column 0 in <code>dataVector</code>. Each row in
 <code>dataVector</code> is adjusted to match the number of
 columns in <code>columnIdentifiers</code>
 either by truncating the <code>Vector</code> if it is too long,
 or adding <code>null</code> values if it is too short.
 <p>Note that passing in a <code>null</code> value for
 <code>dataVector</code> results in unspecified behavior,
 an possibly an exception.

@param   dataVector         the new data vector
@param   columnIdentifiers     the names of the columns
@see #getDataVector
"
      end

      operation 11601538 "setDataVector"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dataVector" type class_ref 129538 // Object
	multiplicity "[][]"
	  param inout name "columnIdentifiers" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Replaces the value in the <code>dataVector</code> instance
 variable with the values in the array <code>dataVector</code>.
 The first index in the <code>Object[][]</code>
 array is the row index and the second is the column index.
 <code>columnIdentifiers</code> are the names of the new columns.

@param dataVector                the new data vector
@param columnIdentifiers the names of the columns
@see #setDataVector(Vector, Vector)
"
      end

      operation 11601666 "newDataAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1292162 // TableModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Equivalent to <code>fireTableChanged</code>.

@param event  the change event

"
      end

      operation 11601794 "justifyRows"
	private explicit_return_type "void"
	nparams 2
	  param in name "from" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Manipulating rows
"
      end

      operation 11601922 "newRowsAdded"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 1292162 // TableModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Ensures that the new rows have the correct number of columns.
 This is accomplished by  using the <code>setSize</code> method in
 <code>Vector</code> which truncates vectors
 which are too long, and appends <code>null</code>s if they
 are too short.
 This method also sends out a <code>tableChanged</code>
 notification message to all the listeners.

@param e         this <code>TableModelEvent</code> describes
                          where the rows were added.
                          If <code>null</code> it assumes
                          all the rows were newly added
@see #getDataVector
"
      end

      operation 11602050 "rowsRemoved"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1292162 // TableModelEvent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Equivalent to <code>fireTableChanged</code>.

 @param event the change event

"
      end

      operation 11602178 "setNumRows"
	public explicit_return_type "void"
	nparams 1
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obsolete as of Java 2 platform v1.3.  Please use <code>setRowCount</code> instead.


 Sets the number of rows in the model.  If the new size is greater
 than the current size, new rows are added to the end of the model
 If the new size is less than the current size, all
 rows at index <code>rowCount</code> and greater are discarded.

@param   rowCount   the new number of rows
@see #setRowCount
"
      end

      operation 11602306 "setRowCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "rowCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the number of rows in the model.  If the new size is greater
 than the current size, new rows are added to the end of the model
 If the new size is less than the current size, all
 rows at index <code>rowCount</code> and greater are discarded.

 @see #setColumnCount
@since 1.3
"
      end

      operation 11602434 "addRow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rowData" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a row to the end of the model.  The new row will contain
 <code>null</code> values unless <code>rowData</code> is specified.
 Notification of the row being added will be generated.

@param   rowData          optional data of the row being added
"
      end

      operation 11602562 "addRow"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rowData" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a row to the end of the model.  The new row will contain
 <code>null</code> values unless <code>rowData</code> is specified.
 Notification of the row being added will be generated.

@param   rowData          optional data of the row being added
"
      end

      operation 11602690 "insertRow"
	public explicit_return_type "void"
	nparams 2
	  param in name "row" explicit_type "int"
	  param inout name "rowData" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inserts a row at <code>row</code> in the model.  The new row
 will contain <code>null</code> values unless <code>rowData</code>
 is specified.  Notification of the row being added will be generated.

@param   row             the row index of the row to be inserted
@param   rowData         optional data of the row being added
@exception  ArrayIndexOutOfBoundsException  if the row was invalid
"
      end

      operation 11602818 "insertRow"
	public explicit_return_type "void"
	nparams 2
	  param in name "row" explicit_type "int"
	  param inout name "rowData" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inserts a row at <code>row</code> in the model.  The new row
 will contain <code>null</code> values unless <code>rowData</code>
 is specified.  Notification of the row being added will be generated.

@param   row      the row index of the row to be inserted
@param   rowData          optional data of the row being added
@exception  ArrayIndexOutOfBoundsException  if the row was invalid
"
      end

      operation 11602946 "gcd"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "j" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11603074 "rotate"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "v" type class_ref 141442 // Vector
	  param in name "a" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param in name "shift" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11603202 "moveRow"
	public explicit_return_type "void"
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "to" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Moves one or more rows from the inclusive range <code>start</code> to
 <code>end</code> to the <code>to</code> position in the model.
 After the move, the row that was at index <code>start</code>
 will be at index <code>to</code>.
 This method will send a <code>tableChanged</code> notification
message to all the listeners.

 <pre>
 Examples of moves:

 1. moveRow(1,3,5);
         a|B|C|D|e|f|g|h|i|j|k   - before
         a|e|f|g|h|B|C|D|i|j|k   - after

 2. moveRow(6,7,1);
         a|b|c|d|e|f|G|H|i|j|k   - before
         a|G|H|b|c|d|e|f|i|j|k   - after
 </pre>

@param   start       the starting row index to be moved
@param   end         the ending row index to be moved
@param   to          the destination of the rows to be moved
@exception  ArrayIndexOutOfBoundsException  if any of the elements
would be moved out of the table's range

"
      end

      operation 11603330 "removeRow"
	public explicit_return_type "void"
	nparams 1
	  param in name "row" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Removes the row at <code>row</code> from the model.  Notification
 of the row being removed will be sent to all the listeners.

@param   row      the row index of the row to be removed
@exception  ArrayIndexOutOfBoundsException  if the row was invalid
"
      end

      operation 11603458 "setColumnIdentifiers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "columnIdentifiers" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Manipulating columns


Replaces the column identifiers in the model.  If the number of
<code>newIdentifier</code>s is greater than the current number
of columns, new columns are added to the end of each row in the model.
If the number of <code>newIdentifier</code>s is less than the current
number of columns, all the extra columns at the end of a row are
discarded.

@param   columnIdentifiers  vector of column identifiers.  If
                         <code>null</code>, set the model
                         to zero columns
@see #setNumRows
"
      end

      operation 11603586 "setColumnIdentifiers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newIdentifiers" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the column identifiers in the model.  If the number of
<code>newIdentifier</code>s is greater than the current number
of columns, new columns are added to the end of each row in the model.
If the number of <code>newIdentifier</code>s is less than the current
number of columns, all the extra columns at the end of a row are
discarded.

@param   newIdentifiers  array of column identifiers.
                         If <code>null</code>, set
                         the model to zero columns
@see #setNumRows
"
      end

      operation 11603714 "setColumnCount"
	public explicit_return_type "void"
	nparams 1
	  param in name "columnCount" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the number of columns in the model.  If the new size is greater
 than the current size, new columns are added to the end of the model
 with <code>null</code> cell values.
 If the new size is less than the current size, all columns at index
 <code>columnCount</code> and greater are discarded.

 @param columnCount  the new number of columns in the model

 @see #setColumnCount
@since 1.3
"
      end

      operation 11603842 "addColumn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "columnName" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a column to the model.  The new column will have the
 identifier <code>columnName</code>, which may be null.  This method
 will send a
 <code>tableChanged</code> notification message to all the listeners.
 This method is a cover for <code>addColumn(Object, Vector)</code> which
 uses <code>null</code> as the data vector.

@param   columnName the identifier of the column being added
"
      end

      operation 11603970 "addColumn"
	public explicit_return_type "void"
	nparams 2
	  param inout name "columnName" type class_ref 129538 // Object
	  param inout name "columnData" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a column to the model.  The new column will have the
 identifier <code>columnName</code>, which may be null.
 <code>columnData</code> is the
 optional vector of data for the column.  If it is <code>null</code>
 the column is filled with <code>null</code> values.  Otherwise,
 the new data will be added to model starting with the first
 element going to row 0, etc.  This method will send a
 <code>tableChanged</code> notification message to all the listeners.

@param   columnName the identifier of the column being added
@param   columnData       optional data of the column being added
"
      end

      operation 11604098 "addColumn"
	public explicit_return_type "void"
	nparams 2
	  param inout name "columnName" type class_ref 129538 // Object
	  param inout name "columnData" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a column to the model.  The new column will have the
 identifier <code>columnName</code>.  <code>columnData</code> is the
 optional array of data for the column.  If it is <code>null</code>
 the column is filled with <code>null</code> values.  Otherwise,
 the new data will be added to model starting with the first
 element going to row 0, etc.  This method will send a
 <code>tableChanged</code> notification message to all the listeners.

@see #addColumn(Object, Vector)
"
      end

      operation 11604226 "getRowCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementing the TableModel interface


Returns the number of rows in this data table.
@return the number of rows in the model
"
      end

      operation 11604354 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of columns in this data table.
@return the number of columns in the model
"
      end

      operation 11604482 "getColumnName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the column name.

@return a name for this column using the string value of the
appropriate member in <code>columnIdentifiers</code>.
If <code>columnIdentifiers</code> does not have an entry
for this index, returns the default
name provided by the superclass.
"
      end

      operation 11604610 "isCellEditable"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true regardless of parameter values.

@param   row             the row whose value is to be queried
@param   column          the column whose value is to be queried
@return                  true
@see #setValueAt
"
      end

      operation 11604738 "getValueAt"
	public return_type class_ref 129538 // Object
	nparams 2
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an attribute value for the cell at <code>row</code>
and <code>column</code>.

@param   row             the row whose value is to be queried
@param   column          the column whose value is to be queried
@return                  the value Object at the specified cell
@exception  ArrayIndexOutOfBoundsException  if an invalid row or
              column was given
"
      end

      operation 11604866 "setValueAt"
	public explicit_return_type "void"
	nparams 3
	  param inout name "aValue" type class_ref 129538 // Object
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the object value for the cell at <code>column</code> and
<code>row</code>.  <code>aValue</code> is the new value.  This method
will generate a <code>tableChanged</code> notification.

@param   aValue          the new value; this can be null
@param   row             the row whose value is to be changed
@param   column          the column whose value is to be changed
@exception  ArrayIndexOutOfBoundsException  if an invalid row or
              column was given
"
      end

      operation 11604994 "convertToVector"
	class_operation protected return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "anArray" type class_ref 129538 // Object
	multiplicity "[]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected Methods


Returns a vector that contains the same objects as the array.
@param anArray  the array to be converted
@return  the new vector; if <code>anArray</code> is <code>null</code>,
                         returns <code>null</code>
"
      end

      operation 11605122 "convertToVector"
	class_operation protected return_type class_ref 141442 // Vector
	nparams 1
	  param inout name "anArray" type class_ref 129538 // Object
	multiplicity "[][]"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a vector of vectors that contains the same objects as the array.
@param anArray  the double array to be converted
@return the new vector of vectors; if <code>anArray</code> is
                         <code>null</code>, returns <code>null</code>
"
      end
    end

    class 1375618 "TableRowSorter"
      visibility public 
      nformals 1
      formal name "M" type "" explicit_default_value ""
        extends class_ref 1292674 // TableModel
      nactuals 2
      actual class class_ref 1269250 // DefaultRowSorter
        rank 0 explicit_value ""
      actual class class_ref 1269250 // DefaultRowSorter
        rank 1 explicit_value ""
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An implementation of <code>RowSorter</code> that provides sorting
and filtering using a <code>TableModel</code>.
The following example shows adding sorting to a <code>JTable</code>:
<pre>
  TableModel myModel = createMyTableModel();
  JTable table = new JTable(myModel);
  table.setRowSorter(new TableRowSorter(myModel));
</pre>
This will do all the wiring such that when the user does the appropriate
gesture, such as clicking on the column header, the table will
visually sort.
<p>
<code>JTable</code>'s row-based methods and <code>JTable</code>'s
selection model refer to the view and not the underlying
model. Therefore, it is necessary to convert between the two.  For
example, to get the selection in terms of <code>myModel</code>
you need to convert the indices:
<pre>
  int[] selection = table.getSelectedRows();
  for (int i = 0; i &lt; selection.length; i++) {
    selection[i] = table.convertRowIndexToModel(selection[i]);
  }
</pre>
Similarly to select a row in <code>JTable</code> based on
a coordinate from the underlying model do the inverse:
<pre>
  table.setRowSelectionInterval(table.convertRowIndexToView(row),
                                table.convertRowIndexToView(row));
</pre>
<p>
The previous example assumes you have not enabled filtering.  If you
have enabled filtering <code>convertRowIndexToView</code> will return
-1 for locations that are not visible in the view.
<p>
<code>TableRowSorter</code> uses <code>Comparator</code>s for doing
comparisons. The following defines how a <code>Comparator</code> is
chosen for a column:
<ol>
<li>If a <code>Comparator</code> has been specified for the column by the
    <code>setComparator</code> method, use it.
<li>If the column class as returned by <code>getColumnClass</code> is
    <code>String</code>, use the <code>Comparator</code> returned by
    <code>Collator.getInstance()</code>.
<li>If the column class implements <code>Comparable</code>, use a
    <code>Comparator</code> that invokes the <code>compareTo</code>
    method.
<li>If a <code>TableStringConverter</code> has been specified, use it
    to convert the values to <code>String</code>s and then use the
    <code>Comparator</code> returned by <code>Collator.getInstance()</code>.
<li>Otherwise use the <code>Comparator</code> returned by
    <code>Collator.getInstance()</code> on the results from
    calling <code>toString</code> on the objects.
</ol>
<p>
In addition to sorting <code>TableRowSorter</code> provides the ability
to filter.  A filter is specified using the <code>setFilter</code>
method. The following example will only show rows containing the string
\"foo\":
<pre>
  TableModel myModel = createMyTableModel();
  TableRowSorter sorter = new TableRowSorter(myModel);
  sorter.setRowFilter(RowFilter.regexFilter(\".*foo.*\"));
  JTable table = new JTable(myModel);
  table.setRowSorter(sorter);
</pre>
<p>
If the underlying model structure changes (the
<code>modelStructureChanged</code> method is invoked) the following
are reset to their default values: <code>Comparator</code>s by
column, current sort order, and whether each column is sortable. The default
sort order is natural (the same as the model), and columns are
sortable by default.
<p>
<code>TableRowSorter</code> has one formal type parameter: the type
of the model.  Passing in a type that corresponds exactly to your
model allows you to filter based on your model without casting.
Refer to the documentation of <code>RowFilter</code> for an example
of this.
<p>
<b>WARNING:</b> <code>DefaultTableModel</code> returns a column
class of <code>Object</code>.  As such all comparisons will
be done using <code>toString</code>.  This may be unnecessarily
expensive.  If the column only contains one type of value, such as
an <code>Integer</code>, you should override <code>getColumnClass</code> and
return the appropriate <code>Class</code>.  This will dramatically
increase the performance of this class.

@param <M> the type of the model, which must be an implementation of
           <code>TableModel</code>
@see javax.swing.JTable
@see javax.swing.RowFilter
@see javax.swing.table.DefaultTableModel
@see java.text.Collator
@see java.util.Comparator
@since 1.6
"
      classrelation 4624642 // <realization>
	relation 4624642 -_-|>
	  stereotype "bind"
	  a public
	    java "${type}"
	    classrelation_ref 4624642 // <realization>
	  b parent class_ref 1269250 // DefaultRowSorter
      end

      classrelation 4624770 // COMPARABLE_COMPARATOR (<unidirectional association>)
	relation 4624770 --->
	  a role_name "COMPARABLE_COMPARATOR" init_value "
            new ComparableComparator()" class_relation const_relation private
	    comment "
Comparator that uses compareTo on the contents.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624770 // COMPARABLE_COMPARATOR (<unidirectional association>)
	  b parent class_ref 184962 // Comparator
      end

      attribute 2554242 "tableModel"
	private explicit_type "M"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Underlying model.

"
      end

      classrelation 4624898 // stringConverter (<unidirectional association>)
	relation 4624898 --->
	  a role_name "stringConverter" private
	    comment "
For toString conversions.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 4624898 // stringConverter (<unidirectional association>)
	  b parent class_ref 1375746 // TableStringConverter
      end

      operation 11621634 "TableRowSorter"
	cpp_inline public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>TableRowSorter</code> with an empty model.
"
      end

      operation 11621762 "TableRowSorter"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "model" explicit_type "M"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>TableRowSorter</code> using <code>model</code>
as the underlying <code>TableModel</code>.

@param model the underlying <code>TableModel</code> to use,
       <code>null</code> is treated as an empty model
"
      end

      operation 11621890 "setModel"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "model" explicit_type "M"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the <code>TableModel</code> to use as the underlying model
for this <code>TableRowSorter</code>.  A value of <code>null</code>
can be used to set an empty model.

@param model the underlying model to use, or <code>null</code>
"
      end

      operation 11622018 "setStringConverter"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "stringConverter" type class_ref 1375746 // TableStringConverter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the object responsible for converting values from the
model to strings.  If non-<code>null</code> this
is used to convert any object values, that do not have a
registered <code>Comparator</code>, to strings.

@param stringConverter the object responsible for converting values
       from the model to strings
"
      end

      operation 11622146 "getStringConverter"
	cpp_inline public return_type class_ref 1375746 // TableStringConverter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object responsible for converting values from the
model to strings.

@return object responsible for converting values to strings.
"
      end

      operation 11622274 "getComparator"
	cpp_inline public return_type class_ref 184962 // Comparator
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <code>Comparator</code> for the specified
column.  If a <code>Comparator</code> has not been specified using
the <code>setComparator</code> method a <code>Comparator</code>
will be returned based on the column class
(<code>TableModel.getColumnClass</code>) of the specified column.
If the column class is <code>String</code>,
<code>Collator.getInstance</code> is returned.  If the
column class implements <code>Comparable</code> a private
<code>Comparator</code> is returned that invokes the
<code>compareTo</code> method.  Otherwise
<code>Collator.getInstance</code> is returned.

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      operation 11622402 "useToString"
	cpp_inline protected explicit_return_type "boolean"
	nparams 1
	  param in name "column" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

@throws IndexOutOfBoundsException {@inheritDoc}
"
      end

      class 1375874 "TableRowSorterModelWrapper"
	visibility private 
	nactuals 4
	actual class class_ref 1269250 // DefaultRowSorter
	  rank 0 explicit_value ""
	actual class class_ref 1269250 // DefaultRowSorter
	  rank 1 explicit_value ""
	actual class class_ref 1270402 // ModelWrapper
	  rank 0 explicit_value ""
	actual class class_ref 1270402 // ModelWrapper
	  rank 1 explicit_value ""
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4625026 // <realization>
	  relation 4625026 -_-|>
	    stereotype "bind"
	    a public
	      java "${type}"
	      classrelation_ref 4625026 // <realization>
	    b parent class_ref 1270402 // ModelWrapper
	end

	operation 11622530 "getModel"
	  cpp_inline public explicit_return_type "M"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 11622658 "getColumnCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 11622786 "getRowCount"
	  cpp_inline public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 11622914 "getValueAt"
	  cpp_inline public return_type class_ref 129538 // Object
	  nparams 2
	    param in name "row" explicit_type "int"
	    param in name "column" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 11623042 "getStringValueAt"
	  cpp_inline public return_type class_ref 128130 // String
	  nparams 2
	    param in name "row" explicit_type "int"
	    param in name "column" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 11623170 "getIdentifier"
	  cpp_inline public return_type class_ref 137602 // Integer
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1376002 "ComparableComparator"
	visibility private 
	nactuals 1
	actual class class_ref 184962 // Comparator
	  rank 0 explicit_value ""
	cpp_decl ""
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 4625154 // <realization>
	  relation 4625154 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 4625154 // <realization>
	    b parent class_ref 184962 // Comparator
	end

	operation 11623298 "compare"
	  cpp_inline public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" type class_ref 129538 // Object
	    param inout name "o2" type class_ref 129538 // Object
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end
    end

    class 1375746 "TableStringConverter"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "TableStringConverter is used to convert objects from the model into
strings.  This is useful in filtering and searching when the model returns
objects that do not have meaningful <code>toString</code> implementations.

@since 1.6
"
      operation 11623426 "toString"
	abstract public return_type class_ref 128130 // String
	nparams 3
	  param inout name "model" type class_ref 1292674 // TableModel
	  param in name "row" explicit_type "int"
	  param in name "column" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the value at the specified
location.

@param model the <code>TableModel</code> to fetch the value from
@param row the row the string is being requested for
@param column the column the string is being requested for
@return the string representation.  This should never return null.
@throws NullPointerException if <code>model</code> is null
@throws IndexOutOfBoundsException if the arguments are outside the
        bounds of the model
"
      end
    end
  end

  deploymentview 176258 "table"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 926082 "TableCellEditor"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import javax.swing.CellEditor;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 1266946 // TableCellEditor
      end
      comment "Copyright (c) 1997, 1999, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 978306 "TableCellRenderer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.awt.Component;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 474626 // TableCellRenderer
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 978434 "DefaultTableCellRenderer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.border.*;
import java.awt.Component;
import java.awt.Color;
import java.awt.Rectangle;
import java.io.Serializable;
import sun.swing.DefaultLookup;
${definition}"
      associated_elems
	class_ref 1372930 // DefaultTableCellRenderer
      end
      comment "Copyright (c) 1998, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 979586 "TableModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.event.*;
${definition}"
      associated_elems
	class_ref 1292674 // TableModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 979714 "AbstractTableModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.event.*;
import java.io.Serializable;
import java.util.EventListener;
${definition}"
      associated_elems
	class_ref 1374978 // AbstractTableModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 979842 "TableColumnModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
import javax.swing.event.ChangeEvent;
import javax.swing.event.*;
import javax.swing.*;
${definition}"
      associated_elems
	class_ref 1292802 // TableColumnModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 979970 "DefaultTableColumnModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.util.Vector;
import java.util.Enumeration;
import java.util.EventListener;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.io.Serializable;
import sun.swing.SwingUtilities2;
${definition}"
      associated_elems
	class_ref 1375106 // DefaultTableColumnModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 980098 "DefaultTableModel"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Vector;
import java.util.Enumeration;
import javax.swing.event.TableModelEvent;
${definition}"
      associated_elems
	class_ref 1375234 // DefaultTableModel
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 980226 "JTableHeader"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import sun.swing.table.DefaultTableCellHeaderRenderer;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.plaf.*;
import javax.accessibility.*;
import java.beans.PropertyChangeListener;
import java.beans.Transient;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
${definition}"
      associated_elems
	class_ref 474114 // JTableHeader
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 980354 "TableColumn"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.event.SwingPropertyChangeSupport;
import java.lang.Integer;
import java.awt.Color;
import java.awt.Component;
import java.io.Serializable;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
${definition}"
      associated_elems
	class_ref 474370 // TableColumn
      end
      comment "Copyright (c) 1997, 2013, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 980482 "TableRowSorter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.text.Collator;
import java.util.*;
import javax.swing.DefaultRowSorter;
import javax.swing.RowFilter;
import javax.swing.SortOrder;
${definition}"
      associated_elems
	class_ref 1375618 // TableRowSorter
      end
      comment "Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end

    artifact 980610 "TableStringConverter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 1375746 // TableStringConverter
      end
      comment "Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.




















"
    end
  end
end
