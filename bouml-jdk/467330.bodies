class WindowsMenuItemUI
!!!2804738.java!!!	createUI(inout c : JComponent) : ComponentUI
        return new WindowsMenuItemUI();
!!!2804866.java!!!	paintText(inout g : Graphics, inout menuItem : JMenuItem, inout textRect : Rectangle, inout text : String) : void
        if (WindowsMenuItemUI.isVistaPainting()) {
            WindowsMenuItemUI.paintText(accessor, g, menuItem, textRect, text);
            return;
        }
        ButtonModel model = menuItem.getModel();
        Color oldColor = g.getColor();

        if(model.isEnabled() &&
            (model.isArmed() || (menuItem instanceof JMenu &&
             model.isSelected()))) {
            g.setColor(selectionForeground); // Uses protected field.
        }

        WindowsGraphicsUtils.paintText(g, menuItem, textRect, text, 0);

        g.setColor(oldColor);
!!!2804994.java!!!	paintBackground(inout g : Graphics, inout menuItem : JMenuItem, inout bgColor : Color) : void
        if (WindowsMenuItemUI.isVistaPainting()) {
            WindowsMenuItemUI.paintBackground(accessor, g, menuItem, bgColor);
            return;
        }
        super.paintBackground(g, menuItem, bgColor);
!!!2805122.java!!!	paintBackground(inout menuItemUI : WindowsMenuItemUIAccessor, inout g : Graphics, inout menuItem : JMenuItem, inout bgColor : Color) : void
        XPStyle xp = XPStyle.getXP();
        assert isVistaPainting(xp);
        if (isVistaPainting(xp)) {
            int menuWidth = menuItem.getWidth();
            int menuHeight = menuItem.getHeight();
            if (menuItem.isOpaque()) {
                Color oldColor = g.getColor();
                g.setColor(menuItem.getBackground());
                g.fillRect(0,0, menuWidth, menuHeight);
                g.setColor(oldColor);
            }
            Part part = menuItemUI.getPart(menuItem);
            Skin skin = xp.getSkin(menuItem, part);
            skin.paintSkin(g, 0 , 0,
                menuWidth,
                menuHeight,
                menuItemUI.getState(menuItem));
        }
!!!2805250.java!!!	paintText(inout menuItemUI : WindowsMenuItemUIAccessor, inout g : Graphics, inout menuItem : JMenuItem, inout textRect : Rectangle, inout text : String) : void
        assert isVistaPainting();
        if (isVistaPainting()) {
            State state = menuItemUI.getState(menuItem);

            /* part of it copied from WindowsGraphicsUtils.java */
            FontMetrics fm = SwingUtilities2.getFontMetrics(menuItem, g);
            int mnemIndex = menuItem.getDisplayedMnemonicIndex();
            // W2K Feature: Check to see if the Underscore should be rendered.
            if (WindowsLookAndFeel.isMnemonicHidden() == true) {
                mnemIndex = -1;
            }
            WindowsGraphicsUtils.paintXPText(menuItem,
                menuItemUI.getPart(menuItem), state,
                g, textRect.x,
                textRect.y + fm.getAscent(),
                text, mnemIndex);
        }
!!!2805378.java!!!	getState(inout menuItemUI : WindowsMenuItemUIAccessor, inout menuItem : JMenuItem) : TMSchema::State
        State state;
        ButtonModel model = menuItem.getModel();
        if (model.isArmed()) {
            state = (model.isEnabled()) ? State.HOT : State.DISABLEDHOT;
        } else {
            state = (model.isEnabled()) ? State.NORMAL : State.DISABLED;
        }
        return state;
!!!2805506.java!!!	getPart(inout menuItemUI : WindowsMenuItemUIAccessor, inout menuItem : JMenuItem) : TMSchema::Part
        return Part.MP_POPUPITEM;
!!!2805634.java!!!	isVistaPainting(in xp : XPStyle) : boolean
        return xp != null && xp.isSkinDefined(null, Part.MP_POPUPITEM);
!!!2805762.java!!!	isVistaPainting() : boolean
        return isVistaPainting(XPStyle.getXP());
