format 222
"dom" // jdk1.8::com::sun::org::apache::xerces::internal::dom
  revision 3
  modified_by 2 "forsrc"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "/Volumes/My/My/git/MyGit/my-bouml/jdk1.8/com/sun/org/apache/xerces/internal/dom/"
  java_package "com.sun.org.apache.xerces.internal.dom"
  classview 160130 "dom"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 646402 "AttributeMap"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "AttributeMap inherits from NamedNodeMapImpl and extends it to deal with the
specifics of storing attributes. These are:
<ul>
 <li>managing ownership of attribute nodes
 <li>managing default attributes
 <li>firing mutation events
</ul>
<p>
This class doesn't directly support mutation events, however, it notifies
the document when mutations are performed so that the document class do so.

@xerces.internal

@version $Id: AttributeMap.java,v 1.7 2010-11-01 04:39:37 joehw Exp $
"
      classrelation 1772418 // <generalisation>
	relation 1772418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1772418 // <generalisation>
	  b parent class_ref 646530 // NamedNodeMapImpl
      end

      attribute 884994 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 8872606282138665383L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4162178 "AttributeMap"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ownerNode" type class_ref 647042 // ElementImpl
	  param inout name "defaults" type class_ref 646530 // NamedNodeMapImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a named node map. "
      end

      operation 4162306 "setNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an attribute using its nodeName attribute.
@see org.w3c.dom.NamedNodeMap#setNamedItem
@return If the new Node replaces an existing node the replaced Node is
     returned, otherwise null is returned.
@param arg
     An Attr node to store in this map.
@exception org.w3c.dom.DOMException The exception description.
"
      end

      operation 4162434 "setNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamedItem(Node):Node

Adds an attribute using its namespaceURI and localName.
@see org.w3c.dom.NamedNodeMap#setNamedItem
@return If the new Node replaces an existing node the replaced Node is
     returned, otherwise null is returned.
@param arg A node to store in a named node map.
"
      end

      operation 4162562 "removeNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamedItemNS(Node):Node

Removes an attribute specified by name.
@param name
     The name of a node to remove. If the
     removed attribute is known to have a default value, an
     attribute immediately appears containing the default value
     as well as the corresponding namespace URI, local name,
     and prefix when applicable.
@return The node removed from the map if a node with such a name exists.
@throws              NOT_FOUND_ERR: Raised if there is no node named
                     name in the map.
"
      end

      operation 4162690 "safeRemoveNamedItem"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as removeNamedItem except that it simply returns null if the
specified name is not found.
"
      end

      operation 4162818 "removeItem"
	protected return_type class_ref 317570 // Node
	nparams 2
	  param inout name "item" type class_ref 317570 // Node
	  param inout name "addDefault" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: Remove the node object

NOTE: Specifically removes THIS NODE -- not the node with this
name, nor the node with these contents. If node does not belong to
this named node map, we throw a DOMException.

@param item       The node to remove
@param addDefault true -- magically add default attribute
@return Removed node
@exception DOMException
"
      end

      operation 4162946 "internalRemoveNamedItem"
	protected return_type class_ref 317570 // Node
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "raiseEx" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal removeNamedItem method allowing to specify whether an exception
must be thrown if the specified name is not found.
"
      end

      operation 4163074 "remove"
	private return_type class_ref 317570 // Node
	nparams 3
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param in name "index" explicit_type "int"
	  param inout name "addDefault" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalRemoveNamedItem(String,boolean):Node"
      end

      operation 4163202 "removeNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Removes an attribute specified by local name and namespace URI.
@param namespaceURI
                     The namespace URI of the node to remove.
                     When it is null or an empty string, this
                     method behaves like removeNamedItem.
@param name          The local name of the node to remove. If the
                     removed attribute is known to have a default
                     value, an attribute immediately appears
                     containing the default value.
@return Node         The node removed from the map if a node with such
                     a local name and namespace URI exists.
@throws              NOT_FOUND_ERR: Raised if there is no node named
                     name in the map.
"
      end

      operation 4163330 "safeRemoveNamedItemNS"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as removeNamedItem except that it simply returns null if the
specified local name and namespace URI is not found.
"
      end

      operation 4163458 "internalRemoveNamedItemNS"
	protected return_type class_ref 317570 // Node
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	  param inout name "raiseEx" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal removeNamedItemNS method allowing to specify whether an
exception must be thrown if the specified local name and namespace URI
is not found.
"
      end

      operation 4163586 "cloneMap"
	public return_type class_ref 646530 // NamedNodeMapImpl
	nparams 1
	  param inout name "ownerNode" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalRemoveNamedItemNS(String,String,boolean):Node

 Public methods


Cloning a NamedNodeMap is a DEEP OPERATION; it always clones
all the nodes contained in the map.
"
      end

      operation 4163714 "cloneContent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "srcmap" type class_ref 646530 // NamedNodeMapImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneMap():AttributeMap

Override parent's method to set the ownerNode correctly
"
      end

      operation 4163842 "moveSpecifiedAttributes"
	package explicit_return_type "void"
	nparams 1
	  param inout name "srcmap" type class_ref 646402 // AttributeMap
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneContent():AttributeMap

Move specified attributes from the given map to this one
"
      end

      operation 4163970 "reconcileDefaults"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "defaults" type class_ref 646530 // NamedNodeMapImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " moveSpecifiedAttributes(AttributeMap):void

Get this AttributeMap in sync with the given \"defaults\" map.
@param defaults The default attributes map to sync with.
"
      end

      operation 4164098 "addItem"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reconcileDefaults()"
      end
    end

    class 646530 "NamedNodeMapImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NamedNodeMaps represent collections of Nodes that can be accessed
by name. Entity and Notation nodes are stored in NamedNodeMaps
attached to the DocumentType. Attributes are placed in a NamedNodeMap
attached to the elem they're related too. However, because attributes
require more work, such as firing mutation events, they are stored in
a subclass of NamedNodeMapImpl.
<P>
Only one Node may be stored per name; attempting to
store another will replace the previous value.
<P>
NOTE: The \"primary\" storage key is taken from the NodeName attribute of the
node. The \"secondary\" storage key is the namespaceURI and localName, when
accessed by DOM level 2 nodes. All nodes, even DOM Level 2 nodes are stored
in a single Vector sorted by the primary \"nodename\" key.
<P>
NOTE: item()'s integer index does _not_ imply that the named nodes
must be stored in an array; that's only an access method. Note too
that these indices are \"live\"; if someone changes the map's
contents, the indices associated with nodes may change.
<P>

@xerces.internal

@version $Id: NamedNodeMapImpl.java,v 1.8 2010-11-01 04:39:39 joehw Exp $
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1771906 // <realization>
	relation 1771906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1771906 // <realization>
	  b parent class_ref 327042 // NamedNodeMap
      end

      classrelation 1772034 // <realization>
	relation 1772034 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1772034 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 884354 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7039242451046758020L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 884482 "flags"
	protected explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

"
      end

      attribute 884610 "READONLY"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 884738 "CHANGED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 884866 "HASDEFAULTS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1772162 // nodes (<unidirectional association>)
	relation 1772162 --->
	  a role_name "nodes" protected
	    comment " Nodes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1772162 // nodes (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 1772290 // ownerNode (<unidirectional association>)
	relation 1772290 --->
	  a role_name "ownerNode" protected
	    comment " the node this map belongs to"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1772290 // ownerNode (<unidirectional association>)
	  b parent class_ref 646786 // NodeImpl
      end

      operation 4158210 "NamedNodeMapImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ownerNode" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructs a named node map. "
      end

      operation 4158338 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NamedNodeMap methods


Report how many nodes are currently stored in this NamedNodeMap.
Caveat: This is a count rather than an index, so the
highest-numbered node at any time can be accessed via
item(getLength()-1).
"
      end

      operation 4158466 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an item from the map by 0-based index.

@param index Which item to retrieve. Note that indices are just an
enumeration of the current contents; they aren't guaranteed to be
stable, nor do they imply any promises about the order of the
NamedNodeMap's contents. In other words, DO NOT assume either that
index(i) will always refer to the same entry, or that there is any
stable ordering of entries... and be prepared for double-reporting
or skips as insertion and deletion occur.

@return the node which currenly has the specified index, or null if index
is greater than or equal to getLength().
"
      end

      operation 4158594 "getNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a node by name.

@param name Name of a node to look up.
@return the Node (of unspecified sub-class) stored with that name, or
null if no value has been assigned to that name.
"
      end

      operation 4158722 "getNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNamedItem(String):Node

Introduced in DOM Level 2. <p>
Retrieves a node specified by local name and namespace URI.

@param namespaceURI  The namespace URI of the node to retrieve.
                     When it is null or an empty string, this
                     method behaves like getNamedItem.
@param localName     The local name of the node to retrieve.
@return Node         A Node (of any type) with the specified name, or null if the specified
                     name did not identify any node in the map.
"
      end

      operation 4158850 "setNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNamedItemNS(String,String):Node

Adds a node using its nodeName attribute.
As the nodeName attribute is used to derive the name which the node must be
stored under, multiple nodes of certain types (those that have a \"special\" string
value) cannot be stored as the names would clash. This is seen as preferable to
allowing nodes to be aliased.
@see org.w3c.dom.NamedNodeMap#setNamedItem
@return If the new Node replaces an existing node the replaced Node is returned,
     otherwise null is returned.
@param arg
     A node to store in a named node map. The node will later be
     accessible using the value of the namespaceURI and localName
     attribute of the node. If a node with those namespace URI and
     local name is already present in the map, it is replaced by the new
     one.
@exception org.w3c.dom.DOMException The exception description.
"
      end

      operation 4158978 "setNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamedItem(Node):Node

Adds a node using its namespaceURI and localName.
@see org.w3c.dom.NamedNodeMap#setNamedItem
@return If the new Node replaces an existing node the replaced Node is returned,
     otherwise null is returned.
@param arg A node to store in a named node map. The node will later be
     accessible using the value of the namespaceURI and localName
     attribute of the node. If a node with those namespace URI and
     local name is already present in the map, it is replaced by the new
     one.
"
      end

      operation 4159106 "removeNamedItem"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNamedItemNS(Node):Node

Removes a node specified by name.
@param name The name of a node to remove.
@return The node removed from the map if a node with such a name exists.
"
      end

      operation 4159234 "removeNamedItemNS"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeNamedItem(String):Node

Introduced in DOM Level 2. <p>
Removes a node specified by local name and namespace URI.
@param namespaceURI
                     The namespace URI of the node to remove.
                     When it is null or an empty string, this
                     method behaves like removeNamedItem.
@param name          The local name of the node to remove.
@return Node         The node removed from the map if a node with such
                     a local name and namespace URI exists.
@throws              NOT_FOUND_ERR: Raised if there is no node named
                     name in the map.

"
      end

      operation 4159362 "cloneMap"
	public return_type class_ref 646530 // NamedNodeMapImpl
	nparams 1
	  param inout name "ownerNode" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeNamedItem(String):Node

 Public methods


Cloning a NamedNodeMap is a DEEP OPERATION; it always clones
all the nodes contained in the map.
"
      end

      operation 4159490 "cloneContent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "srcmap" type class_ref 646530 // NamedNodeMapImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4159618 "setReadOnly"
	package explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneMap():NamedNodeMapImpl

 Package methods


Internal subroutine to allow read-only Nodes to make their contained
NamedNodeMaps readonly too. I expect that in fact the shallow
version of this operation will never be

@param readOnly boolean true to make read-only, false to permit editing.
@param deep boolean true to pass this request along to the contained
nodes, false to only toggle the NamedNodeMap itself. I expect that
the shallow version of this operation will never be used, but I want
to design it in now, while I'm thinking about it.
"
      end

      operation 4159746 "getReadOnly"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setReadOnly(boolean,boolean)

Internal subroutine returns this NodeNameMap's (shallow) readOnly value.

"
      end

      operation 4159874 "setOwnerDocument"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getReadOnly()

 Protected methods


NON-DOM
set the ownerDocument of this node, and the attributes it contains
"
      end

      operation 4160002 "isReadOnly"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160130 "isReadOnly"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160258 "changed"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160386 "changed"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160514 "hasDefaults"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160642 "hasDefaults"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160770 "findNamePoint"
	protected explicit_return_type "int"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "start" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private methods


Subroutine: Locate the named item, or the point at which said item
should be added.

@param name Name of a node to look up.

@return If positive or zero, the index of the found item.
If negative, index of the appropriate point at which to insert
the item, encoded as -1-index and hence reconvertable by subtracting
it from -1. (Encoding because I don't want to recompare the strings
but don't want to burn bytes on a datatype to hold a flagged value.)
"
      end

      operation 4160898 "findNamePoint"
	protected explicit_return_type "int"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " findNamePoint(String):int
 This findNamePoint is for DOM Level 2 Namespaces.
"
      end

      operation 4161026 "precedes"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 317570 // Node
	  param inout name "b" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " compare 2 nodes in the map.  If a precedes b, return true, otherwise
 return false"
      end

      operation 4161154 "removeItem"
	protected explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: Remove attribute at specified index
"
      end

      operation 4161282 "getItem"
	protected return_type class_ref 129538 // Object
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4161410 "addItem"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4161538 "cloneMap"
	protected return_type class_ref 186498 // ArrayList
	nparams 1
	  param inout name "list" type class_ref 186498 // ArrayList
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: copy content of this map into the specified ArrayList

@param list   ArrayList to copy information into.
@return A copy of this node named map
"
      end

      operation 4161666 "getNamedItemIndex"
	protected explicit_return_type "int"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4161794 "removeAll"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM remove all elements from this map
"
      end

      operation 4161922 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4162050 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 646786 "NodeImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NodeImpl provides the basic structure of a DOM tree. It is never used
directly, but instead is subclassed to add type and data
information, and additional methods, appropriate to each node of
the tree. Only its subclasses should be instantiated -- and those,
with the exception of Document itself, only through a specific
Document's factory methods.
<P>
The Node interface provides shared behaviors such as siblings and
children, both for consistancy and so that the most common tree
operations may be performed without constantly having to downcast
to specific node types. When there is no obvious mapping for one of
these queries, it will respond with null.
Note that the default behavior is that children are forbidden. To
permit them, the subclass ParentNode overrides several methods.
<P>
NodeImpl also implements NodeList, so it can return itself in
response to the getChildNodes() query. This eliminiates the need
for a separate ChildNodeList object. Note that this is an
IMPLEMENTATION DETAIL; applications should _never_ assume that
this identity exists.
<P>
All nodes in a single document must originate
in that document. (Note that this is much tighter than \"must be
same implementation\") Nodes are all aware of their ownerDocument,
and attempts to mismatch will throw WRONG_DOCUMENT_ERR.
<P>
However, to save memory not all nodes always have a direct reference
to their ownerDocument. When a node is owned by another node it relies
on its owner to store its ownerDocument. Parent nodes always store it
though, so there is never more than one level of indirection.
And when a node doesn't have an owner, ownerNode refers to its
ownerDocument.
<p>
This class doesn't directly support mutation events, however, it still
implements the EventTarget interface and forward all related calls to the
document so that the document class do so.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1772546 // <realization>
	relation 1772546 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1772546 // <realization>
	  b parent class_ref 317570 // Node
      end

      classrelation 1772674 // <realization>
	relation 1772674 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1772674 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 1772802 // <realization>
	relation 1772802 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1772802 // <realization>
	  b parent class_ref 647426 // EventTarget
      end

      classrelation 1772930 // <realization>
	relation 1772930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1772930 // <realization>
	  b parent class_ref 185858 // Cloneable
      end

      classrelation 1773058 // <realization>
	relation 1773058 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1773058 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 887426 "TREE_POSITION_PRECEDING"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 TreePosition Constants.
 Taken from DOM L3 Node interface.

The node precedes the reference node.

"
      end

      attribute 887554 "TREE_POSITION_FOLLOWING"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The node follows the reference node.

"
      end

      attribute 887682 "TREE_POSITION_ANCESTOR"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The node is an ancestor of the reference node.

"
      end

      attribute 887810 "TREE_POSITION_DESCENDANT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The node is a descendant of the reference node.

"
      end

      attribute 887938 "TREE_POSITION_EQUIVALENT"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The two nodes have an equivalent position. This is the case of two
attributes that have the same <code>ownerElement</code>, and two
nodes that are the same.

"
      end

      attribute 888066 "TREE_POSITION_SAME_NODE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The two nodes are the same. Two nodes that are the same have an
equivalent position, though the reverse may not be true.

"
      end

      attribute 888194 "TREE_POSITION_DISCONNECTED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x00"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The two nodes are disconnected, they do not have any common ancestor.
This is the case of two nodes that are not in the same document.

"
      end

      attribute 888322 "DOCUMENT_POSITION_DISCONNECTED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x01"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DocumentPosition
"
      end

      attribute 888450 "DOCUMENT_POSITION_PRECEDING"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x02"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 888578 "DOCUMENT_POSITION_FOLLOWING"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x04"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 888706 "DOCUMENT_POSITION_CONTAINS"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x08"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 888834 "DOCUMENT_POSITION_IS_CONTAINED"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x10"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 888962 "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0x20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 889090 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6316591992167219696L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      attribute 889218 "ELEMENT_DEFINITION_NODE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 21"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " public
 Element definition node type. 
"
      end

      classrelation 1773186 // ownerNode (<unidirectional association>)
	relation 1773186 --->
	  a role_name "ownerNode" protected
	    comment " Data

 links
 typically the parent but not always!"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1773186 // ownerNode (<unidirectional association>)
	  b parent class_ref 646786 // NodeImpl
      end

      attribute 889346 "flags"
	protected explicit_type "short"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " data
"
      end

      attribute 889474 "READONLY"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 889602 "SYNCDATA"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 889730 "SYNCCHILDREN"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 889858 "OWNED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 889986 "FIRSTCHILD"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 890114 "SPECIFIED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 890242 "IGNORABLEWS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 890370 "HASSTRING"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 890498 "NORMALIZED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 890626 "ID"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4169602 "NodeImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


No public constructor; only subclasses of Node should be
instantiated, and those normally via a Document's factory methods
<p>
Every Node knows what Document it belongs to.
"
      end

      operation 4169730 "NodeImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(CoreDocumentImpl)
 Constructor for serialization. "
      end

      operation 4169858 "getNodeType"
	abstract public explicit_return_type "short"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4169986 "getNodeName"
	abstract public return_type class_ref 128130 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "the name of this node.
"
      end

      operation 4170114 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the node value.
@throws DOMException(DOMSTRING_SIZE_ERR)
"
      end

      operation 4170242 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node value.
@throws DOMException(NO_MODIFICATION_ALLOWED_ERR)
"
      end

      operation 4170370 "appendChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "newChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a child node to the end of the list of children for this node.
Convenience shorthand for insertBefore(newChild,null).
@see #insertBefore(Node, Node)
<P>
By default we do not accept any children, ParentNode overrides this.
@see ParentNode

@return newChild, in its new state (relocated, or emptied in the case of
DocumentNode.)

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4170498 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a duplicate of a given node. You can consider this a
generic \"copy constructor\" for nodes. The newly returned object should
be completely independent of the source object's subtree, so changes
in one after the clone has been made will not affect the other.
<P>
Note: since we never have any children deep is meaningless here,
ParentNode overrides this behavior.
@see ParentNode

<p>
Example: Cloning a Text node will copy both the node and the text it
contains.
<p>
Example: Cloning something that has children -- Element or Attr, for
example -- will _not_ clone those children unless a \"deep clone\"
has been requested. A shallow clone of an Attr node will yield an
empty Attr of the same name.
<p>
NOTE: Clones will always be read/write, even if the node being cloned
is read-only, to permit applications using only the DOM API to obtain
editable copies of locked portions of the tree.
"
      end

      operation 4170626 "getOwnerDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Find the Document that this Node belongs to (the document in
whose context the Node was created). The Node may or may not
currently be part of that Document's actual contents.
"
      end

      operation 4170754 "ownerDocument"
	package return_type class_ref 646914 // CoreDocumentImpl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "same as above but returns internal type and this one is not overridden
by CoreDocumentImpl to return null
"
      end

      operation 4170882 "setOwnerDocument"
	package explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM
set the ownerDocument of this node
"
      end

      operation 4171010 "getNodeNumber"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the node number
"
      end

      operation 4171138 "getParentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain the DOM-tree parent of this node, or null if it is not
currently active in the DOM tree (perhaps because it has just been
created or removed). Note that Document, DocumentFragment, and
Attribute will never have parents.
"
      end

      operation 4171266 "parentNode"
	package return_type class_ref 646786 // NodeImpl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "same as above but returns internal type
"
      end

      operation 4171394 "getNextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The next child of this node's parent, or null if none "
      end

      operation 4171522 "getPreviousSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The previous child of this node's parent, or null if none "
      end

      operation 4171650 "previousSibling"
	package return_type class_ref 647938 // ChildNode
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4171778 "getAttributes"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the collection of attributes associated with this node,
or null if none. At this writing, Element is the only type of node
which will ever have attributes.

@see ElementImpl
"
      end

      operation 4171906 "hasAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns whether this node (if it is an element) has any attributes.
@return <code>true</code> if this node has any attributes,
  <code>false</code> otherwise.
@since DOM Level 2
@see ElementImpl
"
      end

      operation 4172034 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this node has any children. Convenience shorthand
for (Node.getFirstChild()!=null)
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode
"
      end

      operation 4172162 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a NodeList enumerating all children of this node. If there
are none, an (initially) empty NodeList is returned.
<p>
NodeLists are \"live\"; as children are added/removed the NodeList
will immediately reflect those changes. Also, the NodeList refers
to the actual nodes, so changes to those nodes made via the DOM tree
will be reflected in the NodeList and vice versa.
<p>
In this implementation, Nodes implement the NodeList interface and
provide their own getChildNodes() support. Other DOMs may solve this
differently.
"
      end

      operation 4172290 "getFirstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The first child of this Node, or null if none.
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode
"
      end

      operation 4172418 "getLastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The first child of this Node, or null if none.
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode
"
      end

      operation 4172546 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move one or more node(s) to our list of children. Note that this
implicitly removes them from their previous parent.
<P>
By default we do not accept any children, ParentNode overrides this.
@see ParentNode

@param newChild The Node to be moved to our subtree. As a
convenience feature, inserting a DocumentNode will instead insert
all its children.

@param refChild Current child which newChild should be placed
immediately before. If refChild is null, the insertion occurs
after all existing Nodes, like appendChild().

@return newChild, in its new state (relocated, or emptied in the case of
DocumentNode.)

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is an
ancestor of this node.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if refChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4172674 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a child from this Node. The removed child's subtree
remains intact so it may be re-inserted elsewhere.
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode

@return oldChild, in its new state (removed).

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4172802 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make newChild occupy the location that oldChild used to
have. Note that newChild will first be removed from its previous
parent, if any. Equivalent to inserting newChild before oldChild,
then removing oldChild.
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode

@return oldChild, in its new state (removed).

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is
one of our ancestors.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4172930 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NodeList methods


NodeList method: Count the immediate children of this node
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode

@return int
"
      end

      operation 4173058 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NodeList method: Return the Nth immediate child of this node, or
null if the index is out of bounds.
<P>
By default we do not have any children, ParentNode overrides this.
@see ParentNode

@return org.w3c.dom.Node
@param Index int
"
      end

      operation 4173186 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM2: methods, getters, setters


Puts all <code>Text</code> nodes in the full depth of the sub-tree
underneath this <code>Node</code>, including attribute nodes, into a
\"normal\" form where only markup (e.g., tags, comments, processing
instructions, CDATA sections, and entity references) separates
<code>Text</code> nodes, i.e., there are no adjacent <code>Text</code>
nodes.  This can be used to ensure that the DOM view of a document is
the same as if it were saved and re-loaded, and is useful when
operations (such as XPointer lookups) that depend on a particular
document tree structure are to be used.In cases where the document
contains <code>CDATASections</code>, the normalize operation alone may
not be sufficient, since XPointers do not differentiate between
<code>Text</code> nodes and <code>CDATASection</code> nodes.
<p>
Note that this implementation simply calls normalize() on this Node's
children. It is up to implementors or Node to override normalize()
to take action.
"
      end

      operation 4173314 "isSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Tests whether the DOM implementation implements a specific feature and
that feature is supported by this node.
@param feature The package name of the feature to test. This is the same
name as what can be passed to the method hasFeature on
DOMImplementation.
@param version This is the version number of the package name to
test. In Level 2, version 1, this is the string \"2.0\". If the version is
not specified, supporting any version of the feature will cause the
method to return true.
@return boolean Returns true if this node defines a subtree within which
the specified feature is supported, false otherwise.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4173442 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

The namespace URI of this node, or null if it is unspecified. When this
node is of any type other than ELEMENT_NODE and ATTRIBUTE_NODE, this is
always null and setting it has no effect. <p>

This is not a computed value that is the result of a namespace lookup
based on an examination of the namespace declarations in scope. It is
merely the namespace URI given at creation time.<p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null.
@since WD-DOM-Level-2-19990923
@see AttrNSImpl
@see ElementNSImpl
"
      end

      operation 4173570 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

The namespace prefix of this node, or null if it is unspecified. When
this node is of any type other than ELEMENT_NODE and ATTRIBUTE_NODE this
is always null and setting it has no effect.<p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null. <p>

@since WD-DOM-Level-2-19990923
@see AttrNSImpl
@see ElementNSImpl
"
      end

      operation 4173698 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Introduced in DOM Level 2. <p>

 The namespace prefix of this node, or null if it is unspecified. When
 this node is of any type other than ELEMENT_NODE and ATTRIBUTE_NODE
 this is always null and setting it has no effect.<p>

 For nodes created with a DOM Level 1 method, such as createElement from
 the Document interface, this is null.<p>

 Note that setting this attribute changes the nodeName attribute, which
 holds the qualified name, as well as the tagName and name attributes of
 the Element and Attr interfaces, when applicable.<p>

@throws INVALID_CHARACTER_ERR Raised if the specified
 prefix contains an invalid character.

@since WD-DOM-Level-2-19990923
@see AttrNSImpl
@see ElementNSImpl
"
      end

      operation 4173826 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Returns the local part of the qualified name of this node.
For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, and for nodes of any type other than
ELEMENT_NODE and ATTRIBUTE_NODE this is the same as the nodeName
attribute.
@since WD-DOM-Level-2-19990923
@see AttrNSImpl
@see ElementNSImpl
"
      end

      operation 4173954 "addEventListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " EventTarget support
"
      end

      operation 4174082 "removeEventListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4174210 "dispatchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 647682 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4174338 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public DOM Level 3 methods


The absolute base URI of this node or <code>null</code> if undefined.
This value is computed according to . However, when the
<code>Document</code> supports the feature \"HTML\" , the base URI is
computed using first the value of the href attribute of the HTML BASE
element if any, and the value of the <code>documentURI</code>
attribute from the <code>Document</code> interface otherwise.
<br> When the node is an <code>Element</code>, a <code>Document</code>
or a a <code>ProcessingInstruction</code>, this attribute represents
the properties [base URI] defined in . When the node is a
<code>Notation</code>, an <code>Entity</code>, or an
<code>EntityReference</code>, this attribute represents the
properties [declaration base URI] in the . How will this be affected
by resolution of relative namespace URIs issue?It's not.Should this
only be on Document, Element, ProcessingInstruction, Entity, and
Notation nodes, according to the infoset? If not, what is it equal to
on other nodes? Null? An empty string? I think it should be the
parent's.No.Should this be read-only and computed or and actual
read-write attribute?Read-only and computed (F2F 19 Jun 2000 and
teleconference 30 May 2001).If the base HTML element is not yet
attached to a document, does the insert change the Document.baseURI?
Yes. (F2F 26 Sep 2001)
@since DOM Level 3
"
      end

      operation 4174466 "compareTreePosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares a node with this node with regard to their position in the
tree and according to the document order. This order can be extended
by module that define additional types of nodes.
@param other The node to compare against this node.
@return Returns how the given node is positioned relatively to this
  node.
@since DOM Level 3
@deprecated
"
      end

      operation 4174594 "compareDocumentPosition"
	public explicit_return_type "short"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares a node with this node with regard to their position in the
document.
@param other The node to compare against this node.
@return Returns how the given node is positioned relatively to this
  node.
@since DOM Level 3
"
      end

      operation 4174722 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute returns the text content of this node and its
descendants. When it is defined to be null, setting it has no effect.
When set, any possible children this node may have are removed and
replaced by a single <code>Text</code> node containing the string
this attribute is set to. On getting, no serialization is performed,
the returned string does not contain any markup. No whitespace
normalization is performed, the returned string does not contain the
element content whitespaces . Similarly, on setting, no parsing is
performed either, the input string is taken as pure textual content.
<br>The string returned is made of the text content of this node
depending on its type, as defined below:
<table border='1'>
<tr>
<th>Node type</th>
<th>Content</th>
</tr>

/**
This attribute returns the text content of this node and its
descendants. When it is defined to be null, setting it has no effect.
When set, any possible children this node may have are removed and
replaced by a single <code>Text</code> node containing the string
this attribute is set to. On getting, no serialization is performed,
the returned string does not contain any markup. No whitespace
normalization is performed, the returned string does not contain the
element content whitespaces . Similarly, on setting, no parsing is
performed either, the input string is taken as pure textual content.
<br>The string returned is made of the text content of this node
depending on its type, as defined below:
<table border='1'>
<tr>
<th>Node type</th>
<th>Content</th>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>
ELEMENT_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE,
DOCUMENT_FRAGMENT_NODE</td>
<td valign='top' rowspan='1' colspan='1'>concatenation of the <code>textContent</code>
attribute value of every child node, excluding COMMENT_NODE and
PROCESSING_INSTRUCTION_NODE nodes</td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>ATTRIBUTE_NODE, TEXT_NODE,
CDATA_SECTION_NODE, COMMENT_NODE, PROCESSING_INSTRUCTION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
<code>nodeValue</code></td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>DOCUMENT_NODE, DOCUMENT_TYPE_NODE, NOTATION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
null</td>
</tr>
</table>
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
@exception DOMException
  DOMSTRING_SIZE_ERR: Raised when it would return more characters than
  fit in a <code>DOMString</code> variable on the implementation
  platform.
@since DOM Level 3
"
      end

      operation 4174850 "getTextContent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "buf" type class_ref 166018 // StringBuffer
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internal method taking a StringBuffer in parameter"
      end

      operation 4174978 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This attribute returns the text content of this node and its
descendants. When it is defined to be null, setting it has no effect.
When set, any possible children this node may have are removed and
replaced by a single <code>Text</code> node containing the string
this attribute is set to. On getting, no serialization is performed,
the returned string does not contain any markup. No whitespace
normalization is performed, the returned string does not contain the
element content whitespaces . Similarly, on setting, no parsing is
performed either, the input string is taken as pure textual content.
<br>The string returned is made of the text content of this node
depending on its type, as defined below:
<table border='1'>
<tr>
<th>Node type</th>
<th>Content</th>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>
ELEMENT_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE,
DOCUMENT_FRAGMENT_NODE</td>
<td valign='top' rowspan='1' colspan='1'>concatenation of the <code>textContent</code>
attribute value of every child node, excluding COMMENT_NODE and
PROCESSING_INSTRUCTION_NODE nodes</td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>ATTRIBUTE_NODE, TEXT_NODE,
CDATA_SECTION_NODE, COMMENT_NODE, PROCESSING_INSTRUCTION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
<code>nodeValue</code></td>
</tr>
<tr>
<td valign='top' rowspan='1' colspan='1'>DOCUMENT_NODE, DOCUMENT_TYPE_NODE, NOTATION_NODE</td>
<td valign='top' rowspan='1' colspan='1'>
null</td>
</tr>
</table>
@exception DOMException
  NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
@exception DOMException
  DOMSTRING_SIZE_ERR: Raised when it would return more characters than
  fit in a <code>DOMString</code> variable on the implementation
  platform.
@since DOM Level 3
"
      end

      operation 4175106 "isSameNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this node is the same node as the given one.
<br>This method provides a way to determine whether two
<code>Node</code> references returned by the implementation reference
the same object. When two <code>Node</code> references are references
to the same object, even if through a proxy, the references may be
used completely interchangably, such that all attributes have the
same values and calling the same DOM method on either reference
always has exactly the same effect.
@param other The node to test against.
@return Returns <code>true</code> if the nodes are the same,
  <code>false</code> otherwise.
@since DOM Level 3
"
      end

      operation 4175234 "isDefaultNamespace"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3: Experimental
 This method checks if the specified <code>namespaceURI</code> is the
 default namespace or not.
 @param namespaceURI The namespace URI to look for.
 @return  <code>true</code> if the specified <code>namespaceURI</code>
  is the default namespace, <code>false</code> otherwise.
@since DOM Level 3
"
      end

      operation 4175362 "lookupPrefix"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "namespaceURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
DOM Level 3 - Experimental:
Look up the prefix associated to the given namespace URI, starting from this node.

@param namespaceURI
@return the prefix for the namespace
"
      end

      operation 4175490 "lookupNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "specifiedPrefix" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 - Experimental:
Look up the namespace URI associated to the given prefix, starting from this node.
Use lookupNamespaceURI(null) to lookup the default namespace

@param namespaceURI
@return th URI for the namespace
@since DOM Level 3
"
      end

      operation 4175618 "getElementAncestor"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "currentNode" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4175746 "lookupNamespacePrefix"
	package return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "el" type class_ref 647042 // ElementImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4175874 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether two nodes are equal.
<br>This method tests for equality of nodes, not sameness (i.e.,
whether the two nodes are references to the same object) which can be
tested with <code>Node.isSameNode</code>. All nodes that are the same
will also be equal, though the reverse may not be true.
<br>Two nodes are equal if and only if the following conditions are
satisfied: The two nodes are of the same type.The following string
attributes are equal: <code>nodeName</code>, <code>localName</code>,
<code>namespaceURI</code>, <code>prefix</code>, <code>nodeValue</code>
, <code>baseURI</code>. This is: they are both <code>null</code>, or
they have the same length and are character for character identical.
The <code>attributes</code> <code>NamedNodeMaps</code> are equal.
This is: they are both <code>null</code>, or they have the same
length and for each node that exists in one map there is a node that
exists in the other map and is equal, although not necessarily at the
same index.The <code>childNodes</code> <code>NodeLists</code> are
equal. This is: they are both <code>null</code>, or they have the
same length and contain equal nodes at the same index. This is true
for <code>Attr</code> nodes as for any other type of node. Note that
normalization can affect equality; to avoid this, nodes should be
normalized before being compared.
<br>For two <code>DocumentType</code> nodes to be equal, the following
conditions must also be satisfied: The following string attributes
are equal: <code>publicId</code>, <code>systemId</code>,
<code>internalSubset</code>.The <code>entities</code>
<code>NamedNodeMaps</code> are equal.The <code>notations</code>
<code>NamedNodeMaps</code> are equal.
<br>On the other hand, the following do not affect equality: the
<code>ownerDocument</code> attribute, the <code>specified</code>
attribute for <code>Attr</code> nodes, the
<code>isWhitespaceInElementContent</code> attribute for
<code>Text</code> nodes, as well as any user data or event listeners
registered on the nodes.
@param arg The node to compare equality with.
@param deep If <code>true</code>, recursively compare the subtrees; if
  <code>false</code>, compare only the nodes themselves (and its
  attributes, if it is an <code>Element</code>).
@return If the nodes, and possibly subtrees are equal,
  <code>true</code> otherwise <code>false</code>.
@since DOM Level 3
"
      end

      operation 4176002 "getFeature"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since DOM Level 3
"
      end

      operation 4176130 "setUserData"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "data" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 647298 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate an object to a key on this node. The object can later be
retrieved from this node by calling <code>getUserData</code> with the
same key.
@param key The key to associate the object to.
@param data The object to associate to the given key, or
  <code>null</code> to remove any existing association to that key.
@param handler The handler to associate to that key, or
  <code>null</code>.
@return Returns the <code>DOMObject</code> previously associated to
  the given key on this node, or <code>null</code> if there was none.
@since DOM Level 3
"
      end

      operation 4176258 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the object associated to a key on a this node. The object
must first have been set to this node by calling
<code>setUserData</code> with the same key.
@param key The key the object is associated to.
@return Returns the <code>DOMObject</code> associated to the given key
  on this node, or <code>null</code> if there was none.
@since DOM Level 3
"
      end

      operation 4176386 "getUserDataRecord"
	protected return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ParentNode.UserDataRecord> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4176514 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


NON-DOM: PR-DOM-Level-1-19980818 mentions readonly nodes in conjunction
with Entities, but provides no API to support this.
<P>
Most DOM users should not touch this method. Its anticpated use
is during construction of EntityRefernces, where it will be used to
lock the contents replicated from Entity so they can't be casually
altered. It _could_ be published as a DOM extension, if desired.
<P>
Note: since we never have any children deep is meaningless here,
ParentNode overrides this behavior.
@see ParentNode

@param readOnly True or false as desired.
@param deep If true, children are also toggled. Note that this will
 not change the state of an EntityReference or its children,
 which are always read-only.
"
      end

      operation 4176642 "getReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setReadOnly(boolean,boolean)

NON-DOM: Returns true if this node is read-only. This is a
shallow check.
"
      end

      operation 4176770 "setUserData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getReadOnly():boolean

NON-DOM: As an alternative to subclassing the DOM, this implementation
has been extended with the ability to attach an object to each node.
(If you need multiple objects, you can attach a collection such as a
List or Map, then attach your application information to that.)
<p><b>Important Note:</b> You are responsible for removing references
to your data on nodes that are no longer used. Failure to do so will
prevent the nodes, your data is attached to, to be garbage collected
until the whole document is.

@param data the object to store or null to remove any existing reference
"
      end

      operation 4176898 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM:
Returns the user data associated to this node.
"
      end

      operation 4177026 "changed"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Denotes that this node has changed.
"
      end

      operation 4177154 "changes"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of changes to this node.
"
      end

      operation 4177282 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this method in subclass to hook in efficient
internal data structure.
"
      end

      operation 4177410 "getContainer"
	protected return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For non-child nodes, the node which \"points\" to this node.
For example, the owning element for an attribute
"
      end

      operation 4177538 "isReadOnly"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flags setters and getters
"
      end

      operation 4177666 "isReadOnly"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4177794 "needsSyncData"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4177922 "needsSyncData"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178050 "needsSyncChildren"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178178 "needsSyncChildren"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178306 "isOwned"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178434 "isOwned"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178562 "isFirstChild"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178690 "isFirstChild"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178818 "isSpecified"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4178946 "isSpecified"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179074 "internalIsIgnorableWhitespace"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " inconsistent name to avoid clash with public method on TextImpl"
      end

      operation 4179202 "isIgnorableWhitespace"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179330 "hasStringValue"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179458 "hasStringValue"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179586 "isNormalized"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179714 "isNormalized"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179842 "isIdAttribute"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4179970 "isIdAttribute"
	package explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4180098 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object methods

 NON-DOM method for debugging convenience. "
      end

      operation 4180226 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Serialization methods

 Serialize object. "
      end
    end

    class 646914 "CoreDocumentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Document interface represents the entire HTML or XML document.
Conceptually, it is the root of the document tree, and provides the
primary access to the document's data.
<P>
Since elements, text nodes, comments, processing instructions,
etc. cannot exist outside the context of a Document, the Document
interface also contains the factory methods needed to create these
objects. The Node objects created have a ownerDocument attribute
which associates them with the Document within whose context they
were created.
<p>
The CoreDocumentImpl class only implements the DOM Core. Additional modules
are supported by the more complete DocumentImpl subclass.
<p>
<b>Note:</b> When any node in the document is serialized, the
entire document is serialized along with it.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@author Ralf Pfeiffer, IBM
@version $Id: CoreDocumentImpl.java,v 1.9 2010-11-01 04:39:37 joehw Exp $
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1778434 // <generalisation>
	relation 1778434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1778434 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1778690 // <realization>
	relation 1778690 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1778690 // <realization>
	  b parent class_ref 378626 // Document
      end

      attribute 892418 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "TODO:: 1. Change XML11Char method names similar to XMLChar. That will
prevent lot of dirty version checking code.

2. IMO during cloneNode qname/isXMLName check should not be made.


 Constants

 Serialization version. 
"
      end

      classrelation 1778818 // docType (<unidirectional association>)
	relation 1778818 --->
	  a role_name "docType" protected
	    comment " Data

 document information
 Document type. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1778818 // docType (<unidirectional association>)
	  b parent class_ref 650626 // DocumentTypeImpl
      end

      classrelation 1778946 // docElement (<unidirectional association>)
	relation 1778946 --->
	  a role_name "docElement" protected
	    comment " Document element. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1778946 // docElement (<unidirectional association>)
	  b parent class_ref 647042 // ElementImpl
      end

      classrelation 1779074 // fFreeNLCache (<unidirectional association>)
	relation 1779074 --->
	  a role_name "fFreeNLCache" package
	    comment " NodeListCache free list 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779074 // fFreeNLCache (<unidirectional association>)
	  b parent class_ref 649730 // NodeListCache
      end

      classrelation 1779202 // encoding (<unidirectional association>)
	relation 1779202 --->
	  a role_name "encoding" protected
	    comment "Experimental DOM Level 3 feature: Document encoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779202 // encoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1779330 // actualEncoding (<unidirectional association>)
	relation 1779330 --->
	  a role_name "actualEncoding" protected
	    comment "Experimental DOM Level 3 feature: Document actualEncoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779330 // actualEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1779458 // version (<unidirectional association>)
	relation 1779458 --->
	  a role_name "version" protected
	    comment "Experimental DOM Level 3 feature: Document version 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779458 // version (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 892546 "standalone"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Experimental DOM Level 3 feature: Document standalone 
"
      end

      classrelation 1779586 // fDocumentURI (<unidirectional association>)
	relation 1779586 --->
	  a role_name "fDocumentURI" protected
	    comment "Experimental DOM Level 3 feature: documentURI 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779586 // fDocumentURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1779714 // nodeUserData (<unidirectional association>)
	relation 1779714 --->
	  a role_name "nodeUserData" private
	    comment "Revisit :: change to a better data structure.
 Table for user data attached to this document nodes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Node, Map<String, UserDataRecord>> ${name}${value};
"
	    classrelation_ref 1779714 // nodeUserData (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1779842 // identifiers (<unidirectional association>)
	relation 1779842 --->
	  a role_name "identifiers" protected
	    comment " Identifiers. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Node> ${name}${value};
"
	    classrelation_ref 1779842 // identifiers (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1779970 // domNormalizer (<unidirectional association>)
	relation 1779970 --->
	  a role_name "domNormalizer" init_value " null" package
	    comment " DOM Level 3: normalizeDocument
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1779970 // domNormalizer (<unidirectional association>)
	  b parent class_ref 650754 // DOMNormalizer
      end

      classrelation 1780098 // fConfiguration (<unidirectional association>)
	relation 1780098 --->
	  a role_name "fConfiguration" init_value " null" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1780098 // fConfiguration (<unidirectional association>)
	  b parent class_ref 650882 // DOMConfigurationImpl
      end

      classrelation 1780226 // fXPathEvaluator (<unidirectional association>)
	relation 1780226 --->
	  a role_name "fXPathEvaluator" init_value " null" package
	    comment " support of XPath API
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1780226 // fXPathEvaluator (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 892674 "kidOK"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Table for quick check of child insertion. 
"
      end

      attribute 892802 "changes"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Number of alterations made to this document since its creation.
Serves as a \"dirty bit\" so that live objects such as NodeList can
recognize when an alteration has been made and discard its cached
state information.
<p>
Any method that alters the tree structure MUST cause or be
accompanied by a call to changed(), to inform it that any outstanding
NodeLists may have to be updated.
<p>
(Required because NodeList is simultaneously \"live\" and integer-
indexed -- a bad decision in the DOM's design.)
<p>
Note that changes which do not affect the tree's structure -- changing
the node's name, for example -- do _not_ have to call changed().
<p>
Alternative implementation would be to use a cryptographic
Digest value rather than a count. This would have the advantage that
\"harmless\" changes (those producing equal() trees) would not force
NodeList to resynchronize. Disadvantage is that it's slightly more prone
to \"false negatives\", though that's the difference between \"wildly
unlikely\" and \"absurdly unlikely\". IF we start maintaining digests,
we should consider taking advantage of them.

Note: This used to be done a node basis, so that we knew what
subtree changed. But since only DeepNodeList really use this today,
the gain appears to be really small compared to the cost of having
an int on every (parent) node plus having to walk up the tree all the
way to the root to mark the branch as changed everytime a node is
changed.
So we now have a single counter global to the document. It means that
some objects may flush their cache more often than necessary, but this
makes nodes smaller and only the document needs to be marked as changed.

"
      end

      attribute 892930 "allowGrammarAccess"
	protected explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " experimental
 Allow grammar access. 
"
      end

      attribute 893058 "errorChecking"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bypass error checking. 
"
      end

      attribute 893186 "ancestorChecking"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Ancestor checking 
"
      end

      attribute 893314 "xmlVersionChanged"
	protected explicit_type "boolean"
	init_value " false "
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Did version change at any point when the document was created ?
this field helps us to optimize when normalizingDocument.
"
      end

      attribute 893442 "documentNumber"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following are required for compareDocumentPosition

 Document number.   Documents are ordered across the implementation using
 positive integer values.  Documents are assigned numbers on demand.
"
      end

      attribute 893570 "nodeCounter"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Node counter and table.  Used to assign numbers to nodes for this
 document.  Node number values are negative integers.  Nodes are
 assigned numbers on demand.
"
      end

      classrelation 1780354 // nodeTable (<unidirectional association>)
	relation 1780354 --->
	  a role_name "nodeTable" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Node, Integer> ${name}${value};
"
	    classrelation_ref 1780354 // nodeTable (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 893698 "xml11Version"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "by default 1.0"
      end

      extra_member 141826 "initialization"
	
	cpp "" ""
	java "  static {

        kidOK = new int[13];

        kidOK[DOCUMENT_NODE] =
        1 << ELEMENT_NODE | 1 << PROCESSING_INSTRUCTION_NODE |
        1 << COMMENT_NODE | 1 << DOCUMENT_TYPE_NODE;

        kidOK[DOCUMENT_FRAGMENT_NODE] =
        kidOK[ENTITY_NODE] =
        kidOK[ENTITY_REFERENCE_NODE] =
        kidOK[ELEMENT_NODE] =
        1 << ELEMENT_NODE | 1 << PROCESSING_INSTRUCTION_NODE |
        1 << COMMENT_NODE | 1 << TEXT_NODE |
        1 << CDATA_SECTION_NODE | 1 << ENTITY_REFERENCE_NODE ;


        kidOK[ATTRIBUTE_NODE] =
        1 << TEXT_NODE | 1 << ENTITY_REFERENCE_NODE;

        kidOK[DOCUMENT_TYPE_NODE] =
        kidOK[PROCESSING_INSTRUCTION_NODE] =
        kidOK[COMMENT_NODE] =
        kidOK[TEXT_NODE] =
        kidOK[CDATA_SECTION_NODE] =
        kidOK[NOTATION_NODE] =
        0;

    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      classrelation 1780482 // serialPersistentFields (<unidirectional association>)
	relation 1780482 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
        new ObjectStreamField[] {
            new ObjectStreamField(\"docType\", DocumentTypeImpl.class),
            new ObjectStreamField(\"docElement\", ElementImpl.class),
            new ObjectStreamField(\"fFreeNLCache\", NodeListCache.class),
            new ObjectStreamField(\"encoding\", String.class),
            new ObjectStreamField(\"actualEncoding\", String.class),
            new ObjectStreamField(\"version\", String.class),
            new ObjectStreamField(\"standalone\", boolean.class),
            new ObjectStreamField(\"fDocumentURI\", String.class),
            new ObjectStreamField(\"userData\", Hashtable.class),
            new ObjectStreamField(\"identifiers\", Hashtable.class),
            new ObjectStreamField(\"changes\", int.class),
            new ObjectStreamField(\"allowGrammarAccess\", boolean.class),
            new ObjectStreamField(\"errorChecking\", boolean.class),
            new ObjectStreamField(\"ancestorChecking\", boolean.class),
            new ObjectStreamField(\"xmlVersionChanged\", boolean.class),
            new ObjectStreamField(\"documentNumber\", int.class),
            new ObjectStreamField(\"nodeCounter\", int.class),
            new ObjectStreamField(\"nodeTable\", Hashtable.class),
            new ObjectStreamField(\"xml11Version\", boolean.class),
        }" class_relation const_relation private
	    comment " static

@serialField docType DocumentTypeImpl document type
@serialField docElement ElementImpl document element
@serialField fFreeNLCache NodeListCache NodeListCache free list
@serialField encoding String Document encoding
@serialField actualEncoding String Document actualEncoding
@serialField version String Document version
@serialField standalone boolean Document standalone
@serialField fDocumentURI String Document URI
@serialField userData Hashtable user data attached to the nodes. Note that
it was original called \"userData\". It has been changed to nodeUserData to
avoid confusion with those that are actually values of the map.
@serialField identifiers Hashtable identifiers
@serialField changes int flag indicates whether the node has changed
@serialField allowGrammarAccess boolean Allow grammar access
@serialField errorChecking boolean Bypass error checking
@serialField ancestorChecking boolean Ancestor checking
@serialField xmlVersionChanged boolean Indicate whether the version has changed
@serialField documentNumber int Document number
@serialField nodeCounter int Node counter
@serialField nodeTable Hashtable Node table
@serialField xml11Version boolean XML version

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1780482 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 4205698 "CoreDocumentImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


NON-DOM: Actually creating a Document is outside the DOM's spec,
since it has to operate in terms of a particular implementation.
"
      end

      operation 4205826 "CoreDocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "grammarAccess" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor. "
      end

      operation 4205954 "CoreDocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "doctype" type class_ref 649986 // DocumentType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For DOM2 support.
The createDocument factory method is in DOMImplementation.
"
      end

      operation 4206082 "CoreDocumentImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "doctype" type class_ref 649986 // DocumentType
	  param inout name "grammarAccess" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For DOM2 support. "
      end

      operation 4206210 "getOwnerDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods

 even though ownerDocument refers to this in this implementation
 the DOM Level 2 spec says it must be null, so make it appear so"
      end

      operation 4206338 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node type. "
      end

      operation 4206466 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node name. "
      end

      operation 4206594 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deep-clone a document, including fixing ownerDoc for the cloned
children. Note that this requires bypassing the WRONG_DOCUMENT_ERR
protection. I've chosen to implement it by calling importNode
which is DOM Level 2.

@return org.w3c.dom.Node
@param deep boolean, iff true replicate children
"
      end

      operation 4206722 "cloneNode"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "newdoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

internal method to share code with subclass
"
      end

      operation 4206850 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(CoreDocumentImpl,boolean):void

Since a Document may contain at most one top-level Element child,
and at most one DocumentType declaraction, we need to subclass our
add-children methods to implement this constraint.
Since appendChild() is implemented as insertBefore(,null),
altering the latter fixes both.
<p>
While I'm doing so, I've taken advantage of the opportunity to
cache documentElement and docType so we don't have to
search for them.

REVISIT: According to the spec it is not allowed to alter neither the
document element nor the document type in any way
"
      end

      operation 4206978 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " insertBefore(Node,Node):Node

Since insertBefore caches the docElement (and, currently, docType),
removeChild has to know how to undo the cache

REVISIT: According to the spec it is not allowed to alter neither the
document element nor the document type in any way
"
      end

      operation 4207106 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeChild(Node):Node

Since we cache the docElement (and, currently, docType),
replaceChild has to update the cache

REVISIT: According to the spec it is not allowed to alter neither the
document element nor the document type in any way
"
      end

      operation 4207234 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " replaceChild(Node,Node):Node

Get Node text content
@since DOM Level 3
"
      end

      operation 4207362 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set Node text content
@since DOM Level 3
"
      end

      operation 4207490 "getFeature"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@since DOM Level 3
"
      end

      operation 4207618 "createAttribute"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Document methods

 factory methods

Factory method; creates an Attribute having this Document as its
OwnerDoc.

@param name The name of the attribute. Note that the attribute's value is
_not_ established at the factory; remember to set it!

@throws DOMException(INVALID_NAME_ERR)
if the attribute name is not acceptable.
"
      end

      operation 4207746 "createCDATASection"
	public return_type class_ref 649218 // CDATASection
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createAttribute(String):Attr

Factory method; creates a CDATASection having this Document as
its OwnerDoc.

@param data The initial contents of the CDATA

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents. (HTML
not yet implemented.)
"
      end

      operation 4207874 "createComment"
	public return_type class_ref 649474 // Comment
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method; creates a Comment having this Document as its
OwnerDoc.

@param data The initial contents of the Comment. "
      end

      operation 4208002 "createDocumentFragment"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method; creates a DocumentFragment having this Document
as its OwnerDoc.
"
      end

      operation 4208130 "createElement"
	public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "tagName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Factory method; creates an Element having this Document
as its OwnerDoc.

@param tagName The name of the element type to instantiate. For
XML, this is case-sensitive. For HTML, the tagName parameter may
be provided in any case, but it must be mapped to the canonical
uppercase form by the DOM implementation.

@throws DOMException(INVALID_NAME_ERR) if the tag name is not
acceptable.
"
      end

      operation 4208258 "createEntityReference"
	public return_type class_ref 650370 // EntityReference
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createElement(String):Element

Factory method; creates an EntityReference having this Document
as its OwnerDoc.

@param name The name of the Entity we wish to refer to

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
nonstandard entities are not permitted. (HTML not yet
implemented.)
"
      end

      operation 4208386 "createProcessingInstruction"
	public return_type class_ref 650242 // ProcessingInstruction
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createEntityReference(String):EntityReference

Factory method; creates a ProcessingInstruction having this Document
as its OwnerDoc.

@param target The target \"processor channel\"
@param data Parameter string to be passed to the target.

@throws DOMException(INVALID_NAME_ERR) if the target name is not
acceptable.

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents. (HTML
not yet implemented.)
"
      end

      operation 4208514 "createTextNode"
	public return_type class_ref 649090 // Text
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createProcessingInstruction(String,String):ProcessingInstruction

Factory method; creates a Text node having this Document as its
OwnerDoc.

@param data The initial contents of the Text.
"
      end

      operation 4208642 "getDoctype"
	public return_type class_ref 649986 // DocumentType
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " other document methods

For XML, this provides access to the Document Type Definition.
For HTML documents, and XML documents which don't specify a DTD,
it will be null.
"
      end

      operation 4208770 "getDocumentElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method, allowing direct access to the child node
which is considered the root of the actual document content. For
HTML, where it is legal to have more than one Element at the top
level of the document, we pick the one with the tagName
\"HTML\". For XML there should be only one top-level

(HTML not yet supported.)
"
      end

      operation 4208898 "getElementsByTagName"
	public return_type class_ref 333058 // NodeList
	nparams 1
	  param inout name "tagname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a <em>live</em> collection of all descendent Elements (not just
immediate children) having the specified tag name.

@param tagname The type of Element we want to gather. \"*\" will be
taken as a wildcard, meaning \"all elements in the document.\"

@see DeepNodeListImpl
"
      end

      operation 4209026 "getImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve information describing the abilities of this particular
DOM implementation. Intended to support applications that may be
using DOMs retrieved from several different sources, potentially
with different underlying representations.
"
      end

      operation 4209154 "setErrorChecking"
	public explicit_return_type "void"
	nparams 1
	  param inout name "check" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 properties

Sets whether the DOM implementation performs error checking
upon operations. Turning off error checking only affects
the following DOM checks:
<ul>
<li>Checking strings to make sure that all characters are
    legal XML characters
<li>Hierarchy checking such as allowed children, checks for
    cycles, etc.
</ul>
<p>
Turning off error checking does <em>not</em> turn off the
following checks:
<ul>
<li>Read only checks
<li>Checks related to DOM events
</ul>
"
      end

      operation 4209282 "setStrictErrorChecking"
	public explicit_return_type "void"
	nparams 1
	  param inout name "check" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 4209410 "getErrorChecking"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the DOM implementation performs error checking.
"
      end

      operation 4209538 "getStrictErrorChecking"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 4209666 "getInputEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 CR - Experimental. (Was getActualEncoding)

An attribute specifying the encoding used for this document
at the time of the parsing. This is <code>null</code> when
it is not known, such as when the <code>Document</code> was
created in memory.
@since DOM Level 3
"
      end

      operation 4209794 "setInputEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Internal
(Was a DOM L3 Core WD public interface method setActualEncoding )

An attribute specifying the actual encoding of this document. This is
<code>null</code> otherwise.
<br> This attribute represents the property [character encoding scheme]
defined in .
"
      end

      operation 4209922 "setXmlEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Internal
(Was a DOM L3 Core WD public interface method setXMLEncoding )

An attribute specifying, as part of the XML declaration,
the encoding of this document. This is null when unspecified.
"
      end

      operation 4210050 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4210178 "getXmlEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
The encoding of this document (part of XML Declaration)
"
      end

      operation 4210306 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4210434 "setXmlVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 CR - Experimental.
version - An attribute specifying, as part of the XML declaration,
the version number of this document.
"
      end

      operation 4210562 "setVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4210690 "getXmlVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
The version of this document (part of XML Declaration)
"
      end

      operation 4210818 "getVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4210946 "setXmlStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 CR - Experimental.

Xmlstandalone - An attribute specifying, as part of the XML declaration,
whether this document is standalone
@exception DOMException
   NOT_SUPPORTED_ERR: Raised if this document does not support the
  \"XML\" feature.
@since DOM Level 3
"
      end

      operation 4211074 "setStandalone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4211202 "getXmlStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
standalone that specifies whether this document is standalone
(part of XML Declaration)
"
      end

      operation 4211330 "getStandalone"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated This method is internal and only exists for
compatibility with older applications. New applications
should never call this method.
"
      end

      operation 4211458 "getDocumentURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
The location of the document or <code>null</code> if undefined.
<br>Beware that when the <code>Document</code> supports the feature
\"HTML\" , the href attribute of the HTML BASE element takes precedence
over this attribute.
@since DOM Level 3
"
      end

      operation 4211586 "renameNode"
	public return_type class_ref 317570 // Node
	nparams 3
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Renaming node
"
      end

      operation 4211714 "normalizeDocument"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3 WD - Experimental
 Normalize document.
"
      end

      operation 4211842 "getDomConfig"
	public return_type class_ref 650498 // DOMConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 CR - Experimental

 The configuration used when <code>Document.normalizeDocument</code> is
invoked.
@since DOM Level 3
"
      end

      operation 4211970 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute base URI of this node or null if the implementation
wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
null is returned.

@return The absolute base URI of this node or null.
@since DOM Level 3
"
      end

      operation 4212098 "setDocumentURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "documentURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 4212226 "getAsync"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM L3 LS


DOM Level 3 WD - Experimental.
Indicates whether the method load should be synchronous or
asynchronous. When the async attribute is set to <code>true</code>
the load method returns control to the caller before the document has
completed loading. The default value of this property is
<code>false</code>.
<br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR
if the implementation doesn't support the mode the attribute is being
set to. Should the DOM spec define the default value of this
property? What if implementing both async and sync IO is impractical
in some systems?  2001-09-14. default is <code>false</code> but we
need to check with Mozilla and IE.
"
      end

      operation 4212354 "setAsync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "async" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Indicates whether the method load should be synchronous or
asynchronous. When the async attribute is set to <code>true</code>
the load method returns control to the caller before the document has
completed loading. The default value of this property is
<code>false</code>.
<br>Setting the value of this attribute might throw NOT_SUPPORTED_ERR
if the implementation doesn't support the mode the attribute is being
set to. Should the DOM spec define the default value of this
property? What if implementing both async and sync IO is impractical
in some systems?  2001-09-14. default is <code>false</code> but we
need to check with Mozilla and IE.
"
      end

      operation 4212482 "abort"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
If the document is currently being loaded as a result of the method
<code>load</code> being invoked the loading and parsing is
immediately aborted. The possibly partial result of parsing the
document is discarded and the document is cleared.
"
      end

      operation 4212610 "load"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.

Replaces the content of the document with the result of parsing the
given URI. Invoking this method will either block the caller or
return to the caller immediately depending on the value of the async
attribute. Once the document is fully loaded a \"load\" event (as
defined in [<a href='http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331'>DOM Level 3 Events</a>]
, except that the <code>Event.targetNode</code> will be the document,
not an element) will be dispatched on the document. If an error
occurs, an implementation dependent \"error\" event will be dispatched
on the document. If this method is called on a document that is
currently loading, the current load is interrupted and the new URI
load is initiated.
<br> When invoking this method the parameters used in the
<code>DOMParser</code> interface are assumed to have their default
values with the exception that the parameters <code>\"entities\"</code>
, <code>\"normalize-characters\"</code>,
<code>\"check-character-normalization\"</code> are set to
<code>\"false\"</code>.
<br> The result of a call to this method is the same the result of a
call to <code>DOMParser.parseWithContext</code> with an input stream
referencing the URI that was passed to this call, the document as the
context node, and the action <code>ACTION_REPLACE_CHILDREN</code>.
@param uri The URI reference for the XML file to be loaded. If this is
 a relative URI, the base URI used by the implementation is
 implementation dependent.
@return If async is set to <code>true</code> <code>load</code> returns
  <code>true</code> if the document load was successfully initiated.
  If an error occurred when initiating the document load,
  <code>load</code> returns <code>false</code>.If async is set to
  <code>false</code> <code>load</code> returns <code>true</code> if
  the document was successfully loaded and parsed. If an error
  occurred when either loading or parsing the URI, <code>load</code>
  returns <code>false</code>.
"
      end

      operation 4212738 "loadXML"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "source" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Replace the content of the document with the result of parsing the
input string, this method is always synchronous.
@param source A string containing an XML document.
@return <code>true</code> if parsing the input string succeeded
  without errors, otherwise <code>false</code>.
"
      end

      operation 4212866 "saveXML"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Save the document or the given node and all its descendants to a string
(i.e. serialize the document or node).
<br>The parameters used in the <code>LSSerializer</code> interface are
assumed to have their default values when invoking this method.
<br> The result of a call to this method is the same the result of a
call to <code>LSSerializer.writeToString</code> with the document as
the node to write.
@param node Specifies what to serialize, if this parameter is
  <code>null</code> the whole document is serialized, if it's
  non-null the given node is serialized.
@return The serialized document or <code>null</code> in case an error
  occurred.
@exception DOMException
  WRONG_DOCUMENT_ERR: Raised if the node passed in as the node
  parameter is from an other document.
"
      end

      operation 4212994 "setMutationEvents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "set" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the DOM implementation generates mutation events upon
operations.
"
      end

      operation 4213122 "getMutationEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the DOM implementation generates mutation events.
"
      end

      operation 4213250 "createDocumentType"
	public return_type class_ref 649986 // DocumentType
	nparams 3
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "publicID" type class_ref 128130 // String
	  param inout name "systemID" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " non-DOM factory methods

NON-DOM Factory method; creates a DocumentType having this Document as
its OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building DTD
information unspecified.)

@param name The name of the Entity we wish to provide a value for.

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where DTDs
are not permitted. (HTML not yet implemented.)
"
      end

      operation 4213378 "createEntity"
	public return_type class_ref 651010 // Entity
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDocumentType(String):DocumentType

NON-DOM Factory method; creates an Entity having this Document as its
OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building DTD
information unspecified.)

@param name The name of the Entity we wish to provide a value for.

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
nonstandard entities are not permitted. (HTML not yet implemented.)
"
      end

      operation 4213506 "createNotation"
	public return_type class_ref 651138 // Notation
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createEntity(String):Entity

NON-DOM Factory method; creates a Notation having this Document as its
OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building DTD
information unspecified.)

@param name The name of the Notation we wish to describe

@throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
notations are not permitted. (HTML not yet implemented.)
"
      end

      operation 4213634 "createElementDefinition"
	public return_type class_ref 651266 // ElementDefinitionImpl
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createNotation(String):Notation

NON-DOM Factory method: creates an element definition. Element
definitions hold default attribute values.
"
      end

      operation 4213762 "getNodeNumber"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createElementDefinition(String):ElementDefinitionImpl
 other non-DOM methods

NON-DOM: Get the number associated with this document. Used to order
documents in the implementation.
"
      end

      operation 4213890 "getNodeNumber"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: Get a number associated with a node created with respect to this
document. Needed for compareDocumentPosition when nodes are disconnected.
This is only used on demand.
"
      end

      operation 4214018 "importNode"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "source" type class_ref 317570 // Node
	  param inout name "deep" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies a node from another document to this document. The new nodes are
created using this document's factory methods and are populated with the
data from the source's accessor methods defined by the DOM interfaces.
Its behavior is otherwise similar to that of cloneNode.
<p>
According to the DOM specifications, document nodes cannot be imported
and a NOT_SUPPORTED_ERR exception is thrown if attempted.
"
      end

      operation 4214146 "importNode"
	private return_type class_ref 317570 // Node
	nparams 4
	  param inout name "source" type class_ref 317570 // Node
	  param inout name "deep" explicit_type "boolean"
	  param inout name "cloningDoc" explicit_type "boolean"
	  param inout name "reversedIdentifiers" type class_ref 130178 // Map
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<Node, String> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " importNode(Node,boolean):Node

Overloaded implementation of DOM's importNode method. This method
provides the core functionality for the public importNode and cloneNode
methods.

The reversedIdentifiers parameter is provided for cloneNode to preserve
the document's identifiers. The Map has Elements as the keys and
their identifiers as the values. When an element is being imported, a
check is done for an associated identifier. If one exists, the identifier
is registered with the new, imported element. If reversedIdentifiers is
null, the parameter is not applied.
"
      end

      operation 4214274 "adoptNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "source" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " importNode(Node,boolean,boolean,Map):Node

DOM Level 3 WD - Experimental
Change the node's ownerDocument, and its subtree, to this Document

@param source The node to adopt.
@see #importNode
"
      end

      operation 4214402 "undeferChildren"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverses the DOM Tree and expands deferred nodes and their
children.

"
      end

      operation 4214530 "getElementById"
	public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "elementId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " identifier maintenence

Introduced in DOM Level 2
Returns the Element whose ID is given by elementId. If no such element
exists, returns null. Behavior is not defined if more than one element
has this ID.
<p>
Note: The DOM implementation must have information that says which
attributes are of type ID. Attributes with the name \"ID\" are not of type
ID unless so defined. Implementations that do not know whether
attributes are of type ID or not are expected to return null.
@see #getIdentifier
"
      end

      operation 4214658 "clearIdentifiers"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all identifiers from the ID table
"
      end

      operation 4214786 "putIdentifier"
	public explicit_return_type "void"
	nparams 2
	  param inout name "idName" type class_ref 128130 // String
	  param inout name "element" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an identifier name with a specified element node.
If the identifier is already registered, the new element
node replaces the previous node. If the specified element
node is null, removeIdentifier() is called.

@see #getIdentifier
@see #removeIdentifier
"
      end

      operation 4214914 "getIdentifier"
	public return_type class_ref 648194 // Element
	nparams 1
	  param inout name "idName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putIdentifier(String,Element)

Returns a previously registered element with the specified
identifier name, or null if no element is registered.

@see #putIdentifier
@see #removeIdentifier
"
      end

      operation 4215042 "removeIdentifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "idName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getIdentifier(String):Element

Removes a previously registered element with the specified
identifier name.

@see #putIdentifier
@see #getIdentifier
"
      end

      operation 4215170 "createElementNS"
	public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeIdentifier(String)

 DOM2: Namespace methods


Introduced in DOM Level 2. <p>
Creates an element of the given qualified name and namespace URI.
If the given namespaceURI is null or an empty string and the
qualifiedName has a prefix that is \"xml\", the created element
is bound to the predefined namespace
\"http://www.w3.org/XML/1998/namespace\" [Namespaces].
@param namespaceURI The namespace URI of the element to
                    create.
@param qualifiedName The qualified name of the element type to
                     instantiate.
@return Element A new Element object with the following attributes:
@throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
name contains an invalid character.
@throws DOMException NAMESPACE_ERR: Raised if the qualifiedName has a
                     prefix that is \"xml\" and the namespaceURI is
                     neither null nor an empty string nor
                     \"http://www.w3.org/XML/1998/namespace\", or
                     if the qualifiedName has a prefix different
                     from \"xml\" and the namespaceURI is null or an
                     empty string.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4215298 "createElementNS"
	public return_type class_ref 648194 // Element
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: a factory method used by the Xerces DOM parser
to create an element.

@param namespaceURI The namespace URI of the element to
                    create.
@param qualifiedName The qualified name of the element type to
                     instantiate.
@param localpart  The local name of the attribute to instantiate.

@return Element A new Element object with the following attributes:
@exception DOMException INVALID_CHARACTER_ERR: Raised if the specified
                  name contains an invalid character.
"
      end

      operation 4215426 "createAttributeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Creates an attribute of the given qualified name and namespace URI.
If the given namespaceURI is null or an empty string and the
qualifiedName has a prefix that is \"xml\", the created element
is bound to the predefined namespace
\"http://www.w3.org/XML/1998/namespace\" [Namespaces].

@param namespaceURI  The namespace URI of the attribute to
                     create. When it is null or an empty string,
                     this method behaves like createAttribute.
@param qualifiedName The qualified name of the attribute to
                     instantiate.
@return Attr         A new Attr object.
@throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
name contains an invalid character.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4215554 "createAttributeNS"
	public return_type class_ref 648066 // Attr
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: a factory method used by the Xerces DOM parser
to create an element.

@param namespaceURI  The namespace URI of the attribute to
                     create. When it is null or an empty string,
                     this method behaves like createAttribute.
@param qualifiedName The qualified name of the attribute to
                     instantiate.
@param localpart     The local name of the attribute to instantiate.

@return Attr         A new Attr object.
@throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
name contains an invalid character.
"
      end

      operation 4215682 "getElementsByTagNameNS"
	public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Returns a NodeList of all the Elements with a given local name and
namespace URI in the order in which they would be encountered in a
preorder traversal of the Document tree.
@param namespaceURI  The namespace URI of the elements to match
                     on. The special value \"*\" matches all
                     namespaces. When it is null or an empty
                     string, this method behaves like
                     getElementsByTagName.
@param localName     The local name of the elements to match on.
                     The special value \"*\" matches all local names.
@return NodeList     A new NodeList object containing all the matched
                     Elements.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4215810 "clone"
	public return_type class_ref 129538 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 129794 // CloneNotSupportedException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object methods

 Clone. "
      end

      operation 4215938 "isXMLName"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "s" type class_ref 128130 // String
	  param inout name "xml11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public static methods


Check the string against XML's definition of acceptable names for
elements and attributes and so on using the XMLCharacterProperties
utility class
"
      end

      operation 4216066 "isValidQName"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	  param inout name "xml11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXMLName(String):boolean

Checks if the given qualified name is legal with respect
to the version of XML to which this document must conform.

@param prefix prefix of qualified name
@param local local part of qualified name
"
      end

      operation 4216194 "isKidOK"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "child" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Uses the kidOK lookup table to check whether the proposed
tree structure is legal.
"
      end

      operation 4216322 "changed"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Denotes that this node has changed.
"
      end

      operation 4216450 "changes"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of changes to this node.
"
      end

      operation 4216578 "getNodeListCache"
	package return_type class_ref 649730 // NodeListCache
	nparams 1
	  param inout name "owner" type class_ref 649602 // ParentNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "  NodeListCache pool

Returns a NodeListCache for the given node.
"
      end

      operation 4216706 "freeNodeListCache"
	package explicit_return_type "void"
	nparams 1
	  param inout name "c" type class_ref 649730 // NodeListCache
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given NodeListCache in the free list.
Note: The owner node can keep using it until we reuse it
"
      end

      operation 4216834 "setUserData"
	public return_type class_ref 129538 // Object
	nparams 4
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "key" type class_ref 128130 // String
	  param inout name "data" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 647298 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associate an object to a key on this node. The object can later be
retrieved from this node by calling <code>getUserData</code> with the
same key.
@param n The node to associate the object to.
@param key The key to associate the object to.
@param data The object to associate to the given key, or
  <code>null</code> to remove any existing association to that key.
@param handler The handler to associate to that key, or
  <code>null</code>.
@return Returns the <code>DOMObject</code> previously associated to
  the given key on this node, or <code>null</code> if there was none.
@since DOM Level 3

REVISIT: we could use a free list of UserDataRecord here
"
      end

      operation 4216962 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the object associated to a key on a this node. The object
must first have been set to this node by calling
<code>setUserData</code> with the same key.
@param n The node the object is associated to.
@param key The key the object is associated to.
@return Returns the <code>DOMObject</code> associated to the given key
  on this node, or <code>null</code> if there was none.
@since DOM Level 3
"
      end

      operation 4217090 "getUserDataRecord"
	protected return_type class_ref 130178 // Map
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, UserDataRecord> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4217218 "removeUserDataTable"
	package return_type class_ref 130178 // Map
	nparams 1
	  param inout name "n" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, UserDataRecord> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove user data table for the given node.
@param n The node this operation applies to.
@return The removed table.
"
      end

      operation 4217346 "setUserDataTable"
	package explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "data" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String, UserDataRecord> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set user data table for the given node.
@param n The node this operation applies to.
@param data The user data table.
"
      end

      operation 4217474 "callUserDataHandlers"
	package explicit_return_type "void"
	nparams 3
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "c" type class_ref 317570 // Node
	  param in name "operation" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call user data handlers when a node is deleted (finalized)
@param n The node this operation applies to.
@param c The copy node or null.
@param operation The operation - import, clone, or delete.
"
      end

      operation 4217602 "callUserDataHandlers"
	package explicit_return_type "void"
	nparams 4
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "c" type class_ref 317570 // Node
	  param in name "operation" explicit_type "short"
	  param inout name "userData" type class_ref 130178 // Map
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String, UserDataRecord> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call user data handlers when a node is deleted (finalized)
@param n The node this operation applies to.
@param c The copy node or null.
@param operation The operation - import, clone, or delete.
@param handlers Data associated with n.
"
      end

      operation 4217730 "checkNamespaceWF"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "qname" type class_ref 128130 // String
	  param in name "colon1" explicit_type "int"
	  param in name "colon2" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call user data handlers to let them know the nodes they are related to
are being deleted. The alternative would be to do that on Node but
because the nodes are used as the keys we have a reference to them that
prevents them from being gc'ed until the document is. At the same time,
doing it here has the advantage of avoiding a finalize() method on Node,
which would affect all nodes and not just the ones that have a user
data.

 Temporarily comment out this method, because
 1. It seems that finalizers are not guaranteed to be called, so the
    functionality is not implemented.
 2. It affects the performance greatly in multi-thread environment.
 -SG
public void finalize() {
if (userData == null) {
return;
}
Enumeration nodes = userData.keys();
while (nodes.hasMoreElements()) {
Object node = nodes.nextElement();
Hashtable t = (Hashtable) userData.get(node);
if (t != null && !t.isEmpty()) {
Enumeration keys = t.keys();
while (keys.hasMoreElements()) {
String key = (String) keys.nextElement();
UserDataRecord r = (UserDataRecord) t.get(key);
if (r.fHandler != null) {
r.fHandler.handle(UserDataHandler.NODE_DELETED,
key, r.fData, null, null);
}
}
}
}
}"
      end

      operation 4217858 "checkDOMNSErr"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "namespace" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4217986 "checkQName"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "local" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the given qualified name is legal with respect
to the version of XML to which this document must conform.

@param prefix prefix of qualified name
@param local local part of qualified name
"
      end

      operation 4218114 "isXML11Version"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "We could have more xml versions in future , but for now we could
do with this to handle XML 1.0 and 1.1
"
      end

      operation 4218242 "isNormalizeDocRequired"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4218370 "isXMLVersionChanged"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "we should be checking the (elements, attribute, entity etc.) names only when
version of the document is changed."
      end

      operation 4218498 "setUserData"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 646786 // NodeImpl
	  param inout name "data" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: kept for backward compatibility
Store user data related to a given node
This is a place where we could use weak references! Indeed, the node
here won't be GC'ed as long as some user data is attached to it, since
the userData table will have a reference to the node.
"
      end

      operation 4218626 "getUserData"
	protected return_type class_ref 129538 // Object
	nparams 1
	  param inout name "n" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: kept for backward compatibility
Retreive user data related to a given node
"
      end

      operation 4218754 "addEventListener"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Event related methods overidden in subclass"
      end

      operation 4218882 "removeEventListener"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4219010 "copyEventListeners"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 646786 // NodeImpl
	  param inout name "tgt" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4219138 "dispatchEvent"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "event" type class_ref 647682 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4219266 "replacedText"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notification methods overidden in subclasses

A method to be called when some text was changed in a text node,
so that live objects can be notified.
"
      end

      operation 4219394 "deletedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when some text was deleted from a text node,
so that live objects can be notified.
"
      end

      operation 4219522 "insertedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when some text was inserted into a text node,
so that live objects can be notified.
"
      end

      operation 4219650 "modifyingCharacterData"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a character data node is about to be modified
"
      end

      operation 4219778 "modifiedCharacterData"
	package explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a character data node has been modified
"
      end

      operation 4219906 "insertingNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be inserted in the tree.
"
      end

      operation 4220034 "insertedNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "newInternal" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been inserted in the tree.
"
      end

      operation 4220162 "removingNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldChild" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be removed from the tree.
"
      end

      operation 4220290 "removedNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been removed from the tree.
"
      end

      operation 4220418 "replacingNode"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be replaced in the tree.
"
      end

      operation 4220546 "replacedNode"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been replaced in the tree.
"
      end

      operation 4220674 "replacingData"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a character data node is about to be replaced
"
      end

      operation 4220802 "replacedCharacterData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " method to be called when a character data node has been replaced.
"
      end

      operation 4220930 "modifiedAttrValue"
	package explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute value has been modified
"
      end

      operation 4221058 "setAttrNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "previous" type class_ref 647170 // AttrImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been set
"
      end

      operation 4221186 "removedAttrNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "oldOwner" type class_ref 646786 // NodeImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been removed
"
      end

      operation 4221314 "renamedAttrNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "oldAt" type class_ref 648066 // Attr
	  param inout name "newAt" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been renamed
"
      end

      operation 4221442 "renamedElement"
	package explicit_return_type "void"
	nparams 2
	  param inout name "oldEl" type class_ref 648194 // Element
	  param inout name "newEl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an element has been renamed
"
      end

      operation 4221570 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Serialized fields. Convert Maps to Hashtables for backward
compatibility.
"
      end

      operation 4221698 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 647042 "ElementImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Elements represent most of the \"markup\" and structure of the
document.  They contain both the data for the element itself
(element name and attributes), and any contained nodes, including
document text (as children).
<P>
Elements may have Attributes associated with them; the API for this is
defined in Node, but the function is implemented here. In general, XML
applications should retrive Attributes as Nodes, since they may contain
entity references and hence be a fairly complex sub-tree. HTML users will
be dealing with simple string values, and convenience methods are provided
to work in terms of Strings.
<P>
ElementImpl does not support Namespaces. ElementNSImpl, which inherits from
it, does.
@see ElementNSImpl

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@author Ralf Pfeiffer, IBM
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1789058 // <generalisation>
	relation 1789058 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1789058 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1789314 // <realization>
	relation 1789314 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1789314 // <realization>
	  b parent class_ref 648194 // Element
      end

      classrelation 1789442 // <realization>
	relation 1789442 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1789442 // <realization>
	  b parent class_ref 648322 // TypeInfo
      end

      attribute 900354 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 3717253516652722278L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1789570 // name (<unidirectional association>)
	relation 1789570 --->
	  a role_name "name" protected
	    comment " Data

 Element name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1789570 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1789698 // attributes (<unidirectional association>)
	relation 1789698 --->
	  a role_name "attributes" protected
	    comment " Attributes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1789698 // attributes (<unidirectional association>)
	  b parent class_ref 646402 // AttributeMap
      end

      operation 4253442 "ElementImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4253570 "ElementImpl"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for ElementNSImpl"
      end

      operation 4253698 "rename"
	package explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Support for DOM Level 3 renameNode method.
 Note: This only deals with part of the pb. CoreDocumentImpl
 does all the work."
      end

      operation 4253826 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4253954 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element name
"
      end

      operation 4254082 "getAttributes"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve all the Attributes as a set. Note that this API is inherited
from Node rather than specified on Element; in fact only Elements will
ever have Attributes, but they want to allow folks to \"blindly\" operate
on the tree as a set of Nodes.
"
      end

      operation 4254210 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributes():NamedNodeMap

Return a duplicate copy of this Element. Note that its children
will not be copied unless the \"deep\" flag is true, but Attributes
are <i>always</i> replicated.

@see org.w3c.dom.Node#cloneNode(boolean)
"
      end

      operation 4254338 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

DOM Level 3 WD - Experimental.
Retrieve baseURI
"
      end

      operation 4254466 "setOwnerDocument"
	package explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getBaseURI

NON-DOM
set the ownerDocument of this node, its children, and its attributes
"
      end

      operation 4254594 "getAttribute"
	public return_type class_ref 128130 // String
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Element methods


Look up a single Attribute by name. Returns the Attribute's
string value, or an empty string (NOT null!) to indicate that the
name did not map to a currently defined attribute.
<p>
Note: Attributes may contain complex node trees. This method
returns the \"flattened\" string obtained from Attribute.getValue().
If you need the structure information, see getAttributeNode().
"
      end

      operation 4254722 "getAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttribute(String):String

Look up a single Attribute by name. Returns the Attribute Node,
so its complete child tree is available. This could be important in
XML, where the string rendering may not be sufficient information.
<p>
If no matching attribute is available, returns null.
"
      end

      operation 4254850 "getElementsByTagName"
	public return_type class_ref 333058 // NodeList
	nparams 1
	  param inout name "tagname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeNode(String):Attr

Returns a NodeList of all descendent nodes (children,
grandchildren, and so on) which are Elements and which have the
specified tag name.
<p>
Note: NodeList is a \"live\" view of the DOM. Its contents will
change as the DOM changes, and alterations made to the NodeList
will be reflected in the DOM.

@param tagname The type of element to gather. To obtain a list of
all elements no matter what their names, use the wild-card tag
name \"*\".

@see DeepNodeListImpl
"
      end

      operation 4254978 "getTagName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the Element. Note that Element.nodeName() is
defined to also return the tag name.
<p>
This is case-preserving in XML. HTML should uppercasify it on the
way in.
"
      end

      operation 4255106 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In \"normal form\" (as read from a source file), there will never be two
Text children in succession. But DOM users may create successive Text
nodes in the course of manipulating the document. Normalize walks the
sub-tree and merges adjacent Texts, as if the DOM had been written out
and read back in again. This simplifies implementation of higher-level
functions that may want to assume that the document is in standard form.
<p>
To normalize a Document, normalize its top-level Element child.
<p>
As of PR-DOM-Level-1-19980818, CDATA -- despite being a subclass of
Text -- is considered \"markup\" and will _not_ be merged either with
normal Text or with other CDATASections.
"
      end

      operation 4255234 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " normalize()

Remove the named attribute from this Element. If the removed
Attribute has a default value, it is immediately replaced thereby.
<P>
The default logic is actually implemented in NamedNodeMapImpl.
PR-DOM-Level-1-19980818 doesn't fully address the DTD, so some
of this behavior is likely to change in future versions. ?????
<P>
Note that this call \"succeeds\" even if no attribute by this name
existed -- unlike removeAttributeNode, which will throw a not-found
exception in that case.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if the node is
readonly.
"
      end

      operation 4255362 "removeAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "oldAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeAttribute(String)

Remove the specified attribute/value pair. If the removed
Attribute has a default value, it is immediately replaced.
<p>
NOTE: Specifically removes THIS NODE -- not the node with this
name, nor the node with these contents. If the specific Attribute
object passed in is not stored in this Element, we throw a
DOMException.  If you really want to remove an attribute by name,
use removeAttribute().

@return the Attribute object that was removed.
@throws DOMException(NOT_FOUND_ERR) if oldattr is not an attribute of
this Element.
@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if the node is
readonly.
"
      end

      operation 4255490 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeAttributeNode(Attr):Attr

Add a new name/value pair, or replace the value of the existing
attribute having that name.

Note: this method supports only the simplest kind of Attribute,
one whose value is a string contained in a single Text node.
If you want to assert a more complex value (which XML permits,
though HTML doesn't), see setAttributeNode().

The attribute is created with specified=true, meaning it's an
explicit value rather than inherited from the DTD as a default.
Again, setAttributeNode can be used to achieve other results.

@throws DOMException(INVALID_NAME_ERR) if the name is not acceptable.
(Attribute factory will do that test for us.)

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if the node is
readonly.
"
      end

      operation 4255618 "setAttributeNode"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttribute(String,String)

Add a new attribute/value pair, or replace the value of the
existing attribute with that name.
<P>
This method allows you to add an Attribute that has already been
constructed, and hence avoids the limitations of the simple
setAttribute() call. It can handle attribute values that have
arbitrarily complex tree structure -- in particular, those which
had entity references mixed into their text.

@throws DOMException(INUSE_ATTRIBUTE_ERR) if the Attribute object
has already been assigned to another Element.
"
      end

      operation 4255746 "getAttributeNS"
	public return_type class_ref 128130 // String
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttributeNode(Attr):Attr

 DOM2: Namespace methods


Introduced in DOM Level 2. <p>

Retrieves an attribute value by local name and namespace URI.

@param namespaceURI
                     The namespace URI of the attribute to
                     retrieve.
@param localName     The local name of the attribute to retrieve.
@return String       The Attr value as a string, or empty string
                     if that attribute
                     does not have a specified or default value.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4255874 "setAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeNS(String,String):String

Introduced in DOM Level 2. <p>

 Adds a new attribute.
 If the given namespaceURI is null or an empty string and the
 qualifiedName has a prefix that is \"xml\", the new attribute is bound to
 the predefined namespace \"http://www.w3.org/XML/1998/namespace\"
 [Namespaces].  If an attribute with the same local name and namespace
 URI is already present on the element, its prefix is changed to be the
 prefix part of the qualifiedName, and its value is changed to be the
 value parameter. This value is a simple string, it is not parsed as it
 is being set. So any markup (such as syntax to be recognized as an
 entity reference) is treated as literal text, and needs to be
 appropriately escaped by the implementation when it is written out. In
 order to assign an attribute value that contains entity references, the
 user must create an Attr node plus any Text and EntityReference nodes,
 build the appropriate subtree, and use setAttributeNodeNS or
 setAttributeNode to assign it as the value of an attribute.

@param namespaceURI      The namespace URI of the attribute to create
                         or alter.
@param qualifiedName     The qualified name of the attribute to create or
                         alter.
@param value             The value to set in string form.
@throws                  INVALID_CHARACTER_ERR: Raised if the specified
                         name contains an invalid character.

@throws                  NO_MODIFICATION_ALLOWED_ERR: Raised if this
                         node is readonly.

@throws                  NAMESPACE_ERR: Raised if the qualifiedName
                         has a prefix that is \"xml\" and the namespaceURI
                         is neither null nor an empty string nor
                         \"http://www.w3.org/XML/1998/namespace\", or if
                         the qualifiedName has a prefix that is \"xmlns\"
                         but the namespaceURI is neither null nor an
                         empty string, or if if the qualifiedName has a
                         prefix different from \"xml\" and \"xmlns\" and the
                         namespaceURI is null or an empty string.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4256002 "removeAttributeNS"
	public explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttributeNS(String,String,String)

Introduced in DOM Level 2. <p>

Removes an attribute by local name and namespace URI. If the removed
attribute has a default value it is immediately replaced.
The replacing attribute has the same namespace URI and local name,
as well as the original prefix.<p>

@param namespaceURI  The namespace URI of the attribute to remove.

@param localName     The local name of the attribute to remove.
@throws                  NO_MODIFICATION_ALLOWED_ERR: Raised if this
                         node is readonly.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4256130 "getAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeAttributeNS(String,String)

Retrieves an Attr node by local name and namespace URI.

@param namespaceURI  The namespace URI of the attribute to
                     retrieve.
@param localName     The local name of the attribute to retrieve.
@return Attr         The Attr node with the specified attribute
                     local name and namespace
                     URI or null if there is no such attribute.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4256258 "setAttributeNodeNS"
	public return_type class_ref 648066 // Attr
	nparams 1
	  param inout name "newAttr" type class_ref 648066 // Attr
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getAttributeNodeNS(String,String):Attr

Introduced in DOM Level 2. <p>

Adds a new attribute. If an attribute with that local name and
namespace URI is already present in the element, it is replaced
by the new one.

@param Attr      The Attr node to add to the attribute list. When
                 the Node has no namespaceURI, this method behaves
                 like setAttributeNode.
@return Attr     If the newAttr attribute replaces an existing attribute
                 with the same local name and namespace URI, the *
                 previously existing Attr node is returned, otherwise
                 null is returned.
@throws          WRONG_DOCUMENT_ERR: Raised if newAttr
                 was created from a different document than the one that
                 created the element.

@throws          NO_MODIFICATION_ALLOWED_ERR: Raised if
                 this node is readonly.

@throws          INUSE_ATTRIBUTE_ERR: Raised if newAttr is
                 already an attribute of another Element object. The
                 DOM user must explicitly clone Attr nodes to re-use
                 them in other elements.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4256386 "setXercesAttributeNode"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "attr" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttributeNodeNS(Attr):Attr

NON-DOM: sets attribute node for this element
"
      end

      operation 4256514 "getXercesAttribute"
	protected explicit_return_type "int"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: get inded of an attribute
"
      end

      operation 4256642 "hasAttributes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2.
"
      end

      operation 4256770 "hasAttribute"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2.
"
      end

      operation 4256898 "hasAttributeNS"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2.
"
      end

      operation 4257026 "getElementsByTagNameNS"
	public return_type class_ref 333058 // NodeList
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Returns a NodeList of all the Elements with a given local name and
namespace URI in the order in which they would be encountered in a
preorder traversal of the Document tree, starting from this node.

@param namespaceURI The namespace URI of the elements to match
                    on. The special value \"*\" matches all
                    namespaces. When it is null or an empty
                    string, this method behaves like
                    getElementsByTagName.
@param localName    The local name of the elements to match on.
                    The special value \"*\" matches all local names.
@return NodeList    A new NodeList object containing all the matched
                    Elements.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4257154 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD- Experimental.
Override inherited behavior from NodeImpl and ParentNode to check on
attributes
"
      end

      operation 4257282 "setIdAttributeNode"
	public explicit_return_type "void"
	nparams 2
	  param inout name "at" type class_ref 648066 // Attr
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 4257410 "setIdAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 4257538 "setIdAttributeNS"
	public explicit_return_type "void"
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	  param inout name "makeId" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3: register the given attribute node as an ID attribute
"
      end

      operation 4257666 "getTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeName()
"
      end

      operation 4257794 "getTypeNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeNamespace()
"
      end

      operation 4257922 "isDerivedFrom"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "typeNamespaceArg" type class_ref 128130 // String
	  param inout name "typeNameArg" type class_ref 128130 // String
	  param in name "derivationMethod" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 3. <p>
Checks if a type is derived from another by restriction. See:
http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom

@param ancestorNS
       The namspace of the ancestor type declaration
@param ancestorName
       The name of the ancestor type declaration
@param type
       The reference type definition

@return boolean True if the type is derived by restriciton for the
        reference type
"
      end

      operation 4258050 "getSchemaTypeInfo"
	public return_type class_ref 648322 // TypeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method getSchemaTypeInfo.
@return TypeInfo
"
      end

      operation 4258178 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


NON-DOM: Subclassed to flip the attributes' readonly switch as well.
@see NodeImpl#setReadOnly
"
      end

      operation 4258306 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4258434 "moveSpecifiedAttributes"
	package explicit_return_type "void"
	nparams 1
	  param inout name "el" type class_ref 647042 // ElementImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()
 support for DOM Level 3 renameNode method
 @param el The element from which to take the attributes"
      end

      operation 4258562 "setupDefaultAttributes"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Setup the default attributes. "
      end

      operation 4258690 "reconcileDefaultAttributes"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Reconcile default attributes. "
      end

      operation 4258818 "getDefaultAttributes"
	protected return_type class_ref 646530 // NamedNodeMapImpl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Get the default attributes. "
      end
    end

    class 647170 "AttrImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Attribute represents an XML-style attribute of an
Element. Typically, the allowable values are controlled by its
declaration in the Document Type Definition (DTD) governing this
kind of document.
<P>
If the attribute has not been explicitly assigned a value, but has
been declared in the DTD, it will exist and have that default. Only
if neither the document nor the DTD specifies a value will the
Attribute really be considered absent and have no value; in that
case, querying the attribute will return null.
<P>
Attributes may have multiple children that contain their data. (XML
allows attributes to contain entity references, and tokenized
attribute types such as NMTOKENS may have a child for each token.)
For convenience, the Attribute object's getValue() method returns
the string version of the attribute's value.
<P>
Attributes are not children of the Elements they belong to, in the
usual sense, and have no valid Parent reference. However, the spec
says they _do_ belong to a specific Element, and an INUSE exception
is to be thrown if the user attempts to explicitly share them
between elements.
<P>
Note that Elements do not permit attributes to appear to be shared
(see the INUSE exception), so this object's mutability is
officially not an issue.
<p>
Note: The ownerNode attribute is used to store the Element the Attr
node is associated with. Attr nodes do not have parent nodes.
Besides, the getOwnerElement() method can be used to get the element node
this attribute is associated with.
<P>
AttrImpl does not support Namespaces. AttrNSImpl, which inherits from
it, does.

<p>AttrImpl used to inherit from ParentNode. It now directly inherits from
NodeImpl and provide its own implementation of the ParentNode's behavior.
The reason is that we now try and avoid to always create a Text node to
hold the value of an attribute. The DOM spec requires it, so we still have
to do it in case getFirstChild() is called for instance. The reason
attribute values are stored as a list of nodes is so that they can carry
more than a simple string. They can also contain EntityReference nodes.
However, most of the times people only have a single string that they only
set and get through Element.set/getAttribute or Attr.set/getValue. In this
new version, the Attr node has a value pointer which can either be the
String directly or a pointer to the first ChildNode. A flag tells which one
it currently is. Note that while we try to stick with the direct String as
much as possible once we've switched to a node there is no going back. This
is because we have no way to know whether the application keeps referring to
the node we once returned.
<p> The gain in memory varies on the density of attributes in the document.
But in the tests I've run I've seen up to 12% of memory gain. And the good
thing is that it also leads to a slight gain in speed because we allocate
fewer objects! I mean, that's until we have to actually create the node...
<p>
To avoid too much duplicated code, I got rid of ParentNode and renamed
ChildAndParentNode, which I never really liked, to ParentNode for
simplicity, this doesn't make much of a difference in memory usage because
there are only very few objects that are only a Parent. This is only true
now because AttrImpl now inherits directly from NodeImpl and has its own
implementation of the ParentNode's node behavior. So there is still some
duplicated code there.
<p>
This class doesn't directly support mutation events, however, it notifies
the document when mutations are performed so that the document class do so.

<p><b>WARNING</b>: Some of the code here is partially duplicated in
ParentNode, be careful to keep these two classes in sync!

@xerces.internal

@see AttrNSImpl

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@version $Id: AttrImpl.java,v 1.5 2008/06/10 00:59:32 joehw Exp $
@since PR-DOM-Level-1-19980818.

"
      classrelation 1773314 // <generalisation>
	relation 1773314 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1773314 // <generalisation>
	  b parent class_ref 646786 // NodeImpl
      end

      classrelation 1773570 // <realization>
	relation 1773570 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1773570 // <realization>
	  b parent class_ref 648066 // Attr
      end

      classrelation 1773698 // <realization>
	relation 1773698 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1773698 // <realization>
	  b parent class_ref 648322 // TypeInfo
      end

      attribute 891266 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7277707688218972102L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1773826 // DTD_URI (<unidirectional association>)
	relation 1773826 --->
	  a role_name "DTD_URI" init_value " \"http://www.w3.org/TR/REC-xml\"" class_relation const_relation package
	    comment " DTD namespace. *
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1773826 // DTD_URI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1773954 // value (<unidirectional association>)
	relation 1773954 --->
	  a role_name "value" init_value " null" protected
	    comment " Data

 This can either be a String or the first child node. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1773954 // value (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1774082 // name (<unidirectional association>)
	relation 1774082 --->
	  a role_name "name" protected
	    comment " Attribute name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774082 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1774210 // type (<unidirectional association>)
	relation 1774210 --->
	  a role_name "type" package
	    comment " Type information 
 REVISIT: we are losing the type information in DOM during serialization
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774210 // type (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1774338 // textNode (<unidirectional association>)
	relation 1774338 --->
	  a role_name "textNode" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774338 // textNode (<unidirectional association>)
	  b parent class_ref 648450 // TextImpl
      end

      operation 4181634 "AttrImpl"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


Attribute has no public constructor. Please use the factory
method in the Document class.
"
      end

      operation 4181762 "AttrImpl"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for AttrNSImpl"
      end

      operation 4181890 "rename"
	package explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Support for DOM Level 3 renameNode method.
 Note: This only deals with part of the pb. It is expected to be
 called after the Attr has been detached for one thing.
 CoreDocumentImpl does all the work."
      end

      operation 4182018 "makeChildNode"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " create a real text node as child if we don't have one yet"
      end

      operation 4182146 "setOwnerDocument"
	package explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM
set the ownerDocument of this node and its children
"
      end

      operation 4182274 "setIdAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: set the type of this attribute to be ID type.

@param id
"
      end

      operation 4182402 "isId"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3: isId"
      end

      operation 4182530 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods
"
      end

      operation 4182658 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4182786 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the attribute name
"
      end

      operation 4182914 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implicit in the rerouting of getNodeValue to getValue is the
need to redefine setNodeValue, for symmetry's sake.  Note that
since we're explicitly providing a value, Specified should be set
true.... even if that value equals the default.
"
      end

      operation 4183042 "getTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeName()
"
      end

      operation 4183170 "getTypeNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeNamespace()
"
      end

      operation 4183298 "getSchemaTypeInfo"
	public return_type class_ref 648322 // TypeInfo
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method getSchemaTypeInfo.
@return TypeInfo
"
      end

      operation 4183426 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In Attribute objects, NodeValue is considered a synonym for
Value.

@see #getValue()
"
      end

      operation 4183554 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Attr methods


In Attributes, NodeName is considered a synonym for the
attribute's Name
"
      end

      operation 4183682 "setValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newvalue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getName():String

The DOM doesn't clearly define what setValue(null) means. I've taken it
as \"remove all children\", which from outside should appear
similar to setting it to the empty string.
"
      end

      operation 4183810 "getValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setValue(String)

The \"string value\" of an Attribute is its text representation,
which in turn is a concatenation of the string values of its children.
"
      end

      operation 4183938 "getSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getValue():String

The \"specified\" flag is true if and only if this attribute's
value was explicitly specified in the original document. Note that
the implementation, not the user, is in charge of this
property. If the user asserts an Attribute value (even if it ends
up having the same value as the default), it is considered a
specified attribute. If you really want to revert to the default,
delete the attribute from the Element, and the Implementation will
re-assert the default (if any) in its place, with the appropriate
specified=false setting.
"
      end

      operation 4184066 "getElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSpecified():boolean

 Attr2 methods


Returns the element node that this attribute is associated with,
or null if the attribute has not been added to an element.

@see #getOwnerElement

@deprecated Previous working draft of DOM Level 2. New method
            is <tt>getOwnerElement()</tt>.
"
      end

      operation 4184194 "getOwnerElement"
	public return_type class_ref 648194 // Element
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element node that this attribute is associated with,
or null if the attribute has not been added to an element.

@since WD-DOM-Level-2-19990719
"
      end

      operation 4184322 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4184450 "setSpecified"
	public explicit_return_type "void"
	nparams 1
	  param inout name "arg" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " normalize()

 Public methods

 NON-DOM, for use by parser "
      end

      operation 4184578 "setType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setSpecified(boolean)

NON-DOM: used by the parser
@param type
"
      end

      operation 4184706 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Object methods

 NON-DOM method for debugging convenience "
      end

      operation 4184834 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this node has any children. Convenience shorthand
for (Node.getFirstChild()!=null)
"
      end

      operation 4184962 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a NodeList enumerating all children of this node. If there
are none, an (initially) empty NodeList is returned.
<p>
NodeLists are \"live\"; as children are added/removed the NodeList
will immediately reflect those changes. Also, the NodeList refers
to the actual nodes, so changes to those nodes made via the DOM tree
will be reflected in the NodeList and vice versa.
<p>
In this implementation, Nodes implement the NodeList interface and
provide their own getChildNodes() support. Other DOMs may solve this
differently.
"
      end

      operation 4185090 "getFirstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getChildNodes():NodeList
 The first child of this Node, or null if none. "
      end

      operation 4185218 "getLastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChild():Node
 The last child of this Node, or null if none. "
      end

      operation 4185346 "lastChild"
	package return_type class_ref 647938 // ChildNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChild():Node"
      end

      operation 4185474 "lastChild"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4185602 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move one or more node(s) to our list of children. Note that this
implicitly removes them from their previous parent.

@param newChild The Node to be moved to our subtree. As a
convenience feature, inserting a DocumentNode will instead insert
all its children.

@param refChild Current child which newChild should be placed
immediately before. If refChild is null, the insertion occurs
after all existing Nodes, like appendChild().

@return newChild, in its new state (relocated, or emptied in the case of
DocumentNode.)

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is an
ancestor of this node.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if refChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4185730 "internalInsertBefore"
	package return_type class_ref 317570 // Node
	nparams 3
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " insertBefore(Node,Node):Node
 NON-DOM INTERNAL: Within DOM actions,we sometimes need to be able
to control which mutation events are spawned. This version of the
insertBefore operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4185858 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalInsertBefore(Node,Node,int):Node

Remove a child from this Node. The removed child's subtree
remains intact so it may be re-inserted elsewhere.

@return oldChild, in its new state (removed).

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4185986 "internalRemoveChild"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "oldChild" type class_ref 317570 // Node
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeChild(Node) :Node
 NON-DOM INTERNAL: Within DOM actions,we sometimes need to be able
to control which mutation events are spawned. This version of the
removeChild operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4186114 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalRemoveChild(Node,int):Node

Make newChild occupy the location that oldChild used to
have. Note that newChild will first be removed from its previous
parent, if any. Equivalent to inserting newChild before oldChild,
then removing oldChild.

@return oldChild, in its new state (removed).

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is
one of our ancestors.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4186242 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NodeList methods


NodeList method: Count the immediate children of this node
@return int
"
      end

      operation 4186370 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLength():int

NodeList method: Return the Nth immediate child of this node, or
null if the index is out of bounds.
@return org.w3c.dom.Node
@param Index int
"
      end

      operation 4186498 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " item(int):Node

 DOM3


DOM Level 3 WD- Experimental.
Override inherited behavior from ParentNode to support deep equal.
isEqualNode is always deep on Attr nodes.
"
      end

      operation 4186626 "isDerivedFrom"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "typeNamespaceArg" type class_ref 128130 // String
	  param inout name "typeNameArg" type class_ref 128130 // String
	  param in name "derivationMethod" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 3. <p>
Checks if a type is derived from another by restriction. See:
http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom

@param ancestorNS
       The namspace of the ancestor type declaration
@param ancestorName
       The name of the ancestor type declaration
@param type
       The reference type definition

@return boolean True if the type is derived by restriciton for the
        reference type
"
      end

      operation 4186754 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


Override default behavior so that if deep is true, children are also
toggled.
@see Node
<P>
Note: this will not change the state of an EntityReference or its
children, which are always read-only.
"
      end

      operation 4186882 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setReadOnly(boolean,boolean)

 Protected methods


Override this method in subclass to hook in efficient
internal data structure.
"
      end

      operation 4187010 "checkNormalizationAfterInsert"
	package explicit_return_type "void"
	nparams 1
	  param inout name "insertedChild" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the normalized state of this node after inserting a child.
If the inserted child causes this node to be unnormalized, then this
node is flagged accordingly.
The conditions for changing the normalized state are:
<ul>
<li>The inserted child is a text node and one of its adjacent siblings
is also a text node.
<li>The inserted child is is itself unnormalized.
</ul>

@param insertedChild the child node that was inserted into this node

@throws NullPointerException if the inserted child is <code>null</code>
"
      end

      operation 4187138 "checkNormalizationAfterRemove"
	package explicit_return_type "void"
	nparams 1
	  param inout name "previousSibling" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkNormalizationAfterInsert(ChildNode)

Checks the normalized of this node after removing a child.
If the removed child causes this node to be unnormalized, then this
node is flagged accordingly.
The conditions for changing the normalized state are:
<ul>
<li>The removed child had two adjacent siblings that were text nodes.
</ul>

@param previousSibling the previous sibling of the removed child, or
<code>null</code>
"
      end

      operation 4187266 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkNormalizationAfterRemove(ChildNode)

 Serialization methods

 Serialize object. "
      end

      operation 4187394 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " writeObject(ObjectOutputStream)
 Deserialize object. "
      end
    end

    class 647938 "ChildNode"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ChildNode inherits from NodeImpl and adds the capability of being a child by
having references to its previous and next siblings.

@xerces.internal

"
      classrelation 1775106 // <generalisation>
	relation 1775106 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1775106 // <generalisation>
	  b parent class_ref 646786 // NodeImpl
      end

      attribute 891522 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -6112455738802414002L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1775234 // fBufferStr (<unidirectional association>)
	relation 1775234 --->
	  a role_name "fBufferStr" init_value " null" package
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1775234 // fBufferStr (<unidirectional association>)
	  b parent class_ref 166018 // StringBuffer
      end

      classrelation 1775362 // previousSibling (<unidirectional association>)
	relation 1775362 --->
	  a role_name "previousSibling" protected
	    comment " Data

 Previous sibling. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1775362 // previousSibling (<unidirectional association>)
	  b parent class_ref 647938 // ChildNode
      end

      classrelation 1775490 // nextSibling (<unidirectional association>)
	relation 1775490 --->
	  a role_name "nextSibling" protected
	    comment " Next sibling. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1775490 // nextSibling (<unidirectional association>)
	  b parent class_ref 647938 // ChildNode
      end

      operation 4189314 "ChildNode"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


No public constructor; only subclasses of Node should be
instantiated, and those normally via a Document's factory methods
<p>
Every Node knows what Document it belongs to.
"
      end

      operation 4189442 "ChildNode"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(CoreDocumentImpl)
 Constructor for serialization. "
      end

      operation 4189570 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


Returns a duplicate of a given node. You can consider this a
generic \"copy constructor\" for nodes. The newly returned object should
be completely independent of the source object's subtree, so changes
in one after the clone has been made will not affect the other.
<P>
Note: since we never have any children deep is meaningless here,
ParentNode overrides this behavior.
@see ParentNode

<p>
Example: Cloning a Text node will copy both the node and the text it
contains.
<p>
Example: Cloning something that has children -- Element or Attr, for
example -- will _not_ clone those children unless a \"deep clone\"
has been requested. A shallow clone of an Attr node will yield an
empty Attr of the same name.
<p>
NOTE: Clones will always be read/write, even if the node being cloned
is read-only, to permit applications using only the DOM API to obtain
editable copies of locked portions of the tree.
"
      end

      operation 4189698 "getParentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Returns the parent node of this node
"
      end

      operation 4189826 "parentNode"
	package return_type class_ref 646786 // NodeImpl
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "same as above but returns internal type
"
      end

      operation 4189954 "getNextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The next child of this node's parent, or null if none "
      end

      operation 4190082 "getPreviousSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The previous child of this node's parent, or null if none "
      end

      operation 4190210 "previousSibling"
	package return_type class_ref 647938 // ChildNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "same as above but returns internal type
"
      end
    end

    class 648450 "TextImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Text nodes hold the non-markup, non-Entity content of
an Element or Attribute.
<P>
When a document is first made available to the DOM, there is only
one Text object for each block of adjacent plain-text. Users (ie,
applications) may create multiple adjacent Texts during editing --
see {@link org.w3c.dom.Element#normalize} for discussion.
<P>
Note that CDATASection is a subclass of Text. This is conceptually
valid, since they're really just two different ways of quoting
characters when they're written out as part of an XML stream.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1776002 // <generalisation>
	relation 1776002 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1776002 // <generalisation>
	  b parent class_ref 648834 // CharacterDataImpl
      end

      classrelation 1776258 // <realization>
	relation 1776258 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1776258 // <realization>
	  b parent class_ref 648962 // CharacterData
      end

      classrelation 1776514 // <realization>
	relation 1776514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1776514 // <realization>
	  b parent class_ref 649090 // Text
      end

      attribute 891778 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5294980852957403469L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Private Data members


 Constants

 Serialization version. 
"
      end

      operation 4194050 "TextImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor "
      end

      operation 4194178 "TextImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Factory constructor. "
      end

      operation 4194306 "setValues"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: resets node and sets specified values for the current node

@param ownerDoc
@param data
"
      end

      operation 4194434 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4194562 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node name. "
      end

      operation 4194690 "setIgnorableWhitespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignore" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: Set whether this Text is ignorable whitespace.
"
      end

      operation 4194818 "isElementContentWhitespace"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setIgnorableWhitespace(boolean)

DOM L3 Core CR - Experimental

Returns whether this text node contains
element content whitespace</a>, often abusively called \"ignorable whitespace\".
The text node is determined to contain whitespace in element content
during the load of the document or if validation occurs while using
<code>Document.normalizeDocument()</code>.
@since DOM Level 3
"
      end

      operation 4194946 "getWholeText"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Returns all text of <code>Text</code> nodes logically-adjacent text
nodes to this node, concatenated in document order.
@since DOM Level 3
"
      end

      operation 4195074 "insertTextContent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "buf" type class_ref 166018 // StringBuffer
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "internal method taking a StringBuffer in parameter and inserts the
text content at the start of the buffer

@param buf
"
      end

      operation 4195202 "getWholeTextForward"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "buffer" type class_ref 166018 // StringBuffer
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the text of all logically-adjacent text nodes to the
right of this node
@param node
@param buffer
@param parent
@return true - if execution was stopped because the type of node
        other than EntityRef, Text, CDATA is encountered, otherwise
        return false
"
      end

      operation 4195330 "getWholeTextBackward"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "buffer" type class_ref 166018 // StringBuffer
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates the text of all logically-adjacent text nodes to the left of
the node
@param node
@param buffer
@param parent
@return true - if execution was stopped because the type of node
        other than EntityRef, Text, CDATA is encountered, otherwise
        return false
"
      end

      operation 4195458 "replaceWholeText"
	public return_type class_ref 649090 // Text
	nparams 1
	  param inout name "content" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the text of the current node and all logically-adjacent text
nodes with the specified text. All logically-adjacent text nodes are
removed including the current node unless it was the recipient of the
replacement text.

@param content
           The content of the replacing Text node.
@return text - The Text node created with the specified content.
@since DOM Level 3
"
      end

      operation 4195586 "canModifyPrev"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If any EntityReference to be removed has descendants that are not
EntityReference, Text, or CDATASection nodes, the replaceWholeText method
must fail before performing any modification of the document, raising a
DOMException with the code NO_MODIFICATION_ALLOWED_ERR. Traverse previous
siblings of the node to be replaced. If a previous sibling is an
EntityReference node, get it's last child. If the last child was a Text
or CDATASection node and its previous siblings are neither a replaceable
EntityReference or Text or CDATASection nodes, return false. IF the last
child was neither Text nor CDATASection nor a replaceable EntityReference
Node, then return true. If the last child was a Text or CDATASection node
any its previous sibling was not or was an EntityReference that did not
contain only Text or CDATASection nodes, return false. Check this
recursively for EntityReference nodes.

@param node
@return true - can replace text false - can't replace exception must be
        raised
"
      end

      operation 4195714 "canModifyNext"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If any EntityReference to be removed has descendants that are not
EntityReference, Text, or CDATASection nodes, the replaceWholeText method
must fail before performing any modification of the document, raising a
DOMException with the code NO_MODIFICATION_ALLOWED_ERR. Traverse previous
siblings of the node to be replaced. If a previous sibling is an
EntityReference node, get it's last child. If the first child was a Text
or CDATASection node and its next siblings are neither a replaceable
EntityReference or Text or CDATASection nodes, return false. IF the first
child was neither Text nor CDATASection nor a replaceable EntityReference
Node, then return true. If the first child was a Text or CDATASection
node any its next sibling was not or was an EntityReference that did not
contain only Text or CDATASection nodes, return false. Check this
recursively for EntityReference nodes.

@param node
@return true - can replace text false - can't replace exception must be
        raised
"
      end

      operation 4195842 "hasTextOnlyChildren"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if an EntityReference node has Text Only child nodes

@param node
@return true - Contains text only children
"
      end

      operation 4195970 "isIgnorableWhitespace"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: Returns whether this Text is ignorable whitespace.
"
      end

      operation 4196098 "splitText"
	public return_type class_ref 649090 // Text
	nparams 1
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isIgnorableWhitespace():boolean

 Text methods


Break a text node into two sibling nodes. (Note that if the current node
has no parent, they won't wind up as \"siblings\" -- they'll both be
orphans.)

@param offset
           The offset at which to split. If offset is at the end of the
           available data, the second node will be empty.

@return A reference to the new node (containing data after the offset
        point). The original node will contain data up to that point.

@throws DOMException(INDEX_SIZE_ERR)
            if offset is <0 or >length.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR)
            if node is read-only.
"
      end

      operation 4196226 "replaceData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " splitText(int):Text

NON-DOM (used by DOMParser): Reset data for the node.
"
      end

      operation 4196354 "removeData"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM (used by DOMParser: Sets data to empty string.
 Returns the value the data was set to.
"
      end
    end

    class 648578 "AttrNSImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "AttrNSImpl inherits from AttrImpl and adds namespace support.
<P>
The qualified name is the node name, and we store localName which is also
used in all queries. On the other hand we recompute the prefix when
necessary.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Andy Clark, IBM
@author Ralf Pfeiffer, IBM
@version $Id: AttrNSImpl.java,v 1.7 2010-11-01 04:39:37 joehw Exp $
"
      classrelation 1774466 // <generalisation>
	relation 1774466 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1774466 // <generalisation>
	  b parent class_ref 647170 // AttrImpl
      end

      attribute 891394 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -781906615369795414L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1774594 // xmlnsURI (<unidirectional association>)
	relation 1774594 --->
	  a role_name "xmlnsURI" init_value " \"http://www.w3.org/2000/xmlns/\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774594 // xmlnsURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1774722 // xmlURI (<unidirectional association>)
	relation 1774722 --->
	  a role_name "xmlURI" init_value " \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774722 // xmlURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1774850 // namespaceURI (<unidirectional association>)
	relation 1774850 --->
	  a role_name "namespaceURI" protected
	    comment " Data

 DOM2: Namespace URI. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774850 // namespaceURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1774978 // localName (<unidirectional association>)
	relation 1774978 --->
	  a role_name "localName" protected
	    comment " DOM2: localName. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1774978 // localName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4187522 "AttrNSImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor
"
      end

      operation 4187650 "AttrNSImpl"
	protected explicit_return_type ""
	nparams 3
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM2: Constructor for Namespace implementation.
"
      end

      operation 4187778 "setName"
	private explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4187906 "AttrNSImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " when local name is known"
      end

      operation 4188034 "AttrNSImpl"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for DeferredAttrImpl"
      end

      operation 4188162 "rename"
	package explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Support for DOM Level 3 renameNode method.
 Note: This only deals with part of the pb. It is expected to be
 called after the Attr has been detached for one thing.
 CoreDocumentImpl does all the work."
      end

      operation 4188290 "setValues"
	public explicit_return_type "void"
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: resets this node and sets specified values for the node

@param ownerDocument
@param namespaceURI
@param qualifiedName
@param localName
"
      end

      operation 4188418 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM2: Namespace methods


Introduced in DOM Level 2. <p>

The namespace URI of this node, or null if it is unspecified.<p>

This is not a computed value that is the result of a namespace lookup
based on an examination of the namespace declarations in scope. It is
merely the namespace URI given at creation time.<p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4188546 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

The namespace prefix of this node, or null if it is unspecified. <p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null. <p>

@since WD-DOM-Level-2-19990923
"
      end

      operation 4188674 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Note that setting this attribute changes the nodeName attribute, which
holds the qualified name, as well as the tagName and name attributes of
the Element and Attr interfaces, when applicable.<p>

@param prefix The namespace prefix of this node, or null(empty string) if it is unspecified.

@exception INVALID_CHARACTER_ERR
                  Raised if the specified
                  prefix contains an invalid character.
@exception DOMException
@since WD-DOM-Level-2-19990923
"
      end

      operation 4188802 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Returns the local part of the qualified name of this node.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4188930 "getTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeName()
"
      end

      operation 4189058 "isDerivedFrom"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "typeNamespaceArg" type class_ref 128130 // String
	  param inout name "typeNameArg" type class_ref 128130 // String
	  param in name "derivationMethod" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 3. <p>
Checks if a type is derived from another by restriction. See:
http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom

@param ancestorNS
       The namspace of the ancestor type declaration
@param ancestorName
       The name of the ancestor type declaration
@param type
       The reference type definition

@return boolean True if the type is derived by restriciton for the
        reference type
"
      end

      operation 4189186 "getTypeNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeNamespace()
"
      end
    end

    class 648706 "CDATASectionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "XML provides the CDATA markup to allow a region of text in which
most of the XML delimiter recognition does not take place. This is
intended to ease the task of quoting XML fragments and other
programmatic information in a document's text without needing to
escape these special characters. It's primarily a convenience feature
for those who are hand-editing XML.
<P>
CDATASection is an Extended DOM feature, and is not used in HTML
contexts.
<P>
Within the DOM, CDATASections are treated essentially as Text
blocks. Their distinct type is retained in order to allow us to
properly recreate the XML syntax when we write them out.
<P>
Reminder: CDATA IS NOT A COMPLETELY GENERAL SOLUTION; it can't
quote its own end-of-block marking. If you need to write out a
CDATA that contains the ]]> sequence, it's your responsibility to
split that string over two successive CDATAs at that time.
<P>
CDATA does not participate in Element.normalize() processing.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1776642 // <generalisation>
	relation 1776642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1776642 // <generalisation>
	  b parent class_ref 648450 // TextImpl
      end

      classrelation 1776898 // <realization>
	relation 1776898 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1776898 // <realization>
	  b parent class_ref 649218 // CDATASection
      end

      attribute 891906 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2372071297878177780L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      operation 4196482 "CDATASectionImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor for creating a CDATA section. "
      end

      operation 4196610 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4196738 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node name. "
      end
    end

    class 648834 "CharacterDataImpl"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "CharacterData is an abstract Node that can carry character data as its
Value.  It provides shared behavior for Text, CData, and
possibly other node types. All offsets are 0-based.
<p>
Since ProcessingInstructionImpl inherits from this class to reuse the
setNodeValue method, this class isn't declared as implementing the interface
CharacterData. This is done by relevant subclasses (TexImpl, CommentImpl).
<p>
This class doesn't directly support mutation events, however, it notifies
the document when mutations are performed so that the document class do so.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1775618 // <generalisation>
	relation 1775618 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1775618 // <generalisation>
	  b parent class_ref 647938 // ChildNode
      end

      attribute 891650 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7931170150428474230L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1775746 // data (<unidirectional association>)
	relation 1775746 --->
	  a role_name "data" protected
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1775746 // data (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1775874 // singletonNodeList (<unidirectional association>)
	relation 1775874 --->
	  a role_name "singletonNodeList" init_value " new NodeList() {
        public Node item(int index) { return null; }
        public int getLength() { return 0; }
    }" class_relation private
	    comment " Empty child nodes. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1775874 // singletonNodeList (<unidirectional association>)
	  b parent class_ref 333058 // NodeList
      end

      operation 4190338 "CharacterDataImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors
"
      end

      operation 4190466 "CharacterDataImpl"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Factory constructor. "
      end

      operation 4190594 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods

 Returns an empty node list. "
      end

      operation 4190722 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "returns the content of this node
"
      end

      operation 4190850 "setNodeValueInternal"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience wrapper for calling setNodeValueInternal when
we are not performing a replacement operation
"
      end

      operation 4190978 "setNodeValueInternal"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function added so that we can distinguish whether
 setNodeValue has been called from some other DOM functions.
 or by the client.<p>
 This is important, because we do one type of Range fix-up,
 from the high-level functions in CharacterData, and another
 type if the client simply calls setNodeValue(value).
"
      end

      operation 4191106 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the content, possibly firing related events,
and updating ranges (via notification to the document)
"
      end

      operation 4191234 "getData"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " CharacterData methods


Retrieve character data currently stored in this node.

@throws DOMExcpetion(DOMSTRING_SIZE_ERR) In some implementations,
the stored data may exceed the permitted length of strings. If so,
getData() will throw this DOMException advising the user to
instead retrieve the data in chunks via the substring() operation.
"
      end

      operation 4191362 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report number of characters currently stored in this node's
data. It may be 0, meaning that the value is an empty string.
"
      end

      operation 4191490 "appendData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenate additional characters onto the end of the data
stored in this node. Note that this, and insert(), are the paths
by which a DOM could wind up accumulating more data than the
language's strings can easily handle. (See above discussion.)

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is readonly.
"
      end

      operation 4191618 "deleteData"
	public explicit_return_type "void"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " appendData(String)

Remove a range of characters from the node's value. Throws a
DOMException if the offset is beyond the end of the
string. However, a deletion _count_ that exceeds the available
data is accepted as a delete-to-end request.

@throws DOMException(INDEX_SIZE_ERR) if offset is negative or
greater than length, or if count is negative.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is
readonly.
"
      end

      operation 4191746 "internalDeleteData"
	package explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " deleteData(int,int)
 NON-DOM INTERNAL: Within DOM actions, we sometimes need to be able
to control which mutation events are spawned. This version of the
deleteData operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4191874 "insertData"
	public explicit_return_type "void"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalDeleteData(int,int,boolean)

Insert additional characters into the data stored in this node,
at the offset specified.

@throws DOMException(INDEX_SIZE_ERR) if offset is negative or
greater than length.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is readonly.
"
      end

      operation 4192002 "internalInsertData"
	package explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param inout name "data" type class_ref 128130 // String
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " insertData(int,int)
 NON-DOM INTERNAL: Within DOM actions, we sometimes need to be able
to control which mutation events are spawned. This version of the
insertData operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4192130 "replaceData"
	public explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "data" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalInsertData(int,String,boolean)

Replace a series of characters at the specified (zero-based)
offset with a new string, NOT necessarily of the same
length. Convenience method, equivalent to a delete followed by an
insert. Throws a DOMException if the specified offset is beyond
the end of the existing data.

@param offset       The offset at which to begin replacing.

@param count        The number of characters to remove,
interpreted as in the delete() method.

@param data         The new string to be inserted at offset in place of
the removed data. Note that the entire string will
be inserted -- the count parameter does not affect
insertion, and the new data may be longer or shorter
than the substring it replaces.

@throws DOMException(INDEX_SIZE_ERR) if offset is negative or
greater than length, or if count is negative.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is
readonly.
"
      end

      operation 4192258 "setData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " replaceData(int,int,String)

Store character data into this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is readonly.
"
      end

      operation 4192386 "substringData"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Substring is more than a convenience function. In some
implementations of the DOM, where the stored data may exceed the
length that can be returned in a single string, the only way to
read it all is to extract it in chunks via this method.

@param offset        Zero-based offset of first character to retrieve.
@param count Number of characters to retrieve.

If the sum of offset and count exceeds the length, all characters
to end of data are returned.

@throws DOMException(INDEX_SIZE_ERR) if offset is negative or
greater than length, or if count is negative.

@throws DOMException(WSTRING_SIZE_ERR) In some implementations,
count may exceed the permitted length of strings. If so,
substring() will throw this DOMException advising the user to
instead retrieve the data in smaller chunks.
"
      end
    end

    class 649346 "CommentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an XML (or HTML) comment.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1777026 // <generalisation>
	relation 1777026 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1777026 // <generalisation>
	  b parent class_ref 648834 // CharacterDataImpl
      end

      classrelation 1777154 // <realization>
	relation 1777154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1777154 // <realization>
	  b parent class_ref 648962 // CharacterData
      end

      classrelation 1777410 // <realization>
	relation 1777410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1777410 // <realization>
	  b parent class_ref 649474 // Comment
      end

      attribute 892034 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2685736833408134044L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      operation 4196866 "CommentImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4196994 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4197122 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node name. "
      end
    end

    class 649602 "ParentNode"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ParentNode inherits from ChildNode and adds the capability of having child
nodes. Not every node in the DOM can have children, so only nodes that can
should inherit from this class and pay the price for it.
<P>
ParentNode, just like NodeImpl, also implements NodeList, so it can
return itself in response to the getChildNodes() query. This eliminiates
the need for a separate ChildNodeList object. Note that this is an
IMPLEMENTATION DETAIL; applications should _never_ assume that
this identity exists. On the other hand, subclasses may need to override
this, in case of conflicting names. This is the case for the classes
HTMLSelectElementImpl and HTMLFormElementImpl of the HTML DOM.
<P>
While we have a direct reference to the first child, the last child is
stored as the previous sibling of the first child. First child nodes are
marked as being so, and getNextSibling hides this fact.
<P>Note: Not all parent nodes actually need to also be a child. At some
point we used to have ParentNode inheriting from NodeImpl and another class
called ChildAndParentNode that inherited from ChildNode. But due to the lack
of multiple inheritance a lot of code had to be duplicated which led to a
maintenance nightmare. At the same time only a few nodes (Document,
DocumentFragment, Entity, and Attribute) cannot be a child so the gain in
memory wasn't really worth it. The only type for which this would be the
case is Attribute, but we deal with there in another special way, so this is
not applicable.
<p>
This class doesn't directly support mutation events, however, it notifies
the document when mutations are performed so that the document class do so.

<p><b>WARNING</b>: Some of the code here is partially duplicated in
AttrImpl, be careful to keep these two classes in sync!

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@version $Id: ParentNode.java,v 1.6 2009/07/21 20:30:28 joehw Exp $
"
      classrelation 1777538 // <generalisation>
	relation 1777538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1777538 // <generalisation>
	  b parent class_ref 647938 // ChildNode
      end

      attribute 892162 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2815829867152120872L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      classrelation 1777666 // ownerDocument (<unidirectional association>)
	relation 1777666 --->
	  a role_name "ownerDocument" protected
	    comment " Owner document. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1777666 // ownerDocument (<unidirectional association>)
	  b parent class_ref 646914 // CoreDocumentImpl
      end

      classrelation 1777794 // firstChild (<unidirectional association>)
	relation 1777794 --->
	  a role_name "firstChild" init_value " null" protected
	    comment " First child. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1777794 // firstChild (<unidirectional association>)
	  b parent class_ref 647938 // ChildNode
      end

      classrelation 1777922 // fNodeListCache (<unidirectional association>)
	relation 1777922 --->
	  a role_name "fNodeListCache" init_value " null" protected
	    comment " transients
 NodeList cache 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1777922 // fNodeListCache (<unidirectional association>)
	  b parent class_ref 649730 // NodeListCache
      end

      operation 4197250 "ParentNode"
	protected explicit_return_type ""
	nparams 1
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


No public constructor; only subclasses of ParentNode should be
instantiated, and those normally via a Document's factory methods
"
      end

      operation 4197378 "ParentNode"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor for serialization. "
      end

      operation 4197506 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NodeList methods


Returns a duplicate of a given node. You can consider this a
generic \"copy constructor\" for nodes. The newly returned object should
be completely independent of the source object's subtree, so changes
in one after the clone has been made will not affect the other.
<p>
Example: Cloning a Text node will copy both the node and the text it
contains.
<p>
Example: Cloning something that has children -- Element or Attr, for
example -- will _not_ clone those children unless a \"deep clone\"
has been requested. A shallow clone of an Attr node will yield an
empty Attr of the same name.
<p>
NOTE: Clones will always be read/write, even if the node being cloned
is read-only, to permit applications using only the DOM API to obtain
editable copies of locked portions of the tree.
"
      end

      operation 4197634 "getOwnerDocument"
	public return_type class_ref 378626 // Document
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Find the Document that this Node belongs to (the document in
whose context the Node was created). The Node may or may not
currently be part of that Document's actual contents.
"
      end

      operation 4197762 "ownerDocument"
	package return_type class_ref 646914 // CoreDocumentImpl
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "same as above but returns internal type and this one is not overridden
by CoreDocumentImpl to return null
"
      end

      operation 4197890 "setOwnerDocument"
	package explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM
set the ownerDocument of this node and its children
"
      end

      operation 4198018 "hasChildNodes"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this node has any children. Convenience shorthand
for (Node.getFirstChild()!=null)
"
      end

      operation 4198146 "getChildNodes"
	public return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a NodeList enumerating all children of this node. If there
are none, an (initially) empty NodeList is returned.
<p>
NodeLists are \"live\"; as children are added/removed the NodeList
will immediately reflect those changes. Also, the NodeList refers
to the actual nodes, so changes to those nodes made via the DOM tree
will be reflected in the NodeList and vice versa.
<p>
In this implementation, Nodes implement the NodeList interface and
provide their own getChildNodes() support. Other DOMs may solve this
differently.
"
      end

      operation 4198274 "getFirstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getChildNodes():NodeList
 The first child of this Node, or null if none. "
      end

      operation 4198402 "getLastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getFirstChild():Node
 The last child of this Node, or null if none. "
      end

      operation 4198530 "lastChild"
	package return_type class_ref 647938 // ChildNode
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChild():Node"
      end

      operation 4198658 "lastChild"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4198786 "insertBefore"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move one or more node(s) to our list of children. Note that this
implicitly removes them from their previous parent.

@param newChild The Node to be moved to our subtree. As a
convenience feature, inserting a DocumentNode will instead insert
all its children.

@param refChild Current child which newChild should be placed
immediately before. If refChild is null, the insertion occurs
after all existing Nodes, like appendChild().

@return newChild, in its new state (relocated, or emptied in the case of
DocumentNode.)

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is an
ancestor of this node.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if refChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4198914 "internalInsertBefore"
	package return_type class_ref 317570 // Node
	nparams 3
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "refChild" type class_ref 317570 // Node
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " insertBefore(Node,Node):Node
 NON-DOM INTERNAL: Within DOM actions,we sometimes need to be able
to control which mutation events are spawned. This version of the
insertBefore operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4199042 "removeChild"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalInsertBefore(Node,Node,boolean):Node

Remove a child from this Node. The removed child's subtree
remains intact so it may be re-inserted elsewhere.

@return oldChild, in its new state (removed).

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4199170 "internalRemoveChild"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "oldChild" type class_ref 317570 // Node
	  param inout name "replace" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " removeChild(Node) :Node
 NON-DOM INTERNAL: Within DOM actions,we sometimes need to be able
to control which mutation events are spawned. This version of the
removeChild operation allows us to do so. It is not intended
for use by application programs.
"
      end

      operation 4199298 "replaceChild"
	public return_type class_ref 317570 // Node
	nparams 2
	  param inout name "newChild" type class_ref 317570 // Node
	  param inout name "oldChild" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internalRemoveChild(Node,boolean):Node

Make newChild occupy the location that oldChild used to
have. Note that newChild will first be removed from its previous
parent, if any. Equivalent to inserting newChild before oldChild,
then removing oldChild.

@return oldChild, in its new state (removed).

@throws DOMException(HIERARCHY_REQUEST_ERR) if newChild is of a
type that shouldn't be a child of this node, or if newChild is
one of our ancestors.

@throws DOMException(WRONG_DOCUMENT_ERR) if newChild has a
different owner document than we do.

@throws DOMException(NOT_FOUND_ERR) if oldChild is not a child of
this node.

@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if this node is
read-only.
"
      end

      operation 4199426 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get Node text content
@since DOM Level 3
"
      end

      operation 4199554 "getTextContent"
	package explicit_return_type "void"
	nparams 1
	  param inout name "buf" type class_ref 166018 // StringBuffer
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internal method taking a StringBuffer in parameter"
      end

      operation 4199682 "hasTextContent"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "child" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internal method returning whether to take the given node's text content"
      end

      operation 4199810 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set Node text content
@since DOM Level 3
"
      end

      operation 4199938 "nodeListGetLength"
	private explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NodeList methods


Count the immediate children of this node.  Use to implement
NodeList.getLength().
@return int
"
      end

      operation 4200066 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " nodeListGetLength():int

NodeList method: Count the immediate children of this node
@return int
"
      end

      operation 4200194 "nodeListItem"
	private return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Nth immediate child of this node, or null if the index is
out of bounds.  Use to implement NodeList.item().
@param index int
"
      end

      operation 4200322 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " nodeListItem(int):Node

NodeList method: Return the Nth immediate child of this node, or
null if the index is out of bounds.
@return org.w3c.dom.Node
@param index int
"
      end

      operation 4200450 "getChildNodesUnoptimized"
	protected return_type class_ref 333058 // NodeList
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " item(int):Node

Create a NodeList to access children that is use by subclass elements
that have methods named getLength() or item(int).  ChildAndParentNode
optimizes getChildNodes() by implementing NodeList itself.  However if
a subclass Element implements methods with the same name as the NodeList
methods, they will override the actually methods in this class.
<p>
To use this method, the subclass should implement getChildNodes() and
have it call this method.  The resulting NodeList instance maybe
shared and cached in a transient field, but the cached value must be
cleared if the node is cloned.
"
      end

      operation 4200578 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getChildNodesUnoptimized():NodeList

 DOM2: methods, getters, setters


Override default behavior to call normalize() on this Node's
children. It is up to implementors or Node to override normalize()
to take action.
"
      end

      operation 4200706 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD- Experimental.
Override inherited behavior from NodeImpl to support deep equal.
"
      end

      operation 4200834 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


Override default behavior so that if deep is true, children are also
toggled.
@see Node
<P>
Note: this will not change the state of an EntityReference or its
children, which are always read-only.
"
      end

      operation 4200962 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setReadOnly(boolean,boolean)

 Protected methods


Override this method in subclass to hook in efficient
internal data structure.
"
      end

      operation 4201090 "checkNormalizationAfterInsert"
	package explicit_return_type "void"
	nparams 1
	  param inout name "insertedChild" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the normalized state of this node after inserting a child.
If the inserted child causes this node to be unnormalized, then this
node is flagged accordingly.
The conditions for changing the normalized state are:
<ul>
<li>The inserted child is a text node and one of its adjacent siblings
is also a text node.
<li>The inserted child is is itself unnormalized.
</ul>

@param insertedChild the child node that was inserted into this node

@throws NullPointerException if the inserted child is <code>null</code>
"
      end

      operation 4201218 "checkNormalizationAfterRemove"
	package explicit_return_type "void"
	nparams 1
	  param inout name "previousSibling" type class_ref 647938 // ChildNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkNormalizationAfterInsert(ChildNode)

Checks the normalized of this node after removing a child.
If the removed child causes this node to be unnormalized, then this
node is flagged accordingly.
The conditions for changing the normalized state are:
<ul>
<li>The removed child had two adjacent siblings that were text nodes.
</ul>

@param previousSibling the previous sibling of the removed child, or
<code>null</code>
"
      end

      operation 4201346 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkNormalizationAfterRemove(Node)

 Serialization methods

 Serialize object. "
      end

      operation 4201474 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ois" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 169730 // ClassNotFoundException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " writeObject(ObjectOutputStream)
 Deserialize object. "
      end

      class 649858 "UserDataRecord"
	visibility protected 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1778050 // <realization>
	  relation 1778050 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1778050 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 892290 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3258126977134310455L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Serialization version. 
"
	end

	classrelation 1778178 // fData (<unidirectional association>)
	  relation 1778178 --->
	    a role_name "fData" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1778178 // fData (<unidirectional association>)
	    b parent class_ref 129538 // Object
	end

	classrelation 1778306 // fHandler (<unidirectional association>)
	  relation 1778306 --->
	    a role_name "fHandler" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1778306 // fHandler (<unidirectional association>)
	    b parent class_ref 647298 // UserDataHandler
	end

	operation 4201602 "UserDataRecord"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "data" type class_ref 129538 // Object
	    param inout name "handler" type class_ref 647298 // UserDataHandler
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 649730 "NodeListCache"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used, via a pool managed on CoreDocumentImpl, in ParentNode to
improve performance of the NodeList accessors, getLength() and item(i).

@xerces.internal

@author Arnaud  Le Hors, IBM

@version $Id: NodeListCache.java,v 1.6 2010/07/20 20:25:25 joehw Exp $
"
      classrelation 1809794 // <realization>
	relation 1809794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1809794 // <realization>
	  b parent class_ref 136578 // Serializable
      end

      attribute 907778 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7927529254918631002L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      attribute 907906 "fLength"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cached node list length. 
"
      end

      attribute 908034 "fChildIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Last requested node index. 
"
      end

      classrelation 1809922 // fChild (<unidirectional association>)
	relation 1809922 --->
	  a role_name "fChild" package
	    comment " Last requested node. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809922 // fChild (<unidirectional association>)
	  b parent class_ref 647938 // ChildNode
      end

      classrelation 1810050 // fOwner (<unidirectional association>)
	relation 1810050 --->
	  a role_name "fOwner" package
	    comment " Owner of this cache 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810050 // fOwner (<unidirectional association>)
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1810178 // next (<unidirectional association>)
	relation 1810178 --->
	  a role_name "next" package
	    comment " Pointer to the next object on the list,
only meaningful when actully stored in the free list. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810178 // next (<unidirectional association>)
	  b parent class_ref 649730 // NodeListCache
      end

      operation 4312322 "NodeListCache"
	package explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 649602 // ParentNode
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 650626 "DocumentTypeImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a Document Type <em>declaraction</em> in
the document itself, <em>not</em> a Document Type Definition (DTD).
An XML document may (or may not) have such a reference.
<P>
DocumentType is an Extended DOM feature, used in XML documents but
not in HTML.
<P>
Note that Entities and Notations are no longer children of the
DocumentType, but are parentless nodes hung only in their
appropriate NamedNodeMaps.
<P>
This area is UNDERSPECIFIED IN REC-DOM-Level-1-19981001
Most notably, absolutely no provision was made for storing
and using Element and Attribute information. Nor was the linkage
between Entities and Entity References nailed down solidly.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1785986 // <generalisation>
	relation 1785986 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1785986 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1786242 // <realization>
	relation 1786242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1786242 // <realization>
	  b parent class_ref 649986 // DocumentType
      end

      attribute 899458 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7751299192316526485L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1786370 // name (<unidirectional association>)
	relation 1786370 --->
	  a role_name "name" protected
	    comment " Data

 Document type name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1786370 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1786498 // entities (<unidirectional association>)
	relation 1786498 --->
	  a role_name "entities" protected
	    comment " Entities. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1786498 // entities (<unidirectional association>)
	  b parent class_ref 646530 // NamedNodeMapImpl
      end

      classrelation 1786626 // notations (<unidirectional association>)
	relation 1786626 --->
	  a role_name "notations" protected
	    comment " Notations. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1786626 // notations (<unidirectional association>)
	  b parent class_ref 646530 // NamedNodeMapImpl
      end

      classrelation 1786754 // elements (<unidirectional association>)
	relation 1786754 --->
	  a role_name "elements" protected
	    comment " NON-DOM
 Elements. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1786754 // elements (<unidirectional association>)
	  b parent class_ref 646530 // NamedNodeMapImpl
      end

      classrelation 1786882 // publicID (<unidirectional association>)
	relation 1786882 --->
	  a role_name "publicID" protected
	    comment " DOM2: support public ID.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1786882 // publicID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1787010 // systemID (<unidirectional association>)
	relation 1787010 --->
	  a role_name "systemID" protected
	    comment " DOM2: support system ID.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1787010 // systemID (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1787138 // internalSubset (<unidirectional association>)
	relation 1787138 --->
	  a role_name "internalSubset" protected
	    comment " DOM2: support internal subset.
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1787138 // internalSubset (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 899586 "doctypeNumber"
	private explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The following are required for compareDocumentPosition

 Doctype number.   Doc types which have no owner may be assigned
 a number, on demand, for ordering purposes for compareDocumentPosition
"
      end

      classrelation 1787266 // userData (<unidirectional association>)
	relation 1787266 --->
	  a role_name "userData" init_value "  null" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, UserDataRecord> ${name}${value};
"
	    classrelation_ref 1787266 // userData (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      classrelation 1787394 // serialPersistentFields (<unidirectional association>)
	relation 1787394 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
        new ObjectStreamField[] {
            new ObjectStreamField(\"name\", String.class),
            new ObjectStreamField(\"entities\", NamedNodeMapImpl.class),
            new ObjectStreamField(\"notations\", NamedNodeMapImpl.class),
            new ObjectStreamField(\"elements\", NamedNodeMapImpl.class),
            new ObjectStreamField(\"publicID\", String.class),
            new ObjectStreamField(\"systemID\", String.class),
            new ObjectStreamField(\"internalSubset\", String.class),
            new ObjectStreamField(\"doctypeNumber\", int.class),
            new ObjectStreamField(\"userData\", Hashtable.class),
        }" class_relation const_relation private
	    comment "
@serialField name String document type name
@serialField entities NamedNodeMapImpl entities
@serialField notations NamedNodeMapImpl notations
@serialField elements NamedNodeMapImpl elements
@serialField publicID String support public ID
@serialField systemID String support system ID
@serialField internalSubset String support internal subset
@serialField doctypeNumber int Doctype number
@serialField userData Hashtable user data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1787394 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 4245634 "DocumentTypeImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory method for creating a document type node. "
      end

      operation 4245762 "DocumentTypeImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "publicID" type class_ref 128130 // String
	  param inout name "systemID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(CoreDocumentImpl,String)
 Factory method for creating a document type node. "
      end

      operation 4245890 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(CoreDocumentImpl,String)

 DOM2: methods.


Introduced in DOM Level 2. <p>

Return the public identifier of this Document type.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4246018 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Return the system identifier of this Document type.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4246146 "setInternalSubset"
	public explicit_return_type "void"
	nparams 1
	  param inout name "internalSubset" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM. <p>

Set the internalSubset given as a string.
"
      end

      operation 4246274 "getInternalSubset"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Return the internalSubset given as a string.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4246402 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4246530 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the document type name
"
      end

      operation 4246658 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clones the node. "
      end

      operation 4246786 "getTextContent"
	public return_type class_ref 128130 // String
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Get Node text content
@since DOM Level 3
"
      end

      operation 4246914 "setTextContent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "textContent" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set Node text content
@since DOM Level 3
"
      end

      operation 4247042 "isEqualNode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "arg" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD- Experimental.
Override inherited behavior from ParentNodeImpl to support deep equal.
"
      end

      operation 4247170 "setOwnerDocument"
	package explicit_return_type "void"
	nparams 1
	  param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "end isEqualNode

NON-DOM
set the ownerDocument of this node and its children
"
      end

      operation 4247298 "getNodeNumber"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM
Get the number associated with this doctype.
"
      end

      operation 4247426 "getName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DocumentType methods


Name of this document type. If we loaded from a DTD, this should
be the name immediately following the DOCTYPE keyword.
"
      end

      operation 4247554 "getEntities"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getName():String

Access the collection of general Entities, both external and
internal, defined in the DTD. For example, in:
<p>
<pre>
  &lt;!doctype example SYSTEM \"ex.dtd\" [
    &lt;!ENTITY foo \"foo\"&gt;
    &lt;!ENTITY bar \"bar\"&gt;
    &lt;!ENTITY % baz \"baz\"&gt;
    ]&gt;
</pre>
<p>
The Entities map includes foo and bar, but not baz. It is promised that
only Nodes which are Entities will exist in this NamedNodeMap.
<p>
For HTML, this will always be null.
<p>
Note that \"built in\" entities such as &amp; and &lt; should be
converted to their actual characters before being placed in the DOM's
contained text, and should be converted back when the DOM is rendered
as XML or HTML, and hence DO NOT appear here.
"
      end

      operation 4247682 "getNotations"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Access the collection of Notations defined in the DTD.  A
notation declares, by name, the format of an XML unparsed entity
or is used to formally declare a Processing Instruction target.
"
      end

      operation 4247810 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods


NON-DOM: Subclassed to flip the entities' and notations' readonly switch
as well.
@see NodeImpl#setReadOnly
"
      end

      operation 4247938 "getElements"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setReadOnly(boolean,boolean)

NON-DOM: Access the collection of ElementDefinitions.
@see ElementDefinitionImpl
"
      end

      operation 4248066 "setUserData"
	public return_type class_ref 129538 // Object
	nparams 3
	  param inout name "key" type class_ref 128130 // String
	  param inout name "data" type class_ref 129538 // Object
	  param inout name "handler" type class_ref 647298 // UserDataHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4248194 "getUserData"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "key" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4248322 "getUserDataRecord"
	protected return_type class_ref 130178 // Map
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, UserDataRecord> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4248450 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Serialized fields. Convert Map to Hashtable for backward
compatibility.
"
      end

      operation 4248578 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 650754 "DOMNormalizer"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class adds implementation for normalizeDocument method.
It acts as if the document was going through a save and load cycle, putting
the document in a \"normal\" form. The actual result depends on the features being set
and governing what operations actually take place. See setNormalizationFeature for details.
Noticeably this method normalizes Text nodes, makes the document \"namespace wellformed\",
according to the algorithm described below in pseudo code, by adding missing namespace
declaration attributes and adding or changing namespace prefixes, updates the replacement
tree of EntityReference nodes, normalizes attribute values, etc.
Mutation events, when supported, are generated to reflect the changes occuring on the
document.
See Namespace normalization for details on how namespace declaration attributes and prefixes
are normalized.

NOTE: There is an initial support for DOM revalidation with XML Schema as a grammar.
The tree might not be validated correctly if entityReferences, CDATA sections are
present in the tree. The PSVI information is not exposed, normalized data (including element
default content is not available).

@xerces.experimental

@author Elena Litani, IBM
@author Neeraj Bajaj, Sun Microsystems, inc.
@version $Id: DOMNormalizer.java,v 1.9 2010-11-01 04:39:38 joehw Exp $
"
      classrelation 1804930 // <realization>
	relation 1804930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1804930 // <realization>
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      attribute 905986 "DEBUG_ND"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " constants

 Debug normalize document
"
      end

      attribute 906114 "DEBUG"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Debug namespace fix up algorithm
"
      end

      attribute 906242 "DEBUG_EVENTS"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Debug document handler events 
"
      end

      classrelation 1805058 // PREFIX (<unidirectional association>)
	relation 1805058 --->
	  a role_name "PREFIX" init_value " \"NS\"" class_relation const_relation protected
	    comment " prefix added by namespace fixup algorithm should follow a pattern \"NS\" + index
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805058 // PREFIX (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1805186 // fConfiguration (<unidirectional association>)
	relation 1805186 --->
	  a role_name "fConfiguration" init_value " null" protected
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805186 // fConfiguration (<unidirectional association>)
	  b parent class_ref 650882 // DOMConfigurationImpl
      end

      classrelation 1805314 // fDocument (<unidirectional association>)
	relation 1805314 --->
	  a role_name "fDocument" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805314 // fDocument (<unidirectional association>)
	  b parent class_ref 646914 // CoreDocumentImpl
      end

      class 661890 "XMLAttributesProxy"
	visibility protected 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1807362 // <realization>
	  relation 1807362 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1807362 // <realization>
	    b parent class_ref 661506 // XMLAttributes
	end

	classrelation 1807490 // fAttributes (<unidirectional association>)
	  relation 1807490 --->
	    a role_name "fAttributes" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1807490 // fAttributes (<unidirectional association>)
	    b parent class_ref 646402 // AttributeMap
	end

	classrelation 1807618 // fDocument (<unidirectional association>)
	  relation 1807618 --->
	    a role_name "fDocument" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1807618 // fDocument (<unidirectional association>)
	    b parent class_ref 646914 // CoreDocumentImpl
	end

	classrelation 1807746 // fElement (<unidirectional association>)
	  relation 1807746 --->
	    a role_name "fElement" protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1807746 // fElement (<unidirectional association>)
	    b parent class_ref 647042 // ElementImpl
	end

	classrelation 1807874 // fAugmentations (<unidirectional association>)
	  relation 1807874 --->
	    a role_name "fAugmentations" init_value " new Vector(5)" const_relation protected
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1807874 // fAugmentations (<unidirectional association>)
	    b parent class_ref 141442 // Vector
	end

	operation 4299778 "setAttributes"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "attributes" type class_ref 646402 // AttributeMap
	    param inout name "doc" type class_ref 646914 // CoreDocumentImpl
	    param inout name "elem" type class_ref 647042 // ElementImpl
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4299906 "addAttribute"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "qname" type class_ref 661378 // QName
	    param inout name "attrType" type class_ref 128130 // String
	    param inout name "attrValue" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method adds default declarations
@see com.sun.org.apache.xerces.internal.xni.XMLAttributes#addAttribute(QName, String, String)
"
	end

	operation 4300034 "removeAllAttributes"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300162 "removeAttributeAt"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "attrIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300290 "getLength"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300418 "getIndex"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "qName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300546 "getIndex"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "uri" type class_ref 128130 // String
	    param inout name "localPart" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300674 "setName"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrName" type class_ref 661378 // QName
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300802 "getName"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrName" type class_ref 661378 // QName
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4300930 "getPrefix"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301058 "getURI"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301186 "getLocalName"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301314 "getQName"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301442 "getQualifiedName"
	  public return_type class_ref 661378 // QName
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301570 "setType"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrType" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301698 "getType"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301826 "getType"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "qName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4301954 "getType"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param inout name "uri" type class_ref 128130 // String
	    param inout name "localName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302082 "setValue"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrValue" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302210 "setValue"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrValue" type class_ref 128130 // String
	    param inout name "value" type class_ref 661250 // XMLString
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302338 "getValue"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302466 "getValue"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param inout name "qName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302594 "getValue"
	  public return_type class_ref 128130 // String
	  nparams 2
	    param inout name "uri" type class_ref 128130 // String
	    param inout name "localName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302722 "setNonNormalizedValue"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "attrValue" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302850 "getNonNormalizedValue"
	  public return_type class_ref 128130 // String
	  nparams 1
	    param in name "attrIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4302978 "setSpecified"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "specified" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4303106 "isSpecified"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "attrIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4303234 "getAugmentations"
	  public return_type class_ref 661122 // Augmentations
	  nparams 1
	    param in name "attributeIndex" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4303362 "getAugmentations"
	  public return_type class_ref 661122 // Augmentations
	  nparams 2
	    param inout name "uri" type class_ref 128130 // String
	    param inout name "localPart" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4303490 "getAugmentations"
	  public return_type class_ref 661122 // Augmentations
	  nparams 1
	    param inout name "qName" type class_ref 128130 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4303618 "setAugmentations"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "attrIndex" explicit_type "int"
	    param inout name "augs" type class_ref 661122 // Augmentations
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the augmentations of the attribute at the specified index.

@param attrIndex The attribute index.
@param augs      The augmentations.
"
	end
      end

      classrelation 1805442 // fAttrProxy (<unidirectional association>)
	relation 1805442 --->
	  a role_name "fAttrProxy" init_value " new XMLAttributesProxy()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805442 // fAttrProxy (<unidirectional association>)
	  b parent class_ref 661890 // XMLAttributesProxy
      end

      classrelation 1805570 // fQName (<unidirectional association>)
	relation 1805570 --->
	  a role_name "fQName" init_value " new QName()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805570 // fQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1805698 // fValidationHandler (<unidirectional association>)
	relation 1805698 --->
	  a role_name "fValidationHandler" protected
	    comment " Validation handler represents validator instance. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805698 // fValidationHandler (<unidirectional association>)
	  b parent class_ref 652162 // RevalidationHandler
      end

      classrelation 1805826 // fSymbolTable (<unidirectional association>)
	relation 1805826 --->
	  a role_name "fSymbolTable" protected
	    comment " symbol table 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805826 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 1805954 // fErrorHandler (<unidirectional association>)
	relation 1805954 --->
	  a role_name "fErrorHandler" protected
	    comment " error handler. may be null. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1805954 // fErrorHandler (<unidirectional association>)
	  b parent class_ref 662018 // DOMErrorHandler
      end

      classrelation 1806082 // fError (<unidirectional association>)
	relation 1806082 --->
	  a role_name "fError" init_value " new DOMErrorImpl()" const_relation private
	    comment "
Cached {@link DOMError} impl.
The same object is re-used to report multiple errors.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806082 // fError (<unidirectional association>)
	  b parent class_ref 659330 // DOMErrorImpl
      end

      attribute 906370 "fNamespaceValidation"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Validation against namespace aware grammar
"
      end

      attribute 906498 "fPSVI"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Update PSVI information in the tree
"
      end

      classrelation 1806210 // fNamespaceContext (<unidirectional association>)
	relation 1806210 --->
	  a role_name "fNamespaceContext" init_value " new NamespaceSupport()" const_relation protected
	    comment " The namespace context of this document: stores namespaces in scope 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806210 // fNamespaceContext (<unidirectional association>)
	  b parent class_ref 660994 // NamespaceContext
      end

      classrelation 1806338 // fLocalNSBinder (<unidirectional association>)
	relation 1806338 --->
	  a role_name "fLocalNSBinder" init_value " new NamespaceSupport()" const_relation protected
	    comment " Stores all namespace bindings on the current element 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806338 // fLocalNSBinder (<unidirectional association>)
	  b parent class_ref 660994 // NamespaceContext
      end

      classrelation 1806466 // fAttributeList (<unidirectional association>)
	relation 1806466 --->
	  a role_name "fAttributeList" init_value " new ArrayList(5)" const_relation protected
	    comment " list of attributes 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806466 // fAttributeList (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      classrelation 1806594 // fLocator (<unidirectional association>)
	relation 1806594 --->
	  a role_name "fLocator" init_value " new DOMLocatorImpl()" const_relation protected
	    comment " DOM Locator -  for namespace fixup algorithm 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806594 // fLocator (<unidirectional association>)
	  b parent class_ref 659714 // DOMLocatorImpl
      end

      classrelation 1806722 // fCurrentNode (<unidirectional association>)
	relation 1806722 --->
	  a role_name "fCurrentNode" init_value " null" protected
	    comment " for setting the PSVI 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806722 // fCurrentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1806850 // fAttrQName (<unidirectional association>)
	relation 1806850 --->
	  a role_name "fAttrQName" init_value " new QName()" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806850 // fAttrQName (<unidirectional association>)
	  b parent class_ref 661378 // QName
      end

      classrelation 1806978 // fNormalizedValue (<unidirectional association>)
	relation 1806978 --->
	  a role_name "fNormalizedValue" init_value " new XMLString(new char[16], 0, 0)" const_relation package
	    comment " attribute value normalization
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1806978 // fNormalizedValue (<unidirectional association>)
	  b parent class_ref 661250 // XMLString
      end

      classrelation 1807106 // abort (<unidirectional association>)
	relation 1807106 --->
	  a role_name "abort" init_value " new RuntimeException()" class_relation const_relation public
	    comment "
If the user stops the process, this exception will be thrown.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1807106 // abort (<unidirectional association>)
	  b parent class_ref 214786 // RuntimeException
      end

      classrelation 1807234 // fDTDValidator (<unidirectional association>)
	relation 1807234 --->
	  a role_name "fDTDValidator" private
	    comment "DTD validator
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1807234 // fDTDValidator (<unidirectional association>)
	  b parent class_ref 662146 // XMLDTDValidator
      end

      attribute 906626 "allWhitespace"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Check if element content is all \"ignorable whitespace\"
"
      end

      operation 4294146 "DOMNormalizer"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor
"
      end

      operation 4294274 "normalizeDocument"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "document" type class_ref 646914 // CoreDocumentImpl
	  param inout name "config" type class_ref 650882 // DOMConfigurationImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalizes document.
Note: reset() must be called before this method.
"
      end

      operation 4294402 "normalizeNode"
	protected return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
This method acts as if the document was going through a save
and load cycle, putting the document in a \"normal\" form. The actual result
depends on the features being set and governing what operations actually
take place. See setNormalizationFeature for details. Noticeably this method
normalizes Text nodes, makes the document \"namespace wellformed\",
according to the algorithm described below in pseudo code, by adding missing
namespace declaration attributes and adding or changing namespace prefixes, updates
the replacement tree of EntityReference nodes,normalizes attribute values, etc.

@param node   Modified node or null. If node is returned, we need
              to normalize again starting on the node returned.
@return  the normalized Node
"
      end

      operation 4294530 "createGrammarPool"
	private return_type class_ref 662274 // XMLGrammarPool
	nparams 1
	  param inout name "docType" type class_ref 650626 // DocumentTypeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "normalizeNode"
      end

      operation 4294658 "expandEntityRef"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "reference" type class_ref 317570 // Node
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4294786 "namespaceFixUp"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 647042 // ElementImpl
	  param inout name "attributes" type class_ref 646402 // AttributeMap
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " fix namespaces
 normalize attribute values
 remove default attributes
 check attribute names if the version of the document changed."
      end

      operation 4294914 "addNamespaceDecl"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "prefix" type class_ref 128130 // String
	  param inout name "uri" type class_ref 128130 // String
	  param inout name "element" type class_ref 647042 // ElementImpl
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a namespace attribute or replaces the value of existing namespace
attribute with the given prefix and value for URI.
In case prefix is empty will add/update default namespace declaration.

@param prefix
@param uri
@exception IOException
"
      end

      operation 4295042 "isCDataWF"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	  param inout name "error" type class_ref 659330 // DOMErrorImpl
	  param inout name "locator" type class_ref 659714 // DOMLocatorImpl
	  param inout name "datavalue" type class_ref 128130 // String
	  param inout name "isXML11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Methods for well-formness checking


Check if CDATA section is well-formed
@param datavalue
@param isXML11Version = true if XML 1.1
"
      end

      operation 4295170 "isXMLCharWF"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	  param inout name "error" type class_ref 659330 // DOMErrorImpl
	  param inout name "locator" type class_ref 659714 // DOMLocatorImpl
	  param inout name "datavalue" type class_ref 128130 // String
	  param inout name "isXML11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isCDataWF

NON-DOM: check for valid XML characters as per the XML version
@param datavalue
@param isXML11Version = true if XML 1.1
"
      end

      operation 4295298 "isCommentWF"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	  param inout name "error" type class_ref 659330 // DOMErrorImpl
	  param inout name "locator" type class_ref 659714 // DOMLocatorImpl
	  param inout name "datavalue" type class_ref 128130 // String
	  param inout name "isXML11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isXMLCharWF

NON-DOM: check if value of the comment is well-formed
@param datavalue
@param isXML11Version = true if XML 1.1
"
      end

      operation 4295426 "isAttrValueWF"
	class_operation public explicit_return_type "void"
	nparams 7
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	  param inout name "error" type class_ref 659330 // DOMErrorImpl
	  param inout name "locator" type class_ref 659714 // DOMLocatorImpl
	  param inout name "attributes" type class_ref 327042 // NamedNodeMap
	  param inout name "a" type class_ref 648066 // Attr
	  param inout name "value" type class_ref 128130 // String
	  param inout name "xml11Version" explicit_type "boolean"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isCommentWF
 NON-DOM: check if attribute value is well-formed
@param attributes
@param a
@param value
"
      end

      operation 4295554 "reportDOMError"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "errorHandler" type class_ref 662018 // DOMErrorHandler
	  param inout name "error" type class_ref 659330 // DOMErrorImpl
	  param inout name "locator" type class_ref 659714 // DOMLocatorImpl
	  param inout name "message" type class_ref 128130 // String
	  param in name "severity" explicit_type "short"
	  param inout name "type" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports a DOM error to the user handler.

If the error is fatal, the processing will be always aborted.
"
      end

      operation 4295682 "updateQName"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "qname" type class_ref 661378 // QName
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4295810 "normalizeAttributeValue"
	package return_type class_ref 128130 // String
	nparams 2
	  param inout name "value" type class_ref 128130 // String
	  param inout name "attr" type class_ref 648066 // Attr
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT: remove this method if DOM does not change spec.
Performs partial XML 1.0 attribute value normalization and replaces
attribute value if the value is changed after the normalization.
DOM defines that normalizeDocument acts as if the document was going
through a save and load cycle, given that serializer will not escape
any '\\n' or '\\r' characters on load those will be normalized.
Thus during normalize document we need to do the following:
- perform \"2.11 End-of-Line Handling\"
- replace #xD, #xA, #x9 with #x20 (white space).
Note: This alg. won't attempt to resolve entity references or character entity
references, since '&' will be escaped during serialization and during loading
this won't be recognized as entity reference, i.e. attribute value \"&foo;\" will
be serialized as \"&amp;foo;\" and thus after loading will be \"&foo;\" again.
@param value current attribute value
@param attr current attribute
@return String the value (could be original if normalization did not change
the string)
"
      end

      operation 4303746 "startDocument"
	public explicit_return_type "void"
	nparams 4
	  param inout name "locator" type class_ref 660866 // XMLLocator
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "namespaceContext" type class_ref 660994 // NamespaceContext
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " XMLDocumentHandler methods


The start of the document.

@param locator  The document locator, or null if the document
                location cannot be reported during the parsing
                of this document. However, it is <em>strongly</em>
                recommended that a locator be supplied that can
                at least report the system identifier of the
                document.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param namespaceContext
                The namespace context in effect at the
                start of this document.
                This object represents the current context.
                Implementors of this class are responsible
                for copying the namespace bindings from the
                the current context (and its parent contexts)
                if that information is important.

@param augs     Additional information that may include infoset augmentations
@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4303874 "xmlDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "standalone" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of an XMLDecl line in the document. If
present, this method will be called immediately following the
startDocument call.

@param version    The XML version.
@param encoding   The IANA encoding name of the document, or null if
                  not specified.
@param standalone The standalone value, or null if not specified.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304002 "doctypeDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "rootElement" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of the DOCTYPE line in the document.

@param rootElement
                The name of the root element.
@param publicId The public identifier if an external DTD or null
                if the external DTD is specified using SYSTEM.
@param systemId The system identifier if an external DTD, null
                otherwise.
@param augs     Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304130 "comment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A comment.

@param text   The text in the comment.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by application to signal an error.
"
      end

      operation 4304258 "processingInstruction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A processing instruction. Processing instructions consist of a
target name and, optionally, text data. The data is only meaningful
to the application.
<p>
Typically, a processing instruction's data will contain a series
of pseudo-attributes. These pseudo-attributes follow the form of
element attributes but are <strong>not</strong> parsed or presented
to the application as anything other than text. The application is
responsible for parsing the data.

@param target The target.
@param data   The data or null if none specified.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304386 "startElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of an element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304514 "emptyElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "attributes" type class_ref 661506 // XMLAttributes
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An empty element.

@param element    The name of the element.
@param attributes The element attributes.
@param augs       Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304642 "startGeneralEntity"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 128130 // String
	  param inout name "identifier" type class_ref 661634 // XMLResourceIdentifier
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the start of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name     The name of the general entity.
@param identifier The resource identifier.
@param encoding The auto-detected IANA encoding name of the entity
                stream. This value will be null in those situations
                where the entity encoding is not auto-detected (e.g.
                internal entities or a document entity that is
                parsed from a java.io.Reader).
@param augs     Additional information that may include infoset augmentations

@exception XNIException Thrown by handler to signal an error.
"
      end

      operation 4304770 "textDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies of the presence of a TextDecl line in an entity. If present,
this method will be called immediately following the startEntity call.
<p>
<strong>Note:</strong> This method will never be called for the
document entity; it is only called for external general entities
referenced in document content.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param version  The XML version, or null if not specified.
@param encoding The IANA encoding name of the entity.
@param augs     Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4304898 "endGeneralEntity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method notifies the end of a general entity.
<p>
<strong>Note:</strong> This method is not called for entity references
appearing as part of attribute values.

@param name   The name of the entity.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305026 "characters"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Character content.

@param text   The content.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305154 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 661250 // XMLString
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ignorable whitespace. For this method to be called, the document
source must have some way of determining that the text containing
only whitespace characters should be considered ignorable. For
example, the validator can determine if a length of whitespace
characters in the document are ignorable based on the element
content model.

@param text   The ignorable whitespace.
@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305282 "endElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "element" type class_ref 661378 // QName
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of an element.

@param element The name of the element.
@param augs    Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305410 "startCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The start of a CDATA section.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305538 "endCDATA"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of a CDATA section.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305666 "endDocument"
	public explicit_return_type "void"
	nparams 1
	  param inout name "augs" type class_ref 661122 // Augmentations
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The end of the document.

@param augs   Additional information that may include infoset augmentations

@exception XNIException
                  Thrown by handler to signal an error.
"
      end

      operation 4305794 "setDocumentSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 661762 // XMLDocumentSource
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the document source. "
      end

      operation 4305922 "getDocumentSource"
	public return_type class_ref 661762 // XMLDocumentSource
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the document source. "
      end
    end

    class 650882 "DOMConfigurationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Xerces implementation of DOMConfiguration that maintains a table of recognized parameters.

@xerces.internal

@author Elena Litani, IBM
@author Neeraj Bajaj, Sun Microsystems.
@version $Id: DOMConfigurationImpl.java,v 1.9 2010-11-01 04:39:37 joehw Exp $
"
      classrelation 1796994 // <generalisation>
	relation 1796994 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1796994 // <generalisation>
	  b parent class_ref 656898 // ParserConfigurationSettings
      end

      classrelation 1797250 // <realization>
	relation 1797250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1797250 // <realization>
	  b parent class_ref 657538 // XMLParserConfiguration
      end

      classrelation 1797378 // <realization>
	relation 1797378 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1797378 // <realization>
	  b parent class_ref 650498 // DOMConfiguration
      end

      classrelation 1797506 // XERCES_VALIDATION (<unidirectional association>)
	relation 1797506 --->
	  a role_name "XERCES_VALIDATION" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.VALIDATION_FEATURE" class_relation const_relation protected
	    comment " Constants

 feature identifiers
 Feature identifier: validation. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1797506 // XERCES_VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1797634 // XERCES_NAMESPACES (<unidirectional association>)
	relation 1797634 --->
	  a role_name "XERCES_NAMESPACES" init_value "
        Constants.SAX_FEATURE_PREFIX + Constants.NAMESPACES_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: namespaces. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1797634 // XERCES_NAMESPACES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1797762 // SCHEMA (<unidirectional association>)
	relation 1797762 --->
	  a role_name "SCHEMA" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_VALIDATION_FEATURE" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1797762 // SCHEMA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1797890 // SCHEMA_FULL_CHECKING (<unidirectional association>)
	relation 1797890 --->
	  a role_name "SCHEMA_FULL_CHECKING" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_FULL_CHECKING" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1797890 // SCHEMA_FULL_CHECKING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798018 // DYNAMIC_VALIDATION (<unidirectional association>)
	relation 1798018 --->
	  a role_name "DYNAMIC_VALIDATION" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.DYNAMIC_VALIDATION_FEATURE" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798018 // DYNAMIC_VALIDATION (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798146 // NORMALIZE_DATA (<unidirectional association>)
	relation 1798146 --->
	  a role_name "NORMALIZE_DATA" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_NORMALIZED_VALUE" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798146 // NORMALIZE_DATA (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798274 // SEND_PSVI (<unidirectional association>)
	relation 1798274 --->
	  a role_name "SEND_PSVI" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.SCHEMA_AUGMENT_PSVI" class_relation const_relation protected
	    comment " sending psvi in the pipeline 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798274 // SEND_PSVI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798402 // DTD_VALIDATOR_FACTORY_PROPERTY (<unidirectional association>)
	relation 1798402 --->
	  a role_name "DTD_VALIDATOR_FACTORY_PROPERTY" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.DATATYPE_VALIDATOR_FACTORY_PROPERTY" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798402 // DTD_VALIDATOR_FACTORY_PROPERTY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798530 // NAMESPACE_GROWTH (<unidirectional association>)
	relation 1798530 --->
	  a role_name "NAMESPACE_GROWTH" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.NAMESPACE_GROWTH_FEATURE" class_relation const_relation protected
	    comment " Feature identifier: namespace growth 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798530 // NAMESPACE_GROWTH (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798658 // TOLERATE_DUPLICATES (<unidirectional association>)
	relation 1798658 --->
	  a role_name "TOLERATE_DUPLICATES" init_value "
        Constants.XERCES_FEATURE_PREFIX + Constants.TOLERATE_DUPLICATES_FEATURE" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798658 // TOLERATE_DUPLICATES (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798786 // ENTITY_MANAGER (<unidirectional association>)
	relation 1798786 --->
	  a role_name "ENTITY_MANAGER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_MANAGER_PROPERTY" class_relation const_relation protected
	    comment " property identifiers
 Property identifier: entity manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798786 // ENTITY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1798914 // ERROR_REPORTER (<unidirectional association>)
	relation 1798914 --->
	  a role_name "ERROR_REPORTER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_REPORTER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: error reporter. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1798914 // ERROR_REPORTER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799042 // XML_STRING (<unidirectional association>)
	relation 1799042 --->
	  a role_name "XML_STRING" init_value "
        Constants.SAX_PROPERTY_PREFIX + Constants.XML_STRING_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: xml string. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799042 // XML_STRING (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799170 // SYMBOL_TABLE (<unidirectional association>)
	relation 1799170 --->
	  a role_name "SYMBOL_TABLE" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SYMBOL_TABLE_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799170 // SYMBOL_TABLE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799298 // GRAMMAR_POOL (<unidirectional association>)
	relation 1799298 --->
	  a role_name "GRAMMAR_POOL" init_value "
    Constants.XERCES_PROPERTY_PREFIX + Constants.XMLGRAMMAR_POOL_PROPERTY" class_relation const_relation protected
	    comment " Property id: Grammar pool
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799298 // GRAMMAR_POOL (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799426 // ERROR_HANDLER (<unidirectional association>)
	relation 1799426 --->
	  a role_name "ERROR_HANDLER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ERROR_HANDLER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: error handler. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799426 // ERROR_HANDLER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799554 // ENTITY_RESOLVER (<unidirectional association>)
	relation 1799554 --->
	  a role_name "ENTITY_RESOLVER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.ENTITY_RESOLVER_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: entity resolver. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799554 // ENTITY_RESOLVER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799682 // JAXP_SCHEMA_LANGUAGE (<unidirectional association>)
	relation 1799682 --->
	  a role_name "JAXP_SCHEMA_LANGUAGE" init_value "
    Constants.JAXP_PROPERTY_PREFIX + Constants.SCHEMA_LANGUAGE" class_relation const_relation protected
	    comment " Property identifier: JAXP schema language / DOM schema-type. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799682 // JAXP_SCHEMA_LANGUAGE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799810 // JAXP_SCHEMA_SOURCE (<unidirectional association>)
	relation 1799810 --->
	  a role_name "JAXP_SCHEMA_SOURCE" init_value "
    Constants.JAXP_PROPERTY_PREFIX + Constants.SCHEMA_SOURCE" class_relation const_relation protected
	    comment " Property identifier: JAXP schema source/ DOM schema-location. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799810 // JAXP_SCHEMA_SOURCE (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1799938 // VALIDATION_MANAGER (<unidirectional association>)
	relation 1799938 --->
	  a role_name "VALIDATION_MANAGER" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.VALIDATION_MANAGER_PROPERTY" class_relation const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1799938 // VALIDATION_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1800066 // SCHEMA_DV_FACTORY (<unidirectional association>)
	relation 1800066 --->
	  a role_name "SCHEMA_DV_FACTORY" init_value "
        Constants.XERCES_PROPERTY_PREFIX + Constants.SCHEMA_DV_FACTORY_PROPERTY" class_relation const_relation protected
	    comment " Property identifier: Schema DV Factory 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800066 // SCHEMA_DV_FACTORY (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1800194 // SECURITY_MANAGER (<unidirectional association>)
	relation 1800194 --->
	  a role_name "SECURITY_MANAGER" init_value " Constants.SECURITY_MANAGER" class_relation const_relation private
	    comment " Property identifier: Security manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800194 // SECURITY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1800322 // XML_SECURITY_PROPERTY_MANAGER (<unidirectional association>)
	relation 1800322 --->
	  a role_name "XML_SECURITY_PROPERTY_MANAGER" init_value "
            Constants.XML_SECURITY_PROPERTY_MANAGER" class_relation const_relation private
	    comment " Property identifier: Security property manager. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800322 // XML_SECURITY_PROPERTY_MANAGER (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1800450 // fDocumentHandler (<unidirectional association>)
	relation 1800450 --->
	  a role_name "fDocumentHandler" package
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800450 // fDocumentHandler (<unidirectional association>)
	  b parent class_ref 658050 // XMLDocumentHandler
      end

      attribute 903042 "features"
	protected explicit_type "short"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Normalization features
"
      end

      attribute 903170 "NAMESPACES"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903298 "DTNORMALIZATION"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903426 "ENTITIES"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903554 "CDATA"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903682 "SPLITCDATA"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903810 "COMMENTS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<5"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 903938 "VALIDATE"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<6"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904066 "PSVI"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<7"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904194 "WELLFORMED"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904322 "NSDECL"
	class_attribute const_attribute protected explicit_type "short"
	init_value " 0x1<<9"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904450 "INFOSET_TRUE_PARAMS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " NAMESPACES | COMMENTS | WELLFORMED | NSDECL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904578 "INFOSET_FALSE_PARAMS"
	class_attribute const_attribute protected explicit_type "short"
	init_value " ENTITIES | DTNORMALIZATION | CDATA"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 904706 "INFOSET_MASK"
	class_attribute const_attribute protected explicit_type "short"
	init_value " INFOSET_TRUE_PARAMS | INFOSET_FALSE_PARAMS"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1800578 // fSymbolTable (<unidirectional association>)
	relation 1800578 --->
	  a role_name "fSymbolTable" protected
	    comment " components
 Symbol table. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800578 // fSymbolTable (<unidirectional association>)
	  b parent class_ref 658690 // SymbolTable
      end

      classrelation 1800706 // fComponents (<unidirectional association>)
	relation 1800706 --->
	  a role_name "fComponents" protected
	    comment " Components. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800706 // fComponents (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      classrelation 1800834 // fValidationManager (<unidirectional association>)
	relation 1800834 --->
	  a role_name "fValidationManager" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800834 // fValidationManager (<unidirectional association>)
	  b parent class_ref 658818 // ValidationManager
      end

      classrelation 1800962 // fLocale (<unidirectional association>)
	relation 1800962 --->
	  a role_name "fLocale" protected
	    comment " Locale. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1800962 // fLocale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      classrelation 1801090 // fErrorReporter (<unidirectional association>)
	relation 1801090 --->
	  a role_name "fErrorReporter" protected
	    comment " Error reporter 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801090 // fErrorReporter (<unidirectional association>)
	  b parent class_ref 658946 // XMLErrorReporter
      end

      classrelation 1801218 // fErrorHandlerWrapper (<unidirectional association>)
	relation 1801218 --->
	  a role_name "fErrorHandlerWrapper" init_value "
                new DOMErrorHandlerWrapper()" const_relation protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801218 // fErrorHandlerWrapper (<unidirectional association>)
	  b parent class_ref 659074 // DOMErrorHandlerWrapper
      end

      classrelation 1801346 // fRecognizedParameters (<unidirectional association>)
	relation 1801346 --->
	  a role_name "fRecognizedParameters" private
	    comment " private data
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801346 // fRecognizedParameters (<unidirectional association>)
	  b parent class_ref 658562 // DOMStringList
      end

      operation 4277506 "DOMConfigurationImpl"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default Constructor. "
      end

      operation 4277634 "DOMConfigurationImpl"
	protected explicit_return_type ""
	nparams 1
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

Constructs a parser configuration using the specified symbol table.

@param symbolTable The symbol table to use.
"
      end

      operation 4277762 "DOMConfigurationImpl"
	protected explicit_return_type ""
	nparams 2
	  param inout name "symbolTable" type class_ref 658690 // SymbolTable
	  param inout name "parentSettings" type class_ref 657026 // XMLComponentManager
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(SymbolTable)

Constructs a parser configuration using the specified symbol table
and parent settings.

@param symbolTable    The symbol table to use.
@param parentSettings The parent settings.
"
      end

      operation 4277890 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputSource" type class_ref 657666 // XMLInputSource
	nexceptions 2
	  exception class_ref 657794 // XNIException
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(SymbolTable)

 XMLParserConfiguration methods


Parse an XML document.
<p>
The parser can use this method to instruct this configuration
to begin parsing an XML document from any valid input source
(a character stream, a byte stream, or a URI).
<p>
Parsers may not invoke this method while a parse is in progress.
Once a parse is complete, the parser may then parse another XML
document.
<p>
This method is synchronous: it will not return until parsing
has ended.  If a client application wants to terminate
parsing early, it should throw an exception.

@param source The input source for the top-level of the
              XML document.

@exception XNIException Any XNI exception, possibly wrapping
                        another exception.
@exception IOException  An IO exception from the parser, possibly
                        from a byte stream or character stream
                        supplied by the parser.
"
      end

      operation 4278018 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "documentHandler" type class_ref 658050 // XMLDocumentHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the document handler on the last component in the pipeline
to receive information about the document.

@param documentHandler   The document handler.
"
      end

      operation 4278146 "getDocumentHandler"
	public return_type class_ref 658050 // XMLDocumentHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDocumentHandler(XMLDocumentHandler)
 Returns the registered document handler. "
      end

      operation 4278274 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dtdHandler" type class_ref 658178 // XMLDTDHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDocumentHandler():XMLDocumentHandler

Sets the DTD handler.

@param dtdHandler The DTD handler.
"
      end

      operation 4278402 "getDTDHandler"
	public return_type class_ref 658178 // XMLDTDHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDHandler(XMLDTDHandler)
 Returns the registered DTD handler. "
      end

      operation 4278530 "setDTDContentModelHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 658306 // XMLDTDContentModelHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDHandler():XMLDTDHandler

Sets the DTD content model handler.

@param handler The DTD content model handler.
"
      end

      operation 4278658 "getDTDContentModelHandler"
	public return_type class_ref 658306 // XMLDTDContentModelHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDTDContentModelHandler(XMLDTDContentModelHandler)
 Returns the registered DTD content model handler. "
      end

      operation 4278786 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 658434 // XMLEntityResolver
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getDTDContentModelHandler():XMLDTDContentModelHandler

Sets the resolver used to resolve external entities. The EntityResolver
interface supports resolution of public and system identifiers.

@param resolver The new entity resolver. Passing a null value will
                uninstall the currently installed resolver.
"
      end

      operation 4278914 "getEntityResolver"
	public return_type class_ref 658434 // XMLEntityResolver
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEntityResolver(XMLEntityResolver)

Return the current entity resolver.

@return The current entity resolver, or null if none
        has been registered.
@see #setEntityResolver
"
      end

      operation 4279042 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "errorHandler" type class_ref 657922 // XMLErrorHandler
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getEntityResolver():XMLEntityResolver

Allow an application to register an error event handler.

<p>If the application does not register an error handler, all
error events reported by the SAX parser will be silently
ignored; however, normal processing may not continue.  It is
highly recommended that all SAX applications implement an
error handler to avoid unexpected bugs.</p>

<p>Applications may register a new or different handler in the
middle of a parse, and the SAX parser must begin using the new
handler immediately.</p>

@param errorHandler The error handler.
@exception java.lang.NullPointerException If the handler
           argument is null.
@see #getErrorHandler
"
      end

      operation 4279170 "getErrorHandler"
	public return_type class_ref 657922 // XMLErrorHandler
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setErrorHandler(XMLErrorHandler)

Return the current error handler.

@return The current error handler, or null if none
        has been registered.
@see #setErrorHandler
"
      end

      operation 4279298 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "featureId" type class_ref 128130 // String
	  param inout name "state" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getErrorHandler():XMLErrorHandler

Set the state of a feature.

Set the state of any feature in a SAX2 parser.  The parser
might not recognize the feature, and if it does recognize
it, it might not be able to fulfill the request.

@param featureId The unique identifier (URI) of the feature.
@param state The requested state of the feature (true or false).

@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known.
"
      end

      operation 4279426 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "propertyId" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setFeature(String,boolean)

setProperty

@param propertyId
@param value
"
      end

      operation 4279554 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 312962 // Locale
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setProperty(String,Object)

Set the locale to use for messages.

@param locale The locale object to use for localization of messages.

@exception XNIException Thrown if the parser does not support the
                        specified locale.
"
      end

      operation 4279682 "getLocale"
	public return_type class_ref 312962 // Locale
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setLocale(Locale)
 Returns the locale. "
      end

      operation 4279810 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLocale():Locale

DOM Level 3 WD - Experimental.
setParameter
"
      end

      operation 4279938 "getParameter"
	public return_type class_ref 129538 // Object
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
getParameter
"
      end

      operation 4280066 "canSetParameter"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "value" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Check if setting a parameter to a specific value is supported.

@param name The name of the parameter to check.

@param value An object. if null, the returned value is true.

@return true if the parameter could be successfully set to the
specified value, or false if the parameter is not recognized or
the requested value is not supported. This does not change the
current value of the parameter itself.
"
      end

      operation 4280194 "getParameterNames"
	public return_type class_ref 658562 // DOMStringList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "canSetParameter

 DOM Level 3 CR - Experimental.

 The list of the parameters supported by this
<code>DOMConfiguration</code> object and for which at least one value
can be set by the application. Note that this list can also contain
parameter names defined outside this specification.
"
      end

      operation 4280322 "reset"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 657794 // XNIException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "getParameterNames

 Protected methods


reset all components before parsing
"
      end

      operation 4280450 "checkProperty"
	protected return_type class_ref 657410 // PropertyState
	nparams 1
	  param inout name "propertyId" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 657154 // XMLConfigurationException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " reset()

Check a property. If the property is known and supported, this method
simply returns. Otherwise, the appropriate exception is thrown.

@param propertyId The unique identifier (URI) of the property
                  being set.
@exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the
           requested feature is not known or supported.
"
      end

      operation 4280578 "addComponent"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 659202 // XMLComponent
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " checkProperty(String)"
      end

      operation 4280706 "createValidationManager"
	protected return_type class_ref 658818 // ValidationManager
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " addComponent(XMLComponent)"
      end
    end

    class 651266 "ElementDefinitionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NON-DOM CLASS: Describe one of the Elements (and its associated
Attributes) defined in this Document Type.
<p>
I've included this in Level 1 purely as an anchor point for default
attributes. In Level 2 it should enable the ChildRule support.

@xerces.internal

"
      classrelation 1788418 // <generalisation>
	relation 1788418 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1788418 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      attribute 899970 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8373890672670022714L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1788546 // name (<unidirectional association>)
	relation 1788546 --->
	  a role_name "name" protected
	    comment " Data

 Element definition name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1788546 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1788674 // attributes (<unidirectional association>)
	relation 1788674 --->
	  a role_name "attributes" protected
	    comment " Default attributes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1788674 // attributes (<unidirectional association>)
	  b parent class_ref 646530 // NamedNodeMapImpl
      end

      operation 4249730 "ElementDefinitionImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4249858 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4249986 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the element definition name
"
      end

      operation 4250114 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replicate this object.
"
      end

      operation 4250242 "getAttributes"
	public return_type class_ref 327042 // NamedNodeMap
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Query the attributes defined on this Element.
<p>
In the base implementation this Map simply contains Attribute objects
representing the defaults. In a more serious implementation, it would
contain AttributeDefinitionImpl objects for all declared Attributes,
indicating which are Default, DefaultFixed, Implicit and/or Required.

@return org.w3c.dom.NamedNodeMap containing org.w3c.dom.Attribute
"
      end
    end

    class 651394 "CoreDOMImplementationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DOMImplementation class is description of a particular
implementation of the Document Object Model. As such its data is
static, shared by all instances of this implementation.
<P>
The DOM API requires that it be a real object rather than static
methods. However, there's nothing that says it can't be a singleton,
so that's how I've implemented it.
<P>
This particular class, along with CoreDocumentImpl, supports the DOM
Core and Load/Save (Experimental). Optional modules are supported by
the more complete DOMImplementation class along with DocumentImpl.

@xerces.internal

@version $Id: CoreDOMImplementationImpl.java,v 1.6 2010-11-01 04:39:37 joehw Exp $
@since PR-DOM-Level-1-19980818.
"
      classrelation 1780610 // <realization>
	relation 1780610 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1780610 // <realization>
	  b parent class_ref 636674 // DOMImplementation
      end

      classrelation 1780738 // <realization>
	relation 1780738 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1780738 // <realization>
	  b parent class_ref 651522 // DOMImplementationLS
      end

      attribute 894082 "SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 validators pool
"
      end

      classrelation 1780866 // validators (<unidirectional association>)
	relation 1780866 --->
	  a role_name "validators" multiplicity "[]" init_value " new RevalidationHandler[SIZE]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1780866 // validators (<unidirectional association>)
	  b parent class_ref 652162 // RevalidationHandler
      end

      classrelation 1780994 // dtdValidators (<unidirectional association>)
	relation 1780994 --->
	  a role_name "dtdValidators" multiplicity "[]" init_value " new RevalidationHandler[SIZE]" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1780994 // dtdValidators (<unidirectional association>)
	  b parent class_ref 652162 // RevalidationHandler
      end

      attribute 894210 "freeValidatorIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 894338 "freeDTDValidatorIndex"
	private explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 894466 "currentSize"
	private explicit_type "int"
	init_value " SIZE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 894594 "docAndDoctypeCounter"
	private explicit_type "int"
	init_value " 0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Document and doctype counter.  Used to assign order to documents and
 doctypes without owners, on an demand basis.   Used for
 compareDocumentPosition
"
      end

      classrelation 1781122 // singleton (<unidirectional association>)
	relation 1781122 --->
	  a role_name "singleton" init_value "
                new CoreDOMImplementationImpl()" class_relation package
	    comment " static
 Dom implementation singleton. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1781122 // singleton (<unidirectional association>)
	  b parent class_ref 651394 // CoreDOMImplementationImpl
      end

      operation 4222850 "getDOMImplementation"
	class_operation public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 NON-DOM: Obtain and return the single shared object "
      end

      operation 4222978 "hasFeature"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMImplementation methods


Test if the DOM implementation supports a specific \"feature\" --
currently meaning language and level thereof.

@param feature The package name of the feature to test.
In Level 1, supported values are \"HTML\" and \"XML\" (case-insensitive).
At this writing, com.sun.org.apache.xerces.internal.dom supports only XML.

@param version The version number of the feature being tested.
This is interpreted as \"Version of the DOM API supported for the
specified Feature\", and in Level 1 should be \"1.0\"

@return true iff this implementation is compatable with the specified
feature and version.
"
      end

      operation 4223106 "createDocumentType"
	public return_type class_ref 649986 // DocumentType
	nparams 3
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "publicID" type class_ref 128130 // String
	  param inout name "systemID" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hasFeature(String,String):boolean

Introduced in DOM Level 2. <p>

Creates an empty DocumentType node.

@param qualifiedName The qualified name of the document type to be created.
@param publicID The document type public identifier.
@param systemID The document type system identifier.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4223234 "checkQName"
	package explicit_return_type "void"
	nparams 1
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4223362 "createDocument"
	public return_type class_ref 378626 // Document
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "doctype" type class_ref 649986 // DocumentType
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Creates an XML Document object of the specified type with its document
element.

@param namespaceURI     The namespace URI of the document
                        element to create, or null.
@param qualifiedName    The qualified name of the document
                        element to create.
@param doctype          The type of document to be created or null.<p>

                        When doctype is not null, its
                        Node.ownerDocument attribute is set to
                        the document being created.
@return Document        A new Document object.
@throws DOMException    WRONG_DOCUMENT_ERR: Raised if doctype has
                        already been used with a different document.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4223490 "getFeature"
	public return_type class_ref 129538 // Object
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
"
      end

      operation 4223618 "createLSParser"
	public return_type class_ref 651650 // LSParser
	nparams 2
	  param in name "mode" explicit_type "short"
	  param inout name "schemaType" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM L3 LS

DOM Level 3 LS CR - Experimental.
Create a new <code>LSParser</code>. The newly constructed parser may
then be configured by means of its <code>DOMConfiguration</code>
object, and used to parse documents by means of its <code>parse</code>
 method.
@param mode  The <code>mode</code> argument is either
  <code>MODE_SYNCHRONOUS</code> or <code>MODE_ASYNCHRONOUS</code>, if
  <code>mode</code> is <code>MODE_SYNCHRONOUS</code> then the
  <code>LSParser</code> that is created will operate in synchronous
  mode, if it's <code>MODE_ASYNCHRONOUS</code> then the
  <code>LSParser</code> that is created will operate in asynchronous
  mode.
@param schemaType  An absolute URI representing the type of the schema
  language used during the load of a <code>Document</code> using the
  newly created <code>LSParser</code>. Note that no lexical checking
  is done on the absolute URI. In order to create a
  <code>LSParser</code> for any kind of schema types (i.e. the
  LSParser will be free to use any schema found), use the value
  <code>null</code>.
<p ><b>Note:</b>    For W3C XML Schema [<a href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/'>XML Schema Part 1</a>]
  , applications must use the value
  <code>\"http://www.w3.org/2001/XMLSchema\"</code>. For XML DTD [<a href='http://www.w3.org/TR/2000/REC-xml-20001006'>XML 1.0</a>],
  applications must use the value
  <code>\"http://www.w3.org/TR/REC-xml\"</code>. Other Schema languages
  are outside the scope of the W3C and therefore should recommend an
  absolute URI in order to use this method.
@return  The newly created <code>LSParser</code> object. This
  <code>LSParser</code> is either synchronous or asynchronous
  depending on the value of the <code>mode</code> argument.
<p ><b>Note:</b>    By default, the newly created <code>LSParser</code>
   does not contain a <code>DOMErrorHandler</code>, i.e. the value of
  the \"<a href='http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030609/core.html#parameter-error-handler'>
  error-handler</a>\" configuration parameter is <code>null</code>. However, implementations
  may provide a default error handler at creation time. In that case,
  the initial value of the <code>\"error-handler\"</code> configuration
  parameter on the new created <code>LSParser</code> contains a
  reference to the default error handler.
@exception DOMException
   NOT_SUPPORTED_ERR: Raised if the requested mode or schema type is
  not supported.
"
      end

      operation 4223746 "createLSSerializer"
	public return_type class_ref 651778 // LSSerializer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 LS CR - Experimental.
Create a new <code>LSSerializer</code> object.
@return The newly created <code>LSSerializer</code> object.
<p ><b>Note:</b>    By default, the newly created
<code>LSSerializer</code> has no <code>DOMErrorHandler</code>,
i.e. the value of the <code>\"error-handler\"</code> configuration
parameter is <code>null</code>. However, implementations may
provide a default error handler at creation time. In that case, the
initial value of the <code>\"error-handler\"</code> configuration
parameter on the new created <code>LSSerializer</code> contains a
reference to the default error handler.
"
      end

      operation 4223874 "createLSInput"
	public return_type class_ref 651906 // LSInput
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 LS CR - Experimental.
Create a new empty input source.
@return  The newly created input object.
"
      end

      operation 4224002 "getValidator"
	package return_type class_ref 652162 // RevalidationHandler
	nparams 1
	  param inout name "schemaType" type class_ref 128130 // String
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 NON-DOM: retrieve validator. "
      end

      operation 4224130 "releaseValidator"
	package explicit_return_type "void"
	nparams 2
	  param inout name "schemaType" type class_ref 128130 // String
	  param inout name "validator" type class_ref 652162 // RevalidationHandler
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM: release validator "
      end

      operation 4224258 "assignDocumentNumber"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM:  increment document/doctype counter "
      end

      operation 4224386 "assignDocTypeNumber"
	protected explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM:  increment document/doctype counter "
      end

      operation 4224514 "createLSOutput"
	public return_type class_ref 652034 // LSOutput
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3 LS CR - Experimental.

Create a new empty output destination object where
<code>LSOutput.characterStream</code>,
<code>LSOutput.byteStream</code>, <code>LSOutput.systemId</code>,
<code>LSOutput.encoding</code> are null.

@return  The newly created output object.
"
      end
    end

    class 652290 "DeepNodeListImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class implements the DOM's NodeList behavior for
Element.getElementsByTagName()
<P>
The DOM describes NodeList as follows:
<P>
1) It may represent EITHER nodes scattered through a subtree (when
returned by Element.getElementsByTagName), or just the immediate
children (when returned by Node.getChildNodes). The latter is easy,
but the former (which this class addresses) is more challenging.
<P>
2) Its behavior is \"live\" -- that is, it always reflects the
current state of the document tree. To put it another way, the
NodeLists obtained before and after a series of insertions and
deletions are effectively identical (as far as the user is
concerned, the former has been dynamically updated as the changes
have been made).
<P>
3) Its API accesses individual nodes via an integer index, with the
listed nodes numbered sequentially in the order that they were
found during a preorder depth-first left-to-right search of the tree.
(Of course in the case of getChildNodes, depth is not involved.) As
nodes are inserted or deleted in the tree, and hence the NodeList,
the numbering of nodes that follow them in the NodeList will
change.
<P>
It is rather painful to support the latter two in the
getElementsByTagName case. The current solution is for Nodes to
maintain a change count (eventually that may be a Digest instead),
which the NodeList tracks and uses to invalidate itself.
<P>
Unfortunately, this does _not_ respond efficiently in the case that
the dynamic behavior was supposed to address: scanning a tree while
it is being extended. That requires knowing which subtrees have
changed, which can become an arbitrarily complex problem.
<P>
We save some work by filling the vector only as we access the
item()s... but I suspect the same users who demanded index-based
access will also start by doing a getLength() to control their loop,
blowing this optimization out of the water.
<P>
NOTE: Level 2 of the DOM will probably _not_ use NodeList for its
extended search mechanisms, partly for the reasons just discussed.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1781250 // <realization>
	relation 1781250 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1781250 // <realization>
	  b parent class_ref 333058 // NodeList
      end

      classrelation 1781378 // rootNode (<unidirectional association>)
	relation 1781378 --->
	  a role_name "rootNode" protected
	    comment " Data

 Where the search started"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1781378 // rootNode (<unidirectional association>)
	  b parent class_ref 646786 // NodeImpl
      end

      classrelation 1781506 // tagName (<unidirectional association>)
	relation 1781506 --->
	  a role_name "tagName" protected
	    comment " Or \"*\" to mean all-tags-acceptable"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1781506 // tagName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 894722 "changes"
	protected explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1781634 // nodes (<unidirectional association>)
	relation 1781634 --->
	  a role_name "nodes" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1781634 // nodes (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      classrelation 1781762 // nsName (<unidirectional association>)
	relation 1781762 --->
	  a role_name "nsName" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1781762 // nsName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 894850 "enableNS"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4224642 "DeepNodeListImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "rootNode" type class_ref 646786 // NodeImpl
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Constructor. "
      end

      operation 4224770 "DeepNodeListImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "rootNode" type class_ref 646786 // NodeImpl
	  param inout name "nsName" type class_ref 128130 // String
	  param inout name "tagName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor for Namespace support. "
      end

      operation 4224898 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NodeList methods

 Returns the length of the node list. "
      end

      operation 4225026 "item"
	public return_type class_ref 317570 // Node
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node at the specified index. "
      end

      operation 4225154 "nextMatchingElementAfter"
	protected return_type class_ref 317570 // Node
	nparams 1
	  param inout name "current" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " item(int):Node

 Protected methods (might be overridden by an extending DOM)


Iterative tree-walker. When you have a Parent link, there's often no
need to resort to recursion. NOTE THAT only Element nodes are matched
since we're specifically supporting getElementsByTagName().
"
      end
    end

    class 652418 "DeferredAttrImpl"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Attribute represents an XML-style attribute of an
Element. Typically, the allowable values are controlled by its
declaration in the Document Type Definition (DTD) governing this
kind of document.
<P>
If the attribute has not been explicitly assigned a value, but has
been declared in the DTD, it will exist and have that default. Only
if neither the document nor the DTD specifies a value will the
Attribute really be considered absent and have no value; in that
case, querying the attribute will return null.
<P>
Attributes may have multiple children that contain their data. (XML
allows attributes to contain entity references, and tokenized
attribute types such as NMTOKENS may have a child for each token.)
For convenience, the Attribute object's getValue() method returns
the string version of the attribute's value.
<P>
Attributes are not children of the Elements they belong to, in the
usual sense, and have no valid Parent reference. However, the spec
says they _do_ belong to a specific Element, and an INUSE exception
is to be thrown if the user attempts to explicitly share them
between elements.
<P>
Note that Elements do not permit attributes to appear to be shared
(see the INUSE exception), so this object's mutability is
officially not an issue.
<P>
DeferredAttrImpl inherits from AttrImpl which does not support
Namespaces. DeferredAttrNSImpl, which inherits from AttrNSImpl, does.
@see DeferredAttrNSImpl

@xerces.internal

@author Andy Clark, IBM
@author Arnaud  Le Hors, IBM
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1781890 // <generalisation>
	relation 1781890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1781890 // <generalisation>
	  b parent class_ref 647170 // AttrImpl
      end

      classrelation 1782146 // <realization>
	relation 1782146 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1782146 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 895106 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6903232312469148636L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 895234 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4225410 "DeferredAttrImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4225538 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4225666 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4225794 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
"
      end
    end

    class 652546 "DeferredNode"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for deferred node object.

@xerces.internal

"
      classrelation 1782018 // <generalisation>
	relation 1782018 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1782018 // <generalisation>
	  b parent class_ref 317570 // Node
      end

      attribute 894978 "TYPE_NODE"
	class_attribute const_attribute public explicit_type "short"
	init_value "  20"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4225282 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DeferredNode methods

 Returns the node index. "
      end
    end

    class 652674 "DeferredDocumentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Document interface represents the entire HTML or XML document.
Conceptually, it is the root of the document tree, and provides the
primary access to the document's data.
<P>
Since elements, text nodes, comments, processing instructions,
etc. cannot exist outside the context of a Document, the Document
interface also contains the factory methods needed to create these
objects. The Node objects created have a ownerDocument attribute
which associates them with the Document within whose context they
were created.

@xerces.internal

@version $Id: DeferredDocumentImpl.java,v 1.11 2010-11-01 04:39:38 joehw Exp $
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1784962 // <generalisation>
	relation 1784962 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1784962 // <generalisation>
	  b parent class_ref 653186 // DocumentImpl
      end

      classrelation 1785090 // <realization>
	relation 1785090 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1785090 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 896770 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 5186323580749626857L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 896898 "DEBUG_PRINT_REF_COUNTS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " debugging
 To include code for printing the ref count tables. 
"
      end

      attribute 897026 "DEBUG_PRINT_TABLES"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " To include code for printing the internal tables. 
"
      end

      attribute 897154 "DEBUG_IDS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " To debug identifiers set to true and recompile. 
"
      end

      attribute 897282 "CHUNK_SHIFT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " 8"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " protected
 Chunk shift. 
 2^8 = 256"
      end

      attribute 897410 "CHUNK_SIZE"
	class_attribute const_attribute protected explicit_type "int"
	init_value " (1 << CHUNK_SHIFT)"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk size. 
"
      end

      attribute 897538 "CHUNK_MASK"
	class_attribute const_attribute protected explicit_type "int"
	init_value " CHUNK_SIZE - 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Chunk mask. 
"
      end

      attribute 897666 "INITIAL_CHUNK_COUNT"
	class_attribute const_attribute protected explicit_type "int"
	init_value " (1 << (13 - CHUNK_SHIFT))"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Initial chunk size. 
 32"
      end

      attribute 897794 "fNodeCount"
	protected explicit_type "int"
	init_value " 0"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 lazy-eval information
 To maximize memory consumption the actual semantic of these fields vary
 depending on the node type.
 Node count. 
"
      end

      attribute 897922 "fNodeType"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Node types. 
"
      end

      classrelation 1785218 // fNodeName (<unidirectional association>)
	relation 1785218 --->
	  a role_name "fNodeName" multiplicity "[][]" protected
	    comment " Node names. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1785218 // fNodeName (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      classrelation 1785346 // fNodeValue (<unidirectional association>)
	relation 1785346 --->
	  a role_name "fNodeValue" multiplicity "[][]" protected
	    comment " Node values. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1785346 // fNodeValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 898050 "fNodeParent"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Node parents. 
"
      end

      attribute 898178 "fNodeLastChild"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Node first children. 
"
      end

      attribute 898306 "fNodePrevSib"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Node prev siblings. 
"
      end

      classrelation 1785474 // fNodeURI (<unidirectional association>)
	relation 1785474 --->
	  a role_name "fNodeURI" multiplicity "[][]" protected
	    comment " Node namespace URI. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1785474 // fNodeURI (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 898434 "fNodeExtra"
	protected explicit_type "int"
	multiplicity "[][]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Extra data. 
"
      end

      attribute 898562 "fIdCount"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifier count. 
"
      end

      classrelation 1785602 // fIdName (<unidirectional association>)
	relation 1785602 --->
	  a role_name "fIdName" multiplicity "[]" protected
	    comment " Identifier name indexes. 
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1785602 // fIdName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 898690 "fIdElement"
	protected explicit_type "int"
	multiplicity "[]"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Identifier element indexes. 
"
      end

      attribute 898818 "fNamespacesEnabled"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " DOM2: For namespace support in the deferred case.

 Implementation Note: The deferred element and attribute must know how to
 interpret the int representing the qname.
"
      end

      classrelation 1785730 // fBufferStr (<unidirectional association>)
	relation 1785730 --->
	  a role_name "fBufferStr" init_value " new StringBuilder()" const_relation private
	    comment " private data

"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1785730 // fBufferStr (<unidirectional association>)
	  b parent class_ref 173058 // StringBuilder
      end

      classrelation 1785858 // fStrChunks (<unidirectional association>)
	relation 1785858 --->
	  a role_name "fStrChunks" init_value " new ArrayList()" const_relation private
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1785858 // fStrChunks (<unidirectional association>)
	  b parent class_ref 186498 // ArrayList
      end

      operation 4233986 "DeferredDocumentImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


NON-DOM: Actually creating a Document is outside the DOM's spec,
since it has to operate in terms of a particular implementation.
"
      end

      operation 4234114 "DeferredDocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "namespacesEnabled" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>()

NON-DOM: Actually creating a Document is outside the DOM's spec,
since it has to operate in terms of a particular implementation.
"
      end

      operation 4234242 "DeferredDocumentImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "namespaces" explicit_type "boolean"
	  param inout name "grammarAccess" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(boolean)
 Experimental constructor. "
      end

      operation 4234370 "getImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(boolean,boolean)

 Public methods


Retrieve information describing the abilities of this particular
DOM implementation. Intended to support applications that may be
using DOMs retrieved from several different sources, potentially
with different underlying representations.
"
      end

      operation 4234498 "getNamespacesEnabled"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the cached parser.getNamespaces() value."
      end

      operation 4234626 "setNamespacesEnabled"
	package explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4234754 "createDeferredDocument"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " internal factory methods
 Creates a document node in the table. "
      end

      operation 4234882 "createDeferredDocumentType"
	public explicit_return_type "int"
	nparams 3
	  param inout name "rootElementName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a doctype. "
      end

      operation 4235010 "setInternalSubset"
	public explicit_return_type "void"
	nparams 2
	  param in name "doctypeIndex" explicit_type "int"
	  param inout name "subset" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredDocumentType(String,String,String):int"
      end

      operation 4235138 "createDeferredNotation"
	public explicit_return_type "int"
	nparams 4
	  param inout name "notationName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a notation in the table. "
      end

      operation 4235266 "createDeferredEntity"
	public explicit_return_type "int"
	nparams 5
	  param inout name "entityName" type class_ref 128130 // String
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "notationName" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredNotation(String,String,String):int
 Creates an entity in the table. "
      end

      operation 4235394 "getDeferredEntityBaseURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "entityIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredEntity(String,String,String,String):int"
      end

      operation 4235522 "setEntityInfo"
	public explicit_return_type "void"
	nparams 3
	  param in name "currentEntityDecl" explicit_type "int"
	  param inout name "version" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3: setting encoding and version"
      end

      operation 4235650 "setTypeInfo"
	public explicit_return_type "void"
	nparams 2
	  param in name "elementNodeIndex" explicit_type "int"
	  param inout name "type" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOM Level 3: sets element TypeInfo"
      end

      operation 4235778 "setInputEncoding"
	public explicit_return_type "void"
	nparams 2
	  param in name "currentEntityDecl" explicit_type "int"
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Internal

An attribute specifying the actual encoding of this document. This is
<code>null</code> otherwise.
<br> This attribute represents the property [character encoding scheme]
defined in .
"
      end

      operation 4235906 "createDeferredEntityReference"
	public explicit_return_type "int"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an entity reference node in the table. "
      end

      operation 4236034 "createDeferredElement"
	public explicit_return_type "int"
	nparams 3
	  param inout name "elementURI" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	  param inout name "type" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredEntityReference(String):int

Creates an element node with a URI in the table and type information.
@deprecated
"
      end

      operation 4236162 "createDeferredElement"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredElement(String,String,Object):int

Creates an element node in the table.
@deprecated
"
      end

      operation 4236290 "createDeferredElement"
	public explicit_return_type "int"
	nparams 2
	  param inout name "elementURI" type class_ref 128130 // String
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an element node with a URI in the table.
"
      end

      operation 4236418 "setDeferredAttribute"
	public explicit_return_type "int"
	nparams 7
	  param in name "elementNodeIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrURI" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "specified" explicit_type "boolean"
	  param inout name "id" explicit_type "boolean"
	  param inout name "type" type class_ref 129538 // Object
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredElement(String,String):int

This method is used by the DOMParser to create attributes.
@param elementNodeIndex
@param attrName
@param attrURI
@param attrValue
@param specified
@param id
@param type
@return int
"
      end

      operation 4236546 "setDeferredAttribute"
	public explicit_return_type "int"
	nparams 5
	  param in name "elementNodeIndex" explicit_type "int"
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrURI" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "specified" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets an attribute on an element node.
@deprecated
"
      end

      operation 4236674 "createDeferredAttribute"
	public explicit_return_type "int"
	nparams 3
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "specified" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setDeferredAttribute(int,String,String,String,boolean):int
 Creates an attribute in the table. "
      end

      operation 4236802 "createDeferredAttribute"
	public explicit_return_type "int"
	nparams 4
	  param inout name "attrName" type class_ref 128130 // String
	  param inout name "attrURI" type class_ref 128130 // String
	  param inout name "attrValue" type class_ref 128130 // String
	  param inout name "specified" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates an attribute with a URI in the table. "
      end

      operation 4236930 "createDeferredElementDefinition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredAttribute(String,String,String,boolean):int
 Creates an element definition in the table."
      end

      operation 4237058 "createDeferredTextNode"
	public explicit_return_type "int"
	nparams 2
	  param inout name "data" type class_ref 128130 // String
	  param inout name "ignorableWhitespace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredElementDefinition(String):int
 Creates a text node in the table. "
      end

      operation 4237186 "createDeferredCDATASection"
	public explicit_return_type "int"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredTextNode(String,boolean):int
 Creates a CDATA section node in the table. "
      end

      operation 4237314 "createDeferredProcessingInstruction"
	public explicit_return_type "int"
	nparams 2
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredCDATASection(String):int
 Creates a processing instruction node in the table. "
      end

      operation 4237442 "createDeferredComment"
	public explicit_return_type "int"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredProcessingInstruction(String,String):int
 Creates a comment node in the table. "
      end

      operation 4237570 "cloneNode"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDeferredComment(String):int
 Creates a clone of the specified node. "
      end

      operation 4237698 "appendChild"
	public explicit_return_type "void"
	nparams 2
	  param in name "parentIndex" explicit_type "int"
	  param in name "childIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(int,boolean):int
 Appends a child to the specified parent in the table. "
      end

      operation 4237826 "setAttributeNode"
	public explicit_return_type "int"
	nparams 2
	  param in name "elemIndex" explicit_type "int"
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " appendChild(int,int)
 Adds an attribute node to the specified element. "
      end

      operation 4237954 "setIdAttributeNode"
	public explicit_return_type "void"
	nparams 2
	  param in name "elemIndex" explicit_type "int"
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAttributeNode(int,int):int
 Adds an attribute node to the specified element. "
      end

      operation 4238082 "setIdAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "attrIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets type of attribute "
      end

      operation 4238210 "insertBefore"
	public explicit_return_type "int"
	nparams 3
	  param in name "parentIndex" explicit_type "int"
	  param in name "newChildIndex" explicit_type "int"
	  param in name "refChildIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Inserts a child before the specified node in the table. "
      end

      operation 4238338 "setAsLastChild"
	public explicit_return_type "void"
	nparams 2
	  param in name "parentIndex" explicit_type "int"
	  param in name "childIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " insertBefore(int,int,int):int
 Sets the last child of the parentIndex to childIndex. "
      end

      operation 4238466 "getParentNode"
	public explicit_return_type "int"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setAsLastChild(int,int)

Returns the parent node of the given node.
<em>Calling this method does not free the parent index.</em>
"
      end

      operation 4238594 "getParentNode"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent node of the given node.
@param free True to free parent node.
"
      end

      operation 4238722 "getLastChild"
	public explicit_return_type "int"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getParentNode(int):int
 Returns the last child of the given node. "
      end

      operation 4238850 "getLastChild"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last child of the given node.
@param free True to free child index.
"
      end

      operation 4238978 "getPrevSibling"
	public explicit_return_type "int"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getLastChild(int,boolean):int

Returns the prev sibling of the given node.
This is post-normalization of Text Nodes.
"
      end

      operation 4239106 "getPrevSibling"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prev sibling of the given node.
@param free True to free sibling index.
"
      end

      operation 4239234 "getRealPrevSibling"
	public explicit_return_type "int"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPrevSibling(int,boolean):int

Returns the <i>real</i> prev sibling of the given node,
directly from the data structures. Used by TextImpl#getNodeValue()
to normalize values.
"
      end

      operation 4239362 "getRealPrevSibling"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the <i>real</i> prev sibling of the given node.
@param free True to free sibling index.
"
      end

      operation 4239490 "lookupElementDefinition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "elementName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getReadPrevSibling(int,boolean):int

Returns the index of the element definition in the table
with the specified name index, or -1 if no such definition
exists.
"
      end

      operation 4239618 "getNodeObject"
	public return_type class_ref 652546 // DeferredNode
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " lookupElementDefinition(String):int
 Instantiates the requested node object. "
      end

      operation 4239746 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createNodeObject(int):Node
 Returns the name of the given node. "
      end

      operation 4239874 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeNameString(int):String

Returns the name of the given node.
@param free True to free the string index.
"
      end

      operation 4240002 "getNodeValueString"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeName(int,boolean):String
 Returns the real value of the given node. "
      end

      operation 4240130 "getNodeValueString"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeValueString(int):String

Returns the real value of the given node.
@param free True to free the string index.
"
      end

      operation 4240258 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeValueString(int,boolean):String

Returns the value of the given node.
"
      end

      operation 4240386 "getTypeInfo"
	public return_type class_ref 129538 // Object
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the type info that is stored in the fNodeValue array
@param nodeIndex
@return Object - type information for the attribute/element node
"
      end

      operation 4240514 "getNodeValue"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the given node.
@param free True to free the value index.
"
      end

      operation 4240642 "getNodeExtra"
	public explicit_return_type "int"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeValue(int,boolean):String

Returns the extra info of the given node.
Used by AttrImpl to store specified value (1 == true).
"
      end

      operation 4240770 "getNodeExtra"
	public explicit_return_type "int"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extra info of the given node.
@param free True to free the value index.
"
      end

      operation 4240898 "getNodeType"
	public explicit_return_type "short"
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeExtra(int,boolean):int
 Returns the type of the given node. "
      end

      operation 4241026 "getNodeType"
	public explicit_return_type "short"
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of the given node.
@param free True to free type index.
"
      end

      operation 4241154 "getAttribute"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "elemIndex" explicit_type "int"
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeType(int):int
 Returns the attribute value of the given name. "
      end

      operation 4241282 "getNodeURI"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the URI of the given node. "
      end

      operation 4241410 "getNodeURI"
	public return_type class_ref 128130 // String
	nparams 2
	  param in name "nodeIndex" explicit_type "int"
	  param inout name "free" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI of the given node.
@param free True to free URI index.
"
      end

      operation 4241538 "putIdentifier"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 128130 // String
	  param in name "elementNodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNodeURI(int,int):String
 identifier maintenance
 Registers an identifier name with a specified element node. "
      end

      operation 4241666 "print"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putIdentifier(String,int)

 DEBUG

 Prints out the tables. "
      end

      operation 4241794 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " print()

 DeferredNode methods

 Returns the node index. "
      end

      operation 4241922 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the node's data. "
      end

      operation 4242050 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
"
      end

      operation 4242178 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "a" type class_ref 647170 // AttrImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeChildren()

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
This is not directly used in this class but this method is
here so that it can be shared by all deferred subclasses of AttrImpl.
"
      end

      operation 4242306 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 649602 // ParentNode
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeChildren(AttrImpl,int):void

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
This is not directly used in this class but this method is
here so that it can be shared by all deferred subclasses of ParentNode.
"
      end

      operation 4242434 "ensureCapacity"
	protected explicit_return_type "void"
	nparams 1
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeChildren(ParentNode,int):void
 utility methods
 Ensures that the internal tables are large enough. "
      end

      operation 4242562 "createNode"
	protected explicit_return_type "int"
	nparams 1
	  param in name "nodeType" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ensureCapacity(int,int)
 Creates a node of the specified type. "
      end

      operation 4242690 "binarySearch"
	class_operation protected explicit_return_type "int"
	nparams 4
	  param in name "values" explicit_type "int"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "target" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createNode(short):int

Performs a binary search for a target value in an array of
values. The array of values must be in ascending sorted order
before calling this method and all array values must be
non-negative.

@param values  The array of values to search.
@param start   The starting offset of the search.
@param end     The ending offset of the search.
@param target  The target value.

@return This function will return the <i>first</i> occurrence
        of the target value, or -1 if the target value cannot
        be found.
"
      end

      attribute 898946 "INIT_ARRAY"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[CHUNK_SIZE + 1]"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " binarySearch(int[],int,int,int):int

 Private methods

"
      end

      extra_member 141954 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = 0; i < CHUNK_SIZE; i++) {
            INIT_ARRAY[i] = -1;
        }
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 4242818 "createChunk"
	private explicit_return_type "void"
	nparams 2
	  param inout name "data" explicit_type "int"
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates the specified chunk in the given array of chunks. "
      end

      class 654338 "RefCount"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 899074 "fCount"
	  package explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 4242946 "createChunk"
	private explicit_return_type "void"
	nparams 2
	  param inout name "data" type class_ref 129538 // Object
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4243074 "setChunkIndex"
	private explicit_return_type "int"
	nparams 4
	  param inout name "data" explicit_type "int"
	multiplicity "[][]"
	  param in name "value" explicit_type "int"
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the specified value in the given of data at the chunk and index.

@return Returns the old value.
"
      end

      operation 4243202 "setChunkValue"
	private return_type class_ref 128130 // String
	nparams 4
	  param inout name "data" type class_ref 129538 // Object
	multiplicity "[][]"
	  param inout name "value" type class_ref 129538 // Object
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4243330 "getChunkIndex"
	private explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "int"
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the specified value in the given data at the chunk and index.
"
      end

      operation 4243458 "getChunkValue"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "data" type class_ref 129538 // Object
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4243586 "getNodeValue"
	private return_type class_ref 128130 // String
	nparams 2
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4243714 "clearChunkIndex"
	private explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "int"
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the specified value in the given data at the chunk and index.
Note that this method will clear the given chunk if the reference
count becomes zero.

@return Returns the old value.
"
      end

      operation 4243842 "clearChunkValue"
	private return_type class_ref 128130 // String
	nparams 3
	  param inout name "data" type class_ref 129538 // Object
	multiplicity "[][]"
	  param in name "chunk" explicit_type "int"
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[][] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4243970 "putIdentifier0"
	private explicit_return_type "void"
	nparams 2
	  param inout name "idName" type class_ref 128130 // String
	  param inout name "element" type class_ref 648194 // Element
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This version of putIdentifier is needed to avoid fluffing
all of the paths to ID attributes when a node object is
created that contains an ID attribute.
"
      end

      operation 4244098 "print"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "values" explicit_type "int"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "middle" explicit_type "int"
	  param in name "target" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " putIdentifier0(String,Element)
 Prints the ID array. "
      end

      class 654466 "IntVector"
	visibility package 
	cpp_decl ""
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 899202 "data"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Data

 Data. 
"
	end

	attribute 899330 "size"
	  private explicit_type "int"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Size. 
"
	end

	operation 4244226 "size"
	  public explicit_return_type "int"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Public methods

 Returns the length of this vector. "
	end

	operation 4244354 "elementAt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the element at the specified index. "
	end

	operation 4244482 "addElement"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "element" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Appends an element to the end of the vector. "
	end

	operation 4244610 "removeAllElements"
	  public explicit_return_type "void"
	  nparams 0
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Clears the vector. "
	end

	operation 4244738 "ensureCapacity"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "newsize" explicit_type "int"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Private methods

 Makes sure that there is enough storage. "
	end
      end
    end

    class 652802 "DeferredAttrNSImpl"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "DeferredAttrNSImpl is to AttrNSImpl, what DeferredAttrImpl is to
AttrImpl.

@xerces.internal

@author Andy Clark, IBM
@author Arnaud  Le Hors, IBM
@see DeferredAttrImpl
"
      classrelation 1782274 // <generalisation>
	relation 1782274 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1782274 // <generalisation>
	  b parent class_ref 648578 // AttrNSImpl
      end

      classrelation 1782402 // <realization>
	relation 1782402 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1782402 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 895362 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6074924934945957154L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 895490 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4225922 "DeferredAttrNSImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4226050 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4226178 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4226306 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
"
      end
    end

    class 652930 "DeferredCDATASectionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "XML provides the CDATA markup to allow a region of text in which
most of the XML delimiter recognition does not take place. This is
intended to ease the task of quoting XML fragments and other
programmatic information in a document's text without needing to
escape these special characters. It's primarily a convenience feature
for those who are hand-editing XML.
<P>
CDATASection is an Extended DOM feature, and is not used in HTML
contexts.
<P>
Within the DOM, CDATASections are treated essentially as Text
blocks. Their distinct type is retained in order to allow us to
properly recreate the XML syntax when we write them out.
<P>
Reminder: CDATA IS NOT A COMPLETELY GENERAL SOLUTION; it can't
quote its own end-of-block marking. If you need to write out a
CDATA that contains the ]]> sequence, it's your responsibility to
split that string over two successive CDATAs at that time.
<P>
CDATA does not participate in Element.normalize() processing.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1782530 // <generalisation>
	relation 1782530 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1782530 // <generalisation>
	  b parent class_ref 648706 // CDATASectionImpl
      end

      classrelation 1782658 // <realization>
	relation 1782658 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1782658 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 895618 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 1983580632355645726L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 895746 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4226434 "DeferredCDATASectionImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here. All other data,
can be requested from the ownerDocument via the index.
"
      end

      operation 4226562 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4226690 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end
    end

    class 653058 "DeferredCommentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents an XML (or HTML) comment.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1782786 // <generalisation>
	relation 1782786 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1782786 // <generalisation>
	  b parent class_ref 649346 // CommentImpl
      end

      classrelation 1782914 // <realization>
	relation 1782914 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1782914 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 895874 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6498796371083589338L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 896002 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4226818 "DeferredCommentImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here. All other data,
can be requested from the ownerDocument via the index.
"
      end

      operation 4226946 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4227074 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end
    end

    class 653186 "DocumentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Document interface represents the entire HTML or XML document.
Conceptually, it is the root of the document tree, and provides the
primary access to the document's data.
<P>
Since elements, text nodes, comments, processing instructions,
etc. cannot exist outside the context of a Document, the Document
interface also contains the factory methods needed to create these
objects. The Node objects created have a ownerDocument attribute
which associates them with the Document within whose context they
were created.
<p>
The DocumentImpl class also implements the DOM Level 2 DocumentTraversal
interface. This interface is comprised of factory methods needed to
create NodeIterators and TreeWalkers. The process of creating NodeIterator
objects also adds these references to this document.
After finishing with an iterator it is important to remove the object
using the remove methods in this implementation. This allows the release of
the references from the iterator objects to the DOM Nodes.
<p>
<b>Note:</b> When any node in the document is serialized, the
entire document is serialized along with it.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@author Ralf Pfeiffer, IBM
@version $Id: DocumentImpl.java,v 1.6 2010/07/20 20:25:24 joehw Exp $
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1783042 // <generalisation>
	relation 1783042 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1783042 // <generalisation>
	  b parent class_ref 646914 // CoreDocumentImpl
      end

      classrelation 1783170 // <realization>
	relation 1783170 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1783170 // <realization>
	  b parent class_ref 653314 // DocumentTraversal
      end

      classrelation 1783298 // <realization>
	relation 1783298 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1783298 // <realization>
	  b parent class_ref 653698 // DocumentEvent
      end

      classrelation 1783426 // <realization>
	relation 1783426 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1783426 // <realization>
	  b parent class_ref 653826 // DocumentRange
      end

      attribute 896130 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 515687835542616694L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1783554 // iterators (<unidirectional association>)
	relation 1783554 --->
	  a role_name "iterators" protected
	    comment " Data

 Iterators 
 REVISIT: Should this be transient? -Ac
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NodeIterator> ${name}${value};
"
	    classrelation_ref 1783554 // iterators (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 1783682 // ranges (<unidirectional association>)
	relation 1783682 --->
	  a role_name "ranges" protected
	    comment " Ranges 
 REVISIT: Should this be transient? -Ac
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Range> ${name}${value};
"
	    classrelation_ref 1783682 // ranges (<unidirectional association>)
	  b parent class_ref 175362 // List
      end

      classrelation 1783810 // eventListeners (<unidirectional association>)
	relation 1783810 --->
	  a role_name "eventListeners" protected
	    comment " Table for event listeners registered to this document nodes. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NodeImpl, List<LEntry>> ${name}${value};
"
	    classrelation_ref 1783810 // eventListeners (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 896258 "mutationEvents"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bypass mutation events firing. 
"
      end

      classrelation 1783938 // serialPersistentFields (<unidirectional association>)
	relation 1783938 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value "
        new ObjectStreamField[] {
            new ObjectStreamField(\"iterators\", Vector.class),
            new ObjectStreamField(\"ranges\", Vector.class),
            new ObjectStreamField(\"eventListeners\", Hashtable.class),
            new ObjectStreamField(\"mutationEvents\", boolean.class),
        }" class_relation const_relation private
	    comment "
@serialField iterators Vector Node iterators
@serialField ranges Vector ranges
@serialField eventListeners Hashtable Event listeners
@serialField mutationEvents boolean Bypass mutation events firing

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1783938 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 193154 // ObjectStreamField
      end

      operation 4227714 "DocumentImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


NON-DOM: Actually creating a Document is outside the DOM's spec,
since it has to operate in terms of a particular implementation.
"
      end

      operation 4227842 "DocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "grammarAccess" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor. "
      end

      operation 4227970 "DocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "doctype" type class_ref 649986 // DocumentType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For DOM2 support.
The createDocument factory method is in DOMImplementation.
"
      end

      operation 4228098 "DocumentImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "doctype" type class_ref 649986 // DocumentType
	  param inout name "grammarAccess" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " For DOM2 support. "
      end

      operation 4228226 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


Deep-clone a document, including fixing ownerDoc for the cloned
children. Note that this requires bypassing the WRONG_DOCUMENT_ERR
protection. I've chosen to implement it by calling importNode
which is DOM Level 2.

@return org.w3c.dom.Node
@param deep boolean, iff true replicate children
"
      end

      operation 4228354 "getImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Retrieve information describing the abilities of this particular
DOM implementation. Intended to support applications that may be
using DOMs retrieved from several different sources, potentially
with different underlying representations.
"
      end

      operation 4228482 "createNodeIterator"
	public return_type class_ref 583042 // NodeIterator
	nparams 3
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "short"
	  param inout name "filter" type class_ref 653442 // NodeFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DocumentTraversal methods


NON-DOM extension:
Create and return a NodeIterator. The NodeIterator is
added to a list of NodeIterators so that it can be
removed to free up the DOM Nodes it references.

@param root The root of the iterator.
@param whatToShow The whatToShow mask.
@param filter The NodeFilter installed. Null means no filter.
"
      end

      operation 4228610 "createNodeIterator"
	public return_type class_ref 583042 // NodeIterator
	nparams 4
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "int"
	  param inout name "filter" type class_ref 653442 // NodeFilter
	  param inout name "entityReferenceExpansion" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create and return a NodeIterator. The NodeIterator is
added to a list of NodeIterators so that it can be
removed to free up the DOM Nodes it references.

@param root The root of the iterator.
@param whatToShow The whatToShow mask.
@param filter The NodeFilter installed. Null means no filter.
@param entityReferenceExpansion true to expand the contents of
                                EntityReference nodes
@since WD-DOM-Level-2-19990923
"
      end

      operation 4228738 "createTreeWalker"
	public return_type class_ref 653570 // TreeWalker
	nparams 3
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "short"
	  param inout name "filter" type class_ref 653442 // NodeFilter
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM extension:
Create and return a TreeWalker.

@param root The root of the iterator.
@param whatToShow The whatToShow mask.
@param filter The NodeFilter installed. Null means no filter.
"
      end

      operation 4228866 "createTreeWalker"
	public return_type class_ref 653570 // TreeWalker
	nparams 4
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "int"
	  param inout name "filter" type class_ref 653442 // NodeFilter
	  param inout name "entityReferenceExpansion" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create and return a TreeWalker.

@param root The root of the iterator.
@param whatToShow The whatToShow mask.
@param filter The NodeFilter installed. Null means no filter.
@param entityReferenceExpansion true to expand the contents of
                                EntityReference nodes
@since WD-DOM-Level-2-19990923
"
      end

      operation 4228994 "removeNodeIterator"
	package explicit_return_type "void"
	nparams 1
	  param inout name "nodeIterator" type class_ref 583042 // NodeIterator
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Not DOM Level 2. Support DocumentTraversal methods.

 This is not called by the developer client. The
 developer client uses the detach() function on the
 NodeIterator itself. <p>

 This function is called from the NodeIterator#detach().
"
      end

      operation 4229122 "createRange"
	public return_type class_ref 653954 // Range
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DocumentRange methods


"
      end

      operation 4229250 "removeRange"
	package explicit_return_type "void"
	nparams 1
	  param inout name "range" type class_ref 653954 // Range
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Not a client function. Called by Range.detach(),
 so a Range can remove itself from the list of
 Ranges.
"
      end

      operation 4229378 "replacedText"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when some text was changed in a text node,
so that live objects can be notified.
"
      end

      operation 4229506 "deletedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when some text was deleted from a text node,
so that live objects can be notified.
"
      end

      operation 4229634 "insertedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when some text was inserted into a text node,
so that live objects can be notified.
"
      end

      operation 4229762 "splitData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "newNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a text node has been split,
so that live objects can be notified.
"
      end

      operation 4229890 "createEvent"
	public return_type class_ref 647682 // Event
	nparams 1
	  param inout name "type" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DocumentEvent methods


Introduced in DOM Level 2. Optional. <p>
Create and return Event objects.

@param type The eventType parameter specifies the type of Event
interface to be created.  If the Event interface specified is supported
by the implementation this method will return a new Event of the
interface type requested. If the Event is to be dispatched via the
dispatchEvent method the appropriate event init method must be called
after creation in order to initialize the Event's values.  As an
example, a user wishing to synthesize some kind of Event would call
createEvent with the parameter \"Events\". The initEvent method could then
be called on the newly created Event to set the specific type of Event
to be dispatched and set its context information.
@return Newly created Event
@exception DOMException NOT_SUPPORTED_ERR: Raised if the implementation
does not support the type of Event interface requested
@since WD-DOM-Level-2-19990923
"
      end

      operation 4230018 "setMutationEvents"
	package explicit_return_type "void"
	nparams 1
	  param inout name "set" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the DOM implementation generates mutation events
upon operations.
"
      end

      operation 4230146 "getMutationEvents"
	package explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the DOM implementation generates mutation events.
"
      end

      operation 4230274 "setEventListeners"
	private explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 646786 // NodeImpl
	  param inout name "listeners" type class_ref 175362 // List
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<LEntry> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Store event listener registered on a given node
This is another place where we could use weak references! Indeed, the
node here won't be GC'ed as long as some listener is registered on it,
since the eventsListeners table will have a reference to the node.
"
      end

      class 654082 "LEntry"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1784066 // <realization>
	  relation 1784066 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1784066 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 896386 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8426757059492421631L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1784194 // type (<unidirectional association>)
	  relation 1784194 --->
	    a role_name "type" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1784194 // type (<unidirectional association>)
	    b parent class_ref 128130 // String
	end

	classrelation 1784322 // listener (<unidirectional association>)
	  relation 1784322 --->
	    a role_name "listener" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1784322 // listener (<unidirectional association>)
	    b parent class_ref 647554 // EventListener
	end

	attribute 896514 "useCapture"
	  package explicit_type "boolean"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 4230530 "LEntry"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "type" type class_ref 128130 // String
	    param inout name "listener" type class_ref 647554 // EventListener
	    param inout name "useCapture" explicit_type "boolean"
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " NON-DOM INTERNAL: Constructor for Listener list Entry
@param type Event name (NOT event group!) to listen for.
@param listener Who gets called when event is dispatched
@param useCaptue True iff listener is registered on
 capturing phase rather than at-target or bubbling
"
	end
      end

      operation 4230402 "getEventListeners"
	private return_type class_ref 175362 // List
	nparams 1
	  param inout name "n" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<LEntry> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retreive event listener registered on a given node
"
      end

      operation 4230658 "addEventListener"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " LEntry

Introduced in DOM Level 2. <p> Register an event listener with this
Node. A listener may be independently registered as both Capturing and
Bubbling, but may only be registered once per role; redundant
registrations are ignored.
@param node node to add listener to
@param type Event name (NOT event group!) to listen for.
@param listener Who gets called when event is dispatched
@param useCapture True iff listener is registered on
 capturing phase rather than at-target or bubbling
"
      end

      operation 4230786 "removeEventListener"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "type" type class_ref 128130 // String
	  param inout name "listener" type class_ref 647554 // EventListener
	  param inout name "useCapture" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " addEventListener(NodeImpl,String,EventListener,boolean) :void

Introduced in DOM Level 2. <p> Deregister an event listener previously
registered with this Node.  A listener must be independently removed
from the Capturing and Bubbling roles. Redundant removals (of listeners
not currently registered for this role) are ignored.
@param node node to remove listener from
@param type Event name (NOT event group!) to listen for.
@param listener Who gets called when event is dispatched
@param useCapture True iff listener is registered on
 capturing phase rather than at-target or bubbling
"
      end

      operation 4230914 "copyEventListeners"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 646786 // NodeImpl
	  param inout name "tgt" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " removeEventListener(NodeImpl,String,EventListener,boolean) :void"
      end

      operation 4231042 "dispatchEvent"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "event" type class_ref 647682 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Distribution engine for DOM Level 2 Events.
<p>
Event propagation runs as follows:
<ol>
<li>Event is dispatched to a particular target node, which invokes
  this code. Note that the event's stopPropagation flag is
  cleared when dispatch begins; thereafter, if it has
  been set before processing of a node commences, we instead
  immediately advance to the DEFAULT phase.
<li>The node's ancestors are established as destinations for events.
  For capture and bubble purposes, node ancestry is determined at
  the time dispatch starts. If an event handler alters the document
  tree, that does not change which nodes will be informed of the event.
<li>CAPTURING_PHASE: Ancestors are scanned, root to target, for
  Capturing listeners. If found, they are invoked (see below).
<li>AT_TARGET:
  Event is dispatched to NON-CAPTURING listeners on the
  target node. Note that capturing listeners on this node are _not_
  invoked.
<li>BUBBLING_PHASE: Ancestors are scanned, target to root, for
  non-capturing listeners.
<li>Default processing: Some DOMs have default behaviors bound to
  specific nodes. If this DOM does, and if the event's preventDefault
  flag has not been set, we now return to the target node and process
  its default handler for this event, if any.
</ol>
<p>
Note that registration of handlers during processing of an event does
not take effect during this phase of this event; they will not be called
until the next time this node is visited by dispatchEvent. On the other
hand, removals take effect immediately.
<p>
If an event handler itself causes events to be dispatched, they are
processed synchronously, before processing resumes
on the event which triggered them. Please be aware that this may
result in events arriving at listeners \"out of order\" relative
to the actual sequence of requests.
<p>
Note that our implementation resets the event's stop/prevent flags
when dispatch begins.
I believe the DOM's intent is that event objects be redispatchable,
though it isn't stated in those terms.
@param node node to dispatch to
@param event the event object to be dispatched to
             registered EventListeners
@return true if the event's <code>preventDefault()</code>
             method was invoked by an EventListener; otherwise false.
"
      end

      operation 4231170 "dispatchEventToSubtree"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "e" type class_ref 647682 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " dispatchEvent(NodeImpl,Event) :boolean

NON-DOM INTERNAL: DOMNodeInsertedIntoDocument and ...RemovedFrom...
are dispatched to an entire subtree. This is the distribution code
therefor. They DO NOT bubble, thanks be, but may be captured.
<p>
Similar to code in dispatchingEventToSubtree however this method
is only used on the target node and does not start a dispatching chain
on the sibling of the target node as this is not part of the subtree
***** At the moment I'm being sloppy and using the normal
capture dispatcher on every node. This could be optimized hugely
by writing a capture engine that tracks our position in the tree to
update the capture chain without repeated chases up to root.
@param n target node (that was directly inserted or removed)
@param e event to be sent to that node and its subtree
"
      end

      operation 4231298 "dispatchingEventToSubtree"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "e" type class_ref 647682 // Event
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " dispatchEventToSubtree(NodeImpl,Node,Event) :void

Dispatches event to the target node's descendents recursively

@param n node to dispatch to
@param e event to be sent to that node and its subtree
"
      end

      class 654210 "EnclosingAttr"
	visibility package 
	cpp_decl ""
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1784450 // <realization>
	  relation 1784450 -_-|>
	    a public
	      java "${type}"
	      classrelation_ref 1784450 // <realization>
	    b parent class_ref 136578 // Serializable
	end

	attribute 896642 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 5208387723391647216L"
	  cpp_decl ""
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1784578 // node (<unidirectional association>)
	  relation 1784578 --->
	    a role_name "node" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1784578 // node (<unidirectional association>)
	    b parent class_ref 647170 // AttrImpl
	end

	classrelation 1784706 // oldvalue (<unidirectional association>)
	  relation 1784706 --->
	    a role_name "oldvalue" package
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1784706 // oldvalue (<unidirectional association>)
	    b parent class_ref 128130 // String
	end
      end

      classrelation 1784834 // savedEnclosingAttr (<unidirectional association>)
	relation 1784834 --->
	  a role_name "savedEnclosingAttr" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1784834 // savedEnclosingAttr (<unidirectional association>)
	  b parent class_ref 654210 // EnclosingAttr
      end

      operation 4231426 "dispatchAggregateEvents"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "ea" type class_ref 654210 // EnclosingAttr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM INTERNAL: Convenience wrapper for calling
dispatchAggregateEvents when the context was established
by <code>savedEnclosingAttr</code>.
@param node node to dispatch to
@param ea description of Attr affected by current operation
"
      end

      operation 4231554 "dispatchAggregateEvents"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "enclosingAttr" type class_ref 647170 // AttrImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	  param in name "change" explicit_type "short"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " dispatchAggregateEvents(NodeImpl,EnclosingAttr) :void

NON-DOM INTERNAL: Generate the \"aggregated\" post-mutation events
DOMAttrModified and DOMSubtreeModified.
Both of these should be issued only once for each user-requested
mutation operation, even if that involves multiple changes to
the DOM.
For example, if a DOM operation makes multiple changes to a single
Attr before returning, it would be nice to generate only one
DOMAttrModified, and multiple changes over larger scope but within
a recognizable single subtree might want to generate only one
DOMSubtreeModified, sent to their lowest common ancestor.
<p>
To manage this, use the \"internal\" versions of insert and remove
with MUTATION_LOCAL, then make an explicit call to this routine
at the higher level. Some examples now exist in our code.

@param node The node to dispatch to
@param enclosingAttr The Attr node (if any) whose value has been changed
as a result of the DOM operation. Null if none such.
@param oldValue The String value previously held by the
enclosingAttr. Ignored if none such.
@param change Type of modification to the attr. See
MutationEvent.attrChange
"
      end

      operation 4231682 "saveEnclosingAttr"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " dispatchAggregateEvents(NodeImpl, AttrImpl,String) :void

NON-DOM INTERNAL: Pre-mutation context check, in
preparation for later generating DOMAttrModified events.
Determines whether this node is within an Attr
@param node node to get enclosing attribute for
@return either a description of that Attr, or null if none such.
"
      end

      operation 4231810 "modifyingCharacterData"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " saveEnclosingAttr(NodeImpl) :void

A method to be called when a character data node has been modified
"
      end

      operation 4231938 "modifiedCharacterData"
	package explicit_return_type "void"
	nparams 4
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a character data node has been modified
"
      end

      operation 4232066 "replacedCharacterData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a character data node has been replaced
"
      end

      operation 4232194 "insertingNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be inserted in the tree.
"
      end

      operation 4232322 "insertedNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "newInternal" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been inserted in the tree.
"
      end

      operation 4232450 "removingNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "oldChild" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be removed from the tree.
"
      end

      operation 4232578 "removedNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "node" type class_ref 646786 // NodeImpl
	  param inout name "replace" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been removed from the tree.
"
      end

      operation 4232706 "replacingNode"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node is about to be replaced in the tree.
"
      end

      operation 4232834 "replacingData"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when character data is about to be replaced in the tree.
"
      end

      operation 4232962 "replacedNode"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 646786 // NodeImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when a node has been replaced in the tree.
"
      end

      operation 4233090 "modifiedAttrValue"
	package explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "oldvalue" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute value has been modified
"
      end

      operation 4233218 "setAttrNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "previous" type class_ref 647170 // AttrImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been set
"
      end

      operation 4233346 "removedAttrNode"
	package explicit_return_type "void"
	nparams 3
	  param inout name "attr" type class_ref 647170 // AttrImpl
	  param inout name "oldOwner" type class_ref 646786 // NodeImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been removed
"
      end

      operation 4233474 "renamedAttrNode"
	package explicit_return_type "void"
	nparams 2
	  param inout name "oldAt" type class_ref 648066 // Attr
	  param inout name "newAt" type class_ref 648066 // Attr
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an attribute node has been renamed
"
      end

      operation 4233602 "renamedElement"
	package explicit_return_type "void"
	nparams 2
	  param inout name "oldEl" type class_ref 648194 // Element
	  param inout name "newEl" type class_ref 648194 // Element
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to be called when an element has been renamed
"
      end

      operation 4233730 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@serialData Serialized fields. Convert Maps to Hashtables and Lists
to Vectors for backward compatibility.
"
      end

      operation 4233858 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end
    end

    class 654594 "DeferredDocumentTypeImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a Document Type <em>declaraction</em> in
the document itself, <em>not</em> a Document Type Definition (DTD).
An XML document may (or may not) have such a reference.
<P>
DocumentType is an Extended DOM feature, used in XML documents but
not in HTML.
<P>
Note that Entities and Notations are no longer children of the
DocumentType, but are parentless nodes hung only in their
appropriate NamedNodeMaps.
<P>
This area is UNDERSPECIFIED IN REC-DOM-Level-1-19981001
Most notably, absolutely no provision was made for storing
and using Element and Attribute information. Nor was the linkage
between Entities and Entity References nailed down solidly.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1787522 // <generalisation>
	relation 1787522 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1787522 // <generalisation>
	  b parent class_ref 650626 // DocumentTypeImpl
      end

      classrelation 1787650 // <realization>
	relation 1787650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1787650 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 899714 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -2172579663227313509L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 899842 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4248706 "DeferredDocumentTypeImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4248834 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4248962 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4249090 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()
 Synchronizes the entities, notations, and elements. "
      end
    end

    class 654722 "DeferredDOMImplementationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This DOMImplementation class is description of a particular
implementation of the Document Object Model. As such its data is
static, shared by all instances of this implementation.</p>

<p>This implementation simply extends DOMImplementationImpl to differentiate
between the Deferred DOM Implementations and Non-Deferred DOM Implementations.</p>

@xerces.internal

@author Neil Delima, IBM

"
      classrelation 1788162 // <generalisation>
	relation 1788162 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1788162 // <generalisation>
	  b parent class_ref 654850 // DOMImplementationImpl
      end

      classrelation 1788290 // singleton (<unidirectional association>)
	relation 1788290 --->
	  a role_name "singleton" init_value " new DeferredDOMImplementationImpl()" class_relation package
	    comment " Data

 static
 Dom implementation singleton. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1788290 // singleton (<unidirectional association>)
	  b parent class_ref 654722 // DeferredDOMImplementationImpl
      end

      operation 4249602 "getDOMImplementation"
	class_operation public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 NON-DOM: Obtain and return the single shared object "
      end
    end

    class 654850 "DOMImplementationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DOMImplementation class is description of a particular
implementation of the Document Object Model. As such its data is
static, shared by all instances of this implementation.
<P>
The DOM API requires that it be a real object rather than static
methods. However, there's nothing that says it can't be a singleton,
so that's how I've implemented it.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1787778 // <generalisation>
	relation 1787778 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1787778 // <generalisation>
	  b parent class_ref 651394 // CoreDOMImplementationImpl
      end

      classrelation 1787906 // <realization>
	relation 1787906 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1787906 // <realization>
	  b parent class_ref 636674 // DOMImplementation
      end

      classrelation 1788034 // singleton (<unidirectional association>)
	relation 1788034 --->
	  a role_name "singleton" init_value " new DOMImplementationImpl()" class_relation package
	    comment " Data

 static
 Dom implementation singleton. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1788034 // singleton (<unidirectional association>)
	  b parent class_ref 654850 // DOMImplementationImpl
      end

      operation 4249218 "getDOMImplementation"
	class_operation public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 NON-DOM: Obtain and return the single shared object "
      end

      operation 4249346 "hasFeature"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMImplementation methods


Test if the DOM implementation supports a specific \"feature\" --
currently meaning language and level thereof.

@param feature      The package name of the feature to test.
In Level 1, supported values are \"HTML\" and \"XML\" (case-insensitive).
At this writing, com.sun.org.apache.xerces.internal.dom supports only XML.

@param version      The version number of the feature being tested.
This is interpreted as \"Version of the DOM API supported for the
specified Feature\", and in Level 1 should be \"1.0\"

@return    true iff this implementation is compatable with the
specified feature and version.
"
      end

      operation 4249474 "createDocument"
	public return_type class_ref 378626 // Document
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "doctype" type class_ref 649986 // DocumentType
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hasFeature(String,String):boolean

Introduced in DOM Level 2. <p>

Creates an XML Document object of the specified type with its document
element.

@param namespaceURI     The namespace URI of the document
                        element to create, or null.
@param qualifiedName    The qualified name of the document
                        element to create.
@param doctype          The type of document to be created or null.<p>

                        When doctype is not null, its
                        Node.ownerDocument attribute is set to
                        the document being created.
@return Document        A new Document object.
@throws DOMException    WRONG_DOCUMENT_ERR: Raised if doctype has
                        already been used with a different document.
@since WD-DOM-Level-2-19990923
"
      end
    end

    class 654978 "DeferredElementDefinitionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "NON-DOM CLASS: Describe one of the Elements (and its associated
Attributes) defined in this Document Type.
<p>
I've included this in Level 1 purely as an anchor point for default
attributes. In Level 2 it should enable the ChildRule support.

@xerces.internal

"
      classrelation 1788802 // <generalisation>
	relation 1788802 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1788802 // <generalisation>
	  b parent class_ref 651266 // ElementDefinitionImpl
      end

      classrelation 1788930 // <realization>
	relation 1788930 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1788930 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 900098 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6703238199538041591L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 900226 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4250370 "DeferredElementDefinitionImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4250498 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4250626 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4250754 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()
 Synchronizes the default attribute values. "
      end
    end

    class 655106 "DeferredElementImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Elements represent most of the \"markup\" and structure of the
document.  They contain both the data for the element itself
(element name and attributes), and any contained nodes, including
document text (as children).
<P>
Elements may have Attributes associated with them; the API for this is
defined in Node, but the function is implemented here. In general, XML
applications should retrive Attributes as Nodes, since they may contain
entity references and hence be a fairly complex sub-tree. HTML users will
be dealing with simple string values, and convenience methods are provided
to work in terms of Strings.
<P>
DeferredElementImpl inherits from ElementImpl which does not support
Namespaces. DeferredElementNSImpl, which inherits from ElementNSImpl, does.
@see DeferredElementNSImpl

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1789826 // <generalisation>
	relation 1789826 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1789826 // <generalisation>
	  b parent class_ref 647042 // ElementImpl
      end

      classrelation 1789954 // <realization>
	relation 1789954 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1789954 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 900482 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7670981133940934842L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 900610 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4258946 "DeferredElementImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here. All
other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4259074 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4259202 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4259330 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()"
      end
    end

    class 655234 "DeferredElementNSImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "DeferredElementNSImpl is to ElementNSImpl, what DeferredElementImpl is to
ElementImpl.

@xerces.internal

@see DeferredElementImpl
"
      classrelation 1790722 // <generalisation>
	relation 1790722 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1790722 // <generalisation>
	  b parent class_ref 655362 // ElementNSImpl
      end

      classrelation 1790850 // <realization>
	relation 1790850 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1790850 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 900866 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -5001885145370927385L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 900994 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4261506 "DeferredElementNSImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here. All
other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4261634 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4261762 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data (name and value) for fast nodes. "
      end

      operation 4261890 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()

Synchronizes the node's children with the internal structure.
Fluffing the children at once solves a lot of work to keep
the two structures in sync. The problem gets worse when
editing the tree -- this makes it a lot easier.
"
      end
    end

    class 655362 "ElementNSImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ElementNSImpl inherits from ElementImpl and adds namespace support.
<P>
The qualified name is the node name, and we store localName which is also
used in all queries. On the other hand we recompute the prefix when
necessary.

@xerces.internal

@author Elena litani, IBM
@author Neeraj Bajaj, Sun Microsystems
@version $Id: ElementNSImpl.java,v 1.7 2010-11-01 04:39:39 joehw Exp $
"
      classrelation 1790082 // <generalisation>
	relation 1790082 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1790082 // <generalisation>
	  b parent class_ref 647042 // ElementImpl
      end

      attribute 900738 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -9142310625494392642L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1790210 // xmlURI (<unidirectional association>)
	relation 1790210 --->
	  a role_name "xmlURI" init_value " \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1790210 // xmlURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1790338 // namespaceURI (<unidirectional association>)
	relation 1790338 --->
	  a role_name "namespaceURI" protected
	    comment " Data

 DOM2: Namespace URI. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1790338 // namespaceURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1790466 // localName (<unidirectional association>)
	relation 1790466 --->
	  a role_name "localName" protected
	    comment " DOM2: localName. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1790466 // localName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1790594 // type (<unidirectional association>)
	relation 1790594 --->
	  a role_name "type" package
	    comment " DOM3: type information 
 REVISIT: we are losing the type information in DOM during serialization
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1790594 // type (<unidirectional association>)
	  b parent class_ref 655490 // XSTypeDefinition
      end

      operation 4259458 "ElementNSImpl"
	protected explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4259586 "ElementNSImpl"
	protected explicit_return_type ""
	nparams 3
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM2: Constructor for Namespace implementation.
"
      end

      operation 4259714 "setName"
	private explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qname" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4259842 "ElementNSImpl"
	protected explicit_return_type ""
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " when local name is known"
      end

      operation 4259970 "ElementNSImpl"
	protected explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " for DeferredElementImpl"
      end

      operation 4260098 "rename"
	package explicit_return_type "void"
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Support for DOM Level 3 renameNode method.
 Note: This only deals with part of the pb. CoreDocumentImpl
 does all the work."
      end

      operation 4260226 "setValues"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: resets this node and sets specified values for the node

@param ownerDocument
@param namespaceURI
@param qualifiedName
@param localName
"
      end

      operation 4260354 "getNamespaceURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


DOM2: Namespace methods.


Introduced in DOM Level 2. <p>

The namespace URI of this node, or null if it is unspecified.<p>

This is not a computed value that is the result of a namespace lookup based on
an examination of the namespace declarations in scope. It is merely the
namespace URI given at creation time.<p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4260482 "getPrefix"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

The namespace prefix of this node, or null if it is unspecified. <p>

For nodes created with a DOM Level 1 method, such as createElement
from the Document interface, this is null. <p>

@since WD-DOM-Level-2-19990923
"
      end

      operation 4260610 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Note that setting this attribute changes the nodeName attribute, which holds the
qualified name, as well as the tagName and name attributes of the Element
and Attr interfaces, when applicable.<p>

@param prefix The namespace prefix of this node, or null(empty string) if it is unspecified.

@exception INVALID_CHARACTER_ERR
                  Raised if the specified
                  prefix contains an invalid character.
@exception DOMException
@since WD-DOM-Level-2-19990923
"
      end

      operation 4260738 "getLocalName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>

Returns the local part of the qualified name of this node.
@since WD-DOM-Level-2-19990923
"
      end

      operation 4260866 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Level 3 WD - Experimental.
Retrieve baseURI
"
      end

      operation 4260994 "getTypeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeName()
"
      end

      operation 4261122 "getTypeNamespace"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.TypeInfo#getTypeNamespace()
"
      end

      operation 4261250 "isDerivedFrom"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "typeNamespaceArg" type class_ref 128130 // String
	  param inout name "typeNameArg" type class_ref 128130 // String
	  param in name "derivationMethod" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Introduced in DOM Level 2. <p>
Checks if a type is derived from another by restriction. See:
http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom

@param ancestorNS
       The namspace of the ancestor type declaration
@param ancestorName
       The name of the ancestor type declaration
@param type
       The reference type definition

@return boolean True if the type is derived by restriciton for the
        reference type
"
      end

      operation 4261378 "setType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 655490 // XSTypeDefinition
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: setting type used by the DOM parser
@see NodeImpl#setReadOnly
"
      end
    end

    class 655618 "DeferredEntityImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Entity nodes hold the reference data for an XML Entity -- either
parsed or unparsed. The nodeName (inherited from Node) will contain
the name (if any) of the Entity. Its data will be contained in the
Entity's children, in exactly the structure which an
EntityReference to this name will present within the document's
body.
<P>
Note that this object models the actual entity, _not_ the entity
declaration or the entity reference.
<P>
An XML processor may choose to completely expand entities before
the structure model is passed to the DOM; in this case, there will
be no EntityReferences in the DOM tree.
<P>
Quoting the 10/01 DOM Proposal,
<BLOCKQUOTE>
\"The DOM Level 1 does not support editing Entity nodes; if a user
wants to make changes to the contents of an Entity, every related
EntityReference node has to be replaced in the structure model by
a clone of the Entity's contents, and then the desired changes
must be made to each of those clones instead. All the
descendants of an Entity node are readonly.\"
</BLOCKQUOTE>
I'm interpreting this as: It is the parser's responsibilty to call
the non-DOM operation setReadOnly(true,true) after it constructs
the Entity. Since the DOM explicitly decided not to deal with this,
_any_ answer will involve a non-DOM operation, and this is the
simplest solution.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1792386 // <generalisation>
	relation 1792386 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1792386 // <generalisation>
	  b parent class_ref 655746 // EntityImpl
      end

      classrelation 1792514 // <realization>
	relation 1792514 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1792514 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 901250 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 4760180431078941638L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 901378 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4265346 "DeferredEntityImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4265474 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4265602 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Synchronize the entity data. This is special because of the way
that the \"fast\" version stores the information.
"
      end

      operation 4265730 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()
 Synchronize the children. "
      end
    end

    class 655746 "EntityImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Entity nodes hold the reference data for an XML Entity -- either
parsed or unparsed. The nodeName (inherited from Node) will contain
the name (if any) of the Entity. Its data will be contained in the
Entity's children, in exactly the structure which an
EntityReference to this name will present within the document's
body.
<P>
Note that this object models the actual entity, _not_ the entity
declaration or the entity reference.
<P>
An XML processor may choose to completely expand entities before
the structure model is passed to the DOM; in this case, there will
be no EntityReferences in the DOM tree.
<P>
Quoting the 10/01 DOM Proposal,
<BLOCKQUOTE>
\"The DOM Level 1 does not support editing Entity nodes; if a user
wants to make changes to the contents of an Entity, every related
EntityReference node has to be replaced in the structure model by
a clone of the Entity's contents, and then the desired changes
must be made to each of those clones instead. All the
descendants of an Entity node are readonly.\"
</BLOCKQUOTE>
I'm interpreting this as: It is the parser's responsibilty to call
the non-DOM operation setReadOnly(true,true) after it constructs
the Entity. Since the DOM explicitly decided not to deal with this,
_any_ answer will involve a non-DOM operation, and this is the
simplest solution.

@xerces.internal

@author Elena Litani, IBM
@since PR-DOM-Level-1-19980818.
"
      classrelation 1790978 // <generalisation>
	relation 1790978 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1790978 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1791234 // <realization>
	relation 1791234 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1791234 // <realization>
	  b parent class_ref 651010 // Entity
      end

      attribute 901122 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3575760943444303423L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1791362 // name (<unidirectional association>)
	relation 1791362 --->
	  a role_name "name" protected
	    comment " Data

 Entity name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1791362 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1791490 // publicId (<unidirectional association>)
	relation 1791490 --->
	  a role_name "publicId" protected
	    comment " Public identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1791490 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1791618 // systemId (<unidirectional association>)
	relation 1791618 --->
	  a role_name "systemId" protected
	    comment " System identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1791618 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1791746 // encoding (<unidirectional association>)
	relation 1791746 --->
	  a role_name "encoding" protected
	    comment " Encoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1791746 // encoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1791874 // inputEncoding (<unidirectional association>)
	relation 1791874 --->
	  a role_name "inputEncoding" protected
	    comment " Input Encoding 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1791874 // inputEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1792002 // version (<unidirectional association>)
	relation 1792002 --->
	  a role_name "version" protected
	    comment " Version 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1792002 // version (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1792130 // notationName (<unidirectional association>)
	relation 1792130 --->
	  a role_name "notationName" protected
	    comment " Notation name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1792130 // notationName (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1792258 // baseURI (<unidirectional association>)
	relation 1792258 --->
	  a role_name "baseURI" protected
	    comment " base uri
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1792258 // baseURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4262786 "EntityImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4262914 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4263042 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entity name
"
      end

      operation 4263170 "setNodeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "x" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the node value.
@throws DOMException(NO_MODIFICATION_ALLOWED_ERR)
"
      end

      operation 4263298 "setPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The namespace prefix of this node
@exception DOMException
  <br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
"
      end

      operation 4263426 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clone node. "
      end

      operation 4263554 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entity methods


The public identifier associated with the entity. If not specified,
this will be null.
"
      end

      operation 4263682 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPublicId():String

The system identifier associated with the entity. If not specified,
this will be null.
"
      end

      operation 4263810 "getXmlVersion"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSystemId():String

DOM Level 3 WD - experimental
the version number of this entity, when it is an external parsed entity.
"
      end

      operation 4263938 "getXmlEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getVersion():String

DOM Level 3 WD - experimental
the encoding of this entity, when it is an external parsed entity.
"
      end

      operation 4264066 "getNotationName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getVersion():String

Unparsed entities -- which contain non-XML data -- have a
\"notation name\" which tells applications how to deal with them.
Parsed entities, which <em>are</em> in XML format, don't need this and
set it to null.
"
      end

      operation 4264194 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNotationName():String

 Public methods


DOM Level 2: The public identifier associated with the entity. If not specified,
this will be null. "
      end

      operation 4264322 "setXmlEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setPublicId(String)

NON-DOM
encoding - An attribute specifying, as part of the text declaration,
the encoding of this entity, when it is an external parsed entity.
This is null otherwise

"
      end

      operation 4264450 "getInputEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setEncoding (String)

An attribute specifying the encoding used for this entity at the tiome
of parsing, when it is an external parsed entity. This is
<code>null</code> if it an entity from the internal subset or if it
is not known..
@since DOM Level 3
"
      end

      operation 4264578 "setInputEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputEncoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM, used to set the input encoding.
"
      end

      operation 4264706 "setXmlVersion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM
version - An attribute specifying, as part of the text declaration,
the version number of this entity, when it is an external parsed entity.
This is null otherwise
"
      end

      operation 4264834 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setVersion (String)

DOM Level 2: The system identifier associated with the entity. If not
specified, this will be null.
"
      end

      operation 4264962 "setNotationName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setSystemId(String)

DOM Level 2: Unparsed entities -- which contain non-XML data -- have a
\"notation name\" which tells applications how to deal with them.
Parsed entities, which <em>are</em> in XML format, don't need this and
set it to null.
"
      end

      operation 4265090 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setNotationName(String)

Returns the absolute base URI of this node or null if the implementation
wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
null is returned.

@return The absolute base URI of this node or null.
@since DOM Level 3
"
      end

      operation 4265218 "setBaseURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM: set base uri"
      end
    end

    class 655874 "DeferredEntityReferenceImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EntityReference models the XML &entityname; syntax, when used for
entities defined by the DOM. Entities hardcoded into XML, such as
character entities, should instead have been translated into text
by the code which generated the DOM tree.
<P>
An XML processor has the alternative of fully expanding Entities
into the normal document tree. If it does so, no EntityReference nodes
will appear.
<P>
Similarly, non-validating XML processors are not required to read
or process entity declarations made in the external subset or
declared in external parameter entities. Hence, some applications
may not make the replacement value available for Parsed Entities
of these types.
<P>
EntityReference behaves as a read-only node, and the children of
the EntityReference (which reflect those of the Entity, and should
also be read-only) give its replacement value, if any. They are
supposed to automagically stay in synch if the DocumentType is
updated with new values for the Entity.
<P>
The defined behavior makes efficient storage difficult for the DOM
implementor. We can't just look aside to the Entity's definition
in the DocumentType since those nodes have the wrong parent (unless
we can come up with a clever \"imaginary parent\" mechanism). We
must at least appear to clone those children... which raises the
issue of keeping the reference synchronized with its parent.
This leads me back to the \"cached image of centrally defined data\"
solution, much as I dislike it.
<P>
For now I have decided, since REC-DOM-Level-1-19980818 doesn't
cover this in much detail, that synchronization doesn't have to be
considered while the user is deep in the tree. That is, if you're
looking within one of the EntityReferennce's children and the Entity
changes, you won't be informed; instead, you will continue to access
the same object -- which may or may not still be part of the tree.
This is the same behavior that obtains elsewhere in the DOM if the
subtree you're looking at is deleted from its parent, so it's
acceptable here. (If it really bothers folks, we could set things
up so deleted subtrees are walked and marked invalid, but that's
not part of the DOM's defined behavior.)
<P>
As a result, only the EntityReference itself has to be aware of
changes in the Entity. And it can take advantage of the same
structure-change-monitoring code I implemented to support
DeepNodeList.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1793282 // <generalisation>
	relation 1793282 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1793282 // <generalisation>
	  b parent class_ref 656002 // EntityReferenceImpl
      end

      classrelation 1793410 // <realization>
	relation 1793410 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1793410 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 901634 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 390319091370032223L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 901762 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4267010 "DeferredEntityReferenceImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4267138 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4267266 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Synchronize the entity data. This is special because of the way
that the \"fast\" version stores the information.
"
      end

      operation 4267394 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " synchronizeData()
 Synchronize the children. "
      end
    end

    class 656002 "EntityReferenceImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "EntityReference models the XML &entityname; syntax, when used for
entities defined by the DOM. Entities hardcoded into XML, such as
character entities, should instead have been translated into text
by the code which generated the DOM tree.
<P>
An XML processor has the alternative of fully expanding Entities
into the normal document tree. If it does so, no EntityReference nodes
will appear.
<P>
Similarly, non-validating XML processors are not required to read
or process entity declarations made in the external subset or
declared in external parameter entities. Hence, some applications
may not make the replacement value available for Parsed Entities
of these types.
<P>
EntityReference behaves as a read-only node, and the children of
the EntityReference (which reflect those of the Entity, and should
also be read-only) give its replacement value, if any. They are
supposed to automagically stay in synch if the DocumentType is
updated with new values for the Entity.
<P>
The defined behavior makes efficient storage difficult for the DOM
implementor. We can't just look aside to the Entity's definition
in the DocumentType since those nodes have the wrong parent (unless
we can come up with a clever \"imaginary parent\" mechanism). We
must at least appear to clone those children... which raises the
issue of keeping the reference synchronized with its parent.
This leads me back to the \"cached image of centrally defined data\"
solution, much as I dislike it.
<P>
For now I have decided, since REC-DOM-Level-1-19980818 doesn't
cover this in much detail, that synchronization doesn't have to be
considered while the user is deep in the tree. That is, if you're
looking within one of the EntityReferennce's children and the Entity
changes, you won't be informed; instead, you will continue to access
the same object -- which may or may not still be part of the tree.
This is the same behavior that obtains elsewhere in the DOM if the
subtree you're looking at is deleted from its parent, so it's
acceptable here. (If it really bothers folks, we could set things
up so deleted subtrees are walked and marked invalid, but that's
not part of the DOM's defined behavior.)
<P>
As a result, only the EntityReference itself has to be aware of
changes in the Entity. And it can take advantage of the same
structure-change-monitoring code I implemented to support
DeepNodeList.

@xerces.internal

@author Arnaud  Le Hors, IBM
@author Joe Kesselman, IBM
@author Andy Clark, IBM
@author Ralf Pfeiffer, IBM
@since  PR-DOM-Level-1-19980818.
"
      classrelation 1792642 // <generalisation>
	relation 1792642 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1792642 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1792898 // <realization>
	relation 1792898 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1792898 // <realization>
	  b parent class_ref 650370 // EntityReference
      end

      attribute 901506 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7381452955687102062L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1793026 // name (<unidirectional association>)
	relation 1793026 --->
	  a role_name "name" protected
	    comment " Data

 Name of Entity referenced 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1793026 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1793154 // baseURI (<unidirectional association>)
	relation 1793154 --->
	  a role_name "baseURI" protected
	    comment " Base URI
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1793154 // baseURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4265858 "EntityReferenceImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entity changes. 
protected int entityChanges = -1;
 Enable synchronize. 
protected boolean fEnableSynchronize = false;

 Constructors

 Factory constructor. "
      end

      operation 4265986 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4266114 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the entity referenced
"
      end

      operation 4266242 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Clone node. "
      end

      operation 4266370 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute base URI of this node or null if the implementation
wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
null is returned.

@return The absolute base URI of this node or null.
@since DOM Level 3
"
      end

      operation 4266498 "setBaseURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM: set base uri"
      end

      operation 4266626 "getEntityRefValue"
	protected return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: compute string representation of the entity reference.
This method is used to retrieve a string value for an attribute node that has child nodes.
@return String representing a value of this entity ref. or
         null if any node other than EntityReference, Text is encountered
         during computation
"
      end

      operation 4266754 "synchronizeChildren"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "EntityReference's children are a reflection of those defined in the
named Entity. This method creates them if they haven't been created yet.
This doesn't support editing the Entity though, since this only called
once for all.
"
      end

      operation 4266882 "setReadOnly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "readOnly" explicit_type "boolean"
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NON-DOM: sets the node and its children value.
<P>
Note: make sure that entity reference and its kids could be set readonly.
"
      end
    end

    class 656130 "DeferredNotationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Notations are how the Document Type Description (DTD) records hints
about the format of an XML \"unparsed entity\" -- in other words,
non-XML data bound to this document type, which some applications
may wish to consult when manipulating the document. A Notation
represents a name-value pair, with its nodeName being set to the
declared name of the notation.
<P>
Notations are also used to formally declare the \"targets\" of
Processing Instructions.
<P>
Note that the Notation's data is non-DOM information; the DOM only
records what and where it is.
<P>
See the XML 1.0 spec, sections 4.7 and 2.6, for more info.
<P>
Level 1 of the DOM does not support editing Notation contents.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1794434 // <generalisation>
	relation 1794434 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1794434 // <generalisation>
	  b parent class_ref 656258 // NotationImpl
      end

      classrelation 1794562 // <realization>
	relation 1794562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1794562 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 902018 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 5705337172887990848L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 902146 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4268930 "DeferredNotationImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4269058 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4269186 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods


Synchronizes the data. This is special because of the way
that the \"fast\" notation stores its information internally.
"
      end
    end

    class 656258 "NotationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Notations are how the Document Type Description (DTD) records hints
about the format of an XML \"unparsed entity\" -- in other words,
non-XML data bound to this document type, which some applications
may wish to consult when manipulating the document. A Notation
represents a name-value pair, with its nodeName being set to the
declared name of the notation.
<P>
Notations are also used to formally declare the \"targets\" of
Processing Instructions.
<P>
Note that the Notation's data is non-DOM information; the DOM only
records what and where it is.
<P>
See the XML 1.0 spec, sections 4.7 and 2.6, for more info.
<P>
Level 1 of the DOM does not support editing Notation contents.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1793538 // <generalisation>
	relation 1793538 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1793538 // <generalisation>
	  b parent class_ref 646786 // NodeImpl
      end

      classrelation 1793794 // <realization>
	relation 1793794 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1793794 // <realization>
	  b parent class_ref 651138 // Notation
      end

      attribute 901890 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -764632195890658402L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1793922 // name (<unidirectional association>)
	relation 1793922 --->
	  a role_name "name" protected
	    comment " Data

 Notation name. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1793922 // name (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1794050 // publicId (<unidirectional association>)
	relation 1794050 --->
	  a role_name "publicId" protected
	    comment " Public identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1794050 // publicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1794178 // systemId (<unidirectional association>)
	relation 1794178 --->
	  a role_name "systemId" protected
	    comment " System identifier. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1794178 // systemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1794306 // baseURI (<unidirectional association>)
	relation 1794306 --->
	  a role_name "baseURI" protected
	    comment " Base URI
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1794306 // baseURI (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4267778 "NotationImpl"
	public explicit_return_type ""
	nparams 2
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "name" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4267906 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4268034 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the notation name
"
      end

      operation 4268162 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Notation methods


The Public Identifier for this Notation. If no public identifier
was specified, this will be null.
"
      end

      operation 4268290 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPublicId():String

The System Identifier for this Notation. If no system identifier
was specified, this will be null.
"
      end

      operation 4268418 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getSystemId():String

 Public methods


NON-DOM: The Public Identifier for this Notation. If no public
identifier was specified, this will be null.
"
      end

      operation 4268546 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setPublicId(String)

NON-DOM: The System Identifier for this Notation. If no system
identifier was specified, this will be null.
"
      end

      operation 4268674 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setSystemId(String)

Returns the absolute base URI of this node or null if the implementation
wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
null is returned.

@return The absolute base URI of this node or null.
@since DOM Level 3
"
      end

      operation 4268802 "setBaseURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NON-DOM: set base uri"
      end
    end

    class 656386 "DeferredProcessingInstructionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Processing Instructions (PIs) permit documents to carry
processor-specific information alongside their actual content. PIs
are most common in XML, but they are supported in HTML as well.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1795202 // <generalisation>
	relation 1795202 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1795202 // <generalisation>
	  b parent class_ref 656514 // ProcessingInstructionImpl
      end

      classrelation 1795330 // <realization>
	relation 1795330 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1795330 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 902402 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -4643577954293565388L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 902530 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4270594 "DeferredProcessingInstructionImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4270722 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4270850 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the data. "
      end
    end

    class 656514 "ProcessingInstructionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Processing Instructions (PIs) permit documents to carry
processor-specific information alongside their actual content. PIs
are most common in XML, but they are supported in HTML as well.

This class inherits from CharacterDataImpl to reuse its setNodeValue method.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1794690 // <generalisation>
	relation 1794690 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1794690 // <generalisation>
	  b parent class_ref 648834 // CharacterDataImpl
      end

      classrelation 1794946 // <realization>
	relation 1794946 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1794946 // <realization>
	  b parent class_ref 650242 // ProcessingInstruction
      end

      attribute 902274 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 7554435174099981510L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      classrelation 1795074 // target (<unidirectional association>)
	relation 1795074 --->
	  a role_name "target" protected
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1795074 // target (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4269698 "ProcessingInstructionImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	  param inout name "target" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4269826 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4269954 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the target
"
      end

      operation 4270082 "getTarget"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ProcessingInstruction methods


A PI's \"target\" states what processor channel the PI's data
should be directed to. It is defined differently in HTML and XML.
<p>
In XML, a PI's \"target\" is the first (whitespace-delimited) token
following the \"<?\" token that begins the PI.
<p>
In HTML, target is always null.
<p>
Note that getNodeName is aliased to getTarget.
"
      end

      operation 4270210 "getData"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getTarget():String

A PI's data content tells the processor what we actually want it
to do.  It is defined slightly differently in HTML and XML.
<p>
In XML, the data begins with the non-whitespace character
immediately after the target -- @see getTarget().
<p>
In HTML, the data begins with the character immediately after the
\"&lt;?\" token that begins the PI.
<p>
Note that getNodeValue is aliased to getData
"
      end

      operation 4270338 "setData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getData():String

Change the data content of this PI.
Note that setData is aliased to setNodeValue.
@see #getData().
@throws DOMException(NO_MODIFICATION_ALLOWED_ERR) if node is read-only.
"
      end

      operation 4270466 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " setData(String)

Returns the absolute base URI of this node or null if the implementation
wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
null is returned.

@return The absolute base URI of this node or null.
@since DOM Level 3
"
      end
    end

    class 656642 "DeferredTextImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Text nodes hold the non-markup, non-Entity content of
an Element or Attribute.
<P>
When a document is first made available to the DOM, there is only
one Text object for each block of adjacent plain-text. Users (ie,
applications) may create multiple adjacent Texts during editing --
see {@link org.w3c.dom.Element#normalize} for discussion.
<P>
Note that CDATASection is a subclass of Text. This is conceptually
valid, since they're really just two different ways of quoting
characters when they're written out as part of an XML stream.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1795458 // <generalisation>
	relation 1795458 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1795458 // <generalisation>
	  b parent class_ref 648450 // TextImpl
      end

      classrelation 1795586 // <realization>
	relation 1795586 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1795586 // <realization>
	  b parent class_ref 652546 // DeferredNode
      end

      attribute 902658 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 2310613872100393425L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      attribute 902786 "fNodeIndex"
	protected explicit_type "int"
	cpp_decl ""
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 Node index. 
"
      end

      operation 4270978 "DeferredTextImpl"
	package explicit_return_type ""
	nparams 2
	  param inout name "ownerDocument" type class_ref 652674 // DeferredDocumentImpl
	  param in name "nodeIndex" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors


This is the deferred constructor. Only the fNodeIndex is given here.
All other data, can be requested from the ownerDocument via the index.
"
      end

      operation 4271106 "getNodeIndex"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <init>(DeferredDocumentImpl,int)

 DeferredNode methods

 Returns the node index. "
      end

      operation 4271234 "synchronizeData"
	protected explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected methods

 Synchronizes the underlying data. "
      end
    end

    class 656770 "DocumentFragmentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "DocumentFragment is a \"lightweight\" or \"minimal\" Document
object. It is very common to want to be able to extract a portion
of a document's tree or to create a new fragment of a
document. Imagine implementing a user command like cut or
rearranging a document by moving fragments around. It is desirable
to have an object which can hold such fragments and it is quite
natural to use a Node for this purpose. While it is true that a
Document object could fulfil this role, a Document object can
potentially be a heavyweight object, depending on the underlying
implementation... and in DOM Level 1, nodes aren't allowed to cross
Document boundaries anyway. What is really needed for this is a
very lightweight object.  DocumentFragment is such an object.
<P>
Furthermore, various operations -- such as inserting nodes as
children of another Node -- may take DocumentFragment objects as
arguments; this results in all the child nodes of the
DocumentFragment being moved to the child list of this node.
<P>
The children of a DocumentFragment node are zero or more nodes
representing the tops of any sub-trees defining the structure of
the document.  DocumentFragment do not need to be well-formed XML
documents (although they do need to follow the rules imposed upon
well-formed XML parsed entities, which can have multiple top
nodes). For example, a DocumentFragment might have only one child
and that child node could be a Text node. Such a structure model
represents neither an HTML document nor a well-formed XML document.
<P>
When a DocumentFragment is inserted into a Document (or indeed any
other Node that may take children) the children of the
DocumentFragment and not the DocumentFragment itself are inserted
into the Node. This makes the DocumentFragment very useful when the
user wishes to create nodes that are siblings; the DocumentFragment
acts as the parent of these nodes so that the user can use the
standard methods from the Node interface, such as insertBefore()
and appendChild().

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1795714 // <generalisation>
	relation 1795714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1795714 // <generalisation>
	  b parent class_ref 649602 // ParentNode
      end

      classrelation 1795970 // <realization>
	relation 1795970 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1795970 // <realization>
	  b parent class_ref 650114 // DocumentFragment
      end

      attribute 902914 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -7596449967279236746L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants

 Serialization version. 
"
      end

      operation 4271362 "DocumentFragmentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "ownerDoc" type class_ref 646914 // CoreDocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Factory constructor. "
      end

      operation 4271490 "DocumentFragmentImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor for serialization. "
      end

      operation 4271618 "getNodeType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Node methods


A short integer indicating what type of node this is. The named
constants for this value are defined in the org.w3c.dom.Node interface.
"
      end

      operation 4271746 "getNodeName"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the node name. "
      end

      operation 4271874 "normalize"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override default behavior to call normalize() on this Node's
children. It is up to implementors or Node to override normalize()
to take action.
"
      end
    end

    class 659330 "DOMErrorImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>DOMErrorImpl</code> is an implementation that describes an error.
<strong>Note:</strong> The error object that describes the error
might be reused by Xerces implementation, across multiple calls to the
handleEvent method on DOMErrorHandler interface.


<p>See also the <a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010913'>Document Object Model (DOM) Level 3 Core Specification</a>.

@xerces.internal

@author Gopal Sharma, SUN Microsystems Inc.
@author Elena Litani, IBM


 REVISIT: the implementation of ErrorReporter.
          we probably should not pass XMLParseException
"
      classrelation 1801474 // <realization>
	relation 1801474 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1801474 // <realization>
	  b parent class_ref 659458 // DOMError
      end

      attribute 905218 "fSeverity"
	public explicit_type "short"
	init_value " DOMError.SEVERITY_WARNING"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

"
      end

      classrelation 1801602 // fMessage (<unidirectional association>)
	relation 1801602 --->
	  a role_name "fMessage" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801602 // fMessage (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1801730 // fLocator (<unidirectional association>)
	relation 1801730 --->
	  a role_name "fLocator" init_value " new DOMLocatorImpl()" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801730 // fLocator (<unidirectional association>)
	  b parent class_ref 659714 // DOMLocatorImpl
      end

      classrelation 1801858 // fException (<unidirectional association>)
	relation 1801858 --->
	  a role_name "fException" init_value " null" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801858 // fException (<unidirectional association>)
	  b parent class_ref 132226 // Exception
      end

      classrelation 1801986 // fType (<unidirectional association>)
	relation 1801986 --->
	  a role_name "fType" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1801986 // fType (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1802114 // fRelatedData (<unidirectional association>)
	relation 1802114 --->
	  a role_name "fRelatedData" public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1802114 // fRelatedData (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      operation 4281602 "DOMErrorImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors

 Default constructor. "
      end

      operation 4281730 "DOMErrorImpl"
	public explicit_return_type ""
	nparams 2
	  param in name "severity" explicit_type "short"
	  param inout name "exception" type class_ref 659842 // XMLParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Exctracts information from XMLParserException) "
      end

      operation 4281858 "getSeverity"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The severity of the error, either <code>SEVERITY_WARNING</code>,
<code>SEVERITY_ERROR</code>, or <code>SEVERITY_FATAL_ERROR</code>.
"
      end

      operation 4281986 "getMessage"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An implementation specific string describing the error that occured.
"
      end

      operation 4282114 "getLocation"
	public return_type class_ref 659586 // DOMLocator
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The location of the error.
"
      end

      operation 4282242 "createDOMLocator"
	private return_type class_ref 659714 // DOMLocatorImpl
	nparams 1
	  param inout name "exception" type class_ref 659842 // XMLParseException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " method to get the DOMLocator Object"
      end

      operation 4282370 "getRelatedException"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " createDOMLocator()

The related platform dependent exception if any.exception is a reserved
word, we need to rename it.Change to \"relatedException\". (F2F 26 Sep
2001)
"
      end

      operation 4282498 "reset"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4282626 "getType"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4282754 "getRelatedData"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 659714 "DOMLocatorImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<code>DOMLocatorImpl</code> is an implementaion that describes a location (e.g.
where an error occured).
<p>See also the <a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010913'>Document Object Model (DOM) Level 3 Core Specification</a>.

@xerces.internal

@author Gopal Sharma, SUN Microsystems Inc.
"
      classrelation 1803650 // <realization>
	relation 1803650 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1803650 // <realization>
	  b parent class_ref 659586 // DOMLocator
      end

      attribute 905474 "fColumnNumber"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data


The column number where the error occured,
or -1 if there is no column number available.

"
      end

      attribute 905602 "fLineNumber"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The line number where the error occured,
or -1 if there is no line number available.

"
      end

      classrelation 1803778 // fRelatedNode (<unidirectional association>)
	relation 1803778 --->
	  a role_name "fRelatedNode" init_value " null" public
	    comment " related data node
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803778 // fRelatedNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1803906 // fUri (<unidirectional association>)
	relation 1803906 --->
	  a role_name "fUri" init_value " null" public
	    comment "
The URI where the error occured,
or null if there is no URI available.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803906 // fUri (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 905730 "fByteOffset"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The byte offset into the input source this locator is pointing to or -1
if there is no byte offset available

"
      end

      attribute 905858 "fUtf16Offset"
	public explicit_type "int"
	init_value " -1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646],
offset into the input source this locator is pointing to or -1 if there
is no UTF-16 offset available.

"
      end

      operation 4289794 "DOMLocatorImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructors
"
      end

      operation 4289922 "DOMLocatorImpl"
	public explicit_return_type ""
	nparams 3
	  param in name "lineNumber" explicit_type "int"
	  param in name "columnNumber" explicit_type "int"
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4290050 "DOMLocatorImpl"
	public explicit_return_type ""
	nparams 4
	  param in name "lineNumber" explicit_type "int"
	  param in name "columnNumber" explicit_type "int"
	  param in name "utf16Offset" explicit_type "int"
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMLocatorImpl (int lineNumber, int columnNumber, String uri )"
      end

      operation 4290178 "DOMLocatorImpl"
	public explicit_return_type ""
	nparams 5
	  param in name "lineNumber" explicit_type "int"
	  param in name "columnNumber" explicit_type "int"
	  param in name "byteoffset" explicit_type "int"
	  param inout name "relatedData" type class_ref 317570 // Node
	  param inout name "uri" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMLocatorImpl (int lineNumber, int columnNumber, int utf16Offset, String uri )"
      end

      operation 4290306 "DOMLocatorImpl"
	public explicit_return_type ""
	nparams 6
	  param in name "lineNumber" explicit_type "int"
	  param in name "columnNumber" explicit_type "int"
	  param in name "byteoffset" explicit_type "int"
	  param inout name "relatedData" type class_ref 317570 // Node
	  param inout name "uri" type class_ref 128130 // String
	  param in name "utf16Offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMLocatorImpl (int lineNumber, int columnNumber, int offset, Node errorNode, String uri )"
      end

      operation 4290434 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMLocatorImpl (int lineNumber, int columnNumber, int offset, Node errorNode, String uri )

The line number where the error occured, or -1 if there is no line
number available.
"
      end

      operation 4290562 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The column number where the error occured, or -1 if there is no column
number available.
"
      end

      operation 4290690 "getUri"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The URI where the error occured, or null if there is no URI available.
"
      end

      operation 4290818 "getRelatedNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4290946 "getByteOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The byte offset into the input source this locator is pointing to or -1
if there is no byte offset available
"
      end

      operation 4291074 "getUtf16Offset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646],
offset into the input source this locator is pointing to or -1 if there
is no UTF-16 offset available.
"
      end
    end

    class 659970 "DOMImplementationListImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>This class implements the DOM Level 3 Core interface DOMImplementationList.</p>

@xerces.internal

@author Neil Delima, IBM
@since DOM Level 3 Core
"
      classrelation 1802242 // <realization>
	relation 1802242 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1802242 // <realization>
	  b parent class_ref 660098 // DOMImplementationList
      end

      classrelation 1802370 // fImplementations (<unidirectional association>)
	relation 1802370 --->
	  a role_name "fImplementations" private
	    comment "A collection of DOMImplementations
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1802370 // fImplementations (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 4283138 "DOMImplementationListImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty list of DOMImplementations
"
      end

      operation 4283266 "DOMImplementationListImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "params" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty list of DOMImplementations
"
      end

      operation 4283394 "item"
	public return_type class_ref 636674 // DOMImplementation
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the indexth item in the collection.

@param index The index of the DOMImplemetation from the list to return.
"
      end

      operation 4283522 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of DOMImplementations in the list.

@return An integer indicating the number of DOMImplementations.
"
      end
    end

    class 660226 "DOMImplementationSourceImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Supply one the right implementation, based upon requested features. Each
implemented <code>DOMImplementationSource</code> object is listed in the
binding-specific list of available sources so that its
<code>DOMImplementation</code> objects are made available.

<p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationSource'>Document Object Model (DOM) Level 3 Core Specification</a>.

@xerces.internal

"
      classrelation 1802498 // <realization>
	relation 1802498 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1802498 // <realization>
	  b parent class_ref 660354 // DOMImplementationSource
      end

      operation 4283906 "getDOMImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 1
	  param inout name "features" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to request a DOM implementation.
@param features A string that specifies which features are required.
  This is a space separated list in which each feature is specified
  by its name optionally followed by a space and a version number.
  This is something like: \"XML 1.0 Traversal Events 2.0\"
@return An implementation that has the desired features, or
  <code>null</code> if this source has none.
"
      end

      operation 4284034 "getDOMImplementationList"
	public return_type class_ref 660098 // DOMImplementationList
	nparams 1
	  param inout name "features" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to request a list of DOM implementations that support the
specified features and versions, as specified in .
@param features A string that specifies which features and versions
  are required. This is a space separated list in which each feature
  is specified by its name optionally followed by a space and a
  version number. This is something like: \"XML 3.0 Traversal +Events
  2.0\"
@return A list of DOM implementations that support the desired
  features.
"
      end

      operation 4284162 "testImpl"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "impl" type class_ref 636674 // DOMImplementation
	  param inout name "features" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 660482 "DOMInputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This Class <code>DOMInputImpl</code> represents a single input source for an XML entity.
<p> This Class allows an application to encapsulate information about
an input source in a single object, which may include a public
identifier, a system identifier, a byte stream (possibly with a specified
encoding), and/or a character stream.
<p> The exact definitions of a byte stream and a character stream are
binding dependent.
<p> There are two places that the application will deliver this input
source to the parser: as the argument to the <code>parse</code> method,
or as the return value of the <code>DOMResourceResolver.resolveEntity</code>
 method.
<p> The <code>DOMParser</code> will use the <code>LSInput</code>
object to determine how to read XML input. If there is a character stream
available, the parser will read that stream directly; if not, the parser
will use a byte stream, if available; if neither a character stream nor a
byte stream is available, the parser will attempt to open a URI
connection to the resource identified by the system identifier.
<p> An <code>LSInput</code> object belongs to the application: the
parser shall never modify it in any way (it may modify a copy if
necessary).  Eventhough all attributes in this interface are writable the
DOM implementation is expected to never mutate a LSInput.
<p>See also the <a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'>Document Object Model (DOM) Level 3 Abstract Schemas and Load
and Save Specification</a>.

@xerces.internal

@author Gopal Sharma, SUN Microsystems Inc.

 REVISIT:
 1. it should be possible to do the following
 DOMInputImpl extends XMLInputSource implements LSInput
 2. we probably need only the default constructor.  -- el"
      classrelation 1802626 // <realization>
	relation 1802626 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1802626 // <realization>
	  b parent class_ref 651906 // LSInput
      end

      classrelation 1802754 // fPublicId (<unidirectional association>)
	relation 1802754 --->
	  a role_name "fPublicId" init_value " null" protected
	    comment " Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1802754 // fPublicId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1802882 // fSystemId (<unidirectional association>)
	relation 1802882 --->
	  a role_name "fSystemId" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1802882 // fSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1803010 // fBaseSystemId (<unidirectional association>)
	relation 1803010 --->
	  a role_name "fBaseSystemId" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803010 // fBaseSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1803138 // fByteStream (<unidirectional association>)
	relation 1803138 --->
	  a role_name "fByteStream" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803138 // fByteStream (<unidirectional association>)
	  b parent class_ref 146434 // InputStream
      end

      classrelation 1803266 // fCharStream (<unidirectional association>)
	relation 1803266 --->
	  a role_name "fCharStream" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803266 // fCharStream (<unidirectional association>)
	  b parent class_ref 407298 // Reader
      end

      classrelation 1803394 // fData (<unidirectional association>)
	relation 1803394 --->
	  a role_name "fData" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803394 // fData (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1803522 // fEncoding (<unidirectional association>)
	relation 1803522 --->
	  a role_name "fEncoding" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1803522 // fEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      attribute 905346 "fCertifiedText"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4286338 "DOMInputImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default Constructor, constructs an input source


"
      end

      operation 4286466 "DOMInputImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an input source from just the public and system
identifiers, leaving resolution of the entity and opening of
the input stream up to the caller.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
"
      end

      operation 4286594 "DOMInputImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "byteStream" type class_ref 146434 // InputStream
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMInputImpl(String,String,String)

Constructs an input source from a byte stream.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
@param byteStream   The byte stream.
@param encoding     The encoding of the byte stream, if known.
"
      end

      operation 4286722 "DOMInputImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "charStream" type class_ref 407298 // Reader
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMInputImpl(String,String,String,InputStream,String)

Constructs an input source from a character stream.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
@param charStream   The character stream.
@param encoding     The original encoding of the byte stream
                    used by the reader, if known.
"
      end

      operation 4286850 "DOMInputImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "publicId" type class_ref 128130 // String
	  param inout name "systemId" type class_ref 128130 // String
	  param inout name "baseSystemId" type class_ref 128130 // String
	  param inout name "data" type class_ref 128130 // String
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMInputImpl(String,String,String,Reader,String)

Constructs an input source from a String.

@param publicId     The public identifier, if known.
@param systemId     The system identifier. This value should
                    always be set, if possible, and can be
                    relative or absolute. If the system identifier
                    is relative, then the base system identifier
                    should be set.
@param baseSystemId The base system identifier. This value should
                    always be set to the fully expanded URI of the
                    base system identifier, if possible.
@param data                 The String Data.
@param encoding     The original encoding of the byte stream
                    used by the reader, if known.
"
      end

      operation 4286978 "getByteStream"
	public return_type class_ref 146434 // InputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMInputImpl(String,String,String,String,String)

An attribute of a language-binding dependent type that represents a
stream of bytes.
<br>The parser will ignore this if there is also a character stream
specified, but it will use a byte stream in preference to opening a
URI connection itself.
<br>If the application knows the character encoding of the byte stream,
it should set the encoding property. Setting the encoding in this way
will override any encoding specified in the XML declaration itself.
"
      end

      operation 4287106 "setByteStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "byteStream" type class_ref 146434 // InputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An attribute of a language-binding dependent type that represents a
stream of bytes.
<br>The parser will ignore this if there is also a character stream
specified, but it will use a byte stream in preference to opening a
URI connection itself.
<br>If the application knows the character encoding of the byte stream,
it should set the encoding property. Setting the encoding in this way
will override any encoding specified in the XML declaration itself.
"
      end

      operation 4287234 "getCharacterStream"
	public return_type class_ref 407298 // Reader
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " An attribute of a language-binding dependent type that represents a
stream of 16-bit units. Application must encode the stream using
UTF-16 (defined in  and Amendment 1 of ).
<br>If a character stream is specified, the parser will ignore any byte
stream and will not attempt to open a URI connection to the system
identifier.
"
      end

      operation 4287362 "setCharacterStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characterStream" type class_ref 407298 // Reader
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " An attribute of a language-binding dependent type that represents a
stream of 16-bit units. Application must encode the stream using
UTF-16 (defined in  and Amendment 1 of ).
<br>If a character stream is specified, the parser will ignore any byte
stream and will not attempt to open a URI connection to the system
identifier.
"
      end

      operation 4287490 "getStringData"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A string attribute that represents a sequence of 16 bit units (utf-16
encoded characters).
<br>If string data is available in the input source, the parser will
ignore the character stream and the byte stream and will not attempt
to open a URI connection to the system identifier.
"
      end

      operation 4287618 "setStringData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "stringData" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A string attribute that represents a sequence of 16 bit units (utf-16
encoded characters).
<br>If string data is available in the input source, the parser will
ignore the character stream and the byte stream and will not attempt
to open a URI connection to the system identifier.
"
      end

      operation 4287746 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character encoding, if known. The encoding must be a string
acceptable for an XML encoding declaration ( section 4.3.3 \"Character
Encoding in Entities\").
<br>This attribute has no effect when the application provides a
character stream. For other sources of input, an encoding specified
by means of this attribute will override any encoding specified in
the XML claration or the Text Declaration, or an encoding obtained
from a higher level protocol, such as HTTP .
"
      end

      operation 4287874 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The character encoding, if known. The encoding must be a string
acceptable for an XML encoding declaration ( section 4.3.3 \"Character
Encoding in Entities\").
<br>This attribute has no effect when the application provides a
character stream. For other sources of input, an encoding specified
by means of this attribute will override any encoding specified in
the XML claration or the Text Declaration, or an encoding obtained
from a higher level protocol, such as HTTP .
"
      end

      operation 4288002 "getPublicId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The public identifier for this input source. The public identifier is
always optional: if the application writer includes one, it will be
provided as part of the location information.
"
      end

      operation 4288130 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The public identifier for this input source. The public identifier is
always optional: if the application writer includes one, it will be
provided as part of the location information.
"
      end

      operation 4288258 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system identifier, a URI reference , for this input source. The
system identifier is optional if there is a byte stream or a
character stream, but it is still useful to provide one, since the
application can use it to resolve relative URIs and can include it in
error messages and warnings (the parser will attempt to fetch the
ressource identifier by the URI reference only if there is no byte
stream or character stream specified).
<br>If the application knows the character encoding of the object
pointed to by the system identifier, it can register the encoding by
setting the encoding attribute.
<br>If the system ID is a relative URI reference (see section 5 in ),
the behavior is implementation dependent.
"
      end

      operation 4288386 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system identifier, a URI reference , for this input source. The
system identifier is optional if there is a byte stream or a
character stream, but it is still useful to provide one, since the
application can use it to resolve relative URIs and can include it in
error messages and warnings (the parser will attempt to fetch the
ressource identifier by the URI reference only if there is no byte
stream or character stream specified).
<br>If the application knows the character encoding of the object
pointed to by the system identifier, it can register the encoding by
setting the encoding attribute.
<br>If the system ID is a relative URI reference (see section 5 in ),
the behavior is implementation dependent.
"
      end

      operation 4288514 "getBaseURI"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The base URI to be used (see section 5.1.4 in ) for resolving relative
URIs to absolute URIs. If the baseURI is itself a relative URI, the
behavior is implementation dependent.
"
      end

      operation 4288642 "setBaseURI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "baseURI" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The base URI to be used (see section 5.1.4 in ) for resolving relative
URIs to absolute URIs. If the baseURI is itself a relative URI, the
behavior is implementation dependent.
"
      end

      operation 4288770 "getCertifiedText"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If set to true, assume that the input is certified (see section 2.13
in [<a href='http://www.w3.org/TR/2002/CR-xml11-20021015/'>XML 1.1</a>]) when
parsing [<a href='http://www.w3.org/TR/2002/CR-xml11-20021015/'>XML 1.1</a>].
"
      end

      operation 4288898 "setCertifiedText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certifiedText" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If set to true, assume that the input is certified (see section 2.13
in [<a href='http://www.w3.org/TR/2002/CR-xml11-20021015/'>XML 1.1</a>]) when
parsing [<a href='http://www.w3.org/TR/2002/CR-xml11-20021015/'>XML 1.1</a>].
"
      end
    end

    class 660610 "DOMMessageFormatter"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used to format DOM error messages, using the system locale.

@xerces.internal

@author Sandy Gao, IBM
@version $Id: DOMMessageFormatter.java,v 1.6 2010-11-01 04:39:38 joehw Exp $
"
      classrelation 1804034 // DOM_DOMAIN (<unidirectional association>)
	relation 1804034 --->
	  a role_name "DOM_DOMAIN" init_value " \"http://www.w3.org/dom/DOMTR\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804034 // DOM_DOMAIN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1804162 // XML_DOMAIN (<unidirectional association>)
	relation 1804162 --->
	  a role_name "XML_DOMAIN" init_value " \"http://www.w3.org/TR/1998/REC-xml-19980210\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804162 // XML_DOMAIN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1804290 // SERIALIZER_DOMAIN (<unidirectional association>)
	relation 1804290 --->
	  a role_name "SERIALIZER_DOMAIN" init_value " \"http://apache.org/xml/serializer\"" class_relation const_relation public
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804290 // SERIALIZER_DOMAIN (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1804418 // domResourceBundle (<unidirectional association>)
	relation 1804418 --->
	  a role_name "domResourceBundle" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804418 // domResourceBundle (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 1804546 // xmlResourceBundle (<unidirectional association>)
	relation 1804546 --->
	  a role_name "xmlResourceBundle" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804546 // xmlResourceBundle (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 1804674 // serResourceBundle (<unidirectional association>)
	relation 1804674 --->
	  a role_name "serResourceBundle" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804674 // serResourceBundle (<unidirectional association>)
	  b parent class_ref 249858 // ResourceBundle
      end

      classrelation 1804802 // locale (<unidirectional association>)
	relation 1804802 --->
	  a role_name "locale" init_value " null" class_relation private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1804802 // locale (<unidirectional association>)
	  b parent class_ref 312962 // Locale
      end

      operation 4291202 "DOMMessageFormatter"
	package explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4291330 "formatMessage"
	class_operation public return_type class_ref 128130 // String
	nparams 3
	  param inout name "domain" type class_ref 128130 // String
	  param inout name "key" type class_ref 128130 // String
	  param inout name "arguments" type class_ref 129538 // Object
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 660738 // MissingResourceException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a message with the specified arguments using the given
locale information.

@param domain    domain from which error string is to come.
@param key       The message key.
@param arguments The message replacement text arguments. The order
                 of the arguments must match that of the placeholders
                 in the actual message.

@return          the formatted message.

@throws MissingResourceException Thrown if the message with the
                                 specified key cannot be found.
"
      end

      operation 4291458 "getResourceBundle"
	class_operation package return_type class_ref 249858 // ResourceBundle
	nparams 1
	  param inout name "domain" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4291586 "init"
	class_operation public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize Message Formatter.
"
      end

      operation 4291714 "setLocale"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "dlocale" type class_ref 312962 // Locale
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "setLocale to be used by the formatter.
@param locale
"
      end
    end

    class 662402 "DOMOutputImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents an output destination for data.
This interface allows an application to encapsulate information about an
output destination in a single object, which may include a URI, a byte stream
(possibly with a specifiedencoding), a base URI, and/or a character stream.
The exact definitions of a byte stream and a character stream are binding
dependent.
The application is expected to provide objects that implement this interface
whenever such objects are needed. The application can either provide its
own objects that implement this interface, or it can use the generic factory
method DOMImplementationLS.createLSOutput() to create objects that
implement this interface.
The DOMSerializer will use the LSOutput object to determine where to
serialize the output to. The DOMSerializer will look at the different
outputs specified in the LSOutput in the following order to know which one
to output to, the first one that data can be output to will be used:
1.LSOutput.characterStream
2.LSOutput.byteStream
3.LSOutput.systemId
LSOutput objects belong to the application. The DOM implementation will
never modify them (though it may make copies and modify the copies,
if necessary).

@xerces.internal

@author Arun Yadav, Sun Microsytems
@author Gopal Sharma, Sun Microsystems
"
      classrelation 1808002 // <realization>
	relation 1808002 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1808002 // <realization>
	  b parent class_ref 652034 // LSOutput
      end

      classrelation 1808130 // fCharStream (<unidirectional association>)
	relation 1808130 --->
	  a role_name "fCharStream" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808130 // fCharStream (<unidirectional association>)
	  b parent class_ref 428034 // Writer
      end

      classrelation 1808258 // fByteStream (<unidirectional association>)
	relation 1808258 --->
	  a role_name "fByteStream" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808258 // fByteStream (<unidirectional association>)
	  b parent class_ref 151298 // OutputStream
      end

      classrelation 1808386 // fSystemId (<unidirectional association>)
	relation 1808386 --->
	  a role_name "fSystemId" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808386 // fSystemId (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1808514 // fEncoding (<unidirectional association>)
	relation 1808514 --->
	  a role_name "fEncoding" init_value " null" protected
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808514 // fEncoding (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4307074 "DOMOutputImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default Constructor
"
      end

      operation 4307202 "getCharacterStream"
	public return_type class_ref 428034 // Writer
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An attribute of a language and binding dependent type that represents a
writable stream of bytes. If the application knows the character encoding
of the byte stream, it should set the encoding attribute. Setting the
encoding in this way will override any encoding specified in an XML
declaration in the data.
"
      end

      operation 4307330 "setCharacterStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "characterStream" type class_ref 428034 // Writer
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An attribute of a language and binding dependent type that represents a
writable stream of bytes. If the application knows the character encoding
of the byte stream, it should set the encoding attribute. Setting the
encoding in this way will override any encoding specified in an XML
declaration in the data.
"
      end

      operation 4307458 "getByteStream"
	public return_type class_ref 151298 // OutputStream
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Depending on the language binding in use, this attribute may not be
available. An attribute of a language and binding dependent type that
represents a writable stream to which 16-bit units can be output. The
application must encode the stream using UTF-16 (defined in [Unicode] and
 Amendment 1 of [ISO/IEC 10646]).
"
      end

      operation 4307586 "setByteStream"
	public explicit_return_type "void"
	nparams 1
	  param inout name "byteStream" type class_ref 151298 // OutputStream
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Depending on the language binding in use, this attribute may not be
available. An attribute of a language and binding dependent type that
represents a writable stream to which 16-bit units can be output. The
application must encode the stream using UTF-16 (defined in [Unicode] and
 Amendment 1 of [ISO/IEC 10646]).
"
      end

      operation 4307714 "getSystemId"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system identifier, a URI reference [IETF RFC 2396], for this output
 destination. If the application knows the character encoding of the
 object pointed to by the system identifier, it can set the encoding
 using the encoding attribute. If the system ID is a relative URI
 reference (see section 5 in [IETF RFC 2396]), the behavior is
 implementation dependent.
"
      end

      operation 4307842 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system identifier, a URI reference [IETF RFC 2396], for this output
 destination. If the application knows the character encoding of the
 object pointed to by the system identifier, it can set the encoding
 using the encoding attribute. If the system ID is a relative URI
 reference (see section 5 in [IETF RFC 2396]), the behavior is
 implementation dependent.
"
      end

      operation 4307970 "getEncoding"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The character encoding, if known. The encoding must be a string
acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3
\"Character Encoding in Entities\"). This attribute has no effect when the
application provides a character stream or string data. For other sources
of input, an encoding specified by means of this attribute will override
any encoding specified in the XML declaration or the Text declaration, or
an encoding obtained from a higher level protocol, such as HTTP
[IETF RFC 2616].
"
      end

      operation 4308098 "setEncoding"
	public explicit_return_type "void"
	nparams 1
	  param inout name "encoding" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The character encoding, if known. The encoding must be a string
acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3
\"Character Encoding in Entities\"). This attribute has no effect when the
application provides a character stream or string data. For other sources
of input, an encoding specified by means of this attribute will override
any encoding specified in the XML declaration or the Text declaration, or
an encoding obtained from a higher level protocol, such as HTTP
[IETF RFC 2616].
"
      end
    end

    class 662530 "DOMStringListImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "DOM Level 3

This class implements the DOM Level 3 Core interface DOMStringList.

@xerces.internal

@author Neil Delima, IBM
"
      classrelation 1808642 // <realization>
	relation 1808642 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1808642 // <realization>
	  b parent class_ref 658562 // DOMStringList
      end

      classrelation 1808770 // fStrings (<unidirectional association>)
	relation 1808770 --->
	  a role_name "fStrings" private
	    comment "A collection of DOMString values
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1808770 // fStrings (<unidirectional association>)
	  b parent class_ref 141442 // Vector
      end

      operation 4308610 "DOMStringListImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty list of DOMStringListImpl
"
      end

      operation 4308738 "DOMStringListImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "params" type class_ref 141442 // Vector
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an empty list of DOMStringListImpl
"
      end

      operation 4308866 "item"
	public return_type class_ref 128130 // String
	nparams 1
	  param in name "index" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.DOMStringList#item(int)
"
      end

      operation 4308994 "getLength"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.DOMStringList#getLength()
"
      end

      operation 4309122 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "param" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see org.w3c.dom.DOMStringList#contains(String)
"
      end

      operation 4309250 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "param" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "DOM Internal:
Add a <code>DOMString</code> to the list.

@param domString A string to add to the list
"
      end
    end

    class 662658 "DOMXSImplementationSourceImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Allows to retrieve <code>XSImplementation</code>, DOM Level 3 Core and LS implementations
and PSVI implementation.
<p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationSource'>Document Object Model (DOM) Level 3 Core Specification</a>.

@xerces.internal

@author Elena Litani, IBM
"
      classrelation 1808898 // <generalisation>
	relation 1808898 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1808898 // <generalisation>
	  b parent class_ref 660226 // DOMImplementationSourceImpl
      end

      operation 4309378 "getDOMImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 1
	  param inout name "features" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to request a DOM implementation.
@param features A string that specifies which features are required.
  This is a space separated list in which each feature is specified
  by its name optionally followed by a space and a version number.
  This is something like: \"XML 1.0 Traversal Events 2.0\"
@return An implementation that has the desired features, or
  <code>null</code> if this source has none.
"
      end

      operation 4309506 "getDOMImplementationList"
	public return_type class_ref 660098 // DOMImplementationList
	nparams 1
	  param inout name "features" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A method to request a list of DOM implementations that support the
specified features and versions, as specified in .
@param features A string that specifies which features and versions
  are required. This is a space separated list in which each feature
  is specified by its name optionally followed by a space and a
  version number. This is something like: \"XML 3.0 Traversal +Events
  2.0\"
@return A list of DOM implementations that support the desired
  features.
"
      end
    end

    class 662786 "LCount"
      visibility package 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Internal class LCount is used to track the number of
listeners registered for a given event name, as an entry
in a global Map. This should allow us to avoid generating,
or discarding, events for which no listeners are registered.

**** There should undoubtedly be methods here to manipulate
this table. At the moment that code's residing in NodeImpl.
Move it when we have a chance to do so. Sorry; we were
rushed.


@xerces.internal

"
      classrelation 1809026 // lCounts (<unidirectional association>)
	relation 1809026 --->
	  a role_name "lCounts" init_value "new java.util.concurrent.ConcurrentHashMap<>()" class_relation const_relation package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, LCount> ${name}${value};
"
	    classrelation_ref 1809026 // lCounts (<unidirectional association>)
	  b parent class_ref 130178 // Map
      end

      attribute 906754 "captures"
	public explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 906882 "bubbles"
	public explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 907010 "defaults"
	public explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 907138 "total"
	public explicit_type "int"
	init_value "0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4309634 "lookup"
	class_operation package return_type class_ref 662786 // LCount
	nparams 1
	  param inout name "evtName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 662914 "NodeIteratorImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " DefaultNodeIterator implements a NodeIterator, which iterates a
 DOM tree in the expected depth first way.

 <p>The whatToShow and filter functionality is implemented as expected.

 <p>This class also has method removeNode to enable iterator \"fix-up\"
 on DOM remove. It is expected that the DOM implementation call removeNode
 right before the actual DOM transformation. If not called by the DOM,
 the client could call it before doing the removal.

@xerces.internal

"
      classrelation 1809154 // <realization>
	relation 1809154 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1809154 // <realization>
	  b parent class_ref 583042 // NodeIterator
      end

      classrelation 1809282 // fDocument (<unidirectional association>)
	relation 1809282 --->
	  a role_name "fDocument" private
	    comment " Data

 The DocumentImpl which created this iterator, so it can be detached. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809282 // fDocument (<unidirectional association>)
	  b parent class_ref 653186 // DocumentImpl
      end

      classrelation 1809410 // fRoot (<unidirectional association>)
	relation 1809410 --->
	  a role_name "fRoot" private
	    comment " The root. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809410 // fRoot (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      attribute 907266 "fWhatToShow"
	private explicit_type "int"
	init_value " NodeFilter.SHOW_ALL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The whatToShow mask. 
"
      end

      classrelation 1809538 // fNodeFilter (<unidirectional association>)
	relation 1809538 --->
	  a role_name "fNodeFilter" private
	    comment " The NodeFilter reference. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809538 // fNodeFilter (<unidirectional association>)
	  b parent class_ref 653442 // NodeFilter
      end

      attribute 907394 "fDetach"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If detach is called, the fDetach flag is true, otherwise flase. 
"
      end

      classrelation 1809666 // fCurrentNode (<unidirectional association>)
	relation 1809666 --->
	  a role_name "fCurrentNode" private
	    comment " Iterator state - current node and direction.

 Note: The current node and direction are sufficient to implement
 the desired behaviour of the current pointer being _between_
 two nodes. The fCurrentNode is actually the last node returned,
 and the
 direction is whether the pointer is in front or behind this node.
 (usually akin to whether the node was returned via nextNode())
 (eg fForward = true) or previousNode() (eg fForward = false).
 Note also, if removing a Node, the fCurrentNode
 can be placed on a Node which would not pass filters.
 The last Node returned. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1809666 // fCurrentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      attribute 907522 "fForward"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The direction of the iterator on the fCurrentNode.
 <pre>
 nextNode()  ==      fForward = true;
 previousNode() ==   fForward = false;
 </pre>

"
      end

      attribute 907650 "fEntityReferenceExpansion"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " When TRUE, the children of entites references are returned in the iterator. 
"
      end

      operation 4310658 "NodeIteratorImpl"
	public explicit_return_type ""
	nparams 5
	  param inout name "document" type class_ref 653186 // DocumentImpl
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "int"
	  param inout name "nodeFilter" type class_ref 653442 // NodeFilter
	  param inout name "entityReferenceExpansion" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor

 Public constructor "
      end

      operation 4310786 "getRoot"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4310914 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation Note: Note that the iterator looks at whatToShow
 and filter values at each call, and therefore one _could_ add
 setters for these values and alter them while iterating!
 Return the whatToShow value "
      end

      operation 4311042 "getFilter"
	public return_type class_ref 653442 // NodeFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the filter "
      end

      operation 4311170 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return whether children entity references are included in the iterator. "
      end

      operation 4311298 "nextNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the next Node in the Iterator. The node is the next node in
 depth-first order which also passes the filter, and whatToShow.
 If there is no next node which passes these criteria, then return null.
"
      end

      operation 4311426 "previousNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the previous Node in the Iterator. The node is the next node in
 _backwards_ depth-first order which also passes the filter, and whatToShow.
"
      end

      operation 4311554 "acceptNode"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The node is accepted if it passes the whatToShow and the filter. "
      end

      operation 4311682 "matchNodeOrParent"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return node, if matches or any parent if matches. "
      end

      operation 4311810 "nextNode"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "visitChildren" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The method nextNode(Node, boolean) returns the next node
 from the actual DOM tree.

 The boolean visitChildren determines whether to visit the children.
 The result is the nextNode.
"
      end

      operation 4311938 "previousNode"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The method previousNode(Node) returns the previous node
 from the actual DOM tree.
"
      end

      operation 4312066 "removeNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fix-up the iterator on a remove. Called by DOM or otherwise,
 before an actual DOM remove.
"
      end

      operation 4312194 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 663042 "PSVIAttrNSImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Attribute namespace implementation; stores PSVI attribute items.

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1810306 // <generalisation>
	relation 1810306 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1810306 // <generalisation>
	  b parent class_ref 648578 // AttrNSImpl
      end

      classrelation 1810562 // <realization>
	relation 1810562 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1810562 // <realization>
	  b parent class_ref 663170 // AttributePSVI
      end

      attribute 908930 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -3241738699421018889L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4314114 "PSVIAttrNSImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an attribute node.
"
      end

      operation 4314242 "PSVIAttrNSImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an attribute node.
"
      end

      classrelation 1810690 // fDeclaration (<unidirectional association>)
	relation 1810690 --->
	  a role_name "fDeclaration" init_value " null" protected
	    comment " attribute declaration 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810690 // fDeclaration (<unidirectional association>)
	  b parent class_ref 663938 // XSAttributeDeclaration
      end

      classrelation 1810818 // fTypeDecl (<unidirectional association>)
	relation 1810818 --->
	  a role_name "fTypeDecl" init_value " null" protected
	    comment " type of attribute, simpleType 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810818 // fTypeDecl (<unidirectional association>)
	  b parent class_ref 655490 // XSTypeDefinition
      end

      attribute 909058 "fSpecified"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " If this attribute was explicitly given a
value in the original document, this is true; otherwise, it is false  
"
      end

      classrelation 1810946 // fNormalizedValue (<unidirectional association>)
	relation 1810946 --->
	  a role_name "fNormalizedValue" init_value " null" protected
	    comment " schema normalized value property 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1810946 // fNormalizedValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1811074 // fActualValue (<unidirectional association>)
	relation 1811074 --->
	  a role_name "fActualValue" init_value " null" protected
	    comment " schema actual value 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811074 // fActualValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 909186 "fActualValueType"
	protected explicit_type "short"
	init_value " XSConstants.UNAVAILABLE_DT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " schema actual value type 
"
      end

      classrelation 1811202 // fItemValueTypes (<unidirectional association>)
	relation 1811202 --->
	  a role_name "fItemValueTypes" init_value " null" protected
	    comment " actual value types if the value is a list 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811202 // fItemValueTypes (<unidirectional association>)
	  b parent class_ref 663682 // ShortList
      end

      classrelation 1811330 // fMemberType (<unidirectional association>)
	relation 1811330 --->
	  a role_name "fMemberType" init_value " null" protected
	    comment " member type definition against which attribute was validated 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811330 // fMemberType (<unidirectional association>)
	  b parent class_ref 663810 // XSSimpleTypeDefinition
      end

      attribute 909314 "fValidationAttempted"
	protected explicit_type "short"
	init_value " AttributePSVI.VALIDATION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validation attempted: none, partial, full 
"
      end

      attribute 909442 "fValidity"
	protected explicit_type "short"
	init_value " AttributePSVI.VALIDITY_NOTKNOWN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validity: valid, invalid, unknown 
"
      end

      classrelation 1811458 // fErrorCodes (<unidirectional association>)
	relation 1811458 --->
	  a role_name "fErrorCodes" init_value " null" protected
	    comment " error codes 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811458 // fErrorCodes (<unidirectional association>)
	  b parent class_ref 663426 // StringList
      end

      classrelation 1811586 // fValidationContext (<unidirectional association>)
	relation 1811586 --->
	  a role_name "fValidationContext" init_value " null" protected
	    comment " validation context: could be QName or XPath expression
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811586 // fValidationContext (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      operation 4314370 "getSchemaDefault"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " AttributePSVI methods


[schema default]

@return The canonical lexical representation of the declaration's {value constraint} value.
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_default>XML Schema Part 1: Structures [schema default]</a>
"
      end

      operation 4314498 "getSchemaNormalizedValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema normalized value]


@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_normalized_value>XML Schema Part 1: Structures [schema normalized value]</a>
@return the normalized value of this item after validation
"
      end

      operation 4314626 "getIsSchemaSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema specified]
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_specified\">XML Schema Part 1: Structures [schema specified]</a>
@return false value was specified in schema, true value comes from the infoset
"
      end

      operation 4314754 "getValidationAttempted"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the extent to which the document has been validated

@return return the [validation attempted] property. The possible values are
        NO_VALIDATION, PARTIAL_VALIDATION and FULL_VALIDATION
"
      end

      operation 4314882 "getValidity"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the validity of the node with respect
to the validation being attempted

@return return the [validity] property. Possible values are:
        UNKNOWN_VALIDITY, INVALID_VALIDITY, VALID_VALIDITY
"
      end

      operation 4315010 "getErrorCodes"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A list of error codes generated from validation attempts.
Need to find all the possible subclause reports that need reporting

@return list of error codes
"
      end

      operation 4315138 "getValidationContext"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the only information we can provide in a pipeline."
      end

      operation 4315266 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An item isomorphic to the type definition used to validate this element.

@return  a type declaration
"
      end

      operation 4315394 "getMemberTypeDefinition"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If and only if that type definition is a simple type definition
with {variety} union, or a complex type definition whose {content type}
is a simple thype definition with {variety} union, then an item isomorphic
to that member of the union's {member type definitions} which actually
validated the element item's normalized value.

@return  a simple type declaration
"
      end

      operation 4315522 "getAttributeDeclaration"
	public return_type class_ref 663938 // XSAttributeDeclaration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An item isomorphic to the attribute declaration used to validate
this attribute.

@return  an attribute declaration
"
      end

      operation 4315650 "setPSVI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "attr" type class_ref 663170 // AttributePSVI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy PSVI properties from another psvi item.

@param attr  the source of attribute PSVI items
"
      end

      operation 4315778 "getActualNormalizedValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getActualNormalizedValue()
"
      end

      operation 4315906 "getActualNormalizedValueType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getActualNormalizedValueType()
"
      end

      operation 4316034 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getItemValueTypes()
"
      end

      operation 4316162 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT: Forbid serialization of PSVI DOM until
 we support object serialization of grammars -- mrglavas"
      end

      operation 4316290 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 664066 "PSVIDocumentImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Our own document implementation, which knows how to create an element
with PSVI information.

@xerces.internal

@author Sandy Gao, IBM

"
      classrelation 1811714 // <generalisation>
	relation 1811714 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1811714 // <generalisation>
	  b parent class_ref 653186 // DocumentImpl
      end

      attribute 909570 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -8822220250676434522L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4316418 "PSVIDocumentImpl"
	public explicit_return_type ""
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a document.
"
      end

      operation 4316546 "PSVIDocumentImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "doctype" type class_ref 649986 // DocumentType
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For DOM2 support.
The createDocument factory method is in DOMImplementation.
"
      end

      operation 4316674 "cloneNode"
	public return_type class_ref 317570 // Node
	nparams 1
	  param inout name "deep" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deep-clone a document, including fixing ownerDoc for the cloned
children. Note that this requires bypassing the WRONG_DOCUMENT_ERR
protection. I've chosen to implement it by calling importNode
which is DOM Level 2.

@return org.w3c.dom.Node
@param deep boolean, iff true replicate children
"
      end

      operation 4316802 "getImplementation"
	public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " cloneNode(boolean):Node

Retrieve information describing the abilities of this particular
DOM implementation. Intended to support applications that may be
using DOMs retrieved from several different sources, potentially
with different underlying representations.
"
      end

      operation 4316930 "createElementNS"
	public return_type class_ref 648194 // Element
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an element with PSVI information
"
      end

      operation 4317058 "createElementNS"
	public return_type class_ref 648194 // Element
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localpart" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an element with PSVI information
"
      end

      operation 4317186 "createAttributeNS"
	public return_type class_ref 648066 // Attr
	nparams 2
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an attribute with PSVI information
"
      end

      operation 4317314 "createAttributeNS"
	public return_type class_ref 648066 // Attr
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an attribute with PSVI information
"
      end

      operation 4317442 "getDomConfig"
	public return_type class_ref 650498 // DOMConfiguration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
The configuration used when <code>Document.normalizeDocument</code> is
invoked.
@since DOM Level 3
"
      end

      operation 4317570 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT: Forbid serialization of PSVI DOM until
 we support object serialization of grammars -- mrglavas"
      end

      operation 4317698 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 664194 "PSVIDOMImplementationImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The DOMImplementation class is description of a particular
implementation of the Document Object Model. As such its data is
static, shared by all instances of this implementation.
<P>
The DOM API requires that it be a real object rather than static
methods. However, there's nothing that says it can't be a singleton,
so that's how I've implemented it.

@xerces.internal

@since  PR-DOM-Level-1-19980818.
"
      classrelation 1811842 // <generalisation>
	relation 1811842 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1811842 // <generalisation>
	  b parent class_ref 651394 // CoreDOMImplementationImpl
      end

      classrelation 1811970 // singleton (<unidirectional association>)
	relation 1811970 --->
	  a role_name "singleton" init_value " new PSVIDOMImplementationImpl()" class_relation package
	    comment " Data

 static
 Dom implementation singleton. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1811970 // singleton (<unidirectional association>)
	  b parent class_ref 664194 // PSVIDOMImplementationImpl
      end

      operation 4317826 "getDOMImplementation"
	class_operation public return_type class_ref 636674 // DOMImplementation
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public methods

 NON-DOM: Obtain and return the single shared object "
      end

      operation 4317954 "hasFeature"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "feature" type class_ref 128130 // String
	  param inout name "version" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DOMImplementation methods


Test if the DOM implementation supports a specific \"feature\" --
currently meaning language and level thereof.

@param feature      The package name of the feature to test.
In Level 1, supported values are \"HTML\" and \"XML\" (case-insensitive).
At this writing, com.sun.org.apache.xerces.internal.dom supports only XML.

@param version      The version number of the feature being tested.
This is interpreted as \"Version of the DOM API supported for the
specified Feature\", and in Level 1 should be \"1.0\"

@return    true iff this implementation is compatable with the specified
feature and version.
"
      end

      operation 4318082 "createDocument"
	public return_type class_ref 378626 // Document
	nparams 3
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "doctype" type class_ref 649986 // DocumentType
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " hasFeature(String,String):boolean

Introduced in DOM Level 2. <p>

Creates an XML Document object of the specified type with its document
element.

@param namespaceURI     The namespace URI of the document
                        element to create, or null.
@param qualifiedName    The qualified name of the document
                        element to create.
@param doctype          The type of document to be created or null.<p>

                        When doctype is not null, its
                        Node.ownerDocument attribute is set to
                        the document being created.
@return Document        A new Document object.
@throws DOMException    WRONG_DOCUMENT_ERR: Raised if doctype has
                        already been used with a different document.
@since WD-DOM-Level-2-19990923
"
      end
    end

    class 664322 "PSVIElementNSImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Element namespace implementation; stores PSVI element items.

@xerces.internal

@author Sandy Gao, IBM

@version $Id: PSVIElementNSImpl.java,v 1.6 2010/08/20 18:51:54 joehw Exp $
"
      classrelation 1812098 // <generalisation>
	relation 1812098 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1812098 // <generalisation>
	  b parent class_ref 655362 // ElementNSImpl
      end

      classrelation 1812354 // <realization>
	relation 1812354 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1812354 // <realization>
	  b parent class_ref 664450 // ElementPSVI
      end

      attribute 909698 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " 6815489624636016068L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4318722 "PSVIElementNSImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	  param inout name "localName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an element node.
"
      end

      operation 4318850 "PSVIElementNSImpl"
	public explicit_return_type ""
	nparams 3
	  param inout name "ownerDocument" type class_ref 646914 // CoreDocumentImpl
	  param inout name "namespaceURI" type class_ref 128130 // String
	  param inout name "qualifiedName" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an element node.
"
      end

      classrelation 1812482 // fDeclaration (<unidirectional association>)
	relation 1812482 --->
	  a role_name "fDeclaration" init_value " null" protected
	    comment " element declaration 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812482 // fDeclaration (<unidirectional association>)
	  b parent class_ref 664578 // XSElementDeclaration
      end

      classrelation 1812610 // fTypeDecl (<unidirectional association>)
	relation 1812610 --->
	  a role_name "fTypeDecl" init_value " null" protected
	    comment " type of element, could be xsi:type 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812610 // fTypeDecl (<unidirectional association>)
	  b parent class_ref 655490 // XSTypeDefinition
      end

      attribute 909826 "fNil"
	protected explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " true if clause 3.2 of Element Locally Valid (Element) (3.3.4)
is satisfied, otherwise false

"
      end

      attribute 909954 "fSpecified"
	protected explicit_type "boolean"
	init_value " true"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " false if the element value was provided by the schema; true otherwise.

"
      end

      classrelation 1812738 // fNormalizedValue (<unidirectional association>)
	relation 1812738 --->
	  a role_name "fNormalizedValue" init_value " null" protected
	    comment " schema normalized value property 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812738 // fNormalizedValue (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1812866 // fActualValue (<unidirectional association>)
	relation 1812866 --->
	  a role_name "fActualValue" init_value " null" protected
	    comment " schema actual value 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812866 // fActualValue (<unidirectional association>)
	  b parent class_ref 129538 // Object
      end

      attribute 910082 "fActualValueType"
	protected explicit_type "short"
	init_value " XSConstants.UNAVAILABLE_DT"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " schema actual value type 
"
      end

      classrelation 1812994 // fItemValueTypes (<unidirectional association>)
	relation 1812994 --->
	  a role_name "fItemValueTypes" init_value " null" protected
	    comment " actual value types if the value is a list 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1812994 // fItemValueTypes (<unidirectional association>)
	  b parent class_ref 663682 // ShortList
      end

      classrelation 1813122 // fNotation (<unidirectional association>)
	relation 1813122 --->
	  a role_name "fNotation" init_value " null" protected
	    comment " http://www.w3.org/TR/xmlschema-1/#e-notation
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813122 // fNotation (<unidirectional association>)
	  b parent class_ref 664706 // XSNotationDeclaration
      end

      classrelation 1813250 // fMemberType (<unidirectional association>)
	relation 1813250 --->
	  a role_name "fMemberType" init_value " null" protected
	    comment " member type definition against which element was validated 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813250 // fMemberType (<unidirectional association>)
	  b parent class_ref 663810 // XSSimpleTypeDefinition
      end

      attribute 910210 "fValidationAttempted"
	protected explicit_type "short"
	init_value " ElementPSVI.VALIDATION_NONE"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validation attempted: none, partial, full 
"
      end

      attribute 910338 "fValidity"
	protected explicit_type "short"
	init_value " ElementPSVI.VALIDITY_NOTKNOWN"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " validity: valid, invalid, unknown 
"
      end

      classrelation 1813378 // fErrorCodes (<unidirectional association>)
	relation 1813378 --->
	  a role_name "fErrorCodes" init_value " null" protected
	    comment " error codes 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813378 // fErrorCodes (<unidirectional association>)
	  b parent class_ref 663426 // StringList
      end

      classrelation 1813506 // fValidationContext (<unidirectional association>)
	relation 1813506 --->
	  a role_name "fValidationContext" init_value " null" protected
	    comment " validation context: could be QName or XPath expression
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813506 // fValidationContext (<unidirectional association>)
	  b parent class_ref 128130 // String
      end

      classrelation 1813634 // fSchemaInformation (<unidirectional association>)
	relation 1813634 --->
	  a role_name "fSchemaInformation" init_value " null" protected
	    comment " the schema information property 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1813634 // fSchemaInformation (<unidirectional association>)
	  b parent class_ref 664834 // XSModel
      end

      operation 4318978 "getSchemaDefault"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ElementPSVI methods


[schema default]

@return The canonical lexical representation of the declaration's {value constraint} value.
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_default>XML Schema Part 1: Structures [schema default]</a>
"
      end

      operation 4319106 "getSchemaNormalizedValue"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema normalized value]


@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_normalized_value>XML Schema Part 1: Structures [schema normalized value]</a>
@return the normalized value of this item after validation
"
      end

      operation 4319234 "getIsSchemaSpecified"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema specified]
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_specified\">XML Schema Part 1: Structures [schema specified]</a>
@return false value was specified in schema, true value comes from the infoset
"
      end

      operation 4319362 "getValidationAttempted"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the extent to which the document has been validated

@return return the [validation attempted] property. The possible values are
        NO_VALIDATION, PARTIAL_VALIDATION and FULL_VALIDATION
"
      end

      operation 4319490 "getValidity"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine the validity of the node with respect
to the validation being attempted

@return return the [validity] property. Possible values are:
        UNKNOWN_VALIDITY, INVALID_VALIDITY, VALID_VALIDITY
"
      end

      operation 4319618 "getErrorCodes"
	public return_type class_ref 663426 // StringList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A list of error codes generated from validation attempts.
Need to find all the possible subclause reports that need reporting

@return Array of error codes
"
      end

      operation 4319746 "getValidationContext"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This is the only information we can provide in a pipeline."
      end

      operation 4319874 "getNil"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[nil]
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-nil>XML Schema Part 1: Structures [nil]</a>
@return true if clause 3.2 of Element Locally Valid (Element) (3.3.4) above is satisfied, otherwise false
"
      end

      operation 4320002 "getNotation"
	public return_type class_ref 664706 // XSNotationDeclaration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[notation]
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-notation>XML Schema Part 1: Structures [notation]</a>
@return The notation declaration.
"
      end

      operation 4320130 "getTypeDefinition"
	public return_type class_ref 655490 // XSTypeDefinition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An item isomorphic to the type definition used to validate this element.

@return  a type declaration
"
      end

      operation 4320258 "getMemberTypeDefinition"
	public return_type class_ref 663810 // XSSimpleTypeDefinition
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If and only if that type definition is a simple type definition
with {variety} union, or a complex type definition whose {content type}
is a simple thype definition with {variety} union, then an item isomorphic
to that member of the union's {member type definitions} which actually
validated the element item's normalized value.

@return  a simple type declaration
"
      end

      operation 4320386 "getElementDeclaration"
	public return_type class_ref 664578 // XSElementDeclaration
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An item isomorphic to the element declaration used to validate
this element.

@return  an element declaration
"
      end

      operation 4320514 "getSchemaInformation"
	public return_type class_ref 664834 // XSModel
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "[schema information]
@see <a href=\"http://www.w3.org/TR/xmlschema-1/#e-schema_information\">XML Schema Part 1: Structures [schema information]</a>
@return The schema information property if it's the validation root,
        null otherwise.
"
      end

      operation 4320642 "setPSVI"
	public explicit_return_type "void"
	nparams 1
	  param inout name "elem" type class_ref 664450 // ElementPSVI
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy PSVI properties from another psvi item.

@param attr  the source of attribute PSVI items
"
      end

      operation 4320770 "getActualNormalizedValue"
	public return_type class_ref 129538 // Object
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getActualNormalizedValue()
"
      end

      operation 4320898 "getActualNormalizedValueType"
	public explicit_return_type "short"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getActualNormalizedValueType()
"
      end

      operation 4321026 "getItemValueTypes"
	public return_type class_ref 663682 // ShortList
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " (non-Javadoc)
@see com.sun.org.apache.xerces.internal.xs.ItemPSVI#getItemValueTypes()
"
      end

      operation 4321154 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 173442 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 146818 // IOException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " REVISIT: Forbid serialization of PSVI DOM until
 we support object serialization of grammars -- mrglavas"
      end

      operation 4321282 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 168962 // ObjectInputStream
	nexceptions 2
	  exception class_ref 146818 // IOException
	  exception class_ref 169730 // ClassNotFoundException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 664962 "RangeExceptionImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@xerces.internal

"
      classrelation 1813890 // <generalisation>
	relation 1813890 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 1813890 // <generalisation>
	  b parent class_ref 665090 // RangeException
      end

      attribute 910850 "serialVersionUID"
	class_attribute const_attribute package explicit_type "long"
	init_value " -9058052627467240856L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Serialization version. 
"
      end

      operation 4321538 "RangeExceptionImpl"
	public explicit_return_type ""
	nparams 2
	  param in name "code" explicit_type "short"
	  param inout name "message" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 665218 "RangeImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " The RangeImpl class implements the org.w3c.dom.range.Range interface.
 <p> Please see the API documentation for the interface classes
 and use the interfaces in your client programs.

@xerces.internal

"
      classrelation 1814018 // <realization>
	relation 1814018 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1814018 // <realization>
	  b parent class_ref 653954 // Range
      end

      classrelation 1814146 // fDocument (<unidirectional association>)
	relation 1814146 --->
	  a role_name "fDocument" package
	    comment " Constants


 Data

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814146 // fDocument (<unidirectional association>)
	  b parent class_ref 653186 // DocumentImpl
      end

      classrelation 1814274 // fStartContainer (<unidirectional association>)
	relation 1814274 --->
	  a role_name "fStartContainer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814274 // fStartContainer (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1814402 // fEndContainer (<unidirectional association>)
	relation 1814402 --->
	  a role_name "fEndContainer" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814402 // fEndContainer (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      attribute 911490 "fStartOffset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 911618 "fEndOffset"
	package explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 911746 "fIsCollapsed"
	package explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 911874 "fDetach"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1814530 // fInsertNode (<unidirectional association>)
	relation 1814530 --->
	  a role_name "fInsertNode" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814530 // fInsertNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1814658 // fDeleteNode (<unidirectional association>)
	relation 1814658 --->
	  a role_name "fDeleteNode" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814658 // fDeleteNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1814786 // fSplitNode (<unidirectional association>)
	relation 1814786 --->
	  a role_name "fSplitNode" init_value " null" package
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814786 // fSplitNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      attribute 912002 "fInsertedFromRange"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Was the Node inserted from the Range or the Document
"
      end

      operation 4324738 "RangeImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "document" type class_ref 653186 // DocumentImpl
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " The constructor. Clients must use DocumentRange.createRange(),
 because it registers the Range with the document, so it can
 be fixed-up.
"
      end

      operation 4324866 "getStartContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4324994 "getStartOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325122 "getEndContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325250 "getEndOffset"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325378 "getCollapsed"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325506 "getCommonAncestorContainer"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325634 "setStart"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325762 "setEnd"
	public explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 2
	  exception class_ref 665090 // RangeException
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4325890 "setStartBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326018 "setStartAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326146 "setEndBefore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326274 "setEndAfter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326402 "collapse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toStart" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326530 "selectNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326658 "selectNodeContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "refNode" type class_ref 317570 // Node
	nexceptions 1
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326786 "compareBoundaryPoints"
	public explicit_return_type "short"
	nparams 2
	  param in name "how" explicit_type "short"
	  param inout name "sourceRange" type class_ref 653954 // Range
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4326914 "deleteContents"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327042 "extractContents"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327170 "cloneContents"
	public return_type class_ref 650114 // DocumentFragment
	nparams 0
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327298 "insertNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newNode" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 646658 // DOMException
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327426 "surroundContents"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newParent" type class_ref 317570 // Node
	nexceptions 2
	  exception class_ref 646658 // DOMException
	  exception class_ref 665090 // RangeException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327554 "cloneRange"
	public return_type class_ref 653954 // Range
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327682 "toString"
	public return_type class_ref 128130 // String
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327810 "detach"
	public explicit_return_type "void"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4327938 "signalSplitData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "newNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Mutation functions

 Signal other Ranges to update their start/end
 containers/offsets. The data has already been split
 into the two Nodes.
"
      end

      operation 4328066 "receiveSplitData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "newNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Fix up this Range if another Range has split a Text Node
 into 2 Nodes.
"
      end

      operation 4328194 "deleteData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 648962 // CharacterData
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function inserts text into a Node and invokes
 a method to fix-up all other Ranges.
"
      end

      operation 4328322 "receiveDeletedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function is called from DOM.
 The  text has already beeen inserted.
 Fix-up any offsets.
"
      end

      operation 4328450 "insertData"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 648962 // CharacterData
	  param in name "index" explicit_type "int"
	  param inout name "insert" type class_ref 128130 // String
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function inserts text into a Node and invokes
 a method to fix-up all other Ranges.
"
      end

      operation 4328578 "receiveInsertedText"
	package explicit_return_type "void"
	nparams 3
	  param inout name "node" type class_ref 317570 // Node
	  param in name "index" explicit_type "int"
	  param in name "len" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function is called from DOM.
 The  text has already beeen inserted.
 Fix-up any offsets.
"
      end

      operation 4328706 "receiveReplacedText"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function is called from DOM.
 The  text has already beeen replaced.
 Fix-up any offsets.
"
      end

      operation 4328834 "insertedNodeFromDOM"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function is called from the DOM.
 This node has already been inserted into the DOM.
 Fix-up any offsets.
"
      end

      classrelation 1814914 // fRemoveChild (<unidirectional association>)
	relation 1814914 --->
	  a role_name "fRemoveChild" init_value " null" package
	    comment " This function is called within Range
 instead of Node.removeChild,
 so that the range can remember that it is actively
 removing this child.

"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1814914 // fRemoveChild (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 4328962 "removeChild"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "parent" type class_ref 317570 // Node
	  param inout name "child" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4329090 "removeNode"
	package explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This function must be called by the DOM _BEFORE_
 a node is deleted, because at that time it is
 connected in the DOM tree, which we depend on.
"
      end

      attribute 912130 "EXTRACT_CONTENTS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Utility functions.

 parameters for traverseContents(int)
REVIST: use boolean, since there are only 2 now...
"
      end

      attribute 912258 "CLONE_CONTENTS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 912386 "DELETE_CONTENTS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 4329218 "traverseContents"
	private return_type class_ref 650114 // DocumentFragment
	nparams 1
	  param in name "how" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is the master routine invoked to visit the nodes
selected by this range.  For each such node, different
actions are taken depending on the value of the
<code>how</code> argument.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a document fragment containing the range's content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but sill
              produced cloned content in a document fragment

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes.
              </ol>

@return Returns a document fragment containing any
        copied or extracted nodes.  If the <code>how</code>
        parameter was <code>DELETE_CONTENTS</code>, the
        return value is null.
"
      end

      operation 4329346 "traverseSameContainer"
	private return_type class_ref 650114 // DocumentFragment
	nparams 1
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits the nodes selected by this range when we know
a-priori that the start and end containers are the same.
This method is invoked by the generic <code>traverse</code>
method.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a document fragment containing the range's content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but sill
              produced cloned content in a document fragment

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes.
              </ol>

@return Returns a document fragment containing any
        copied or extracted nodes.  If the <code>how</code>
        parameter was <code>DELETE_CONTENTS</code>, the
        return value is null.
"
      end

      operation 4329474 "traverseCommonStartContainer"
	private return_type class_ref 650114 // DocumentFragment
	nparams 2
	  param inout name "endAncestor" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits the nodes selected by this range when we know
a-priori that the start and end containers are not the
same, but the start container is an ancestor of the
end container. This method is invoked by the generic
<code>traverse</code> method.

@param endAncestor
              The ancestor of the end container that is a direct child
              of the start container.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a document fragment containing the range's content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but sill
              produced cloned content in a document fragment

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes.
              </ol>

@return Returns a document fragment containing any
        copied or extracted nodes.  If the <code>how</code>
        parameter was <code>DELETE_CONTENTS</code>, the
        return value is null.
"
      end

      operation 4329602 "traverseCommonEndContainer"
	private return_type class_ref 650114 // DocumentFragment
	nparams 2
	  param inout name "startAncestor" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits the nodes selected by this range when we know
a-priori that the start and end containers are not the
same, but the end container is an ancestor of the
start container. This method is invoked by the generic
<code>traverse</code> method.

@param startAncestor
              The ancestor of the start container that is a direct
              child of the end container.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a document fragment containing the range's content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but sill
              produced cloned content in a document fragment

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes.
              </ol>

@return Returns a document fragment containing any
        copied or extracted nodes.  If the <code>how</code>
        parameter was <code>DELETE_CONTENTS</code>, the
        return value is null.
"
      end

      operation 4329730 "traverseCommonAncestors"
	private return_type class_ref 650114 // DocumentFragment
	nparams 3
	  param inout name "startAncestor" type class_ref 317570 // Node
	  param inout name "endAncestor" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits the nodes selected by this range when we know
a-priori that the start and end containers are not
the same, and we also know that neither the start
nor end container is an ancestor of the other.
This method is invoked by
the generic <code>traverse</code> method.

@param startAncestor
              Given a common ancestor of the start and end containers,
              this parameter is the ancestor (or self) of the start
              container that is a direct child of the common ancestor.

@param endAncestor
              Given a common ancestor of the start and end containers,
              this parameter is the ancestor (or self) of the end
              container that is a direct child of the common ancestor.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a document fragment containing the range's content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but sill
              produced cloned content in a document fragment

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes.
              </ol>

@return Returns a document fragment containing any
        copied or extracted nodes.  If the <code>how</code>
        parameter was <code>DELETE_CONTENTS</code>, the
        return value is null.
"
      end

      operation 4329858 "traverseRightBoundary"
	private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "root" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverses the \"right boundary\" of this range and
operates on each \"boundary node\" according to the
<code>how</code> parameter.  It is a-priori assumed
by this method that the right boundary does
not contain the range's start container.
<p>
A \"right boundary\" is best visualized by thinking
of a sample tree:<pre>
                A
               /|\\
              / | \\
             /  |  \\
            B   C   D
           /|\\     /|\\
          E F G   H I J
</pre>
Imagine first a range that begins between the
\"E\" and \"F\" nodes and ends between the
\"I\" and \"J\" nodes.  The start container is
\"B\" and the end container is \"D\".  Given this setup,
the following applies:
<p>
Partially Selected Nodes: B, D<br>
Fully Selected Nodes: F, G, C, H, I
<p>
The \"right boundary\" is the highest subtree node
that contains the ending container.  The root of
this subtree is always partially selected.
<p>
In this example, the nodes that are traversed
as \"right boundary\" nodes are: H, I, and D.

@param root   The node that is the root of the \"right boundary\" subtree.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a node containing the boundaries content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              produced cloned content.

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes within the boundary.
              </ol>

@return Returns a node that is the result of visiting nodes.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4329986 "traverseLeftBoundary"
	private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "root" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Traverses the \"left boundary\" of this range and
operates on each \"boundary node\" according to the
<code>how</code> parameter.  It is a-priori assumed
by this method that the left boundary does
not contain the range's end container.
<p>
A \"left boundary\" is best visualized by thinking
of a sample tree:<pre>

                A
               /|\\
              / | \\
             /  |  \\
            B   C   D
           /|\\     /|\\
          E F G   H I J
</pre>
Imagine first a range that begins between the
\"E\" and \"F\" nodes and ends between the
\"I\" and \"J\" nodes.  The start container is
\"B\" and the end container is \"D\".  Given this setup,
the following applies:
<p>
Partially Selected Nodes: B, D<br>
Fully Selected Nodes: F, G, C, H, I
<p>
The \"left boundary\" is the highest subtree node
that contains the starting container.  The root of
this subtree is always partially selected.
<p>
In this example, the nodes that are traversed
as \"left boundary\" nodes are: F, G, and B.

@param root   The node that is the root of the \"left boundary\" subtree.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will produce
              a node containing the boundaries content.
              Partially selected nodes are copied, but fully
              selected nodes are moved.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              produced cloned content.

              <li><code>DELETE_CONTENTS</code> - will delete from
              the context tree of the range, all fully selected
              nodes within the boundary.
              </ol>

@return Returns a node that is the result of visiting nodes.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4330114 "traverseNode"
	private return_type class_ref 317570 // Node
	nparams 4
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "isFullySelected" explicit_type "boolean"
	  param inout name "isLeft" explicit_type "boolean"
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for traversing a single node.
Does not properly handle a text node containing both the
start and end offsets.  Such nodes should
have been previously detected and been routed to traverseTextNode.

@param n      The node to be traversed.

@param isFullySelected
              Set to true if the node is fully selected.  Should be
              false otherwise.
              Note that although the DOM 2 specification says that a
              text node that is boththe start and end container is not
              selected, we treat it here as if it were partially
              selected.

@param isLeft Is true if we are traversing the node as part of navigating
              the \"left boundary\" of the range.  If this value is false,
              it implies we are navigating the \"right boundary\" of the
              range.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will simply
              return the original node.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              return a cloned node.

              <li><code>DELETE_CONTENTS</code> - will delete the
              node from it's parent, but will return null.
              </ol>

@return Returns a node that is the result of visiting the node.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4330242 "traverseFullySelected"
	private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for traversing a single node when
we know a-priori that the node if fully
selected.

@param n      The node to be traversed.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will simply
              return the original node.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              return a cloned node.

              <li><code>DELETE_CONTENTS</code> - will delete the
              node from it's parent, but will return null.
              </ol>

@return Returns a node that is the result of visiting the node.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4330370 "traversePartiallySelected"
	private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "n" type class_ref 317570 // Node
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for traversing a single node when
we know a-priori that the node if partially
selected and is not a text node.

@param n      The node to be traversed.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will simply
              return the original node.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              return a cloned node.

              <li><code>DELETE_CONTENTS</code> - will delete the
              node from it's parent, but will return null.
              </ol>

@return Returns a node that is the result of visiting the node.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4330498 "traverseTextNode"
	private return_type class_ref 317570 // Node
	nparams 3
	  param inout name "n" type class_ref 317570 // Node
	  param inout name "isLeft" explicit_type "boolean"
	  param in name "how" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method for traversing a text node that we know
a-priori to be on a left or right boundary of the range.
This method does not properly handle text nodes that contain
both the start and end points of the range.

@param n      The node to be traversed.

@param isLeft Is true if we are traversing the node as part of navigating
              the \"left boundary\" of the range.  If this value is false,
              it implies we are navigating the \"right boundary\" of the
              range.

@param how    Specifies what type of traversal is being
              requested (extract, clone, or delete).
              Legal values for this argument are:

              <ol>
              <li><code>EXTRACT_CONTENTS</code> - will simply
              return the original node.

              <li><code>CLONE_CONTENTS</code> - will leave the
              context tree of the range undisturbed, but will
              return a cloned node.

              <li><code>DELETE_CONTENTS</code> - will delete the
              node from it's parent, but will return null.
              </ol>

@return Returns a node that is the result of visiting the node.
        If the traversal operation is
        <code>DELETE_CONTENTS</code> the return value is null.
"
      end

      operation 4330626 "checkIndex"
	package explicit_return_type "void"
	nparams 2
	  param inout name "refNode" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	nexceptions 1
	  exception class_ref 646658 // DOMException
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4330754 "getRootContainer"
	private return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a node, calculate what the Range's root container
for that node would be.
"
      end

      operation 4330882 "isLegalContainer"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true IFF the given node can serve as a container
for a range's boundary points.
"
      end

      operation 4331010 "hasLegalRootContainer"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the root container for the given node and determines
if that root container is legal with respect to the
DOM 2 specification.  At present, that means the root
container must be either an attribute, a document,
or a document fragment.
"
      end

      operation 4331138 "isLegalContainedNode"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true IFF the given node can be contained by
a range.
"
      end

      operation 4331266 "nextNode"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "visitChildren" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4331394 "isAncestorOf"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 317570 // Node
	  param inout name "b" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " is a an ancestor of b ? "
      end

      operation 4331522 "indexOf"
	package explicit_return_type "int"
	nparams 2
	  param inout name "child" type class_ref 317570 // Node
	  param inout name "parent" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " what is the index of the child in the parent "
      end

      operation 4331650 "getSelectedNode"
	private return_type class_ref 317570 // Node
	nparams 2
	  param inout name "container" type class_ref 317570 // Node
	  param in name "offset" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Utility method to retrieve a child node by index.  This method
assumes the caller is trying to find out which node is
selected by the given index.  Note that if the index is
greater than the number of children, this implies that the
first node selected is the parent node itself.

@param container A container node

@param offset    An offset within the container for which a selected node should
                 be computed.  If the offset is less than zero, or if the offset
                 is greater than the number of children, the container is returned.

@return Returns either a child node of the container or the
        container itself.
"
      end
    end

    class 665346 "TreeWalkerImpl"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " This class implements the TreeWalker interface.

@xerces.internal

"
      classrelation 1815042 // <realization>
	relation 1815042 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 1815042 // <realization>
	  b parent class_ref 653570 // TreeWalker
      end

      attribute 912514 "fEntityReferenceExpansion"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Data

 When TRUE, the children of entites references are returned in the iterator. 
"
      end

      attribute 912642 "fWhatToShow"
	package explicit_type "int"
	init_value " NodeFilter.SHOW_ALL"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The whatToShow mask. 
"
      end

      classrelation 1815170 // fNodeFilter (<unidirectional association>)
	relation 1815170 --->
	  a role_name "fNodeFilter" package
	    comment " The NodeFilter reference. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815170 // fNodeFilter (<unidirectional association>)
	  b parent class_ref 653442 // NodeFilter
      end

      classrelation 1815298 // fCurrentNode (<unidirectional association>)
	relation 1815298 --->
	  a role_name "fCurrentNode" package
	    comment " The current Node. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815298 // fCurrentNode (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      classrelation 1815426 // fRoot (<unidirectional association>)
	relation 1815426 --->
	  a role_name "fRoot" package
	    comment " The root Node. 
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1815426 // fRoot (<unidirectional association>)
	  b parent class_ref 317570 // Node
      end

      operation 4333442 "TreeWalkerImpl"
	public explicit_return_type ""
	nparams 4
	  param inout name "root" type class_ref 317570 // Node
	  param in name "whatToShow" explicit_type "int"
	  param inout name "nodeFilter" type class_ref 653442 // NodeFilter
	  param inout name "entityReferenceExpansion" explicit_type "boolean"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implementation Note: No state is kept except the data above
 (fWhatToShow, fNodeFilter, fCurrentNode, fRoot) such that
 setters could be created for these data values and the
 implementation will still work.

 Constructor

 Public constructor "
      end

      operation 4333570 "getRoot"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4333698 "getWhatToShow"
	public explicit_return_type "int"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the whatToShow value "
      end

      operation 4333826 "setWhatShow"
	public explicit_return_type "void"
	nparams 1
	  param in name "whatToShow" explicit_type "int"
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4333954 "getFilter"
	public return_type class_ref 653442 // NodeFilter
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the NodeFilter "
      end

      operation 4334082 "getExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return whether children entity references are included in the iterator. "
      end

      operation 4334210 "getCurrentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the current Node. "
      end

      operation 4334338 "setCurrentNode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the current Node. "
      end

      operation 4334466 "parentNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the parent Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4334594 "firstChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the first child Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4334722 "lastChild"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the last child Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4334850 "previousSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the previous sibling Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4334978 "nextSibling"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the next sibling Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4335106 "previousNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the previous Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4335234 "nextNode"
	public return_type class_ref 317570 // Node
	nparams 0
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the next Node from the current node,
 after applying filter, whatToshow.
 If result is not null, set the current Node.
"
      end

      operation 4335362 "getParentNode"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 Return the parent Node, from the input node
 after applying filter, whatToshow.
 The current node is not consulted or set.
"
      end

      operation 4335490 "getNextSibling"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 Return the nextSibling Node, from the input node
 after applying filter, whatToshow.
 The current node is not consulted or set.
"
      end

      operation 4335618 "getNextSibling"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "root" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 Return the nextSibling Node, from the input node
 after applying filter, whatToshow.
 NEVER TRAVERSES ABOVE THE SPECIFIED ROOT NODE.
 The current node is not consulted or set.
"
      end

      operation 4335746 "getPreviousSibling"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getNextSibling(Node node) {
 Internal function.
 Return the previous sibling Node, from the input node
 after applying filter, whatToshow.
 The current node is not consulted or set.
"
      end

      operation 4335874 "getPreviousSibling"
	package return_type class_ref 317570 // Node
	nparams 2
	  param inout name "node" type class_ref 317570 // Node
	  param inout name "root" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 Return the previousSibling Node, from the input node
 after applying filter, whatToshow.
 NEVER TRAVERSES ABOVE THE SPECIFIED ROOT NODE.
 The current node is not consulted or set.
"
      end

      operation 4336002 "getFirstChild"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " getPreviousSibling(Node node) {
 Internal function.
 Return the first child Node, from the input node
 after applying filter, whatToshow.
 The current node is not consulted or set.
"
      end

      operation 4336130 "getLastChild"
	package return_type class_ref 317570 // Node
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 Return the last child Node, from the input node
 after applying filter, whatToshow.
 The current node is not consulted or set.
"
      end

      operation 4336258 "acceptNode"
	package explicit_return_type "short"
	nparams 1
	  param inout name "node" type class_ref 317570 // Node
	
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal function.
 The node whatToShow and the filter are combined into one result. "
      end
    end
  end

  deploymentview 153730 "dom"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 446082 "NamedNodeMapImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.w3c.dom.DOMException;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 646530 // NamedNodeMapImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 446210 "AttributeMap"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 646402 // AttributeMap
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 446722 "NodeImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Map;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.events.Event;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.events.EventTarget;
${definition}"
      associated_elems
	class_ref 646786 // NodeImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 447106 "AttrImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import org.w3c.dom.TypeInfo;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;
${definition}"
      associated_elems
	class_ref 647170 // AttrImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 447234 "AttrNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 648578 // AttrNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 447362 "ChildNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 647938 // ChildNode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2000-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 447490 "CharacterDataImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
${definition}"
      associated_elems
	class_ref 648834 // CharacterDataImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 447874 "TextImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.CharacterData;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
${definition}"
      associated_elems
	class_ref 648450 // TextImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 448130 "CDATASectionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.CDATASection;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 648706 // CDATASectionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 448386 "CommentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.CharacterData;
import org.w3c.dom.Comment;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 649346 // CommentImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 448514 "ParentNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.UserDataHandler;
${definition}"
      associated_elems
	class_ref 649602 // ParentNode
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 448770 "CoreDocumentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.util.URI;
import com.sun.org.apache.xerces.internal.util.XML11Char;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.lang.reflect.Constructor;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Notation;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.events.Event;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.ls.DOMImplementationLS;
import org.w3c.dom.ls.LSSerializer;
${definition}"
      associated_elems
	class_ref 646914 // CoreDocumentImpl
      end
      comment "Copyright (c) 2009, 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 449154 "CoreDOMImplementationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.RevalidationHandler;
import com.sun.org.apache.xerces.internal.parsers.DOMParserImpl;
import com.sun.org.apache.xerces.internal.parsers.DTDConfiguration;
import com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xml.internal.serialize.DOMSerializerImpl;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.ls.LSParser;
import org.w3c.dom.ls.DOMImplementationLS;
import org.w3c.dom.ls.LSInput;
import org.w3c.dom.ls.LSOutput;
import org.w3c.dom.ls.LSSerializer;
${definition}"
      associated_elems
	class_ref 651394 // CoreDOMImplementationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 449282 "DeepNodeListImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 652290 // DeepNodeListImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 449410 "DeferredNode"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 652546 // DeferredNode
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 449538 "DeferredAttrImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 652418 // DeferredAttrImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


WARNING: because java doesn't support multi-inheritance some code is
duplicated. If you're changing this file you probably want to change
DeferredAttrNSImpl.java at the same time.
"
    end

    artifact 449666 "DeferredAttrNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 652802 // DeferredAttrNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


WARNING: because java doesn't support multi-inheritance some code is
duplicated. If you're changing this file you probably want to change
DeferredAttrImpl.java at the same time.
"
    end

    artifact 449794 "DeferredCDATASectionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 652930 // DeferredCDATASectionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 449922 "DeferredCommentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 653058 // DeferredCommentImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 450434 "DocumentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.dom.events.EventImpl;
import com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.events.DocumentEvent;
import org.w3c.dom.events.Event;
import org.w3c.dom.events.EventException;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.events.MutationEvent;
import org.w3c.dom.ranges.DocumentRange;
import org.w3c.dom.ranges.Range;
import org.w3c.dom.traversal.DocumentTraversal;
import org.w3c.dom.traversal.NodeFilter;
import org.w3c.dom.traversal.NodeIterator;
import org.w3c.dom.traversal.TreeWalker;
${definition}"
      associated_elems
	class_ref 653186 // DocumentImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 450562 "DeferredDocumentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.HashMap;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 652674 // DeferredDocumentImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 450818 "DocumentTypeImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentType;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.UserDataHandler;
${definition}"
      associated_elems
	class_ref 650626 // DocumentTypeImpl
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 450946 "DeferredDocumentTypeImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 654594 // DeferredDocumentTypeImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451074 "DOMImplementationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 654850 // DOMImplementationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451202 "DeferredDOMImplementationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMImplementation;
${definition}"
      associated_elems
	class_ref 654722 // DeferredDOMImplementationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451330 "ElementDefinitionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 651266 // ElementDefinitionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451458 "DeferredElementDefinitionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 654978 // DeferredElementDefinitionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451714 "ElementImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;
import org.w3c.dom.TypeInfo;
import com.sun.org.apache.xerces.internal.util.URI;
${definition}"
      associated_elems
	class_ref 647042 // ElementImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 451842 "DeferredElementImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.NamedNodeMap;
${definition}"
      associated_elems
	class_ref 655106 // DeferredElementImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


WARNING: because java doesn't support multi-inheritance some code is
duplicated. If you're changing this file you probably want to change
DeferredElementNSImpl.java at the same time.
"
    end

    artifact 451970 "ElementNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xs.XSSimpleTypeDefinition;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl;
import com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl;
import com.sun.org.apache.xerces.internal.util.URI;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import org.w3c.dom.Attr;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 655362 // ElementNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 452098 "DeferredElementNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.NamedNodeMap;
${definition}"
      associated_elems
	class_ref 655234 // DeferredElementNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


WARNING: because java doesn't support multi-inheritance some code is
duplicated. If you're changing this file you probably want to change
DeferredElementImpl.java at the same time.

"
    end

    artifact 452354 "EntityImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Entity;
import org.w3c.dom.Node;
import org.w3c.dom.DOMException;
${definition}"
      associated_elems
	class_ref 655746 // EntityImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 452482 "DeferredEntityImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 655618 // DeferredEntityImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 452738 "EntityReferenceImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.util.URI;
import org.w3c.dom.DocumentType;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 656002 // EntityReferenceImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 452866 "DeferredEntityReferenceImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 655874 // DeferredEntityReferenceImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 453122 "NotationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.util.URI;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.Notation;
${definition}"
      associated_elems
	class_ref 656258 // NotationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 453250 "DeferredNotationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 656130 // DeferredNotationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 453506 "ProcessingInstructionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
${definition}"
      associated_elems
	class_ref 656514 // ProcessingInstructionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 453634 "DeferredProcessingInstructionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 656386 // DeferredProcessingInstructionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 453762 "DeferredTextImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 656642 // DeferredTextImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 454018 "DocumentFragmentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Node;
import org.w3c.dom.Text;
${definition}"
      associated_elems
	class_ref 656770 // DocumentFragmentImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 454658 "DOMConfigurationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.XMLEntityManager;
import com.sun.org.apache.xerces.internal.impl.XMLErrorReporter;
import com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory;
import com.sun.org.apache.xerces.internal.impl.msg.XMLMessageFormatter;
import com.sun.org.apache.xerces.internal.impl.validation.ValidationManager;
import com.sun.org.apache.xerces.internal.util.DOMEntityResolverWrapper;
import com.sun.org.apache.xerces.internal.util.DOMErrorHandlerWrapper;
import com.sun.org.apache.xerces.internal.util.MessageFormatter;
import com.sun.org.apache.xerces.internal.util.ParserConfigurationSettings;
import com.sun.org.apache.xerces.internal.util.PropertyState;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.utils.ObjectFactory;
import com.sun.org.apache.xerces.internal.utils.XMLSecurityManager;
import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;
import com.sun.org.apache.xerces.internal.xni.XMLDTDContentModelHandler;
import com.sun.org.apache.xerces.internal.xni.XMLDTDHandler;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponent;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager;
import com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
import com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver;
import com.sun.org.apache.xerces.internal.xni.parser.XMLErrorHandler;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import java.util.Vector;
import javax.xml.XMLConstants;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMErrorHandler;
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMStringList;
import org.w3c.dom.ls.LSResourceResolver;
${definition}"
      associated_elems
	class_ref 650882 // DOMConfigurationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 454914 "DOMErrorImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMError;
import org.w3c.dom.DOMLocator;
import com.sun.org.apache.xerces.internal.xni.parser.XMLParseException;
${definition}"
      associated_elems
	class_ref 659330 // DOMErrorImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 455170 "DOMImplementationListImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import org.w3c.dom.DOMImplementationList;
import org.w3c.dom.DOMImplementation;
${definition}"
      associated_elems
	class_ref 659970 // DOMImplementationListImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 455426 "DOMImplementationSourceImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.StringTokenizer;
import java.util.Vector;
import org.w3c.dom.DOMImplementationList;
import org.w3c.dom.DOMImplementationSource;
import org.w3c.dom.DOMImplementation;
import com.sun.org.apache.xerces.internal.dom.DOMImplementationListImpl;
${definition}"
      associated_elems
	class_ref 660226 // DOMImplementationSourceImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 455682 "DOMInputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.ls.LSInput;
import java.io.Reader;
import java.io.InputStream;
${definition}"
      associated_elems
	class_ref 660482 // DOMInputImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 455938 "DOMLocatorImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMLocator;
import org.w3c.dom.Node;
${definition}"
      associated_elems
	class_ref 659714 // DOMLocatorImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 456066 "DOMMessageFormatter"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.utils.SecuritySupport;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
${definition}"
      associated_elems
	class_ref 660610 // DOMMessageFormatter
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 456450 "DOMNormalizer"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.io.StringReader;
import java.util.Vector;
import com.sun.org.apache.xerces.internal.impl.Constants;
import com.sun.org.apache.xerces.internal.impl.RevalidationHandler;
import com.sun.org.apache.xerces.internal.impl.dtd.DTDGrammar;
import com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDDescription;
import com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator;
import com.sun.org.apache.xerces.internal.impl.dv.XSSimpleType;
import com.sun.org.apache.xerces.internal.impl.xs.util.SimpleLocator;
import com.sun.org.apache.xerces.internal.parsers.XMLGrammarPreparser;
import com.sun.org.apache.xerces.internal.util.AugmentationsImpl;
import com.sun.org.apache.xerces.internal.util.NamespaceSupport;
import com.sun.org.apache.xerces.internal.util.SymbolTable;
import com.sun.org.apache.xerces.internal.util.XML11Char;
import com.sun.org.apache.xerces.internal.util.XMLChar;
import com.sun.org.apache.xerces.internal.util.XMLGrammarPoolImpl;
import com.sun.org.apache.xerces.internal.util.XMLSymbols;
import com.sun.org.apache.xerces.internal.xni.Augmentations;
import com.sun.org.apache.xerces.internal.xni.NamespaceContext;
import com.sun.org.apache.xerces.internal.xni.QName;
import com.sun.org.apache.xerces.internal.xni.XMLAttributes;
import com.sun.org.apache.xerces.internal.xni.XMLDocumentHandler;
import com.sun.org.apache.xerces.internal.xni.XMLLocator;
import com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier;
import com.sun.org.apache.xerces.internal.xni.XMLString;
import com.sun.org.apache.xerces.internal.xni.XNIException;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarDescription;
import com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarPool;
import com.sun.org.apache.xerces.internal.xni.parser.XMLComponent;
import com.sun.org.apache.xerces.internal.xni.parser.XMLDocumentSource;
import com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource;
import com.sun.org.apache.xerces.internal.xs.AttributePSVI;
import com.sun.org.apache.xerces.internal.xs.ElementPSVI;
import com.sun.org.apache.xerces.internal.xs.XSTypeDefinition;
import org.w3c.dom.Attr;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMError;
import org.w3c.dom.DOMErrorHandler;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Entity;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
${definition}"
      associated_elems
	class_ref 650754 // DOMNormalizer
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004, 2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 456706 "DOMOutputImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.ls.LSOutput;
import java.io.Writer;
import java.io.OutputStream;
${definition}"
      associated_elems
	class_ref 662402 // DOMOutputImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 456962 "DOMStringListImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import org.w3c.dom.DOMStringList;
${definition}"
      associated_elems
	class_ref 662530 // DOMStringListImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457090 "DOMXSImplementationSourceImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.sun.org.apache.xerces.internal.impl.xs.XSImplementationImpl;
import org.w3c.dom.DOMImplementationList;
import org.w3c.dom.DOMImplementation;
import java.util.Vector;
${definition}"
      associated_elems
	class_ref 662658 // DOMXSImplementationSourceImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001, 2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457218 "LCount"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_elems
	class_ref 662786 // LCount
      end
      comment "Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.


Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457474 "NodeIteratorImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;
import org.w3c.dom.traversal.NodeIterator;
${definition}"
      associated_elems
	class_ref 662914 // NodeIteratorImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457602 "NodeListCache"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_elems
	class_ref 649730 // NodeListCache
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2001,2002,2004,2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 457986 "PSVIAttrNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import com.sun.org.apache.xerces.internal.xs.AttributePSVI;
import com.sun.org.apache.xerces.internal.xs.*;
${definition}"
      associated_elems
	class_ref 663042 // PSVIAttrNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 458114 "PSVIDocumentImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.UserDataHandler;
import org.w3c.dom.*;
${definition}"
      associated_elems
	class_ref 664066 // PSVIDocumentImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 458242 "PSVIDOMImplementationImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
${definition}"
      associated_elems
	class_ref 664194 // PSVIDOMImplementationImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 458498 "PSVIElementNSImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import com.sun.org.apache.xerces.internal.xs.ElementPSVI;
import com.sun.org.apache.xerces.internal.xs.*;
${definition}"
      associated_elems
	class_ref 664322 // PSVIElementNSImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 2002-2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 458754 "RangeExceptionImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.ranges.RangeException;
${definition}"
      associated_elems
	class_ref 664962 // RangeExceptionImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 459010 "RangeImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.util.Vector;
import org.w3c.dom.CharacterData;
import org.w3c.dom.DOMException;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Node;
import org.w3c.dom.ranges.Range;
import org.w3c.dom.ranges.RangeException;
${definition}"
      associated_elems
	class_ref 665218 // RangeImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2005 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 459266 "TreeWalkerImpl"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;
import org.w3c.dom.traversal.TreeWalker;
${definition}"
      associated_elems
	class_ref 665346 // TreeWalkerImpl
      end
      comment "Copyright (c) 2007, 2017, Oracle and/or its affiliates. All rights reserved.
ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.


Copyright 1999-2002,2004 The Apache Software Foundation.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 168322 // events
end
