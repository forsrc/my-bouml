class StringValueHandler
!!!4080898.java!!!	characters(inout ch : char [[]], in off : int, in len : int) : void
        if (_nestedLevel > 0)
            return;

        if (_str != null) {
            _buffer.append(_str);
            _str = null;
        }
        _buffer.append(ch, off, len);
!!!4081026.java!!!	getValue() : String
        if (_buffer.length() != 0) {
            String result = _buffer.toString();
            _buffer.setLength(0);
            return result;
        }
        else {
            String result = _str;
            _str = null;
            return (result != null) ? result : EMPTY_STR;
        }
!!!4081154.java!!!	characters(inout characters : String) : void
        if (_nestedLevel > 0)
            return;

        if (_str == null && _buffer.length() == 0) {
            _str = characters;
        }
        else {
            if (_str != null) {
                _buffer.append(_str);
                _str = null;
            }

            _buffer.append(characters);
        }
!!!4081282.java!!!	startElement(inout qname : String) : void
        _nestedLevel++;
!!!4081410.java!!!	endElement(inout qname : String) : void
        _nestedLevel--;
!!!4081538.java!!!	setEscaping(inout bool : boolean) : boolean
        boolean oldEscaping = m_escaping;
        m_escaping = bool;

        return bool;
!!!4081666.java!!!	getValueOfPI() : String
        final String value = getValue();

        if (value.indexOf("?>") > 0) {
            final int n = value.length();
            final StringBuilder valueOfPI = new StringBuilder();

            for (int i = 0; i < n;) {
                final char ch = value.charAt(i++);
                if (ch == '?' && value.charAt(i) == '>') {
                    valueOfPI.append("? >"); i++;
                }
                else {
                    valueOfPI.append(ch);
                }
            }
            return valueOfPI.toString();
        }
        return value;
