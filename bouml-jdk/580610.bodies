class SyntheticRepository
!!!3621378.java!!!	SyntheticRepository(inout path : ClassPath)
    _path = path;
!!!3621506.java!!!	getInstance() : SyntheticRepository
    return getInstance(ClassPath.SYSTEM_CLASS_PATH);
!!!3621634.java!!!	getInstance(inout classPath : ClassPath) : SyntheticRepository
    SyntheticRepository rep = (SyntheticRepository)_instances.get(classPath);

    if(rep == null) {
      rep = new SyntheticRepository(classPath);
      _instances.put(classPath, rep);
    }

    return rep;
!!!3621762.java!!!	storeClass(inout clazz : JavaClass) : void
    _loadedClasses.put(clazz.getClassName(), clazz);
    clazz.setRepository(this);
!!!3621890.java!!!	removeClass(inout clazz : JavaClass) : void
    _loadedClasses.remove(clazz.getClassName());
!!!3622018.java!!!	findClass(inout className : String) : JavaClass
    return (JavaClass)_loadedClasses.get(className);
!!!3622146.java!!!	loadClass(inout className : String) : JavaClass
    if(className == null || className.equals("")) {
      throw new IllegalArgumentException("Invalid class name " + className);
    }

    className = className.replace('/', '.'); // Just in case, canonical form

    try {
      return loadClass(_path.getInputStream(className), className);
    } catch(IOException e) {
      throw new ClassNotFoundException("Exception while looking for class " +
                                       className + ": " + e.toString());
    }
!!!3622274.java!!!	loadClass(inout clazz : Class) : JavaClass
    String className = clazz.getName();
    String name      = className;
    int    i         = name.lastIndexOf('.');

    if(i > 0) {
      name = name.substring(i + 1);
    }

    return loadClass(clazz.getResourceAsStream(name + ".class"), className);
!!!3622402.java!!!	loadClass(inout is : InputStream, inout className : String) : JavaClass
    JavaClass clazz = findClass(className);

    if(clazz != null) {
      return clazz;
    }

    try {
      if(is != null) {
        ClassParser parser = new ClassParser(is, className);
        clazz = parser.parse();

        storeClass(clazz);

        return clazz;
      }
    } catch(IOException e) {
      throw new ClassNotFoundException("Exception while looking for class " +
                                       className + ": " + e.toString());
    }

    throw new ClassNotFoundException("SyntheticRepository could not load " +
                                     className);
!!!3622530.java!!!	clear() : void
    _loadedClasses.clear();
