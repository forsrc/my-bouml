class NameServer
!!!1085698.java!!!	main(inout args : String [[]]) : void
        NameServer ns = new NameServer(args);
        ns.run();
!!!1085826.java!!!	NameServer(inout args : String [[]])
        // create the ORB Object
        java.util.Properties props = System.getProperties();
        props.put( ORBConstants.SERVER_ID_PROPERTY, "1000" ) ;
        props.put("org.omg.CORBA.ORBClass",
                  "com.sun.corba.se.impl.orb.ORBImpl");
        orb = (ORB) org.omg.CORBA.ORB.init(args,props);

        // set up the database directory
        String dbDirName = props.getProperty( ORBConstants.DB_DIR_PROPERTY ) +
            props.getProperty("file.separator") + dbName +
            props.getProperty("file.separator");

        dbDir = new File(dbDirName);
        if (!dbDir.exists()) dbDir.mkdir();
!!!1085954.java!!!	run() : void
        try {

            // create the persistent name service
            NameService ns = new NameService(orb, dbDir);

            // add root naming context to initial naming
            NamingContext rootContext = ns.initialNamingContext();
            InitialNameService ins = InitialNameServiceHelper.narrow(
                                     orb.resolve_initial_references(
                                     ORBConstants.INITIAL_NAME_SERVICE_NAME ));
            ins.bind( "NameService", rootContext, true);
            System.out.println(CorbaResourceUtil.getText("pnameserv.success"));

            // wait for invocations
            orb.run();

        } catch (Exception ex) {

            ex.printStackTrace(System.err);
        }
