class RSAKeyValue
!!!5404674.java!!!	RSAKeyValue(inout element : Element, inout BaseURI : String)
        super(element, BaseURI);
!!!5404802.java!!!	RSAKeyValue(inout doc : Document, inout modulus : BigInteger, inout exponent : BigInteger)
        super(doc);

        XMLUtils.addReturnToElement(this.constructionElement);
        this.addBigIntegerElement(modulus, Constants._TAG_MODULUS);
        this.addBigIntegerElement(exponent, Constants._TAG_EXPONENT);
!!!5404930.java!!!	RSAKeyValue(inout doc : Document, inout key : Key)
        super(doc);

        XMLUtils.addReturnToElement(this.constructionElement);

        if (key instanceof java.security.interfaces.RSAPublicKey ) {
            this.addBigIntegerElement(
                ((RSAPublicKey) key).getModulus(), Constants._TAG_MODULUS
            );
            this.addBigIntegerElement(
                ((RSAPublicKey) key).getPublicExponent(), Constants._TAG_EXPONENT
            );
        } else {
            Object exArgs[] = { Constants._TAG_RSAKEYVALUE, key.getClass().getName() };

            throw new IllegalArgumentException(I18n.translate("KeyValue.IllegalArgument", exArgs));
        }
!!!5405058.java!!!	getPublicKey() : PublicKey
        try {
            KeyFactory rsaFactory = KeyFactory.getInstance("RSA");

            RSAPublicKeySpec rsaKeyspec =
                new RSAPublicKeySpec(
                    this.getBigIntegerFromChildElement(
                        Constants._TAG_MODULUS, Constants.SignatureSpecNS
                    ),
                    this.getBigIntegerFromChildElement(
                        Constants._TAG_EXPONENT, Constants.SignatureSpecNS
                    )
                );
            PublicKey pk = rsaFactory.generatePublic(rsaKeyspec);

            return pk;
        } catch (NoSuchAlgorithmException ex) {
            throw new XMLSecurityException("empty", ex);
        } catch (InvalidKeySpecException ex) {
            throw new XMLSecurityException("empty", ex);
        }
!!!5405186.java!!!	getBaseLocalName() : String
        return Constants._TAG_RSAKEYVALUE;
