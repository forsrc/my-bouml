class TableAccessibleContext
!!!11727746.java!!!	TableAccessibleContext(inout elementInfo : AccessibleHTML::ElementInfo)
                super(elementInfo);
!!!11727874.java!!!	getAccessibleName() : String
                // return the role of the object
                return getAccessibleRole().toString();
!!!11728002.java!!!	getAccessibleDescription() : String
                return editor.getContentType();
!!!11728130.java!!!	getAccessibleRole() : AccessibleRole
                return AccessibleRole.TABLE;
!!!11728258.java!!!	getAccessibleIndexInParent() : int
                return elementInfo.getIndexInParent();
!!!11728386.java!!!	getAccessibleChildrenCount() : int
                return ((TableElementInfo)elementInfo).getRowCount() *
                    ((TableElementInfo)elementInfo).getColumnCount();
!!!11728514.java!!!	getAccessibleChild(in i : int) : Accessible
                int rowCount = ((TableElementInfo)elementInfo).getRowCount();
                int columnCount = ((TableElementInfo)elementInfo).getColumnCount();
                int r = i / rowCount;
                int c = i % columnCount;
                if (r < 0 || r >= rowCount || c < 0 || c >= columnCount) {
                    return null;
                } else {
                    return getAccessibleAt(r, c);
                }
!!!11728642.java!!!	getAccessibleTable() : AccessibleTable
                return this;
!!!11728770.java!!!	getAccessibleCaption() : Accessible
                ElementInfo captionInfo = getCaptionInfo();
                if (captionInfo instanceof Accessible) {
                    return (Accessible)caption;
                } else {
                    return null;
                }
!!!11729026.java!!!	getAccessibleSummary() : Accessible
                return null;
!!!11729282.java!!!	getAccessibleRowCount() : int
                return ((TableElementInfo)elementInfo).getRowCount();
!!!11729410.java!!!	getAccessibleColumnCount() : int
                return ((TableElementInfo)elementInfo).getColumnCount();
!!!11729538.java!!!	getAccessibleAt(in r : int, in c : int) : Accessible
                TableCellElementInfo cellInfo = getCell(r, c);
                if (cellInfo != null) {
                    return cellInfo.getAccessible();
                } else {
                    return null;
                }
!!!11729666.java!!!	getAccessibleRowExtentAt(in r : int, in c : int) : int
                return ((TableElementInfo)elementInfo).getRowExtentAt(r, c);
!!!11729794.java!!!	getAccessibleColumnExtentAt(in r : int, in c : int) : int
                return ((TableElementInfo)elementInfo).getColumnExtentAt(r, c);
!!!11729922.java!!!	getAccessibleRowHeader() : AccessibleTable
                return rowHeadersTable;
!!!11730178.java!!!	getAccessibleColumnHeader() : AccessibleTable
                return null;
!!!11730434.java!!!	getAccessibleRowDescription(in r : int) : Accessible
                return null;
!!!11730690.java!!!	getAccessibleColumnDescription(in c : int) : Accessible
                return null;
!!!11730946.java!!!	isAccessibleSelected(in r : int, in c : int) : boolean
                if (validateIfNecessary()) {
                    if (r < 0 || r >= getAccessibleRowCount() ||
                        c < 0 || c >= getAccessibleColumnCount()) {
                        return false;
                    }
                    TableCellElementInfo cell = getCell(r, c);
                    if (cell != null) {
                        Element elem = cell.getElement();
                        int start = elem.getStartOffset();
                        int end = elem.getEndOffset();
                        return start >= editor.getSelectionStart() &&
                            end <= editor.getSelectionEnd();
                    }
                }
                return false;
!!!11731074.java!!!	isAccessibleRowSelected(in r : int) : boolean
                if (validateIfNecessary()) {
                    if (r < 0 || r >= getAccessibleRowCount()) {
                        return false;
                    }
                    int nColumns = getAccessibleColumnCount();

                    TableCellElementInfo startCell = getCell(r, 0);
                    if (startCell == null) {
                        return false;
                    }
                    int start = startCell.getElement().getStartOffset();

                    TableCellElementInfo endCell = getCell(r, nColumns-1);
                    if (endCell == null) {
                        return false;
                    }
                    int end = endCell.getElement().getEndOffset();

                    return start >= editor.getSelectionStart() &&
                        end <= editor.getSelectionEnd();
                }
                return false;
!!!11731202.java!!!	isAccessibleColumnSelected(in c : int) : boolean
                if (validateIfNecessary()) {
                    if (c < 0 || c >= getAccessibleColumnCount()) {
                        return false;
                    }
                    int nRows = getAccessibleRowCount();

                    TableCellElementInfo startCell = getCell(0, c);
                    if (startCell == null) {
                        return false;
                    }
                    int start = startCell.getElement().getStartOffset();

                    TableCellElementInfo endCell = getCell(nRows-1, c);
                    if (endCell == null) {
                        return false;
                    }
                    int end = endCell.getElement().getEndOffset();
                    return start >= editor.getSelectionStart() &&
                        end <= editor.getSelectionEnd();
                }
                return false;
!!!11731330.java!!!	getSelectedAccessibleRows() : int
                if (validateIfNecessary()) {
                    int nRows = getAccessibleRowCount();
                    Vector<Integer> vec = new Vector<Integer>();

                    for (int i = 0; i < nRows; i++) {
                        if (isAccessibleRowSelected(i)) {
                            vec.addElement(Integer.valueOf(i));
                        }
                    }
                    int retval[] = new int[vec.size()];
                    for (int i = 0; i < retval.length; i++) {
                        retval[i] = vec.elementAt(i).intValue();
                    }
                    return retval;
                }
                return new int[0];
!!!11731458.java!!!	getSelectedAccessibleColumns() : int
                if (validateIfNecessary()) {
                    int nColumns = getAccessibleRowCount();
                    Vector<Integer> vec = new Vector<Integer>();

                    for (int i = 0; i < nColumns; i++) {
                        if (isAccessibleColumnSelected(i)) {
                            vec.addElement(Integer.valueOf(i));
                        }
                    }
                    int retval[] = new int[vec.size()];
                    for (int i = 0; i < retval.length; i++) {
                        retval[i] = vec.elementAt(i).intValue();
                    }
                    return retval;
                }
                return new int[0];
!!!11731586.java!!!	getAccessibleRow(in index : int) : int
                if (validateIfNecessary()) {
                    int numCells = getAccessibleColumnCount() *
                        getAccessibleRowCount();
                    if (index >= numCells) {
                        return -1;
                    } else {
                        return index / getAccessibleColumnCount();
                    }
                }
                return -1;
!!!11731714.java!!!	getAccessibleColumn(in index : int) : int
                if (validateIfNecessary()) {
                    int numCells = getAccessibleColumnCount() *
                        getAccessibleRowCount();
                    if (index >= numCells) {
                        return -1;
                    } else {
                        return index % getAccessibleColumnCount();
                    }
                }
                return -1;
!!!11731842.java!!!	getAccessibleIndex(in r : int, in c : int) : int
                if (validateIfNecessary()) {
                    if (r >= getAccessibleRowCount() ||
                        c >= getAccessibleColumnCount()) {
                        return -1;
                    } else {
                        return r * getAccessibleColumnCount() + c;
                    }
                }
                return -1;
!!!11731970.java!!!	getAccessibleRowHeader(in r : int) : String
                if (validateIfNecessary()) {
                    TableCellElementInfo cellInfo = getCell(r, 0);
                    if (cellInfo.isHeaderCell()) {
                        View v = cellInfo.getView();
                        if (v != null && model != null) {
                            try {
                                return model.getText(v.getStartOffset(),
                                                     v.getEndOffset() -
                                                     v.getStartOffset());
                            } catch (BadLocationException e) {
                                return null;
                            }
                        }
                    }
                }
                return null;
!!!11732098.java!!!	getAccessibleColumnHeader(in c : int) : String
                if (validateIfNecessary()) {
                    TableCellElementInfo cellInfo = getCell(0, c);
                    if (cellInfo.isHeaderCell()) {
                        View v = cellInfo.getView();
                        if (v != null && model != null) {
                            try {
                                return model.getText(v.getStartOffset(),
                                                     v.getEndOffset() -
                                                     v.getStartOffset());
                            } catch (BadLocationException e) {
                                return null;
                            }
                        }
                    }
                }
                return null;
!!!11732226.java!!!	addRowHeader(inout cellInfo : AccessibleHTML::TableElementInfo::TableCellElementInfo, in rowNumber : int) : void
                if (rowHeadersTable == null) {
                    rowHeadersTable = new AccessibleHeadersTable();
                }
                rowHeadersTable.addHeader(cellInfo, rowNumber);
