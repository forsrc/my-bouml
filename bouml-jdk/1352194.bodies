class InternalFrameTitlePaneCloseButtonPainter
!!!11262210.java!!!	InternalFrameTitlePaneCloseButtonPainter(inout ctx : AbstractRegionPainter::PaintContext, in state : int)
        super();
        this.state = state;
        this.ctx = ctx;
!!!11262338.java!!!	doPaint(inout g : Graphics2D, inout c : JComponent, in width : int, in height : int, inout extendedCacheKeys : Object [[]]) : void
        //populate componentColors array with colors calculated in getExtendedCacheKeys call
        componentColors = extendedCacheKeys;
        //generate this entire method. Each state/bg/fg/border combo that has
        //been painted gets its own KEY and paint method.
        switch(state) {
            case BACKGROUND_DISABLED: paintBackgroundDisabled(g); break;
            case BACKGROUND_ENABLED: paintBackgroundEnabled(g); break;
            case BACKGROUND_MOUSEOVER: paintBackgroundMouseOver(g); break;
            case BACKGROUND_PRESSED: paintBackgroundPressed(g); break;
            case BACKGROUND_ENABLED_WINDOWNOTFOCUSED: paintBackgroundEnabledAndWindowNotFocused(g); break;
            case BACKGROUND_MOUSEOVER_WINDOWNOTFOCUSED: paintBackgroundMouseOverAndWindowNotFocused(g); break;
            case BACKGROUND_PRESSED_WINDOWNOTFOCUSED: paintBackgroundPressedAndWindowNotFocused(g); break;

        }
!!!11262466.java!!!	getPaintContext() : AbstractRegionPainter::PaintContext
        return ctx;
!!!11262594.java!!!	paintBackgroundDisabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient1(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color3);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color4);
        g.fill(path);

!!!11262722.java!!!	paintBackgroundEnabled(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color5);
        g.fill(roundRect);
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient2(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient3(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color12);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color13);
        g.fill(path);

!!!11262850.java!!!	paintBackgroundMouseOver(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color5);
        g.fill(roundRect);
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect4();
        g.setPaint(decodeGradient5(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color20);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color13);
        g.fill(path);

!!!11262978.java!!!	paintBackgroundPressed(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color21);
        g.fill(roundRect);
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient6(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color28);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color13);
        g.fill(path);

!!!11263106.java!!!	paintBackgroundEnabledAndWindowNotFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient8(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient9(roundRect));
        g.fill(roundRect);
        path = decodePath2();
        g.setPaint(color34);
        g.fill(path);

!!!11263234.java!!!	paintBackgroundMouseOverAndWindowNotFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color5);
        g.fill(roundRect);
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient4(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect4();
        g.setPaint(decodeGradient5(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color20);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color13);
        g.fill(path);

!!!11263362.java!!!	paintBackgroundPressedAndWindowNotFocused(inout g : Graphics2D) : void
        roundRect = decodeRoundRect2();
        g.setPaint(color21);
        g.fill(roundRect);
        roundRect = decodeRoundRect1();
        g.setPaint(decodeGradient6(roundRect));
        g.fill(roundRect);
        roundRect = decodeRoundRect3();
        g.setPaint(decodeGradient7(roundRect));
        g.fill(roundRect);
        path = decodePath1();
        g.setPaint(color28);
        g.fill(path);
        path = decodePath2();
        g.setPaint(color13);
        g.fill(path);

!!!11263490.java!!!	decodeRoundRect1() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.0f), //x
                               decodeY(1.0f), //y
                               decodeX(2.0f) - decodeX(1.0f), //width
                               decodeY(1.9444444f) - decodeY(1.0f), //height
                               8.6f, 8.6f); //rounding
        return roundRect;
!!!11263618.java!!!	decodePath1() : Path2D
        path.reset();
        path.moveTo(decodeX(1.25f), decodeY(1.7373737f));
        path.lineTo(decodeX(1.3002392f), decodeY(1.794192f));
        path.lineTo(decodeX(1.5047847f), decodeY(1.5909091f));
        path.lineTo(decodeX(1.6842105f), decodeY(1.7954545f));
        path.lineTo(decodeX(1.7595694f), decodeY(1.719697f));
        path.lineTo(decodeX(1.5956938f), decodeY(1.5239899f));
        path.lineTo(decodeX(1.7535884f), decodeY(1.3409091f));
        path.lineTo(decodeX(1.6830144f), decodeY(1.2537879f));
        path.lineTo(decodeX(1.5083733f), decodeY(1.4406565f));
        path.lineTo(decodeX(1.3301436f), decodeY(1.2563131f));
        path.lineTo(decodeX(1.257177f), decodeY(1.3320707f));
        path.lineTo(decodeX(1.4270334f), decodeY(1.5252526f));
        path.lineTo(decodeX(1.25f), decodeY(1.7373737f));
        path.closePath();
        return path;
!!!11263746.java!!!	decodePath2() : Path2D
        path.reset();
        path.moveTo(decodeX(1.257177f), decodeY(1.2828283f));
        path.lineTo(decodeX(1.3217703f), decodeY(1.2133838f));
        path.lineTo(decodeX(1.5f), decodeY(1.4040405f));
        path.lineTo(decodeX(1.673445f), decodeY(1.2108586f));
        path.lineTo(decodeX(1.7440192f), decodeY(1.2853535f));
        path.lineTo(decodeX(1.5669856f), decodeY(1.4709597f));
        path.lineTo(decodeX(1.7488039f), decodeY(1.6527778f));
        path.lineTo(decodeX(1.673445f), decodeY(1.7398989f));
        path.lineTo(decodeX(1.4988039f), decodeY(1.5416667f));
        path.lineTo(decodeX(1.3313397f), decodeY(1.7424242f));
        path.lineTo(decodeX(1.2523923f), decodeY(1.6565657f));
        path.lineTo(decodeX(1.4366028f), decodeY(1.4722222f));
        path.lineTo(decodeX(1.257177f), decodeY(1.2828283f));
        path.closePath();
        return path;
!!!11263874.java!!!	decodeRoundRect2() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.0f), //x
                               decodeY(1.6111112f), //y
                               decodeX(2.0f) - decodeX(1.0f), //width
                               decodeY(2.0f) - decodeY(1.6111112f), //height
                               6.0f, 6.0f); //rounding
        return roundRect;
!!!11264002.java!!!	decodeRoundRect3() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.0526316f), //x
                               decodeY(1.0530303f), //y
                               decodeX(1.9473684f) - decodeX(1.0526316f), //width
                               decodeY(1.8863636f) - decodeY(1.0530303f), //height
                               6.75f, 6.75f); //rounding
        return roundRect;
!!!11264130.java!!!	decodeRoundRect4() : RoundRectangle2D
        roundRect.setRoundRect(decodeX(1.0526316f), //x
                               decodeY(1.0517677f), //y
                               decodeX(1.9473684f) - decodeX(1.0526316f), //width
                               decodeY(1.8851011f) - decodeY(1.0517677f), //height
                               6.75f, 6.75f); //rounding
        return roundRect;
!!!11264258.java!!!	decodeGradient1(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.24868421f * w) + x, (0.0014705883f * h) + y, (0.24868421f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color1,
                            decodeColor(color1,color2,0.5f),
                            color2});
!!!11264386.java!!!	decodeGradient2(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.24868421f * w) + x, (0.0014705883f * h) + y, (0.24868421f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color6,
                            decodeColor(color6,color7,0.5f),
                            color7});
!!!11264514.java!!!	decodeGradient3(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25441176f * w) + x, (1.0016667f * h) + y,
                new float[] { 0.0f,0.26988637f,0.53977275f,0.5951705f,0.6505682f,0.8252841f,1.0f },
                new Color[] { color8,
                            decodeColor(color8,color9,0.5f),
                            color9,
                            decodeColor(color9,color10,0.5f),
                            color10,
                            decodeColor(color10,color11,0.5f),
                            color11});
!!!11264642.java!!!	decodeGradient4(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.24868421f * w) + x, (0.0014705883f * h) + y, (0.24868421f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color14,
                            decodeColor(color14,color15,0.5f),
                            color15});
!!!11264770.java!!!	decodeGradient5(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25441176f * w) + x, (1.0016667f * h) + y,
                new float[] { 0.0f,0.26988637f,0.53977275f,0.5951705f,0.6505682f,0.81480503f,0.97904193f },
                new Color[] { color16,
                            decodeColor(color16,color17,0.5f),
                            color17,
                            decodeColor(color17,color18,0.5f),
                            color18,
                            decodeColor(color18,color19,0.5f),
                            color19});
!!!11264898.java!!!	decodeGradient6(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.24868421f * w) + x, (0.0014705883f * h) + y, (0.24868421f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color22,
                            decodeColor(color22,color23,0.5f),
                            color23});
!!!11265026.java!!!	decodeGradient7(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25441176f * w) + x, (1.0016667f * h) + y,
                new float[] { 0.0f,0.26988637f,0.53977275f,0.5951705f,0.6505682f,0.81630206f,0.98203593f },
                new Color[] { color24,
                            decodeColor(color24,color25,0.5f),
                            color25,
                            decodeColor(color25,color26,0.5f),
                            color26,
                            decodeColor(color26,color27,0.5f),
                            color27});
!!!11265154.java!!!	decodeGradient8(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.24868421f * w) + x, (0.0014705883f * h) + y, (0.24868421f * w) + x, (1.0f * h) + y,
                new float[] { 0.0f,0.5f,1.0f },
                new Color[] { color29,
                            decodeColor(color29,color30,0.5f),
                            color30});
!!!11265282.java!!!	decodeGradient9(inout s : Shape) : Paint
        Rectangle2D bounds = s.getBounds2D();
        float x = (float)bounds.getX();
        float y = (float)bounds.getY();
        float w = (float)bounds.getWidth();
        float h = (float)bounds.getHeight();
        return decodeGradient((0.25f * w) + x, (0.0f * h) + y, (0.25441176f * w) + x, (1.0016667f * h) + y,
                new float[] { 0.0f,0.24101797f,0.48203593f,0.5838324f,0.6856288f,0.8428144f,1.0f },
                new Color[] { color31,
                            decodeColor(color31,color32,0.5f),
                            color32,
                            decodeColor(color32,color32,0.5f),
                            color32,
                            decodeColor(color32,color33,0.5f),
                            color33});
